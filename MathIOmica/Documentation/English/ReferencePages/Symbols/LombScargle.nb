(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    243992,       5826]
NotebookOptionsPosition[    220835,       5356]
NotebookOutlinePosition[    223346,       5419]
CellTagsIndexPosition[    223222,       5413]
WindowTitle->LombScargle
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["MATH I OMICA PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MathIOmica Tutorial\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaTutorial"], "\<\"MathIOmica \
Dynamic Transcriptome\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Autocorrelation\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Autocorrelation"], "\<\"InverseAutocovariance\"\
\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/InverseAutocovariance"], \
"\<\"TimeSeriesClassification\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesClassification"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MathIOmica Guide\"\>":>
       Documentation`HelpLookup["paclet:MathIOmica/guide/MathIOmicaGuide"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MathIOmica/ref/LombScargle\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["MathIOmica/ref/LombScargle"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/MathIOmica/ref/\
LombScargle.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$45889], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "MathIOmica/ref/LombScargle", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell[TextData[{
 Cell["LombScargle", "ObjectName"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"LombScargle", "[", 
       RowBox[{
        StyleBox["data", "TI"], ",", " ", 
        StyleBox["setTimes", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]calculates the Lomb-Scargle power spectrum for time \
series ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " that runs over specified ",
     Cell[BoxData[
      StyleBox["setTimes", "TI"]], "InlineFormula"],
     "."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{None}}}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    TemplateBox[{6},
     "Spacer1"]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1344929542],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"LombScargle", "[", 
   RowBox[{
    StyleBox["data", "TI"], ",", " ", 
    StyleBox["setTimes", "TI"]}], "]"}]], "InlineFormula"],
 " calculates a Lomb-Scargle based power spectrum of a dataset over a set of \
specified times (with possibly unevenly sampling). It takes as input:"
}], "Notes",
 CellID->7572516],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    StyleBox["data", "TI"], Cell[TextData[{
     "Time series (data as a list; list may be the value of a single key in \
an association). The series may include Missing data points. Data may be \
entered as list of N signal intensities corresponding one-to-one to the N \
setTimes with Missing inserted appropriately if the data is absent, ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["X", "1"], "=", 
         RowBox[{"X", 
          RowBox[{"(", 
           SubscriptBox["t", "1"], ")"}]}]}], ",", 
        RowBox[{
         SubscriptBox["X", "2"], "=", 
         RowBox[{"X", 
          RowBox[{"(", 
           SubscriptBox["t", "2"], ")"}]}]}], ",", "...", ",", 
        RowBox[{
         SubscriptBox["X", "N"], "=", 
         RowBox[{"X", 
          RowBox[{"(", 
           SubscriptBox["t", "N"], ")"}]}]}]}], "}"}]]],
     ". Alternatively, the data may be a list of pairs of values {{",
     Cell[BoxData[
      SubscriptBox["t", "1"]]],
     ",",
     Cell[BoxData[
      SubscriptBox["X", "1"]]],
     "},{",
     Cell[BoxData[
      SubscriptBox["t", "2"]]],
     ",",
     Cell[BoxData[
      SubscriptBox["X", "2"]]],
     "},. ..,",
     Cell[BoxData[
      RowBox[{"{", 
       SubscriptBox["t", "N"]}]]],
     ",",
     Cell[BoxData[
      SubscriptBox["X", "N"]]],
     "}} for only existing measurements."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    StyleBox["setTimes", "TI"], Cell[TextData[{
     "A complete set of all possible N times during which data could have \
been collected in the window of the experiment, including times for which no \
data was collected,",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["t", "1"], ",", 
        SubscriptBox["t", "2"], ",", "...", ",", 
        SubscriptBox["t", "N"]}], "}"}]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "2ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}},
 GridBoxDividers->{"Rows" -> {{True, True, True}}}},
 CellID->1390286253],

Cell[TextData[{
 "LombScargle returns a list of {frequency list, intensity list} of the \
corresponding n frequencies (typically ",
 Cell[BoxData[
  RowBox[{"n", "=", 
   RowBox[{"Floor", "[", 
    RowBox[{"N", "/", "2"}], "]"}]}]], "InlineFormula"],
 " as discussed below) and intensities."
}], "Notes",
 CellID->1415453320],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], "FrequenciesOnly", "False", Cell[TextData[{
     "Whether to return only the computation frequencies. An association of \
frequencies \"f\" ordered from low to high by index i is returned in the form \
",
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<f1\>\"", "\[Rule]", " ", 
         SubscriptBox["frequency", "1"]}], ",", 
        RowBox[{"\"\<f2\>\"", "\[Rule]", " ", 
         SubscriptBox["frequency", "2"]}], ",", " ", "...", ",", 
        RowBox[{"\"\<fi\>\"", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["frequency", 
            RowBox[{"i", ",", "...", ","}]], "\"\<fn\>\""}], "\[Rule]", " ", 
          SubscriptBox["frequency", "n"]}]}]}], "|>"}]], "InlineFormula"]
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], "NormalizeIntensities", "False", Cell[
    "Whether the intensities list should be normalized or not.", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["OversamplingRate",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/OversamplingRate"], "1", Cell["\<\
Rate at which to oversample the time series using zero-padding.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], "PairReturn", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Whether data should be returned as {frequency list,intensity list} or as \
pairs: {{frequency1,intensity1}, {frequency2, \
intensity2},...,{frequencyN,intensityN}.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["UpperFrequencyFactor",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/UpperFrequencyFactor"], "1", 
    Cell["\<\
Value \[GreaterEqual] 1,  by which to scale the upper Nyquist cutoff \
frequency and increase spectral resolution. \
\>", "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "Rows" -> {None, None, None, None, {None}}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True, True, True}}}},
 CellID->1072447982],

Cell[TextData[{
 "The data has to be in the order that the set times appear. In general the \
data are list of time series signal values, e.g. ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["X", "1"], "=", 
     RowBox[{"X", 
      RowBox[{"(", 
       SubscriptBox["t", "1"], ")"}]}]}], ",", 
    RowBox[{
     SubscriptBox["X", "2"], "=", 
     RowBox[{"X", 
      RowBox[{"(", 
       SubscriptBox["t", "2"], ")"}]}]}], ",", "...", ",", 
    RowBox[{
     SubscriptBox["X", "N"], "=", 
     RowBox[{"X", 
      RowBox[{"(", 
       SubscriptBox["t", "N"], ")"}]}]}]}], "}"}]]],
 "over a list of ordered sampling times, where ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["t", "1"], "<", 
     SubscriptBox["t", "2"], "<"}], "..."}], "<", 
   SubscriptBox["t", "N"]}]], "InlineFormula"],
 ". Note that ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["t", "1"], ",", 
     SubscriptBox["t", "2"], ",", "...", ",", 
     SubscriptBox["t", "N"]}], "}"}], " "}]], "InlineFormula"],
 "is necessarily a subset of the input ",
 Cell[BoxData[
  StyleBox["setTimes", "TI"]], "InlineFormula"],
 ", since any time point during which data was collected is necessarily a \
possible time point during which it could have been collected."
}], "Notes",
 CellID->383809252],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["Background", "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 WholeCellGroupOpener->True,
 CellMargins->{{48.3828125, 4.}, {0., 16.}},
 CellID->790815685],

Cell[TextData[{
 "In order to calculate the periodogram spectra, first a frequency-dependent \
phase angle \[Theta](",
 StyleBox["f",
  FontSlant->"Italic"],
 ") = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"ArcTan", "[", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[Sum]", " ", 
        RowBox[{"Sin", "(", 
         RowBox[{"4", "\[Pi]", " ", "f", " ", 
          SubscriptBox["t", "i"]}], ")"}], " "}], 
       RowBox[{"\[Sum]", " ", 
        RowBox[{"Cos", "(", 
         RowBox[{"4", "\[Pi]", " ", "f", " ", 
          SubscriptBox["t", "i"]}], ")"}]}]], ")"}], "]"}]}], 
   TraditionalForm]]],
 " is calculated where the sum is over ",
 StyleBox["i = 1, 2, 3, ..., N",
  FontSlant->"Italic"],
 " time points.\nWith \[Theta](",
 StyleBox["f",
  FontSlant->"Italic"],
 "),  the periodogram ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "x"], TraditionalForm]]],
 "(",
 StyleBox["f",
  FontSlant->"Italic"],
 ") = ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      SubscriptBox["\[Sigma]", "x"], "2"]}]], TraditionalForm]]],
 "{ ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SuperscriptBox[
     RowBox[{"[", 
      RowBox[{"\[Sum]", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "(", 
           SubscriptBox["t", "i"], ")"}], " ", "-", " ", 
          OverscriptBox["x", "_"]}], ")"}], " ", 
        RowBox[{"Cos", "(", 
         RowBox[{
          RowBox[{"2", " ", "\[Pi]", " ", "f", " ", 
           SubscriptBox["t", "i"]}], " ", "-", " ", 
          RowBox[{"\[Theta]", "(", "f", ")"}]}], ")"}]}]}], "]"}], "2"], 
    RowBox[{"\[Sum]", " ", 
     RowBox[{
      SuperscriptBox["Cos", "2"], "(", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]", " ", "f", " ", 
        SubscriptBox["t", "i"]}], " ", "-", " ", 
       RowBox[{"\[Theta]", "(", "f", ")"}]}], ")"}]}]], TraditionalForm]]],
 " + ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SuperscriptBox[
     RowBox[{"[", 
      RowBox[{"\[Sum]", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "(", 
           SubscriptBox["t", "i"], ")"}], " ", "-", 
          OverscriptBox["x", "_"]}], ")"}], 
        RowBox[{"Sin", "(", 
         RowBox[{
          RowBox[{"2", " ", "\[Pi]", " ", "f", " ", 
           SubscriptBox["t", "i"]}], " ", "-", " ", 
          RowBox[{"\[Theta]", "(", "f", ")"}]}], ")"}]}]}], "]"}], "2"], 
    RowBox[{"\[Sum]", " ", 
     RowBox[{
      SuperscriptBox["Sin", "2"], "(", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]", " ", "f", " ", 
        SubscriptBox["t", "i"]}], " ", "-", " ", 
       RowBox[{"\[Theta]", "(", "f", ")"}]}], ")"}]}]], TraditionalForm]]],
 "} where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Sigma]", "x"], "2"], " ", "is", " ", "the", " ", 
     "variance", " ", "of", " ", "the", " ", "time", " ", "series"}], ",", 
    " ", "and", " "}], TraditionalForm]]],
 "again, sums are over the ",
 StyleBox["i = 1, 2, 3, ..., N",
  FontSlant->"Italic"],
 " time points. Note the centering the data by subtracting off the mean ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "_"], TraditionalForm]]],
 " of the time series. The complete time window of the experiment is defined \
by the range of ",
 Cell[BoxData[
  RowBox[{"{", 
   SubscriptBox["t", "complete"], "}"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["t", "window"], "=", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{"{", 
      SubscriptBox["t", "complete"], "}"}], "]"}], "-", 
    RowBox[{"Min", "[", 
     RowBox[{"{", 
      SubscriptBox["t", "complete"], "}"}]}]}]}]], "InlineFormula"],
 "]. From this time window, the Nyquist frequency is defined to be ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["f", "Nyq"], "="}]], "InlineFormula"],
 Cell[BoxData[
  RowBox[{
   FractionBox["N", "2"], 
   FractionBox["N", 
    RowBox[{"N", "-", "1"}]], 
   FractionBox["1", 
    SubscriptBox["t", "window"]]}]], "InlineFormula"],
 ", and a given ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["UpperFrequencyFactor"]], 
    "paclet:MathIOmica/ref/UpperFrequencyFactor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " \[GreaterEqual] 1 sets the cutoff frequency ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["f", "cutoff"], " "}]], "InlineFormula"],
 "for  calculation by ",
 Cell[BoxData[
  FractionBox[
   SubscriptBox["f", "cutoff"], 
   SubscriptBox["f", "Nyq"]]], "InlineFormula"],
 " = ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["UpperFrequencyFactor"]], 
    "paclet:MathIOmica/ref/UpperFrequencyFactor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". "
}], "Notes",
 CellID->192747134],

Cell[TextData[{
 "The frequency grid sampled when calculating the Lomb-Scargle power spectrum \
is ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["f", "0"], ",", " ", 
    RowBox[{
     SubscriptBox["f", "1"], "=", 
     RowBox[{
      SubscriptBox["f", "o"], "+", "\[CapitalDelta]f"}]}], ",", 
    RowBox[{
     SubscriptBox["f", "2"], "=", 
     RowBox[{
      SubscriptBox["f", "0"], "+", 
      RowBox[{"2", "\[CapitalDelta]f"}]}]}], ",", "...", ",", 
    SubscriptBox["f", "cutoff"]}], "}"}]], "InlineFormula"],
 ", where ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["f", "0"], "=", 
    RowBox[{
     FractionBox["N", 
      RowBox[{"N", "-", "1"}]], " ", 
     FractionBox["1", 
      SubscriptBox["t", "window"]]}]}], ",", " ", 
   RowBox[{
    SubscriptBox["f", "cutoff"], "=", 
    RowBox[{
     FractionBox["N", "2"], "*", 
     SubscriptBox["Scaling", "cutoff"], "*", 
     SubscriptBox["f", "0"]}]}]}]], "InlineFormula"],
 ", and ",
 Cell[BoxData[
  RowBox[{"\[CapitalDelta]f", "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["f", "cutoff"], "-", 
     SubscriptBox["f", "0"]}], 
    RowBox[{"OversamplingRate", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Floor", 
        RowBox[{"(", 
         FractionBox["N", "2"], ")"}]}], "-", "1"}], ")"}]}]]}]], 
  "InlineFormula"],
 ", where ",
 Cell[BoxData[
  RowBox[{"Floor", 
   RowBox[{"(", 
    FractionBox["N", "2"], ")"}]}]], "InlineFormula"],
 "rounds to the lowest integer, and the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OversamplingRate"]], "paclet:MathIOmica/ref/OversamplingRate"},
   
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " controls the frequency mesh size and spectral resolution."
}], "Notes",
 CellID->546799514]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["References", "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 WholeCellGroupOpener->True,
 CellMargins->{{48.3828125, 4.}, {0., 16.}},
 CellID->462926512],

Cell[TextData[{
 "Lomb, N.R, Least-squares frequency analysis of unequally spaced data, \
Astrophysics and Space Science 39 (2) : 447\[Dash]462 (1976). External link: ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["http://dx.doi.org/10.1007/BF00648343."]], 
    "http://dx.doi.org/10.1007/BF00648343"},
   "WebLink",
   BaseStyle->{"Notes"}]]]
}], "Notes",
 CellID->2116251185],

Cell[TextData[{
 "Scargle, J.D., Studies in astronomical time series analysis II - \
Statistical aspects of spectral analysis of unevenly spaced data, \
Astrophysical Journal 263 : 835 (1982). External link:  ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["http://dx.doi.org/10.1086/160554."]], 
    "http://dx.doi.org/10.1086/160554"},
   "WebLink",
   BaseStyle->{"Notes"}]]]
}], "Notes",
 CellID->1079495891]
}, Open  ]],

Cell["", "SectionFooterSpacer"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(10)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->1965427719],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(4)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->350215079],

Cell[CellGroupData[{

Cell[TextData[{
 "Package Dependencies",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1212109268],

Cell["First we load the MathIOmica package.", "ExampleText",
 CellID->191603639],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->2017647728]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "General Example: Noisy Sinusoidal Data",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->215934448],

Cell["We consider the following noisy measurement:", "ExampleText",
 CellID->1448246258],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataLombScargleExample1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"0.1", "*", "2", " ", "\[Pi]", " ", "n"}], " ", "]"}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"0.25", "*", "2", " ", "\[Pi]", " ", "n"}], "]"}], "+", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "200"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1596937693],

Cell[TextData[{
 "The data is pairs of values for the ith point {",
 Cell[BoxData[
  SubscriptBox["t", "i"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "i"]], "InlineFormula"],
 "}. A plot of the data looks like:"
}], "ExampleText",
 CellID->96589381],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "dataLombScargleExample1", "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->664713106],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJw1VgtYzOkan7KqldSKgzbppkhXurrUL9WWLpumy3SZmWammWZUyB6nCw6D
Dklnl4p1touU7RzCcYmy7dEgOZGyukibRIVudDtRlHWeef89zzw9v+f9ft/v
/b/v73u/z0i0lS1RZbFYtZ9////P/I11FXP3z+yqUqIht9W+qeLscFVQGPKC
Y7tLgxVuSqgBhB1MNTqZQet1kHn5xoz59rcIz4NFyoHkisReWr8QspqSZWes
hiiujw77f5tIbvyPsCE6oxLDZ47eIGyMNlWN1AHzJ8Q3RZ/Rm+lklyOEzfAy
cv58S73HhJchS/9tmoXHc8IWePohxF1FpEL5W6IpNWzN47tdFLdGU0LT2Ln0
etKzRUL/bO6d832E7VB8pdbgvc1zwisR3ZLxcTjlFeFViHNYcXw48ANhewwu
HKnuLWL0HVDP08+fcGb0HaF/hrPKLbaW4k4YsyvgT7W8IuyM6/812dM2c5Cw
C4zTp7aqWL0hvBo6rbFlZ9cOk94amFbumPPgpppCidfCsMd1j5/dW4qvg7Wa
e8pvh14S3xX+Cq3W2bzfCbvhRNEPu3ItOggD3QZbnr0zfa/EcuBCpbmjU54a
5e+OlO7WFz1Xf1HuL3fHPrHBLd20cdJbj7jMrjiNXc3EXw/nbOGmevUy2t8D
NZxZq2VuI8T3wFB8uX2A3hvie2L0X2kW0gbKX+6JC09z05/cp3xYXujmJdlU
lY7Q/l4Yeno+aZtLJfG/wUKtBZe77jUS/xv8NdXkpupHWs/yRqN+h4/jVDfF
vXGp+cWfSx2Z+vnATHu3mvw6w/dByRODbMfrz4i/Ad7NWiGLWqn/8g14vmbb
Syszxi++KBktqFpyiqmfL3bf7Uk5+rmwyrgfZNqmLl+zhynuB0OH501C+5fE
94f1z7dNeDse0/7+SNSKP86/d4XiAUiawUluKKP+ywNgMG+ei7dYhfL/Fjxf
F+t9/HaKf4t6UVpyR8o7yj8QU+pOF3dtJ7/JA8HydHXK9+LT/hvhvz67+dxQ
kzKOjdif4uzglzNB6zciZHfj8qrpFuV6xUbMXxE5bTfK6AdhebgpJ080oYwj
CIY3e3cs+p7Wy4Nw2XQqszLpIfGDoPOn0HUeCY8oPzbuLX101r6B8gMb+2Q9
/nrFdH7kbORsGbRn8+n8KNioS/upvkU6TfkHI9t+++Qzu3ekH4ycx+tj/nal
n/IPhv68iBC1wx2kH4yuQS1O/MGPxA+BizRzTv3VbOKHwNZ+58KkCZoX8hDo
P7R0lfeSnxQh+M+6MPlJU8a/obDsP9rsZkX1RigK/OKqt4+1ET8UfUOGTjZJ
9L2KUKR4ama8jmTmRxjObjp4o+/UKOmHoVNd7K1efo34YagvKTy0obqK+GFQ
NJSPhK0op/px8NxcM2Bk5kfS58BCo7rW2JDxIwfG0oHt1x2e0Pdz0Kdjuefp
xBjph2O1brJ2LZvmP8LxSNKiy+aQ/+XheB+i8jZlBvldEY7y4yoBX638RPwI
FGPCXHqF5h8iMH9pXiO/+xPxI8DVzLFhL6L7QBGB2E/504nt5A9WJPJudB8u
dK0jfiR+XbHw5x6T28SPRNZN4+APvGekH4mqYrX1DXepXqwoVOh1nGy3q6D8
o6CovdOva5xO/ovCgI6v/976AeJHYVZt6ky1XOb+4eJA50mNdg3KD1xMDwTv
H3gwSvpcWAriso5yxyl/Lq6Vn5sb/Wsz8XnYXG/u13OR/AAeWnZ+L1MT03mS
82C/JsRcYDpF+jy80LGwds4kv7L4cLLy/GpBP1M/Pr7cklIzd90XUPL5CLzs
93HSguaHgo+5m1PzzQKZ+yYasNircmbNadL/jO84dZT2FpN+NM5HNVnDg/QU
0dBnB+xUWcL0XwBfI44s9RbNF0MBcnpL2lZ8TX6HAEXDbTn9F2k+CgQQGK89
JsulfskF6DwgKxVPf1DiQgHSnVOWHTsyQ5m/QgBsNV8U70P3Q6cAg9dsPF15
TP2FuBVqVeLDZ/SFSHsRVjfnPtMPIeRFIx0Gm+m8CIS4INhx0pnNUij1hbDc
l2O0dHE36QthHxKfpavJnFch0m+16Qb1E+4UwtfvNHdM53fSF0GroGa0K4P0
DEVQjHllTJy+Sfoi5L1SmPRZPCB9Ea51a1/uWKZK+iKo254unZxF/S8UoabO
sX7W38dIXwQzaz3VE3nUn04Ronx//AvfqJf0YzDvy+rxTXo0bw1jcHXvW1uP
YKofYpB1hS1wUKP5KYiB7BIrL66mjvwdg0Rfj20LtjXS98fAbFwY2KLeRP2O
gejHquU9i6h+nTEQW1aeCvVm9MUI9AqIKdtEfjYUw7QNFV53J+n7xdA74mc3
ZUT9FYgRFvowrPLOb6QvRpYwv3XvP8mfhWKsTRiUtFvR/FSIITB8qrKgr4b0
xUh3KoqoMKL+sSTIWbnYevguvQ8MJeidPaH6wzXqJyQw8taxHU2m94pAAg2D
BEvjDHpPyiXwHxZqN9ZS/QoleBypKMioo/OjkCDqw5DidhrTfwn0wpoHorcz
5y8WPhxtv6i8q1T/WPg22AiOL35N+rGw2dP9+vAr8qcgFs5mLZz8hzQP5bEI
bAw+VzbZQ/2PxRcq452BZxn/x2K6L/BAVyLl1xkL7oltgZohdJ5YUnxX3exd
0TBA+lLInr1cIj1A71tIwfvU+t11T3ovCKQ47h7k7lpN961cirm1ew3ettN9
WCjFkjLuvXv1jP+kWJWpm5w5RfXslIKf2/OP1enUP5YMr5skT/RKGH0ZuuMv
3TEbZ86/DKxckyMHNen+EMjw00buw3F/8otchnCH3qLGw/ep/jJIUw4Vpaoy
81aGhMkK460BndR/GYZ+STZd+4p5T2/CLKGtd/3nefYHSHP62A==
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 200.}, {-2.8446293955997977`, 2.826277182662543}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[2]=",
 CellID->1114120529]
}, Open  ]],

Cell["We obtain a list of periodogram frequencies and intensities:", \
"ExampleText",
 CellID->2114927956],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataLombScarglePeriodogram", "=", 
  RowBox[{"LombScargle", "[", 
   RowBox[{"dataLombScargleExample1", ",", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "200"}], "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[3]:=",
 CellID->328151850],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.005025000000000001`", ",", "0.01007537878787879`", ",", 
     "0.01512575757575758`", ",", "0.02017613636363637`", ",", 
     "0.02522651515151516`", ",", "0.03027689393939395`", ",", 
     "0.035327272727272735`", ",", "0.040377651515151526`", ",", 
     "0.04542803030303032`", ",", "0.05047840909090911`", ",", 
     "0.0555287878787879`", ",", "0.060579166666666684`", ",", 
     "0.06562954545454547`", ",", "0.07067992424242427`", ",", 
     "0.07573030303030305`", ",", "0.08078068181818185`", ",", 
     "0.08583106060606063`", ",", "0.09088143939393942`", ",", 
     "0.09593181818181822`", ",", "0.100982196969697`", ",", 
     "0.1060325757575758`", ",", "0.11108295454545458`", ",", 
     "0.11613333333333337`", ",", "0.12118371212121216`", ",", 
     "0.12623409090909093`", ",", "0.13128446969696975`", ",", 
     "0.13633484848484853`", ",", "0.14138522727272732`", ",", 
     "0.1464356060606061`", ",", "0.15148598484848488`", ",", 
     "0.1565363636363637`", ",", "0.16158674242424248`", ",", 
     "0.16663712121212126`", ",", "0.17168750000000005`", ",", 
     "0.17673787878787883`", ",", "0.18178825757575764`", ",", 
     "0.18683863636363643`", ",", "0.1918890151515152`", ",", 
     "0.196939393939394`", ",", "0.20198977272727278`", ",", 
     "0.2070401515151516`", ",", "0.21209053030303038`", ",", 
     "0.21714090909090916`", ",", "0.22219128787878795`", ",", 
     "0.22724166666666673`", ",", "0.23229204545454551`", ",", 
     "0.23734242424242433`", ",", "0.2423928030303031`", ",", 
     "0.2474431818181819`", ",", "0.25249356060606065`", ",", 
     "0.2575439393939395`", ",", "0.2625943181818183`", ",", 
     "0.26764469696969706`", ",", "0.27269507575757584`", ",", 
     "0.27774545454545463`", ",", "0.2827958333333334`", ",", 
     "0.2878462121212122`", ",", "0.292896590909091`", ",", 
     "0.29794696969696977`", ",", "0.3029973484848486`", ",", 
     "0.3080477272727274`", ",", "0.3130981060606062`", ",", 
     "0.31814848484848496`", ",", "0.32319886363636374`", ",", 
     "0.3282492424242425`", ",", "0.3332996212121213`", ",", 
     "0.3383500000000001`", ",", "0.3434003787878789`", ",", 
     "0.34845075757575766`", ",", "0.35350113636363645`", ",", 
     "0.3585515151515153`", ",", "0.36360189393939407`", ",", 
     "0.36865227272727286`", ",", "0.37370265151515164`", ",", 
     "0.3787530303030304`", ",", "0.3838034090909092`", ",", 
     "0.388853787878788`", ",", "0.3939041666666668`", ",", 
     "0.39895454545454556`", ",", "0.40400492424242435`", ",", 
     "0.4090553030303032`", ",", "0.41410568181818197`", ",", 
     "0.41915606060606075`", ",", "0.42420643939393954`", ",", 
     "0.4292568181818183`", ",", "0.4343071969696971`", ",", 
     "0.4393575757575759`", ",", "0.4444079545454547`", ",", 
     "0.44945833333333346`", ",", "0.45450871212121224`", ",", 
     "0.45955909090909103`", ",", "0.46460946969696987`", ",", 
     "0.46965984848484865`", ",", "0.47471022727272744`", ",", 
     "0.4797606060606062`", ",", "0.484810984848485`", ",", 
     "0.4898613636363638`", ",", "0.4949117424242426`", ",", 
     "0.49996212121212136`", ",", "0.5050125000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4042978328791445`", ",", "0.00210274877506656`", ",", 
     "0.09421253753664796`", ",", "0.07486460310545362`", ",", 
     "0.06638139947600681`", ",", "0.06580682216048572`", ",", 
     "0.09151622451288359`", ",", "0.11357548472262553`", ",", 
     "0.006414215751751558`", ",", "0.21986889585328384`", ",", 
     "0.1441502678180112`", ",", "0.15230526074303555`", ",", 
     "0.17995402730407137`", ",", "0.05279377622326841`", ",", 
     "0.15752960365778046`", ",", "0.09004658735878253`", ",", 
     "0.17919083811535366`", ",", "2.175432925485274`", ",", 
     "1.4222115236392723`", ",", "34.761370621831425`", ",", 
     "0.829275475109652`", ",", "0.24940834663075398`", ",", 
     "0.5108800160131123`", ",", "0.432199301612002`", ",", 
     "0.04027423393959609`", ",", "0.8069190065583227`", ",", 
     "0.19079802024380196`", ",", "0.916989181346387`", ",", 
     "0.4201141614918952`", ",", "0.034533548168967025`", ",", 
     "0.09308553770695258`", ",", "0.2970329446640929`", ",", 
     "0.669099844738113`", ",", "0.5259301259025739`", ",", 
     "0.2637827024499997`", ",", "0.07041397610195381`", ",", 
     "0.003355040796872877`", ",", "0.09109684454163104`", ",", 
     "0.258792688319951`", ",", "0.38128258361847994`", ",", 
     "0.05092100270013996`", ",", "0.07783587822726364`", ",", 
     "0.005492982948899585`", ",", "0.519530802748819`", ",", 
     "0.08893525504727463`", ",", "0.17623735189592288`", ",", 
     "0.13471173510065415`", ",", "3.453258927438967`", ",", 
     "14.443285652088782`", ",", "16.213577624638763`", ",", 
     "1.3801200401899232`", ",", "0.6891292430424425`", ",", 
     "0.5768279270259088`", ",", "0.593918311376645`", ",", 
     "0.15204936809566402`", ",", "0.010634794634010384`", ",", 
     "0.01788165049304363`", ",", "0.6442398444265868`", ",", 
     "0.5835146075420216`", ",", "0.6416040478457865`", ",", 
     "0.5126442319808941`", ",", "0.0835692870942385`", ",", 
     "1.4744800795568704`", ",", "0.08432493275152717`", ",", 
     "0.05018936751379058`", ",", "0.11620475684023937`", ",", 
     "0.14085801298242417`", ",", "0.6585142212910876`", ",", 
     "0.21918614123452185`", ",", "0.028823063529818522`", ",", 
     "0.28565652055980956`", ",", "0.1464487378813094`", ",", 
     "0.0075599365112437485`", ",", "0.11647099068972798`", ",", 
     "0.33777271699116607`", ",", "0.19607242016725038`", ",", 
     "0.055980788915757515`", ",", "0.06614819865176731`", ",", 
     "0.5973210535365063`", ",", "1.1639757393921795`", ",", 
     "0.055667554797132424`", ",", "0.010299303118119338`", ",", 
     "0.0955496601686682`", ",", "0.023493086495261262`", ",", 
     "0.04851518733673678`", ",", "0.19737690927885085`", ",", 
     "0.09416884330153659`", ",", "0.026650244959865108`", ",", 
     "0.2197510564273701`", ",", "0.1871008717973113`", ",", 
     "0.022398422214667063`", ",", "1.0065862454423675`", ",", 
     "0.2707631638743742`", ",", "0.07323517947581212`", ",", 
     "0.06739419842665895`", ",", "0.3681598675294677`", ",", 
     "0.33540117077599896`", ",", "0.15824469957447634`", ",", 
     "0.3177566763711502`", ",", "0.15663596645426786`"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->39696330]
}, Open  ]],

Cell["\<\
If we plot the periodogram we see two peaks corresponding to the right \
frequencies:\
\>", "ExampleText",
 CellID->333466425],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "dataLombScarglePeriodogram", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "Full"}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->273397985],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
htbuQmaBChv/AKM3FhA=
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.5050125000000001}, {0, 34.761370621831425`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[4]=",
 CellID->631154212]
}, Open  ]],

Cell["\<\
The LombScargle function can also take a list of data, provided this is in \
the same order as the supplied times:\
\>", "ExampleText",
 CellID->1564268490],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataLombScargleExample2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"0.15", "*", "2", " ", "\[Pi]", " ", "n"}], " ", "]"}], "+", 
      RowBox[{"Sin", "[", 
       RowBox[{"0.2", "*", "2", " ", "\[Pi]", " ", "n"}], "]"}], "+", 
      RowBox[{"Sin", "[", 
       RowBox[{"0.4", "*", "2", " ", "\[Pi]", " ", "n"}], "]"}], "+", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "200"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->1160682384],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataLombScarglePeriodogram2", "=", 
   RowBox[{"LombScargle", "[", 
    RowBox[{"dataLombScargleExample2", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "200"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->1393251900],

Cell["\<\
A plot the periodogram we see peaks corresponding to the frequencies \
corresponding to the example signal:\
\>", "ExampleText",
 CellID->1571401238],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "dataLombScarglePeriodogram2", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "Full"}]}], "]"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->712341784],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
b4zkX5tuwL9eax0j
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.5050125000000001}, {0, 23.956713013013893`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 ImageSize->{244, 156},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[7]=",
 CellID->826520156]
}, Open  ]],

Cell["\<\
Let's consider a sample with missing data. First we generate a data list:\
\>", "ExampleText",
 CellID->2144880304],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataLombScargleExample3a", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"0.2", "*", "2", " ", "\[Pi]", " ", "n"}], " ", "]"}], "+", 
      RowBox[{"Sin", "[", 
       RowBox[{"0.1", "*", "2", " ", "\[Pi]", " ", "n"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->373019661],

Cell["\<\
We next introduce missing data at random integer positions, say 10 points \
missing :\
\>", "ExampleText",
 CellID->748962281],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataLombScargleExample3aMissing", "=", 
  RowBox[{"Nest", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ReplacePart", "[", 
      RowBox[{"#", ",", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "100"}], "}"}], "]"}], "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}]}], "]"}], "&"}], ",", 
    "dataLombScargleExample3a", ",", "10"}], "]"}]}]], "Input",
 CellLabel->"In[9]:=",
 CellID->129374484],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.8968022466674206`", ",", "0.1420395219202062`", ",", 
   "0.1420395219202063`", ",", "0.8968022466674205`", ",", 
   "1.0000000000000002`", ",", 
   RowBox[{"-", "0.27876825791752646`"}], ",", 
   RowBox[{"-", "1.7600735106701006`"}], ",", 
   RowBox[{"-", "1.7600735106701013`"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", "0.9999999999999998`", ",", 
   "0.8968022466674199`", ",", "0.14203952192020564`", ",", 
   "0.14203952192020575`", ",", "0.8968022466674201`", ",", 
   "1.0000000000000004`", ",", 
   RowBox[{"-", "0.27876825791752463`"}], ",", 
   RowBox[{"-", "1.7600735106701029`"}], ",", 
   RowBox[{"-", "1.7600735106701018`"}], ",", 
   RowBox[{"-", "0.27876825791752696`"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", "0.8968022466674213`", ",", 
   "0.14203952192020508`", ",", "0.1420395219202072`", ",", 
   "0.8968022466674219`", ",", "1.0000000000000007`", ",", 
   RowBox[{"-", "0.27876825791752396`"}], ",", 
   RowBox[{"-", "1.7600735106701002`"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"-", "0.2787682579175181`"}], ",", "0.9999999999999992`", ",", 
   "0.8968022466674214`", ",", "0.14203952192020675`", ",", 
   "0.14203952192020552`", ",", "0.8968022466674235`", ",", 
   "1.0000000000000009`", ",", 
   RowBox[{"-", "0.27876825791752324`"}], ",", 
   RowBox[{"-", "1.7600735106700998`"}], ",", 
   RowBox[{"-", "1.7600735106701024`"}], ",", 
   RowBox[{"-", "0.27876825791751864`"}], ",", "0.999999999999999`", ",", 
   "0.8968022466674177`", ",", "0.14203952192020697`", ",", 
   "0.1420395219202052`", ",", "0.8968022466674233`", ",", 
   "1.000000000000001`", ",", 
   RowBox[{"-", "0.2787682579175323`"}], ",", 
   RowBox[{"-", "1.7600735106700993`"}], ",", 
   RowBox[{"-", "1.7600735106700975`"}], ",", 
   RowBox[{"-", "0.27876825791751936`"}], ",", "0.9999999999999988`", ",", 
   "0.896802246667418`", ",", "0.1420395219202073`", ",", 
   "0.14203952192020808`", ",", "0.896802246667419`", ",", 
   "1.0000000000000049`", ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"-", "1.7600735106701042`"}], ",", 
   RowBox[{"-", "1.7600735106700927`"}], ",", 
   RowBox[{"-", "0.2787682579175199`"}], ",", "0.9999999999999986`", ",", 
   "0.8968022466674184`", ",", "0.1420395219202074`", ",", 
   "0.14203952192020786`", ",", "0.8968022466674188`", ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"-", "0.27876825791752136`"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"-", "1.7600735106700929`"}], ",", 
   RowBox[{"-", "0.27876825791752063`"}], ",", "0.9999999999999983`", ",", 
   "0.8968022466674186`", ",", "0.14203952192020763`", ",", 
   RowBox[{"Missing", "[", "]"}], ",", "0.8968022466674186`", ",", 
   "1.0000000000000053`", ",", 
   RowBox[{"-", "0.27876825791752063`"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"-", "1.760073510670093`"}], ",", 
   RowBox[{"-", "0.2787682579175213`"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", "0.8968022466674266`", ",", 
   "0.14203952192020175`", ",", "0.1420395219202074`", ",", 
   RowBox[{"Missing", "[", "]"}], ",", "0.9999999999999986`", ",", 
   RowBox[{"-", "0.2787682579175199`"}], ",", 
   RowBox[{"-", "1.760073510670103`"}], ",", 
   RowBox[{"-", "1.7600735106700938`"}], ",", 
   RowBox[{"-", "0.27876825791752197`"}], ",", "0.9999999999999978`", ",", 
   "0.8968022466674269`", ",", "0.14203952192020197`", ",", 
   "0.1420395219202073`", ",", "0.896802246667418`", ",", 
   "1.0000000000000058`", ",", 
   RowBox[{"-", "0.2787682579175386`"}], ",", 
   RowBox[{"-", "1.7600735106701029`"}], ",", 
   RowBox[{"-", "1.760073510670094`"}], ",", 
   RowBox[{"-", "0.2787682579175227`"}], ",", "0.9999999999999976`"}], 
  "}"}]], "Output",
 CellLabel->"Out[9]=",
 CellID->1019576379]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataLombScarglePeriodogram3a", "=", 
   RowBox[{"LombScargle", "[", 
    RowBox[{"dataLombScargleExample3aMissing", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "100"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->1630236248],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "dataLombScarglePeriodogram3a", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "Full"}]}], "]"}]], "Input",
 CellLabel->"In[11]:=",
 CellID->456843262],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwVxWswEwAAB3CqxZEi4pJSLi3lumYqJ/lvkg8hTO1alKXSi1TDdYnRtkxI
h8hOpzZMVh5Fa6WXbbZYsnlNaZS65HU9jpTtenz43W9VbCLtyBwzMzOvf/5v
Hsq1Cavjwt+xxsHW5RiISwdjItuKkE+Nir9jwUOHtdHnj1855IqDdmVyFXzZ
C7J7+irw2J/3NjdOgbwZQfJ6uxrkMff5kqZkGDrjEZu5sw5sR+qLDZc6IZiK
Eo9R7yGPLH51fkSF7V6iG8WGRggZNoluSdmYODVaSE2VgtRjxbOLGkeJhHR5
3OkRWAVK+2pnMoUyci6jpLEZGlVpKDZ8wujq5ykBEc/gomQE7/UfQ1s958H0
9HM0r6jV1LPuwjVMTArZ0QLrLApX8pgP1kTbnVuFcjjT+VdjovVQ50wSf75X
gMCZ58Mi6LF83WJRyMZWaGeTAvbMHcBZ9aYVwnQVNCUL49e8qocqjlH6U6NG
WRJ5df4xR8oyQppD6LI2PJAMq8YWulNOi27mC4+3I/CzM9u8dhpKqsJqRqoB
X7rv5Me8X3Ae+swLnd+ByIupLR3aLiSmW5uLdr/GHq45h1+hROwVJ/8LEZ0Q
7RQ0lZa/RO7+27NVM53wa9JNdZ1QQOq5VaYt1yJho5y2rUCH97OaFGOQDoyG
5IAgaT+s2w94Eyd18KT4VibYl2Kz4Ou3iGtdGA6Pk8jb9WAev1h3wa8b3ewi
d46xATk+Dgni4W64Uda4zucq0WRRtU53uQfkBEG1MLwZg71bRoykXgTd1r22
jBHCquplJbG/F+rrDfPoqip4J0cdomX0wVQZ2Fq8RI6YwImVaUQ94quXV3C4
jci2ZxvEHXoEhxBi7TmduP/BtkyX3I8Uz8Z+Fes+DA1ChsnlDZZEOI0SZ2Ww
zPR2Wqt4A6WtmymT3gpyeGs37eRbZO2iBP84ocF+170FaYsH4EFnThPKJMia
/BJWLRvAJYn8e/FUPe49SbXpYr7D+LZE49EUAQZybdpNFgY8/ML/tciyDxbR
5fy1dQa4j15xczz0FKT1pKBI+iAWqZP8eiJ1iP7dMjfdNAhvr7MVsoxHkB+u
Ye6mDUHLy5kEXYu/pnaG8g==
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.51005}, {0, 19.104127155051582`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[11]=",
 CellID->969396563]
}, Open  ]],

Cell["\<\
Instead of data tagged Missing we may have an unevenly sampled dataset \
provided as pairs of data. We consider a similar example:\
\>", "ExampleText",
 CellID->1990697148],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataLombScargleExample3b", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"0.2", "*", "2", " ", "\[Pi]", " ", "n"}], " ", "]"}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"0.1", "*", "2", " ", "\[Pi]", " ", "n"}], "]"}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[12]:=",
 CellID->702081311],

Cell["Let's sample 90 points:", "ExampleText",
 CellID->1746016687],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataLombScargleExample3bUneven", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"dataLombScargleExample3b", ",", "90"}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[13]:=",
 CellID->965922664],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataLombScarglePeriodogram3b", "=", 
  RowBox[{"LombScargle", "[", 
   RowBox[{"dataLombScargleExample3bUneven", ",", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "100"}], "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[14]:=",
 CellID->2091453125],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.0101`", ",", "0.020303061224489796`", ",", "0.030506122448979593`", 
     ",", "0.04070918367346939`", ",", "0.05091224489795918`", ",", 
     "0.061115306122448976`", ",", "0.07131836734693878`", ",", 
     "0.08152142857142856`", ",", "0.09172448979591837`", ",", 
     "0.10192755102040817`", ",", "0.11213061224489795`", ",", 
     "0.12233367346938775`", ",", "0.13253673469387756`", ",", 
     "0.14273979591836736`", ",", "0.15294285714285713`", ",", 
     "0.16314591836734693`", ",", "0.17334897959183673`", ",", 
     "0.18355204081632653`", ",", "0.19375510204081633`", ",", 
     "0.2039581632653061`", ",", "0.2141612244897959`", ",", 
     "0.2243642857142857`", ",", "0.2345673469387755`", ",", 
     "0.2447704081632653`", ",", "0.2549734693877551`", ",", 
     "0.2651765306122449`", ",", "0.2753795918367347`", ",", 
     "0.2855826530612245`", ",", "0.29578571428571426`", ",", 
     "0.3059887755102041`", ",", "0.31619183673469387`", ",", 
     "0.3263948979591837`", ",", "0.33659795918367347`", ",", 
     "0.34680102040816324`", ",", "0.35700408163265307`", ",", 
     "0.36720714285714284`", ",", "0.37741020408163267`", ",", 
     "0.38761326530612245`", ",", "0.3978163265306122`", ",", 
     "0.40801938775510205`", ",", "0.4182224489795918`", ",", 
     "0.42842551020408165`", ",", "0.4386285714285714`", ",", 
     "0.4488316326530612`", ",", "0.459034693877551`", ",", 
     "0.4692377551020408`", ",", "0.4794408163265306`", ",", 
     "0.4896438775510204`", ",", "0.49984693877551023`", ",", "0.51005`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.08733876028542471`", ",", "0.012541163447262527`", ",", 
     "0.10433123075022933`", ",", "0.05467278714341173`", ",", 
     "0.09406582487951602`", ",", "0.010354915426463537`", ",", 
     "0.0636274242616535`", ",", "0.463176906242229`", ",", 
     "0.9193445456620124`", ",", "19.28385005903891`", ",", 
     "0.9235138545681862`", ",", "0.3037907446260411`", ",", 
     "0.00752519405706699`", ",", "0.023544223018187486`", ",", 
     "0.24065389499482973`", ",", "0.07114108765694432`", ",", 
     "0.4144541620731047`", ",", "1.2974566300968386`", ",", 
     "4.435437624032753`", ",", "13.260318707057491`", ",", 
     "1.1592738733551362`", ",", "0.5455279955014439`", ",", 
     "0.2324565412197871`", ",", "0.16220010077329441`", ",", 
     "0.31631454892843197`", ",", "0.04535197420011192`", ",", 
     "0.14901710201468055`", ",", "0.10698535671173172`", ",", 
     "0.03414716461738038`", ",", "0.5353877952980668`", ",", 
     "0.01901595972675914`", ",", "0.15004155529975802`", ",", 
     "0.11467637467427491`", ",", "0.034387686510510336`", ",", 
     "0.003907894235387242`", ",", "0.011782101034156582`", ",", 
     "0.06725201556616962`", ",", "0.02033444300816694`", ",", 
     "0.12461969557362038`", ",", "0.01766829963699147`", ",", 
     "0.04880254661891151`", ",", "0.21148261479330854`", ",", 
     "0.07010241114300807`", ",", "0.2055170754383309`", ",", 
     "0.08438439892725434`", ",", "0.08655473624688549`", ",", 
     "0.02580308756152851`", ",", "0.10655142972712768`", ",", 
     "0.02401338395485636`", ",", "0.10306450815413881`"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[14]=",
 CellID->163777802]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "dataLombScarglePeriodogram3b", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "Full"}]}], "]"}]], "Input",
 CellLabel->"In[15]:=",
 CellID->1252623409],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAAU2EDU+vhD99XRk/1Vu2PycZ319T
ypQ/ANbgdi6viT/OC/w4/zyfP+EOBphztbo/On8MidXXpD/wNIZREv6rP434
mnUrEao/a16HqbIUuD/gcSligUqvPxhF4Dj1NIU/mvVbp+tBsj/zH1UK40mw
P0Myo52W3rQ/R6kkwLCk3T/tbuqTQXu3P3L6q0BFa+0/l6sxiuwXuj8wisBl
qkgzQEDoeICXtLw/jL5Y7WyN7T/qJMB2QlG/P/HDP7xOcdM/yrCDtvb2wD+R
QfDlvNJ+Px9PpzFMRcI/Qct9D/obmD9z7cqsoZPDPy0zVDC/zc4/yIvuJ/fh
xD8kceNkTTayPx0qEqNMMMY/ZuLyv2qG2j9yyDUeon7HP57oI+JhwvQ/x2ZZ
mffMyD+qrEpc470RQBsFfRRNG8o/p7JafkiFKkBwo6CPomnLP0+u0sJijPI/
xUHECvi3zD95ZXcg93ThPxrg54VNBs4/nN8jzSLBzT9vfgsBo1TPP41WHRD5
wsQ/Yo4XPnxR0D8DYrlgfz7UP4xdqfum+NA/jT3/u184pz+3LDu50Z/RP9RP
2Q3+EsM/4fvMdvxG0j/pTzpwZGO7PwvLXjQn7tI/KMiQtrx7oT82mvDxUZXT
P5py75XlIeE/YGmCr3w81D81kYN063iTP4s4FG2n49Q//9aGyo80wz+1B6Yq
0orVP/6P2U5uW70/39Y36Pwx1j95PuVJQ5uhPwqmyaUn2dY/S9X+XrkBcD80
dVtjUoDXP49+9dQ2IYg/X0TtIH0n2D9FYHKXbTexP4kTf96nztg/zk/PXo3S
lD+z4hCc0nXZP9YZ7YwT578/3rGiWf0c2j9DnHeEoxeSPwiBNBcoxNo/pCVh
u6X8qD8zUMbUUmvbP5TbGsHcEcs/XR9Ykn0S3D8H3zpLO/KxP4fu6U+oudw/
KXvjLmJOyj+yvXsN02DdP59nr0k3mrU/3IwNy/0H3j8RiX6Bcyi2Pwdcn4go
r94/BbHZ5B9smj8xKzFGU1bfP10iBVr0Rrs/XPrCA3793z/wdALr9paYP8Nk
qmBUUuA/cH3mg29iuj+A2ZEw
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.51005}, {0, 19.28385005903891}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[15]=",
 CellID->1822363980]
}, Open  ]],

Cell["The data could also have been provided as an association", "ExampleText",
 CellID->2001066580],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataLombScargleExample3c", "=", 
   RowBox[{"<|", 
    RowBox[{
    "\"\<Unevenly Sampled data\>\"", "\[Rule]", " ", 
     "dataLombScargleExample3bUneven"}], "|>"}]}], ";"}]], "Input",
 CellLabel->"In[16]:=",
 CellID->139997789],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataLombScarglePeriodogram3c", "=", 
  RowBox[{"LombScargle", "[", 
   RowBox[{"dataLombScargleExample3c", ",", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "100"}], "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[17]:=",
 CellID->1100692467],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Unevenly Sampled data\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.0101`", ",", "0.020303061224489796`", ",", "0.030506122448979593`", 
       ",", "0.04070918367346939`", ",", "0.05091224489795918`", ",", 
       "0.061115306122448976`", ",", "0.07131836734693878`", ",", 
       "0.08152142857142856`", ",", "0.09172448979591837`", ",", 
       "0.10192755102040817`", ",", "0.11213061224489795`", ",", 
       "0.12233367346938775`", ",", "0.13253673469387756`", ",", 
       "0.14273979591836736`", ",", "0.15294285714285713`", ",", 
       "0.16314591836734693`", ",", "0.17334897959183673`", ",", 
       "0.18355204081632653`", ",", "0.19375510204081633`", ",", 
       "0.2039581632653061`", ",", "0.2141612244897959`", ",", 
       "0.2243642857142857`", ",", "0.2345673469387755`", ",", 
       "0.2447704081632653`", ",", "0.2549734693877551`", ",", 
       "0.2651765306122449`", ",", "0.2753795918367347`", ",", 
       "0.2855826530612245`", ",", "0.29578571428571426`", ",", 
       "0.3059887755102041`", ",", "0.31619183673469387`", ",", 
       "0.3263948979591837`", ",", "0.33659795918367347`", ",", 
       "0.34680102040816324`", ",", "0.35700408163265307`", ",", 
       "0.36720714285714284`", ",", "0.37741020408163267`", ",", 
       "0.38761326530612245`", ",", "0.3978163265306122`", ",", 
       "0.40801938775510205`", ",", "0.4182224489795918`", ",", 
       "0.42842551020408165`", ",", "0.4386285714285714`", ",", 
       "0.4488316326530612`", ",", "0.459034693877551`", ",", 
       "0.4692377551020408`", ",", "0.4794408163265306`", ",", 
       "0.4896438775510204`", ",", "0.49984693877551023`", ",", "0.51005`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.08733876028542482`", ",", "0.012541163447262388`", ",", 
       "0.1043312307502295`", ",", "0.05467278714341266`", ",", 
       "0.0940658248795157`", ",", "0.010354915426463903`", ",", 
       "0.0636274242616533`", ",", "0.46317690624222807`", ",", 
       "0.919344545662023`", ",", "19.28385005903889`", ",", 
       "0.9235138545681938`", ",", "0.30379074462603717`", ",", 
       "0.007525194057067102`", ",", "0.02354422301818789`", ",", 
       "0.24065389499482476`", ",", "0.07114108765694617`", ",", 
       "0.4144541620731079`", ",", "1.2974566300968546`", ",", 
       "4.435437624032754`", ",", "13.2603187070574`", ",", 
       "1.1592738733551664`", ",", "0.5455279955014389`", ",", 
       "0.23245654121978546`", ",", "0.16220010077329056`", ",", 
       "0.3163145489284342`", ",", "0.04535197420011166`", ",", 
       "0.1490171020146833`", ",", "0.10698535671173183`", ",", 
       "0.0341471646173826`", ",", "0.5353877952980508`", ",", 
       "0.019015959726757937`", ",", "0.1500415552997544`", ",", 
       "0.11467637467427404`", ",", "0.03438768651051389`", ",", 
       "0.003907894235385595`", ",", "0.011782101034157645`", ",", 
       "0.06725201556617974`", ",", "0.020334443008165837`", ",", 
       "0.1246196955736277`", ",", "0.017668299636993776`", ",", 
       "0.04880254661891202`", ",", "0.21148261479331112`", ",", 
       "0.07010241114301347`", ",", "0.20551707543834258`", ",", 
       "0.0843843989272521`", ",", "0.08655473624687612`", ",", 
       "0.025803087561529284`", ",", "0.10655142972713424`", ",", 
       "0.02401338395487906`", ",", "0.1030645081541423`"}], "}"}]}], "}"}]}],
   "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[17]=",
 CellID->90631262]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "#", "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", " ", "Full"}]}], "]"}], "&"}]}], "]"}],
   "@", "dataLombScarglePeriodogram3c"}]], "Input",
 CellLabel->"In[18]:=",
 CellID->422403271],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Unevenly Sampled data\"\>", "\[Rule]", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         NCache[
          Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAAU2EDU+vhD+FXRk/1Vu2PycZ319T
ypQ/sNXgdi6viT/OC/w4/zyfP+0OBphztbo/On8MidXXpD92NYZREv6rP434
mnUrEao/VF6HqbIUuD/gcSligUqvP+tF4Dj1NIU/mvVbp+tBsj/kH1UK40mw
P0Myo52W3rQ/NqkkwLCk3T/tbuqTQXu3P9H6q0BFa+0/l6sxiuwXuj8qisBl
qkgzQEDoeICXtLw/0L5Y7WyN7T/qJMB2QlG/P6rDP7xOcdM/yrCDtvb2wD8S
QvDlvNJ+Px9PpzFMRcI/tst9D/obmD9z7cqsoZPDP3oyVDC/zc4/yIvuJ/fh
xD+pceNkTTayPx0qEqNMMMY/oOLyv2qG2j9yyDUeon7HP+boI+JhwvQ/x2ZZ
mffMyD+rrEpc470RQBsFfRRNG8o/c7JafkiFKkBwo6CPomnLP9eu0sJijPI/
xUHECvi3zD9MZXcg93ThPxrg54VNBs4/Yd8jzSLBzT9vfgsBo1TPPwJWHRD5
wsQ/Yo4XPnxR0D8rYrlgfz7UP4xdqfum+NA/Zz3/u184pz+3LDu50Z/RPzdQ
2Q3+EsM/4fvMdvxG0j/xTzpwZGO7PwvLXjQn7tI/aMmQtrx7oT82mvDxUZXT
Pwpy75XlIeE/YGmCr3w81D/aj4N063iTP4s4FG2n49Q/fdaGyo80wz+1B6Yq
0orVP7+P2U5uW70/39Y36Pwx1j95QOVJQ5uhPwqmyaUn2dY/4M3+XrkBcD80
dVtjUoDXP/SA9dQ2IYg/X0TtIH0n2D8eY3KXbTexP4kTf96nztg/kE7PXo3S
lD+z4hCc0nXZP+Yb7YwT578/3rGiWf0c2j/cnneEoxeSPwiBNBcoxNo/7iVh
u6X8qD8zUMbUUmvbP/HbGsHcEcs/XR9Ykn0S3D+M4DpLO/KxP4fu6U+oudw/
znzjLmJOyj+yvXsN02DdP/1mr0k3mrU/3IwNy/0H3j9uhn6Bcyi2Pwdcn4go
r94/5LHZ5B9smj8xKzFGU1bfPzYkBVr0Rrs/XPrCA3793z9/jgLr9paYP8Nk
qmBUUuA/a37mg29iuj+5JpZC
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         NCache[
          Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
        1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         NCache[
          Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
        1.6]}, {}}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.51005}, {0, 19.28385005903889}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[18]=",
 CellID->2013962864]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Linear Signal Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->501752921],

Cell[TextData[StyleBox["Below are some examples of the Lomb-Scargle power \
spectrum for linear signal:", "ExampleText"]], "ExampleText",
 CellID->1672610443],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeSetLinear", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "100", ",", "1"}], "]"}], ",", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "100", ",", "1"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->506148528],

Cell[BoxData[
 RowBox[{
  RowBox[{"lineLS", "=", " ", 
   RowBox[{"LombScargle", "[", 
    RowBox[{"timeSetLinear", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "100", ",", "1"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1488994348],

Cell["\<\
Below are some examples of the Lomb-Scargle power spectrum for linear signal:\
\
\>", "ExampleText",
 CellID->747066869],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "lineLS", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->864832749],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwtkn0w03Ecx1UiyZXkuKGH0xWrXKndEXmv9GCVu8pK5aTm1Fxmd0JXckvY
XJZazUNsR54uq0aRZXQYotIMs9kU7uR0nMXl0qm26tfvj+997nvf7+fh/Xp/
NrC4J2IWW1lZ+f49/+Lh1tOTzPEM2P46LJr3D6T/v4txShLEuj/hRjdtyIyy
hBcjxF99b5K5jHwvx9G4oeTWsgVIZk0bZWtl6GJe93NImsH//9XQL7dB8Og4
1lc5hMpCXmBMcawlMnUYDCK/DtopuVuhaQAJhjKBJU2BljOMbL6HBkVEPSXE
+n6KeHEX2u12q5iNTWimFxrdbVWYJuo3Iy5lINNvcyNWeLDNzIUW6O2iOZcu
15H9VHgY6P62PUsOGq22yJLXhqoMb8Hr/EqyfztU+UcqOIklOBdq9pPtfIMc
m7eU59x8XCHm6US9TeK19K33IIhh6JiaLtCd9s1sj8gk9b7Dz8EAHzn3OmpS
xVcsce8x/+UZdVjKQQcxbzfmm8qOK75HwJA7skpmp0ZaX8Oerzf2kXx6UNx2
yNd22wosCncOp4ZpcKfRsZL/exXsCT0avFzSceuUkA7nMWUF71EvTDe79pcG
niT19YFtbbYu4ESDyj0/p/3ah9QFeHm4xmMXobcfIu/PyRcoSQj6uTSYGqSF
8++78uraFFK/FsoCe0NleBrCBE9EPOEAygOEc6K5DEQSPHSoFZRT0kuywHY6
Pqo16uBCW+fmEiok/dLDsj8B7Om7uFH83YfqPYiL1E21s0oR+ASvQTxV6qpW
xz+AaIsklXfVgISG2zu49rmkv0ackKuzP+XkoUKxt1vbYUT/TK/j47l8kucQ
Klie3hn+D6EMnqBQ13z8y3V8JutsIbkPH1G6yGul58kiqHuEsTzWJ0RHHYgx
b5KQvIfhWvjtw/sPEoxF+L7S1gwj3VFRzzooJfdnBO1TAUOdfCl+TOhtqJYR
UAbiYtbF5pB+jKKasZZDM0nxBy1djg8=
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.5101520253035404}, {0, 28.226433831030615`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[3]=",
 CellID->15262846]
}, Open  ]],

Cell["\<\
Here we create a function to generate some randomly sampled linear time \
series:\
\>", "ExampleText",
 CellID->949807603],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"timeSeriesLine", "[", "n_", "]"}], ":=", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "100", ",", "1"}], "]"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "100", ",", "1"}], "]"}]}], "}"}], "]"}], ",", 
       "n"}], "]"}], ",", "First"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->901068345],

Cell["And also a function to generate the periodograms pairs:", "ExampleText",
 CellID->1702219222],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lineUnevenLS", "[", "n_", "]"}], ":=", " ", 
   RowBox[{"LombScargle", "[", 
    RowBox[{
     RowBox[{"timeSeriesLine", "[", "n", "]"}], " ", ",", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "100", ",", "1"}], "]"}], ",", 
     RowBox[{"PairReturn", "\[Rule]", " ", "True"}]}], "]"}]}], " ", 
  ";"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->200995771],

Cell["\<\
Here is an assortment of randomly sampled periodograms from a linear series:\
\>", "ExampleText",
 CellID->893839631],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"lineUnevenLS", "[", "#", "]"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], " ", "&"}], "/@", " ", 
  
  RowBox[{"Range", "[", 
   RowBox[{"5", ",", "100", ",", "5"}], "]"}]}]], "Input",
 CellLabel->"In[6]:=",
 CellID->657761605],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvVlQVNmePnri9u3u2y8nOqIj+qHjfyLufejHfuqHvg8nouP2S8eN7uiI
8//H7Yh+6LRODTiUs1VqlTOiKA5VCmiVYjkhlpbjUQQRLFFBURDHAkRFFMUC
EZQZTPL+ZGV++cu19lq5c05gfbGrAjd7Z24y1/Abv+//+nje/8z4337zm98s
+j/of//zj0v+n4UL//jV//pr+sf/N3fRzOlzP/v0/537xWfTP1v4f3/8Z3Ry
M/33f/7vv/nNh599FhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYW
FhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhMKt2/fPq/g+vXr
qX4uC4uUob29vbS0dNeuXXv27CkrKxscHEz1E1lYWFhYWFhYTBisWbMmQ0Fm
Zmaqn8vCIjW4du3a559/zqfD4sWL37x5k+rnsrBIL3i93uvXrxcVFeXn5xcW
FlZWVo6Ojppv6evrKy4uJs997969dH1vb29yHtXCwsLCIpmg7WDmzJlkQR06
dOgIw4ULFwx30fVJe0ILi2Sivb19+vTpNML37NnT1NRUVlb25Zdf0j/z8vIM
d9kZYTHV0N/fn5mZKQWmli9f3tXVpbuFvIlFixbx65ctW9bZ2ZnMx7awsLCw
SAJaW1tpkac1P6K7rDVlMVmxb98+Gt6bN2/2er3iTF1dHZ2ZNWvWyMiI7i47
IyymGgoKCmjYz58///jx4+SJnzlz5osvvqAzW7Zs0d2ye/duumDdunXNzc0N
DQ2rV6+mf65fvz6Zj21hYWFhkQRcvXqVVvht27ZFdJe1piwmJYaHh0U6r6Oj
AyfJ0aivryeLaGxsTHejnREWUwrka5PHTcOeZ7qrq6tFVqKvr0+9pbGxkX41
Y8aMt2/fijP0g5huLS0tyXlsC4uJDjHFUv0UFhbhcfjwYVH7sX///uzs7K1b
tx47duzdu3fmu+wIt5iUePXqFQ3sr7/+msynO3fu0Fz46aefamtrkcvQwc4I
iymF9vb2lStXLliwAM4CYWhoSEyE1tZW9ZYTJ07Qr3Jzc/nJ/Px8OkmzLOFP
bGGReNBOUVVVdeDAgZ07d5aUlIR1nHt7e1V2HYKhaNBuNBYTBTk5OWpz98KF
C83zwo5wi0kJEWLNysratGkTnxE0TcxOt50RFhb379+niTB9+vTh4WH1t9u3
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
nJwWExeiNU8Hg7IqnxHlN/1r7ATlP7GwSB8gWhtHINqfuafKp7R7xwLebiCO
hpbXhuvJWlNNuCgMBp6G+GpHpfsbv9j+s7jrk4BVHzWJVsebYCkUN3dRO/3o
ual2GmGZhdsu4nVcllR9vulC6bUnw0ZnJJ0RHaOa+9xQdECabxobnORBG24B
gVhYT8QiFjQ+DZauPX0ZvtMnJRgZGSF/OWNcnh4nRTrj+PHjhhvVNT/3pzrx
x0bUXGZhkVY4ffr04VAsWbJEJKzpZwMfCJ8OIIGfiPwnFhZphUTkL/50xW8F
bTz4oaH7JaszGRiKKRJe3yQ3KZsLhlWJATrqm15F+r6zWBJENJW4BCqavsz1
OxpRd42hXP+Pa8/xFExGtr9g7METEzMVlDjWFFS5NJsl8fF5W8sraltTWy5C
DsL169eLiory8/MLCwsrKytHR8OMqL6+vuLi4l27du3du5eu7+0NU1CHGTE0
EswNveiIgJTYJSoDaT4+urqN/Mlk/uHKvrQpXZt84KmlWAjfEgrymsvKyvbv
3z8wEJzFNCkyFCVWCeqaD1I+ENNZWEwCRNF/cfMXv6TUhOM/sbBIN4iZ1T84
8uub/icvunt641AHAsmJb3780CHFjfzXPTHFgZG7xHH9vomOiec7lgVKlc5c
iawGQHJSImITQtpiwwG/KujmQzciencA4e6F34bI7JK/I87XNZr8Jpim9KXg
bzGXVNEHpXpnkgVCT3X6cnPFzactiQ/z9vf3Z2ZmSlnv5cuXd3V16W4hb0JK
mi9btqyz02QxYq8hJw5/dSJ4dVCxxluEzPKLBafvxGsqWRiAGKYnNsK3JKO5
uXnevHk0gG/eNLWmqv7FyUt+ir9NVkHeYhIhCv2LRNOSW1hMHYhptWr3VTGn
ym88jf01g4IXxz8w+fDGgdb2t7G88pELDZK5W1n/zHD9gyd+0YdP15VAimLn
8XrDLSpU5QiXKlS8Ogsig2vGa8aiAAqcpN7eL3P91mn13TbD7dDO2H36zrRM
/1M1P9e2vBF+DHzaMzaeRw0PpP0EQJB1/OeEq50WFBRkjEtXHD9+vKmp6cyZ
M1988QWd2bJli+6W3bt30wXr1q0j06uhoUG0+61fv97wLtz6Qq9Kw1OtCxM1
+BfqcoJwsmWzb2gRCzifw8Xa6Anfkobi4mJRCiKSF+aknupfIG6zwio8Wkwi
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
Rs+8THex80hPWf2L/wNugUCk
    "], {{0, 70.}, {528., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{528., 70.},
  PlotRange->{{0, 528.}, {0, 70.}}]], "Output",
 ImageSize->{532, 453},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[6]=",
 CellID->1859815819]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Random Noise Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->669071126],

Cell[TextData[StyleBox["Below are some examples of the Lomb-Scargle power \
spectrum for random noise:", "ExampleText"]], "ExampleText",
 CellID->1332757065],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomListExample", " ", "=", " ", 
  RowBox[{"RandomReal", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", "100"}], 
   "]"}]}]], "Input",
 CellLabel->"In[1]:=",
 CellID->22686726],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6121166421040876`", ",", 
   RowBox[{"-", "0.5625177277357651`"}], ",", "0.4833955663004774`", ",", 
   RowBox[{"-", "0.7505119239623905`"}], ",", 
   RowBox[{"-", "0.1025787562880982`"}], ",", 
   RowBox[{"-", "0.9436737695722202`"}], ",", "0.7375267423713825`", ",", 
   RowBox[{"-", "0.11438671922325927`"}], ",", "0.9575137567236496`", ",", 
   RowBox[{"-", "0.004379791841699898`"}], ",", 
   RowBox[{"-", "0.42130481521454977`"}], ",", "0.20957235171956157`", ",", 
   RowBox[{"-", "0.04138689572149712`"}], ",", 
   RowBox[{"-", "0.33131456987883645`"}], ",", "0.36067089284405673`", ",", 
   RowBox[{"-", "0.02421414315175241`"}], ",", "0.7799830847023306`", ",", 
   "0.7659560514213886`", ",", 
   RowBox[{"-", "0.9965627669491832`"}], ",", 
   RowBox[{"-", "0.09882196291359557`"}], ",", 
   RowBox[{"-", "0.1607736436742111`"}], ",", 
   RowBox[{"-", "0.6385354799545402`"}], ",", "0.8657858887828933`", ",", 
   RowBox[{"-", "0.7236291009063569`"}], ",", "0.95056955544193`", ",", 
   RowBox[{"-", "0.491773204667346`"}], ",", 
   RowBox[{"-", "0.5645289710762973`"}], ",", 
   RowBox[{"-", "0.319215935864543`"}], ",", 
   RowBox[{"-", "0.25943999459064093`"}], ",", 
   RowBox[{"-", "0.2224257031256034`"}], ",", 
   RowBox[{"-", "0.4598883983117892`"}], ",", "0.5255386797444981`", ",", 
   RowBox[{"-", "0.010681672715761259`"}], ",", 
   RowBox[{"-", "0.892003361020576`"}], ",", 
   RowBox[{"-", "0.6667691565882534`"}], ",", 
   RowBox[{"-", "0.4427184250136498`"}], ",", "0.9887606504620328`", ",", 
   RowBox[{"-", "0.5887731010683472`"}], ",", 
   RowBox[{"-", "0.3258572939769988`"}], ",", 
   RowBox[{"-", "0.012136538686196907`"}], ",", "0.3635091248187794`", ",", 
   RowBox[{"-", "0.501496088529001`"}], ",", "0.3990094680919536`", ",", 
   RowBox[{"-", "0.9888483316904089`"}], ",", "0.5833046456012925`", ",", 
   "0.036464919972643894`", ",", 
   RowBox[{"-", "0.7562667555255107`"}], ",", "0.23341517211154228`", ",", 
   "0.8206433773243953`", ",", 
   RowBox[{"-", "0.9063469101985313`"}], ",", 
   RowBox[{"-", "0.6452603229867724`"}], ",", 
   RowBox[{"-", "0.06569293721587632`"}], ",", 
   RowBox[{"-", "0.22666509841018856`"}], ",", 
   RowBox[{"-", "0.4452060076602602`"}], ",", "0.5627960071810674`", ",", 
   "0.031319010512606216`", ",", "0.053533728144127046`", ",", 
   "0.7653159258444289`", ",", "0.8104431529135163`", ",", 
   "0.22709453024165116`", ",", "0.16301795388330076`", ",", 
   "0.33773661549634504`", ",", "0.04798368498804573`", ",", 
   RowBox[{"-", "0.6126134058487098`"}], ",", "0.3370276664783769`", ",", 
   RowBox[{"-", "0.17374598491795679`"}], ",", "0.8155097778255769`", ",", 
   RowBox[{"-", "0.26076454876827393`"}], ",", "0.7296157593505121`", ",", 
   "0.7267962908823358`", ",", "0.6825026961494483`", ",", 
   "0.9484315489971218`", ",", "0.8427031081970155`", ",", 
   "0.1999954352704143`", ",", 
   RowBox[{"-", "0.6938074762874535`"}], ",", "0.03418894424840824`", ",", 
   RowBox[{"-", "0.31711456714890973`"}], ",", 
   RowBox[{"-", "0.23258716041325167`"}], ",", "0.5008945119330734`", ",", 
   RowBox[{"-", "0.7359305343120184`"}], ",", 
   RowBox[{"-", "0.8668636977845354`"}], ",", "0.9367135671253108`", ",", 
   "0.7387427182920079`", ",", 
   RowBox[{"-", "0.61700818703132`"}], ",", "0.8708729205686714`", ",", 
   RowBox[{"-", "0.4658189194349154`"}], ",", 
   RowBox[{"-", "0.6463013643069333`"}], ",", 
   RowBox[{"-", "0.7629898307902008`"}], ",", 
   RowBox[{"-", "0.8930356039822454`"}], ",", "0.5420736997009006`", ",", 
   "0.3373831384395487`", ",", "0.8760641985049524`", ",", 
   "0.8703993527742218`", ",", 
   RowBox[{"-", "0.09241573286181692`"}], ",", 
   RowBox[{"-", "0.25702704474604365`"}], ",", "0.9178184646877838`", ",", 
   RowBox[{"-", "0.285886661936523`"}], ",", "0.042546360664611704`", ",", 
   "0.18042881790451615`", ",", "0.46772232538260594`"}], "}"}]], "Output",
 ImageSize->{574, 183},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->519511376]
}, Open  ]],

Cell["The data looks like :", "ExampleText",
 CellID->463738535],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "randomListExample", "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->549191250],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1lAtQVGUUx++slVhMbApFjiUYEDgUb+TNn5csLI9dYB/0UGpwElQksCAn
9SLo2iAUA6hg4Oq6tUIINYoICTTxUB4JIbNEQDzkEQ93CxHSomj23Duzc+e/
v+98//N955xr+f7BmD08hmES137/vw2P3l9ZNKn66MyEP/2BQ+lZb1gz400G
aQRR9calRd0IcT70arNip6dmiJuC/eLEYklgPWlzXHsSISl0fkB6C4a2dV/t
LZmmeAtgq913aYJbxLcBVn0Ti6oHxK3AMIX7cvUfEreBprQpU/NokLQtWF5i
VHBfB63fDrbKvf2Ko5q4PZTyomcCXftJvwnzEvkubzMtrXcEo29Sne08R9wJ
LfHrX7ywNEPcGd9MjQbVHue0C4w0+SXaCR2td4XSWpu8J+ImaTfoB3s3ehe1
kHZH5rcZS2Mp90nvQKr19fM51+ZoPw94HHprx8rr08Q98anAZoC/jzu/FzI3
t4ndP/mNuDfm4/NMLvC5evhAWeZZZZRyj7Qv5CqeW0VpD2k/4MDbRmmZXaT9
oW9VNd1NGSYN6F8LO+reO2rwYwGmfEAbMnqCeABq7PUXw3PnDZoNQNekY4i9
dJJ4IAaETleOSYaIB6Ku0y5hQaWj/IPgEdFQ7aWlfNkgCPqd8wYGuXyDwSQv
qp/99RTxYHh432xrCOLqEwLX+qSTAcajxEOQ+dCEt/uzX4jvxBZ+RYD6MtWD
3QnbruezUirGiYeiuTqjSlF5ic4XCtFLP0ilLly/CsD/J/K906PdxAUQOCVN
XQ+cpfgwxAUH+3QyC7R/GHKiTB+vqLl6hiOhbO4cemuIh8Px2F7NO+u6iQux
klsnDTjK3Y8Qlx3Urft5XH4RwMsd55/boCT/CLAST23r3krikZBnb+rLOEL9
x0Yi7onysI3ud+JR4Gf7raa8wOUfhdRMYW3rcAvxaCT8nbfhcFk/8WigUyEU
F2iIi6D5ceqAonTCkB9EWOmUHRkq4NaLoJflLEX5thl4swg9iu2Pvjbn7kcM
TblXx7s11G8Qw6LH0mZdPM03K4apy0nhbADpZjF8Subvm2gnKT4GRqtVr+bF
U78jBsYufsf3L9P+bAxqVmaj0kvuUHwM8G/u95UuU3S/scDTw6XuWRcpPhYC
edNkqZD6i41Fz3hddnIr1aM5FraLBxdi11O/M3FgdFudGk/T/CEOM7t5evmt
OYqPg3E9vyH/rwXyj4PrK9Mt7Sru+yXBl75mDxWN3P1JsGKyecJxhOablSDV
wc328V2at2YJZkbGnNmrXP9IkVgc+VVSMvUjpLDKt/2gqZCbNymCzyj+qJCP
kb8UzMeH0qrPUn0YGZQ/edy5YTRP55ehZTW2MXqQ85fBghdam6+5Qf4yyDu1
n1umc98HOdhlh3stu+h8WNPigYJl4c/kv6aLfZYv3VaTvxypf25Shpu3k388
6mxul9vphv3/A0SZ/VY=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 100.}, {-0.9965627669491832, 0.9887606504620328}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[2]=",
 CellID->674852705]
}, Open  ]],

Cell["The Lomb Scargle transformation gives:", "ExampleText",
 CellID->157702565],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomListLombScargle", " ", "=", " ", 
   RowBox[{"LombScargle", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "100"}], "]"}], ",", "randomListExample"}], "}"}], 
      "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "100"}], "]"}], ",", 
     RowBox[{"PairReturn", "\[Rule]", " ", "True"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1628329607],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"randomListLombScargle", ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->723587812],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1knkw1GEYx7cMZapJihpFzLBqO8bIlan9rtGUDlO0tWaKlqxjRhFDKexQ
2gpFaaW2JJRWRZg0IlpnkWPtuu06VttErtYxxFY/v/5455l33vc5vp/vY+IV
6MpZSqFQLP+ef/HQJ7cfzMFr8Eh9WE8pmsHiPRlDWfJh28xJjJjEnlGz0sBS
Ue3zU7rI90xwHqTHiWKGIBgfMRUaCRGUKNYaM5KT/3OhbXBT6ujSDOOXq5yF
Tvlg7dhg3qs/ioNEfiE0JL+rqfs1GMEdGTx1dBGUifpraU6/8YioV4zNMmPB
G+k7VGrbi5gfSlC6wvNIz+cK/CTql6G6cE9YwOcprDT0W2DOliOJGWZD4S9n
LPYToYo++dEpehzW1gWP1PwKmJ9yics+9oXsXwnK7q++1jwlPJwX7IS7qsH2
CTZrslIghJinBuctqj10LpwGj3OwldlUi4JurVTvF+Wk3i9o0Xf0ZLkrkReZ
HKIOqAP3xlm+j/kYqoh566FrKlIeCH2NjvtyHaF2A1Qtpu4nX/WSfBph2SOa
qIuYwxKWHot2vAlGkdlPrg33YwWhpwmBE6HrOdO/oDdQnMVNbwZ/NbuMur6A
5ClGo5I6+VgqBi2QrZKMiuF/J8Z1YKsmw4rQ2wLbYoVaumUU9DlNRxpdgoQc
M/5VtpTUL8HR7dPPnRsmcJyXk8SNl+LuMmeebc4E3Akerdi4qSDB7VwX/Na6
9Eo6W8EXzI+7WuuSfrXhCn1K18G+AxFpUztpW9vhF84utVuWh+sEr3YsNYx6
pnBRIWmbIJJ7sQOz4tynh2v/+9uJcEtNabevAllFDvWSqk70n1DuC4p9S/Ls
glgwX9RnMYhiR6UBbV03vCNq6m6zJsl96IbWibyF9GBtRkNjvD/XqweXZZL4
FGEiyVuGWvrg3jf3ZBg4ZflekidDXeG3S+beJeT+yJHW95zTEtWGGWWbFk0t
x/dmm7jyhjWMRT96kWGo8rlF7cQfRkGahQ==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.5101520253035404}, {0, 4.552074223617771}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 ImageSize->{244, 159},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]=",
 CellID->382490007]
}, Open  ]],

Cell["\<\
We can also remove data to see how the periodogram performs with missing \
data/uneven sampling:\
\>", "ExampleText",
 CellID->1090992178],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"timeSeriesRandomSample", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "100"}], "]"}], ",", "randomListExample"}], 
         "}"}], "]"}], ",", "n"}], "]"}], ",", "First"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->1951591128],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"randomUnevenLombScargle", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"LombScargle", "[", 
    RowBox[{
     RowBox[{"timeSeriesRandomSample", "[", "n", "]"}], ",", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "100", ",", "1"}], "]"}], ",", 
     RowBox[{"PairReturn", "\[Rule]", " ", "True"}]}], "]"}]}], " ", 
  ";"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->1874347665],

Cell["\<\
We plot the periodograms with 50-100 points sampled in steps of 10:\
\>", "ExampleText",
 CellID->1469687946],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"randomUnevenLombScargle", "[", "#", "]"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], " ", "&"}], "/@", " ", 
  
  RowBox[{"Range", "[", 
   RowBox[{"50", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellLabel->"In[7]:=",
 CellID->682541608],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwtkn0s1HEcxw9hwjRPNcWQNs7DipTV8v6JPLSZp2tEDyIlLEWbNLpq52lD
XHpYbChX664W0i6HhQ7l8eI4h3NtOmfluZuHWnfpd78/vvvus8/3+/l83q/3
xyEhPTJJl0ajeW6d//fJjpgfDAULQTMn2p4QKmjjCuw3sDBf4sxg0SHvvCa6
Gs6dZZzLLStUvg4+EVk5DsWzqFpZdOLacfFWfDEpWzRLvX8LYr1P0l07DvtX
pqHc4EaUCpdvr7DXEUL+b8Jjx3NFD5xXkSF9XqC5y4eOJv2lnL2NqCTrCTCq
F8pzK5NBaHSkk9HSimMhhqXdC7FYIOt/xI3811B934CJbbKa8bsdw64l11m3
9Altv04EVloplLvW4O39rlLz6BNsF8LzCptZVH8hjA7427DsJTgXqvbhenUj
JkYdnxz1BZnkPD0YcHU9ZHqKjYKkkDGG6DN82lozJ+OuUXp7kWjmfZHmMov6
3IpMTVof5ho8Eh1zF9BFztuP7H2qmEWaANKH8h1co0F0Xdi72+/pFMVnCGaW
sktn6nQInWiraHqUCLLDkuP7DSdhTOoRweyeZfKzrEZYzQg4zNqvcKlZra1b
kVA8h1HdVOPhcnQc9PR4lXhpGHf+plyVxapwkNQ7AsVQeUIKR5/w/aPvT/cV
I3V+R5HvGwWlX4zI+14Cu5tSRBXwypnFo9AXrg0bBBoTZ0keY+Dx1B3pfqNI
toj4Jp4YQ7jF1XCbIAtC65cEbNMhE1GYHDnVax50l3Fo3jBns2xGkU/y2oqt
e8NoymmUu1blMrOkIFKZTjkBamj9nYApnT0wUNYLDt+vX9w1gT0BOwv5tTRC
y3MSYXxB7KbbTwj8lTZ0yyl457kXyLZzqH2YAi+NVbGZsY7BoeIrzAQZvvBL
3MO5Mor3NDYCUvV6hHOYifP8IK6fRrPuL+sR4TK1P3I49kS/aG2VYkMpMaBr
5HifFHy6oX0NWj++YWne0TyuVIp//I2R0Q==
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.5101520253035404}, {0, 4.819436318129036}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1kn0s1HEcx++UWp66kraUwqxymeWpifG+Yo3KxN2mhxE2omx6uGrJQ6SU
VcuIysmU0xxhqdxOyR3O03Wezp2nztUlMQ9HdIpc9btff3z32Xff7+fh/Xp/
bCLjg6MMKBSK89/zLx4UHh1njaTjxaqEvQe4I9Dfc8CTaqPLOSsYUzY3TupC
CkFh2/naKWbI92KEHf/m+HR+FpyZKTveVh4aIzx3v/MQQv+/EvarwzyNU4dh
XWoawPN7iRwJS1B9sAf+RP4rSCdU1aIFE8b5/mcZutQamO5MvJfmUod8op4A
Vf7az9f4n9C4xkPEqn2LRy3ZPjWFVMYkUf89fCMumRV81cDEKmaZ9aseCXeF
2WP1hgx9PxFsbddzhiRauLlV5+tyG3BsmkMryMsi+zeiNDM7KvCWGmEBy+48
FzFKNM51yWfHcIGYpxmiKHZFiNkMMqL85azOFsR5STPum7SRettwMZom3l6l
RFVSzgVdXDtCy7Gr9vYImoh5JQgqZdqGn3mN/gfDNN4aKQb7zRfS0udIPh24
zmT3rmO3ghpiEUJndsJS0Kw4LJyHMaGnE4JYI9elgA5YqAXclKIuRPteXSzU
qkme3ai4svmhk4oPenz4nGy6G06BGhsJzYDhSujtQbXQy2G01pDhvWjoQ/eW
ITdi7aJnbBmpXwYWpU3QFTwCZkZZVsqdXnA1wW1TLq0IJXjI4V/emFlgwkeM
eZBKNiDHOfX3IFfNf78U6C27Ld/jMIjEwh+OdPs+KDOp40tOC7hJ8OqDc2Qq
75BqDlm7OEkpl/sx8WbbTEy5hvR3APMN1NyHY7/BrdknkTUN4EGE9emNb4pI
noMoMOP6Pc+ehsBn1JK+YQhaeeUWa6aa3Ich7FibVCJyN2BIO+7EpkR+xKkn
luLOlU0kbyUS9/+kiDfNQn3CmS/769NmRanV5JF26PdnGBV8ZbEmbwgLo4pV
dN0wVjx293v11oih90OFyC/JHwKkSvwBlxGaCQ==
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.5101520253035404}, {0, 3.621465115834872}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwtkntIk1EYxqemZmoaFWQXy2ZFKwp0RVr4TNRykuFlqDHKIYysLEPpfllm
OisNjamQoyFq2qS85FA3K7OZZV6mm3Oac9N1Qau5lYaX9Ks+vz8OL4dz3svz
e16vhOQovi2NRvP5d/7HsNdx45zPt3FPtvOA2c+KxbsIB8+c77lUNQKzV0Y8
ESuBOnKvxO5PG/VeCn1hiK/+8CeIrWZvqacUWZGDlizlGPW/CjT6Y8lLy0ds
euIaLg2tRdOyRk/VCS3YZH4dpCJRhPPFpayUgRIhkVaPGIIh3vzWkVVE1pND
WF2kjvHiQenk38JRNKEk2Ow+ytXhB1n/FWTy8i4P7zm4bEhc4Mw2I+yBjVcC
7FiL/Vrw7OHYM4XbEPbseV5EFLzBRn+RdtKso/orwTVFptzkjeJ4+MI+qe9b
0KWKO48my5FKztOGBsKoPpZjhpDP1nJU73DDmd5ulLVQettR2b6+ev/EN1Rf
F6USSR+Q7YL0cxEatJLzdkBZOy+efNeDgXyDu9SpC5bGqLn4imKKTzeWb710
d9xtHDaxq2MZ0SrYOH8PYrNfwpnUo0JwytMV3D4zVpvkZYLiHnjcbyv2Dx2h
ePYivEJOvzCjBiOZN6mZ6IVRrLudOufAYpJ61RB80UwvaZ5GwJx9ECNAAz+7
vOgj59WUfg0UY0xaTE4ZooWVeYLsPkQxp2p4cbM4RvLQou1yhto+04rElZFG
zaAW64ZKCT+uE+VXP04nMree5HfimuT3LsZ2HTj8XNu0T53IJHnp0OGZKys7
O4G8HeLrgosDSOodv5J86gcW/R3Ew0eGy7yfFpTVB3ZoWgchnK+LX/NeTfH8
iMN1L2b0w1bIg76uZawawqEWj1sW6yi1D0PIMNmG0H7No6s7+6QgQQ/T7qzZ
gqMhFO9h/PYRTHGuqmDi+jRoqoeRnjnSqMurofbHAEVYfv4vRwLTX/sdGIQB
3w9suYDCzaxFP4wIjlMFum6jsf4CzZ+ecg==
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.5101520253035404}, {0, 9.295406047864581}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1kn1MzHEcx+8krdRWkTabCLEuZaMHWu7944yuVpY7KxRqY52VjkNELulh
WVsY1RbrQRnHViqlS/Ssp13Xde50Xd1xnXTmTslpqJPf/fzx3Wfffb+fh/fr
/fFMSDl4cgmNRtu2eP7FsLYYA1efhXjdARnRSiOs97s4dVMcGHfFAKNn9nFL
dCmCHIiM5DExrO+ViP851huj/I7708aNIg8Rzly0Gz3P/Uj9r4bv6uTnnj29
WPfEKUIUWoutj1sSbkTMgk3m16Nyh8/54ZmVxLmRh7mW641wCtmbzMz6gRKy
nhin+WfrHDhqdNoHt3ObXyG0MOpyBu8DvpL138CuNbaofr8JjmsSF7i/WrFh
u6Z2qMiWsPZrh0fUncxKl08ICKgrsRR2QLVwQV5W0UP174RviulaCusbjkUs
7BBt78YQ2zuNXz0BATnPW+z5UkEfz6lD7km2givtgYtkn1YaoqT09sFkGutr
YPajJv2uwJLUjyNJgfNzcjrRRc47gCCJ95uYtf0YuadxFtlLwG2achv+raH4
DCLykl2BS70B9Gi3aAZHCmaHps6vqg3LST1SFGdxBOW2ZrjpxFXC8iHwYm0e
6dNeUDxluHNIkVS28wEYKSdm5SYZQscL6hPCXQh/Uu8wwg5OTnmb28D8bcti
MOXIu+zEk7DVlH45Br3CX9SmToCT+/S2MP8dlrYUex220SOO5KFAyYOb7YcX
uSauiNLKVQo06OL/7Oubh9UvJdztM2VlfBmulpr9GN7v0bt+rpdxawY5JK/3
MBoKG4y7ZnDb5366MHUE3VNo2h3x318VqthB+Zuq1ahq3D0g71IhpznT8sw1
kuI5ivhgwxGWrQJi1uRqxko16E9bu1wlZmof1GhK99cWTNIIyWA+T5gwhmzH
LbnleaMU73H4BTgInJ99ge7otpfymnE8vP7TKYSlpfZHA8PAh/3LjHrMTSqX
MSwalGinOa/57oTVDy02+wq6k1d9xl+WnJiM
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.5101520253035404}, {0, 5.8601010433559635`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1kn0s1HEcx69bzENiHpoZFUvmFCFjKe9r1wo55u6kZcXUmTyGRiOdjCwr
MpR5zsMfzh8Jm4coj3HhSHcejs7Nwy5nmMdL5KqfX39899l33+/n4f16f8yD
o1lcKoVCcfh7/kXPzpsKzkIajlmKUtvCl3Fwz0PKyHbUq0AFVszTA1X+Zdhh
rumWlw6R71UosI+TJ+krULy2cop/nI+m7DZudp6Q/P8O/T2ZqbnxEpys0WHy
3evhe8XDWGKwDg8ivxErzL096SaVHjtZmaF62gQtytmpkKk9FBH1WrHXvMHj
GMyiR/NCF+dDG3QrC9qTmhqwTNT/BC0DM5agcB5HzEL3Ob86wKjUCxdoaNEP
+nXBSHzN5G6cEk5ODUWq191oYVeEj7aukf17oG8sOtdSosQd5r4L3/Ezfgv9
9He3BIgj5umDJEuzw5fZjgyuxxhnpB/XawU+D+wWSL1f0C/WmAm82I665Lw4
VcQAbI542P7IXEIvMe8gErMiqYxEMSbzZ/T4mkJEpLBWu99sk3yGMVdxtH6b
RaEf8jfyp7FHcCLrJSrUxqBN6BnBUuzXRZarGt1orrWa9/Yr6ns+VnIn80ie
owhSrnCLDytAiw7aFK2OwjLMwrn0HpV+ntD7DTJ7v0fWdkq47aoxaG4idPk0
FxSdkZD6RTBNNLPwTtgFO6M2h/dCDEXwkK1sdRa3CR5juBp16Ub8VSlCDXxl
IskYXOfdt/j7hqRf4/ASqlenB0zgcdm2Lc16AqbxDbEUrww8I3hNwPlhqXeu
4zRybIqTeQmTiOqX02L4//2VYC1UK429tIjqpsuDol4J3pc9126Ml5I8p+BT
QItpOC1DK0NuQjOcRqRATWolV5L7MI2SRR12tN86hMMv7vOCv+ObY6RL5618
krcU01YbfQ+eiDEX4NAsqpOCEWJd4ymoIPdnBjWFd1zMKAP4KR9Xp6lmYJI0
u9NeRSX9kCGLdbg8rGMIfwCUmZVa
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.5101520253035404}, {0, 5.248699028562494}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1knkw1GEYx7cMZapJihpFzLBqO8bIlan9rtGUDlO0tWaKlqxjRhFDKexQ
2gpFaaW2JJRWRZg0IlpnkWPtuu06VttErtYxxFY/v/5455l33vc5vp/vY+IV
6MpZSqFQLP+ef/HQJ7cfzMFr8Eh9WE8pmsHiPRlDWfJh28xJjJjEnlGz0sBS
Ue3zU7rI90xwHqTHiWKGIBgfMRUaCRGUKNYaM5KT/3OhbXBT6ujSDOOXq5yF
Tvlg7dhg3qs/ioNEfiE0JL+rqfs1GMEdGTx1dBGUifpraU6/8YioV4zNMmPB
G+k7VGrbi5gfSlC6wvNIz+cK/CTql6G6cE9YwOcprDT0W2DOliOJGWZD4S9n
LPYToYo++dEpehzW1gWP1PwKmJ9yics+9oXsXwnK7q++1jwlPJwX7IS7qsH2
CTZrslIghJinBuctqj10LpwGj3OwldlUi4JurVTvF+Wk3i9o0Xf0ZLkrkReZ
HKIOqAP3xlm+j/kYqoh566FrKlIeCH2NjvtyHaF2A1Qtpu4nX/WSfBph2SOa
qIuYwxKWHot2vAlGkdlPrg33YwWhpwmBE6HrOdO/oDdQnMVNbwZ/NbuMur6A
5ClGo5I6+VgqBi2QrZKMiuF/J8Z1YKsmw4rQ2wLbYoVaumUU9DlNRxpdgoQc
M/5VtpTUL8HR7dPPnRsmcJyXk8SNl+LuMmeebc4E3Akerdi4qSDB7VwX/Na6
9Eo6W8EXzI+7WuuSfrXhCn1K18G+AxFpUztpW9vhF84utVuWh+sEr3YsNYx6
pnBRIWmbIJJ7sQOz4tynh2v/+9uJcEtNabevAllFDvWSqk70n1DuC4p9S/Ls
glgwX9RnMYhiR6UBbV03vCNq6m6zJsl96IbWibyF9GBtRkNjvD/XqweXZZL4
FGEiyVuGWvrg3jf3ZBg4ZflekidDXeG3S+beJeT+yJHW95zTEtWGGWWbFk0t
x/dmm7jyhjWMRT96kWGo8rlF7cQfRkGahQ==
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.5101520253035404}, {0, 4.552074223617771}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 ImageSize->{532, 460},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[7]=",
 CellID->473359262]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(5)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True],

Cell[CellGroupData[{

Cell[TextData[{
 "FrequenciesOnly",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->957833532],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1673072918],

Cell["\<\
FrequenciesOnly is an option that is by default set to False, of whether to \
return an association for the  frequencies used in the computation only.\
\>", "ExampleText",
 CellID->770754412],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataLombScargleExampleC", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"0.05", "*", "2", " ", "\[Pi]", " ", "n"}], " ", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "100"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->448043780],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.3090169943749474`", ",", "0.5877852522924731`", ",", 
   "0.8090169943749475`", ",", "0.9510565162951535`", ",", "1.`", ",", 
   "0.9510565162951535`", ",", "0.8090169943749475`", ",", 
   "0.5877852522924732`", ",", "0.3090169943749475`", ",", 
   "1.2246467991473532`*^-16", ",", 
   RowBox[{"-", "0.30901699437494773`"}], ",", 
   RowBox[{"-", "0.5877852522924734`"}], ",", 
   RowBox[{"-", "0.8090169943749473`"}], ",", 
   RowBox[{"-", "0.9510565162951535`"}], ",", 
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "0.9510565162951536`"}], ",", 
   RowBox[{"-", "0.809016994374947`"}], ",", 
   RowBox[{"-", "0.5877852522924732`"}], ",", 
   RowBox[{"-", "0.3090169943749476`"}], ",", 
   RowBox[{"-", "2.4492935982947064`*^-16"}], ",", "0.3090169943749472`", ",",
    "0.5877852522924737`", ",", "0.8090169943749478`", ",", 
   "0.9510565162951538`", ",", "1.`", ",", "0.9510565162951536`", ",", 
   "0.8090169943749477`", ",", "0.5877852522924734`", ",", 
   "0.3090169943749461`", ",", "3.6739403974420594`*^-16", ",", 
   RowBox[{"-", "0.30901699437494706`"}], ",", 
   RowBox[{"-", "0.5877852522924728`"}], ",", 
   RowBox[{"-", "0.8090169943749472`"}], ",", 
   RowBox[{"-", "0.951056516295154`"}], ",", 
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "0.9510565162951538`"}], ",", 
   RowBox[{"-", "0.8090169943749477`"}], ",", 
   RowBox[{"-", "0.5877852522924735`"}], ",", 
   RowBox[{"-", "0.3090169943749462`"}], ",", 
   RowBox[{"-", "4.898587196589413`*^-16"}], ",", "0.3090169943749486`", ",", 
   "0.5877852522924728`", ",", "0.8090169943749471`", ",", 
   "0.951056516295154`", ",", "1.`", ",", "0.9510565162951532`", ",", 
   "0.8090169943749478`", ",", "0.5877852522924722`", ",", 
   "0.3090169943749463`", ",", "6.123233995736766`*^-16", ",", 
   RowBox[{"-", "0.3090169943749485`"}], ",", 
   RowBox[{"-", "0.5877852522924726`"}], ",", 
   RowBox[{"-", "0.8090169943749481`"}], ",", 
   RowBox[{"-", "0.9510565162951534`"}], ",", 
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "0.9510565162951538`"}], ",", 
   RowBox[{"-", "0.8090169943749468`"}], ",", 
   RowBox[{"-", "0.5877852522924709`"}], ",", 
   RowBox[{"-", "0.3090169943749464`"}], ",", 
   RowBox[{"-", "7.347880794884119`*^-16"}], ",", "0.3090169943749484`", ",", 
   "0.5877852522924725`", ",", "0.809016994374948`", ",", 
   "0.9510565162951533`", ",", "1.`", ",", "0.9510565162951539`", ",", 
   "0.8090169943749469`", ",", "0.5877852522924709`", ",", 
   "0.3090169943749465`", ",", "8.572527594031472`*^-16", ",", 
   RowBox[{"-", "0.3090169943749483`"}], ",", 
   RowBox[{"-", "0.5877852522924724`"}], ",", 
   RowBox[{"-", "0.809016994374948`"}], ",", 
   RowBox[{"-", "0.9510565162951533`"}], ",", 
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "0.9510565162951539`"}], ",", 
   RowBox[{"-", "0.8090169943749469`"}], ",", 
   RowBox[{"-", "0.587785252292471`"}], ",", 
   RowBox[{"-", "0.3090169943749467`"}], ",", 
   RowBox[{"-", "9.797174393178826`*^-16"}], ",", "0.3090169943749448`", ",", 
   "0.5877852522924751`", ",", "0.8090169943749479`", ",", 
   "0.9510565162951532`", ",", "1.`", ",", "0.9510565162951539`", ",", 
   "0.809016994374947`", ",", "0.5877852522924711`", ",", 
   "0.3090169943749468`", ",", "1.102182119232618`*^-15", ",", 
   RowBox[{"-", "0.3090169943749447`"}], ",", 
   RowBox[{"-", "0.5877852522924751`"}], ",", 
   RowBox[{"-", "0.8090169943749479`"}], ",", 
   RowBox[{"-", "0.9510565162951532`"}], ",", 
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "0.9510565162951529`"}], ",", 
   RowBox[{"-", "0.809016994374947`"}], ",", 
   RowBox[{"-", "0.5877852522924712`"}], ",", 
   RowBox[{"-", "0.3090169943749469`"}], ",", 
   RowBox[{"-", "1.2246467991473533`*^-15"}]}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->1316120810]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{"dataLombScargleExampleC", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "100"}], "]"}], ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1744837731],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.0101`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.020303061224489796`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.030506122448979593`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.04070918367346939`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.05091224489795918`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.061115306122448976`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.07131836734693878`"}], ",", 
   RowBox[{"\<\"f8\"\>", "\[Rule]", "0.08152142857142856`"}], ",", 
   RowBox[{"\<\"f9\"\>", "\[Rule]", "0.09172448979591837`"}], ",", 
   RowBox[{"\<\"f10\"\>", "\[Rule]", "0.10192755102040817`"}], ",", 
   RowBox[{"\<\"f11\"\>", "\[Rule]", "0.11213061224489795`"}], ",", 
   RowBox[{"\<\"f12\"\>", "\[Rule]", "0.12233367346938775`"}], ",", 
   RowBox[{"\<\"f13\"\>", "\[Rule]", "0.13253673469387756`"}], ",", 
   RowBox[{"\<\"f14\"\>", "\[Rule]", "0.14273979591836736`"}], ",", 
   RowBox[{"\<\"f15\"\>", "\[Rule]", "0.15294285714285713`"}], ",", 
   RowBox[{"\<\"f16\"\>", "\[Rule]", "0.16314591836734693`"}], ",", 
   RowBox[{"\<\"f17\"\>", "\[Rule]", "0.17334897959183673`"}], ",", 
   RowBox[{"\<\"f18\"\>", "\[Rule]", "0.18355204081632653`"}], ",", 
   RowBox[{"\<\"f19\"\>", "\[Rule]", "0.19375510204081633`"}], ",", 
   RowBox[{"\<\"f20\"\>", "\[Rule]", "0.2039581632653061`"}], ",", 
   RowBox[{"\<\"f21\"\>", "\[Rule]", "0.2141612244897959`"}], ",", 
   RowBox[{"\<\"f22\"\>", "\[Rule]", "0.2243642857142857`"}], ",", 
   RowBox[{"\<\"f23\"\>", "\[Rule]", "0.2345673469387755`"}], ",", 
   RowBox[{"\<\"f24\"\>", "\[Rule]", "0.2447704081632653`"}], ",", 
   RowBox[{"\<\"f25\"\>", "\[Rule]", "0.2549734693877551`"}], ",", 
   RowBox[{"\<\"f26\"\>", "\[Rule]", "0.2651765306122449`"}], ",", 
   RowBox[{"\<\"f27\"\>", "\[Rule]", "0.2753795918367347`"}], ",", 
   RowBox[{"\<\"f28\"\>", "\[Rule]", "0.2855826530612245`"}], ",", 
   RowBox[{"\<\"f29\"\>", "\[Rule]", "0.29578571428571426`"}], ",", 
   RowBox[{"\<\"f30\"\>", "\[Rule]", "0.3059887755102041`"}], ",", 
   RowBox[{"\<\"f31\"\>", "\[Rule]", "0.31619183673469387`"}], ",", 
   RowBox[{"\<\"f32\"\>", "\[Rule]", "0.3263948979591837`"}], ",", 
   RowBox[{"\<\"f33\"\>", "\[Rule]", "0.33659795918367347`"}], ",", 
   RowBox[{"\<\"f34\"\>", "\[Rule]", "0.34680102040816324`"}], ",", 
   RowBox[{"\<\"f35\"\>", "\[Rule]", "0.35700408163265307`"}], ",", 
   RowBox[{"\<\"f36\"\>", "\[Rule]", "0.36720714285714284`"}], ",", 
   RowBox[{"\<\"f37\"\>", "\[Rule]", "0.37741020408163267`"}], ",", 
   RowBox[{"\<\"f38\"\>", "\[Rule]", "0.38761326530612245`"}], ",", 
   RowBox[{"\<\"f39\"\>", "\[Rule]", "0.3978163265306122`"}], ",", 
   RowBox[{"\<\"f40\"\>", "\[Rule]", "0.40801938775510205`"}], ",", 
   RowBox[{"\<\"f41\"\>", "\[Rule]", "0.4182224489795918`"}], ",", 
   RowBox[{"\<\"f42\"\>", "\[Rule]", "0.42842551020408165`"}], ",", 
   RowBox[{"\<\"f43\"\>", "\[Rule]", "0.4386285714285714`"}], ",", 
   RowBox[{"\<\"f44\"\>", "\[Rule]", "0.4488316326530612`"}], ",", 
   RowBox[{"\<\"f45\"\>", "\[Rule]", "0.459034693877551`"}], ",", 
   RowBox[{"\<\"f46\"\>", "\[Rule]", "0.4692377551020408`"}], ",", 
   RowBox[{"\<\"f47\"\>", "\[Rule]", "0.4794408163265306`"}], ",", 
   RowBox[{"\<\"f48\"\>", "\[Rule]", "0.4896438775510204`"}], ",", 
   RowBox[{"\<\"f49\"\>", "\[Rule]", "0.49984693877551023`"}], ",", 
   RowBox[{"\<\"f50\"\>", "\[Rule]", "0.51005`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->95276244]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "NormalizeIntensities",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1306676671],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->185659008],

Cell["\<\
NormalizeIntensities is an option that is by default set to False, of whether \
to normalize the intensity list for the periodogram.\
\>", "ExampleText",
 CellID->1147035275],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataLombScargleExampleC", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"0.05", "*", "2", " ", "\[Pi]", " ", "n"}], " ", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->261167806],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"LombScargle", "[", 
     RowBox[{"dataLombScargleExampleC", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "100"}], "]"}]}], "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1149856249],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAAU2EDU+vhD8nUf6QQ1BMPycZ319T
ypQ/y53CUcaHhT/OC/w4/zyfP3rEJIMWi6o/On8MidXXpD98opV5LYPWP434
mnUrEao/Zc/LLhZCSEDgcSligUqvP+h6dt0Mmdk/mvVbp+tBsj+Zu3gs4SrA
P0Myo52W3rQ/8/t0VsyUsD/tbuqTQXu3P7y04RsMr6Q/l6sxiuwXuj86Gwr5
B6KcP0DoeICXtLw/q2rLpeAflT/qJMB2QlG/P59WqHvkQ5A/yrCDtvb2wD/W
Pl2v0dGJPx9PpzFMRcI/VoLS6NT1hD9z7cqsoZPDP3FH+dPUT4E/yIvuJ/fh
xD/7r5eMpvx8Px0qEqNMMMY/WwE3aheIeD9yyDUeon7HP3QYrCV08XQ/x2ZZ
mffMyD/xdGHx0gFyPxsFfRRNG8o/6Vc2lyslbz9wo6CPomnLP8oaH4e4D2s/
xUHECvi3zD8TtTPeI5pnPxrg54VNBs4/2JhxjHKlZD9vfgsBo1TPP8Rk4ift
GWI/Yo4XPnxR0D9D6bE9TcpfP4xdqfum+NA/EvV8WTzxWz+3LDu50Z/RP9Ys
jd2PkVg/4fvMdvxG0j/+mn+ntZhVPwvLXjQn7tI/59fIuJz3Uj82mvDxUZXT
PxjoLNbzoVA/YGmCr3w81D9KqfYRMBtNP4s4FG2n49Q/iGcelUtkST+1B6Yq
0orVP4Yl7D5HEUY/39Y36Pwx1j+aL3svfxZDPwqmyaUn2dY/88avAjZqQD80
dVtjUoDXP48aEoaDCDw/X0TtIH0n2D9232/Gkrs3P4kTf96nztg/OkT/BB7i
Mz+z4hCc0nXZP7s6DmCIcjA/3rGiWf0c2j+Fy/JGmMkqPwiBNBcoxNo/c1Xa
Wn9kJT8zUMbUUmvbP3oT+v/IqiA/XR9Ykn0S3D/CYBq0+iYZP4fu6U+oudw/
z62GAs0uEj+yvXsN02DdP3af/pBlwwg/3IwNy/0H3j96/OoSTdz+Pgdcn4go
r94/90m3Q0uj8D4xKzFGU1bfPyq0zQvzNNs+XPrCA3793z+NXWqfHO5HP8Nk
qmBUUuA/G52eTxe7gD6zi4c9
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.51005}, {0, 48.51630196525256}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[3]=",
 CellID->237967142]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"LombScargle", "[", 
     RowBox[{"dataLombScargleExampleC", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "100"}], "]"}], ",", 
      RowBox[{"NormalizeIntensities", "\[Rule]", " ", "True"}]}], "]"}], 
    "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->542729272],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAAU2EDU+vhD8IsNoOcKzyPicZ319T
ypQ/0iAnvVhmLD/OC/w4/zyfP4lMAyCOgVE/On8MidXXpD+VbyIn9rF9P434
mnUrEao/gUFQy3X/7z/gcSligUqvP0p1vaTs4YA/mvVbp+tBsj916VFZa1Nl
P0Myo52W3rQ/gtvOzSHfVT/tbuqTQXu3P4AxLYZ4SEs/l6sxiuwXuj86mWyU
XeJCP0DoeICXtLw/IIvD4kzdOz/qJMB2QlG/P1qmSa5pdDU/yrCDtvb2wD9d
XWJ0XQcxPx9PpzFMRcI/iTv85dalKz9z7cqsoZPDP5bRCerW1SY/yIvuJ/fh
xD+1wZ60IR4jPx0qEqNMMMY/ksWOduYtID9yyDUeon7HPylHdowQoBs/x2ZZ
mffMyD+E8g07n8AXPxsFfRRNG8o/RulIw4iKFD9wo6CPomnLP6ruZcUH2RE/
xUHECvi3zD9InVDU7SEPPxrg54VNBs4/avZ73M47Cz9vfgsBo1TPP87BVRhq
4Ac/Yo4XPnxR0D+3GUVycfcEP4xdqfum+NA/hQLCj8NtAj+3LDu50Z/RP7EU
LHUlNAA/4fvMdvxG0j/asEZLr3z8PgvLXjQn7tI/G9maqdQE+T42mvDxUZXT
PxapWrp78PU+YGmCr3w81D+Q1KiVRTLzPos4FG2n49Q//r7QhSG/8D61B6Yq
0orVP/fcIMe4G+0+39Y36Pwx1j9Rk7q9kS3pPgqmyaUn2dY/uT92AvWm5T40
dVtjUoDXP11cwc4dfeI+X0TtIH0n2D9Jz7GEB07fPokTf96nztg/8sWpBSg6
2j6z4hCc0nXZP6KGLxXvsdU+3rGiWf0c2j/Bm1e/x6rRPgiBNBcoxNo/2XoW
YdA3zD4zUMbUUmvbP2mH9lQi/MU+XR9Ykn0S3D8vtzf7sJbAPofu6U+oudw/
niXd8fL7tz6yvXsN02DdP2vc6IYDVbA+3IwNy/0H3j9kkBaTeVqkPgdcn4go
r94/QrqgukDylT4xKzFGU1bfP2JWw2uV8YE+XPrCA3793z8xUNdHsZDvPsNk
qmBUUuA/7L/HfKQRJj7aA4yB
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.51005}, {0, 0.9999340983359134}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1861971664]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "OversamplingRate",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1198833286],

Cell[TextData[{
 ButtonBox["OversamplingRate",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OversamplingRate"],
 " takes values \[GreaterEqual] 1 by which to over-sample the time series \
with zero-padding. The default value is 1. We consider the following data:"
}], "ExampleText",
 CellID->960868809],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataLombScargleExampleA", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"0.05", "*", "2", " ", "\[Pi]", " ", "n"}], " ", "]"}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"0.2", "*", "2", " ", "\[Pi]", " ", "n"}], "]"}], "+", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "100"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1230757186],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.41712196045808936`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0.6474538106910919`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2.0769949677870363`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0.7393632512438595`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"-", "0.18859001371328576`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0.7499095647671694`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2.1595636083329426`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2.049308599197025`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0.2715933817436973`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0.24381274818016951`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     RowBox[{"-", "0.3995302411721506`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "0.5483779298715739`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     RowBox[{"-", "0.9188941262870383`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     RowBox[{"-", "2.3036751511306695`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", 
     RowBox[{"-", "1.5714598404088354`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", 
     RowBox[{"-", "1.3544209169919303`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "0.6016390321426403`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "0.03032337604786517`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", 
     RowBox[{"-", "0.9635657706336251`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", 
     RowBox[{"-", "0.7149854250073542`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "0.09038954183508541`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "2.2279993351461886`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "0.8195033456787879`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "0.10934226156188698`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "0.29882436177680205`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "0.8077420896962485`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "1.4149014940848654`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "0.5627260025364436`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "0.5378429869407735`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", 
     RowBox[{"-", "0.4942520986028418`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "0.8305508824122765`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", "0.08333900859246302`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "0.6281022901256288`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", 
     RowBox[{"-", "1.976162751638618`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", 
     RowBox[{"-", "2.2555561356145053`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", 
     RowBox[{"-", "1.6423759622405996`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "0.3576915831748947`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37", ",", 
     RowBox[{"-", "0.20256120824575485`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", 
     RowBox[{"-", "1.6341899668913409`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", 
     RowBox[{"-", "1.947386638780263`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", 
     RowBox[{"-", "0.9698317828532181`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41", ",", "0.504889330112988`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "2.085094573797721`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43", ",", 
     RowBox[{"-", "0.04627677689282195`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44", ",", 
     RowBox[{"-", "0.08797302595603307`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "0.9655444486281`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"46", ",", "0.9938373316432902`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"47", ",", "1.3743197979519752`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", "0.6979770661906227`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", 
     RowBox[{"-", "0.6878831736927067`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", 
     RowBox[{"-", "0.7945374916897278`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", "1.0156435906161783`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"52", ",", "0.8639672832360675`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"53", ",", 
     RowBox[{"-", "1.7636811243595067`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"54", ",", 
     RowBox[{"-", "1.4261593069890064`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", 
     RowBox[{"-", "1.8740894849241632`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56", ",", 
     RowBox[{"-", "0.7370710950096934`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"57", ",", 
     RowBox[{"-", "0.9618735540752428`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"58", ",", 
     RowBox[{"-", "0.29848022345945013`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"59", ",", 
     RowBox[{"-", "1.3709251152196964`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", 
     RowBox[{"-", "0.9248276188851255`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"61", ",", "0.3131342174093015`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"62", ",", "1.3090670039595067`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"63", ",", "0.08954718453628918`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"64", ",", 
     RowBox[{"-", "0.15802471865621948`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"65", ",", "1.4083680010817519`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"66", ",", "2.0929951518758414`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"67", ",", "1.4857465613110157`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"68", ",", "0.8062832700198191`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"69", ",", 
     RowBox[{"-", "1.3099843413715495`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", 
     RowBox[{"-", "0.44843136889376234`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"71", ",", 
     RowBox[{"-", "0.17135089881745036`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"72", ",", "0.9142909843850587`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"73", ",", 
     RowBox[{"-", "1.9174911892081998`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"74", ",", 
     RowBox[{"-", "2.3047196840898065`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"75", ",", 
     RowBox[{"-", "1.0733742309594347`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"76", ",", 
     RowBox[{"-", "0.9801764114239228`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"77", ",", "0.2504284866760663`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"78", ",", 
     RowBox[{"-", "0.8007752457516397`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"79", ",", 
     RowBox[{"-", "1.6879969023176096`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", 
     RowBox[{"-", "0.48509703253817493`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"81", ",", "1.5482781717031369`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"82", ",", "1.6818019811251719`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"83", ",", 
     RowBox[{"-", "0.654647748234733`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", "0.6266479568843019`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"85", ",", "0.8368458198783462`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"86", ",", "2.4570390851871045`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"87", ",", "0.5781292038015076`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"88", ",", "0.7716432907321618`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"89", ",", 
     RowBox[{"-", "1.15092298210491`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "0.7724064998765392`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"91", ",", 
     RowBox[{"-", "0.32085291887379874`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"92", ",", 
     RowBox[{"-", "0.32362266777674453`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"93", ",", 
     RowBox[{"-", "0.46915459946749527`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"94", ",", 
     RowBox[{"-", "1.9717602998822787`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"95", ",", 
     RowBox[{"-", "0.38304165954094027`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"96", ",", "0.6616783150973174`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"97", ",", 
     RowBox[{"-", "1.1383117877847093`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"98", ",", 
     RowBox[{"-", "1.7735809948077228`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"99", ",", 
     RowBox[{"-", "2.112007976517627`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", "0.07584661234531041`"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->203457219]
}, Open  ]],

Cell["\<\
A plot with of the periodogram with no oversampling looks like:\
\>", "ExampleText",
 CellID->550221109],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"LombScargle", "[", 
    RowBox[{"dataLombScargleExampleA", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "100"}], "]"}], ",", 
     RowBox[{"PairReturn", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"OversamplingRate", "\[Rule]", " ", "1"}]}], "]"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->104585453],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAAU2EDU+vhD81oZXkkELIPycZ319T
ypQ/V5/0t1fWhj/OC/w4/zyfP5eLKB9T+MU/On8MidXXpD8uPQuOz5TRP434
mnUrEao/XG74G0T6M0DgcSligUqvP97dCqLbf9g/mvVbp+tBsj+Yav2gXPjW
P0Myo52W3rQ/q6tYaXus5D/tbuqTQXu3P/1lTJgDCtE/l6sxiuwXuj/RuQ6B
7cC7P0DoeICXtLw/kmE6YRBOqz/qJMB2QlG/P+mRfOng/JE/yrCDtvb2wD/a
bUlfLKjCPx9PpzFMRcI/vdrYlilk4T9z7cqsoZPDP4MOCu9PPLo/yIvuJ/fh
xD+g94h0l73DPx0qEqNMMMY/K+zVAmfRxT9yyDUeon7HP67jWgfY2tQ/x2ZZ
mffMyD+PhC0YAiIMQBsFfRRNG8o/mqVyIP+6JEBwo6CPomnLP/xEH4CEuQJA
xUHECvi3zD8qITDQS0HmPxrg54VNBs4/xno6ugWe0z9vfgsBo1TPP+YTgD42
QcA/Yo4XPnxR0D+HWcrKkdbQP4xdqfum+NA/ZfaiosaY8T+3LDu50Z/RPzwq
/FeIwr0/4fvMdvxG0j/I9HUyOmXQPwvLXjQn7tI/9wGjo6Jn1z82mvDxUZXT
P7nrTz5mfuA/YGmCr3w81D+0K02noVrVP4s4FG2n49Q/MHTRgVfjzD+1B6Yq
0orVP4n6wwm2sMs/39Y36Pwx1j9YV9TiIqyCPwqmyaUn2dY/LRAEFi+ytj80
dVtjUoDXP3fMx+xRapE/X0TtIH0n2D8jM/irvYDCP4kTf96nztg/RBJMWVZX
wz+z4hCc0nXZP2XGDOSaQ84/3rGiWf0c2j/ZjdYmCGK2PwiBNBcoxNo/eqDD
ZI9cwz8zUMbUUmvbPxiOZmIzn/Y/XR9Ykn0S3D+H2ZKtwQ/MP4fu6U+oudw/
y89xzuktxj+yvXsN02DdP4DZFnn8N74/3IwNy/0H3j9TbSd33FrRPwdcn4go
r94/EZhevaNPyj8xKzFGU1bfPz0+IQhZkbA/XPrCA3793z8/q17dTPjwP8Nk
qmBUUuA/MEVjI/+ntj9QlpGT
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.51005}, {0, 19.97760176482403}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1106814008]
}, Open  ]],

Cell["\<\
Oversampling by a factor of 2 makes the periodogram look smoother in this \
case:\
\>", "ExampleText",
 CellID->808006743],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"LombScargle", "[", 
    RowBox[{"dataLombScargleExampleA", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "100"}], "]"}], ",", 
     RowBox[{"PairReturn", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"OversamplingRate", "\[Rule]", " ", "2"}]}], "]"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->1220508533],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwVkns8EwgAx0t1RTipq+5chesij+R1yus38vjsmiQd0Uop9Lgenr1kc9WV
uvKsySlMmtCRakiTjJlttM0227zporxyuiybT9f98f18P9//vybhJ3ZEaM2Z
M+fAF/73XL+Lev7lF+FYcPN1micXxSh4M2OSCiGN40C0eQezb3vDAnlZCM77
UBUs+x1nM46RHszLAS4pfgyxGETbYs2mz655oF0zXxOoakKaZ1OGhQsdtGXE
eM+iWThTdFOkHfewwW3xjVdZIgzWBlKocQwQb7RNPQ+zIlxX5cRbLikB+bjK
yGvGnuDkOHBU9rAMYltBeKVEm9AXvT48+edy9HTr0DspcngHb7K6NVUBg1vy
pbQNQ8j5dzdjxKMS2Udm88kqGSYyKaYeaY/xmDny/VNtHrbYFd651fMEpaW7
Dp8re41sIWflqBUTxJGWZLa6HWPH32V6nKvCbAQpe56OCJ56+l/TWqpB8vdp
3TpeBFqp7dXRFc8gqtFPHquvxQjxlwWekbVoia096WDYBMLwaSrtyXNk7Hfe
b7CtFDd/z1WPatXhhWOWxOaqAO/W1id4BrzA2/TEt32adOT3T6r4/vXIVmf7
J5oywKu4wPz4sR7KY8Qwq+IGfKB8E2dy9yWsE8rmlxpMYo0/w5bk3QCWUn5r
/cF+EFdvnkgYbQBRynNyKWQjdoxXVpDJxgV9nQl/12e4+5x8RODciAqRVCzf
WQrutXGz6f5G5E9fiaOx2JgKpf5tktKE1qJW8oV1CqyyMCwkbeTAclSqFSVq
gu+nwn2nOjjwZarzrkbVIYbruJqe1Iy/BkMXypUS5NKaOwU/chF9gDm0gSlG
c2TI7WkBF6kXrVdqmeoSJh1HgkzjWsCeco9Ot7EhGC04v8zPiIecohjjz8/W
Enwk+uJTDTzYbn5RclcqwsnC/FT6YT40XmuoF2u0CH/G2Pm1GgiQoTBnvPTk
o8mjUUdVJYCFyUbhVo83mDAI4pqGtSKSQaNE6CnxXd/QJb+v2sA56/xswd12
eJWf2XL6YRt8lGOx9pvoOJG0eG7hzld4s5Tq/pNHPW773alrVb9C7y9YPpVV
gvAbK9wTA4S4HMLjpcuEmI7vy11SJMQ68/OpBHo1/tjzQH1fJUTERzqdkz0J
E++YUFeSCFFlXmeKo0SosnKpEeWJ4GqhCb7SwAJp2fyVUVMieFN0Gxb9fQ/9
akGCxkcM7od4O+cIIRIGb0rTc8Rfft4Z4VmtwGL+XgezcTGm5xYW0qM6UFBp
lvncox1VIyXvjJP78FPO+8mAm+2oGfF3j0zqAz+5ZvvQcDtOmBmNJXcKse/w
b+WJrhI8sfRjFIRK8e/2rfqGaRIc+mRNNu4ox7VNy44xBiXYGCdKDh4UwNi4
m+/qJIWnrbmf3oc+PF1430J8VYqUGbY2s4KPnyeOp0T1SFHM4RGp0TXolTkN
a2xl2BUsGTAt+w3xdXN8My7JsK06zi7brg4691uKzBQyWBvMX25TyUTe9Yz5
LKsOuOVq+YZnZsEhfveBHdQOnBI0jwYcSUcLeW3DUHsHmo2v26+6REOY15jx
eTM5frBXlbKoX/63ZFIMz8mR0jgZI3jKRMpSSg+jTQ4vQ1JIUDAbq9W+bm6m
CsiOv1AGPHiDxwMGueJ4BSI4uq9ztrSByFPMRLUosPnaGOGI6BF6HtFDZr9X
QnFdtm5ROBOxt49WZ5xUInhEzqcl1mJRssMK80YlzuazD6aS2bhzaDaetaIT
9zS3k3zuy2C/nSPZcbQTK29EhtvnfQTXKdV+uK4TLowu7uyGQexZsyvjvGEX
LisyHr78WoB/vjKZNIzsQtE/LBfmtwO4PP7Wv7imC/xX0W1vrTlYJav8y02v
G9+kreaX7w9AJeucXvu+blAVy89onOrgW+T166En3dDm9et2Zraj6w89/uzC
HgQeMzvVFSpCdJxsfebuHpw5GKveZnQaC8l5V8zLe7Akey+r0J+H3C2Hhlha
vTC5HDSw5xMHtpa2PoFBvXBzN1kUkl4BjuHMveEHvYCI+NlJexzkmYZ5SbNf
unRvN0n1Hp/eez9KMe9DnGZKae88AfbBkn07d/Rho/eBHz4zmPgPXYUgeg==

       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.51005}, {0, 19.97760176482403}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1211213665]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "PairReturn",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->24596258],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->700424161],

Cell["\<\
PairReturn is an option that is by default set to False, of whether to return \
pairs of frequencies and intensities, or a list of frequencies and a \
corresponding list of intensities for a periodogram.\
\>", "ExampleText",
 CellID->748060486],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataLombScargleExampleC", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"0.05", "*", "2", " ", "\[Pi]", " ", "n"}], " ", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "100"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1724898649],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.3090169943749474`", ",", "0.5877852522924731`", ",", 
   "0.8090169943749475`", ",", "0.9510565162951535`", ",", "1.`", ",", 
   "0.9510565162951535`", ",", "0.8090169943749475`", ",", 
   "0.5877852522924732`", ",", "0.3090169943749475`", ",", 
   "1.2246467991473532`*^-16", ",", 
   RowBox[{"-", "0.30901699437494773`"}], ",", 
   RowBox[{"-", "0.5877852522924734`"}], ",", 
   RowBox[{"-", "0.8090169943749473`"}], ",", 
   RowBox[{"-", "0.9510565162951535`"}], ",", 
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "0.9510565162951536`"}], ",", 
   RowBox[{"-", "0.809016994374947`"}], ",", 
   RowBox[{"-", "0.5877852522924734`"}], ",", 
   RowBox[{"-", "0.3090169943749476`"}], ",", 
   RowBox[{"-", "2.4492935982947064`*^-16"}], ",", "0.3090169943749472`", ",",
    "0.5877852522924736`", ",", "0.8090169943749478`", ",", 
   "0.9510565162951538`", ",", "1.`", ",", "0.9510565162951536`", ",", 
   "0.8090169943749477`", ",", "0.5877852522924734`", ",", 
   "0.30901699437494606`", ",", "3.6739403974420594`*^-16", ",", 
   RowBox[{"-", "0.30901699437494706`"}], ",", 
   RowBox[{"-", "0.5877852522924728`"}], ",", 
   RowBox[{"-", "0.8090169943749472`"}], ",", 
   RowBox[{"-", "0.951056516295154`"}], ",", 
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "0.9510565162951538`"}], ",", 
   RowBox[{"-", "0.8090169943749477`"}], ",", 
   RowBox[{"-", "0.5877852522924735`"}], ",", 
   RowBox[{"-", "0.3090169943749462`"}], ",", 
   RowBox[{"-", "4.898587196589413`*^-16"}], ",", "0.3090169943749486`", ",", 
   "0.5877852522924727`", ",", "0.8090169943749471`", ",", 
   "0.951056516295154`", ",", "1.`", ",", "0.9510565162951532`", ",", 
   "0.8090169943749478`", ",", "0.5877852522924721`", ",", 
   "0.3090169943749463`", ",", "6.123233995736766`*^-16", ",", 
   RowBox[{"-", "0.3090169943749485`"}], ",", 
   RowBox[{"-", "0.5877852522924726`"}], ",", 
   RowBox[{"-", "0.8090169943749481`"}], ",", 
   RowBox[{"-", "0.9510565162951534`"}], ",", 
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "0.9510565162951538`"}], ",", 
   RowBox[{"-", "0.8090169943749468`"}], ",", 
   RowBox[{"-", "0.5877852522924708`"}], ",", 
   RowBox[{"-", "0.3090169943749464`"}], ",", 
   RowBox[{"-", "7.347880794884119`*^-16"}], ",", "0.3090169943749484`", ",", 
   "0.5877852522924725`", ",", "0.809016994374948`", ",", 
   "0.9510565162951533`", ",", "1.`", ",", "0.9510565162951539`", ",", 
   "0.8090169943749469`", ",", "0.5877852522924709`", ",", 
   "0.30901699437494656`", ",", "8.572527594031472`*^-16", ",", 
   RowBox[{"-", "0.3090169943749483`"}], ",", 
   RowBox[{"-", "0.5877852522924725`"}], ",", 
   RowBox[{"-", "0.8090169943749479`"}], ",", 
   RowBox[{"-", "0.9510565162951533`"}], ",", 
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "0.9510565162951539`"}], ",", 
   RowBox[{"-", "0.8090169943749469`"}], ",", 
   RowBox[{"-", "0.587785252292471`"}], ",", 
   RowBox[{"-", "0.3090169943749467`"}], ",", 
   RowBox[{"-", "9.797174393178826`*^-16"}], ",", "0.3090169943749448`", ",", 
   "0.5877852522924751`", ",", "0.8090169943749479`", ",", 
   "0.9510565162951533`", ",", "1.`", ",", "0.9510565162951539`", ",", 
   "0.809016994374947`", ",", "0.5877852522924711`", ",", 
   "0.3090169943749468`", ",", "1.102182119232618`*^-15", ",", 
   RowBox[{"-", "0.3090169943749447`"}], ",", 
   RowBox[{"-", "0.5877852522924751`"}], ",", 
   RowBox[{"-", "0.8090169943749478`"}], ",", 
   RowBox[{"-", "0.9510565162951532`"}], ",", 
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "0.9510565162951529`"}], ",", 
   RowBox[{"-", "0.8090169943749471`"}], ",", 
   RowBox[{"-", "0.5877852522924712`"}], ",", 
   RowBox[{"-", "0.3090169943749469`"}], ",", 
   RowBox[{"-", "1.2246467991473533`*^-15"}]}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->1499218583]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{"dataLombScargleExampleC", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "100"}], "]"}], ",", 
   RowBox[{"PairReturn", "\[Rule]", " ", "False"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1558022829],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.0101`", ",", "0.020303061224489796`", ",", "0.030506122448979593`", 
     ",", "0.04070918367346939`", ",", "0.05091224489795918`", ",", 
     "0.061115306122448976`", ",", "0.07131836734693878`", ",", 
     "0.08152142857142856`", ",", "0.09172448979591837`", ",", 
     "0.10192755102040817`", ",", "0.11213061224489795`", ",", 
     "0.12233367346938775`", ",", "0.13253673469387756`", ",", 
     "0.14273979591836736`", ",", "0.15294285714285713`", ",", 
     "0.16314591836734693`", ",", "0.17334897959183673`", ",", 
     "0.18355204081632653`", ",", "0.19375510204081633`", ",", 
     "0.2039581632653061`", ",", "0.2141612244897959`", ",", 
     "0.2243642857142857`", ",", "0.2345673469387755`", ",", 
     "0.2447704081632653`", ",", "0.2549734693877551`", ",", 
     "0.2651765306122449`", ",", "0.2753795918367347`", ",", 
     "0.2855826530612245`", ",", "0.29578571428571426`", ",", 
     "0.3059887755102041`", ",", "0.31619183673469387`", ",", 
     "0.3263948979591837`", ",", "0.33659795918367347`", ",", 
     "0.34680102040816324`", ",", "0.35700408163265307`", ",", 
     "0.36720714285714284`", ",", "0.37741020408163267`", ",", 
     "0.38761326530612245`", ",", "0.3978163265306122`", ",", 
     "0.40801938775510205`", ",", "0.4182224489795918`", ",", 
     "0.42842551020408165`", ",", "0.4386285714285714`", ",", 
     "0.4488316326530612`", ",", "0.459034693877551`", ",", 
     "0.4692377551020408`", ",", "0.4794408163265306`", ",", 
     "0.4896438775510204`", ",", "0.49984693877551023`", ",", "0.51005`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0008640603937118155`", ",", "0.010512875909923476`", ",", 
     "0.05184240675806341`", ",", "0.35175644753919966`", ",", 
     "48.516301965252566`", ",", "0.39996644618251614`", ",", 
     "0.12630858108010712`", ",", "0.0647704802586162`", ",", 
     "0.04039800491669085`", ",", "0.0279618497611651`", ",", 
     "0.020629415625857468`", ",", "0.01588398937936708`", ",", 
     "0.012607229389373668`", ",", "0.010234511714146473`", ",", 
     "0.00845304748432673`", ",", "0.007076883871814427`", ",", 
     "0.005989161934337813`", ",", "0.005113080692131931`", ",", 
     "0.004396270747830435`", ",", "0.003801903856309056`", ",", 
     "0.0033033947047188175`", ",", "0.0028811169191757147`", ",", 
     "0.0025202977445132266`", ",", "0.00220962829105229`", ",", 
     "0.001940322333011737`", ",", "0.0017054643012238192`", ",", 
     "0.0014995484290974354`", ",", "0.0013181470840152888`", ",", 
     "0.0011576681601019507`", ",", "0.0010151749817866056`", ",", 
     "0.0008882508008601176`", ",", "0.0007748955779220846`", ",", 
     "0.0006734464530790801`", ",", "0.000582515814096395`", ",", 
     "0.0005009425852888282`", ",", "0.0004277535536591062`", ",", 
     "0.00036213239076190854`", ",", "0.0003033946313709142`", ",", 
     "0.00025096730683397343`", ",", "0.0002043722520049496`", ",", 
     "0.00016321234345599027`", ",", "0.00012716010677507158`", ",", 
     "0.0000959482686319079`", ",", "0.00006936193734102109`", ",", 
     "0.00004723218637475745`", ",", "0.000029430914930680847`", ",", 
     "0.00001586710662399852`", ",", "6.4866146062197895`*^-6", ",", 
     "0.0007302894362792241`", ",", "1.2465435600163434`*^-7"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->2137516391]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{"dataLombScargleExampleC", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "100"}], "]"}], ",", 
   RowBox[{"PairReturn", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->2131536521],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.0101`", ",", "0.0008640603937118155`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.020303061224489796`", ",", "0.010512875909923476`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.030506122448979593`", ",", "0.05184240675806341`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.04070918367346939`", ",", "0.35175644753919966`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05091224489795918`", ",", "48.516301965252566`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.061115306122448976`", ",", "0.39996644618251614`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.07131836734693878`", ",", "0.12630858108010712`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08152142857142856`", ",", "0.0647704802586162`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.09172448979591837`", ",", "0.04039800491669085`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10192755102040817`", ",", "0.0279618497611651`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.11213061224489795`", ",", "0.020629415625857468`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.12233367346938775`", ",", "0.01588398937936708`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.13253673469387756`", ",", "0.012607229389373668`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.14273979591836736`", ",", "0.010234511714146473`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.15294285714285713`", ",", "0.00845304748432673`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16314591836734693`", ",", "0.007076883871814427`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.17334897959183673`", ",", "0.005989161934337813`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.18355204081632653`", ",", "0.005113080692131931`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.19375510204081633`", ",", "0.004396270747830435`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2039581632653061`", ",", "0.003801903856309056`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2141612244897959`", ",", "0.0033033947047188175`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2243642857142857`", ",", "0.0028811169191757147`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2345673469387755`", ",", "0.0025202977445132266`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2447704081632653`", ",", "0.00220962829105229`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.2549734693877551`", ",", "0.001940322333011737`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2651765306122449`", ",", "0.0017054643012238192`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2753795918367347`", ",", "0.0014995484290974354`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2855826530612245`", ",", "0.0013181470840152888`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.29578571428571426`", ",", "0.0011576681601019507`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.3059887755102041`", ",", "0.0010151749817866056`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.31619183673469387`", ",", "0.0008882508008601176`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.3263948979591837`", ",", "0.0007748955779220846`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.33659795918367347`", ",", "0.0006734464530790801`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.34680102040816324`", ",", "0.000582515814096395`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.35700408163265307`", ",", "0.0005009425852888282`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.36720714285714284`", ",", "0.0004277535536591062`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.37741020408163267`", ",", "0.00036213239076190854`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.38761326530612245`", ",", "0.0003033946313709142`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.3978163265306122`", ",", "0.00025096730683397343`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.40801938775510205`", ",", "0.0002043722520049496`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.4182224489795918`", ",", "0.00016321234345599027`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.42842551020408165`", ",", "0.00012716010677507158`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.4386285714285714`", ",", "0.0000959482686319079`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.4488316326530612`", ",", "0.00006936193734102109`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.459034693877551`", ",", "0.00004723218637475745`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.4692377551020408`", ",", "0.000029430914930680847`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.4794408163265306`", ",", "0.00001586710662399852`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.4896438775510204`", ",", "6.4866146062197895`*^-6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.49984693877551023`", ",", "0.0007302894362792241`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.51005`", ",", "1.2465435600163434`*^-7"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->684445176]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "UpperFrequencyFactor",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1815892472],

Cell["\<\
UpperFrequencyFactor takes values \[GreaterEqual] 1,  by which to scale the \
upper Nyquist cutoff frequency and increase spectral resolution. It is \
recommended to set UpperFrequencyFactor close to 1. The default value is 1.\
\>", "ExampleText",
 CellID->804504089],

Cell["We consider the following example data:", "ExampleText",
 CellID->1064465213],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataLombScargleExampleB", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"0.05", "*", "2", " ", "\[Pi]", " ", "n"}], " ", "]"}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"0.2", "*", "2", " ", "\[Pi]", " ", "n"}], "]"}], "+", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "100"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->789150305],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1.0675779490134616`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0.7278086183364549`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "0.9536789206380839`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0.6335365746389896`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"-", "0.11489834329000259`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0.006156533841512601`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     RowBox[{"-", "0.08426533755151211`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", 
     RowBox[{"-", "0.83109222878111`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"-", "1.4990643682041376`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     RowBox[{"-", "0.7412354446540038`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     RowBox[{"-", "0.8179882014445794`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     RowBox[{"-", "1.6220820712548671`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     RowBox[{"-", "1.1531393898654456`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     RowBox[{"-", "1.1263059217689202`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "0.6619204248043064`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "0.8015354118357283`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "0.22196985147731096`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "0.38908174381158667`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "0.893067234642402`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "1.2575000410383497`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "2.3919461601891716`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "2.0208318989057577`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", 
     RowBox[{"-", "0.093700173450182`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", 
     RowBox[{"-", "1.1571907284976395`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "0.4851965665022021`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "0.6880540696121924`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "0.7175176998208783`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", 
     RowBox[{"-", "2.376720319220979`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", 
     RowBox[{"-", "0.8076204491189172`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", 
     RowBox[{"-", "0.44633880396082914`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", 
     RowBox[{"-", "0.17463662627648402`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", 
     RowBox[{"-", "1.1986142496754595`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", 
     RowBox[{"-", "0.6354179267814486`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", 
     RowBox[{"-", "1.0412111209935873`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", 
     RowBox[{"-", "0.739799836341102`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "0.034245348833988665`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", 
     RowBox[{"-", "0.10379465193736703`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37", ",", 
     RowBox[{"-", "0.004217866863015618`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", 
     RowBox[{"-", "0.5026153181619186`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "0.9464253530564837`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "2.9940665214953572`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41", ",", "1.6743639483384984`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", 
     RowBox[{"-", "0.3425917226763716`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43", ",", 
     RowBox[{"-", "0.9545577876333456`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44", ",", 
     RowBox[{"-", "0.10428198647409392`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "0.19160653632408708`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"46", ",", "0.6279815764645997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"47", ",", 
     RowBox[{"-", "0.42089047655105394`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", 
     RowBox[{"-", "1.6272570268930107`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", "0.2178358611622514`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "0.06746130510419635`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", 
     RowBox[{"-", "1.3345104135156158`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"52", ",", 
     RowBox[{"-", "1.8542999195719776`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"53", ",", 
     RowBox[{"-", "1.9804527923247461`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"54", ",", 
     RowBox[{"-", "0.4475999720117394`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "0.11539357311048115`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56", ",", "0.6220434119021847`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"57", ",", 
     RowBox[{"-", "0.33461434394061185`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"58", ",", 
     RowBox[{"-", "0.9660548390738297`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"59", ",", "2.2232422211584275`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "1.7002211008328616`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"61", ",", "0.6051905518568592`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"62", ",", "0.18093760348104748`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"63", ",", 
     RowBox[{"-", "0.7912507558378891`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"64", ",", "1.2507156859378337`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"65", ",", "1.3022150058108721`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"66", ",", "0.48617276324364433`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"67", ",", 
     RowBox[{"-", "2.2696753155563254`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"68", ",", 
     RowBox[{"-", "1.7985763135510338`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"69", ",", 
     RowBox[{"-", "1.5286434036064727`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", "0.6944777581878459`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"71", ",", 
     RowBox[{"-", "0.4506926465475578`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"72", ",", 
     RowBox[{"-", "1.8754613221953302`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"73", ",", 
     RowBox[{"-", "0.4493304516330636`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"74", ",", 
     RowBox[{"-", "0.5334879889344232`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"75", ",", "0.16970947846648476`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"76", ",", "0.29289157448031256`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"77", ",", 
     RowBox[{"-", "0.4559799489033727`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"78", ",", 
     RowBox[{"-", "0.5288400694194777`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"79", ",", "1.56686456030047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "2.1681184760726135`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"81", ",", "1.8167019062239647`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"82", ",", 
     RowBox[{"-", "0.797465471675034`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"83", ",", 
     RowBox[{"-", "0.5634260567756959`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", 
     RowBox[{"-", "0.36773006913955253`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"85", ",", "1.3805844987740032`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"86", ",", 
     RowBox[{"-", "0.6890928565564611`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"87", ",", 
     RowBox[{"-", "1.1010421427824622`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"88", ",", 
     RowBox[{"-", "2.487246243372416`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"89", ",", 
     RowBox[{"-", "1.2649416229317876`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "0.02711436541903023`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"91", ",", 
     RowBox[{"-", "0.9210981011954935`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"92", ",", 
     RowBox[{"-", "2.1905416040018757`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"93", ",", 
     RowBox[{"-", "0.7151917929768037`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"94", ",", "0.855394641042613`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"95", ",", "0.7108213391591807`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"96", ",", "0.030618770647176996`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"97", ",", 
     RowBox[{"-", "1.1667054566825033`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"98", ",", "0.17023288745524146`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"99", ",", "0.378105439278031`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", "2.028683964910932`"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->1500557766]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"LombScargle", "[", 
    RowBox[{"dataLombScargleExampleB", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "100"}], "]"}], ",", 
     RowBox[{"PairReturn", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"UpperFrequencyFactor", "\[Rule]", " ", "1"}]}], "]"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1446038884],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAAU2EDU+vhD9rk931IgjDPycZ319T
ypQ/2X/3Erl5yT/OC/w4/zyfP4hhxjloXrE/On8MidXXpD/YwFltn8nVP434
mnUrEao/G7NujKbHMUDgcSligUqvP2Fh0YSL2eU/mvVbp+tBsj8uBOGWFxC/
P0Myo52W3rQ/WR4eJAm1jD/tbuqTQXu3P45QmUlw5tw/l6sxiuwXuj/OLYp5
L2fQP0DoeICXtLw/EhDNqVFq1j/qJMB2QlG/P/U+bgJTI9s/yrCDtvb2wD8G
wvbqj+PnPx9PpzFMRcI/cG5G9inemj9z7cqsoZPDP1erJZwsafA/yIvuJ/fh
xD/ylYyOrhvAPx0qEqNMMMY/aOdFijTJyT9yyDUeon7HP1RmlKSFPOA/x2ZZ
mffMyD8ntK6DkkoQQBsFfRRNG8o/6csomEy3J0Bwo6CPomnLP+/sL7QEB+Q/
xUHECvi3zD+tgpjgN63iPxrg54VNBs4/+jUQkrjkwz9vfgsBo1TPP5we5qyZ
luU/Yo4XPnxR0D+kLQaSMV/SP4xdqfum+NA/czduIYo30D+3LDu50Z/RP81n
aBTr6Nc/4fvMdvxG0j9lW2Iz4yvSPwvLXjQn7tI/iBjs5dYQ1D82mvDxUZXT
P7j5b5vdk7Q/YGmCr3w81D/vwiY0ulLAP4s4FG2n49Q/AGKU5/KAwz+1B6Yq
0orVP3rnkvqVc8g/39Y36Pwx1j+COazyF2jSPwqmyaUn2dY/fQHGZt175z80
dVtjUoDXP6CauQIZabk/X0TtIH0n2D/f+hm4cHKmP4kTf96nztg/DYilyXcE
xz+z4hCc0nXZPxwylEERy4I/3rGiWf0c2j+mnFjn037JPwiBNBcoxNo/hyML
+86M0z8zUMbUUmvbPxCuR0/ElN4/XR9Ykn0S3D/dfAo955TCP4fu6U+oudw/
i0qxyc5jrz+yvXsN02DdP8ed5IQa69M/3IwNy/0H3j8ZSU8/bNTdPwdcn4go
r94/vV2I9I+V0T8xKzFGU1bfPz8L8a4xG9U/XPrCA3793z9mme9CyRCwP8Nk
qmBUUuA/9OhiLWqS0z/4LJK4
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.51005}, {0, 17.77988507940891}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[3]=",
 CellID->538351120]
}, Open  ]],

Cell["\<\
Changing the upper Nyquist frequency has a direct effect on the periodogram:\
\>", "ExampleText",
 CellID->277030772],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"LombScargle", "[", 
    RowBox[{"dataLombScargleExampleB", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "100"}], "]"}], ",", 
     RowBox[{"PairReturn", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"UpperFrequencyFactor", "\[Rule]", " ", "1.2"}]}], "]"}], ",", 
   " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->943646889],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAAU2EDU+vhD9rk931IgjDP4rOohIR
7JY/Lr8Emu8Q2z9Ku0FPPcChP9FqhC3CuvQ/Tg8yFXIKqD+rjfDZMJEsQFNj
ItumVK4/vO0TokXkxD+sW4nQbU+yPwTs6fcTzsA/roWBM4h0tT92eRGyBIy2
P7GveZaimbg/NE1hZlNs4D+z2XH5vL67P5/XOmTxjsU/tQNqXNfjvj+M/5Ot
Lw/ZP9wWsd94BME/N8o9v9gI6D/dKy0RBpfCP04tBEYRVNY/3kCpQpMpxD8M
Ike4TGfEP99VJXQgvMU/YP1QBH82uj/haqGlrU7HP9TZSAGn1tM/4n8d1zrh
yD9S/Elq7jgWQOOUmQjIc8o/y6010jOREkDkqRU6VQbMP7RzFMYXm7w/5b6R
a+KYzT/JsV6B5xnWP+fTDZ1vK88/6EF1OrXo4z909ERn/l7QP/2Vc+oyDdI/
9P4CAEUo0T/6zhPBArfXP3UJwZiL8dE/9l/uiB7IwD/2E38x0rrSP9RE3Zgc
7dU/dh49yhiE0z+k+0eIbWvFP/co+2JfTdQ/hF3jnuQ1yz93M7n7pRbVP68r
mdlcpLs/+D13lOzf1T8wePr06K7sP3lINS0zqdY/900YXUdI3T/5UvPFeXLX
P/isa1UyaLg/el2xXsA72D9NxMGUbfSTP/pnb/cGBdk/pFRpguvb0z97ci2Q
Tc7ZP1g/3IBMDo8//HzrKJSX2j9+kiPjkJzYP3yHqcHaYNs/8kdgXGCx3T/9
kWdaISrcP9W7Le4QstM/fZwl82fz3D8sZjz7nPC2P/6m44uuvN0/2Q66tmn/
1D9/saEk9YXeP0qZs/qntuw//7tfvTtP3z+O5WAa6hnXP0DjDitBDOA/q9SJ
HQWOsD+A6G135HDgPwpXJBx3cNQ/wO3Mw4fV4D8IghnV5HvzPwHzKxArOuE/
fHSIavgV2z9B+Ipczp7hP3hiSmkGb6k/gf3pqHED4j9FNNez6d2WP8ICSfUU
aOI/TdDrIK9I1z8CCKhBuMziP3uY9QGNft4/Qg0Hjlsx4z/SiZAIlteOP4MS
Ztr+leM/9pRVpD+oyT/7xZkX
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.6120599999999999}, {0, 14.283575831045559`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1034350523]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Properties & Relations",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->2123667759],

Cell[TextData[{
 "The inbuilt ",
 ButtonBox["Periodogram",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Periodogram"],
 " function also gives similar results to a LombScargle function for a series \
that is evenly sampled without missing data. The results agree to each other \
up to normalization factors."
}], "ExampleText",
 CellID->1409155971],

Cell[TextData[{
 "In calculating the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Autocorrelation"]], "paclet:MathIOmica/ref/Autocorrelation"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " as an inverse Fourier transform of a periodogram a modified version of the \
LombScargle function is used, named ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["InverseAutocovariance"]], 
    "paclet:MathIOmica/ref/InverseAutocovariance"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "ExampleText",
 CellID->6451157]
}, Closed]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Autocorrelation"]], "paclet:MathIOmica/ref/Autocorrelation"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["InverseAutocovariance"]], 
    "paclet:MathIOmica/ref/InverseAutocovariance"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Tutorials"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["MathIOmica Tutorial"]], 
   "paclet:MathIOmica/tutorial/MathIOmicaTutorial"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->341631938],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["MathIOmica Dynamic Transcriptome"]], 
   "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->1023267351],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["MathIOmica Guide"]], "paclet:MathIOmica/guide/MathIOmicaGuide"},
  
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->1959639973],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Links"
}], "RelatedLinksSection",
 WholeCellGroupOpener->True,
 CellID->1584193535],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["MathIOmicaGuide"]], "paclet:MathIOmica/guide/MathIOmicaGuide"},
  "RefLink",
  BaseStyle->"RelatedLinks"]], "RelatedLinks",
 CellID->1038487239],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["MathIOmicaOverview"]], 
   "paclet:MathIOmica/tutorial/MathIOmicaOverview"},
  "RefLink",
  BaseStyle->"RelatedLinks"]], "RelatedLinks",
 CellID->1462652359]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"LombScargle",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:MathIOmica/guide/MathIOmica", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2021, 1, 7, 17, 13, 55.534037}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "MathIOmica`SpectralAnalysis`", "keywords" -> {}, "specialkeywords" -> {},
     "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Math I Omica Package Symbol", "language" -> "en", "paclet" -> 
    "MathIOmica Package", "status" -> "None", "summary" -> 
    "LombScargle[data, setTimes] calculates the Lomb-Scargle power spectrum \
for time series data that runs over specified setTimes.", "synonyms" -> {}, 
    "tabletags" -> {}, "title" -> "LombScargle", "titlemodifier" -> "", 
    "windowtitle" -> "LombScargle", "type" -> "Symbol", "uri" -> 
    "MathIOmica/ref/LombScargle", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> "", "NewStyles" -> False},
CellContext->"Global`",
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  TaggingRules -> {"NewStyles" -> False}, FrontEndVersion -> 
  "12.1 for Mac OS X x86 (64-bit) (June 19, 2020)", StyleDefinitions -> 
  "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[21094, 659, 269, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"c2a75a9c-02fd-4535-b0e2-8e483c84b3b7",
   CellTags->"PrimaryExamplesSection",
   CellID->1965427719]},
 "RasterizedOutput"->{
  Cell[74773, 1992, 48591, 805, 70, "Output",ExpressionUUID->"ed7dd850-86a7-4e06-9b6d-cf30607427e2",
   CellTags->"RasterizedOutput",
   CellID->1859815819]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 222840, 5402},
 {"RasterizedOutput", 223040, 5406}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[583, 21, 4688, 116, 70, "AnchorBarGrid",ExpressionUUID->"c64fa695-2550-4f2d-93d0-90df57476002",
 CellID->1],
Cell[CellGroupData[{
Cell[5296, 141, 168, 6, 70, "ObjectNameGrid",ExpressionUUID->"a229f265-12bb-404c-b2f1-2dc8d75b4094"],
Cell[5467, 149, 603, 18, 70, "Usage",ExpressionUUID->"1b7f4ef2-2dcf-49d0-8389-acd1b8c28cc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6107, 172, 630, 19, 70, "NotesSection",ExpressionUUID->"1d97239f-79c4-4d1e-81ad-35adc961d98e",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1344929542],
Cell[6740, 193, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"328fe99e-f014-4d3c-8d4a-b7221688e726"],
Cell[6774, 195, 353, 9, 70, "Notes",ExpressionUUID->"84a7a247-0f5e-4d24-975e-f5f71d37dccf",
 CellID->7572516],
Cell[7130, 206, 2148, 63, 70, "2ColumnTableMod",ExpressionUUID->"6a2c7238-453e-43b7-af73-89c89145f304",
 CellID->1390286253],
Cell[9281, 271, 325, 9, 70, "Notes",ExpressionUUID->"607cb3ce-7f76-4c50-96f3-c6b3165e3b6c",
 CellID->1415453320],
Cell[9609, 282, 53, 0, 70, "Notes",ExpressionUUID->"f078b8e2-1f94-48a9-aa16-3793511431c8"],
Cell[9665, 284, 2119, 48, 70, "3ColumnTableMod",ExpressionUUID->"f6952062-8076-4496-aa99-49e3aaf664a1",
 CellID->1072447982],
Cell[11787, 334, 1343, 43, 70, "Notes",ExpressionUUID->"5803a857-ee13-4f1d-b3cb-5cc0f3c49faa",
 CellID->383809252],
Cell[CellGroupData[{
Cell[13155, 381, 203, 5, 70, "ExampleSection",ExpressionUUID->"2b01db09-caf2-4577-b925-ced699b7c2d6",
 CellID->790815685],
Cell[13361, 388, 4810, 162, 70, "Notes",ExpressionUUID->"3b833ae6-375c-45f7-8ae4-e7e599c4d9fc",
 CellID->192747134],
Cell[18174, 552, 1781, 62, 70, "Notes",ExpressionUUID->"55c23c4d-794c-4ff8-b823-2df0f770de80",
 CellID->546799514]
}, Open  ]],
Cell[CellGroupData[{
Cell[19992, 619, 203, 5, 70, "ExampleSection",ExpressionUUID->"00619383-14a2-486d-80e7-6abc8689a2c1",
 CellID->462926512],
Cell[20198, 626, 388, 11, 70, "Notes",ExpressionUUID->"ef3cf35b-f07b-4840-9bbe-9200c172a7fa",
 CellID->2116251185],
Cell[20589, 639, 422, 12, 70, "Notes",ExpressionUUID->"7301822f-15b3-457c-9bb3-d2850a2227a9",
 CellID->1079495891]
}, Open  ]],
Cell[21026, 654, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"60aceb75-9d1e-4618-872d-5fc0c534d36c"]
}, Closed]],
Cell[CellGroupData[{
Cell[21094, 659, 269, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"c2a75a9c-02fd-4535-b0e2-8e483c84b3b7",
 CellTags->"PrimaryExamplesSection",
 CellID->1965427719],
Cell[CellGroupData[{
Cell[21388, 673, 195, 6, 70, "ExampleSection",ExpressionUUID->"6ddb6c14-eea1-47d1-aceb-cfe1d83bf131",
 CellID->350215079],
Cell[CellGroupData[{
Cell[21608, 683, 208, 6, 70, "ExampleSubsection",ExpressionUUID->"a5596150-9f0d-4aca-9f64-ae3743da3e14",
 CellID->1212109268],
Cell[21819, 691, 80, 1, 70, "ExampleText",ExpressionUUID->"1925d5bd-66ac-4b69-aaac-8844beb3ab08",
 CellID->191603639],
Cell[21902, 694, 120, 3, 70, "Input",ExpressionUUID->"45c629aa-3980-494e-8458-c610d6e051fc",
 CellID->2017647728]
}, Closed]],
Cell[CellGroupData[{
Cell[22059, 702, 225, 6, 70, "ExampleSubsection",ExpressionUUID->"9f93206c-82c4-4d6d-adb0-e70a8a85324d",
 CellID->215934448],
Cell[22287, 710, 88, 1, 70, "ExampleText",ExpressionUUID->"002e4108-6994-4ce9-9c0f-cc1e4b197e08",
 CellID->1448246258],
Cell[22378, 713, 668, 19, 70, "Input",ExpressionUUID->"ee8cf9fa-d7ff-4251-98d7-429482065d4e",
 CellID->1596937693],
Cell[23049, 734, 269, 9, 70, "ExampleText",ExpressionUUID->"7dd92c5f-f581-4418-822a-669250de8111",
 CellID->96589381],
Cell[CellGroupData[{
Cell[23343, 747, 130, 3, 70, "Input",ExpressionUUID->"70379e28-f10a-491e-8c9e-1d5e230c0d06",
 CellID->664713106],
Cell[23476, 752, 4652, 97, 70, "Output",ExpressionUUID->"df9ac3e8-1dd9-4f5e-b894-b9eb3064d28c",
 CellID->1114120529]
}, Open  ]],
Cell[28143, 852, 106, 2, 70, "ExampleText",ExpressionUUID->"b72d15a8-3327-46e3-af6f-c81e4edb73e7",
 CellID->2114927956],
Cell[CellGroupData[{
Cell[28274, 858, 263, 7, 70, "Input",ExpressionUUID->"816dee31-7732-4f89-9e28-b7c6d71531a4",
 CellID->328151850],
Cell[28540, 867, 6500, 109, 70, "Output",ExpressionUUID->"98ffbd1d-c850-4463-93f1-7a112fb24495",
 CellID->39696330]
}, Open  ]],
Cell[35055, 979, 136, 4, 70, "ExampleText",ExpressionUUID->"d24c08ec-f0f6-4242-ba09-cc58ec2bacb4",
 CellID->333466425],
Cell[CellGroupData[{
Cell[35216, 987, 239, 6, 70, "Input",ExpressionUUID->"c28d4fce-53e0-4dba-bed7-9f97158bab2c",
 CellID->273397985],
Cell[35458, 995, 3884, 85, 70, "Output",ExpressionUUID->"bc56a591-8997-42b5-a53f-bab5b3cd8761",
 CellID->631154212]
}, Open  ]],
Cell[39357, 1083, 166, 4, 70, "ExampleText",ExpressionUUID->"afc84f73-6e77-4d56-8056-00a50fafa74d",
 CellID->1564268490],
Cell[39526, 1089, 695, 19, 70, "Input",ExpressionUUID->"9d94c047-92c3-441b-bb45-c5e790acf7ba",
 CellID->1160682384],
Cell[40224, 1110, 287, 8, 70, "Input",ExpressionUUID->"e0c096ef-16ac-47ae-b63a-593bcc1585d9",
 CellID->1393251900],
Cell[40514, 1120, 159, 4, 70, "ExampleText",ExpressionUUID->"35b0a4b7-f6fc-42c5-84b0-3dfec44c1444",
 CellID->1571401238],
Cell[CellGroupData[{
Cell[40698, 1128, 240, 6, 70, "Input",ExpressionUUID->"99e7bd61-4193-463a-b0e1-ba88050f93b8",
 CellID->712341784],
Cell[40941, 1136, 3969, 88, 70, "Output",ExpressionUUID->"37c3d70a-f260-43fb-9fba-c9e74b2ee77c",
 CellID->826520156]
}, Open  ]],
Cell[44925, 1227, 125, 3, 70, "ExampleText",ExpressionUUID->"74674c6e-3905-4487-a6f5-4923d3759d1a",
 CellID->2144880304],
Cell[45053, 1232, 463, 13, 70, "Input",ExpressionUUID->"c660e085-e11c-447c-94cc-dfd30c0e4fe3",
 CellID->373019661],
Cell[45519, 1247, 136, 4, 70, "ExampleText",ExpressionUUID->"3357d548-da51-4c06-a171-ce31ba2ad8d8",
 CellID->748962281],
Cell[CellGroupData[{
Cell[45680, 1255, 487, 14, 70, "Input",ExpressionUUID->"985d00ae-985a-4fc7-9e80-2e5b06a7753d",
 CellID->129374484],
Cell[46170, 1271, 3810, 75, 70, "Output",ExpressionUUID->"a620303c-b5ea-4f6b-9d5b-bfe6985d7763",
 CellID->1019576379]
}, Open  ]],
Cell[49995, 1349, 297, 8, 70, "Input",ExpressionUUID->"29f2c498-b14a-44dc-a702-88beed4d82ab",
 CellID->1630236248],
Cell[CellGroupData[{
Cell[50317, 1361, 242, 6, 70, "Input",ExpressionUUID->"779cfe92-501e-4e4a-acdd-00726152b8ca",
 CellID->456843262],
Cell[50562, 1369, 2841, 68, 70, "Output",ExpressionUUID->"d9cd9fc5-2f73-405c-b558-a8ef3c0b8e25",
 CellID->969396563]
}, Open  ]],
Cell[53418, 1440, 182, 4, 70, "ExampleText",ExpressionUUID->"1c87d9d5-7b42-4bf8-9a69-6b746d3bfa72",
 CellID->1990697148],
Cell[53603, 1446, 533, 16, 70, "Input",ExpressionUUID->"fa7b2d56-961a-4986-99bf-9e8ffce7a73c",
 CellID->702081311],
Cell[54139, 1464, 67, 1, 70, "ExampleText",ExpressionUUID->"38a5132a-d700-4902-b538-f4633f4a439a",
 CellID->1746016687],
Cell[54209, 1467, 231, 7, 70, "Input",ExpressionUUID->"ddb49a28-28a9-4c6b-a403-0a34d0915b19",
 CellID->965922664],
Cell[CellGroupData[{
Cell[54465, 1478, 274, 7, 70, "Input",ExpressionUUID->"3534126e-a241-4596-b0d2-786d640e7ef4",
 CellID->2091453125],
Cell[54742, 1487, 3321, 59, 70, "Output",ExpressionUUID->"f7dbdefb-4373-4d44-941a-d249ad3688d6",
 CellID->163777802]
}, Open  ]],
Cell[CellGroupData[{
Cell[58100, 1551, 243, 6, 70, "Input",ExpressionUUID->"33571cb5-c867-4dff-9b00-a2c4f6f0bb3d",
 CellID->1252623409],
Cell[58346, 1559, 2840, 68, 70, "Output",ExpressionUUID->"868d9b34-6791-4dd1-9652-8fd6fd4c2b60",
 CellID->1822363980]
}, Open  ]],
Cell[61201, 1630, 100, 1, 70, "ExampleText",ExpressionUUID->"f60908ca-f330-4f36-a57f-e72378355474",
 CellID->2001066580],
Cell[61304, 1633, 264, 8, 70, "Input",ExpressionUUID->"9cdff2b0-ba89-4a3c-b202-ad689abf3df2",
 CellID->139997789],
Cell[CellGroupData[{
Cell[61593, 1645, 268, 7, 70, "Input",ExpressionUUID->"01cf6dc0-357a-45b0-88ed-12e255a52980",
 CellID->1100692467],
Cell[61864, 1654, 3542, 61, 70, "Output",ExpressionUUID->"0e5e2b1f-e69d-4d31-924e-c6d87964450c",
 CellID->90631262]
}, Open  ]],
Cell[CellGroupData[{
Cell[65443, 1720, 361, 11, 70, "Input",ExpressionUUID->"e46c80f7-f142-4b37-89b7-a5ff8e30feaf",
 CellID->422403271],
Cell[65807, 1733, 3048, 70, 70, "Output",ExpressionUUID->"c93f30d3-ad31-4c3a-aa24-031e7a31fc72",
 CellID->2013962864]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[68904, 1809, 209, 6, 70, "ExampleSubsection",ExpressionUUID->"55524755-4913-4562-a414-d8981133e861",
 CellID->501752921],
Cell[69116, 1817, 158, 2, 70, "ExampleText",ExpressionUUID->"c7fe05b1-1e50-4775-9a11-36812844d145",
 CellID->1672610443],
Cell[69277, 1821, 370, 12, 70, "Input",ExpressionUUID->"e01ad16e-5673-4d55-96a1-20a9eb60ee59",
 CellID->506148528],
Cell[69650, 1835, 271, 8, 70, "Input",ExpressionUUID->"fe777e97-3e78-4534-9895-87f4a117bb7a",
 CellID->1488994348],
Cell[69924, 1845, 130, 4, 70, "ExampleText",ExpressionUUID->"31a77729-f38f-47a5-b350-c30b830e8b0e",
 CellID->747066869],
Cell[CellGroupData[{
Cell[70079, 1853, 218, 6, 70, "Input",ExpressionUUID->"118b3d3f-0f3c-453c-8af4-811d5f9780de",
 CellID->864832749],
Cell[70300, 1861, 2736, 66, 70, "Output",ExpressionUUID->"1dcbea23-9686-44d8-aff5-5fa7804a9f8c",
 CellID->15262846]
}, Open  ]],
Cell[73051, 1930, 132, 4, 70, "ExampleText",ExpressionUUID->"f05bf4d9-d509-4ee5-9445-917b4d056d08",
 CellID->949807603],
Cell[73186, 1936, 562, 17, 70, "Input",ExpressionUUID->"3a5a82c8-e2fc-43ad-8847-1477b0f916d2",
 CellID->901068345],
Cell[73751, 1955, 99, 1, 70, "ExampleText",ExpressionUUID->"cc58e665-7e69-47dc-a494-856502dfc55b",
 CellID->1702219222],
Cell[73853, 1958, 416, 12, 70, "Input",ExpressionUUID->"8c0f8e68-6a65-41f8-8495-273969352487",
 CellID->200995771],
Cell[74272, 1972, 127, 3, 70, "ExampleText",ExpressionUUID->"2af01aea-3d3c-488f-9b33-d8509129d3d1",
 CellID->893839631],
Cell[CellGroupData[{
Cell[74424, 1979, 346, 11, 70, "Input",ExpressionUUID->"15b91696-ddd8-48dd-8c1c-785ea5f9d83d",
 CellID->657761605],
Cell[74773, 1992, 48591, 805, 70, "Output",ExpressionUUID->"ed7dd850-86a7-4e06-9b6d-cf30607427e2",
 CellTags->"RasterizedOutput",
 CellID->1859815819]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[123413, 2803, 208, 6, 70, "ExampleSubsection",ExpressionUUID->"ab39ae4c-ef3c-40f1-b1f0-cf438811a088",
 CellID->669071126],
Cell[123624, 2811, 157, 2, 70, "ExampleText",ExpressionUUID->"2dd6d7b7-1624-4ac3-840f-3543cc675178",
 CellID->1332757065],
Cell[CellGroupData[{
Cell[123806, 2817, 262, 9, 70, "Input",ExpressionUUID->"cab07715-67bf-4d8b-81d2-13f9a2dc075c",
 CellID->22686726],
Cell[124071, 2828, 4059, 73, 70, "Output",ExpressionUUID->"84431965-3cb7-46eb-8b48-9c9c77bfbae8",
 CellID->519511376]
}, Open  ]],
Cell[128145, 2904, 64, 1, 70, "ExampleText",ExpressionUUID->"6e6744cd-4f0b-4d6c-b414-d3513390abfd",
 CellID->463738535],
Cell[CellGroupData[{
Cell[128234, 2909, 124, 3, 70, "Input",ExpressionUUID->"3c008663-0ade-4887-94c5-ad418e323c13",
 CellID->549191250],
Cell[128361, 2914, 2869, 60, 70, "Output",ExpressionUUID->"1f3ff9eb-bc14-42a5-adbe-cdf03b76c170",
 CellID->674852705]
}, Open  ]],
Cell[131245, 2977, 81, 1, 70, "ExampleText",ExpressionUUID->"dd0180c5-0672-4d13-a0ea-b0485bc9a7d0",
 CellID->157702565],
Cell[131329, 2980, 518, 16, 70, "Input",ExpressionUUID->"3874278a-c008-4e42-829e-9ba7366a145c",
 CellID->1628329607],
Cell[CellGroupData[{
Cell[131872, 3000, 196, 5, 70, "Input",ExpressionUUID->"6e0614f5-98cf-4348-bc77-90518bbe25b4",
 CellID->723587812],
Cell[132071, 3007, 2481, 55, 70, "Output",ExpressionUUID->"083c829e-f74b-4cc5-927e-ff804ef41939",
 CellID->382490007]
}, Open  ]],
Cell[134567, 3065, 148, 4, 70, "ExampleText",ExpressionUUID->"76df458a-882d-4997-8947-01259dac6c31",
 CellID->1090992178],
Cell[134718, 3071, 508, 16, 70, "Input",ExpressionUUID->"2e7a39ce-8cc4-4f41-b10a-b72d8ad94977",
 CellID->1951591128],
Cell[135229, 3089, 436, 12, 70, "Input",ExpressionUUID->"1fc65ffb-2554-433b-bddb-72f0632c6100",
 CellID->1874347665],
Cell[135668, 3103, 119, 3, 70, "ExampleText",ExpressionUUID->"702c2f01-3dad-4c9f-888a-aa1aace7a70a",
 CellID->1469687946],
Cell[CellGroupData[{
Cell[135812, 3110, 359, 11, 70, "Input",ExpressionUUID->"dde0d5cb-8f24-426d-bbd5-d9a12953a9b3",
 CellID->682541608],
Cell[136174, 3123, 14565, 307, 70, "Output",ExpressionUUID->"b671411e-7c8d-4455-a812-1438a96b3c13",
 CellID->473359262]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[150800, 3437, 168, 5, 70, "ExampleSection",ExpressionUUID->"21ffa566-bbaf-461d-9e87-0761e0f9a948"],
Cell[CellGroupData[{
Cell[150993, 3446, 202, 6, 70, "ExampleSubsection",ExpressionUUID->"201939d1-353b-483c-9523-5ead21b93f7a",
 CellID->957833532],
Cell[151198, 3454, 120, 3, 70, "Input",ExpressionUUID->"62226be6-5b77-47a2-8126-2bbee72e3b54",
 CellID->1673072918],
Cell[151321, 3459, 201, 4, 70, "ExampleText",ExpressionUUID->"8751a69d-0911-4f32-b4e0-5759bce44b14",
 CellID->770754412],
Cell[CellGroupData[{
Cell[151547, 3467, 323, 9, 70, "Input",ExpressionUUID->"3a6eb9c6-7561-4d27-b817-9f9c48d20a71",
 CellID->448043780],
Cell[151873, 3478, 3820, 75, 70, "Output",ExpressionUUID->"95277eb1-1147-4543-af70-4a4af7f67076",
 CellID->1316120810]
}, Open  ]],
Cell[CellGroupData[{
Cell[155730, 3558, 275, 7, 70, "Input",ExpressionUUID->"9996d8bf-5de9-4fe4-8847-4b24b9b8d586",
 CellID->1744837731],
Cell[156008, 3567, 3532, 55, 70, "Output",ExpressionUUID->"b19bb974-4f3c-4452-8faa-917defc06747",
 CellID->95276244]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[159589, 3628, 208, 6, 70, "ExampleSubsection",ExpressionUUID->"52fb9745-24fd-499e-abd8-3f97a0e79acb",
 CellID->1306676671],
Cell[159800, 3636, 119, 3, 70, "Input",ExpressionUUID->"51b757c3-ed7f-4a42-a69b-178fc7a1e9d2",
 CellID->185659008],
Cell[159922, 3641, 184, 4, 70, "ExampleText",ExpressionUUID->"b8d65dd8-5dfd-42dc-8ea1-4b01dbaf784c",
 CellID->1147035275],
Cell[160109, 3647, 347, 10, 70, "Input",ExpressionUUID->"83eea6b3-0358-4b79-afbe-6c11c5fcceec",
 CellID->261167806],
Cell[CellGroupData[{
Cell[160481, 3661, 368, 10, 70, "Input",ExpressionUUID->"f828af49-e04c-489a-b031-2e4b4648fab3",
 CellID->1149856249],
Cell[160852, 3673, 2838, 68, 70, "Output",ExpressionUUID->"2c2c2bc1-8411-47bc-ad66-e7b55ca31c1f",
 CellID->237967142]
}, Open  ]],
Cell[CellGroupData[{
Cell[163727, 3746, 442, 12, 70, "Input",ExpressionUUID->"a11bec55-ed6b-43f9-8681-532b3f3a3431",
 CellID->542729272],
Cell[164172, 3760, 2840, 68, 70, "Output",ExpressionUUID->"c7cbad05-80dd-49ae-98fb-c557b9fa8f71",
 CellID->1861971664]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[167061, 3834, 183, 5, 70, "ExampleSubsection",ExpressionUUID->"45bd5187-cf45-46bb-a4eb-a4828843cf96"],
Cell[167247, 3841, 120, 3, 70, "Input",ExpressionUUID->"dce93039-c5c4-4414-8cfe-76aefb0bc16d",
 CellID->1198833286],
Cell[167370, 3846, 315, 7, 70, "ExampleText",ExpressionUUID->"d8b8dc0e-0e4a-4cb4-8478-d20ad86c6b0a",
 CellID->960868809],
Cell[CellGroupData[{
Cell[167710, 3857, 635, 18, 70, "Input",ExpressionUUID->"73ca766b-51e2-469d-83c5-9a1ccee16a96",
 CellID->1230757186],
Cell[168348, 3877, 9025, 256, 70, "Output",ExpressionUUID->"65ebb8c5-8d5d-429e-a44d-57aff57d0952",
 CellID->203457219]
}, Open  ]],
Cell[177388, 4136, 114, 3, 70, "ExampleText",ExpressionUUID->"b07ca9b1-38ed-422e-afcc-3c6a2e584b8e",
 CellID->550221109],
Cell[CellGroupData[{
Cell[177527, 4143, 447, 11, 70, "Input",ExpressionUUID->"13457da8-4b97-47f9-a55f-d90db1383fde",
 CellID->104585453],
Cell[177977, 4156, 2839, 68, 70, "Output",ExpressionUUID->"e1400289-c45a-4f03-9dbe-f089a9b5041d",
 CellID->1106814008]
}, Open  ]],
Cell[180831, 4227, 132, 4, 70, "ExampleText",ExpressionUUID->"981428cc-d86e-4556-a547-4ab5816a5a67",
 CellID->808006743],
Cell[CellGroupData[{
Cell[180988, 4235, 448, 11, 70, "Input",ExpressionUUID->"b60c82b5-46ee-4fe7-846c-73e5facd2c0a",
 CellID->1220508533],
Cell[181439, 4248, 3852, 85, 70, "Output",ExpressionUUID->"caf36868-1dd2-4e7c-8553-c72c7dd82d04",
 CellID->1211213665]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[185340, 4339, 196, 6, 70, "ExampleSubsection",ExpressionUUID->"c8858dda-c416-43d3-be29-addffdb06ff6",
 CellID->24596258],
Cell[185539, 4347, 119, 3, 70, "Input",ExpressionUUID->"5ef266eb-df44-438c-bb79-097123ae3336",
 CellID->700424161],
Cell[185661, 4352, 254, 5, 70, "ExampleText",ExpressionUUID->"cccc0728-e2be-470d-b818-4852e2108f57",
 CellID->748060486],
Cell[CellGroupData[{
Cell[185940, 4361, 324, 9, 70, "Input",ExpressionUUID->"e99d12ff-66d2-493e-9857-41d446aeaba7",
 CellID->1724898649],
Cell[186267, 4372, 3824, 75, 70, "Output",ExpressionUUID->"5f3ec0ef-d361-4641-81be-255f58b4c72d",
 CellID->1499218583]
}, Open  ]],
Cell[CellGroupData[{
Cell[190128, 4452, 271, 7, 70, "Input",ExpressionUUID->"5f7beee7-48bb-4df8-872d-48f0bff34566",
 CellID->1558022829],
Cell[190402, 4461, 3408, 59, 70, "Output",ExpressionUUID->"8916a351-f560-4d1e-826b-82b1c8046daa",
 CellID->2137516391]
}, Open  ]],
Cell[CellGroupData[{
Cell[193847, 4525, 270, 7, 70, "Input",ExpressionUUID->"336b33ea-4c60-4e1d-917f-00b1c5ae75a8",
 CellID->2131536521],
Cell[194120, 4534, 5146, 146, 70, "Output",ExpressionUUID->"b6ba2c1c-6433-4e0b-8ac3-5b30414bb85f",
 CellID->684445176]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[199315, 4686, 187, 5, 70, "ExampleSubsection",ExpressionUUID->"2b075579-903c-43a8-b0d3-14c730cf5858"],
Cell[199505, 4693, 120, 3, 70, "Input",ExpressionUUID->"2d01d12a-0d20-4f72-830f-a999f6420698",
 CellID->1815892472],
Cell[199628, 4698, 277, 5, 70, "ExampleText",ExpressionUUID->"232994dd-5407-4444-81fc-7a0831ade9bc",
 CellID->804504089],
Cell[199908, 4705, 83, 1, 70, "ExampleText",ExpressionUUID->"35cf9d21-d941-481a-adf7-cceb2f867ffc",
 CellID->1064465213],
Cell[CellGroupData[{
Cell[200016, 4710, 634, 18, 70, "Input",ExpressionUUID->"374994c2-2633-456a-a35b-aad1d693c95e",
 CellID->789150305],
Cell[200653, 4730, 9136, 261, 70, "Output",ExpressionUUID->"299d1b3b-e583-407f-9c4b-1b7cfb7835b7",
 CellID->1500557766]
}, Open  ]],
Cell[CellGroupData[{
Cell[209826, 4996, 452, 11, 70, "Input",ExpressionUUID->"ceca929d-e002-4a2c-b4cb-4c5f619dce4b",
 CellID->1446038884],
Cell[210281, 5009, 2838, 68, 70, "Output",ExpressionUUID->"fbf9fe28-5c0f-484f-916a-63342237b792",
 CellID->538351120]
}, Open  ]],
Cell[213134, 5080, 127, 3, 70, "ExampleText",ExpressionUUID->"75ba454b-4169-4fc7-a970-1eddcbcbcb8b",
 CellID->277030772],
Cell[CellGroupData[{
Cell[213286, 5087, 457, 12, 70, "Input",ExpressionUUID->"75acb36e-8a0e-41f4-88a0-2d7bcf833847",
 CellID->943646889],
Cell[213746, 5101, 2852, 68, 70, "Output",ExpressionUUID->"b81daf05-eff2-47aa-b81b-9c64c294b2f8",
 CellID->1034350523]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[216659, 5176, 204, 6, 70, "ExampleSection",ExpressionUUID->"959b2d29-2ea6-4b5b-91eb-98078c84084b",
 CellID->2123667759],
Cell[216866, 5184, 349, 9, 70, "ExampleText",ExpressionUUID->"a053dce1-356e-4150-a5b1-b388ba99b55c",
 CellID->1409155971],
Cell[217218, 5195, 587, 19, 70, "ExampleText",ExpressionUUID->"eda74b7b-37be-40d5-8403-658464cbb8b4",
 CellID->6451157]
}, Closed]],
Cell[217820, 5217, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"5b69f9b9-9d65-4e96-baf0-8e6a7cfe9285"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217888, 5222, 150, 7, 70, "SeeAlsoSection",ExpressionUUID->"4a1142a4-978a-4100-bcf3-f35a76fb9dd4",
 CellID->1255426704],
Cell[218041, 5231, 957, 30, 70, "SeeAlso",ExpressionUUID->"f61b58ff-073f-4fe5-813d-eb9b30ecdc2b",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[219035, 5266, 152, 7, 70, "TutorialsSection",ExpressionUUID->"835629ab-bd97-4868-87d6-1a2ec40b126f",
 CellID->250839057],
Cell[219190, 5275, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"55353b07-324b-47cd-8396-01047bb80ea8"],
Cell[219224, 5277, 203, 7, 70, "Tutorials",ExpressionUUID->"4abd2e99-4c77-42a2-8541-cf1925bee656",
 CellID->341631938],
Cell[219430, 5286, 229, 7, 70, "Tutorials",ExpressionUUID->"ca4630a4-7b77-4e06-b304-307f18571052",
 CellID->1023267351],
Cell[219662, 5295, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"cd28c5bb-2776-448e-9b8c-cef3cc192ba1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219730, 5300, 156, 7, 70, "MoreAboutSection",ExpressionUUID->"caea320d-b05d-4840-bed6-db72a1bcc467",
 CellID->38303248],
Cell[219889, 5309, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"d2e2dd51-ef7e-4c80-babe-73ecb78763e5"],
Cell[219923, 5311, 194, 7, 70, "MoreAbout",ExpressionUUID->"957fdefc-a4fe-4659-a3a5-76e0dcfcb8a1",
 CellID->1959639973],
Cell[220120, 5320, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"dbecaaa5-7a24-4e97-a83f-798e0218a1af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220188, 5325, 160, 7, 70, "RelatedLinksSection",ExpressionUUID->"bb1b3012-193a-4cef-9916-914210639a21",
 CellID->1584193535],
Cell[220351, 5334, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"b6dc45e6-5a03-4217-9b12-2af8732b1d53"],
Cell[220385, 5336, 196, 6, 70, "RelatedLinks",ExpressionUUID->"20b85f9f-b6e0-4e39-9e6c-4ef85e84cf68",
 CellID->1038487239],
Cell[220584, 5344, 209, 7, 70, "RelatedLinks",ExpressionUUID->"82f57c1e-e609-486d-a0d8-f1de975b9212",
 CellID->1462652359]
}, Open  ]],
Cell[220808, 5354, 23, 0, 70, "FooterCell",ExpressionUUID->"63101ccc-1c0b-46e0-a582-c1da2942a63f"]
}
]
*)

(* End of internal cache information *)
