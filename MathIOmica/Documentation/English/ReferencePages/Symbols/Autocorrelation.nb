(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    203853,       4848]
NotebookOptionsPosition[    181231,       4388]
NotebookOutlinePosition[    184429,       4464]
CellTagsIndexPosition[    184305,       4458]
WindowTitle->Autocorrelation
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["MATH I OMICA PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MathIOmica Tutorial\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaTutorial"], "\<\"MathIOmica \
Dynamic Transcriptome\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"InverseAutocovariance\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/InverseAutocovariance"], "\<\"LombScargle\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/LombScargle"], \
"\<\"TimeSeriesClassification\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesClassification"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MathIOmica Guide\"\>":>
       Documentation`HelpLookup["paclet:MathIOmica/guide/MathIOmicaGuide"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MathIOmica/ref/Autocorrelation\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["MathIOmica/ref/Autocorrelation"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/MathIOmica/ref/\
Autocorrelation.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$14263], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "MathIOmica/ref/Autocorrelation", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell[TextData[{
 Cell["Autocorrelation", "ObjectName"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"Autocorrelation", "[", 
       RowBox[{
        StyleBox["data", "TI"], ",", " ", 
        StyleBox["setTimes", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]calculates  the normalized autocorrelation for a time \
series over specified set times, using a Lomb-Scargle based inverse \
autocovariance."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{None}}}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    TemplateBox[{6},
     "Spacer1"]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1805361369],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"Autocorrelation", "[", 
   RowBox[{
    StyleBox["data", "TI"], ",", " ", 
    StyleBox["setTimes", "TI"]}], "]"}]], "InlineFormula"],
 " calculates the autocorrelation of a dataset over a set of specified times \
using the inverse Fourier transform of a Lomb-Scargle based inverse \
autocovariance. It takes as input:"
}], "Notes",
 CellID->1403842600],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    StyleBox["data", "TI"], Cell[TextData[{
     "Time series (data as a list; list may be the value of a single key in \
an association). The series may include Missing data points. Data may be \
entered as list of N signal intensities corresponding one-to-one to the N \
setTimes with Missing inserted appropriately if the data is absent, ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["X", "1"], "=", 
         RowBox[{"X", 
          RowBox[{"(", 
           SubscriptBox["t", "1"], ")"}]}]}], ",", 
        RowBox[{
         SubscriptBox["X", "2"], "=", 
         RowBox[{"X", 
          RowBox[{"(", 
           SubscriptBox["t", "2"], ")"}]}]}], ",", "...", ",", 
        RowBox[{
         SubscriptBox["X", "N"], "=", 
         RowBox[{"X", 
          RowBox[{"(", 
           SubscriptBox["t", "N"], ")"}]}]}]}], "}"}]]],
     ". Alternatively, the data may be a list of pairs of values {{",
     Cell[BoxData[
      SubscriptBox["t", "1"]]],
     ",",
     Cell[BoxData[
      SubscriptBox["X", "1"]]],
     "},{",
     Cell[BoxData[
      SubscriptBox["t", "2"]]],
     ",",
     Cell[BoxData[
      SubscriptBox["X", "2"]]],
     "},. ..,",
     Cell[BoxData[
      RowBox[{"{", 
       SubscriptBox["t", "N"]}]]],
     ",",
     Cell[BoxData[
      SubscriptBox["X", "N"]]],
     "}} for only existing measurements."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    StyleBox["setTimes", "TI"], Cell[TextData[{
     "A complete set of all possible N times during which data could have \
been collected in the window of the experiment, including times for which no \
data was collected,",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["t", "1"], ",", 
        SubscriptBox["t", "2"], ",", "...", ",", 
        SubscriptBox["t", "N"]}], "}"}]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "2ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}},
 GridBoxDividers->{"Rows" -> {{True, True, True}}}},
 CellID->1390286253],

Cell[TextData[{
 "The Autocorrelation function returns a list of autocorrelations from ",
 Cell[BoxData[
  RowBox[{"lag", "=", "0"}]], "InlineFormula"],
 " to ",
 Cell[BoxData["n"], "InlineFormula"],
 ", in the form {",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Rho]", "X"], "(", "0", ")"}], "=", "1"}], ",", 
    RowBox[{
     SubscriptBox["\[Rho]", "x"], "(", "1", ")"}], ",", 
    RowBox[{
     SubscriptBox["\[Rho]", "x"], "(", "2", ")"}], ",", 
    RowBox[{
     SubscriptBox["\[Rho]", "x"], "(", "n", ")"}]}], TraditionalForm]]],
 "}, where where n=Floor[N/2]."
}], "Notes",
 CellID->1915097832],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], "SpectrumFunction", 
    ButtonBox["InverseAutocovariance",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/InverseAutocovariance"], Cell["\<\
Selection of specific function to use to generate periodogram on which \
inverse Fourier transform will be performed to obtain the autocorrelation \
function.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["UpperFrequencyFactor",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/UpperFrequencyFactor"], "1", 
    Cell["\<\
Value \[GreaterEqual] 1,  by which to scale the upper Nyquist cutoff \
frequency and increase spectral resolution.\
\>", "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}},
 GridBoxDividers->{"Rows" -> {{True, True, True}}}},
 CellID->904554235],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["Background", "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 WholeCellGroupOpener->True,
 CellMargins->{{48, 4}, {0, 16}},
 CellID->1055882129],

Cell[TextData[{
 StyleBox["This function calculates, for a given discrete time series of a \
signal ", "Notes"],
 StyleBox["x", "Notes",
  FontSlant->"Italic"],
 StyleBox["(", "Notes"],
 StyleBox["t", "Notes",
  FontSlant->"Italic"],
 StyleBox["), the corresponding discretization of the autocorrelation at \
different time lags \[Tau], ", "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Rho]", "x"], "(", "\[Tau]", ")"}], TraditionalForm]], 
  "Notes"], "Notes"],
 StyleBox[" = ", "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["\[Gamma]", "x"], "(", "\[Tau]", ")"}], 
     RowBox[{" ", 
      RowBox[{
       SubscriptBox["\[Gamma]", "x"], "(", "0", ")"}]}]], "="}], 
   TraditionalForm]], "Notes"], "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      RowBox[{"x", "(", "t", ")"}], " ", 
      RowBox[{"x", "(", 
       RowBox[{"t", " ", "+", " ", "\[Tau]"}], ")"}]}], 
     "\[RightAngleBracket]"}], 
    RowBox[{" ", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{
       SuperscriptBox["x", "2"], "(", "t", ")"}], "\[RightAngleBracket]"}]}]],
    TraditionalForm]], "Notes"], "Notes"],
 StyleBox[", where the autocovariance ", "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Gamma]", "x"], "(", "\[Tau]", ")"}], "=", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      RowBox[{"x", "(", "t", ")"}], " ", 
      RowBox[{"x", "(", 
       RowBox[{"t", " ", "+", " ", "\[Tau]"}], ")"}]}], 
     "\[RightAngleBracket]"}]}], TraditionalForm]], "Notes"], "Notes"],
 StyleBox[" is an average over all initial times t, and ", "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Rho]", "x"], "(", "\[Tau]", ")"}], TraditionalForm]], 
  "Notes"], "Notes"],
 StyleBox[" is normalized so that ", "Notes"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Rho]", "x"], "(", "0", ")"}], "=", "1"}], 
   TraditionalForm]]],
 StyleBox[". Note that in the case that the data is perfectly evenly spaced \
in real-time, then we may use ", "Notes"],
 StyleBox["Mathematica", "Notes",
  FontSlant->"Italic"],
 StyleBox["\[CloseCurlyQuote]s built-in ", "Notes"],
 ButtonBox["ListCorrelate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListCorrelate"],
 " ",
 StyleBox["function. However, if the data are unevenly spaced, as many \
biological time series are, instead an alternative route may involve \
performing an inverse Fourier transform of ", "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["S", "x"], "(", "f", ")"}], TraditionalForm]], "Notes"], 
  "Notes"],
 StyleBox[" in order to get the autocovariance ", "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["\[Gamma]", "x"], TraditionalForm]], "Notes"], "Notes"],
 StyleBox["(\[Tau]).", "Notes"]
}], "Notes",
 CellID->441782802],

Cell[TextData[{
 StyleBox["By the Wiener-Khinchin Theorem, if a signal ", "Notes"],
 StyleBox["x", "Notes",
  FontSlant->"Italic"],
 StyleBox["(", "Notes"],
 StyleBox["t", "Notes",
  FontSlant->"Italic"],
 StyleBox[") has corresponding Inverse Fourier Transformed Autocovariance ", 
  "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["S", "x"], "(", "f", ")"}], TraditionalForm]], "Notes"], 
  "Notes"],
 StyleBox[", then ", "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["\[Gamma]", "x"], TraditionalForm]], "Notes"], "Notes"],
 StyleBox["(\[Tau]) = ", "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   OverscriptBox[
    UnderscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}]], "\[Infinity]"], TraditionalForm]], 
  "Notes"], "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["df",
     FontSlant->"Italic"], " ", 
    RowBox[{
     SubscriptBox["S", "x"], "(", "f", ")"}]}], TraditionalForm]], "Notes"], 
  "Notes"],
 StyleBox[" Cos(", "Notes"],
 StyleBox["2\[Pi] f\[Tau]", "Notes",
  FontSlant->"Italic"],
 StyleBox[") = 2", "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   OverscriptBox[
    UnderscriptBox["\[Integral]", "0"], "\[Infinity]"], TraditionalForm]], 
  "Notes"], "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["df",
     FontSlant->"Italic"], " ", 
    RowBox[{
     SubscriptBox["S", "x"], "(", "f", ")"}]}], TraditionalForm]], "Notes"], 
  "Notes"],
 StyleBox[" Cos(", "Notes"],
 StyleBox["2\[Pi] f\[Tau]", "Notes",
  FontSlant->"Italic"],
 StyleBox[") , taking advantage of the symmetry of the integrand under \
frequency reversal", "Notes"],
 ". The complete time window of the experiment is defined by the range of ",
 Cell[BoxData[
  RowBox[{"{", 
   SubscriptBox["t", "complete"], "}"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["t", "window"], "=", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{"{", 
      SubscriptBox["t", "complete"], "}"}], "]"}], "-", 
    RowBox[{"Min", "[", 
     RowBox[{"{", 
      SubscriptBox["t", "complete"], "}"}]}]}]}]], "InlineFormula"],
 "]. From this time window, the Nyquist frequency is defined to be ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["f", "Nyq"], "="}]], "InlineFormula"],
 Cell[BoxData[
  RowBox[{
   FractionBox["N", "2"], 
   FractionBox["1", 
    SubscriptBox["t", "window"]]}]], "InlineFormula"],
 ", and a given ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["UpperFrequencyFactor"]],
    "paclet:MathIOmica/ref/UpperFrequencyFactor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " factor \[GreaterEqual] 1 sets the cutoff frequency ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["f", "cutoff"], " "}]], "InlineFormula"],
 "for  calculation by ",
 Cell[BoxData[
  FractionBox[
   SubscriptBox["f", "cutoff"], 
   SubscriptBox["f", "Nyq"]]], "InlineFormula"],
 " = ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["UpperFrequencyFactor"]],
    "paclet:MathIOmica/ref/UpperFrequencyFactor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". It is recommended to set ",
 ButtonBox["UpperFrequencyFactor",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/UpperFrequencyFactor"],
 " close to 1 unless one has an explicit reason to do otherwise. "
}], "Notes",
 CellID->374292600],

Cell[TextData[{
 StyleBox["In the context of experimental data, we often work with a discrete \
 time series ", "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "(", 
      SubscriptBox["t", "1"], ")"}], ",", " ", 
     RowBox[{"x", "(", 
      SubscriptBox["t", "2"], ")"}], ",", "...", " ", ",", " ", 
     RowBox[{"x", "(", 
      SubscriptBox["t", "N"], ")"}]}], "}"}], TraditionalForm]], "Notes"], 
  "Notes"],
 StyleBox[" for times ", "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["t", "1"], "<", 
      SubscriptBox["t", "2"], "<"}], "..."}], "<", 
    SubscriptBox["t", "N"]}], TraditionalForm]], "Notes"], "Notes"],
 StyleBox[", rather than a continuous time series. This leads to a natural \
discretization of ", "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["S", "x"], "(", "f", ")"}], " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["S", "x"], "(", 
       SubscriptBox["f", "1"], ")"}], ",", " ", 
      RowBox[{
       SubscriptBox["S", "x"], "(", 
       SubscriptBox["f", "2"], ")"}], ",", "...", ",", 
      RowBox[{
       SubscriptBox["S", "x"], "(", 
       SubscriptBox["f", "M"], ")"}]}], "}"}]}], TraditionalForm]], "Notes"], 
  "Notes"],
 StyleBox[", where ", "Notes"],
 StyleBox["M", "Notes",
  FontSlant->"Italic"],
 StyleBox[" is the total number of positive frequencies. The estimation of \
this discretized spectral sequence, and the corresponding input frequencies ",
   "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["f", "1"], ",", " ", 
     SubscriptBox["f", "2"], ",", "...", ",", " ", 
     SubscriptBox["f", "M"]}], "}"}], TraditionalForm]], "Notes"], "Notes"],
 StyleBox[", is handled through the ", "Notes"],
 StyleBox[ButtonBox["InverseAutocovariance",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/InverseAutocovariance"], "Notes"],
 StyleBox[" function. Thus given a sequence ", "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["S", "x"], "(", 
     SubscriptBox["f", "i"], ")"}], "}"}], TraditionalForm]], "Notes"], 
  "Notes"],
 StyleBox[", we may apply ", "Notes"],
 StyleBox["Mathematica", "Notes",
  FontSlant->"Italic"],
 StyleBox["\[CloseCurlyQuote]s built-in Inverse Discrete Cosine Transform, \
and normalize to get the real time autocorrelation ", "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Rho]", "x"], "(", 
      SubscriptBox["\[Tau]", "j"], ")"}], "}"}], "="}], TraditionalForm]], 
  "Notes"], "Notes"],
 StyleBox[" ", "Notes"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    FractionBox[
     RowBox[{
      SubscriptBox["\[Gamma]", "x"], "(", 
      SubscriptBox["\[Tau]", "i"], ")"}], 
     RowBox[{
      SubscriptBox["\[Gamma]", "x"], "(", "0", ")"}]], "}"}], 
   TraditionalForm]], "Notes"], "Notes"],
 StyleBox[". ", "Notes"],
 "This choice of normalization sets autocorrelation at lag 0 to be 1 but does \
not impose other restrictions due to normalization on autocorrelations at \
other lags. "
}], "Notes",
 CellID->1228796337]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["References", "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 WholeCellGroupOpener->True,
 CellMargins->{{48.3828125, 4.}, {0., 16.}},
 CellID->462926512],

Cell[TextData[{
 "Lomb, N.R, ",
 StyleBox["Least-squares frequency analysis of unequally spaced data",
  FontSlant->"Italic"],
 ", Astrophysics and Space Science 39 (2) : 447\[Dash]462 (1976). External \
link: ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["http://dx.doi.org/10.1007/BF00648343."]],
    "http://dx.doi.org/10.1007/BF00648343"},
   "WebLink",
   BaseStyle->{"Notes"}]]]
}], "Notes",
 CellID->2116251185],

Cell[TextData[{
 "Scargle, J.D., ",
 StyleBox["Studies in astronomical time series analysis II - Statistical \
aspects of spectral analysis of unevenly spaced data",
  FontSlant->"Italic"],
 ", Astrophysical Journal 263 : 835 (1982). External link:  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["http://dx.doi.org/10.1086/160554."]],
    "http://dx.doi.org/10.1086/160554"},
   "WebLink",
   BaseStyle->{"Notes"}]]]
}], "Notes",
 CellID->1079495891],

Cell[TextData[{
 "Scargle, J.D.,",
 StyleBox[" Studies in astronomical time series analysis. III - Fourier \
transforms, autocorrelation functions, and cross-correlation functions of \
unevenly spaced data",
  FontSlant->"Italic"],
 ", Astrophysical Journal 343 : 874 (1989). External link: ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["http://dx.doi.org/10.1086/167757."]],
    "http://dx.doi.org/10.1086/167757"},
   "WebLink",
   BaseStyle->{"Notes"}]]]
}], "Notes",
 CellID->1325269568]
}, Open  ]],

Cell["", "SectionFooterSpacer"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(10)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->912080320],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(7)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->595665954],

Cell[CellGroupData[{

Cell[TextData[{
 "Package Dependencies",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1212109268],

Cell["First we load the MathIOmica package.", "ExampleText",
 CellID->191603639],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->2017647728],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Autocorrelation", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->68045143],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "0.2924367660039938`", ",", "0.1438685509003527`"}], 
  "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->751223613]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "General Example: Linear Signal",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->501752921],

Cell["\<\
Below are some examples of the normalized Autocorrelation for linear signals.\
\
\>", "ExampleText",
 CellID->646561019],

Cell["We first generate a linear signal with pairs of data:", "ExampleText",
 CellID->973241523],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeSetLinear", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "100"}], "]"}], ",", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "100"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1003425557],

Cell["We can calculate the Autocorrelation list as:", "ExampleText",
 CellID->2097643619],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linearAutocorrelationA", "=", " ", 
  RowBox[{"Autocorrelation", "[", 
   RowBox[{"timeSetLinear", ",", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "100"}], "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->941256555],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.961875034238952`", ",", "0.9365861541715409`", ",", 
   "0.9036240345810809`", ",", "0.876078995285426`", ",", 
   "0.8444709974060289`", ",", "0.8162400795472561`", ",", 
   "0.7853742706008168`", ",", "0.7568859151058949`", ",", 
   "0.7265682163408219`", ",", "0.698027336333305`", ",", 
   "0.6681906371364654`", ",", "0.6397248115398075`", ",", 
   "0.6103517659841629`", ",", "0.5820551232831144`", ",", 
   "0.5531516776760206`", ",", "0.5251016473269849`", ",", 
   "0.49668601814942936`", ",", "0.4689508211718873`", ",", 
   "0.4410482647672606`", ",", "0.41369065017059165`", ",", 
   "0.38633074142473917`", ",", "0.3594100008751844`", ",", 
   "0.3326251210458733`", ",", "0.306198236929387`", ",", 
   "0.2800226938639598`", ",", "0.2541450184276916`", ",", 
   "0.2286145194817599`", ",", "0.20334018530575804`", ",", 
   "0.17849151723119266`", ",", "0.15387368668259824`", ",", 
   "0.12974452185637084`", ",", "0.10583553669452254`", ",", 
   "0.08246431872315668`", ",", "0.059315786324211014`", ",", 
   "0.03674166640360179`", ",", "0.014404505291897076`", ",", 
   RowBox[{"-", "0.007332688832641667`"}], ",", 
   RowBox[{"-", "0.02880822948804951`"}], ",", 
   RowBox[{"-", "0.04966800389581539`"}], ",", 
   RowBox[{"-", "0.07023234102762937`"}], ",", 
   RowBox[{"-", "0.0901735334214452`"}], ",", 
   RowBox[{"-", "0.10977775632621391`"}], ",", 
   RowBox[{"-", "0.12875852688015613`"}], ",", 
   RowBox[{"-", "0.14735440827411814`"}], ",", 
   RowBox[{"-", "0.16533222750671048`"}], ",", 
   RowBox[{"-", "0.18287223602121763`"}], ",", 
   RowBox[{"-", "0.19980387252217516`"}], ",", 
   RowBox[{"-", "0.21624118426082883`"}], ",", 
   RowBox[{"-", "0.23208269425875058`"}]}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->717477639]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"linearAutocorrelationA", ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1092987601],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxVyWtI0wEUxuF/mmVqZeKaTAlnOTVl5Eqb1tw752VLcBARRTYwGIllfbQo
c6WpSSVYVGCB5SaLkVQaXRRnRRuztjV0teXwlrmbNcEIu4AVO33owOHl4cc9
dHy3KoxhGMGf/7uhmxf/vwwUWjevx/SFHAl97/OmhsXP5FjsW7y4cNo/R45H
0yjf/i7ynxNgnW+J8kYEyEmom/Q3dG3wk5ORmRsQmrk+cgr8rvO2KqGXvAm1
s8Ff0fCQeZDX646K9s6S05E8Ythjr/xE3oxGDpPZeWKGnAV1d0EN0/KRzEd8
zESsoHOavAXGOH3qkd4pcjZKossWb1smyQIYpay0PvMEeSuWVOzyXeHj5G34
eVamTsl3k3Mwli3f7z35gZyL/q/f2jVPneTtcCo8lnbmPVmIqyz+5DO5g5wH
M7umbujGCDkfitS48pmAnbwDQa221id9S94JtkJ2TSS1kEWo8MxxVq8cJhfA
eqFNaXMayWK0bQyLSnn4kgxc13GCtR1DIauBhtYx3aqEfuoSaAaY+5VJj6hL
sL7sTWOXsod6IcIlOQaL7Q71Qiyr5n1PVF+iLoVNo9VPRZ4xhLoUU0srLnvq
b4XMFME+aNKxjt2lXoRRqyPN8OMB9WK4msJcN1mPqReD6xBzVZwB6iXIiFhu
Sz81RL0EC0/ylefcL6iXInF8jbgj4xX1UvgqmtUHqkzUZVh3OOZg1hUzdRkG
qvOah++9pi7H2lbP4HSfxfAbuszqJA==
      "]]}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 50.}, {-0.23208269425875058`, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 ImageSize->{244, 138},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->1254832113]
}, Open  ]],

Cell["\<\
We can instead introduce the data as a list and still obtain the same result:\
\
\>", "ExampleText",
 CellID->57089611],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linearAutocorrelationB", " ", "=", " ", 
  RowBox[{"Autocorrelation", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "100"}], "]"}], ",", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "100"}], "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[4]:=",
 CellID->1208840704],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.961875034238952`", ",", "0.9365861541715409`", ",", 
   "0.9036240345810809`", ",", "0.876078995285426`", ",", 
   "0.8444709974060289`", ",", "0.8162400795472561`", ",", 
   "0.7853742706008168`", ",", "0.7568859151058949`", ",", 
   "0.7265682163408219`", ",", "0.698027336333305`", ",", 
   "0.6681906371364654`", ",", "0.6397248115398075`", ",", 
   "0.6103517659841629`", ",", "0.5820551232831144`", ",", 
   "0.5531516776760206`", ",", "0.5251016473269849`", ",", 
   "0.49668601814942936`", ",", "0.4689508211718873`", ",", 
   "0.4410482647672606`", ",", "0.41369065017059165`", ",", 
   "0.38633074142473917`", ",", "0.3594100008751844`", ",", 
   "0.3326251210458733`", ",", "0.306198236929387`", ",", 
   "0.2800226938639598`", ",", "0.2541450184276916`", ",", 
   "0.2286145194817599`", ",", "0.20334018530575804`", ",", 
   "0.17849151723119266`", ",", "0.15387368668259824`", ",", 
   "0.12974452185637084`", ",", "0.10583553669452254`", ",", 
   "0.08246431872315668`", ",", "0.059315786324211014`", ",", 
   "0.03674166640360179`", ",", "0.014404505291897076`", ",", 
   RowBox[{"-", "0.007332688832641667`"}], ",", 
   RowBox[{"-", "0.02880822948804951`"}], ",", 
   RowBox[{"-", "0.04966800389581539`"}], ",", 
   RowBox[{"-", "0.07023234102762937`"}], ",", 
   RowBox[{"-", "0.0901735334214452`"}], ",", 
   RowBox[{"-", "0.10977775632621391`"}], ",", 
   RowBox[{"-", "0.12875852688015613`"}], ",", 
   RowBox[{"-", "0.14735440827411814`"}], ",", 
   RowBox[{"-", "0.16533222750671048`"}], ",", 
   RowBox[{"-", "0.18287223602121763`"}], ",", 
   RowBox[{"-", "0.19980387252217516`"}], ",", 
   RowBox[{"-", "0.21624118426082883`"}], ",", 
   RowBox[{"-", "0.23208269425875058`"}]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1598365586]
}, Open  ]],

Cell["The function also works on an association:", "ExampleText",
 CellID->393344445],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linearAutocorrelationC", " ", "=", " ", 
  RowBox[{"Autocorrelation", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{"\"\<Data Key\>\"", "\[Rule]", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "100"}], "]"}]}], "|>"}], ",", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "100"}], "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[5]:=",
 CellID->210134553],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Data Key\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "0.961875034238952`", ",", "0.9365861541715409`", ",", 
     "0.9036240345810809`", ",", "0.876078995285426`", ",", 
     "0.8444709974060289`", ",", "0.8162400795472561`", ",", 
     "0.7853742706008168`", ",", "0.7568859151058949`", ",", 
     "0.7265682163408219`", ",", "0.698027336333305`", ",", 
     "0.6681906371364654`", ",", "0.6397248115398075`", ",", 
     "0.6103517659841629`", ",", "0.5820551232831144`", ",", 
     "0.5531516776760206`", ",", "0.5251016473269849`", ",", 
     "0.49668601814942936`", ",", "0.4689508211718873`", ",", 
     "0.4410482647672606`", ",", "0.41369065017059165`", ",", 
     "0.38633074142473917`", ",", "0.3594100008751844`", ",", 
     "0.3326251210458733`", ",", "0.306198236929387`", ",", 
     "0.2800226938639598`", ",", "0.2541450184276916`", ",", 
     "0.2286145194817599`", ",", "0.20334018530575804`", ",", 
     "0.17849151723119266`", ",", "0.15387368668259824`", ",", 
     "0.12974452185637084`", ",", "0.10583553669452254`", ",", 
     "0.08246431872315668`", ",", "0.059315786324211014`", ",", 
     "0.03674166640360179`", ",", "0.014404505291897076`", ",", 
     RowBox[{"-", "0.007332688832641667`"}], ",", 
     RowBox[{"-", "0.02880822948804951`"}], ",", 
     RowBox[{"-", "0.04966800389581539`"}], ",", 
     RowBox[{"-", "0.07023234102762937`"}], ",", 
     RowBox[{"-", "0.0901735334214452`"}], ",", 
     RowBox[{"-", "0.10977775632621391`"}], ",", 
     RowBox[{"-", "0.12875852688015613`"}], ",", 
     RowBox[{"-", "0.14735440827411814`"}], ",", 
     RowBox[{"-", "0.16533222750671048`"}], ",", 
     RowBox[{"-", "0.18287223602121763`"}], ",", 
     RowBox[{"-", "0.19980387252217516`"}], ",", 
     RowBox[{"-", "0.21624118426082883`"}], ",", 
     RowBox[{"-", "0.23208269425875058`"}]}], "}"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->1972227999]
}, Open  ]],

Cell["\<\
We now create an unevenly sampled dataset through a function that samples n \
random points,\
\>", "ExampleText",
 CellID->1097467909],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"timeSeriesLine", "[", "n_", "]"}], ":=", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "100", ",", "1"}], "]"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "100", ",", "1"}], "]"}]}], "}"}], "]"}], ",", 
       "n"}], "]"}], ",", "First"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->1334376083],

Cell["\<\
We also create another function to calculate the corresponding \
Autocorrelation list:\
\>", "ExampleText",
 CellID->1024424297],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lineUnevenAutocorrelation", "[", "n_", "]"}], ":=", " ", 
   RowBox[{"Autocorrelation", "[", 
    RowBox[{
     RowBox[{"timeSeriesLine", "[", "n", "]"}], " ", ",", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "100", ",", "1"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->687101360],

Cell["\<\
Here are some examples of sampling this set with 50 to 100 points in steps of \
10:\
\>", "ExampleText",
 CellID->290326522],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"lineUnevenAutocorrelation", "[", "#", "]"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], " ", "&"}], "/@", " ", 
  
  RowBox[{"Range", "[", 
   RowBox[{"50", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellLabel->"In[8]:=",
 CellID->1081141012],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztndlTG8mWxntmXuZxIu5r98P8FxP90jEvE3Ff78S8tm/bBgy2gMY0hsbt
hVVmMbjNavCCwTa2WdsGJHaQzA4CGbGD2PdNCAmJxcwnpV2uFiq1KO2l/AVW
lKsqVVn1KfOcU3Uy6z8vhv0j8F+/+eab6/+Oj3/8dOO/IyJ+ivnf/8B//i/0
enBQaMDlv4dGBgQFRPzXxX/Dyv/Bv/R/+eYb0/IphUKhUCgUCsWNHB4enl35
yYz7K+PPUCEoFKt0dnbGx8dbrOzo6IiKigoPD29tbfVIrfwQKoT3QO2FV/H+
/fvAwMC4uDj2Sq1WGxYWplarJyYmrl27tr+/z2zCzm6vo19AhfAeqL3wNnJz
c3HZLURRqVRisZgsY2FoaIjZFGjGrVX0D6gQXgK1F97J5OSkhShyuTw7O5ss
5+TkyGQyZhMVxXVQIbwBai+8k7Oto6+vLzMzkyxnZGQMDg4ymwK/oNUb3VpL
P4CfEHqDlbsoFEeg9sILYYuyu7sLh3Z9fR0u7pYZBOMbGxvMzhCl5sP0j3dr
Vja1HqqvYDmvENIuNYSYW9V4qL6Cha+9OHJrLf0MiMK4uHl5eYjNsdDc3BwT
ExMRESGRSNg7E0XQOqYWdjxQV0HDT4iBsVUP1FXQUHvhQxwdHZ19LAtRekdW
IMrgxJpHauWHcAkxt6KBEPXdak9USsjwsxf91F54DVBkVL0JUTqUi56ui18D
IfYPDiHES+mIp+viL3DZi/lVk72QdM14pFZ+wsnJidX1VpPZGNtBjbjT4SFE
YLL04Zt+11fNv+DXIkokKtdXzU8pLS0NDQ2FNzs9Pc1e39bWhpW//vpre3s7
ez0U2dLoIUpl64R7aypweAiBz9jc9tsFcrdWVOjwEyI4pT6jtNetFfUbhoeH
b968ubOzU1dXl5iYyKw3GAwikWhhYWFxcTEsLMxo/Jp7QG2HK+AtxP1XvVdT
GzxRZWHCTwh83noki81rt/KNFIeprKysqKg4NY9gCgoKOjg4IOshSkhIiFKp
VKlUWNDpdEwRIspP8bX5lYNWv5PCA95CPK8dhskwGI/Ez7uw7JHKCwl+QgCE
3kFiqWcqLXQeP37c2NhIlsPDw9fWPj+8Oz4+zsrKCjWTl5eH/zJFmCwR2HEP
1FigOCIEuqke1TI+RWnUrXIUfkLg81X9CCTY19NUW+fz8uXL2tpashwcHKzX
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
    "], {{0, 70}, {
    397, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{397, 70},
  PlotRange->{{0, 397}, {0, 70}}]], "Output",
 ImageSize->{532, 379},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[8]=",
 CellID->131745992]
}, Open  ]],

Cell["\<\
We can instead have a list provided with data missing at timepoints and \
tagged Missing.  Let's introduce missing data at random integer positions, \
say 10 points missing :\
\>", "ExampleText",
 CellID->126023702],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSetLinearMissing", "=", 
  RowBox[{"Nest", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ReplacePart", "[", 
      RowBox[{"#", ",", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "100"}], "}"}], "]"}], "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}]}], "]"}], "&"}], ",", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "100"}], "]"}], ",", "10"}], "]"}]}]], "Input",
 CellLabel->"In[9]:=",
 CellID->1986452767],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", 
   RowBox[{"Missing", "[", "]"}], ",", "5", ",", "6", ",", "7", ",", "8", ",",
    "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", 
   ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", 
   "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", 
   RowBox[{"Missing", "[", "]"}], ",", "29", ",", 
   RowBox[{"Missing", "[", "]"}], ",", "31", ",", "32", ",", "33", ",", "34", 
   ",", "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "40", ",", 
   "41", ",", "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", "47", 
   ",", "48", ",", "49", ",", "50", ",", "51", ",", "52", ",", "53", ",", 
   "54", ",", "55", ",", "56", ",", "57", ",", "58", ",", 
   RowBox[{"Missing", "[", "]"}], ",", "60", ",", "61", ",", 
   RowBox[{"Missing", "[", "]"}], ",", "63", ",", "64", ",", "65", ",", "66", 
   ",", "67", ",", "68", ",", "69", ",", "70", ",", "71", ",", "72", ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", "75", ",", "76", ",", "77", ",", "78", 
   ",", "79", ",", 
   RowBox[{"Missing", "[", "]"}], ",", "81", ",", "82", ",", "83", ",", "84", 
   ",", "85", ",", 
   RowBox[{"Missing", "[", "]"}], ",", "87", ",", "88", ",", "89", ",", "90", 
   ",", "91", ",", "92", ",", "93", ",", 
   RowBox[{"Missing", "[", "]"}], ",", "95", ",", "96", ",", "97", ",", "98", 
   ",", "99", ",", "100"}], "}"}]], "Output",
 CellLabel->"Out[9]=",
 CellID->1162870217]
}, Open  ]],

Cell["We can again calculate the Autocorrelation list as:", "ExampleText",
 CellID->1115595972],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSetLinearMissingAutocorrelation", "=", " ", 
  RowBox[{"Autocorrelation", "[", 
   RowBox[{"timeSetLinearMissing", ",", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "100"}], "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[10]:=",
 CellID->141779447],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.8608937862055263`", ",", "0.8609519106248826`", ",", 
   "0.8128748615439416`", ",", "0.8189311304406955`", ",", 
   "0.7724932877277118`", ",", "0.7813046051888396`", ",", 
   "0.7482144320000214`", ",", "0.7300035164807693`", ",", 
   "0.6631808503898757`", ",", "0.6474394682071072`", ",", 
   "0.6091216603539196`", ",", "0.5974258872015566`", ",", 
   "0.549604626684823`", ",", "0.5409978405492233`", ",", 
   "0.5035781521299179`", ",", "0.4781722174024883`", ",", 
   "0.44003903882330414`", ",", "0.4222888186195396`", ",", 
   "0.37891149642826943`", ",", "0.37444808399929824`", ",", 
   "0.36018089660761465`", ",", "0.3173380810023876`", ",", 
   "0.2844965060610681`", ",", "0.28106800132137166`", ",", 
   "0.22696727173140968`", ",", "0.21709198339774766`", ",", 
   "0.1937812472205001`", ",", "0.19915941491469133`", ",", 
   "0.16722248764565695`", ",", "0.16029899588154597`", ",", 
   "0.13132200175664946`", ",", "0.11491339733192955`", ",", 
   "0.0876459612123823`", ",", "0.05871226038258818`", ",", 
   "0.044478444176099335`", ",", "0.02009364933900445`", ",", 
   RowBox[{"-", "0.005889260244373038`"}], ",", 
   RowBox[{"-", "0.026305389267888207`"}], ",", 
   RowBox[{"-", "0.042609902698463833`"}], ",", 
   RowBox[{"-", "0.05696440081873351`"}], ",", 
   RowBox[{"-", "0.08212124070876638`"}], ",", 
   RowBox[{"-", "0.09220379048216078`"}], ",", 
   RowBox[{"-", "0.11443541928175124`"}], ",", 
   RowBox[{"-", "0.1361464832693757`"}], ",", 
   RowBox[{"-", "0.15226518049750487`"}], ",", 
   RowBox[{"-", "0.17207244759481663`"}], ",", 
   RowBox[{"-", "0.18157914151391405`"}], ",", 
   RowBox[{"-", "0.19470637497218002`"}], ",", 
   RowBox[{"-", "0.20732023602974745`"}]}], "}"}]], "Output",
 CellLabel->"Out[10]=",
 CellID->312248058]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"timeSetLinearMissingAutocorrelation", ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[11]:=",
 CellID->1852293265],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxVyVtI0wEYxuF/LkUQdUiJhatlNpZZTNtqamvvNnXaLmaBuyjRTlZasjkW
jYUh1UXSIqgI8iIjraBynTYNwZbVmjqlFNOyMtOt1NlcgYfM7MC+BX3w8fLw
W7Fbu604hGGY1D//dwPnl/6/DGquJnDLzV5yOKyMPtT7z2z0quSJMawx8iJI
S95H3REGHYcZnadP8XCEHA9OiP+Enhklc9HXZNpb9PUzOQEpv27kCwqCTkSp
bCbCKfaQedjZ/+R7d6ObzIdhTZ5tvGKYnIRV7DF3/LKgk3HQl1RecPEjeR1M
9yOs/eqgBTAt6fii5gySUxBe+KmuqHqAnArpvrWVl1a/I6+HZn6HxRn2lixE
s1i9IBavySJEe61xk1N95A0YanAnCyOD3oies95dmeoeshhV3zSvBKJuchp8
vAN1C392kdPRW3vbqIjsJGfg3J7D5lttLvImxPjvebs7W8kSqIc+yKOOtZE3
4wqrw3N6v4MsxZtcva7+5DMy0MUtdvFfPA64Esh4UDI8VdpMXYbCy+Fp09oG
6jJM5mvNp6It1OUws9J9g47r1OU40hLzo+z8BeoKbJnfLtcsN9oDXQHVgKG9
Y6I6YCYT/U28xdMvr1HPxOzsUo4uqZ56FlIsPJcn1EY9CyX8uyM3qxupZyPW
ttVeq2qmno2aR2dM0rIW6kocFylHD1U8pa6ESnBUbQx7Tj0HE2yxZE7ipJ6D
PFapYeV4K/VcaOccAmNVu/03NyDp7A==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 50.}, {-0.20732023602974745`, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 ImageSize->{244, 138},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[11]=",
 CellID->1935567996]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples of Autocorrelation Based on Lomb-Scargle Vs. Exact Calculations",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(5)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->512790674],

Cell[CellGroupData[{

Cell[TextData[{
 "Linear Trend Expansions",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsubsection",
 WholeCellGroupOpener->True,
 CellID->82470729],

Cell[TextData[{
 "We can use the inbuilt ",
 ButtonBox["CorrelationFunction",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/CorrelationFunction"],
 " for an exact calculation not based on Fourier transforms, particularly \
with a regularly sampled time series with no missing data sets:"
}], "ExampleText",
 CellID->1308449196],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linearAutocorrelationExact", "=", 
  RowBox[{"N", "[", 
   RowBox[{"CorrelationFunction", "[", 
    RowBox[{"timeSetLinear", ",", 
     RowBox[{"{", 
      RowBox[{"Floor", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Length", "[", "timeSetLinear", "]"}], "/", "2"}], ")"}]}], 
      "}"}]}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[14]:=",
 CellID->1818268195],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.97`", ",", "0.94001200120012`", ",", "0.9100480048004801`", 
   ",", "0.8801200120012002`", ",", "0.8502400240024003`", ",", 
   "0.8204200420042004`", ",", "0.7906720672067207`", ",", 
   "0.761008100810081`", ",", "0.7314401440144015`", ",", 
   "0.7019801980198019`", ",", "0.6726402640264026`", ",", 
   "0.6434323432343234`", ",", "0.6143684368436844`", ",", 
   "0.5854605460546055`", ",", "0.5567206720672068`", ",", 
   "0.5281608160816081`", ",", "0.4997929792979298`", ",", 
   "0.47162916291629164`", ",", "0.4436813681368137`", ",", 
   "0.415961596159616`", ",", "0.38848184818481846`", ",", 
   "0.36125412541254126`", ",", "0.3342904290429043`", ",", 
   "0.3076027602760276`", ",", "0.2812031203120312`", ",", 
   "0.2551035103510351`", ",", "0.22931593159315933`", ",", 
   "0.20385238523852386`", ",", "0.17872487248724872`", ",", 
   "0.15394539453945394`", ",", "0.12952595259525954`", ",", 
   "0.10547854785478548`", ",", "0.08181518151815181`", ",", 
   "0.05854785478547855`", ",", "0.03568856885688569`", ",", 
   "0.013249324932493249`", ",", 
   RowBox[{"-", "0.008757875787578757`"}], ",", 
   RowBox[{"-", "0.03032103210321032`"}], ",", 
   RowBox[{"-", "0.05142814281428143`"}], ",", 
   RowBox[{"-", "0.07206720672067207`"}], ",", 
   RowBox[{"-", "0.09222622262226222`"}], ",", 
   RowBox[{"-", "0.1118931893189319`"}], ",", 
   RowBox[{"-", "0.13105610561056105`"}], ",", 
   RowBox[{"-", "0.1497029702970297`"}], ",", 
   RowBox[{"-", "0.16782178217821783`"}], ",", 
   RowBox[{"-", "0.1854005400540054`"}], ",", 
   RowBox[{"-", "0.20242724272427243`"}], ",", 
   RowBox[{"-", "0.21888988898889888`"}], ",", 
   RowBox[{"-", "0.23477647764776477`"}], ",", 
   RowBox[{"-", "0.25007500750075007`"}]}], "}"}]], "Output",
 CellLabel->"Out[14]=",
 CellID->94573768]
}, Open  ]],

Cell["We see that the functions agree to a great extend:", "ExampleText",
 CellID->1025086209],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"linearAutocorrelationA", ",", "linearAutocorrelationExact"}], 
    "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[17]:=",
 CellID->1689662321],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.01388888888888889], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxVyWtI0wEUxuF/mmVqZeKaTAlnOTVl5Eqb1tw752VLcBARRTYwGIllfbQo
c6WpSSVYVGCB5SaLkVQaXRRnRRuztjV0teXwlrmbNcEIu4AVO33owOHl4cc9
dHy3KoxhGMGf/7uhmxf/vwwUWjevx/SFHAl97/OmhsXP5FjsW7y4cNo/R45H
0yjf/i7ynxNgnW+J8kYEyEmom/Q3dG3wk5ORmRsQmrk+cgr8rvO2KqGXvAm1
s8Ff0fCQeZDX646K9s6S05E8Ythjr/xE3oxGDpPZeWKGnAV1d0EN0/KRzEd8
zESsoHOavAXGOH3qkd4pcjZKossWb1smyQIYpay0PvMEeSuWVOzyXeHj5G34
eVamTsl3k3Mwli3f7z35gZyL/q/f2jVPneTtcCo8lnbmPVmIqyz+5DO5g5wH
M7umbujGCDkfitS48pmAnbwDQa221id9S94JtkJ2TSS1kEWo8MxxVq8cJhfA
eqFNaXMayWK0bQyLSnn4kgxc13GCtR1DIauBhtYx3aqEfuoSaAaY+5VJj6hL
sL7sTWOXsod6IcIlOQaL7Q71Qiyr5n1PVF+iLoVNo9VPRZ4xhLoUU0srLnvq
b4XMFME+aNKxjt2lXoRRqyPN8OMB9WK4msJcN1mPqReD6xBzVZwB6iXIiFhu
Sz81RL0EC0/ylefcL6iXInF8jbgj4xX1UvgqmtUHqkzUZVh3OOZg1hUzdRkG
qvOah++9pi7H2lbP4HSfxfAbuszqJA==
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.01388888888888889], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxVyV1IEwAUhuEtS1RceWE5mj9laU6mrjnNudRvTqdWhmkXIkEpjboI1DEd
paQ2CsMgBlZSyiLNplnTkDQUZqwpSuYi1Ahz82dOc2UTKg3ZKnZuOnD4eHj3
l5Tmy7cxGIz4v/9vPfc97f9lwG+6tSzFb43sg5aAc/6Ngd/IAZDuynUFh30l
B0KdoC53ch1kNuy2vZrohFVyMH5d49XP4Qt5H1JLzXVxuSvkcEhZYR0xRcvk
g9AY+NwfF+zkSDxfDonRVi6RoxC56rJk3LCRo1HLdVxy310k8yDzdrnsugVy
LJiLJ14HDc6T+RBFOGefmOfIh6Hieal7lqxkARr6E3sebFnI8SiMbdvNi5sl
C3GxpuamTD5DTsB42WZJiPYTORFNI+kb8zMfyUfwOfuWdjR0mpyErlfeei/5
JFkEtmW+2qj/QE6G4Oqps2L3e7IYrDPqrpYCM/kolFX5FaKicXIK7pnthsmg
MXIq2iVRNqV1mJyG4cIKTVWvkQxwHvLLTzYOeVwL3JaqitsYA9QlsE6sbUw5
e6lLsLDO8drafEY9HXs6uDpT5iPq6Wh+Kj5WGd5AXYrz1f389rU6g6dL8bJp
544r/lqPGRnIU/4MHTvdST0Dwr7fQW7FC+qZ8PV1Sw4091HPRDHHJPR5PEhd
hk3Hm+OK4SHqMojZpnoV10g9CwXXmRFxVSbqWQjuZCuFAyPUs6HY0o2Gr4xS
z4ZgPe/yne1vqecgiamfOsR6Rz0H3RPd95OZZsMf5l3sVg==
      
      "]]}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 51.}, {-0.25007500750075007`, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[17]=",
 CellID->1485256717]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Sinusoidal Series Example",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsubsection",
 WholeCellGroupOpener->True,
 CellID->599608522],

Cell["Let's consider a sinusoidal signal set:", "ExampleText",
 CellID->1541301507],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sineSignalAutocorrelation", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"Autocorrelation", "[", " ", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "n"], "*", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", "100"}], "]"}]}], "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "100", ",", "1"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[280]:=",
 CellID->987869659],

Cell["\<\
We can plot the Autocorrelation and the CorrelationFunction results together:\
\
\>", "ExampleText",
 CellID->499623783],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sineSignalAutocorrelation", "[", "#", "]"}], ",", 
       RowBox[{"N", "@", 
        RowBox[{"CorrelationFunction", "[", 
         RowBox[{
          RowBox[{"N", "@", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"2", "\[Pi]"}], "#"], 
             RowBox[{"Range", "[", 
              RowBox[{"1", ",", "100", ",", "1"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", "50", "}"}]}], "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red"}], "}"}]}]}], "]"}], " ", "&"}], "/@", " ", 
  
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "50", ",", "5"}], "]"}]}]], "Input",
 CellLabel->"In[283]:=",
 CellID->1863208569],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Dv4PEQmrPg==
    "], {{0, 70}, {397, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{397, 70},
  PlotRange->{{0, 397}, {0, 70}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[283]=",
 CellID->199247487]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Random Series Comparison",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsubsection",
 WholeCellGroupOpener->True,
 CellID->1579845812],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomList", " ", "=", " ", 
  RowBox[{"RandomReal", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", "100"}], 
   "]"}]}]], "Input",
 CellLabel->"In[284]:=",
 CellID->909508419],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.1137012842533367`"}], ",", "0.6245048952390806`", ",", 
   RowBox[{"-", "0.8929583266559855`"}], ",", 
   RowBox[{"-", "0.46007094106310253`"}], ",", 
   RowBox[{"-", "0.906058981708592`"}], ",", 
   RowBox[{"-", "0.5287555270167625`"}], ",", "0.07082294351641849`", ",", 
   "0.05103813269521229`", ",", 
   RowBox[{"-", "0.9124494167665018`"}], ",", "0.5735784692093167`", ",", 
   RowBox[{"-", "0.6300589693615959`"}], ",", 
   RowBox[{"-", "0.42808804731346317`"}], ",", 
   RowBox[{"-", "0.04726648552565749`"}], ",", 
   RowBox[{"-", "0.7756680440487087`"}], ",", 
   RowBox[{"-", "0.46205410070713837`"}], ",", "0.1352505274447786`", ",", 
   RowBox[{"-", "0.3805769330553259`"}], ",", 
   RowBox[{"-", "0.2831621425220918`"}], ",", 
   RowBox[{"-", "0.7535393964947956`"}], ",", "0.7799012272682941`", ",", 
   RowBox[{"-", "0.47568335697909525`"}], ",", "0.1795717317854133`", ",", 
   RowBox[{"-", "0.4458101857169545`"}], ",", "0.1210617530124587`", ",", 
   RowBox[{"-", "0.31365492365273573`"}], ",", "0.18351456662089616`", ",", 
   RowBox[{"-", "0.8619182831878991`"}], ",", "0.5741335846958848`", ",", 
   "0.45519680829347253`", ",", 
   RowBox[{"-", "0.13636406008359314`"}], ",", "0.7019329828690615`", ",", 
   "0.6663477238062492`", ",", 
   RowBox[{"-", "0.8355087657463032`"}], ",", 
   RowBox[{"-", "0.13047336500571083`"}], ",", 
   RowBox[{"-", "0.35192325285528314`"}], ",", "0.27197695014264767`", ",", 
   "0.113012086182537`", ",", "0.09761317627626065`", ",", 
   "0.6926808238539368`", ",", "0.42768392191183446`", ",", 
   "0.01727058003722881`", ",", "0.7322228197066187`", ",", 
   "0.28196230142447876`", ",", "0.6758001405965643`", ",", 
   RowBox[{"-", "0.08317821182215512`"}], ",", "0.00022430962146868794`", ",", 
   RowBox[{"-", "0.5855302508535494`"}], ",", 
   RowBox[{"-", "0.4292021029492199`"}], ",", 
   RowBox[{"-", "0.8497880788628653`"}], ",", 
   RowBox[{"-", "0.9290664062973075`"}], ",", "0.1012900558434433`", ",", 
   "0.0068542034552399045`", ",", 
   RowBox[{"-", "0.4971107474863312`"}], ",", 
   RowBox[{"-", "0.9375497047544408`"}], ",", 
   RowBox[{"-", "0.9963481725731822`"}], ",", 
   RowBox[{"-", "0.18091237265856286`"}], ",", 
   RowBox[{"-", "0.16322974081277764`"}], ",", "0.02220507602555699`", ",", 
   "0.6439003705316191`", ",", "0.6811289144613499`", ",", 
   RowBox[{"-", "0.25159053832956824`"}], ",", "0.9442856702883198`", ",", 
   "0.2437333648504203`", ",", 
   RowBox[{"-", "0.6399209074818368`"}], ",", 
   RowBox[{"-", "0.31072517999173455`"}], ",", "0.3849885492804934`", ",", 
   RowBox[{"-", "0.3256391838652233`"}], ",", 
   RowBox[{"-", "0.3299538212602946`"}], ",", 
   RowBox[{"-", "0.09579751972607786`"}], ",", 
   RowBox[{"-", "0.5874858933304563`"}], ",", 
   RowBox[{"-", "0.03156389354742828`"}], ",", 
   RowBox[{"-", "0.8982314863642591`"}], ",", "0.8532119020996625`", ",", 
   "0.8396923260752192`", ",", "0.8769156851619524`", ",", 
   "0.416309170045849`", ",", "0.08626055087057516`", ",", 
   RowBox[{"-", "0.9917551040769457`"}], ",", 
   RowBox[{"-", "0.8696654482032655`"}], ",", 
   RowBox[{"-", "0.7727333202250621`"}], ",", 
   RowBox[{"-", "0.8597400287634738`"}], ",", 
   RowBox[{"-", "0.18233133482218955`"}], ",", 
   RowBox[{"-", "0.8163375733900402`"}], ",", "0.8058899433633973`", ",", 
   RowBox[{"-", "0.6574454957910087`"}], ",", "0.9198157931886852`", ",", 
   RowBox[{"-", "0.7600706192606927`"}], ",", "0.2702432409083104`", ",", 
   RowBox[{"-", "0.9118590886672426`"}], ",", "0.019717522934833198`", ",", 
   "0.6465932048226213`", ",", 
   RowBox[{"-", "0.4108731748473011`"}], ",", 
   RowBox[{"-", "0.012127811655893161`"}], ",", 
   RowBox[{"-", "0.8625933253697031`"}], ",", 
   RowBox[{"-", "0.6462961015778355`"}], ",", 
   RowBox[{"-", "0.9900346399961077`"}], ",", "0.5591372699723243`", ",", 
   RowBox[{"-", "0.9678053959906205`"}], ",", "0.7279587567166832`", ",", 
   "0.010011189634151041`"}], "}"}]], "Output",
 CellLabel->"Out[284]=",
 CellID->1597390094]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Autocorrelation", "[", " ", 
      RowBox[{"randomList", ",", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", "100", ",", "1"}], "]"}]}], "]"}], ",", 
     RowBox[{"N", "@", 
      RowBox[{"CorrelationFunction", "[", 
       RowBox[{"randomList", ",", 
        RowBox[{"{", "50", "}"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[286]:=",
 CellID->1573779256],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.01388888888888889], AbsoluteThickness[
     1.6], LineBox[{{1.563173424237744, 0.40672151637029313`}, {
      2., -0.05345610800564704}, {2.8564839112762015`, 
      0.40672151637029313`}}], LineBox[CompressedData["
1:eJw10WtIU2Ecx/GVSYpQUUE3zUtay1lOW023bL+zuc3C9kJBEqwoDAxG0QvF
S8lZWmkwx5ZNclriXpTLNB04RyvZ1ojNHKGpsdH1jYQwRkhFW/f9d+Bw+PI5
z/88hyfz7MWKc6s5HA7/7/3veax7qGXYl4SnK29G7GsDEs7/awMM356wKUuz
U7HejJSO5u+3envIt6JVmK022oLkqeBdaOAyLW7yDPhkiVa1I74+C4M3Cl2m
qmnybCwHim+KW33ku9H/eHt7mlpPzcW98VU+675Oej8XKlQXVbJO8jzU911d
aXfZyfdD+kUg6BOMUfPRrJxbll/3UxdgyOOwmGeGqQthM9yt/Gi9TfMOwCiM
CE6vj39fgBENV1Y//5r6INp+elX3LTbqQ6jblKDj9MRdiOmM9NmmTw6aX4RF
bXrhLomHvBii+TUF5UEfuQi+Xwlio/8VuRiZ/XsWc0168sOIeCNM3W8veQkW
7Fu62OR+8iPgva0J20XXqCUwdY1mXZ6ZoAa6eYzeZnkZaxZozA4pyw1OcgZz
3EcqrX80Np9l0PI5afJrTny9FGHlpPmUu4Fcit7jHYoPaS7ajwzywSvhnF4r
uQxl1drwiegArS9FRdChGXvxnLwU25g7O/J2WsnlWJdoOnneMk4uR6A21fnu
R/x8FPBckifnh+g8WQU0TaJofo2ZXIm2TuV7wV4XuRLuB1F+I56Rl0Gr21hr
UtH/sGVYCD5cKjFM0P6PgmnsClWd0U39AbTe6Z0=
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.01388888888888889], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJw1kW1IE1AUhtcUViHlmlGDUKulS2T4mdnMvW5ucwbLJDPK6MtwYFk5Nmha
LowZpq3UGZESFIw5p06noqLNJjht/bCYIxSDOf1jRaUlBH2zswuXy8Nzzrnn
3Lv7wtXCS0wGg5H6b/8/55Ut15ZcP0Rj3951D7PmRIzgwvRi9onF1DbijTjt
KIey7S1xJFSG/OJZl9UZ5Cg8mnnf98XRSrwTp+TcgkKdh3gXngYqtFP+JuJY
mKXrq97BfuI9cKgHJ2wrhcQ8TPLYSvv2ZrovDt7Hs+eskS/J8zG0VuWUrw+Q
TwCLVzYeGz1OPhHhvucdOnMPeQGGUgI6ATc0TxJu1XSsJF12ESfDxh5mWa/b
iVOg2R8hkW8JzZOKMNOHupJKPfk0TH78Iy0omSafDt5FUVGLr5f4ADgP9h6t
7J0izkCGRG34brRQ/kFsjmrgvtYMkM+ETGX6NC8dJX8IRWlN6ta7LvJCeMKS
M9MFWuIscLjNDXc0Y8SHse22+UX4zfuUn42FX72yLmU9sQgV4nKt4Eg3McCp
i+nZYZoIsh74XNb5Zmmkk3wOBnr4bsnPJ8H6+hy8qq6K2BRvIy+Gr/7G8tl2
E3kx4lsUqkbFCPUjQWKj22PwV5OX4HyimCmxUzwjF9kjQmFtcx/5XGR1ZrTr
E0LvI8Wq0+b+Ku4iL4XREojW2h3kZdjnLdb41+g/9DIMe9hXSsWh/5MjpqbU
cfI3xevluLfgfhh3vJ98HvLdG2aWR5Opfh78c1ufqeNs1J8C3lq+hcc1Ur4C
Z47NCpkmu/MvFTLz4g==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 51.}, {-0.4330802970952091, 0.40672151637029313`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[286]=",
 CellID->966250191]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Sinusoidal Signals with Uneven Sampling",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsubsection",
 WholeCellGroupOpener->True,
 CellID->1914626401],

Cell[TextData[StyleBox["Below are some examples of the normalized \
Autocorrelation for sinusoidal signals:", "ExampleText"]], "ExampleText",
 CellID->1094601305],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sineSignalAuto", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"Autocorrelation", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "100"}], "]"}], ",", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "n"], "*", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "100", ",", "1"}], "]"}]}], "]"}]}], "}"}], 
      "]"}], ",", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "100"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[292]:=",
 CellID->630175132],

Cell["We can randomly sample n of such signals using the function:", \
"ExampleText",
 CellID->1926493690],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"timeSeriesSine", "[", 
    RowBox[{"m_", ",", "n_"}], "]"}], " ", ":=", " ", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "100", ",", "1"}], "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "\[Pi]"}], "m"], "*", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", "100", ",", "1"}], "]"}]}], "]"}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "First"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[299]:=",
 CellID->2111580167],

Cell["\<\
For these signals with n points sampled we can calculate the autocorrelation:\
\
\>", "ExampleText",
 CellID->243258213],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sineUnevenAuto", "[", 
    RowBox[{"m_", ",", "n_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Autocorrelation", "[", 
    RowBox[{
     RowBox[{"timeSeriesSine", "[", 
      RowBox[{"m", ",", "n"}], "]"}], " ", ",", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "100"}], "]"}]}], "]"}]}], " ", ";"}]], "Input",
 CellLabel->"In[296]:=",
 CellID->13116447],

Cell["A plot of the regularly sampled autocorrelations:", "ExampleText",
 CellID->2097255643],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"sineSignalAuto", "[", "#", "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], " ", "&"}], "/@", " ", 
  
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "50", ",", "10"}], "]"}]}]], "Input",
 CellLabel->"In[301]:=",
 CellID->1404792735],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
KChUxP8DIB6nBQ==
    "], {{0, 70}, {397, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{397, 70},
  PlotRange->{{0, 397}, {0, 70}}]], "Output",
 ImageSize->{401, 209},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[301]=",
 CellID->825508336]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sineUnevenAutoDisplay", "[", "n_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"sineUnevenAuto", "[", 
        RowBox[{"#", ",", "n"}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], " ", "&"}], "/@", 
    " ", 
    RowBox[{"Range", "[", 
     RowBox[{"10", ",", "50", ",", "5"}], "]"}]}]}], ";"}]], "Input",
 CellLabel->"In[302]:=",
 CellID->346795152],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sineUnevenAutoDisplay", "[", "#", "]"}], " ", "&"}], "/@", " ", 
  RowBox[{"Range", "[", 
   RowBox[{"50", ",", " ", "100", ",", " ", "10"}], "]"}]}]], "Input",
 CellLabel->"In[305]:=",
 CellID->315501706],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXVdXFduWPt390o89xn0996H/RY/7cke/9Bj9env0K3iUnCWpB0UBCUoW
QRQ4JvQYMBM2kiWJCAiCiaQiBjKSk7u/qinVRaW9qnYi1DfUUdauVbWq5ppr
fnOtueb69/2h//D5519++SXiX/HPP3479J/h4b8d+Z9/w3/+NyTC3zfE2+u/
QyK9fb3D/2P/v+Dkf+Fv4T/98gt3bDVhwoQJEyZMmDCxe7G6uio/+YOH6yuz
l2EKYpvAFMSORmtra0JCguRkS0tLdHR0WFhYfX29W2q1B2EKYpvAFMSORmlp
qY+PT3x8vPjk3NxcaGjo8PDwu3fvgoKC5ufnhZ9wscvruCdgCmKbwBTETse5
c+dgdyRWqa+vLyUlhY5x0N3dLfxkStBJMAWxTWAKYhegv79fYpWamppyc3Pp
OC8vr7GxUfjJlKDzYApim8AUxE6HXILPnz/Pysqi48zMzBcvXgg/+WxiflFh
ENWEPTAmiIUlUxAOhimInQ6xBGdmZubn58fGxkJDQyd5hIWFjY+PCxdDdmXN
gx5xZV8m5txU310LvYKoaB2CID6NfXdTfXctTEHsdECCwuhBfn5+aWkpDmpr
a48cORIeHm6xWMQXQ4INXR8hwf6RKTfUdVdDryCe9o5CEL2D4wr3MmEH9Aqi
9aUpiJ2BtbU1eZQO0WxI8MW7b26p1R6EtiCauj+5pVZ7EKYgdiUgvjfvJ00J
uh0QxJeJeQiirHnQ3XXZ0xAEUdo04O66mDACSHDk23dIsPLpsLvrsqcBQSyt
rEEQ1yx97q7LnoYgiGJTEDsTAtO+W/fW3XXZ0yBBeCVZcks63V2XPQ2K5fBJ
tpy93eHuupgwAkhwdW0dfdqV8l5312VPg1QpKqcu8VKru+uyp0HGJSqn/uTF
FnfXxYQRkCp5JVbk3elyd132NEgQiRdboE3ursueBgki6VJr5Jk6d9fFhBGQ
VQrNqEktbnN3XfY0SBBnb3fC63F3XfY0qE/LK+mEoXd3XUwYAUkw5tyTEwVN
7q7LngYJotjS5xFXtryy5u7q7F2QcblW+QqCWFw2lxJsC2xsbLBfbJhpQ9wT
M4vrep6112BAEKVNA1Clr5PzNq834SSQIMpbuMU1n8fNxTXux40bN0JCQo4c
OTI4uCXMqbi4OHITY2NjwnmSYPbN5/6nHut60J+POUPW+earQ6q9+2BAEEBT
9yd81TfvJ11e390MA8alpYcTRN/QhNMqZYIJvb29R48enZ6erqioSExMFP8U
Gxvb09MzzUMsYlKlooc9nnFlunJ+HslrgNDvN/Q7rPa7CMYEwRUcHMdXfdr7
2dU13r0wZlxeDU9AEOjZXF5fE1tw7969u3fvWvlMxb6+vktLS3R+ZWUFYmpr
a2tsbBSnv7NuqtKNqteQIHtqjsnZJVyPPzl6YnjsSf3xZWInuWOGBUHxz5an
Q46qycrquqNutRNh2LjA6zTXdDgc4+Pjfn5+hw8ftnlSQFFRUXV1NR2HhYV9
+/ZzCefIyEh4ePijR4/IZsmzej7SOYxT38ktez+QWMEeeLC2vhGYWtXycpTx
eglOXW1b3jnqaUwQQvzzzarX/SNTcwsrdlaDxOqbUnnsfOPq2o75eg6EYeOy
uLzKremofOX6Ou9iBAcHDw1J7bXiSQHXr18vLy+nY39//8XFRfk1qamp4gTs
YlUa/DTNWLecWx3o0M7fewGPlbGrGRiZJmqXf7dL77ze5OwiCj7r2zEemTFB
0MFvCeXk1x+3byb6akUvbhJ7oSn5cuvO+noOhGErD3glWfJcuKZjaQ9MdoOP
MZ4U0NLSkpKSAhvU2dkZExNj3cwW1d/fHx0dDSOF44iIiOHhYaEISRANHs2+
p39M7c5ibGz88EupTLv2rLr9PUoNsPWE8KdwccqVp/i3ruMDSxEBFfwklCsb
mJ0wLAggLLOGOv/gtCrDFah8Oow7nLnVAXq2uLzmlViR+We7fe+0I2GPlY88
w63pGBqd6Xrr3JQ1P378KG8ZDEmv3vV5WQMCAhhPClhfX7927VpkZGRUVNSr
VxxtFrJF4Ty0CTQPB+IipEp9Q/yIKJtj+PbDJK15f/dxir2Dyi3pBLUDQ/NJ
tmTo1K8ThU14kE9ypV4Hyl0Ol2FBAHGFzXhZsDX8C4fdwNM/fJ3df7Ii9kKj
UDzvThdu+N1uZ3Zlbf1i6cuJGYWeYXvCHuNy8mKLJ29cnLpIam5xJbW4jazY
rl+faKBPIywvLyvOYK6urkK4kpNkkqAF+KRVz4ZZKkYTCt+mFkAAcHC5jEkQ
4Vm1CX9wbYP8VvbBsbHpBTwlNKMa/+q1mIkXW0bH3BZiZEAQVp6U4kNRzCc+
st6Hbvz4AdfVO8kinlUBA8fdHrcN672bGGNTC0fPN+I+RQ977LmPGOgkM2+0
Oy/PlT3G5eztTv/Tj6Ny6mAgVpxjHNG2D52txye9Vf0m/Xq7Z3zZx6+zzniQ
GDD0IBjz7shMbrhP0wWSIA1Y3W94x1LkcG4D/tBxRHYtixWbmVvG/f98zDUq
CsHqYA5sozBUXA+JF9zvtl1gExQXgRraz09cAJ+tW3vQV3o1rDs+6sW7b/IJ
u42NH8Hp1YaXirT0fEq58hRMD38g+n3x5Q6JCl7f2ABjJ4qSffN5W9/n4c8z
zthE2JhxGfn2HV0Z3BBjgrAJGKzgtCp0mE97R+m/OE6+/NThDxIDjhKN/zhw
bp0druzTwJoYE0bhy9PEHP0XTdE3pdJmO3z++oswTA2yzfVOD1h7p2PnG8My
a/AIiBt2k33lQtq1Z9BBuA+gPdt/1k/Sp73m46MMEJj0689Ag+UjMzRlMDm7
ZKBuoRk1cPzz73YNfpqGpnvyEz0G7iMB+B7liwPVp54Nfz44n6hoQyKILxNc
UMfdeiZzz465hZWonPoDJyvEYb3XeXI+NDrj2GcJWFhahS7gEV6JFYdy3ZAq
wd/fn/GkPRCsEtT//L0XNq+38NtPvP3wM9D9wZN+lt0obvLuqqBQcAkDU6s2
GCwyZRy9zk+pVz/jpiQaX4zYLAWM8vFFfzzqoXiGJ11MpdwIQRCEMd524PPq
uglKocMpVLIXLwc497P2ub7ZGWBihuPwN6tfC2fy7nThDAxN0qVWw7QKt/Xk
6ZlQ8xp+yglSNnZDR0HSpwGguMmXHZYACiKAdQ5J58ZS2rZORsMVxTe5cN+2
GuoCvKTP43O4OQ0dVLQMktq+dgL51MDGxoanpyfLSTshSBCCg0dv83oQ14DT
j4XuiOYLqttttMPES62w9cJ/aV8eFj4Pd1iwXHAEIs/UoTME07NZ8OIjjgOg
Z1tZXQdvYczvN/19CW4ay5UOh0SV1tY3UH+8ha6b0FAnPDj5T7ihgdkZ4Gnv
Z8kiOHB1mL+Y/Cc4//6LQVpVUvtWsrMPagje4vaUmBLjYqXprZMVxuZrJABT
gl/jd6oyvqhZUWsyb7TjWfaHJgqAqtKsE/54bs7oTc8tg8O48lMvLCwkJiYW
FxfbPGk/BPEdyWuIK2rWvhgeHD6F2O9gaYcw5d5JljO3/r9Xmfq+5Mk21AyG
HJVTJ/y3hycbijxEjKWVNa8kC3xP+m9qcZtfSiVLZ3XyYsvv557YvMwZUKQH
wiswAu7M0XzV+tPsjN6VBZQqRD4mOTTKBRyWtxiJtF/f2ABRiZFVFQQ+NKPa
wA0dCLkgiEA6ZBEuESSNqS4aBH7kuK0QqPJ5JZ3w8dtffRHOozFAl122sriy
svLvf//77OyszZP2Q7BKUOfoszZcbBAA+fQZOBjap0YpGoKTTECA76Gf0R7m
+vCFm429szWpOLwVPgmMVoAi/FMxsadgLcFfVgNNlFwqfal9mZMgpwcnCptg
aNjvML+0qh0PQJ9F79zxiYImsVkRAAIAvqG31yVAuVCTGhlRuV3zBufhJRm4
p6Mg79NGxxwzpLa8sgYfBw6g9mWHcxuC0qockm8KfAy0EK1ITjJHvn2Hy8PP
ULgoGHt4eDgkJITlpJ0QJIi+Ar6JdogFKYXEDScnQmMijCYIOl5vmeikTUXF
hkMOGoUb3ZrvperZsM1xVEmHSYNy0BeNItbNyN7XKpars7Pz119/zc7O1r6J
YchVCZbUJ7mS/Q40YqYxrTA7v+yp059d4Zm52kAr2gz4sF6nDLwd/SQam9ww
UcyJ9syICwQhlwUIcOSZOjvnZCns3OaCDgqA1zuUqggYOA1rPja1gPdCt2bM
iBgQxIEDBxhP2gNBfLRhrnYIEwVNSYaziC2jj1IrRWNiY1tDrRaXV+G0CkPE
ioB9kXuCpLmt6uHBoFue/OyA+CQapE37eLygCY6P2sxFb2/vX/7yl7/97W/a
NzEMuR7pTUtIfs2XCa14PHC/g1k1GhdIQOOlNSozC2RfbBJgCSg64mGjgs7i
ZT3jpbKTwPWCsG4GFNkZ0YH2HJ5Vy9IxoimCX7GMG2sA/AQ30Z7deM+7QsZm
sQ0IwmWxHCTEjY0fUHw0eI1gCfAf+XAHPh1MucZkDfiGd5JFLkrOyidWqPUh
sP774svlIR8UgqsRSkcTnRJFI4MFKq5Wihxk7X3oYJJCQ0M1LrAHcnpAU8zw
ERjvkPFnu5+tuJq7dW/l1FcDZc2DGvEVNLmsyymbX1wN4AJZ69XYHUxPcHr1
9cpXGpszOlsQ8pMzc8tojfZEsAx8mmb/VsQTbHoW2qBEEzZdS7yU4bkevYJw
ZXwaAeZYm/nDAafxE/nIj8ZYHH6i2QdJKVhqD/VUorS0oaJ1SFIKfSDYskbr
ir3AURFJKYpE1YgDocootmdCSUnJX//6V/BttQvshPzR5IOg5oylgtKqTl21
salEP7+cTeM1JYBk/TenuRVLwcbhgzPW0Lo5UqGxspisD0qp3db1giBk3XjO
Bf4ZDb+nifjxadZlZaBqwWlV9uSRxgdEk7A5MoAqQaESL7awxFaJYUAQLu7T
fPhN8dCAQcbEJ8VXCtG2kgu4lJLxZWqlBE9QcgH1M5KLhQNKNApPU37bw7kN
aqW+L6x48uP8kguWV9ZAJtVK4d/4omYuslRd2S0Wy+iowURJLJC/5uCnaRyT
36dYc0kpwbKrCcJK+QdOVWpcID4eGOEqIESmabQKSSU1bhueXQsXTEMQqOHK
6jqO1aaBXCAIxWbQ9fYr3hTkx8A9V3g3EJrFXqSWJxjaA84aoFnpW9VMTI9G
hxiXEQkwIAhn92k+JtThqI9sCsJOuFIQgjgUz4PweCdZwNZ0lSK08ZRbnjVX
oxSXTUUUj8T+LELmjXYYcXG2AY1SYGiJl1pBS959nJL85FgRuN73tPLO9YGT
yluA0bSg4hpbmq6iZWsS0PymWhgMaKFaoG/Gn+1qWyTQVgiKcYnn772AKBVN
PI2zvVeKRyUvr82tGcYUGw/cdpsBNgSKItMYMBTQwA+z9AzYyCs1Obu4L54p
LHP48wyuZIlqBn/Go7d5Wg8fdbaJDg0Hgjcnv0DjpDC5xl6q4EE3julzsZcS
HgdvV+MCycHk7BKOk/j9stVK2Q9vb2/Gk/ZAUmeQVXyN2XkF1aDuQtE9p+Uz
kkAyAuma2ihE8uXWsEzlaTg4KYkqq+Np4kwcgk748eNHcFqV2j7mNMXzqFEh
mpF8Z/dmr1JsPHf4IX2bSyBhZ0Mzqo/ZmtglUBiesGJXDQX3uz2Yk+OhQ0Pb
0I5+R8uBCVOT6XaAcxnnDodDvnBhYWFCQsL4+LjNk/ZAUmGKOlaM/jqa/yRG
PcbeJ9miuDcB2rBar2UVejxZZ7K8wmUxulSmHP5K+1/IB/w1ei0r3+MFpVUp
Tm2jhjbXUDgbii3n09h3lvkvim9hz7QQkl6tPbZD+fTO3WGd5utmyGXU9ZYb
PtWbDtT10NDfqe/cNhzFFbZTPYiB5u3BnJJLjI2NH1AreJG6StHkmpruaODr
5LzaYmEHorGxMT09neWkYUgkSA1PPjK5vrEhWRUlwfEChaD3lbX1/ScrNFTj
SZdCEK91c+JbHmdOoKZVUivVdIpC15iVRv15z3RLF2ogIMEZUFMlfFWbW6/i
veD9KbJrRWj49VZealE5deBU7DeE9oEoakcAgviBDDtwJaOToM1JYNn17oTb
8eYrS0yFItKuPfM7ValrRpImWI0lg0q/7uDVpm6BRIIf+U5eHhpE50ub+sU7
7IiPyTOVTD2Tua9p33K3HzzomBZbyR/HjfmcKBXHmIlLWflc8WdvbxnqGZ9e
9EqsiCtsFl8mKUXLsSWti8IpB0a2OFm6doR0CNRUieakJMOA6+vrQg25xa2J
FSz5B4QiFKX2bXJeMZiN1n0IcbaSTyH5pAJuVnOLPj6IDIr4srX1dT+dE3+K
T3cBtF0tspu60gFRBiGWoU45KD5QcRBYEQtLq1CN1GIbIT1qoLi4nb6zjER8
tGbwuuyluBSFxx8ciTn24sXP2FrJtonUM0iCOfOvVXgFRoWGhhUVFS0vczJt
aWmJjo4OCwujDPCra+sgGBK6OzExEfV7nLevf2pq2tzcnLwUEJP/BFxCbL+y
bjwHc35c2ywEAcpLgaFJ2Cb0zi8k2jcgJDIyMj4+Hmc+fPgQFxcXGBh4+fJl
VyqUmiqRKyHO8YgviRoKgsjKLfL2DQiPiJbsXylGT09PQkICPgUJovPN132H
zoUdjBB/HAHX+AGBmbllCCI1NTU4ODgjI0NNEAK+TMzh+4PG0NhpV1eXWBAH
wyO8fQPzL9/R+AJ4Kdpt0+2C0PgVphNNKP26jlWuagtmWUAhGRWtrKMKtLTZ
np3EwQyhki5It+s8yFUJLrx8DqvoTrNXQASuRFu1Km2b2MkTbInTGhgaHXTi
0srKyunTp5ubm6EXaOfDw8Pv3r0LCgqizXqOnW8MzagRJ824cuVK2NGMiOya
7Ozs8vJyxVLUhQoDOLSE50LJU3Sz0EGcUSxl5ZdCwO0SHtf+chid5+3KLrwL
5QdITk6uqqqCOuMF0RU46DPbhpoqod+G5RXGKr9+/QpNFwsiNDzaI7bkwcNS
yf6VYhw/fvz58+eCIEa+jKMbLLhVL/k4hNgLTbTFIQQBywVOqCEIMShwPb6o
+evYhEQQOVer9/1+JVCpFAEfH/ecmpratoIQQFHBFPYgJsxWJVYJFi232ozU
1/pzSK2SMkTZLIX/Rp+tD8+q3ZCdZ3kWAU4r3M+EP1okl7meMBuGXIKHcxvg
wUlOxqRe8Y/JTUtLI3og3zYRn0Ky8HZ+YWn/4fxzdzhlvHDhQklJSV9fX0pK
Cv2Kg+5uTtCU6VHcGfYPffA4fq/g7rOkpCSLxaJYCi0JVA3dL+WZvN/QD181
KfkUakXL/BVLAegGxQvVk8898A44WFVT19nZuba2htfx8/PDv/SOt2/ftu/r
6oCGKp282IKGSsdNTU2PHz8WCyI6/mxIerVk/0ox8BOYErVJQRC+IUdO84sO
xB/HyuugZ/zPgeLPnz+jC0KnpCEICbjlGCdKY+MSxYJA7xSUVgU1UStl3bSS
eLvtLAgCvEg4+8mXWyWEWXHD95aXo+LlyRLCbNWkvgRwQt+EuyyEmbKdSLI/
SQiz9rMIEdG/e/sFBwaHuZcwG4ZcgnDG5Ys6A1OrcB6flOiBfNtEohPiEMGf
a9s7P+LKiIiI8fFxtNjc3Fz6NS8vr7GRG1JeXOZ2khKPtKABgHhERh+G4Ubz
UCxl5aPchSRsXOBQdBZ+hZUnVVIrRctFybmenV8+cCg3KCwKfCAnJwcaNzY2
JjSAmpqawsJCwx9WLzSGcWgxuziDmVgQ/jF5NH4i3r9SEWJBHDxyMuA0N00g
/jjWzQx1wpwyvie6Gm1BiLGwtLo/MuNQbAoKQgcHPk2jVEpqJjct2zqkVgqA
luFB21wQAootfZ5Hbx49FqvhuRBOF7eBaAk56ySE2Sb1tfIJVPeHJWbkFNok
zMcLmvxOVYr3CQXvtem5SACSjO4r/UoDdPBaOTdk7S7CbBhyCXLBWnFl4tH+
aX6HlJtVrwVVUtw2seBBt6doqyNuIPpEaeHFK7GxsaRrkGZWVhb9mpmZKRi4
S2UvxQklLtx7sY/PR1FXVwdLoVbKyi9ookCRkFMP8BYwlDdv3kR9QCo0SoHg
HcziNjggzkbRp2hmAQEBAwMDQlRzWVkZ7mbf19UBDT1q5W29eOGnIIhLl6/+
Fpl5gw82U9u/0so7DhCZWBBHYhMp/FXycUpq3whJVFCKHBCbghCAvggvEng4
FZ/O19fvcFIBSkXFJHjwmdvVSomxnQUh4MOX2d+i89LyijU8FysfyCqOjlAk
zDap7/LqemTaA++EhwMfviacTLxz/5FiKaIQ4hhRPAjVs+m5SECdc8OTJ8cy
bnieePRt8ru7CLNhyCXI+XFbF9vSMgFolqBK8m0TrZspHIXUFmdudfgcjINl
gUUg7SDjO8kDpEKIshv5tiUKyy/sWHQiZ5fRbeKJaqWsm5NQg5+m4atmFNxp
bW2FTYcudHR0aJSiuaTXwxNxRc3+R86cPZuLuvX39+MyeD3wHfCO8Avwgrih
Pd9WF1HXUCXy6++Jok0EQdy+X+kVdKihY1gsCDnOnz8vEURQcIjHsZIHdd2S
j8NnWf/JwNEFERu3KQgBeER24d19h/JL7pf5+PrtO1zQ9PyNj19gXH6VRil6
BEigkwShC4zxpb+fexKeXZuenq7muVhVUsRYtxJmm9TXymvW/hN3vQMOevv6
H864Ky/FJeguaoajJA7DKC0tPXfunE3PRQKBMCefzkDTumXpcBdhFsNOVaLE
j+LVTD/nNMfm0LDJKsm3TSQkXmzxTamkFJ2RqXfEcchwxnGytrYWbTU8PBxU
SvzQ4PRqyimBp3jGFEdEx8DxBz//+PGjRimKNc0t6RQW083MzAgiUCtFmcNp
R7CLDzrwUrTPIzpq/Pr69WtwEjRL9AP2jB4ojq4AxcXFkZtALyGc13Z5/E9t
WUQmCKKs6d3+g0kHwyMkghBjaGhILojqmhrfwIM+/kFl5T+Xwr3/PHOlvFec
ph5+Cj4FiyDEIMIQk1vl7RuA7xyYWvVbVE5YeJR2qYWFBScJQi8Yw+apvzqZ
dErNc4GjEXmmThLMJifMNqkvlap6NowWezj5D6+AyIcV9ZJSlFVGnJKOCDOj
56IIWBNYpajUEncRZgH2q9LPPdlF623z+C3U5fn85dsm0lrd+s6PFKOrmFSN
RoAlJ9OuPUPjt25ORvePTKGR2yxF2Tb2xZer5SxSLAWg//Tgd52gsDQ0QPTS
4gsUB9vZoTa6AqA99/T0TPMQq6q2Hp2+2haUViU/T2GB8wuLBlKwNnd/9Djx
kKZ11tY38P1p1lKS6ZdFEGJQoLUHv7EUEWnP+LLJmXntUgSHC8IAGHkaLTGL
/D1e0XNZWFqlnU0atubxkBNmm9TXKiLMd+4/9AqOSb1UKy7V2TuINpDwR4tY
Q/GIVh4snosYYsIcEBTiceJRVPQhtxBmgkNUiTwdcZ8flVMnnwlVhLAJCwXn
S3bO1QCtMwWDyrnVAQrNnjYKOoiC3kkWXbHWtCNwRHYtexFdUBxdsfKDRfjg
bW1tYP6SQVptVVIL9dResKYNtNvjXA7tytn5ZVrFr7ZwQy+SL7d68BuFgKuA
YRoItXUsHDUIIAG6Eb+wo4qeS+aNdvliMUXCzEJ9xYQ583I12O/DUguVKrhy
G43fJ9nybUo5/zaL5yKGmDCXWmq5JXLXKt1CmAkOUSUy2aEZNRQ8uWBr5w4J
0PuBb9O0ctdb1tg/Inhdb78Fp1XpUgFSdpa94MUAwUNLsDOPqIDZ2dlPIqBV
KI6uACMjI2hRjx49IjotloX2YmGwULRbdMLC2tiegbHBT9Pa6TFtgnZGvlj6
8nRxGz7IkiP29bDyWcSFJTalTQPuXePp2EEAMSjDgHgVEnkusMhe6lmJ5LBJ
fQlEmN/zS2+gYlfKe04UPKFj9hBZxmcJhDlmcy2Yawiz81SJAmhJWcgVZd/z
l6LQiyv6dC06o21Q4ElxSy+V8nuogWIPWHaQlwDPsrnVMiNA7xNEAB9WnBeW
IDU1VRwmZFOPyExQ+CXMDXncusiwIrJvPodvyLg1ISP6R6aEpOsrq+uGc8Pa
D4cPAojRNzTuoZQlcpBfrcyeUkAvQICjz9bjESAAUDSnfl50oezLfu2HU1UJ
bZLiHGiWkD0rPq2pDDj9GJaa3R+kPUBpHKZ3UEfWEdjEiZlFAxuHqXF1h0A+
LwwXAKakv78frB4mD8cRERHwKYQiLKp0sfRn0AslAb5c1nut8pXiDsXsgN35
LYHrHhnTCrEAQhkdY93ywKlw+CCAGCur0u1uCZRp0E652MTY1ILebNs7EQ5U
Jfg4BxIrMm+0n73d4aU0QaAGGjvlZr7UN89VBI2MgX44ZGdD90I+L5yfn19a
WooDnKfBChyIi7CoEi35v9/wLrekE/2/o1zFPx+/Mjwot63gKM+F/YkJfyik
0uIiwJMt7CpjQgPGVElNiJTBJjCVW9WiqxqhGdUUYqGrFFgHSh0v0NqwY2dB
Pi9MAGeA3ZGcZBzGiTxTd+hsvW+Kwc2CFbGwtKqxt+AOgqM8F/YhtZ+bLG/l
/HBSTtva7MaELuhVJbX7UOpF/LlaoS+dXc6tDkmMKAsoe632bnS7GLqUyIFz
lLsbThoEEEARkhSwsbi81v7qC+VRud/ggB2HTRiDhgTRMYIVeNjaF1sOGk/Q
m95/+vsSurVtMg7jejCqEqkMLTVydpV2AZw0CCCAIiQPJFYUPOimAD+vxAoP
pTSnJlwGbZr9pGskr6STfVNCwvrGxsrquoEo0L0Mdn8H6sMeWmPC6pxBAAGD
n6aTLnHxeIfO1j940h+eVYtebmVt3XZJE86BLvGZcB5MQWwTGBPE0Og0TQqs
rW90vdXKjmLC2TBVaZvAFMQ2gSkIEyZMmDBhwoQJEyZMmDBhwoQJEyZMmDBh
woQJEyZMmDBhwoQJE7sY/wc5vt50
    "], {{0, 70}, {412, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{412, 70},
  PlotRange->{{0, 412}, {0, 70}}]], "Output",
 ImageSize->{416, 4286},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[305]=",
 CellID->1574243532]
}, Open  ]],

Cell[TextData[StyleBox["Let's display the numerical difference error in \
autocorrelation for uneven vs. even sampling.", "ExampleText"]], "ExampleText",\

 CellID->200404388],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"errorSineUnevenAuto", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sineUnevenAuto", "[", 
         RowBox[{"#", ",", "n"}], "]"}], "-", 
        RowBox[{"sineSignalAuto", "[", "#", "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], " ", "&"}], "/@", 
    " ", 
    RowBox[{"Range", "[", 
     RowBox[{"10", ",", "50", ",", "10"}], "]"}]}]}], ";"}]], "Input",
 CellLabel->"In[306]:=",
 CellID->462165642],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"errorSineUnevenAuto", "[", "#", "]"}], " ", "&"}], "/@", " ", 
  RowBox[{"Range", "[", 
   RowBox[{"50", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellLabel->"In[307]:=",
 CellID->169593895],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztfdlTFN+W7onul/vYEef1nLhx/4uO83KiXzqiX7ujX8ERQQREUPCnMgoU
yCiCIKioiAOK+FMo5kEZZFYEBZFJRREZZChmrPtlLkiSnCorawB1f6EVSVbu
HGrnXsO311r7/x0I+G+vf/nLX/4S9H/w8d/7Q/7jxIn9p//n3/DH//oH+Rzx
P3zov/yDDx85fOLfD/wrdv4n/v9fHM9tWxkYGBgYGBgYGBgYGBgY3IWNjQ0D
XzEwMDAwMKjh7t27/v7+p0+fHhwcFO9vbW0NDg4OCgoqLi7erXtjYGBgYPgZ
0dPTc/bs2ZmZGbPZHBMTI+y3WCzQOP39/bOzs8ePH5+YmNjFm2RgYGCwCxqU
y48fP9x5J78tHj16VFRUhI3V1dUjR44sLS3R/q6uLpPJBOWCjenp6fX19V29
TQYGBga9UGNjAIiy2NjYysrKXbmx3wpXr16tqqqibXgoX79+pe2amhovL69L
ly7l5uaGhIRA9QhNsH8XbpRBBtYRDAxyqLExhIcPH2LgMOXiBhQUFJSWltK2
j4/P4uIibTc0NISGhpL/CEXf1tYmNPHagvvvlkEM1gsMDHKosTHAmzdvzpw5
k52dLVEubBy5Ak1NTSaTaWVlpbOzEz879nz//n1hYeHTp09wZLCNrgkODu7r
6xOasI7YI2AdwcAghxobMzc3B4N5eHj41q1bTLm4Aevr67dv34b6OHnyJNQ6
9mRlZT19+hQb+ETXBAYGoi/EU2DMYHYd7JqFdG5HrK6tj36ZnV1YdtYJGRh2
BWpsTF5eXkRExOPHj6Ojo1NSUqBlhCbabMycZeVpw3sX37VxTM8t2T5o97C8
vKwYQQG/El9Jdjoo0K7+2R2R07C4vObISX5J2DsL6VwV/+7DtEdkyd3Kt048
JwOD+6HGxvT19TXzSExMzMnJGR8fF5qoDSWIqTsVbw7FlmFovB2Z0nkDa+sb
9Z0f3BaT5hNfcSbrWXH9u5m9rWX0wBGZBsN4f3Qpemrg47QTb+kXgIFZSOd6
Li96xtAvF+93OOuEDAy7Ag02hqCfFns1MIFBEXm10TOqJPvRS503MD61gFbR
15pGvswuLK7OzOtlAwzoIygyXGtfFCdUi2r77W3uBriNjTE3DeJHwL/ajlFj
Z/hVseuzkCWNXNeczX7uxHMyMOwW1NgYRajJtKq2EQyKobHvSQWth2LMOvmW
7vcTJOWEf4vLq7abWa3wknTesAB4Kzj/g5p+3wuVCfkt9jZ3NdzDxtDPG5pR
75dUhV8j39xr+IZ/Sez6LOTN0h70i1dcuRPPycDwU0BtKEHaY1DA+2h780W/
SVzNq6Sm12NoHnejGdvwZWy2Wt/Y2B9dWtU6Ytedj47P4vwVLcNJBW3e8eV7
Kj/UPWzM4KcZ+JV+iZWc71b37nhKtenmC0dv/deC02ch7UXq3XaysuYsK045
IQPDzwK1QXTxfscRE2dura1vwDWIzG3Uc7a7lW8xjub5cVTf+UHnLACRaQfP
mz9+ndN/5z2D39DqRc/Y42cD2Bj7Nq+/ravhBjYG/XI6s94rrgwKBR00+X0x
8XbrsUSWxLQDTpyFNIZz2c9Jubz/NOPE0zIw7H2oGWkYFGezntF2zuNXnpEl
6zoK+abf7xAYgM6+cYwpfNps9fLdVxqAf1x+trKmtyIK/CM06R2aJC3zrOuj
zoZugKvZGLhp93g9Xt2+7VGSs8ksZDGMzUI6Ub9A78MAIHceI2j0y6yzzszA
sMehNo6848vT7rXT9sPafowOPXG/YpUEnwWt4L/YbFX2YghH5j19jc86HceL
W8HZWVxeg+67/qRbZ0M3wKVsDB78eEo1nj3uRrOYDHz+8iN2vhmedOaT/BKw
dxbS+IVWdkxNwlJCj8CjxCf8axhRMXnNhk/uHrT0ft7jEf4Muwi1ICWML/lX
ikPJsrSK4VBQvjnJTpP7w5+/27y0t2lbJRHZ9URHmkxeyWsyufdHl14p1huZ
Vljdh1aUnnY6s/7MllKziUuFnZDPEjngXLiUjTmaUBGQXF3aNDi/00lBB9Ek
lPOe43eEYc9lY+PHpcIdIcdfJhdIreyLKs0pfpXxoBN/dr/fu6WwR77MHoox
d+hgGxh+Q6gFKZWVlWFnaGiomBOwqsi0EV5MVbYO0580pw+7S/vSC4s7VNLi
8o4/NRB/qwXSEhsROQ3BF2ttHk+49qQb58eItvIphJ5RJTr1RUAyF1gF1wzP
pfNa9sJ1bAzJq0d17+Rfrayu7zUPbo/AcXNLD170fEbXfObn/mDzDI3NEGHb
9HoMb/XZ7OcHY8z4M+xKAx2P1xVuwuc9M1eIeyaP+EHNXgzsZ9hdqAUpYQ80
zuTkJOzngICAb9++CV8pyjSJNhngs4zru2wQVkNjnEoSB33BE9GTIxOYWh13
gwtzul3OzRp815cdk3q3HTY8bdfxwQPdA7ZtQigjqKHI3EafhIqoq7qiFAzD
FWwMcV+vVazfk+m1OkMvfh84xdzSA/zy6Jr7VVy9uDsVb7KKup51cZ3VPzqV
cKuFZhXxyuGTrBoaZZcfdhl9MmcCL2r0tSYYJ9CAibdbd/t2GPYc1IKUpqam
Xr16ZeVNuFOnTnV3bxu3ikOplE/KG5vYtKkmpi3488/nA9pXhxmGw16JJDx8
BJsv6uratr1Nw02nQ4GxEJJRR9uUon6psNNmq6lZLjvmYW0/JSB8m1nUcy03
QKfngh/KUz176Br/7eR3lzwU+ndqdseZ5y0rsCUKq/vUmuw6nGVu2QQZYPgH
H3x6bgki+uB5c76514Pvjuv8fCKc5fnFFd8Llacz6628u42dIZfqnPKkdgFO
rmTPm+FJ3Ay6MiG/BXeIPdCScTeaXcoeM/xEUAtSIkDj5Obmmkwm8RpViuPo
RgkneIU3cHmVm5e8Ze7RvvrThvc47Mvktpt/NuuZQAKo4ePXObQyN3FWJXQE
tm+X6coEPJleF3O9SfgzvbAD+sVmrNT7TzOUtkNFn1xaOc0VbMwfl5+duaw6
u/T+4wzlvOi/Sf1Ab1I3rW9sdLwdT7vXTjVnSBbtTTjL3LIJev0oYC88p4EU
zaEYM9xk/FyUp08WFEXOQ5hDDWEDxsCSewW4ZWk1XFaGLvvRS9zqzNwSTWVO
zFh84iuw0TP4Te08DL8V1IKUgPn5+YSEhIyMDHHOhVUlSAnuhl9S1Y7D4sol
k5VykFG9tr4tNuNvtZxIrdFu1f6W81a6+jfnEKEy8OZrNyF4m8rTRSWbXvPF
AUqbpOnwEgiMHyR8YGq16+pyuIKNgcNic1YFVjGey+kppRQuTl1DqbKwzDMe
dF6830GyyLmXcxaMmVv2Oi9w6CCZs4q6YB1RPaIE/s0nR8bKzZTNF9cPUBrX
93nOyz6T9QzfBqVxx/Tprt3nFFB8TlJB68aPH1+nLVAf0G6HYsuIZKABQglr
rjNUGH46qAUpQcvgT1hxGEQSm1lxEMFVl8xHnEyvFbsJioAqOZ5SLd6T+aAT
L612K/J3hGnNnMevMDyXZW67BFRYLO/pa2EPxOmJtJpTtkiGipZhNBwd59IN
aAS5YkbVRWwMKdDnL7UyeqjOmNMNzuhrTSRtxqcWInIajiVWwgDG/q7+r5TK
6tzLOQvGzC17r0LiuneICwJPKmijlEnyUCKV5vVgp3ls1YLj3PbmIXuv6AjC
rjR48lc/f73pwHkuxsB08wU+W3o/49vJ74vYPsxXrIX9wGo+MBDUgpTKy8u9
RGhu3g62lw8lSGm8VJJ5RryH8Cm0rx58sVYSxn/LvINeU0Tu41ew+gR/p+HV
JzSBO6N9rWm+sJikXqXg0Ws0FNcQ+MAXkLlRYoPuMwAXsTGP6t7xxKNWRR2a
fgq78tyJ5fffjkzhuvH8rHTmwy58CrXgNplMHTGBuwJj5pa9+iXlThukMb3D
ENHJd7gFRmfml2GSKUZe0QQHFDSaHJCNNZeC3nl0H+6Z1EpsHlemySe+QhiD
vhe4gkLwf+GWwjjUkz3N8HMBZq23t3doaKjNnRI4WLgSwlnuDqcXdmgX34OL
Lc9SKa4f8LA1vwyHSBx+DHsY54HLo33bo19mxcHSBMrZ1zbaMZChOoU/E2+3
4k/91Zt1wkVsDKxin60AOQ1UtY6QXWrTAdSJpILWgzHm7/PLROPg36eJ7UI9
cBjh1zjlQk6HU8wtbUAmQ7Ok3NlcsXp1bV3846gh5FIdBVKG5zS4c04/v6yX
vPWllTUKB4XuyDf33izdNrEo6/P6k27KU2aFa349+Pn5DQ1J/WXFnY5ALQ65
4+2ORCqKrdLwQaZmF+Uqqbqd8/qHxrSyLwOSqyQ1jZN5O1Db3yGCiBx5AYP8
ZH11m1YBTPhWYl1G0/oGajJrw0VszPGUzZhtm3jCk402Z6D0YHllDeqerOv7
VZxvGLFzUuxSYSdUj7PsW0g8XAvmdFaR0+x5l2bokxtSpfnWyQG5TVzi9aev
3TanPzO3dFQlAl883OBtEXtAablmZ7xFDHsK8FB07nQE8qFEr5bE3SACWYNx
6h/lmBNJgS/SU6/U008gkTyjSq7+uWOGmpgx7YDkpu5PHrJSJ5IsTkXIuTvI
MeiyhSVdSwPohLMmv8Sgp8vXF0pHhUfEc1L2AtKGeBKqEYdOsW5VohYXNAPM
zZx9O6KjgIMemG6+wCuBbtqtBBB7aTEq8jYxbV9IA943dCg2aNoFD6sxTJyC
j1/nYJzgt7WZgL+x8cOytIpP/POKK0u92+7SG2NwP44ePapzpyOQD6WkglY5
92KzxHEjL+1pTlNAH8/Vk1xSBM0eSvLNF5dXD5w3ayetlPECTc4/4M4FgkIR
sLElUquVT8950fNZrYkBGGNjtGXaW95C1l+fU+4S2gX4dJQPSMV5hFXgz2U/
t+xUxOT9aTuMOgEvCV2fuat5hfZ6LmeyntmcjtTA+NQCZS+6KLaEgD46YiqH
prBXhSUVtOGfi+6KYbfgNuUi2eOfVCUPEaFIVI15dnJtvu6038a+zWu71Zu5
/7JilSl327RnEsWFxcSIyG0IzahXazW/uOIhW9AcNqSLqqY4l40hAly/gwCR
5YjQq2obgZULoRSUVhN2ZTtgW74sAryk/dFc7SzD1xIg9pJ2C3Z5Lt/nuXiG
m6U9xrJjhFbEraGL7WqlE71D3zCa0MqAd+lIGU+GPYtdUS4U/COfgyD2VcM6
vSZLcrHyGdweWwUxFEHlmOTFTMpfcAHDGqUyuWJikSUbMtFN8/VqIl1YX0yy
P+yKHTXNXASbMo2CtFd1L0mQ/eglZL78J9IJSiqnlchs5uCfzXr2h3pqp10X
9VSyGdwJoRfE3aG2s5mPIenoG7erleIB3vHl5GnqP4Oe01r5mIGjCRWOn5bh
l8Gu0GLdA9xEedNradoCVU3RWKoe4yIguUqyE0JePqUihnlnnRkBVK5fY5IU
ro1iYngRH6yrFp9G/pd8NodocxdVTdEJm6MY7gOVDdGJIn6hBEnBFv2Iutp4
kE+C8OCrY2kfnMsrPv1r8aghMLU6Ql8KrSvgxaCO3eoUBlfAx8dH505HIHlt
/nw+oMj9rm9seGhyR/K8SwJUABSBWqvbfGCkPCNjlWdaNMrvR15tVJS0ilM/
AmjyVB5aSbFnu7vcmPYQ3thQSD7SBpW4fGso+xtWgVdcWfr9jowHnUdM5TYj
wSj4+f1Hh2JWP03MaRsw7gF6gThePXXnTqTVOEsbUn/B/vkwPktJvg6Cup4q
YOzZLFcG92NjY8PT01PPTgfhtdMXTi/sIHpW8i1tC2pCfsChGLNaK0HpyA/g
0mdUHPOwKw1Ul1LttEJQrvgAKq5V0z6qdlremF+S7FxZ5XRZVlHXLlpoao8p
bODOSxoHNQ6Q7OwbmcKGkM6vs5X4csX177Ah1JTTaEU/u57Tqu2E20gXJdW/
ux1BunLE1qqRVNBVg/W1CzP89M257OewIoLSahwMX4Q28eTVPSUR7C7TyLB3
YLFYYmJi8vPzbe50HCRaaWhb+dJecArUhEBEboNkP23QTI1aK2E6Q35AZG6j
mvChIKXF5VW10woxReIDaJbnTsUbtdN6Rm0uASM5bUxes39S1e7KNHhwXyYX
NJQLrTOlU1xPzXJ9KjgCBpRLx1tuKkGYtdFoxS0lE2VcuUzMWGhSQJgO292O
oMd/q76mZ33nB3PTYGXrsM2kXbtwNvs5Tojx4sHV/mozXCDuzfAk1RSNu9EM
C02j0inD74by8vJ//vOfs7OzNnc6Ai8GdTjrR2Yd4SDc2RFCd9DcnCSPWIwL
+Zvrsxw4b3Z8pklAYXXfjZKe1bV1qq6sZxVXOWAoHjGV+yVVwROnm9RZZpzh
N8Hw8LC/v7+enQ4CQ4lCsz5+nePm3yNV59/xrh4QFU4Rg1JFFJeqJOtuaEyB
jad1u9Qu95kPY378TGERGVpAWa1afnhOg1rkkk9ChVrQPmVlalihnZ2df/vb
39LS0tQOcBDijpB8tcwXrU3WzN9RBPxQY4VZLt7nqv3YZTlTcJokXFAPZuaW
8F4lFehdoMpAR9i79oEX77moFQjFMx6KMcMdCEytjs1rFJ9B7ULa9/ODh5Wf
atw6gFu6C7+nOHhYrZUEmfxiygMfpxcWV71N5djuFGVNqrWy956trh8RDK7D
wYMHde50BBhHlBHfPzplWVrVqIVCJR8prVgCCvpSLKlEmft1skwWq0rFGAEY
AhgaisEAdE61sX+lmJNycnuSUhLu7UxyETDCFyuDeFf81soXOv7rX//6j3/8
Q+0AByHINHkBdlJ8BuZkYWD7J0lD+PTgZHqtvVqJyk1rl/pRBFnp7z6o5udK
YG9HGFj7gEILJFkn7z/NhF1pqG4boZyU6vbR+QXL2XPhL1++1L6QGN3d3dHR
0cePH7969eryMjcP0tTUdOrUKeypq9uRlPR12nI4tux0Zj3e5MnJyQsXLvj5
+SUnJ8/Pz2u0oqEh5BzBNtt/+qpgkaq1kiAyMjKYR1RUFP4cHR3FHl9f3xs3
bohVjKtHBIPr4M5QZDJvvs0sqjkL1q0qH4oahKofKy5at7i8Sllm8q8o3lhR
7xDOX29SLKFPjpLaosa02siATFj1Dn3TSNDDENaOmgZgpAUEBGgc4AjQC1S+
Xs7GJN5u9YqzUWxNEXl8roq9vA360dP+0jEk1uzN08dDQYTG7izIYxP6O8Lw
2gdys4e0Z2hGPSXw9vQNQeRyvdbVpXEhCcLDw9vb21dWVhISEhobG6EpcPXh
4eF3794dO3ZsYWFHvWtavPv6k+6bN29Cc62vr+PBS0tLhVYV9W3ePkeHPm4O
BPg7YVee41URCrGOT0x6+/hCK1n5onYa1xIwOzuLb6enp/EsRMLHxcVVVlbi
t8IDiut4W108IhhcB7cpF8ERoFLDVa3K8oHyxSCi5V/BvziqXq33RFqN4low
LZo6wqq+HAxRbWrBPCN8vmeZbI0MEg4aiZkn05WjqQkPHjz4+9//3tlpeyVl
YxBkmiQimtafogq69oIWQByzs6jIgKFyLqtr6xBr9i6/3jP4TbFEgwbs6ghj
ax/Q0quSMm4UdoV/eNVPpNY0NDRUVFQkJiaS56J2ITHwFXwHMv6vXLmCB+nt
7TWZTPQtNuiWxMjgOa6Sui7oAmiH2NhYOFydXa+o1bUn3YeOhdwp3lxEiaqV
CgUxcCHc3t37heS52LwWgbQkng6/8NraGu7Z29sbn/SMhYWFwpGuHhEMroPb
lItAApC/39StbNtz30Y8aXy1LfoEH/lc9nONJR1T7rR6m7bL9Qusr4YrRCcn
woSIODFXTKU11erkr62vH4zhFkmUtKLsbw37P+1eu3CfcoYZg3pszD5iyl6q
X7FaDuUpSBI/JXUv1S4EJ8hDVDtaJ2lPq8YI/aKzlZUvj7A/ulQgTsWHqbWi
MssaBVHt6ghY2p9EsFgshhf+lqdZJeS3eMWVUxEwwcNNTk4mz0X7QhLgyKCg
ILhLkOEZGRm0MzMz8/lz6SBaWlkLuVQHE2tw9AtkPnyKwcHBtNwHScncTMfZ
rGcH/cNTrnACH/114Lw58mqjEN339OnTy5cvk4+GP21ei1BXV4cLwVVJT0/H
LzMxMSH4JtXV1fi5hCMNjAiGPQI302JFtf0kxxTn5YHhsclDR4Ov3t10JcQM
c0By1QWlGonEMPse8z8YEDX2lZvTF7O+t8vfULCxpJXAMJ8Jj/EIK/owPivh
ijdrv2woCCuMdIyF6GtNcJckrc7vXDhGgMAwnzh1hvOket8pMsz2wgDVTxHd
klorm96HqIjB8vIy7lAP1Q85jx8K9q1+qt/Kx4fTiqL6qX5CB18ZrL6Lc0Oo
I2i/9rWEhbB1Uv0agPSLFgFP7cjC35JqwHijYvOaE/g4MaHMqaBcNC4kBh4E
R4aFhZH2aW9vT01Npa9SUlKEPhVjaOy7R8TT3Meco1FbW8v9JhHXT4fFLPPh
3wf9zsRkPLRurUwkpD9DKeAR8G7cu3cP94O3Ts+1xFhZWYG0ef/+vSBzSkpK
cDbtVgw/BdymXKg8+y1zD8SC4mwFMD4+Hh4egYMvXn9ilTHMMPMUeRtimJu7
Pxw6Flrw0CxhfVNvNykuQCYwzFExCfuDU5pfDkm44pQ7yrVfpqenIWYhDDm1
FVbk77+jlU+8QsFkMcNc08I5ROfCo9QYZv1whOqXTHaQJhXiiNARdlH9ETkN
kIr6qf55y4pQxlON6lcj7XlmrBxmhtARVk2qf3F5bV/UZsVLu6h+/TC89gHs
EPFMEB6N1DRxuXP8SqZWkXKRX0gR2dnZ+DFxA7goXDnyC6Z4QPmK3wcxAkMj
D5xM/zptQS9Enjd5nrvv5e3b9nrQ41zh4SO+IamlONURU7lYG+ISzTygcCE0
Ojo6dF4Ll4DCxQkHBgZw2NraGuwWPCNsEjyguI43w8+Lw4cP69wpgb1sDD7h
UGcVdRFPJa/0ZeV96oqKisN+f5guc8SyhGH2CH98VxaFJTDMGBQHAyLjUnIk
rG+wqSDsikLpjM+fPxPDHBYRvT84teBxrYQrjlAKNiaGGXcFsfaiZ2zf6evn
wqOFVk0v2hWTqcUM8/CnKY+IP/E4igyzXTC8zLFXXFnGzlU4IeIE29661RH6
qX5u9jniz7LKWp1UP0WmUVCB0BFE9esh7fEW7Y8qiU9IoI6walL9lE5CIRb6
qX67YHjtA7yZZ7O23zGijkubBtfWNxJubTvpUC7UEfILyTE0NCS+KDwy7Kyp
qYH0PnHiBH5htad40dFz6Giwr18gbIPz2VzBt/0n0339gw57HwsIzzwYY6a4
/eJ6hVAcMmNoW8+1LBYLHgovJ2wDjF/sefv2LXxJKBpoRkd8eYa9g9zcXLj2
EgNDcacYBtgYwC+pKqmg7WGt1lwG4BN47lwK5xeLGWY4CJ7n7mnU1Yf96eXt
l3SjTsz6ZmRmHgy9rLbaIMxXiBpfX1/PM7fSch9IuOLA1Or4W1IWTswwT8xY
9p/KPBMZL7S6W8QlLDfKppPEDHOcybQvrNDn6DH6SsIwa8BZVD8hYeejBSRX
yR9WP9UvxM1a9VH9nHaILhUWRqSOIKpfD2n/amBif1Dy2agEPVQ/zalRNR79
VL8BGFj7wHTzhVinE2NMCSNf1dcFs+tCAkiZah9zqbDTI7z4ScN7OFC06r1H
xJOD558+qOmjdEsPzVX57LoWAM9O/HICiiEKDD8vMBKTkpL07CQYY2PwGZLB
ZdttrmWsHrnqFxwWFMfVnxEzzN7ePnjt5XLbKmKYT6eVwA4Us77xCYn7QnMV
w56JMbDyhtYh3+D4rIcSrpj8LHETOcPsE3Y94FSE0Cr3Tpl2tShimE/EF3od
2VzrUz/D7Cyq38pP0Yq9OQpbulEiDeTWT/VTxl/avTY9VD9+d98LlULRNqEj
amtrYbvqIe2pIw4FmfJu3tam+nuHJv2TquQrzriC6tewt+W6gFR8+v0Oiu54
/X4CjvBTXnq7bjEvm1hYXMUgpXC19x+5jBtsYMw28TGcZy4/YwXEGFwKw2wM
3tLQjHpI7IMqOfiEwJAI77Dr1p0Mc9DJELXcdoFhvniv3Su2TMz6+vn5e54r
VFzLGCKIrHGITe/j52KuVIq54o+fvsgzPeUMc1Je7WFv34mJb9QqJLU0ILla
HgMgYZir24YDg046zjAbpvrjbjSLow4oOFy+hpRdVP+F/BavwMjzcReg17Sp
fgpKN29FcYs7AlfUQ9rjGZ+Ya/aFZJ27cN3H52hjcwu16n478u3bpNCK4v18
4iuEmXHXUf0aAQ/ohdjYWLhL4p3UETTVhfs5HFvmGVUSk9eMTwP1B5yIye+L
UMdUKIzSlm+X9XLT/bzGoRgMBganwImBl0kFbX5JVcl32vwSFSbKBZw8Ew13
A0NMzDDfKuLq7H2QFQmXMMwHjp+ft6wIrG9qdoFaCsbw8DDsZChBWPhnLj6B
1hNzxUQvU31gOQSGuaJleP/J9OCTIWiVf/eRWikAFzHMhqn+izCY47eDHFpU
6urYRfUXV7SoUf2BgYH3HjyGJUyBxxS/JywHL+6IDx8+WPWR9kBO8SuPsIeH
jxyFQp9fXCl8VHLY5/gRH7/svPvQbZTbYrr5QpgWt7qsI7QDHh4+fIgfRFG5
EGU3MWMh0e3B15M0dg9OBEYZTVFhKMEwg7pZXF6j20u7x1a6Z3AanBt4CZ8F
/kuIUka8gOL6HUtxEcOstuLwjltt5xZSGeSrqRPrC/mzL0qrFBWkjZVq8vMR
ZQJX/HZkSiPRXsAHftHJx3X9aAWPDNcibl8RLmKYDVD9wgqb3/mZL1pe58uk
cjK1/gtBwt8o6RHihAn4SR9U9ZJo8jaVQ9SfSKsRz2ITqCPErWyS9palVShE
WhUlqaAVYtkr1nzsAlfn6nRmPcxv3wuVii+M0ztCI+ABuhi+HjSXXLl4bS3p
QsHVtGiavfmhbgPMQo3CGgwMToFhNobqt0AIRKqnqFtVFtvKffyKq2OvKdxo
NS5xdSxcSFuREeSriamtjCwBhK1PfMWF/BbIzAPnzbti1xmg+oUCbvAlBz5O
kwq2uVaXHkCPB6XVQBB9/DqXX9Y7+mV2ZW0dQh7SngQpTRM/Uin1Zgz5ZZvK
q+n12MrqurlpEFfEn139qgWHHYF+X35ubi40NBSu2a1btxQ9F6oCUVw/QClg
GBoaded2FzF8x2lUumBgcBzG2Bjr1pK4+6NLtc0zyAQy58Q7IQaPaZJp1q06
xrDDhT0wlfUIfPk6yFTFRc7CyZF6t50ie3H8G/W1OVwEY1Q/hf3g5wpIrsKv
Cv17Mr3WWbdEJBv9w2kpPZMKMqTcbaP98prMjgAa7Wz2c3EO1PLKmkYpeweh
35fPy8uLiIh4/PgxDktJSYGWEU4iDBP8GnCcteNA9gJgG4RdaZgXcYwMDC6C
vWwMUPZiiGRL5gOtSkFDYzNCXKuA8JwGm6sRQciIy0LSont6lvCT+yl6WDhC
WfPmQ1F2szthjOoHyDekGpv0z7lsTNyN5qyiLlJhNAtMbhHUGUwLV0wr4Mzy
ZazdBjVfvq+vjyJAEhMTc3Jyxse39R1peSoieuoSF6DF5DYDgwHQUKL1u7n0
8BKtWriKRfIhoOSJGHIEplYLMa69Q5N65k2Ad3wRRfFMAXQZTHo92pMqWAal
1SwplWt2KYxR/datgs/Expy/3oTPfLMzV3rarrT2pJuyAoWvbpe/kWfC/uxQ
8+WFAxRpMa+taq6wiBRLpzIwMNgEyTSauJQXtpIADgjsW/JuShoHT6TWvBme
lGedKAI2M2WljY7Ppt3j8uUVVxCTYPL7Ii9sN9UZTdOrrTgjwQY/7aJ/oRDD
cCLVTz4LvBWi8qBZKluHXXHPK2vrMdebxIXdFpZWncuJ7R0YiKzAT0EjQs/M
IAMDgxxkp/XxIVgaIb4CIPcOx5Ytr66fzqz34ItQ4bOg3La0p3n/tjdf6ELR
15oU13+RYH2D49NwLaq1C2FrVy4bXCSdRzoCp1P9tIDgzPzyxsYPeIsuuu3d
zdrYs6BemJpdohc1QYdXzsDAIIfETqvtGNU+nmpP0cQHlweXUKFHJVn5aUci
+b3jy+1aYaSeXzIpIqehf3QKlzO2bq+bYZjqJ0+N9Muu3f0vB42wPbVqe7B8
PHZW12dgYLA3Ahaf03Obdpqw9ocaaD13eBM4OOpqI7VSW3FYDFprTMxx6QfF
hdI/8fzLnoVhqn9pS6Zpx4Qz6Ida2F5rays6KCgoqLi4WLyfRgSwL6rU2OvK
wPBLwkAErNfW0nseKlVcJMh82OXBr/f6omdTX+iJsX//iYs0g9siX8BFD0Y+
f69uH73+pFsPmbZHYIDqt/LLVHmIlkFncARqYXsWiwXDpL+/f3Z29vjx4xMT
2y8wjQhsHOW9cj2GEwPDLw/DxS6sfNV9fpJddRVgARSlCYuOFrfSmQgAm7yo
tl9PhNjvCaEjKM1QD9PIYBNqYXtdXV0mkwnKBRvT09PygkhWfkkXD5V1vRkY
fjcYjoAF/BIrKX3P5lXWNzZg1FFNkj/4cqwzc6wctwLspfqpL0L43AoX5bD/
2tAftldTU4Nf+9KlS7m5uSEhIeKCNkJkBVUe1jMiGBh+MTgrApZAMm1+UVe+
WF3n5sRHa+/n0qZBxRWHf3MYpvoj+ZksJtMMQH/YXkNDA0YEkZaxsbFtbdtL
lAodYbr5wkO0BigDw+8DZ0XA0gbNzjM14RQ4QvVfftjle6GSdYRToBa2B2MM
vz+24d1D1/f1bad3CR3xamBCUoyCgeG3heEIWCDjQad46T0GR+AI1c/gRGiE
7eET+iUwMBDuvDjugnUEA4McxiJg3X2XvxycS/XvwgP86lAL28Pvj68kO1kX
MDCowUDhSpfezy8P51L9DAwMDL8AmExzBQxQ/QwMDAwMDNowQPUzMDAwMDDo
gV1UPwMDAwMDAwMDA8PPhf8PaDryHg==
    "], {{0, 70}, {543, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{543, 70},
  PlotRange->{{0, 543}, {0, 70}}]], "Output",
 ImageSize->{416, 4278},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[307]=",
 CellID->1312511284]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Noisy Signals with Uneven Sampling",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsubsection",
 WholeCellGroupOpener->True,
 CellID->336551588],

Cell[TextData[StyleBox["Below are some examples of the normalized \
Autocorrelation for random noise:", "ExampleText"]], "ExampleText",
 CellID->1619212933],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomList", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", "100"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[308]:=",
 CellID->1446943632],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomAutocorrelation", " ", "=", 
   RowBox[{"Autocorrelation", "[", 
    RowBox[{"randomList", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "100", ",", "1"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[312]:=",
 CellID->676804396],

Cell["\<\
We can also randomly sample n of such signals using the function:\
\>", "ExampleText",
 CellID->1859520469],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"timeSeriesRandom", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "100", ",", "1"}], "]"}], ",", "randomList"}], 
         "}"}], "]"}], ",", "n"}], "]"}], ",", "First"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[310]:=",
 CellID->1978089060],

Cell["\<\
For these signals with n points sampled we can calculate the autocorrelations:\
\>", "ExampleText",
 CellID->1790576603],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"randomUnevenAutocorrelation", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"Autocorrelation", "[", 
    RowBox[{
     RowBox[{"timeSeriesRandom", "[", "n", "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "100", ",", "1"}], "]"}]}], "]"}]}], " ", 
  ";"}]], "Input",
 CellLabel->"In[316]:=",
 CellID->548492213],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"randomAutocorrelation", ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[317]:=",
 CellID->1508810967],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7FFpBgem1c5Zs07d3g/hcjj4MlXW99+8DJUX
cFg941TeDQZ/KF/EwfjkyRq72BtQvoTD1cBwmWlfzkD1yzh0h2l+93TfB5VX
cHh0b9IkhfTjUHklB5WX/8/bCGyD8lUc/i0UrzincRDKV3PQUjK7/rZvFpSv
4ZCn95txXc1EKF/LgXOJyO+7lZ1Qvo6DqvDlzSsqJkP5eg5iC4zjzqaUQvkG
DlP/B1tYXDwC5Rs6RMzYUuj94SSUb+Rwe16O6YOuQ1D3GjvcuW/AKsq2Hco3
cZiwZufXsLzDUPWmDjbfFd8eqDoL5Zs5JIfdyI+u3w9Vb+5win/xwj61uVB5
C4cDatx3HvYegPItHdwzLtX/W74EyrdyqBTh2et8C2aetUPzt0XGmx4cgJpn
42AoPW+t7lKY/bYONh1PjPM2wsLLzqGt6o16uuUyqHp7hwMK0zP6zlyH8h0c
HJtrDi3S3w9R3+DgoLtl18e3b3ZB5R0d9n64+UA78yKE3+DooDZl8f6Ahceh
8k4Ox32OM9acXAmVd3LgW+ycknHhMFTe2WFuy00G4ZqTUHlnBwObCnaZDzD3
ujj0Z6aG+klsgsq7ODDP+2IYK7gCqt/VwUm7V8bUcDfUfa4Olyo2ch2s2wjV
7+awqN6v4KfRPqi8m0NnmmlnvfIiqH53h2ThyEtrm6Hx2+DusHL6rssRcheg
+j0cog44bl43Baq+wcPBMkTOVPjkNqh+T4cNXjO3Pwk/sx8A2cfsLA==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 50.}, {-0.4342409169900493, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 ImageSize->{244, 138},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[317]=",
 CellID->2028952510]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"randomUnevenAutocorrelation", "[", "#", "]"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], " ", "&"}], "/@", " ", 
  
  RowBox[{"Range", "[", 
   RowBox[{"50", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellLabel->"In[318]:=",
 CellID->698644704],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1j2tIE1AYhjcxEKy2mkiFZXYRFbemVm7m3KvbnBYV+cOyYMZqCGlFQSOw
aEq2iuHIVbKCMS8bZSO8ZG1IzlsYbc5LNrVIItMNSY2y6Y/ILvt24HB4zvO+
H+fEKc8XqMIYDEbq3/3vDK5v4pX/a0FMF9CyNoVNHJtxBjECc19TDBVVXvJs
bIyI/J4feEUchdjicK/2o4N4Axasn+vmLXbqx2D0urfvpO4t+a0oFaQJy0od
5LdBdFFp38+2EO+A2M/9cLWphzge6xr0vYaSNuonQHZ7fFRxz00+CZ/eqOoz
TDbiZAwu1hQl+t2U5+HcBe7rpWgzeT6cQpa3Vj5OnIKb74slmUdfUD4VzMI2
MVfWS5yGIlG5X93fSPndqCwdOj0/MEC8B93Z6tW1wtD/9qLc5EuZvBN6fzqW
0Nz/S3GXvAD3bZwJT+tT8kKopqqitrutxBlwJGon56rHiPfBbZvtON45QP1M
nGUd0LQHHpEXIWbE6vpifEecBWE1J7Bm5THlxQhfvsXpuOwiBsZy4/hSz1Aw
rwEWsw4zLZZe6mcj+cy1wScNXcG8JhtTy0lGZ/sz6udApWU0DZe0Uj8HZt+W
6Cs7u6gvgYznnlYw+6kvQcFau7Hw0gh5KWaa61tcajt5KeJidS/7XIM0X4Yj
CTWzLZtdNF+G1IfcSN4DM/lcCHrq9BUIvS8XPzwGlWJXE82X4/epQ7z4EzfI
yzGcPr0+k62nfh5YZcq2Vbbn5PPg081XHuzpIJ+PCRP/Z7ei0/kHqif3IA==

        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 50.}, {-0.6983456650782366, 0.9999999999999999}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7FFpBgeG9S1Xp8Q/2Q/hcjh4Bcxbfr15CVRe
wOHqpsDtpu8OQPkiDotmrZtzOeYUlC/hYOsfde93zB6ofhmHDSzVq9QlV0Pl
FRza7lnbrN58BMpXctj34LWvYtchqHoVh97HOnMezDkF5as5vKuff9VQ8BhU
vYbDt42zSuWFL0LltRwOn761pijyIJSv41C4MXfVw9OXoer1HIIuHz1mlrsc
yjdwuO9S2H889iFUvaHD8bl2rfyHdkP5Rg6lfneaTMxOQtUbOzCIvrW6Zw4z
38RhNffC7B97DkP5pg6zvoc1SG5ZCOWbOUzJ+7fgkcBcqH5zh4u9Rctuh8P0
WzhkCHDb/+s8BuVbOhzj7PyqfGUllG/lUPK1+kFA5AYo39phjtjFbYueHoSa
Z+NQdthe5uHV01C+rcOTR5MnrwmCmWfnoDGhZq9Lwjko395hZeHnivdisPBw
cEhfoxX4RR9qXoODw9aCH1HPXWDx4+jw4eyrvodh0PhtcHRY/SHmCIv1Bai8
k4Pua9/IIJ0DEPMbnBxOC4pX7Hy3AmqfswNXYPrhvW+h6aHB2SHn7HfvGxPa
oPpdHILVqnP1Mzqh8i4OR1TmLmTmXAuVd3Vg/nlg3p9He6Hyrg72C7g3vrPY
DzXfzeG+aczZhfU7oPa7OVj9tztseu84VL+7Q+/sC6ctzsyE6nd3CP41b1nc
PVj4eDjs4pMMVmTYCJX3cDi8Y/Pzu7N2QvV7OqxufS2brH1yPwBgxPhG
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 50.}, {-0.636667649295731, 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7FFpBgdHzyunmk7e3Q/hcjic3bJVRmHOOai8
gENMrYrf5PdboPIiDkE7v673PHQXKi/hsMZy7UyTf9eg8jIOQZWn49brnoLK
KzjEetTIdp8/D5VXcnipf+P1s9c1UL6Kw9w7q3K0112C8tUcXKcVvdrBfAiq
X8NBXPVM4KXU7VB5LYfu5yu7AqZfgPJ1HNbebNt6SnkXlK/nwJdylF9KcgZU
v4GD3MVA8ejyKVC+oUPIe+U9XFu2QvlGDlnSV68wi2yF6jd2UNH8pqV87TBU
3sThHGPkO67JB6Dypg5ytrd54nr7oXwzB+VDRYIt7ieh6s0dpB+8P7ndaAWU
b+HQtvR499tlMPdaOqTs/mSQ/HM/VN7KoSf7vsXiuA1QeWuHo7vO/vk0aRNU
3sbB5axhcNHsq1B5W4dzh2Y+toiAhY+dQ3ZR/uUn6bDwsXeYeW+2uLP9Xqi8
g8P5lJPapZ4dEH6Dg0N0ybS0lEKYex0ddOab93cJzoTKOzooRrZwRfavhMo7
OXS9uKoWLLwPKu/kcKXj+HvePJh+Z4f19o7hTyZCw6vB2SHXZELq2c8w97g4
bP3qtpl7wg4Iv8HFYe6Xm4czrY9C9bs6RKbcOu76HRr+Da4OPj+LlNem9UPl
3RxWBKwU/B+zDSrv5lCsJml93QXmf3eHpqLq2qZH56Dy7g7fWa8ofOfYD7Xf
w+HMr8ffZ21ZDnWfh4PGDqYvq1qmQuU9HWxFi+22ch7fDwA0ie/f
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 50.}, {-0.4654242497209858, 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7FFpBofKK0EeonHX90O4HA6c2rGn2rrOQ+UF
HMJ+7897zTMByhdx2DM5Vm1G1mUoX8LhWGrcnMrQC1D9Mg71TYwnmPjnQ+UV
HH4HXGDeV3YMKq/koBEXLPBx20SovIqDZVzMsXSnOihfzcHiZGfApZlboOo1
HCSc3ftme2+F8rUcgk3fLjObEwlVr+NQ/SfaXH/FDqi8nkPE8wa+g537oPIG
Dso3g4WOXDkClTd04M40+B+25DiUb+SwfaG4cMr2PVD1xg4Gfc//mrivhPJN
HDZfb32cvHwGVL2pQ/WvmH0bUmD+MXP4arHApOPJCah6c4fv10o8rY9th8pb
OHSaxW6YbjIfyrd0SL19Wys9CeYfK4cpPUf4VnYVQvnWDrdjBFY9/L8Jap6N
g5zXnGOO5jD32jrY1253EPNZDOXbOcwuPFl8xHg1lG/v0LakV1bv9VWofgeH
u2KTQ7o4TkDkGxwcrius/vFlfjdU3tFhxmknDtHmCxB+g6PDavVAmcTcs1B5
J4fvv9nnvS3phMo7ORjonlv3LfQAVN7ZQTDr07rN01ZD5Z0dqqSy5654tAHq
HheHnrozSw/t3QqVd3E4aVSfYmsJVc/g6nAmddeqbcvnQN3n6sD8ZMXs+w/b
oPJuDoo+3xX26vRC5d0cDG/m3PHQXw+Vd3cwmpHef8wcpt/dYX50bJCF1kWo
/R4OLr1zftRcXwu138Mh62WTrt/RZqh+T4c/nh+OfQ8+vR8ASl3ryg==
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 50.}, {-0.3651173788342202, 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxVkG1I01EUh/9ZZiSGZGKssjJZq9bM1abp5n6bzs0iJ0ZERLUUhQotmJmD
qPVCBSOsNajBFNFyvjXN0JWwZlOWurUyS81w0pAWodmLRn4YVOz4oQuXw8Nz
fvcezsaC0/lFYQzD8P/efzV0vkn+rwxKfKrCYxyfI4TLECdkYqfL35CPho3T
5PXn6IlX4cOMYyhcNEa8GqqpMlt9wUvKrwXr6LjG7nlGfgPyX7XOl88OkE9A
dxRPENl4kzgRv2sGPp71OInZqI7+Gf719jnKcyA3VtSK++rIb0VL28ViT7uN
mAvPgfi4ieMGYh7Wy6ZdX2xG4h2ol+uLrqW5iZMx5LS1TDpfEPPx2lg4EaZ0
0H87EaHTsMau24l3Ybh0SdKh4HPqF+DXqdh0WL3EQrDL5notI53UnwK/oXiF
NndhnlTMpUymretwEe9GV8NVrlXzmDgNZ04KY0rGFuZLx+Z3qTEZT3rpPREs
D9TOuns95MWwlCZUIbiwrwxwi2Zu3amopn4JZpYz+wKJ74mBqPHFn1yTtC8d
sN8zsvdSxFPyUmgkjeJ29mCIdVJUSddccYn6yMvwQ5oqurDlEXkZFF5Bc5Kq
h3wmhkVaSWWrm3wmAuWzPq+/i+bLwuHgom3m+43ksxBAvCmgf0h5OTrumpMN
2k6aT44jNUsPsu1WymdDnWvqz3O3kc8GP8X0+URtK+UVeNs01bfJQPvVKXDe
yLfdMA9SXomVkfN+Fl9NXonLlc0Nqj3dlM/B9lFe3uj3fscftZXx8w==
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 50.}, {-0.4712141485065107, 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7FFpBgem1c5Zs07d3g/hcjj4MlXW99+8DJUX
cFg941TeDQZ/KF/EwfjkyRq72BtQvoTD1cBwmWlfzkD1yzh0h2l+93TfB5VX
cHh0b9IkhfTjUHklB5WX/8/bCGyD8lUc/i0UrzincRDKV3PQUjK7/rZvFpSv
4ZCn95txXc1EKF/LgXOJyO+7lZ1Qvo6DqvDlzSsqJkP5eg5iC4zjzqaUQvkG
DlP/B1tYXDwC5Rs6RMzYUuj94SSUb+Rwe16O6YOuQ1D3GjvcuW/AKsq2Hco3
cZiwZufXsLzDUPWmDjbfFd8eqDoL5Zs5JIfdyI+u3w9Vb+5win/xwj61uVB5
C4cDatx3HvYegPItHdwzLtX/W74EyrdyqBTh2et8C2aetUPzt0XGmx4cgJpn
42AoPW+t7lKY/bYONh1PjPM2wsLLzqGt6o16uuUyqHp7hwMK0zP6zlyH8h0c
HJtrDi3S3w9R3+DgoLtl18e3b3ZB5R0d9n64+UA78yKE3+DooDZl8f6Ahceh
8k4Ox32OM9acXAmVd3LgW+ycknHhMFTe2WFuy00G4ZqTUHlnBwObCnaZDzD3
ujj0Z6aG+klsgsq7ODDP+2IYK7gCqt/VwUm7V8bUcDfUfa4Olyo2ch2s2wjV
7+awqN6v4KfRPqi8m0NnmmlnvfIiqH53h2ThyEtrm6Hx2+DusHL6rssRcheg
+j0cog44bl43Baq+wcPBMkTOVPjkNqh+T4cNXjO3Pwk/sx8A2cfsLA==
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 50.}, {-0.4342409169900493, 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 ImageSize->{532, 365},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[318]=",
 CellID->886750515]
}, Open  ]],

Cell[TextData[StyleBox["We can also display the numerical difference error in \
autocorrelation for uneven vs. even sampling:", "ExampleText"]], "ExampleText",\

 CellID->1843963923],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"randomUnevenAutocorrelation", "[", "#", "]"}], "-", 
      "randomAutocorrelation"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], " ", "&"}], "/@", " ", 
  
  RowBox[{"Range", "[", 
   RowBox[{"50", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellLabel->"In[319]:=",
 CellID->1429737960],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxVkWtI01EchofEmjVwobLIsr8ltcaMnC6Xm9vrLl4+BZapozLXxS6QkYPG
sJoIsVjgSkg0tCgYJqbV5rK15nS2NIvKgmbzy8rIinBFohWtC/vtQwcOh/c8
73PgnJOhryvbn8BiscR/5781NiJK1v8DZc01AXWjn/Y50LRLQ03bHIOxzEPe
fKZHkTZGOQW/8ptbknZOUV4OQ9f5Aze9bvJXwixVbgCzjzgDZ1je6sjup7wG
vf3RU6baq9TPRFpw3HZG94z4Ogw0+rOcd33EBeiRjUtcxkHiQqTxkjlPMl4Q
FyG1c/fj7iNO4huRw7U5dqyaIL4J/PL61aZqF+VsePQut8w6SVmM0fqErdNT
j8jPwcegQXunOEA8F+ZKhc+gP01cAq5/OKm26jrxzfCJwz2h95PE8xAtn+nZ
VRq/rxRGRjMbSO+kvAV7dfcWua4NkZ+Pi+xcRvrQRVwG0ZhdMD/SRlmOyQVm
LGgdpX4BXne8ZBpexX0F2OsFJ5uS4++hRCSi5c5eaicf0Izwv6zto2wGPDXb
Dx373kr9QgjPHb2y9Pdz4oUwDlV/WDw9Qb4KA0vaQpaOC8RVYPvmTlyuDBBX
wxTuE1jd1DerYZNM1Qn5vXS+BpxvM4k/Sv3ENTh8HNqvFbfJ12IPVClRz9lY
36zFCuewoiIY//8ivEs+WPD2zX3iRWgQWT5HltnJL0biJ0u2dIHex1yMufQH
lirvU/JLwMri2O06OfESeMT6G9GWW+SXIpX3s5tt8yr/AOg26gY=
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 50.}, {-0.44311894807917424`, 0.3991231273044311}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7BlQgUNHnG/mpYVLoeIcDl0LQq3MFU5C+QIO
JoJfd3i4b9oP4Ys4ZOxyD7+SvwwqL+EQJVBfOXUyTF7G4cL6uHkHiuqh8goO
E87wJlSH74HylRw6jpcu4XSbCFWv4vBOJWSeyIajUL6aQ+uEZQ8Fq1ZD1Ws4
nN/Txnro6AqovJaDnIRgR5rlIShfx8Et7uPnRedOQfl6DtnrLp/4c30DlG/g
oLN03xdXRpj9hg5b3LXfxEXtgvKNHCQE4mdsr7kAVW/swGfsbvWPbQuUb+Kw
5+j859+qD0DVmzo0bFjo4eXfDpU3czht4cDw/ivMPeYOCstPa9ytaYSqt3AI
MPwn6h3aDeVbOvT8ikpZwAwLLysHAZ3zFnsl2qDy1g5v1x3cGtJwGMq3cWBo
mP/zurIdVL2tw9RHv63mO8P8Y+dwu+Aat+6llVB5e4cF28KWnty9Dsp3cHCM
CNvXWrsZwm9wcMg5rv12ZfskqLyjg8HxA90zjKHh2+DocORHtK9Xy16o+U4O
BpM6wzcv3A2Vd3JI+LZYN3RCAVS/s8Ou51/ev/u1EaK+wdnB68jRXxwnYOnJ
xeGA1KOAk/ENUP0uDvyL+tVWSB+Cyrs66GlmCzYehPq3wdXhxNVq9l+Td0Pl
3RwOxF68Ymo/G6rfzeGO4+7iC4xQ8xjcHdI0J07a+wVqXoO7g8wTngrjAlj6
8XBwLnz7ppn5IFS/h0N6zz3lt8t3QPV7OtRcl5E4UL3AHgCJDuy0
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 50.}, {-0.2576121318818436, 0.19629564617503475`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7CH0gj1QAYcbbQZeHuuX7IdwORwUpIMqZgZM
gvIFHG4b9XcefroByhdxEJtldUU97DiUL+Ew5ZSzzUPDZVC+jMMmtkfJ+/UX
QvkKDvv+yrp4/zgA5Ss5LPj+KPxB1gaoO1QcSjiNtuoqroHKqzkU1SpLHBS8
CJXXcChL4n/X9KoAytdyEKhOLFqhvQKqXseBYYb7RaG9B6Hyeg4np7PZ/eM9
CpU3cLgx59D8R/ZnofKGDsLyvhHNjw5B+UYO0wp95jyz2g1Vb+wgz80ZbXz+
EJRv4sCUsf3QureboOpNHX5MC9Y7nHgOyjdzWLbkwkyVs3uh6s0dUnwyot9F
74TKWzicyL53PdFkJVTe0uGXivne2TdnQuWtHM4cmuC/JA0WXtYOKrLahj3X
YPbbOBSo1gn2/5kMVW/r8O5N5wwh1VVQvp3DpVW79R4EboOqt3d4uslPdGXE
eSjfwaHs+NuUVWanIOobHBzaPi3c8Kh1M1Te0cHvzuQ/q+0PQOUdHeQ/xSUk
pW6Eyjs5fFpxr6R5+TwIv8HJYdG+oiadSzD9zg4bfKU+6qR0Q+WdHS7sTfWJ
t+6Fus/FwXkKl/Zi4YNQeReH1LYdmeL+R6Dyrg5rOANZnGomQO13dRBTin85
Fe4fN4cg9X+7nvLB3OfmkPS3Zb1Dwl6ofncHhmI2509JrVB5d4c3y+R7pX5t
gcp7ONgk+ltt3TAHar+HA0PUL4mLG5Kg8p4O6jkbSotN9tgDAGqi56g=
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 50.}, {-0.2448932031669734, 0.26670863492287034`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7BlQgcMKz3bXB7cW7odwORwebOIqTvm0DMoX
cIgPU+D5/OIgVJ+IQ8e9Qovnx3ZD5SUc6oqutNSab4XyZRz8GmM2pM3dA+Ur
ONzIiT1aZbMTql/J4W3t6cZii41QvooD6y27a77PjkH5ag5XfzkEb192GKpf
w6H/XnLkvsVrofJaDnfqmX5a86dA+ToOZzj9MmMj1kDV6zl8Ew6zPuY1Hypv
4NAwO7gy9UwxlG/o8KJmtYpP4Goo38ihw2dyk93CbVD9xg4Tuix7dzyfCpU3
cbA4Mo/Z6c0JqLypg40aZ/uFnTug8mYOJxJq7Q9PXAuVN3dIcDvOdf5TFpRv
4fDjb/2NL2tmQvmWDnfcdcQEp3VB9Vs5vDv++UhkOSx8rR0mhJ2Y1uYwC6re
xuGKc9vpNJ0DUHlbh6gda47XeGyGyts5uDYarVW23wyVt3cQUOs0uCI/Dyrv
4PCsz+mB+bktEPkGB4ePAilfbspug6p3dPhyrbnYl3E5RH2Do8Otv1zhNhv2
QvU7OchxBqe3Bc+B6ndyuBFkK/eUexJUv7PDwucbUqTdofHd4Ozg0LLHQf3T
aqh+FwdvxrL3L1U2QfW7OCzbJaM10XQKVL+rQ5kI34wjYYug8q4O/pmv5U3a
oO5lcHPYsL3G659tDVTezYHB2Cjcr+QIVN7doWFvUdjC7wug9rs7BGh8jbP9
vhgq7+HA1aT6zLZuIVS/h4NwnPbnphUw/3s6KKwum5v7fqk9ALlI5Q8=
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 50.}, {-0.19471001793638876`, 0.17890332184988736`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7BlQgUPJFl23fS4H9kO4HA5Mdh2Hku02QPkC
Dll3fd0q7y+A6hNxuGP58EdZzyaovIRDQ7CcUIFYFVRexmHB840HQxZOgMor
ODDU/rkXdnYxVF7JoeZMH+eDzp1QvorDjTt531hNN0LVqznMfn4szb53E1Re
w2GzfIZkdCLMfVoONfyS91KuT4DK6zisdP24bbvuPKi8noO/7VL+kMDNUHkD
hz8bFsW1P1kElTd0sDj/dZLjqSlQeSOHS27h206/3AaVN3a4li1jm7cP5j4T
hyV1+Vm5O3ZD5U0d/KqOL7/dtgcqb+bgezT6nshZmHpzB5Vyjr0ezJOh6i0c
GNKnMF7q74HKWzr0nc1nK3g4Eypv5VAwg9dk/eNlUHlrhwen1gfmq02G8m0c
XvCpK9c1L4aqt3UIWX7oYu67nVC+ncNp/rxpdjd3QNXbO8zYdnSBZhnMvw4O
Xt0v5pxTWg3hNzg4TP72qdmO6TBU3tEhIXXDug03WiH6GxwdPvWkCf17ehAq
7+Sg8XbP5qc8bVB5J4flO/RNI7dth8o7OzAz7RPzfb4Xar6zQw43Z0m1/Hqo
e1wcGFZPdG/57APV7+LQ0jOtZ2XdNqi8q8M0U3WBgvNQ8xpcHZjEZj14bbgB
Ku/msEZaytHz2nKofjcHq503ClmzYeHvDkx//uZZa1dA9QP5Tye9crrXCnWf
h4ODYcPU2B9ZUP0eDj6v7kb2s86A6vd0KEiZuYLDZ/F+AH5u53I=
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 50.}, {-0.14850598757577824`, 0.11143277021572226`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdycsKQQEUhtGdkaGBgYEBkiTJ/c457kw9gjL2Ch7ZIyClzvprt1t91dvj
es9FRP9z3//bK4ns0izzuICLuITLuIJruI4buIlbuI07uIt7uI8HeIhHeIwn
eIpneI4XeIlXeI0TnGb9xLGh49jScezoOPZ0HAc6jiMdx4mO40zHcfn7DfcG
HfA=
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 50.}, {-1., 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 ImageSize->{532, 359},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[319]=",
 CellID->811563188]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True],

Cell[CellGroupData[{

Cell[TextData[{
 "UpperFrequencyFactor",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->563447793],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->2086832193],

Cell["\<\
UpperFrequencyFactor takes values \[GreaterEqual] 1,  by which to scale the \
upper Nyquist cutoff frequency and increase spectral resolution. It is \
recommended to set UpperFrequencyFactor close to 1. The default value is 1.\
\>", "ExampleText",
 CellID->804504089],

Cell["We consider the following example data", "ExampleText",
 CellID->1064465213],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataExample", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"0.05", "*", "2", " ", "\[Pi]", " ", "n"}], " ", "]"}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"0.2", "*", "2", " ", "\[Pi]", " ", "n"}], "]"}], "+", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "100"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->789150305],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1.0073476072261922`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0.8079022032057934`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "0.03765375203754118`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "0.9385203286032674`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"-", "0.2503717066533546`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0.8258711857080447`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     RowBox[{"-", "0.6651250891938936`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", 
     RowBox[{"-", "1.7622185529301393`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"-", "1.3584056676161862`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0.18426010904973655`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0.12223693554862525`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     RowBox[{"-", "0.4965527008054973`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     RowBox[{"-", "1.4381173851600617`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     RowBox[{"-", "1.0904751196035247`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", 
     RowBox[{"-", "0.5626251763612763`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "0.5575077591019519`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "1.4900889361680347`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "0.6602688340599615`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", 
     RowBox[{"-", "0.09335262328830585`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "2.008434018748646`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "1.0523251345321465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "1.9889670184509547`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", 
     RowBox[{"-", "0.7772568170799082`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", 
     RowBox[{"-", "0.23374951517955644`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "0.04683626532386209`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "0.4980771037520031`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", 
     RowBox[{"-", "0.6973776162691794`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", 
     RowBox[{"-", "1.768924405552296`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", 
     RowBox[{"-", "2.4356718341161256`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", 
     RowBox[{"-", "0.38952511661910383`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "0.48095811326991056`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", 
     RowBox[{"-", "1.3286143823446825`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", 
     RowBox[{"-", "2.1679019268096935`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", 
     RowBox[{"-", "1.51620004184235`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "0.9683137131122519`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "1.8518641042736501`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "1.4312722607622144`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37", ",", 
     RowBox[{"-", "0.8665246283639999`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", 
     RowBox[{"-", "0.14013219869702775`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "0.31085830022570615`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "2.0916559104824435`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41", ",", "2.027173366798337`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", 
     RowBox[{"-", "0.9986844957774607`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43", ",", 
     RowBox[{"-", "0.4766061371324294`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44", ",", "1.4158381656130485`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "0.45321233687323437`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"46", ",", "0.6770177248464169`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"47", ",", 
     RowBox[{"-", "0.5606059922340323`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", 
     RowBox[{"-", "2.2988480197136454`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", 
     RowBox[{"-", "1.3495623795321223`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "0.6056011479239869`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", 
     RowBox[{"-", "0.3003620484771661`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"52", ",", 
     RowBox[{"-", "2.570572350707248`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"53", ",", 
     RowBox[{"-", "0.8236562004753079`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"54", ",", 
     RowBox[{"-", "0.20932067196602638`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "0.7313990735783713`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56", ",", "0.9631953556133024`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"57", ",", "0.0895538212972452`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"58", ",", "0.7914199671881911`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"59", ",", "0.43557760459423434`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "1.5970784936004185`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"61", ",", "1.4637458283358187`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"62", ",", "0.6116110780300974`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"63", ",", 
     RowBox[{"-", "0.5743675956800648`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"64", ",", "1.083826886178925`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"65", ",", "1.2126191010580905`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"66", ",", 
     RowBox[{"-", "0.4392623423103658`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"67", ",", 
     RowBox[{"-", "2.0867083859480204`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"68", ",", 
     RowBox[{"-", "1.9628990986383181`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"69", ",", "0.04894157963041734`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", "0.9379901434563047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"71", ",", 
     RowBox[{"-", "1.4740637786981354`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"72", ",", 
     RowBox[{"-", "0.7687045448216789`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"73", ",", 
     RowBox[{"-", "1.4638348200313276`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"74", ",", "0.08911030707453371`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"75", ",", "0.024698017911421566`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"76", ",", "1.0130629539708513`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"77", ",", "0.17617824014205163`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"78", ",", 
     RowBox[{"-", "0.13636462958292028`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"79", ",", "2.050292123703673`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "1.6854802158469222`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"81", ",", "1.3076246886484306`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"82", ",", 
     RowBox[{"-", "0.7264537431865978`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"83", ",", "0.7436652208643721`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", 
     RowBox[{"-", "0.2192356342448275`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"85", ",", "1.683958743441604`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"86", ",", "0.08670796092052341`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"87", ",", 
     RowBox[{"-", "1.5394665163121275`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"88", ",", 
     RowBox[{"-", "2.2075753813423566`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"89", ",", 
     RowBox[{"-", "0.3988147270722837`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "0.6022643905416625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"91", ",", 
     RowBox[{"-", "1.088125569954141`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"92", ",", 
     RowBox[{"-", "1.8012597494200124`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"93", ",", 
     RowBox[{"-", "0.8758179349910962`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"94", ",", 
     RowBox[{"-", "0.5841954602368015`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"95", ",", "1.5023901290122044`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"96", ",", "0.3066626605789218`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"97", ",", "0.19424287082406244`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"98", ",", "0.9058912548476734`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"99", ",", "0.913971966895462`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", "1.1115477416589212`"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->1420499119]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Autocorrelation", "[", 
    RowBox[{"dataExample", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "100"}], "]"}], ",", 
     RowBox[{"UpperFrequencyFactor", "\[Rule]", " ", "1"}]}], "]"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1446038884],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQDQEf7FFpBgeHlJg1bRMOQvkcDs8nWZgJ/T+0H8IX
cHAq1w2xXNUJ5Ys4XJjC996w/i5UvYTD5FQObQmdy1C+jEM790GXipZTUPUK
DhV8HHfDjj6H8pUcsvWtZLh7HkH5Kg79fxoUXM4cgPLVHO7Mdz+13L0Tap6G
g3dacp/KjxtQeS2H4KOnpijLwczTcWC5fEPVYMJ9KF/P4bYue9caniNQ/QYO
WgfsBSXTbkL5hg7hC29WXQ+HyRs5/DtjJL/rEcx+YwfTHfF3paa1QOVNHGIr
nx1K3PEQyjd16BQx2/r+0XMo38zhfMero2W9t6F8cwfWOyWGeTe2Qc2zcFif
K8ejpL8cyrd0CMhYm7ByxwWoeiuHN2oGG5oOwPRbO5RLevGHNiyH8m0c5rNm
3pqgC/OfrcN+vmm6r5fB+HYOt1hYeJ4sPgLl2ztcCq4wOr56kT0serfcuffX
WfwsRL7BwSF5xvSmZt2HUPWODr+YHrUkZDyAyjs6rBBhS4pR2gKVd3JYJulo
kPnkEsS8BicHlZPZCWZ7TkDNd3aI9q94wXx0B1S/s4Plrt1B05/CwtPFoVNx
odQxq4tQ/S4Of9m9ZNl7YeHp6rDo2SPPHJ5bUHlXB6+5eremN26Byrs5aJpV
e/gXQcOvwc0hSKqkg1VzJ1Te3eFnxyGt21zXoPrdHdYd+rXXKu4YVN7DYe6a
lQ3Ldp2G6vdweNQbv2nS11tQ93k6SK15Yl+dcgIq7+lQ5fV+a5latz0AIWbs
Fg==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 51.}, {-0.7428392712613023, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[3]=",
 CellID->370604767]
}, Open  ]],

Cell["\<\
Changing the upper Nyquist frequency has a direct effect on the \
autocorrelation with more noisy output:\
\>", "ExampleText",
 CellID->277030772],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Autocorrelation", "[", 
    RowBox[{"dataExample", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "100"}], "]"}], ",", 
     RowBox[{"UpperFrequencyFactor", "\[Rule]", " ", "2"}]}], "]"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->943646889],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxVlHlQlHUYx5Gi3Bw1uXKUREFIneWGuOELKMfKtQsLS1hxBA1uQQG1aAOs
HAnCcgUloKUSCAoMEEdIyIJhAgsu952sBkITQkyIwGjH8OwfvTPvvPOdz+/7
fJ953vd5D4VEccIUFRQUwv69/3tuXcv2/38qgNmv5Gu1K6ltS26H8gczBmWd
j4m/jojWVFGC5ThxVYxb/B5S0PQL8b0QKqs1zI31EteAHbe03tainvRBfDFV
WNQbfZvOa0F0fdtbGkmjpA9jd9z5QtFnSaR1EXzKdbqieo70EQwkRqZv7B+l
esfwZDDDUzIo9zPxrV7cObvfZojrY+rC09XbnpOkDWHYp9Spf26AtBGSwy9q
rTUtkDZGleImY3d+CdUzAWde4BerJM8zhVSSWut4qJq4GRjVupHZymWk3wZT
8FhlpqCRzpuDmb46YaEqJW2BvZfqtWvxE2lL7A8SfTV09Q/SVhBX8r1M2aVU
zxppduoa70HObVDalXo36kAHcVu8mRbtMltcR9wOiUa1p+/HNRC3R/LkdKCi
5QxpwES3tW9uJ81XCGSH8zXbZf3EHbDOEj7NDeBt1RM6oCdfdfFafhvVd0SY
RcU0f2cWcUfkX2GuhpZ8T9wJ9naNoey1GuJOqPxuz+bze/L3dxw3Z06Nnpkt
IX4cMQ+s+loSloifwKZxZJS6M/UvPIG8I5nJ46/IiDvDc8X9xeCrd4k747Un
Iqamzz3Kd0F9XvdGc1MVcRdoif60yWm+RdwVDSohSmfj8yjfFVeeq9RrOwxQ
fTe03xFMmUvk+W5wfvfnSyzzMeIs6CwXqi0oDxNn4b5fm/WdWgnVP4kvsz82
M8oaIn4Sve6nQwPD54m7o4GrYHTULIfy3cGQmkT0OMqIe+BCYktjWnwPcQ8w
bctk6x0/EPcEQ5dZnppI35fQE5O5z0LZySnUnxfUrR9yq8StlO+FKAPz8LPX
hsnvjV7tYwsr31RsaXhjvfLHqoue01TPGwYjXvq9+2hfxN5YfIf3SdZoB/nZ
4Otq5ifiEfnZeF9Dk6XEkc+DDaNYFeOUmH7ys6HJCuoWaExQfxzEmc3VeK2I
tzQ4SFnP3dfMkvfLQb7H+byawqYtLeYgU1/Id7K5Tvk+WNJhWAuG6f8CH1Su
ze95qNhOfh8EO3+U05lO+yb2Qc+NWb2A9RHK94WV7G9J3UEp5fviRVuzU9Gt
PvL7Yq3cVE0a/IjyfSHZFds9s1lA+VyYSVbjP/eZIj8XcS/3RSyqi2l+XNRF
1/A1l+vJz8WHf43FC4Q3yO+H+a+L15bqMqh/P+yom55PGLlK+X5g5GwUaxTT
Por9IFPsb4gNjSa/PyKKNi8P6dE+wx/tw7xIndRWyveHqCloGwTN5PeHxKFR
64F6C/l5CIw5MzX6xgTl81Cw46W0TKPL5OchVP3Asy7przQ/Hg6XJ9Xc3J5B
8wvAwtEopWCPavIHwLX5U/cuN0P7fwCmz/aT
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 101.}, {-0.8947546846275175, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[4]=",
 CellID->701139426]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "SpectrumFunction",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->685744947],

Cell["\<\
SpectrumFunction allows selection of specific function to use to internally \
for the power spectrum equivalent (c.f. periodogram) on which inverse Fourier \
transform will be performed to obtain the autocorrelation function. The \
default function used is the InverseAutocovariance. We can also use \
LombScargle as an alternative.\
\>", "ExampleText",
 CellID->2076032778],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeSetLinear", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "100"}], "]"}], ",", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "100"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1426395678],

Cell["We can calculate the Autocorrelation list as:", "ExampleText",
 CellID->1072208685],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linearAutocorrelationA", "=", " ", 
  RowBox[{"Autocorrelation", "[", 
   RowBox[{"timeSetLinear", ",", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "100"}], "]"}], ",", 
    RowBox[{"SpectrumFunction", "\[Rule]", " ", "InverseAutocovariance"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1076086818],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.961875034238952`", ",", "0.9365861541715409`", ",", 
   "0.9036240345810809`", ",", "0.876078995285426`", ",", 
   "0.8444709974060289`", ",", "0.8162400795472561`", ",", 
   "0.7853742706008168`", ",", "0.7568859151058949`", ",", 
   "0.7265682163408219`", ",", "0.698027336333305`", ",", 
   "0.6681906371364654`", ",", "0.6397248115398075`", ",", 
   "0.6103517659841629`", ",", "0.5820551232831144`", ",", 
   "0.5531516776760206`", ",", "0.5251016473269849`", ",", 
   "0.49668601814942936`", ",", "0.4689508211718873`", ",", 
   "0.4410482647672606`", ",", "0.41369065017059165`", ",", 
   "0.38633074142473917`", ",", "0.3594100008751844`", ",", 
   "0.3326251210458733`", ",", "0.306198236929387`", ",", 
   "0.2800226938639598`", ",", "0.2541450184276916`", ",", 
   "0.2286145194817599`", ",", "0.20334018530575804`", ",", 
   "0.17849151723119266`", ",", "0.15387368668259824`", ",", 
   "0.12974452185637084`", ",", "0.10583553669452254`", ",", 
   "0.08246431872315668`", ",", "0.059315786324211014`", ",", 
   "0.03674166640360179`", ",", "0.014404505291897076`", ",", 
   RowBox[{"-", "0.007332688832641667`"}], ",", 
   RowBox[{"-", "0.02880822948804951`"}], ",", 
   RowBox[{"-", "0.04966800389581539`"}], ",", 
   RowBox[{"-", "0.07023234102762937`"}], ",", 
   RowBox[{"-", "0.0901735334214452`"}], ",", 
   RowBox[{"-", "0.10977775632621391`"}], ",", 
   RowBox[{"-", "0.12875852688015613`"}], ",", 
   RowBox[{"-", "0.14735440827411814`"}], ",", 
   RowBox[{"-", "0.16533222750671048`"}], ",", 
   RowBox[{"-", "0.18287223602121763`"}], ",", 
   RowBox[{"-", "0.19980387252217516`"}], ",", 
   RowBox[{"-", "0.21624118426082883`"}], ",", 
   RowBox[{"-", "0.23208269425875058`"}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->2067459864]
}, Open  ]],

Cell["We can instead use directly the LombScarlge function:", "ExampleText",
 CellID->794647379],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linearAutocorrelationA", "=", " ", 
  RowBox[{"Autocorrelation", "[", 
   RowBox[{"timeSetLinear", ",", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "100"}], "]"}], ",", 
    RowBox[{"SpectrumFunction", "\[Rule]", " ", "LombScargle"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[4]:=",
 CellID->1512525788],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.9079610383590642`", ",", "0.7910842285731191`", ",", 
   "0.6801773561609522`", ",", "0.5737582962491854`", ",", 
   "0.4722968855862681`", ",", "0.3756238740605423`", ",", 
   "0.28379496750425387`", ",", "0.19680366207030436`", ",", 
   "0.11463368414080459`", ",", "0.037311902040049125`", ",", 
   RowBox[{"-", "0.0351930698149818`"}], ",", 
   RowBox[{"-", "0.1028485289547398`"}]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->704415670]
}, Open  ]],

Cell["\<\
We notice that the samplings and also number of lags are different in this \
case.\
\>", "ExampleText",
 CellID->36819779]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Properties & Relations",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->2123667759],

Cell[TextData[{
 "In calculating the Autocorrelation as an inverse Fourier transform of a \
periodogram a modified version of the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function is used by ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["InverseAutocovariance"]],
    "paclet:MathIOmica/ref/InverseAutocovariance"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "ExampleText",
 CellID->6451157],

Cell[TextData[{
 "The function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CorrelationFunction"]],"paclet:ref/CorrelationFunction"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " can calculate exact autocorrelations for a series of evenly spaced time \
points, and can also employ linear interpolation as an alternative to the \
Lomb-Scargle approach of the Autocorrelation function."
}], "ExampleText",
 CellID->1644893425]
}, Closed]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["InverseAutocovariance"]],
    "paclet:MathIOmica/ref/InverseAutocovariance"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Tutorials"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["MathIOmica Tutorial"]],
   "paclet:MathIOmica/tutorial/MathIOmicaTutorial"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->341631938],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["MathIOmica Dynamic Transcriptome"]],
   "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->1023267351],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["MathIOmica Guide"]],"paclet:MathIOmica/guide/MathIOmicaGuide"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->1936410211],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Links"
}], "RelatedLinksSection",
 WholeCellGroupOpener->True,
 CellID->1584193535],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["MathIOmicaGuide"]],"paclet:MathIOmica/guide/MathIOmicaGuide"},
  "RefLink",
  BaseStyle->"RelatedLinks"]], "RelatedLinks",
 CellID->1038487239],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["MathIOmicaOverview"]],
   "paclet:MathIOmica/tutorial/MathIOmicaOverview"},
  "RefLink",
  BaseStyle->"RelatedLinks"]], "RelatedLinks",
 CellID->1970164909]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Autocorrelation",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:MathIOmica/guide/MathIOmica", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2019, 7, 22, 18, 23, 6.881269}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "MathIOmica`SpectralAnalysis`", "keywords" -> {}, "specialkeywords" -> {},
     "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Math I Omica Package Symbol", "language" -> "en", "paclet" -> 
    "MathIOmica Package", "status" -> "None", "summary" -> 
    "Autocorrelation[data, setTimes] calculates the normalized \
autocorrelation for a time series over specified set times, using a \
Lomb-Scargle based inverse autocovariance.", "synonyms" -> {}, 
    "tabletags" -> {}, "title" -> "Autocorrelation", "titlemodifier" -> "", 
    "windowtitle" -> "Autocorrelation", "type" -> "Symbol", "uri" -> 
    "MathIOmica/ref/Autocorrelation", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> "", "NewStyles" -> False},
CellContext->"Global`",
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  TaggingRules -> {"NewStyles" -> False}, FrontEndVersion -> 
  "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", StyleDefinitions -> 
  "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[22352, 684, 268, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"b0c281c8-9045-422d-a0dd-402e5d3bab16",
   CellTags->"PrimaryExamplesSection",
   CellID->912080320]},
 "RasterizedOutput"->{
  Cell[35696, 1073, 8274, 144, 70, "Output",ExpressionUUID->"5d234069-be66-4892-bc8f-89267ceafb3a",
   CellTags->"RasterizedOutput",
   CellID->131745992],
  Cell[59440, 1630, 16739, 281, 70, "Output",ExpressionUUID->"4404f573-5edb-4898-b193-dfb945f028fd",
   CellTags->"RasterizedOutput",
   CellID->199247487],
  Cell[87607, 2210, 9756, 168, 70, "Output",ExpressionUUID->"ba3db909-c3dc-4307-ae39-9284992ec528",
   CellTags->"RasterizedOutput",
   CellID->825508336],
  Cell[98146, 2409, 11600, 198, 70, "Output",ExpressionUUID->"361f8dd5-d4ef-4c87-ac14-8a5769281935",
   CellTags->"RasterizedOutput",
   CellID->1574243532],
  Cell[110776, 2645, 13617, 231, 70, "Output",ExpressionUUID->"e2192d6e-beb9-4a43-af1d-536d5b828367",
   CellTags->"RasterizedOutput",
   CellID->1312511284]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 183296, 4435},
 {"RasterizedOutput", 183495, 4439}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[587, 21, 4702, 116, 70, "AnchorBarGrid",ExpressionUUID->"115faa03-0a58-4cec-bf07-01ebf201a205",
 CellID->1],
Cell[CellGroupData[{
Cell[5314, 141, 172, 6, 70, "ObjectNameGrid",ExpressionUUID->"34bdde4f-5211-4ed9-abea-68528bde8dda"],
Cell[5489, 149, 502, 13, 70, "Usage",ExpressionUUID->"636be5f4-d55a-459e-9bcb-25b10a7fc2dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6028, 167, 630, 19, 70, "NotesSection",ExpressionUUID->"a2ac8640-0046-4791-8c7a-a69faae4fd9a",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1805361369],
Cell[6661, 188, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"04caf8b4-128e-4e28-a9a6-5f691df288d9"],
Cell[6695, 190, 395, 10, 70, "Notes",ExpressionUUID->"2ccfe517-d7e3-4a91-b738-f933c2d8607f",
 CellID->1403842600],
Cell[7093, 202, 2148, 63, 70, "2ColumnTableMod",ExpressionUUID->"b2dc2ddb-5dc7-4c83-9332-06c549acf4b8",
 CellID->1390286253],
Cell[9244, 267, 646, 21, 70, "Notes",ExpressionUUID->"69cfe11e-a9e4-49f3-b4a6-f0b8b456b7ab",
 CellID->1915097832],
Cell[9893, 290, 53, 0, 70, "Notes",ExpressionUUID->"f338a5f7-b527-4155-9938-6bea9d14e7c2"],
Cell[9949, 292, 904, 21, 70, "3ColumnTableMod",ExpressionUUID->"2b0b2c77-bd53-4efa-8962-913b922d64df",
 CellID->904554235],
Cell[CellGroupData[{
Cell[10878, 317, 193, 5, 70, "ExampleSection",ExpressionUUID->"7fd5f713-7329-4e15-94f8-0c51b64a2b60",
 CellID->1055882129],
Cell[11074, 324, 2965, 88, 70, "Notes",ExpressionUUID->"c38ad435-0634-474a-acd4-f82a5e835721",
 CellID->441782802],
Cell[14042, 414, 3339, 108, 70, "Notes",ExpressionUUID->"5313b368-1723-41b4-8f5e-4d89dbcc7730",
 CellID->374292600],
Cell[17384, 524, 3256, 96, 70, "Notes",ExpressionUUID->"fe1aed96-fd44-490d-a576-dbeb812fe82e",
 CellID->1228796337]
}, Open  ]],
Cell[CellGroupData[{
Cell[20677, 625, 203, 5, 70, "ExampleSection",ExpressionUUID->"704c8e4b-b3a0-4a57-b3ea-0fbc16a28a73",
 CellID->462926512],
Cell[20883, 632, 425, 13, 70, "Notes",ExpressionUUID->"cafc9c66-3af1-43a6-8f5e-903cfcb2b7b7",
 CellID->2116251185],
Cell[21311, 647, 457, 13, 70, "Notes",ExpressionUUID->"2b2e6030-5903-45ab-b839-86b94844a830",
 CellID->1079495891],
Cell[21771, 662, 498, 14, 70, "Notes",ExpressionUUID->"43196a5b-fc17-4e7c-ae92-756e697672cb",
 CellID->1325269568]
}, Open  ]],
Cell[22284, 679, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"64135ca8-7adc-4ff3-81ec-44272fa3a572"]
}, Closed]],
Cell[CellGroupData[{
Cell[22352, 684, 268, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"b0c281c8-9045-422d-a0dd-402e5d3bab16",
 CellTags->"PrimaryExamplesSection",
 CellID->912080320],
Cell[CellGroupData[{
Cell[22645, 698, 195, 6, 70, "ExampleSection",ExpressionUUID->"c7bf8f8d-991d-4474-a311-99b48376a75f",
 CellID->595665954],
Cell[CellGroupData[{
Cell[22865, 708, 208, 6, 70, "ExampleSubsection",ExpressionUUID->"d83ddc77-678c-4582-b995-617a8368079f",
 CellID->1212109268],
Cell[23076, 716, 80, 1, 70, "ExampleText",ExpressionUUID->"f1ca0872-4da0-4706-a594-99f39ea3cba4",
 CellID->191603639],
Cell[23159, 719, 120, 3, 70, "Input",ExpressionUUID->"14b95127-4367-4102-94b6-5a86857c7053",
 CellID->2017647728],
Cell[CellGroupData[{
Cell[23304, 726, 294, 9, 70, "Input",ExpressionUUID->"5e321d7b-2d03-49a2-af61-e7bbded792ff",
 CellID->68045143],
Cell[23601, 737, 167, 5, 70, "Output",ExpressionUUID->"d49e857a-904d-4159-be52-78eb977b914b",
 CellID->751223613]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[23817, 748, 217, 6, 70, "ExampleSubsection",ExpressionUUID->"4b32b7a2-b0e7-4da4-ba78-550f5b652b3f",
 CellID->501752921],
Cell[24037, 756, 130, 4, 70, "ExampleText",ExpressionUUID->"a3de4b2b-802b-4eff-bbb4-68398d983376",
 CellID->646561019],
Cell[24170, 762, 96, 1, 70, "ExampleText",ExpressionUUID->"43b27cd8-f2fd-4b3d-b4b6-29b889837ff4",
 CellID->973241523],
Cell[24269, 765, 348, 11, 70, "Input",ExpressionUUID->"778bb592-38bf-4009-ab00-c64c8e863487",
 CellID->1003425557],
Cell[24620, 778, 89, 1, 70, "ExampleText",ExpressionUUID->"288c3162-8500-4a27-b79a-9d8d8e114620",
 CellID->2097643619],
Cell[CellGroupData[{
Cell[24734, 783, 258, 7, 70, "Input",ExpressionUUID->"d484e4f8-e75c-4137-85be-9352a3337d9e",
 CellID->941256555],
Cell[24995, 792, 1821, 35, 70, "Output",ExpressionUUID->"73c2889a-beea-4b1e-93ad-591719506b09",
 CellID->717477639]
}, Open  ]],
Cell[CellGroupData[{
Cell[26853, 832, 198, 5, 70, "Input",ExpressionUUID->"6c821c7c-3d83-4837-aac4-619fccb8af5b",
 CellID->1092987601],
Cell[27054, 839, 2056, 51, 70, "Output",ExpressionUUID->"8386f246-ea87-48ba-bb59-4a7d229dba62",
 CellID->1254832113]
}, Open  ]],
Cell[29125, 893, 129, 4, 70, "ExampleText",ExpressionUUID->"1062b73f-2140-4456-93a5-98db67911156",
 CellID->57089611],
Cell[CellGroupData[{
Cell[29279, 901, 314, 9, 70, "Input",ExpressionUUID->"cb6471d8-bfe1-4f35-a7ce-17abaf405009",
 CellID->1208840704],
Cell[29596, 912, 1822, 35, 70, "Output",ExpressionUUID->"4bd436a3-9cc4-49ea-955f-b6da190aaa9b",
 CellID->1598365586]
}, Open  ]],
Cell[31433, 950, 85, 1, 70, "ExampleText",ExpressionUUID->"a992efe3-f983-443c-b044-4e28fac8c16b",
 CellID->393344445],
Cell[CellGroupData[{
Cell[31543, 955, 396, 11, 70, "Input",ExpressionUUID->"406c4264-d20b-4441-9081-40f73419fd8f",
 CellID->210134553],
Cell[31942, 968, 1992, 38, 70, "Output",ExpressionUUID->"7564cd65-23b3-4be1-aeb4-4063eaa354bc",
 CellID->1972227999]
}, Open  ]],
Cell[33949, 1009, 144, 4, 70, "ExampleText",ExpressionUUID->"1e9c936e-dcd0-4106-8fb4-444e8e09d05c",
 CellID->1097467909],
Cell[34096, 1015, 563, 17, 70, "Input",ExpressionUUID->"c9a860b3-43c8-4f46-9560-8d0f03c61674",
 CellID->1334376083],
Cell[34662, 1034, 138, 4, 70, "ExampleText",ExpressionUUID->"3f71d8fe-54e6-465f-aa8f-925395089e97",
 CellID->1024424297],
Cell[34803, 1040, 366, 10, 70, "Input",ExpressionUUID->"635c4ec4-29b3-4b70-8e09-9f30de8e0520",
 CellID->687101360],
Cell[35172, 1052, 134, 4, 70, "ExampleText",ExpressionUUID->"93ed7b95-5dca-4fa0-a753-b240a35c2881",
 CellID->290326522],
Cell[CellGroupData[{
Cell[35331, 1060, 362, 11, 70, "Input",ExpressionUUID->"b31932b8-b266-44c0-bc0b-44fee96775c2",
 CellID->1081141012],
Cell[35696, 1073, 8274, 144, 70, "Output",ExpressionUUID->"5d234069-be66-4892-bc8f-89267ceafb3a",
 CellTags->"RasterizedOutput",
 CellID->131745992]
}, Open  ]],
Cell[43985, 1220, 225, 5, 70, "ExampleText",ExpressionUUID->"a9bdbf69-df47-4d98-b44d-8440eb2e9e44",
 CellID->126023702],
Cell[CellGroupData[{
Cell[44235, 1229, 511, 15, 70, "Input",ExpressionUUID->"bdc4e6df-9b93-495b-9109-6809907eef78",
 CellID->1986452767],
Cell[44749, 1246, 1528, 26, 70, "Output",ExpressionUUID->"fb11ea5c-0c70-4292-b371-20146517c5d3",
 CellID->1162870217]
}, Open  ]],
Cell[46292, 1275, 95, 1, 70, "ExampleText",ExpressionUUID->"8d10a647-edaf-4b87-a349-ccd3c41270fc",
 CellID->1115595972],
Cell[CellGroupData[{
Cell[46412, 1280, 279, 7, 70, "Input",ExpressionUUID->"020e7a2a-2670-4d09-a516-dbdf12245b62",
 CellID->141779447],
Cell[46694, 1289, 1829, 35, 70, "Output",ExpressionUUID->"d0d9ec1a-e6b4-435d-8853-f447576c79b0",
 CellID->312248058]
}, Open  ]],
Cell[CellGroupData[{
Cell[48560, 1329, 212, 5, 70, "Input",ExpressionUUID->"d464ea99-ce77-472c-9653-602e21f57497",
 CellID->1852293265],
Cell[48775, 1336, 2225, 51, 70, "Output",ExpressionUUID->"2a08a2e6-f54a-44fe-a07c-e1b4775c5c0f",
 CellID->1935567996]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[51049, 1393, 259, 6, 70, "ExampleSubsection",ExpressionUUID->"f57b5121-8f11-466a-a6a6-5679e28dc88d",
 CellID->512790674],
Cell[CellGroupData[{
Cell[51333, 1403, 191, 6, 70, "ExampleSubsubsection",ExpressionUUID->"55939bb3-c34c-415f-adb2-0f250c3d6689",
 CellID->82470729],
Cell[51527, 1411, 328, 8, 70, "ExampleText",ExpressionUUID->"cb6bcd3c-925a-4ab8-9945-59eeb88ecba5",
 CellID->1308449196],
Cell[CellGroupData[{
Cell[51880, 1423, 404, 12, 70, "Input",ExpressionUUID->"90b385e9-0da6-47fd-9988-81bf83e51dad",
 CellID->1818268195],
Cell[52287, 1437, 1853, 36, 70, "Output",ExpressionUUID->"011a9f21-1931-45fe-8dbb-3e9dde1d1345",
 CellID->94573768]
}, Open  ]],
Cell[54155, 1476, 94, 1, 70, "ExampleText",ExpressionUUID->"c0a97bd7-8a6d-4ba3-8437-82abacb1bd3b",
 CellID->1025086209],
Cell[CellGroupData[{
Cell[54274, 1481, 377, 11, 70, "Input",ExpressionUUID->"d747ecf8-15d0-4d6a-b5de-dd038a9fe1b7",
 CellID->1689662321],
Cell[54654, 1494, 2859, 65, 70, "Output",ExpressionUUID->"f988c36e-54c2-4b85-b868-359f3d8c027b",
 CellID->1485256717]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[57562, 1565, 194, 6, 70, "ExampleSubsubsection",ExpressionUUID->"304da769-3083-4b4a-984a-12c9ec3c86d2",
 CellID->599608522],
Cell[57759, 1573, 83, 1, 70, "ExampleText",ExpressionUUID->"a43d2d84-3dec-41f0-a91c-dffdbb72a22a",
 CellID->1541301507],
Cell[57845, 1576, 511, 15, 70, "Input",ExpressionUUID->"2897de05-aea9-4fb1-b1d5-8c47488d6cf8",
 CellID->987869659],
Cell[58359, 1593, 130, 4, 70, "ExampleText",ExpressionUUID->"c36f4bb2-792f-4c70-9801-665f523453ad",
 CellID->499623783],
Cell[CellGroupData[{
Cell[58514, 1601, 923, 27, 70, "Input",ExpressionUUID->"ff9da6f9-30e2-43a7-896b-50327ecb57c8",
 CellID->1863208569],
Cell[59440, 1630, 16739, 281, 70, "Output",ExpressionUUID->"4404f573-5edb-4898-b193-dfb945f028fd",
 CellTags->"RasterizedOutput",
 CellID->199247487]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[76228, 1917, 194, 6, 70, "ExampleSubsubsection",ExpressionUUID->"8db92bdc-3e6f-477d-bed3-a7c20842b4ba",
 CellID->1579845812],
Cell[CellGroupData[{
Cell[76447, 1927, 258, 9, 70, "Input",ExpressionUUID->"d78b4042-6476-4013-b514-f527ae3da6ec",
 CellID->909508419],
Cell[76708, 1938, 4057, 74, 70, "Output",ExpressionUUID->"7fb77f56-3146-4d8b-8bd2-4bb611f0f6ea",
 CellID->1597390094]
}, Open  ]],
Cell[CellGroupData[{
Cell[80802, 2017, 589, 17, 70, "Input",ExpressionUUID->"1976bf43-57d2-4b8e-9567-25576c0da864",
 CellID->1573779256],
Cell[81394, 2036, 3220, 67, 70, "Output",ExpressionUUID->"450d12ea-9ca8-477d-be16-c9be3b9625d3",
 CellID->966250191]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[84663, 2109, 209, 6, 70, "ExampleSubsubsection",ExpressionUUID->"ccb64d33-9043-4ebe-8921-cdfa386eb404",
 CellID->1914626401],
Cell[84875, 2117, 162, 2, 70, "ExampleText",ExpressionUUID->"5c83d286-7c84-4048-be40-6552b42850a6",
 CellID->1094601305],
Cell[85040, 2121, 694, 21, 70, "Input",ExpressionUUID->"5b19e675-a15a-4edb-8fc8-e3b1946cc522",
 CellID->630175132],
Cell[85737, 2144, 106, 2, 70, "ExampleText",ExpressionUUID->"a7236347-9f03-4d19-b1ad-a89e539e8637",
 CellID->1926493690],
Cell[85846, 2148, 745, 22, 70, "Input",ExpressionUUID->"5b491452-fbca-44ce-bb42-7da238f9ba10",
 CellID->2111580167],
Cell[86594, 2172, 130, 4, 70, "ExampleText",ExpressionUUID->"ef94f4f1-c98e-40fd-a32d-4f1acf247b3a",
 CellID->243258213],
Cell[86727, 2178, 409, 12, 70, "Input",ExpressionUUID->"6c67daa5-4543-4340-bb35-1f39da117848",
 CellID->13116447],
Cell[87139, 2192, 93, 1, 70, "ExampleText",ExpressionUUID->"ff0c569b-09d4-444e-9902-0c40e2c7c556",
 CellID->2097255643],
Cell[CellGroupData[{
Cell[87257, 2197, 347, 11, 70, "Input",ExpressionUUID->"e52958bf-9f5a-45de-b620-b84ae59b58e6",
 CellID->1404792735],
Cell[87607, 2210, 9756, 168, 70, "Output",ExpressionUUID->"ba3db909-c3dc-4307-ae39-9284992ec528",
 CellTags->"RasterizedOutput",
 CellID->825508336]
}, Open  ]],
Cell[97378, 2381, 488, 15, 70, "Input",ExpressionUUID->"978c5537-536f-4169-908e-d967259c092c",
 CellID->346795152],
Cell[CellGroupData[{
Cell[97891, 2400, 252, 7, 70, "Input",ExpressionUUID->"8ae9ebaa-0713-44f0-b1f1-0aea9a541886",
 CellID->315501706],
Cell[98146, 2409, 11600, 198, 70, "Output",ExpressionUUID->"361f8dd5-d4ef-4c87-ac14-8a5769281935",
 CellTags->"RasterizedOutput",
 CellID->1574243532]
}, Open  ]],
Cell[109761, 2610, 175, 3, 70, "ExampleText",ExpressionUUID->"e2f9f36b-97ca-4090-8186-d99663b2cebf",
 CellID->200404388],
Cell[109939, 2615, 569, 17, 70, "Input",ExpressionUUID->"76020ca8-e59b-446d-b650-667989476aee",
 CellID->462165642],
Cell[CellGroupData[{
Cell[110533, 2636, 240, 7, 70, "Input",ExpressionUUID->"ee54a54e-51ac-4aca-8824-fa1b82fce0fc",
 CellID->169593895],
Cell[110776, 2645, 13617, 231, 70, "Output",ExpressionUUID->"e2192d6e-beb9-4a43-af1d-536d5b828367",
 CellTags->"RasterizedOutput",
 CellID->1312511284]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[124442, 2882, 203, 6, 70, "ExampleSubsubsection",ExpressionUUID->"0ee77937-788b-4552-b579-956f5f30c5fb",
 CellID->336551588],
Cell[124648, 2890, 156, 2, 70, "ExampleText",ExpressionUUID->"b54106fc-c177-4417-ab79-da42db084354",
 CellID->1619212933],
Cell[124807, 2894, 281, 10, 70, "Input",ExpressionUUID->"bd54fc23-29bc-483d-b714-751ea6e0ff55",
 CellID->1446943632],
Cell[125091, 2906, 288, 8, 70, "Input",ExpressionUUID->"da8379f1-774e-4c22-b15b-ad120d05fbc6",
 CellID->676804396],
Cell[125382, 2916, 117, 3, 70, "ExampleText",ExpressionUUID->"c9496636-1dc4-4471-ad43-64947b48f865",
 CellID->1859520469],
Cell[125502, 2921, 507, 16, 70, "Input",ExpressionUUID->"1fa3181c-80b2-4be7-968d-a43462b1d1db",
 CellID->1978089060],
Cell[126012, 2939, 130, 3, 70, "ExampleText",ExpressionUUID->"d969686b-a27b-4232-aa34-ad3b7417e418",
 CellID->1790576603],
Cell[126145, 2944, 375, 11, 70, "Input",ExpressionUUID->"4036fb07-8bd2-40d0-a878-adceb482a97a",
 CellID->548492213],
Cell[CellGroupData[{
Cell[126545, 2959, 199, 5, 70, "Input",ExpressionUUID->"2f8b594b-953f-4e23-b55c-53e17177e18b",
 CellID->1508810967],
Cell[126747, 2966, 2248, 51, 70, "Output",ExpressionUUID->"2d53e823-e32c-421f-bb1a-a4904e1bd5e0",
 CellID->2028952510]
}, Open  ]],
Cell[CellGroupData[{
Cell[129032, 3022, 365, 11, 70, "Input",ExpressionUUID->"e0aa23b1-a6ca-4f8f-8752-95fde469f9a5",
 CellID->698644704],
Cell[129400, 3035, 13169, 284, 70, "Output",ExpressionUUID->"8da86b52-4ecb-451c-9a65-020de9658505",
 CellID->886750515]
}, Open  ]],
Cell[142584, 3322, 182, 3, 70, "ExampleText",ExpressionUUID->"d9b40bb1-ef4b-44d9-9f8b-d5d6102fdff0",
 CellID->1843963923],
Cell[CellGroupData[{
Cell[142791, 3329, 420, 13, 70, "Input",ExpressionUUID->"1718074e-9ced-460d-8137-6daf22175678",
 CellID->1429737960],
Cell[143214, 3344, 12618, 274, 70, "Output",ExpressionUUID->"258bd098-756a-4a29-8ec0-1f78245dce6c",
 CellID->811563188]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155905, 3626, 168, 5, 70, "ExampleSection",ExpressionUUID->"830c8be5-2077-4bf5-8fad-c1163eae6e72"],
Cell[CellGroupData[{
Cell[156098, 3635, 207, 6, 70, "ExampleSubsection",ExpressionUUID->"a96d33e7-cab9-464a-be01-45dc4b853083",
 CellID->563447793],
Cell[156308, 3643, 120, 3, 70, "Input",ExpressionUUID->"cb80db4e-1cf6-48e5-9008-0c88bc209903",
 CellID->2086832193],
Cell[156431, 3648, 277, 5, 70, "ExampleText",ExpressionUUID->"b0ec3069-c3b3-4479-bb39-36b512249710",
 CellID->804504089],
Cell[156711, 3655, 82, 1, 70, "ExampleText",ExpressionUUID->"8f2531c7-c0fb-4568-a814-b264bff94b6c",
 CellID->1064465213],
Cell[CellGroupData[{
Cell[156818, 3660, 622, 18, 70, "Input",ExpressionUUID->"0275e454-9bde-414c-be10-85c2fe0eb318",
 CellID->789150305],
Cell[157443, 3680, 8984, 254, 70, "Output",ExpressionUUID->"8bc74b20-40d3-4508-aa98-166ef2938cac",
 CellID->1420499119]
}, Open  ]],
Cell[CellGroupData[{
Cell[166464, 3939, 385, 10, 70, "Input",ExpressionUUID->"66dafa98-c9af-4b36-85e9-10f68e7931c3",
 CellID->1446038884],
Cell[166852, 3951, 2165, 49, 70, "Output",ExpressionUUID->"192f92b2-76b3-43bb-9618-a75eaa2d5a5a",
 CellID->370604767]
}, Open  ]],
Cell[169032, 4003, 156, 4, 70, "ExampleText",ExpressionUUID->"d306d5e7-c1a1-42a2-8ec9-dc5c9d62b8a7",
 CellID->277030772],
Cell[CellGroupData[{
Cell[169213, 4011, 384, 10, 70, "Input",ExpressionUUID->"18117d62-3952-4e3b-b6e9-600263561b61",
 CellID->943646889],
Cell[169600, 4023, 2867, 60, 70, "Output",ExpressionUUID->"acbec9d2-2f10-4182-bd03-ca6442c19f44",
 CellID->701139426]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[172516, 4089, 183, 5, 70, "ExampleSubsection",ExpressionUUID->"deaa3013-5a1c-4ac4-96ce-7108f0a51755"],
Cell[172702, 4096, 119, 3, 70, "Input",ExpressionUUID->"6926cc7d-169e-4d92-8492-f53755544a29",
 CellID->685744947],
Cell[172824, 4101, 384, 7, 70, "ExampleText",ExpressionUUID->"115e1519-176c-46f7-9e23-afe68d2f0411",
 CellID->2076032778],
Cell[173211, 4110, 348, 11, 70, "Input",ExpressionUUID->"937ac148-9d1d-44e2-a538-b31aff26ac3d",
 CellID->1426395678],
Cell[173562, 4123, 89, 1, 70, "ExampleText",ExpressionUUID->"c874b547-4887-4afa-acb8-29f39ce2e117",
 CellID->1072208685],
Cell[CellGroupData[{
Cell[173676, 4128, 344, 9, 70, "Input",ExpressionUUID->"43534567-20b6-4a2f-977d-138798937188",
 CellID->1076086818],
Cell[174023, 4139, 1822, 35, 70, "Output",ExpressionUUID->"c340f9ef-ccdc-4a18-9d2d-2eb168f6d2a1",
 CellID->2067459864]
}, Open  ]],
Cell[175860, 4177, 96, 1, 70, "ExampleText",ExpressionUUID->"3b04ef5f-ae29-4adc-adaf-2d8705858fba",
 CellID->794647379],
Cell[CellGroupData[{
Cell[175981, 4182, 334, 9, 70, "Input",ExpressionUUID->"a9c68957-6cc2-4a98-9bad-e912a4f500f9",
 CellID->1512525788],
Cell[176318, 4193, 506, 11, 70, "Output",ExpressionUUID->"d3315505-40f9-4562-9993-9f94f117d153",
 CellID->704415670]
}, Open  ]],
Cell[176839, 4207, 132, 4, 70, "ExampleText",ExpressionUUID->"639b459c-4ddc-47a6-80eb-b46cd3a6556b",
 CellID->36819779]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[177020, 4217, 204, 6, 70, "ExampleSection",ExpressionUUID->"74444ced-e085-4657-83c6-4c22333efb52",
 CellID->2123667759],
Cell[177227, 4225, 567, 17, 70, "ExampleText",ExpressionUUID->"66b8872e-0223-44fa-9b73-b9bf09800886",
 CellID->6451157],
Cell[177797, 4244, 458, 11, 70, "ExampleText",ExpressionUUID->"e94ee3c2-2f32-4af6-a610-9b8c063cb517",
 CellID->1644893425]
}, Closed]],
Cell[178270, 4258, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"2597ac83-6ab3-491d-bf28-77a1d22c8ece"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178338, 4263, 150, 7, 70, "SeeAlsoSection",ExpressionUUID->"751a7b0a-3134-4086-bf37-0e15a227589b",
 CellID->1255426704],
Cell[178491, 4272, 931, 27, 70, "SeeAlso",ExpressionUUID->"503943e5-82a4-4cea-af41-8ccc8a652401",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[179459, 4304, 152, 7, 70, "TutorialsSection",ExpressionUUID->"029e325d-f954-49d4-a87a-616096761a8d",
 CellID->250839057],
Cell[179614, 4313, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"b4d6e534-f5b1-48ab-89fd-a0ce434af924"],
Cell[179648, 4315, 198, 6, 70, "Tutorials",ExpressionUUID->"f9bea1d9-570f-4edf-914e-5f9fb96acfd7",
 CellID->341631938],
Cell[179849, 4323, 224, 6, 70, "Tutorials",ExpressionUUID->"5a4bfaf2-2bcd-4496-86d0-8e73a2ca5905",
 CellID->1023267351],
Cell[180076, 4331, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"1a9bf0ee-da23-4f91-8ec3-6775a6f45591"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180144, 4336, 156, 7, 70, "MoreAboutSection",ExpressionUUID->"fc01a156-80da-4239-b896-1e840146b8a3",
 CellID->38303248],
Cell[180303, 4345, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"e697a06a-8f53-40e1-8555-ec383a367dc2"],
Cell[180337, 4347, 186, 5, 70, "MoreAbout",ExpressionUUID->"5e6d5782-af4f-4bc1-833f-e4e8f369463f",
 CellID->1936410211],
Cell[180526, 4354, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"9d5e526b-d1c8-41e0-80d0-f8eae56b019e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180594, 4359, 160, 7, 70, "RelatedLinksSection",ExpressionUUID->"796370fd-3074-4f08-b57a-40239814bc0d",
 CellID->1584193535],
Cell[180757, 4368, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"bf97b3fe-583c-49a1-9fc4-6dbc779b6912"],
Cell[180791, 4370, 191, 5, 70, "RelatedLinks",ExpressionUUID->"bcd36b55-2c97-4d85-a8ef-c5f820add108",
 CellID->1038487239],
Cell[180985, 4377, 204, 6, 70, "RelatedLinks",ExpressionUUID->"a72fcdde-8395-4255-8f1c-ba2dadb10f49",
 CellID->1970164909]
}, Open  ]],
Cell[181204, 4386, 23, 0, 70, "FooterCell",ExpressionUUID->"2156f015-3b92-440c-bf1c-6c7cf7ca9dcd"]
}
]
*)

(* End of internal cache information *)
