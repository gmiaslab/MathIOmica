(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   4064691,      83351]
NotebookOptionsPosition[   3962633,      81362]
NotebookOutlinePosition[   3966805,      81449]
CellTagsIndexPosition[   3966722,      81444]
WindowTitle->MathIOmica: Omics Analysis Tutorial
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["MATH I OMICA PACKAGE TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MathIOmica Dynamic Transcriptome\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"], \
"\<\"MathIOmica Overview\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaOverview"], "\<\"MathIOmica \
Guide\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/guide/MathIOmicaGuide"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"RelatedTutorialsSection"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Functions",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Functions", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\")\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/associationList"], "\<\"Applier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Applier"], "\<\"ApplierList\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ApplierList"], "\<\"ApplyBoxCoxTransform\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ApplyBoxCoxTransform"], "\<\"associationList \
(\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/associationList"], "\<\"Autocorrelation\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Autocorrelation"], \
"\<\"BenjaminiHochbergFDR\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/BenjaminiHochbergFDR"], "\<\"ConstantAssociator\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantAssociator"], \
"\<\"ConstantMathIOmicaExamplesDirectory\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"], \
"\<\"ConstantSeriesClean\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantSeriesClean"], "\<\"CorrelationFunction\
\"\>":>Documentation`HelpLookup[
       "paclet:ref/CorrelationFunction"], "\<\"CreateTimeSeries\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/CreateTimeSeries"], "\<\"DataImporter\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporter"], "\<\"DataImporterDirect\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporterDirect"], \
"\<\"DataImporterDirectLabeled\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporterDirectLabeled"], \
"\<\"EnlargeInnerAssociation\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnlargeInnerAssociation"], \
"\<\"EnlargeOuterAssociation\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnlargeOuterAssociation"], \
"\<\"EnrichmentReportExport\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnrichmentReportExport"], \
"\<\"FilteringFunction\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/FilteringFunction"], "\<\"FilterMissing\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/FilterMissing"], "\<\"GeneTranslation\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GeneTranslation"], "\<\"GetGeneDictionary\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GetGeneDictionary"], "\<\"GOAnalysis\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GOAnalysis"], "\<\"Interpolation\"\>":>
       Documentation`HelpLookup[
       "paclet:ref/Interpolation"], "\<\"JoinNestedAssociations\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/JoinNestedAssociations"], \
"\<\"KEGGAnalysis\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/KEGGAnalysis"], "\<\"LombScargle\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/LombScargle"], "\<\"LowValueTag\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/LowValueTag"], "\<\"MeasurementApplier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/MeasurementApplier"], "\<\"Missing\"\>":>
       Documentation`HelpLookup["paclet:ref/Missing"], "\<\"OmicsObject\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObject"], "\<\"OmicsObjectCreator\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectCreator"], \
"\<\"OmicsObjectMerge\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectMerge"], "\<\"OmicsObjectPairedMerge\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectPairedMerge"], \
"\<\"OmicsObjectUniqueMassConverter\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"], \
"\<\"QuantileEstimator\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/QuantileEstimator"], "\<\"QuantileNormalization\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/QuantileNormalization"], "\<\"Returner\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Returner"], "\<\"SeriesApplier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/SeriesApplier"], \
"\<\"SeriesInternalCompare\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/SeriesInternalCompare"], \
"\<\"TimeExtractor\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeExtractor"], \
"\<\"TimeSeriesClassification\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesClassification"], \
"\<\"TimeSeriesClusters\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesClusters"], \
"\<\"TimeSeriesDendrogramHeatmap\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"], \
"\<\"TimeSeriesDendrogramsHeatmaps\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"], \
"\<\"TimeSeriesModelFit\"\>":>Documentation`HelpLookup[
       "paclet:ref/TimeSeriesModelFit"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"TutorialFunction"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"MathIOmica/tutorial/MathIOmicaTutorial\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["MathIOmica/tutorial/MathIOmicaTutorial"]}, Visible -> 
            False]]; SelectionMove[
         DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/MathIOmica/tutorial/\
MathIOmicaTutorial.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$78444], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "MathIOmica/tutorial/MathIOmicaTutorial", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell["MathIOmica: Omics Analysis Tutorial", "Title",
 CellID->509267359],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
      Cell["Loading the MathIOmica Package"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#2133290847", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Metabolomic Data"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#779816621", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Data in MathIOmica"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#671613477", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Combined Data Clustering"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1340833355", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Transcriptome Data"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#540567276", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Visualization"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1200455778", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Proteomic Data"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1387790784", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Annotation and Enrichment"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#2035743524", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]}
  }]], "TutorialJumpBox"],

Cell["\<\
MathIOmica is an omics analysis package designed to facilitate method \
development for the analysis of multiple omics in Mathematica, particularly \
for dynamics (time series/longitudinal data). This extensive tutorial follows \
the analysis of multiple dynamic omics data (transcriptomics, proteomics, and \
metabolomics from human samples). Various MathIOmica functions are introduced \
in the tutorial, including additional discussion of related functionality. We \
should note that the approach methods are simply an illustration of \
MathIOmica functionality, and should not be considered as a definitive \
approach. Additionally, certain details are included to illustrate common \
complications (e.g. renaming samples, combining datasets, transforming \
accessions from one database to another, dealing with replicates and Missing \
data, etc.).\
\>", "Text",
 CellID->2044157074],

Cell["\<\
After a brief discussion of data in MathIOmica, each example data \
(transcriptome, proteome and metabolome) are imported and preprocessed. Next \
a simulation is carried out to obtain datasets for each omics used to assess \
statistical significance cutoffs. The datasets are combined, and classified \
for time series patterns, followed by clustering. The clusters are \
visualized, and biological annotation of Gene Ontology (GO) and pathway \
analysis (KEGG: Kyoto Encyclopedia of Genes and Genomes) are finally \
considered.\
\>", "Text",
 CellID->985017158],

Cell[TextData[{
 StyleBox["N.B.1 ",
  FontWeight->"Bold"],
 "For a more streamlined/simple example with less discussion please check out \
the tutorial on ",
 ButtonBox["MathIOmica Dynamic Transcriptome.",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"]
}], "Text",
 CellID->429607656],

Cell[TextData[{
 StyleBox["N.B.2 ",
  FontWeight->"Bold"],
 "We highly recommend the saving of intermediate results whenever possible. \
Some functions perform lengthy intensive computations and the performance may \
vary from system to system. Please use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Put"]], "paclet:ref/Put"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to save expressions to a file, and equivalently ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Get"]], "paclet:ref/Get"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to recover these expressions."
}], "Text",
 CellID->54176507],

Cell[CellGroupData[{

Cell["Loading the MathIOmica Package", "Section",
 CellID->2133290847],

Cell[TextData[{
 "The functions defined in the ",
 Cell[BoxData["MathIOmica`"], "InlineFormula"],
 " context provide support for conducting analyses of omics data (See also \
the ",
 ButtonBox["MathIOmica Overview",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/tutorial/MathIOmicaOverview"],
 ")."
}], "Text",
 CellID->1534169418],

Cell["This loads the package:", "MathCaption",
 CellID->1217948648],

Cell[BoxData[
 RowBox[{"<<", "MathIOmica`"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->262742254],

Cell["Also we can load MathIOmica as:", "MathCaption",
 CellID->1869508656],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->998742135]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data in MathIOmica", "Section",
 CellID->671613477],

Cell[TextData[{
 "In this section we will discuss the data objects in use by MathIOmica, \
particularly the format of an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 ". The data in the tutorial will be imported as an OmicsObject which is \
first described in this section. Then we present the example data included \
with MathIOmica. The example data will be imported in subsequent sections to \
illustrate analysis methods available in MathIOmica."
}], "Text",
 CellID->1313645745],

Cell[CellGroupData[{

Cell["Data Format: OmicsObject", "Subsection",
 CellID->501197291],

Cell[TextData[{
 "In MathIOmica the calculations utilize what we term an omics object (",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 "). An ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " is an association of associations with some additional characteristics. It \
has an external  (outer) association to denote samples and an internal \
(inner) association for annotation."
}], "Text",
 CellID->1179683263],

Cell[CellGroupData[{

Cell["OmicsObject Structure", "Subsubsection",
 CellID->929984066],

Cell[TextData[{
 "In an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " the outer association has ",
 Cell[BoxData["M"], "InlineFormula"],
 " outer labels as keys, corresponding to ",
 Cell[BoxData["M"], "InlineFormula"],
 " samples. Across the samples there are ",
 Cell[BoxData["N"], "InlineFormula"],
 " inner labels (e.g. identifiers for genes/proteins), and  inner labels are \
the same across samples. For a given ",
 Cell[BoxData[
  SuperscriptBox["j", "th"]], "InlineFormula"],
 " outer label, ",
 Cell[BoxData[
  SubscriptBox["OuterLabel", "j"]], "InlineFormula"],
 ", the ",
 Cell[BoxData[
  SuperscriptBox["k", "th"]], "InlineFormula"],
 " inner label, ",
 Cell[BoxData[
  SubscriptBox["InnerLabel", "k"]], "InlineFormula"],
 " has a value of : "
}], "Text",
 CellID->1165527708],

Cell[TextData[Cell[BoxData[
 RowBox[{
  SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     SubscriptBox["Measurements", "jk"], "}"}], ",", 
    RowBox[{"{", 
     SubscriptBox["Metadata", "jk"], "}"}]}], 
   "}"}]}]], "InlineFormula"]], "Text",
 CellID->1597287192],

Cell[TextData[{
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " structure:"
}], "MathCaption",
 CellID->174991658],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{
   RowBox[{
    SubscriptBox["OuterLabel", "1"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "11"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "11"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "12"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "12"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "13"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "13"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"1", "k"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"1", "k"}]], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"1", "N"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"1", "N"}]], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "2"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "21"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "21"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "22"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "22"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "23"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "23"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"2", "k"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"2", "k"}]], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"2", "N"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"2", "N"}]], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "j"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j1"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j1"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j2"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j2"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j3"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j3"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "jk"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "jk"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "jN"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "jN"], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "M"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M1"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M1"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M2"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M2"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M3"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M3"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "Mk"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "Mk"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "MN"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "MN"], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "\[IndentingNewLine]", "|>"}]], "InlineFormula"]], "Text",
 CellID->1192006303],

Cell[TextData[{
 "For any ",
 Cell[BoxData[
  SuperscriptBox["j", "th"]], "InlineFormula"],
 " outer label, ",
 Cell[BoxData[
  SubscriptBox["OuterLabel", "j"]], "InlineFormula"],
 ", it is possible that the ",
 Cell[BoxData[
  SuperscriptBox["m", "th"]], "InlineFormula"],
 " inner label, ",
 Cell[BoxData[
  SubscriptBox["InnerLabel", "m"]], "InlineFormula"],
 " is missing and takes a Missing[] value in the form ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["InnerLabel", "m"], "\[Rule]", " ", 
   RowBox[{"Missing", "[", "]"}]}]], "InlineFormula"],
 ". This can happen if the measurement was not performed for the sample, or \
no value was recorded (e.g. mass spectrometry data)."
}], "Text",
 CellID->2001356434],

Cell["\<\
For example here is a list of 3 samples using protein identifiers \
(specifically, these are UniProt accessions). The measurements are relative \
intensities in this case and the metadata is the number of peptides per \
sample.\
\>", "MathCaption",
 CellID->299944951],

Cell[BoxData[
 RowBox[{
  RowBox[{"omicsObjectExample", "=", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<FirstSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.937", "}"}], ",", 
           RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.059", "}"}], ",", 
           RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.03", "}"}], ",", 
           RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.268", "}"}], ",", 
           RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"\"\<SecondSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.003", "}"}], ",", 
           RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.779", "}"}], ",", 
           RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.917", "}"}], ",", 
           RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.921", "}"}], ",", 
           RowBox[{"{", "24", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], 
     ",", 
     RowBox[{"\"\<ThirdSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.064", "}"}], ",", 
           RowBox[{"{", "19", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.545", "}"}], ",", 
           RowBox[{"{", "5", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.87", "}"}], ",", 
           RowBox[{"{", "23", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}]}],
     "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[67]:=",
 CellID->1030671948],

Cell[TextData[{
 "The outer labels of an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " are strings, while the inner labels are typically lists of strings. "
}], "Text",
 CellID->1097212187]
}, Open  ]],

Cell[CellGroupData[{

Cell["Methods to Import Data as an OmicsObject", "Subsubsection",
 CellID->1010514183],

Cell[TextData[{
 "There are multiple methods to import data as an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " using MathIOmica. Four functions assist with importing data directly from \
text files:"
}], "Text",
 CellID->1276400541],

Cell[TextData[{
 "(i) ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporter"]], "paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provides a graphical dynamic interface that utilizes file headers to \
assist with the creation of OmicsObject variables from multiple files."
}], "Text",
 CellID->200159297],

Cell[TextData[{
 "(ii) The ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObjectCreator"]], 
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function provides a function to create an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " from already existing/imported data in a Mathematica notebook."
}], "Text",
 CellID->471195666],

Cell[TextData[{
 "(iii) ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirect"]], 
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and (iv) ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirectLabeled"]], 
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provide additional expert mode functions that may be used to directly \
import data as ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " variables without a graphical interface. "
}], "Text",
 CellID->1897113300],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     RowBox[{
      ButtonBox["DataImporter",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/DataImporter"], "[", 
      StyleBox["associationName", "TI"], "]"}], " "}], Cell[TextData[{
     "provides a graphical interface to extract data and create an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " variable ",
     StyleBox["associationName", "TI"],
     " for associations of information."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectCreator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectCreator"], "[", 
     RowBox[{
      StyleBox["outerLabels", "TI"], ",", " ", 
      StyleBox["innerLabels", "TI"], ",", " ", 
      StyleBox["measurements", "TI"], 
      StyleBox[",", "TI"], 
      StyleBox["metadata", "TI"]}], "]"}], Cell[TextData[{
     "creates an ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["OmicsObject"]], "paclet:MathIOmica/ref/OmicsObject"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " for use with MathIOmica. It uses the following inputs:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["outerLabels", "TI"], Cell[
         "Outer labels (keys) for the OmicsObject.", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["innerLabels", "TI"], Cell[
         "Inner labels (keys) for identifiers in the OmicsObject.", 
          "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["measurements", "TI"], Cell[
         "List of measurements for each inner label.", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["metadata", "TI"], Cell[
         "List of metadata for each label.", "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{
       "Columns" -> {{None}}, "Rows" -> {None, None, None, {None}}},
      GridBoxDividers->{"Rows" -> {{True, True, True, True, True}}}}]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["DataImporterDirect",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/DataImporterDirect"], "[", 
     RowBox[{
      StyleBox["positionsList", "TI"], ",", " ", 
      StyleBox["fileList", "TI"], ",", " ", 
      StyleBox["headerLines", "TI"]}], "]"}], Cell[TextData[{
     StyleBox["Expert Usage:",
      FontSlant->"Italic"],
     " The ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["DataImporterDirect"]], 
        "paclet:MathIOmica/ref/DataImporterDirect"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function is a helper function originally created for ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["DataImporter"]], "paclet:MathIOmica/ref/DataImporter"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". ",
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["DataImporterDirect"]], 
         "paclet:MathIOmica/ref/DataImporterDirect"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{
        StyleBox["positionsList", "TI"], ",", " ", 
        StyleBox["fileList", "TI"], ",", " ", 
        StyleBox["headerLines", "TI"]}], "]"}]], "InlineFormula"],
     " creates an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " importing the column number in ",
     Cell[BoxData[
      StyleBox["positionsList", "TI"]], "InlineFormula"],
     "  from the ",
     Cell[BoxData[
      StyleBox["fileList", "TI"]], "InlineFormula"],
     " file path list, and importing data by skipping a number of ",
     Cell[BoxData[
      StyleBox["headerLines", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["DataImporterDirectLabeled",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/DataImporterDirectLabeled"], "[", 
     RowBox[{
      StyleBox["sampleRules", "TI"], ",", " ", 
      StyleBox["fileList", "TI"], ",", " ", 
      StyleBox["headerLines", "TI"], ",", " ", 
      StyleBox["headerColumnAssociations", "TI"]}], "]"}], Cell[TextData[{
     StyleBox["Expert Usage:",
      FontSlant->"Italic"],
     " The ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["DataImporterDirectLabeled"]], 
        "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function creates an ",
     Cell[BoxData["OmicsObject"], "InlineFormula"],
     " association for ",
     Cell[BoxData[
      StyleBox["variableName", "TI"]], "InlineFormula"],
     ", by imporing data from the files at the paths specified in the ",
     Cell[BoxData[
      StyleBox["fileList", "TI"]], "InlineFormula"],
     ", using the ",
     Cell[BoxData[
      StyleBox["sampleRules", "TI"]], "InlineFormula"],
     " as a label to column header imported rule for each file, and the ",
     Cell[BoxData[
      StyleBox["headerColumnAssociations", "TI"]], "InlineFormula"],
     " list of associations to associate column headers to column positions \
for each file."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->953451491],

Cell[TextData[{
 "Functions for importing/creating ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " datasets."
}], "Caption",
 CellID->7357]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with OmicsObject Data", "Subsubsection",
 CellID->1310432575],

Cell[TextData[{
 "An ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " is an association of associations, and so ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " can be used directly to access and manipulate components. MathIOmica also \
offers multiple functions that can implement computations and manipulation of \
an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 ":"
}], "Text",
 CellID->1202669251],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["Applier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/Applier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", " ", 
      StyleBox["inputData", "TI"]}], "]"}], Cell[TextData[{
     "applies ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to OmicsObject, association or list ",
     Cell[BoxData[
      StyleBox["inputData", "TI"]], "InlineFormula"],
     " components."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["ApplierList",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ApplierList"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", " ", 
      StyleBox["inputData", "TI"]}], "]"}], Cell[TextData[{
     "applies ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to list of lists from an association, nested association or components \
or a matrix ",
     Cell[BoxData[
      StyleBox["inputData", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["ConstantAssociator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantAssociator"], "[", 
     RowBox[{
      StyleBox["inputAssociation", "TI"], ",", " ", 
      StyleBox["associationAddition", "TI"]}], "]"}], Cell[TextData[{
     "adds multi key constant to an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " (or an association of associations) ",
     Cell[BoxData[
      StyleBox["inputAssociation", "TI"]], "InlineFormula"],
     ", with each addition specified in a single association ",
     Cell[BoxData[
      StyleBox["associationAddition", "TI"]], "InlineFormula"],
     ", of form <|addition1\[Rule] Value1,addition2\[Rule] Value2,...|>."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["CreateTimeSeries",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/CreateTimeSeries"], "[", 
     StyleBox["dataIn", "TI"], "]"}], Cell[TextData[{
     "creates a time series list across an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " ",
     Cell[BoxData[
      StyleBox["dataIn", "TI"]], "InlineFormula"],
     " using outer Keys for points."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["EnlargeInnerAssociation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnlargeInnerAssociation"], "[", 
     StyleBox["omicsObjectList", "TI"], "]"}], Cell[TextData[{
     "combines a list of OmicsObject (associations of associations)  ",
     Cell[BoxData[
      StyleBox["omicsObjectList", "TI"]], "InlineFormula"],
     " elements  by enlarging the inner associations - inner association Keys \
must be different."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["EnlargeOuterAssociation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnlargeOuterAssociation"], "[", 
     StyleBox["omicsObjectList", "TI"], "]"}], Cell[TextData[{
     "combines a list, ",
     Cell[BoxData[
      StyleBox["omicsObjectList", "TI"]], "InlineFormula"],
     ", of OmicsObject (or associations of associations) elements to a \
combined output by enlarging the outer associations - outer association keys \
must be different."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["FilteringFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilteringFunction"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", 
      StyleBox["cutoff", "TI"]}], "]"}], Cell[TextData[{
     "filters an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " data by a chosen ",
     Cell[BoxData[
      StyleBox["comparison", "Text"]], "InlineFormula",
      ShowStringCharacters->False],
     " (by default greatr or equal) to a ",
     Cell[BoxData[
      StyleBox["cutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["FilterMissing",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilterMissing"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["percentage", "TI"]}], "]"}], Cell[TextData[{
     "filters out data from ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " if across the datasets a ",
     Cell[BoxData[
      StyleBox["percentage", "TI"]], "InlineFormula"],
     " of data points is missing."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["LowValueTag",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/LowValueTag"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["valueCutoff", "TI"]}], "]"}], Cell[TextData[{
     "takes an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " and tags values in specified position as ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Missing"]], "paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "[] based on provided ",
     Cell[BoxData[
      StyleBox["valueCutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["MeasurementApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/MeasurementApplier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", 
      StyleBox["omicsObject", "TI"]}], "]"}], Cell[TextData[{
     "applies a ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to the measurement list of an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", ignoring missing values."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectMerge",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectMerge"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["2", "TR"]], ",", " ", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
      StyleBox["f", "TI"]}], "]"}], Cell[TextData[{
     "merges a list of ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " components ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["2", "TR"]], ",", " ", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]]],
     ", using the function ",
     StyleBox["f", "TI"],
     " to combine values with the same inner and outer keys."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectPairedMerge",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectPairedMerge"], "[", 
     RowBox[{
      SubscriptBox[
       StyleBox["omicsObject", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["omicsObject", "TI"], 
       StyleBox["2", "TR"]]}], "]"}], Cell[TextData[{
     "merges pairwise ",
     Cell[BoxData[
      StyleBox["omicsObject1", "TI"]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      StyleBox["omicsObject2", "TI"]], "InlineFormula"],
     " values that have the same inner and outer keys."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["Returner",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/Returner"], "[", 
     RowBox[{
      StyleBox["originalAssociation", "TI"], ",", " ", 
      StyleBox["update", "TI"]}], "]"}], Cell[TextData[{
     "returns a modified ",
     Cell[BoxData[
      StyleBox["originalAssociation", "TI"]], "InlineFormula"],
     " updated at a specified position by the single association ",
     Cell[BoxData[
      StyleBox["update", "TI"]], "InlineFormula"],
     ", e.g. from ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Applier"]], "paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ApplierList"]], "paclet:MathIOmica/ref/ApplierList"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " result."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->438464085],

Cell[TextData[{
 "Functions for manipulating ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " datasets."
}], "Caption",
 CellID->1249483738]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example Data ", "Subsection",
 CellID->490101258],

Cell[TextData[{
 "MathIOmica comes with multiple example data. The data can be found in the \
",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]], 
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->249980817],

Cell["\<\
We can get a listing of the current example Data by evaluating:\
\>", "MathCaption",
 CellID->2139419895],

Cell[BoxData[
 RowBox[{"FileNames", "[", 
  RowBox[{"__", ",", "ConstantMathIOmicaExamplesDirectory"}], "]"}]], "Input",\

 CellLabel->"In[3]:=",
 CellID->1911473544],

Cell[TextData[{
 "The data contains both initial (raw) data and additionally intermediate \
data that have been analyzed in MathIOmica and are used in the examples (",
 StyleBox["N.B.",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" these files should ",
  FontSlant->"Italic"],
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" be altered or removed",
  FontSlant->"Italic"],
 "). The dynamic raw datasets are from an integrative Personal Omics Profile \
as described below:"
}], "Text",
 CellID->1570546560],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"i", 
         StyleBox[
          StyleBox["n", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "tegrativ", 
         StyleBox[
          StyleBox[
           StyleBox["e", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"P", 
         StyleBox[
          StyleBox["e", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "rsona", 
         StyleBox[
          StyleBox[
           StyleBox["l", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"O", 
         StyleBox[
          StyleBox["m", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "ic", 
         StyleBox[
          StyleBox[
           StyleBox["s", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"P", 
         StyleBox["r", "TR",
          FontWeight->"Bold"], "of", 
         StyleBox["i", "TR",
          FontWeight->"Bold"], "li", 
         StyleBox["n", "TR",
          FontWeight->"Bold"], 
         StyleBox[
          StyleBox["g", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       RowBox[{
        StyleBox[
         StyleBox[
          StyleBox["(", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"], 
        StyleBox[
         RowBox[{
          StyleBox[
           StyleBox["i", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "PO", 
          StyleBox[
           StyleBox["P", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"]}]], 
        StyleBox[
         StyleBox[
          StyleBox[")", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"]}]}], "\n"}], "TR",
     FontWeight->"Bold"], Cell[TextData[{
     "Data from the first integrative Omics Profiling (iPOP) is used \
comprised of dynamics from proteomics transcriptomics and metabolomics. The \
data corresponds to a time series analysis of omics from blood componenets \
from a single individual.\nDifferent samples (from 7 to 21 included here) \
were obtained at different time points. The time points included here \
correspond to days ranging from 186th to the 400th day of the study, (this \
can be represented in the following sample to day association: ",
     StyleBox[
     "\[LeftAssociation]7\[Rule]186,8\[Rule]255,9\[Rule]289,10\[Rule]290,11\
\[Rule]292,12\[Rule]294,13\[Rule]297,14\[Rule]301,15\[Rule]307,16\[Rule]311,\
17\[Rule]322,18\[Rule]329,19\[Rule]369,20\[Rule]380,21\[Rule]400\
\[RightAssociation]", "InlineCode"],
     ". On day 289 the subject of the study had a Respiratory syncytial virus \
infection. Additionally, after day 301, the subject displayed high glucose \
levels and was eventually diagnosed with type 2 diabetes. The analyzed mapped \
data are used in these examples for illustrative purposes - these and \
additional dynamic omics data that will become available can also be accessed \
MathIOmica website at https://mathiomica.org. More information regarding the \
iPOP dataset can also be found in the original iPOP paper: ",
     Cell[BoxData[{
      StyleBox[
       RowBox[{
        SuperscriptBox["Chen", "*"], ",", 
        SuperscriptBox["Mias", "*"], ",", 
        RowBox[{"Li", "-", "Pook", "-", 
         SuperscriptBox["Than", "*"]}], ",", 
        RowBox[{
         SuperscriptBox["Jiang", "*"], " ", "et", " ", 
         RowBox[{"al", "."}]}], ",", 
        RowBox[{
         StyleBox["Personal",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Omics",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Profiling",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Reveals",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Dynamic",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Molecular",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["and",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Medical",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox["Phenotypes",
           FontSlant->"Italic"], 
          StyleBox[".",
           FontSlant->"Italic"], 
          StyleBox["  ",
           FontSlant->"Italic"], "Cell"}], " ", "148", 
         RowBox[{"(", "6", ")"}]}], ",", 
        RowBox[{"p1293", " ", 
         RowBox[{"(", "2012", ")"}]}], ",", 
        RowBox[{"PMID", ":", "22424236."}]}], "TR"], "\n", 
      StyleBox[
       RowBox[{
        RowBox[{"http", ":"}], "//", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"dx", ".", "doi", ".", "org"}], "/", "10.1016"}], "/", 
          RowBox[{"j", ".", "cell"}]}], ".2012", ".02", 
         RowBox[{".009", "."}]}]}], "TR"]}], "InlineFormula"],
     "\nand related review (including summary):\n",
     Cell[BoxData[
      RowBox[{
       RowBox[{
        StyleBox["Mias", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["and", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["Snyder", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["Personal", "TR",
         FontSlant->"Italic"], 
        StyleBox[" ", "TR"], 
        StyleBox["Genomes", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Quantitative", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Dynamic", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Omics", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["and", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Personalized", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox[
         RowBox[{"Medicine", ".", "  ", "\n", 
          StyleBox["Quantitative",
           FontSlant->"Plain"]}], "TI"], 
        StyleBox[" ", "TR"], 
        StyleBox["Biology", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["1", "TR"], 
        StyleBox[
         RowBox[{"(", "1", ")"}], "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox[
         RowBox[{"(", "2013", ")"}], "TR"]}], 
       StyleBox[",", "TR"], 
       StyleBox[" ", "TR"], 
       StyleBox[
        RowBox[{
         RowBox[{"PMCID", ":", 
          RowBox[{"PMC4366006", ".", "\n", 
           RowBox[{"http", ":"}]}]}], "//", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dx", ".", "doi", ".", "org"}], "/", "10.1007"}], "/", 
           "s40484"}], "-", "013", "-", "0005", "-", "3."}]}], "TR"]}]], 
      "InlineFormula"]
    }], "TableText"]},
   {
    StyleBox[
     RowBox[{"Example", " ", 
      StyleBox[
       RowBox[{"i", 
        StyleBox["P", "TI",
         FontWeight->"Bold"], "OP"}]], 
      StyleBox[" ", "TR",
       FontWeight->"Bold"], 
      StyleBox[
       RowBox[{
        StyleBox[
         StyleBox["S", "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"], "et"}]], " ", "Description"}], "TI",
     FontWeight->"Bold"], Cell[TextData[{
     StyleBox["File Names located in the ", "TI",
      FontWeight->"Bold"],
     StyleBox[ButtonBox["ConstantMathIOmicaExamplesDirectory",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"],
      FontWeight->"Bold",
      FontSlant->"Italic"],
     StyleBox[".", "TI",
      FontWeight->"Bold"]
    }], "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox[
      RowBox[{"Transcriptome", "."}],
      FontWeight->"Bold"], " ", "The", " ", "transcriptomic", " ", "data", 
     " ", "included", " ", "was", " ", "obtained", " ", "from", " ", 
     "mapping", " ", "of", " ", "the", "  ", "originally", " ", "RNA", " ", 
     "Sequencing", " ", "raw", " ", "data", " ", "using", " ", "the", " ", 
     "Tuxedo", " ", 
     RowBox[{"suite", ".", " ", "The"}], " ", "data", " ", "corresponds", " ",
      "to", " ", "transcriptome", " ", "from", " ", "peripheral", " ", 
     "blood", " ", "mononuclear", " ", "cells", " ", 
     RowBox[{
      RowBox[{"(", "PBMCs", ")"}], "."}]}], Cell["\<\
iPOP_ 07_genes.fpkm_tracking
iPOP_ 08_genes.fpkm_tracking
iPOP_ 09_genes.fpkm_tracking
iPOP_ 10_genes.fpkm_tracking
iPOP_ 11_genes.fpkm_tracking
iPOP_ 12_genes.fpkm_tracking
iPOP_ 13_genes.fpkm_tracking
iPOP_ 14_genes.fpkm_tracking
iPOP_ 15_genes.fpkm_tracking
iPOP_ 16_genes.fpkm_tracking
iPOP_ 17_genes.fpkm_tracking
iPOP_ 18_genes.fpkm_tracking
iPOP_ 19_genes.fpkm_tracking
iPOP_ 20_genes.fpkm_tracking
iPOP_ 21_genes.fpkm_tracking\
\>", "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox["Proteome",
       FontWeight->"Bold"], 
      StyleBox[".",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], "The"}], " ", "Proteomics", " ", "data", " ", 
     "from", " ", "analysis", " ", "of", " ", "mass", " ", "spectrometry", 
     " ", "data", " ", "using", " ", "the", " ", "Sequest", " ", "algorithm", 
     " ", "implemented", " ", "by", " ", 
     RowBox[{"ProteomeDiscoverer", ".", " ", "The"}], " ", "data", " ", 
     "corresponds", " ", "to", " ", "proteome", " ", "from", " ", 
     RowBox[{"PBMCs", ".", "\n", "The"}], " ", "names", " ", "of", " ", "the",
      " ", "files", " ", "provide", " ", "a", " ", "correspondence", " ", 
     "of", " ", "samples", " ", "to", " ", "Tandem", " ", "Mass", " ", "Tag", 
     " ", "labels", " ", "in", " ", "order", " ", "of", " ", "increasing", 
     " ", 
     RowBox[{"m", "/", "z"}], " ", "values", "  ", "from", " ", "126", " ", 
     "to", " ", "131", " ", 
     RowBox[{"amu", ".", " ", "6"}], " ", "TMT", " ", "labels", " ", "were", 
     " ", "used", " ", "in", " ", "each", " ", 
     RowBox[{"experiment", ".", "\n", "The"}], " ", "data", " ", "has", " ", 
     "been", " ", "adapted", " ", "from", " ", "the", " ", "original", " ", 
     "to", " ", "UniProt", " ", 
     RowBox[{"accessions", "."}]}], Cell["\<\
8_7_9_10_11_14_MulticonsensusReports_3Replicates.csv
8_12_13_15_16_14_MulticonsensusReports_3Replicates.csv
8_17_19_20_21_14_MulticonsensusReports_3Replicates.csv\
\>", "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox["Metabolome",
       FontWeight->"Bold"], 
      StyleBox[".",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], "The"}], " ", "Metabolomics", " ", "data", " ", 
     "from", " ", "analysis", " ", "of", " ", "mass", " ", "spectrometry", 
     " ", 
     RowBox[{"data", ".", " ", "The"}], " ", "data", " ", "corresponds", " ", 
     "to", " ", "small", " ", "molecule", " ", "metabolomics", " ", "from", 
     " ", "plasma", " ", "ran", " ", "with", " ", "technical", " ", 
     RowBox[{"triplicates", ".", "\n", "The"}], " ", "names", " ", "of", " ", 
     "the", " ", "files", " ", "provide", " ", "a", " ", "correspondence", 
     " ", "of", " ", "samples", " ", "ran", " ", "in", " ", "positive", " ", 
     "or", " ", "negative", " ", 
     RowBox[{"mode", "."}]}], Cell["\<\
metabolomics_negative_mode.csv
metabolomics_positive_mode.csv\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1722327182],

Cell[TextData[{
 "Description of Example iPOP original datasets and corresponding files in \
the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]], 
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". ",
 StyleBox["N.B.",
  FontWeight->"Bold"],
 " this table is provided as a reference for the examples, and these files \
should ",
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be altered or removed."
}], "Caption",
 CellID->231225297],

Cell["\<\
Various analyzed datasets are used in the MathIOmica documentation for \
examples:\
\>", "Text",
 CellID->1540904390],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{"Data", 
      StyleBox[
       RowBox[{" ", 
        StyleBox[" ", "TI",
         FontWeight->"Bold"]}]], "Description"}], "TI",
     FontWeight->"Bold"], Cell[TextData[{
     StyleBox["File Name(s) ", "TI",
      FontWeight->"Bold"],
     StyleBox["located in the ", "TI",
      FontWeight->"Bold"],
     StyleBox[Cell[BoxData[
      RowBox[{" ", 
       ButtonBox["ConstantMathIOmicaExamplesDirectory",
        BaseStyle->"Link",
        ButtonData->
         "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"]}]], "TI",
      FontWeight->"Bold"], "TI"],
     StyleBox[".", "TI",
      FontWeight->"Bold"]
    }], "TableText"]},
   {
    RowBox[{
    "iPOP", " ", "transcriptome", " ", "imported", " ", "as", " ", "an", " ", 
     "OmicsObject", " ", "across", " ", "all", " ", 
     RowBox[{"timepoints", 
      StyleBox[".",
       FontWeight->"Bold"]}]}], "rnaExample"},
   {
    RowBox[{
    "iPOP", " ", "proteome", " ", "data", " ", "imported", " ", "as", " ", 
     "an", " ", "OmicsObject", " ", "across", " ", "all", " ", 
     RowBox[{"timepoints", "."}]}], Cell["proteinExample", "TableText"]},
   {
    RowBox[{
    "iPOP", " ", "metabolome", " ", "data", " ", "imported", " ", "as", " ", 
     "an", " ", "OmicsObject", " ", "across", " ", "all", " ", "timepoints", 
     " ", "and", " ", "technical", " ", "replicates", " ", "for", " ", 
     "negative", " ", "and", " ", "positive", " ", "mode", " ", "aligned", 
     " ", "mass", " ", "spectrometry", " ", 
     RowBox[{"features", "."}]}], Cell["\<\
metabolomicsNegativeModeExample
metabolomicsPositiveModeExample\
\>", "TableText"]},
   {
    RowBox[{"Example", " ", "time", " ", "series", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinTimeSeriesExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "classification", " ", "results", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinClassificationExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "classification", " ", "results", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinClusteringExample", "TableText"]},
   {
    RowBox[{
     RowBox[{
     "Example", " ", "combined", " ", "clustering", " ", "results", " ", 
      "from", " ", "transcriptome"}], ",", " ", 
     RowBox[{"proteome", " ", "and", " ", "metabolome", " ", 
      RowBox[{"data", "."}]}]}], Cell["combinedClustersExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "enrichment", " ", "analysis", " ", "results", " ", "for",
      " ", "Gene", " ", "Ontology", " ", "and", " ", "KEGG", " ", "pathway", 
     " ", "analysis", " ", "for", " ", "combined", " ", "omics", " ", "data", 
     " ", "in", " ", "this", " ", 
     RowBox[{"tutorial", "."}]}], Cell["\<\
combinedGOAnalysis
combinedKEGGAnalysis\
\>", "TableText"]},
   {
    RowBox[{
    "Spectra", " ", "from", " ", "proteomics", " ", "mass", " ", 
     "spectrometry", " ", "data", " ", 
     RowBox[{"examples", "."}]}], Cell["\<\
small.pwiz.1.1.mzML
exampleMS3.mzXML\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->312091046],

Cell[TextData[{
 "Description of example analyzed datasets and corresponding files in the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]], 
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". ",
 StyleBox["N.B.",
  FontWeight->"Bold"],
 " this table is provided as a reference for the examples, and these files \
should ",
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be altered or removed."
}], "Caption",
 CellID->1159144148]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transcriptome Data", "Section",
 CellID->540567276],

Cell["\<\
In this section we import the example transcriptome iPOP dataset, and \
illustrate a preprocessing approach for this omic dataset.\
\>", "Text",
 CellID->1827655092],

Cell[CellGroupData[{

Cell["Importing OmicsObject Transcriptome Data", "Subsection",
 CellID->257268298],

Cell[TextData[{
 "We first import the transcriptomics data example (for details on how to \
import such data please refer to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporter"]], "paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirect"]], 
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirectLabeled"]], 
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObjectCreator"]], 
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->1539574452],

Cell[TextData[{
 "We import the transcriptomics ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"]
}], "MathCaption",
 CellID->787376419],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", "\"\<rnaExample\>\""}], 
     "}"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[68]:=",
 CellID->641241319],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.73998`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 68, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 68, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 68, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[68], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[68]=",
 CellID->76837286]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->546537213],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[69]:=",
 CellID->863380672],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", 
   ",", "\<\"11\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>",
    ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", 
   ",", "\<\"18\"\>", ",", "\<\"19\"\>", ",", "\<\"20\"\>", 
   ",", "\<\"21\"\>"}], "}"}]], "Output",
 CellLabel->"Out[69]=",
 CellID->1272316944]
}, Open  ]],

Cell["\<\
Notice that we have used \"@\" to form a Query using a prefix function \
application, which is used throughout the MathIOmica tutorials and \
documentation. This is the same as using the [ ] form:\
\>", "Text",
 CellID->1566749700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "[", "rnaExample", "]"}]], "Input",
 CellLabel->"In[70]:=",
 CellID->908486935],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", 
   ",", "\<\"11\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>",
    ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", 
   ",", "\<\"18\"\>", ",", "\<\"19\"\>", ",", "\<\"20\"\>", 
   ",", "\<\"21\"\>"}], "}"}]], "Output",
 CellLabel->"Out[70]=",
 CellID->535902783]
}, Open  ]],

Cell[TextData[{
 "We can get the expression raw data from any sample and entry. For example, \
the ",
 Cell[BoxData[
  SuperscriptBox["10", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["14", "th"]], "InlineFormula"],
 " entries in sample 12:"
}], "MathCaption",
 CellID->392276805],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<12\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"7777", ",", "55"}], "}"}]}], "]"}], "@", 
  "rnaExample"}]], "Input",
 CellLabel->"In[71]:=",
 CellID->221465345],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "21.1197`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0.560212`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[71]=",
 CellID->29914394]
}, Open  ]],

Cell[TextData[{
 "The keys correspond to \"Gene Symbols\" and are also tagged with an \"RNA\" \
label. The values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<FPKM\>\"", " ", "values"}], "}"}], ",", 
    RowBox[{"{", "\"\<FPKM status\>\"", "}"}]}], "}"}]], "InlineFormula"],
 ". Here, FPKM stands for Fragments Per Kilobase of transcript per Million \
mapped reads. The example is from mapped RNA-Sequencing data. FPKM is then a \
relative measure of transcript (gene) expression."
}], "Text",
 CellID->464982744],

Cell["\<\
We can query all timepoints for a particular gene of interest if it exists. \
We must use the same labels as the actual keys of the OmicsObject:\
\>", "MathCaption",
 CellID->1833142640],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{"Key", "@", 
     RowBox[{"{", 
      RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}]}]}], "]"}], "@", 
  "rnaExample"}]], "Input",
 CellLabel->"In[72]:=",
 CellID->1827950618],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "12.7644`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "14.9997`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "15.8482`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.3504`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "18.5309`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.7081`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "14.6549`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.3951`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "8.93065`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.2545`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.9217`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.0331`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "18.7293`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "10.8115`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "12.9051`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[72]=",
 CellID->679977437]
}, Open  ]],

Cell["\<\
We note that we added Key@ before the bracket to indicate that this list is \
used as a key for the inner associations.\
\>", "Text",
 CellID->1488223786],

Cell["\<\
We can query all timepoints for multiple genes of interest if it exists. We \
must use the same labels as the actual keys of the OmicsObject:\
\>", "MathCaption",
 CellID->1609229737],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Key", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}]}], ",", 
      RowBox[{"Key", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<NDNL2\>\"", ",", "\"\<RNA\>\""}], "}"}]}]}], "}"}]}], 
   "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[73]:=",
 CellID->915139441],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.7644`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "13.6201`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.9997`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.3813`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "15.8482`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2763`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3504`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.2483`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.5309`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.3254`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.7081`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.1197`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.6549`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.0412`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3951`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.1224`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "8.93065`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.4774`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2545`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "23.6771`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.9217`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.8782`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.0331`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.4414`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.7293`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "19.9134`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.8115`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.5756`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.9051`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.55`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[73]=",
 CellID->794006111]
}, Open  ]],

Cell["Or in a more concise form", "MathCaption",
 CellID->1516242184],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<NDNL2\>\"", ",", "\"\<RNA\>\""}], "}"}]}], "}"}]}]}], 
   "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[74]:=",
 CellID->1441431186],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.7644`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "13.6201`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.9997`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.3813`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "15.8482`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2763`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3504`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.2483`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.5309`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.3254`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.7081`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.1197`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.6549`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.0412`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3951`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.1224`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "8.93065`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.4774`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2545`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "23.6771`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.9217`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.8782`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.0331`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.4414`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.7293`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "19.9134`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.8115`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.5756`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.9051`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.55`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[74]=",
 CellID->702184882]
}, Open  ]],

Cell["\<\
We should also note that  we can take advantage of Mathematica's native \
direct access to Wolfram Alpha,  to look up any \"Gene Symbol\" information \
by evaluating (needs a network connection):\
\>", "MathCaption",
 CellID->1478232418],

Cell["NFKBIB", "WolframAlphaLong",
 CellLabel->"In[75]:=",
 CellID->413937183],

Cell["Here is an image of the output:", "Text",
 CellID->90413432],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd0FNXbxkE/qigKiICAgFhQBAWUZkVAsaAI+kdFRaVXaYL0TkKvkRII
EEIooYQOgRB6Db2ZLCUkIZ10ks0mme+ZvXEcdnY3m56wz+/k5Ny5c+f2ue/z
zszO1P5t4Dc9HitWrNiQ0vj3za/DPxo8+Ne/Oj6NjW8HDOndc0D3bu0GDO3e
s/vgZr89jshmpYoV24j0clgihBBCiH2TlpYWFRV19+5dnU73DyGEEEKKPrDp
sOyw77DyZq1/XFwc0gQHByNNfHx8YmLiA0IIIYQUZWDNYdNh2YOCgmDlY2Nj
Tax/dHQ0REJMTExB15QQQggheQKsvL+/P8SAie8PhVDQVSOEEEJIHgJbL/x9
cd8f1p++PyGEEGIPiOsAqampUVFRwcHBBV0dQgghhOQTQUFB4eHh4snAgq4L
IYQQQvIJ2P07d+7w7j8hhBBiV8Du+/v7//PPP1Z+8RcbGxsYGCiSEUIIIaTw
A6sN2w0Lbsm4w+6LlFasP/aGhIRAKuj1egMhhBBCCjcpKSmw4GFhYX5+flY0
gBUBgKNwbFRUVGpqat69e5AQQggheUFMTAxMvCUNYEUABAYGhoaGpqenF3QL
CCGEEJIdIiIiYM2zKgD8/f2Tk5MLuu6EEEIIySYpKSk6nS6rAgDxdP8JIYSQ
ogvsOKx5UlJSVgVAQVecEEIIITkC1lyv11MAEEIIIXYFrLn4XQAFACGEEGI/
UAAQQgghdggFACGEEGKHUAAQQgghdggFACGEEGKHUAAQQgghdggFACGEEGKH
UAAQQgghdggFACGEEGKHUAAQQgghdggFALFCWlqat7c3Br2gK0IIISSXyTcB
oNfr/f39c73+4O+//75z505WjwoPD0dbgoODDQYD6qbT6ZRd0dHRoaGhCPj5
+V37l8jISCS7efOmSJOUlIRI2MegoCCRAEcpOeDA1NRUxIhdSKMuOiAgID4+
/vbt2wkJCUokOsfZ2Tmrrchr0Irt27ejtmb3okNu3bqlbEZFRaFX86tqeUDY
ZenYTCv783qMMFV2796dd/kTQoiafBMAK1euLFGiRGBgYK43YcaMGTdu3Mjq
UW3atIHxatCgAVp09erV4sWLK2svFEW/fv0QePbZZ7t27drLCPYi2euvv474
xMTEjz76aOTIkQh/++23bdu27dOnz9dG0JniwIiIiEWLFtWvXx+7fvjhh5Yt
W8Lii/xffPFFKIQqVarcu3dPqc+lS5fmzp2b077IbawLgMuXL7/xxhvK5vTp
0//888/8qlp2ifSTNv1oftc9X+moo5VDbR+jrVu3Ll26NKtVW7t2bbdu3bJ6
FCGEZI98EwAwuOPGjZs2bZrY3Ldv3zvvvFOnTh1YDWzChf/ss8+qVavWpUsX
GJ1du3b1799fpGzRokVYWNihQ4e++eabN998s0aNGlgn33333erVqy9ZsgQJ
OnTocPHiRSTo2LHj22+//cILL8DyimOHDh1asWLFpk2b/vrrr5s3b1YqA8cf
+Vy/fh0GGpuw7KhJs2bNUJD0sACAHVeOEgJAWH8HBwcRCQGwceNGyWgrUZaw
8ooA6Nu3r0j21Vdfubi4IBATE9OwYUMUDdmg7p9jx4799NNPCMyZM+fll19G
S02cQeTfo0ePqlWrfvjhh2fPnjXpXm1Lp0yZ8txzz9WuXXvbtm3YRM/DuGCz
UaNGBw8eRIxOp0Pfli9fvlOnTmiU2VHLngAwaYKlgrQtMpkVqnqkSFt/k2ZU
kVa8LwWefGjXzf3Sum+klR9JjhUlz9+ltFQ5BskWvS5t6y7p46UN30kOFaRF
9aU7h6WUB3J4wuPS7BrysTc8pXl1JcdK0n5Zy0m3faSN/5MDrp9IW7pKM56T
1rSTom+bjBHOF+hGiLrKlSuj/unp6SZNPnz48JNPPlm2bFkxoCYDgbnXrl07
HIuZI64aeXh4YDYiwe+//04BQAjJN/JHAAQEBMBowiYq9gKWF0slFsCff/45
ISEBBnfEiBGoyV9//eXr67tp0yaxeIKXXnoJayZMA1ZUWJzFixcXK1bMxwg0
ABJ88MEHZ86cQYKSJUuePn0a4QoVKhgMhps3bz7//POwLHv27ClVqtSaNWuU
+iBDrNJ3797Fki4ZLTsqhmRffPGF9LAAgNXeZARVRTKs0ihO7BVgGYcCGT58
ODSJsnorAqBx48ajRo2CdIG6gOmXjAIADYTvb3LVAkb5888/hwJ56qmnIiMj
Ue1hw4apEyDmjz/+QF8tWLDg+++/V+/StjQkJARCCEXs3LnztddeQ5qRI0ei
jRBaMFWimb169RozZkxoaOgnn3yyYcMGswOXDQGgbYKlgrQtMpkVqgl0VDbu
8aHS4SnSug4PVeKf7dL4YtLZJVLAEWl2Tfk/YmDir2+RkmOlC6ukZU2lkPPS
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
YpelF+tJxu8cBQcHr1u3LmuNLDgOHjwYFRVlaa/1FwWgA2/duqVsIh/xmkdb
SXkg3Tv332ZCmBRtHOjECOnYTOn6Vvlbvb7ODx1yYLRpJoenShE3zKQ04dxy
ycLLlwoj/+yQ4u5l50B76NJc75x7vvKbosVfXLCcLPRSRprkODkyzSBF+Wck
iFWd+zgQu+JDM3aFX7NYtNm+Qvfev/VQjOj5RwzNeMFSiBet5xFYok0+tm63
5JsAWLlyZYkSJQIDA3O9CTNmzLD+ll0tV69eLV68uDIH1J//69q1ay8j2Ku8
/D8xMfGjjz4aOVL+avy3337btm3bPn36fG1EvMBNefl//fr1seuHH35o2bLl
7du3Tcr19PTs2bPn8ePHW7duneN25xP79u1DcyztzcbnArNQdsh5+T3/V9Zn
bJ6cJ20zfvNoZ1/J43t5Eb7tI61476FDkD794a8oHpokhV02k1LNRVdpq/nv
IRZS/tkuf6o4GxSqLt07VM4k18n1zplWXtrYWf4gNf5ueMrJ5tWV45Oi5bdG
7xksh92/klw+lLZ1l1a1lgPi5ZM4EHrgxBxpwStyVus7SgvrSZGa9dNSXyGf
WwceihE9/4ihGa9Lly6JD5dkytatW8W7uLPE2rVr+dENQb4JgDZt2owbN27a
tGliE2blnXfeqVOnDoyCZHx3+meffVatWrUuXbrApuzatat///4iZYsWLcLC
wg4dOvTNN9+8+eabNWrUwPC9++671atXF59T79Chw8WLF5GgY8eOb7/99gsv
vCC+yAOGDh1asWLFpk2b/vrrr5s3b1YqA8uOops1a4acpYcFgPbrP8L6Ozg4
iEjl6z+oJzIXVl77+b+vvvrKxcXFpBMaNmyo0+kgAND2jz/+uGrVqlOmTEH8
6NGj3d3dJeO3eqEcEEBHoc5o7FtvvYXi6tat26BBg2PHjknGb82//PLLqJh4
5z9SYjLXrl27UaNG8NZNStT2AEp87rnnkH7btm1mD0cN0efly5fv1KmTeBsz
ikZXmB3W7AmAOXPmoAkYTaHBtCVmgJV2RhX5Ez8xd+VNsSDDIZ1YQl5ajzr+
Z4NOL5KWvysZkuQFfGc/+fX+zi0y3De3z+UX+yOlUwP5Vf/TnpY2/fjfq4AB
rBvWc3hnN/fLXw5Cstk1ZOfLubk0q7p0Sv6Mkex2YRPHYnkXLh6KizJe0bq8
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
dHVivT5l+YKNCDuMXhIWEinKWr14y5DuU6MiYqb85bR+5c6hPabNneISF5ug
3htzP+7Keb+xg+YO6+mww8Nb3jXTrfcPY1FK4J0Q+PiOY5b81W/mFvd9Jru8
dhw95HUakTh83OB5yHzt8u1paWl+124vmePuMHrxqAGzfPbJrdAn67eu87Kk
KAghhJC8wNfX15IAwC5t+lwUADPGLXNZ5BEXE+88fwPMpYiBxY8Iuw8ZAFWA
mEnDF4r7BaePXlyzzBOBpXPXwaQ+VKWrt5AYAgDG9+Dek9ASMLgBt4LVic8c
v7TQ0TUmOs5z/X73FdtFWSgX9t2QYsCBHq67I8OjYcH3bT+q3gshATWCTELv
RYzsNxO1xd6hPRygKBDYvHbv9cs34+MSoRCQQL0LTRBZjR8yH5UPCQ6fPGKR
//U71y7p+v004bYu6M7NoCHdp6Wmpkbfj53450JkkttjSwghhFjEy8tLMf1q
EIld2vS5KwBgECWjdV6x0EPEnDt1FYGkpGR463CKsyQA+v8yUfjRa5dvE08F
KIldnDYtm7d+99ZDHmv2jB44W5R1y+8uAkI5CMf/6kX/eVNXqveidJhpHIg/
WPATh89LKiufok9B5bFrwrAFF85clzQCAIeP+WOOqOfebUe2uO+DAIDIETHQ
BuJyBCGEEJLPFKwACLwTggBM5/KFG0XM5fNy4pQUw6Dfp+iT9RAAwrM+dtA3
UwEAzSBiNqzedeTAGXXiJXPccfjh/afxJ3YppePAPj+Oe5CYhLDftdszxi9T
7w0KCB3eZ7o4EH/iwoJi5R1GL3Gev+GQ1ymH0YvNCgAcDu9e1Mp7z4l1Ljsg
ABbPWitipvzlRAFACCGkQCjYWwBaAQB7Crf6uM+5OZNXSEbDDV8efr3TTDch
AFwWeRzzeahiVgSAkhiZLF+wEWmCA8PgsEsPC4DeP4w9sPs4SnFdunXHpoPq
vWDUgFmw45LRhQ8MkCP/6jczIuw+VMqAXyYmJjyIj0sY2mOaEABil6S6BYDD
b+sCITBmT1x+9aK/VgCkpqaeOX6J70oihBCSnxTAQ4BB4cIphq8t7OnFs9eV
WwAw9PD9//htsrgUAP99RJ8ZcKsXOroKAXD+zLVhvRzVv/v759rtRTPWwI4P
6W4qAJTECfGJqxdvgXUeO2gurLC6dBw48NdJ86etwn/sFeZb2QvOnbo6afjC
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
K/STvgMHDiAjQLc9e/YYm428AzlOs2bNEFMsbMVy3nrrrebNmxssB0lHXFyc
vFVWe0l6iQsyltOkSZOSkhKp0movbdy4UbzUjzIxMTGIVvIzWu15ee9V2mr1
iYTD4XnknvqteXl577//fqWt8rsmfzJY7UaZrbF6u21xgo0bJ+8lq1ckszVa
QpyYWhYA0OF4kx45csSg/urVq5DraBo6dKhBE977sLB169ZIDYwHFNdJ+dY2
bdogHBg8RsRCkpKSpJe9evWCDc8888wHH3xgPI6Xl9esWbN+/vlnXEaysrIs
aY2OjsZyhgwZYtAZqYd4/ihjldVeEuX8/HykYyEhIei5fv16qY/tXtKPMvqY
m9Fqz8t7T77VlhNp6tSpONbg0YZW9+C40laZXav0ZBDY4kbjrbF6u21xgi0b
V6mXrF6RzNYYj0aI81DLAgBiHu9Eg6xHAOmOJiHmDYCFjRo1evXVV6Ua5AiL
/+TgwYMyrbhS3XPPPcjQZaxKS0vr2rUrCjNmzKhfv750g1Hi3XffTU1NxeXC
pIUmW3fu3ImXuPJI3c6fPy9ZhYuSjFXWeUli5cqVbm5uWt0lEemkqJT3oSVe
0poXACZnVKlUVnte3ntr1qyRaUXotO5ECgoK6tu3L46FhJA6eHp6itZVq1bJ
t8rsmvxykIra6Eat0dbYst22OMGWjZNvvXHjhtUrktkaQpyZWhYAn376Kd6J
+pmLhI+PD5oWLlxo3IQUoGHDhu3atdOvDA8PR39cKnNycmRab9++jdaOHTvK
WIVrzpYtW7S6u4INGjRALq/fimvdv//9b1F+5513kKvqZ23mWr29vWHAvHnz
pJ5lZWVTpkxB5fjx48WKzFllnZckMKx4HLBs2TJ0PnfunLYyH1riJa15AWBy
RoVCYbXn5b2HiCPT6uXlZd2JVFRU1KtXL5QTEhKk1uzs7DfffBOVCEbyrTK7
Jr8c6XSy2o1ao62xZbttcYItGyffijTf6hXJbA0hzkwtC4AJEybgnXj06FHj
posXL6Jp+PDhJg986aWXHnroIYPK5s2bf/3115W2tmrVqmnTpuZMwuW3devW
HTp0eEtHs2bNMNTvet9KQ1R65ZVXROvzzz8PI/39/SttjYmJMb4RffLkSVQG
BgbKW2W1lwCixuOPPy7swaLuuuuuAQMGiCZbvCQwKQBkZrTa8/Lek2+15UQS
97cN7hX/8MMP9913X6WtMrtW6cmgtcGNAuOtsXq7bXGCLRtXqZesXpHM1hDi
zNSyAAgNDa1fv/4XX3xhUC/+tIF4C+fn5+s3ib93gBQAb2FfX1/9pieeeMLF
xQUF+daxY8cat4pJ8X9AQMA333wjVYoU293dXbzEel988UXYIF4WFBTcf//9
H330UaWtqEQTlpOXlycNfubMGQx+4MABeaus9hIKAwcODAoKkup79+59zz33
IEez0UsCkwJAZkarPS/vPflWW04k5LBIJA08P3LkSGxrpa0yu1bpyWCLGwXG
W2P1dtviBFs2rlIvWb0ima3REuLE1P7XAIcMGYI3o8HnwL/66isUoPNxbenV
q5f02x3Jyck9evS4efNmWVnZa6+91qJFi8uXL4smXMwffvhhIf7lWxEIWuiI
iooSreg/ceLEzZs3o9ytW7fjx49LxqDpwQcfbNOmjbgxCzu/++47fftxoYb9
0dHRlbaGh4c3atQIyykqKhKtyJukq5m8VdZ5KT093eAJBYIsZpw2bZqNXpJW
h9H0v24gP6Mtnpf3nnyr1ScSmDRpkoHnhw0bJqJbpa0yuyZvsC1uNLc1tmy3
LU6wZePkW21ZkczWEOK01L4AwHt2wYIFuNS3bdv2s88+69q167hx46Rb7hD8
yAKg6vv06fPee+/1799fBFOt7g3+448/IkHo3r07MseOHTsigoSFhVnSmpOT
g6tK48aN33///f/85z8ff/yxp6enVveNaVxeBgwYIOUCW7ZseeCBB1CJq4q/
v3+TJk1ef/116YJz8eJFjIxWXIhwMZFpFV9GvnTpUpcuXXBRwkJwtXnllVdw
IZIyU3NWWeeljIwMGIO00cvLS3QrKSkZPHgw7MGKdu7cabWXBHPmzMGBGK1n
z55XrlxBjSUzWud5USPvPflWq08keB6WYNj27dsPHToUBmM3V65caWGrzK6Z
M9gWN5rbGlveFDY6wcaNk2+1ZUUyW0OIc2KvnwLG+zExMVH6yQ4DcnNzIeOl
W+vGBwKTfwxRvlWhUCBYY3Abja8qpaWluCybm1fGKqu9JE/te8mWMeW9J99q
9Ymk1f1O7NWrV6WfErK8VX7X5A2Wxzo32rLdVjtBa9vGybdavSL5rSHE2eAf
AyKEEEKcEAoAQgghxAmhACCEEEKcEAoAQgghxAmhACCEEEKcEAoAQgghxAmh
ACCEEEKcEAoAQgghxAmpiwKguLg4NTVV/G7qrVu39JtUKlVycnJpaalxE9D/
oVRjsrKyRAc4pKCgoJqNrool8q3mELtTE5Pa4lV5q2xplbcqMzNTGIYO0g8C
C2TOHxnkjbFuTBmsG1D+KFv8acsZa/Ve2PKGte5NRIhTUbcEwI4dO1588cV/
/vOfAwYMeOmll9q2bfvll1+KptjY2G7durVp0wZNnTt3fuGFFx555BGDw9H/
+vXrBpVlZWU//fTTc88998knn3z++ecoYOS1a9deu3atfv36991331tvvXXv
vfc2b9787bffxphNmjSZOXMmmp544gkMiELr1q3btWt39913Dx069LXXXmvY
sOErr7zy9NNP16tXD5a0atUKfQ4dOiTNCBtef/11c2s0bpWxRL/bbB2WD2tJ
q9VetdAq61plrEKIwW7C57169cKG/v3vf0d59+7dotXk+SOzm5YYs3PnThwC
MwYNGgQfvvHGGx9++CHqzZ0JGzZskN9N64w0Z4aN/pSQ32WTrVbshSXDmnvD
VslgQoi2TgkAXANxRfX29hYvcXnBFaBHjx4oX7hw4YEHHujfv7/0q6Tu7u64
6op0RhAaGooaXDr0x0T/jh074rqEa6CoQT6CS8rSpUsjIyNx4RK/VI9r+Gef
fabV/Ug7rloTJkwQf8U+JCQEY+JShvKpU6e++uqrDh06pKWlaf/619lGjBix
d+9eadIxY8agKTg42OQyjVtlLJH6IIdq2bJlixYtkMdZOGylrVZ71UKrrGuV
sQouat++/bPPPiv91iu005NPPunh4aE1f/7I7GalxiCeNmjQwMfHR7xUKpUu
Li4I6CibOxOWLFkis5vWGSljhi3+lPrI77LJVuv2otJhZd6wlR5LCDGgrggA
vN+R7/Tr10+/MiUlpXv37hqNplOnTg8//HBhYaF+K5IL/duAuCQiKUCehYut
VOnq6ooLRUBAgP6Bvr6+c+fOxYXr5MmToka6UIONGzd6eXkhDdH+9WosmoAo
61/2Y2JicEUSZRyI7KxZs2a45Bov02SrjCVSnwMHDmB1mHHPnj0WDivfaotX
LbTKilZ5qxYtWoT+fn5++k0rVqxAeihz/sjsprwxcXFxGHPgwIH6Y+bl5b3/
/vv6hxucCUiBze2mdUbKm2GLP6WX8rtsstW6vah0WJk3bKXHEkIMqCsCACkD
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
EjVFtbLMzs6iVq6843VwXPPkkgBQkF2xec2REL/E0+8lHNoefLG9bzFNmqeX
n3oX/9dVtTSctxFI7M1fkJMHIpC13LkiEZEHoaAolUpPVzYXwxHhuGx+dn1Z
H6+94+rv76+trc01wgRu2nu4Fx8ABiTD61/cp1Jdrne9FwcKsysw0VTXvvHV
Q288syst7ixutrd0+x2M3PX2yQ2r9xfmVIqFM5OK3nx299svH6ivbTPfpkaj
CfVPWvfC3oPbTo2NTGDdU8fiDu84vWbVzvDAFK1Wq78SAHLTSopyq/TGIf+m
1w5j46mx+ab5GrVm29rjQcdi33h2d3hgsjhR8eFZr/915+53/EJOJiIn2Nvp
iX3hzz26EStKeqRZycUBh6PfenFfdVnDwW3BstEJvTFjxIdnY2J0WLZvc+Dr
f911+kS8fPaS+YrWC5/YG4b9rlm1Y3J82uIUWTRAqVAmReUySBCR26Cg2C42
/efVzQkq+aS4pcldv9jqNdKurjq52I3YoinerZoesZiJ47L5zXXuO14HbJ2K
ee7R+rhQoNOs2HvjfvEBoKK4LvBIjJhWzCnxD3kK01teP4ICNzQ4ingwPTnT
0tD54uNbujv7e7r6UcfR5smJadTroYHRxrr3t7xx1Hyb5yub920JRO0rL67D
P6yLklpT3tjfO4SKiS3orwSA1LizOaklYndoycT41Pa3Trzf0i3mIwBgxYLs
ivGxScQDhBMUa1RYTCAwvPTElsqSC/Z2ijmo6eJYUIi3vnF0sH8EG3x37THx
TkdVSX1YQDImIoJSI4PTcIwhfomilJtWtF5476YAnC5Uf6QRi1Nk0QAcy9Y3
j81ML/ZjHkRE82SjIE4N6U58Vxv1sCblGd2Rr6sbYzFPv/k6lVKxmKKn7sjT
Bv3rYrZgj+7AF1Uj71vMXEAAWJrjBW3w/arZcev5Nk/FPPdocVwY7JuK/qSR
6abN1wEWHwBKztYc2x2KCRS11/6y45X/2/bOKwdR9VDlMcDHv23rjosijuGw
WGXzmiPD0rHSgtqdG06KZbCWGCkLSAXYVFxYVnenBDexLkqhuCsxMgfL668O
ACNDMuxULCCG+aYA8NKft4pBdERQCppamFOJCbHk4R2nzQOAxU71VweArORi
MdO6pqN8y8YmzffuOACIt0isT5F1A4iI3Mm6IKI86XZ9UnVp2nBD1q3uLRfl
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
DwCjo6NjY2OeboUjnZ2dExOOfmqwra3NYo5Op7tw4YLpOwmtT7jFAk4bHByc
np5e5EbMXfNgberr66uurlYqldde1CkajUahUCzRxl2Cl/Fi+MJljHM1MjKy
FFsmX+bmALB9+/abb775c5/7HJ6zYk5paem999574403Pvfcc++88w7u/eAH
P/jggw/+6le/+vGPf/zxj3/8oYcesrkptVr98ssvf+ADH4iNjXW6PU47dOjQ
P/zDP1x//fVo5He/+9177rkHjbHZaXzta1974YUXbG5EIpHg2G+99VaL+XV1
ddddd11hYSE6VWz8i1/8or0FnG4/auLjjz+O9ldWVjq9EWsODtaeTZs2vfLK
K3ffffcf//hHF7ZEQLcZGRn5jW98Iz8/f56r4MxccxlexuZ4GeuX+DI+ePDg
7bffjsP86U9/Wl9f7/Ltk89y/ysA6CHxrL///vtNPW1FRcUDDzwgpu+7777b
brvNtDCiuOkua2i5p3pOQFeJA5FKpZjGQObDH/7wI488Yr1YVVWVg69iPnny
pHXPiTOTmZmJo8P0rl27rHtO8wVg3759TrT/4sWLaP98es6ioiIcxXy26fhg
rc3MzOARlMvlGD3V1NTMf8V5Ql0+cuQIDnP+AcDf338+PwfJy9gcL+Olu4zL
y8v/9V//NS8vLzw8/JZbbvnTn/7k2u2TL3N/AECH86Mf/QjP2fXr14s5XV1d
pqv6v/7rvzAkMS2M3bW0tDjY2g033GCz59RqtRav+ope3dTbOJhpva5NW7Zs
wVEMDw+Lm3iSfuUrX7G5pKmgiAmdkZhz6tQp0XNaFx0x58CBA6LntLdAfHz8
pz/9acdNFa+yWrzWioGbqed0UPIwyP3CF76A/sd8aw7Oj/mmLE6sNfSWaIP5
L0PZa7/Tv9GM9i8oAPj5+c1nX7yMeRmbLOllvHHjxqGhITH91FNPffzjH1/o
Fojs8UgAOHfu3D/90z9df/31yP96Y4Z/9NFHxb3mPSeeL7/97W8db030nAje
P/vZz37+859HR0dj5ptvvvniiy/+8z//86pVq3Bz//793/nOdzDnzjvv/NCH
PvTss8/am2m9rgPmPefIyAg6wN///vcWy5w9exYzn3766fHx8RdeeOGzn/1s
YGDg7bff/vnPf765uVl/pefEpnAXOqimpiZ0I8eOHbv33ntTUlL0xp4TC7/+
+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
dAjNmQDAcjB70ESrfyMCVmVmZmIuCQkJzFocoyYGqu4yEQRBEArGir8DgJiO
+Mt/PD116tSlS5caVEMKjGpnzpxhpzNmzPiv//qvX3755a233pqkB8n7q6++
igMW7xgQAGjVokWL5557jj1GFwoAT0/Pf/7znzhAaH777bcbN27cpk2bVq1a
iQoABFkW4tkxQioycSTyLAQbCABfX18csMqlpaWojCDu5+cXFBTEChMTE5kA
gDzw9vbG8b59+xDERQUAZAk+raysZG0R5SEwMCJ77ZD1xl4pRG/QGGjFaQkG
mrMHBwRBEATBsKIAQNhFgOaiNgJcu3bt+GGLgRGffvrpNWvWsNM5c+Z07doV
4mHe3yD69+jRAwf8L9ZBADz//PMIux06dJg2bZpWTAB8/vnn7IXDjz76qH//
/oi5OP73v/8tKgDi4+P37t3LjiEADh48mJ+f7+Liwt5JMBAAYWFh7JUArf4R
BqJzeXl5aGgou4+h1X/zkQmA48ePnzhxAlEe04cSEBUA7IECUxrA1dUVS4AR
YQMrYXICPWCOGCgrKwsG8F8ghOU1/uEFgiAIQpFYWAAgjJ49e5Yls/Pnz2cP
8RkRERHt27fnV75x4wbCOir/9ttv7733Hit85513Vq5cya82atQoiZcAkeY3
atTo2rVrTAAcPnwYwffy5csTJkxo1qwZe6kP+gFDaPXP0Js2bbpu3Tqh5Yiq
CKkIylreS4DsMT16NhAAKEEQRyHkDU5Z3GfP4tEWyuHYsWNMAHh4eFy8eBHS
hd1VuH79uvZvAVBcXIySpKQkeABKIyQkBMEdcRyFJSUlQgGAAy8vL8xIpVJl
ZmaiBDZr9d9QwHF2dnbNlowgCIJQJBYWAAh8CMcvv/zyJ598sn79ev5N+wUL
Fvz444/8yvb29gjHubm5ZWVliNfDhw//8MMPEe5LS0v51b755huDhlq9AOB+
BwDioW/fvvzfAXjqqacGDBiAOqwCwmuLFi1at27dpUuX0aNHN2/eXJgvIwqz
1FurFwDsdwBQiBQeYZe7IY9wHxwcjIDu5+fnpAfl7Pk7Cn19fVkhWrGb9uz2
Po7RYUBAAEvbUcJuR7CnAyi5d+8e6rC2UEpavZTiCwDWW2xsLHQIZAYkBHQF
+xTWurm5cU8QCIIgCEJrjUcASKILCgqE5UhXDX7/BxGTn7fm6zFlaGmrEMTZ
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
0dHR7733nndtFgRBEOoaIgDqHboAaNGixcmTJ4n4+fkx6zf9nTVrVmBg4Pjx
4ydOnBgXF5eenl5aWupl0wVBEIQ6gwiAeocuAF588UU15R8yZMhPP/1k+ou7
X7t2bXZ29sCBA3/44YeAgAAkgZ7JsWPHwjSCg4O///57dMKXX345ePDg2bNn
s3Dx4sVLlizJy8tzZgM5k4CUxl+1lRFjAtbqf93sQsXFxWpD+7KMJVa6yh6j
Mep3+/btbrb/ypUrHdZRLzEiIoLfAwcOuM7n3LlzujGXL192s3Q4f/68sQqQ
mprq/uawbNmyoqKiKm3iRWJiYtLS0pyt3bFjh7OeRuevYdGnT5/Wd25FRYVp
LfmzdunSpTUsxURhYaHe7Y3s3LnTzRwiIyPt+7zeRS9cuOBZgxWxsbHGvWAs
MTc3t9rZ7tmzhxz27t3rQVMFHREA9Y6bbrpJCQBfX9+FCxcS6dOnz8aNG01/
VeIff/xx165dL7/8MvFFixbpmURFRfXWeOWVV2644YYnnnji97//fdu2bfn7
1ltvvfnmmx07dnzwwQcdGjBjxoxrrrnm7bffJqXxl63sF+q/rFWRXr16sTkd
qdKa9uzZ87bbbnORrWmVwpkxCpMx+i8mbdu2zVh6QkKCvZ3Tpk1TdXdhDDpK
ZejCbQEN/pe//IVNWrRowY6otDV0/vSnP3Xo0EGvAruMskzPhrhgzJgxpEcu
ul+iF0FuXaPh8C5WtIF9V1Qt07lz51atWrlf0HXXXcdRYFxCk6qGUnsTFW3a
5I477njsscdYNXLkyGpUzRnPPPPMXXfdpbqTsadRkDt+cOzYsXoXNfLee++R
JzmTvwetVWzdupVCTUeiPpI89NBD1ctWHYOq/U+cOOFZmwWbCID6BqK6UaNG
06dPJ37mzJkePXoQ/+abb+z/Qnp6OqMW82iWBwYGZmZm2mdIGjyR/XJ6BcLA
4TzxvvvuQ1TUpBZPP/30hg0bKk3WsmVLhzZfDYYNG/b9998bl/j5+bVp02bV
qlXGhfiITZs2uZNhv379Zs+e7WxtVlYWQk5NKpnxNWnSxM2TAGxy4403solx
4VNPPbVu3Tp3Ngc8I1VAdbiZ3rv079+frksHDgoKsl87YMCAyZMnO9yQhmre
vHlOTo47pdD4v/rVr1q3bm1cuH79+i5duqj4kSNH7r77buPa06dP33LLLTbN
Sd1///3ulOIOFy9eZP867AxfffUV4s315uXl5WhmF0M0owHHtcevBo4bNw7z
nJX429/+1v65JHdg/jJ06FAidIDly5fXyETBESIA6jumKarDmbWLo8+ZAICu
XbuuXbvWuOTKlSuMikwiqmXp/w8H9U8//eQ6DdNnZlg1LMh9tmzZ8vjjjxuX
MOb8+9///vzzz/Ul+fn5TZs2dXPwnDVr1jvvvONs7ZIlS8hf/4sHVw9uVMqp
U6fatm1rWujr6/uvf/3Lnc3pHoz/+BfcREZGhjubeBcqy4CzbNmye++9NyUl
xbiKXo0LdnGahcl7ZGSkO6Ug8+jt7dq1O3TokL5w4MCBzKb1v8hRY4sFBwe/
8cYbygy0HIrO/Uq5YPXq1d26dXO4ij7zj3/8w/Xm6Oq//OUvrtP8+c9/rqGA
t+e9996bM2eOs7WMGMePH69GttRl69atRDgSKxU/QjUQAWBxXAiA//u///vP
f/5jXILXvuaaaxITE2tYKKPcs88+6zoNY/7f//73GhbkPvhEPKN+npn5I6N6
fHw89Q35BT8/v1dffdXNDJOTk++8805na3EuEydO1P/6+Ph8/fXX7mSLq7I/
e3/w4MF77rnHnc1jY2OVziGTlStXurNJ7UPjl5SUsEeYd6tZOUvefPNN9oWu
AS5cuIAYc+3shg8fbjqrw1YvvfSS/S0TH3/88aRJk8aPH08RONnXX3+dX+LG
lL169TJeRPvggw8CAgJUvGfPnnPnzi3RQCSbMqciGG9/4uighmkh3cDZBQWM
MV3UoLvu3bvXqPk//PBDZ6dEdL744osJEya4TlNV2BEuRAUHclXn76RfvHjx
b3/727KyMv7OnDmTBq+plYIdIgAsjgsBgLNgDMQR60tQ8kePHq15oYWFheT8
ySefML/+9NNPmVPPnz/f5Fu/++473GLNy3IfpuS//vWvH3nkkUcffZTpnroF
guGU0bufRvfu3at0A1Xz5s3vu+8++8sojMBUH4WgL9m3b5+b10lHjx7NbMh+
+e9+97v8/PxKNx81apS6QjRkyJARI0a4UyJ+p0r3KNacd999l/a5TmPevHn6
ciwfNmyYir/22mtvvfWW692xceNGclisERMTw5J//vOfaNqOHTsak6Eubrvt
NiUtoqOjIyMjo6Ki+E1KSjImW7t2LVbRKx7SIH769Gm1Sl2qxlv96le/Uld2
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
Tz6pNJm/v7/6FlWrVq1OnjxZaXryxC+npKTccccd7phx5cqV1q1bL1682Nnb
y51hLGLt2rWTJk2q0uY1pKCg4OWXX1ZfaLVpL1QJDQ21aTJJ3XA1duzYkSNH
JiYmrlixIiwszGEmIgAEQRCsSS0LgKKioh49etx8881t27adMmUK3qdr1642
7avTLH/sscdYNWTIkG+++ebWW2997rnnlLv/9ttvw8PDbb8IgIsXL7Zv375p
06a33367+ljqqVOn/vrXv44aNapTp07R0dHPPPPM6dOn33zzzWuvvZaUb7zx
xvfff697Z5LpzyYr3n33XZVyzJgxFD1s2LBXX331xRdf3LZtG87xxhtvvPvu
u6OiomzalP/rr7/GDASDj4+PsYhly5apb2pTqWeffbZZs2ZdunRRXzuldq+/
/jp/b7vtth9//LHarWdix44djzzyyG9+85uhQ4fatG92qFesYz/NEhsbiz05
OTk0yHvvvecsExEAgiAI1qSWBQBO/+mnny4uLiYTPObx48fbtGlj075Hds89
9+BwExISfvWrX+HxmcLjtkaMGMHaPn36qI+kKwFQWloaExOjMkEGZGRk4Gcb
NWr05Zdfrlu3Do+mkpEVKiIrK+v8+fPMiO+6666KigoqixdmUmy0Kikp6Xe/
+x0p0SdvvfXWfffdt2jRoi1btpDVgQMHSkpK8OBoAJs2ze/YsSM5Y3lAQICx
iFmzZjH1Js2//vWvAQMGZGZmDh48+J133lG1Y3MyPHr06E033eTZ17shA8iT
GrVo0ULpJT8/PyzBnsDAwPHjx0+cODEuLo66OHzbqggAQRAEa1LLAmDVqlW4
WmaseEP+GgUA03CVBvetiggKCmJmbbMTADbti6Ldu3e///77f/3rXzPtRQAY
vZhKZjw/j+tHAGzcuDE8PPypp54yWXXmzBn9veUIgHnz5qn4pUuXMBXFwrZN
mjRhCZ593Lhx+obGInQB8Ic//AHZYNN8K9leuXLFWLvHH38cM6rdgA754IMP
UD4vvviiOgMwZMiQn376CXePXMnOzh44cOAPP/yAXMFCfZOpU6feptGyZUsU
122/UNWLIIIgCEI9pfbvAcArffjhh7fccss333zjUAC0bdtWFREcHKw+EmoS
AIsXL27Xrh1u9Ny5c2gAdwSATTvz37t377/97W8hISEmk5wJgE8++QSvyjT/
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
    "], {{0, 1848}, {683, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Software" -> "Created with the Wolfram Language : www.wolfram.com"], 
      "Comments" -> 
      Association[
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "Creation Time" -> 
        DateObject[{2019, 7, 22, 15, 25, 26.}, "Instant", "Gregorian", -4.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{683, 1848},
  PlotRange->{{0, 683}, {0, 1848}}]], "Input"]], "Text",
 CellID->984259520]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing Transcriptome Mapped Data", "Subsection",
 CellID->964105434],

Cell["\<\
We will next preprocess the imported transcriptome data. We will first \
relabel the data, carry out quantile normalization and filtering and we will \
finally create time series.\
\>", "Text",
 CellID->1926312606],

Cell[CellGroupData[{

Cell["Labeling, Normalization and Filtering", "Subsubsection",
 CellID->433330108],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->62840614],

Cell["\<\
First, we illustrate how to change the outer keys. In this example, we notice \
that the sample numberings do not correspond to actual days, so we may want \
to adjust the outer keys to correspond to real times. \
\>", "Text",
 CellID->1020016945],

Cell["\<\
We form an association between samples to actual days of the study:\
\>", "MathCaption",
 CellID->381670302],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[76]:=",
 CellID->199112125],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1332666250],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "rnaExample"}], "]"}]}]], "Input",
 CellLabel->"In[77]:=",
 CellID->2014709187],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.73998`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[77], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[77]=",
 CellID->2120249074]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantile Normalization", "Subsubsubsection",
 CellID->1747728821],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["QuantileNormalization",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/QuantileNormalization"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "performs quantile normalization of ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->818482745],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileNormalization"]], 
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " can perform quantile normalization across various samples for multiple \
forms of data, including ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " and matrix data."
}], "Caption",
 CellID->1606736180],

Cell[TextData[{
 "We normalize the transcriptome data using the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileNormalization"]], 
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function. The Measurement is located in position 1, 1 in the list."
}], "MathCaption",
 CellID->1093504481],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaQuantileNormed", "=", 
  RowBox[{"QuantileNormalization", "[", 
   RowBox[{"rnaLongitudinal", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[78]:=",
 CellID->364761141],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[78], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[78]=",
 CellID->2073287215]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tag Missing and Low Values", "Subsubsubsection",
 CellID->1673762423],

Cell[TextData[{
 "Next, we will tag values of  less than 1 FPKM as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 ". Additionally, we will treat values of FPKM less than 5 as \"noise\" and \
set them all to a token value of 1."
}], "Text",
 CellID->529597330],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["LowValueTag",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/LowValueTag"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["valueCutoff", "TI"]}], "]"}], Cell[TextData[{
     "takes an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " and tags values in specified position as ",
     Cell[BoxData["Missing"], "InlineFormula"],
     "[] based on provided ",
     Cell[BoxData[
      StyleBox["valueCutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1118958870],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " allows us to tag low values."
}], "Caption",
 CellID->827431311],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], "1", Cell["\<\
Selection of which component of a list to use in the association or \
OmicsObject input values.\
\>", "TableText"]},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], "1", Cell["\<\
Selection of which list to use in the association or OmicsObject input values.\
\>", "TableText"]},
   {"OtherReplacement", 
    RowBox[{"_Missing", " ", ":>", " ", 
     RowBox[{"Missing", "[", "]"}]}], Cell["\<\
Replacement rule for any other kind of replacement in the data.\
\>", "TableText"]},
   {"ValueReplacement", 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell["\<\
Value that specifies how tagged data points will be replaced.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->29072],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->956870455],

Cell[TextData[{
 "We first use  ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to tag values of 0 as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[]:"
}], "MathCaption",
 CellID->1372190648],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaZeroTagged", "=", 
  RowBox[{"LowValueTag", "[", 
   RowBox[{"rnaQuantileNormed", ",", "0"}], "]"}]}]], "Input",
 CellLabel->"In[79]:=",
 CellID->581335803],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 79, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 79, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 79, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[79], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[79]=",
 CellID->1591346998]
}, Open  ]],

Cell[TextData[{
 "We next use  ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " again to set all FPKM values <1 to unity:"
}], "MathCaption",
 CellID->351193473],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaNoiseAdjusted", "=", 
  RowBox[{"LowValueTag", "[", 
   RowBox[{"rnaZeroTagged", ",", "1", ",", 
    RowBox[{"ValueReplacement", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[80]:=",
 CellID->1223638755],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[80], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[80]=",
 CellID->1007655648]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1524282659],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->222118196],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["FilterMissing",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilterMissing"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["percentage", "TI"]}], "]"}], Cell[TextData[{
     "filters out data from ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", retaining data across the datasets with a ",
     Cell[BoxData[
      StyleBox["percentage", "TI"]], "InlineFormula"],
     " of data points not missing."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1425592616],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " allows the removal of data marked as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], and retains only data with measurements available for a certain \
percentage of samples."
}], "Caption",
 CellID->460047533],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"MininumPoints", "3", Cell[
    "Minimum number of datapoints to keep.", "TableText"]},
   {"Reference", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "Select a reference outer key for which should remove dataset if the \
reference point has a ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     " value."
    }], "TableText"]},
   {"ShowPlots", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[
    "Whether to show summary plots.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2081738160],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->969678196],

Cell["\<\
In this dataset we will use a reference point, day \"255\" which was a \
healthy measurement. \
\>", "Text",
 CellID->2046575969],

Cell["\<\
Hence, we filter out data where the reference point \"255\" is missing and \
retain data with at least 3/4 points available:\
\>", "MathCaption",
 CellID->132360816],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaFiltered", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"rnaNoiseAdjusted", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[81]:=",
 CellID->1942659867],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6719999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6719999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.5, 0}, {0.5, 18427.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{35.65072057646116, 
           133.66873498799035`}, {-48.97193256023674, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 18427]& ,
        TagBoxNote->"18427"],
       StyleBox["18427", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18427, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 6841.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{133.16873498799035`, 231.18674939951956`}, {
           24.448647134884688`, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6841]& ,
        TagBoxNote->"6841"],
       StyleBox["6841", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6841, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-0.54, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{-0.5, 1.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[81]:=",
 CellID->1221241714],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "18427"}], ",", 
     RowBox[{"1", "\[Rule]", "6841"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[81]:=",
 CellID->1908272819],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$45449$45555 = False, DynamicChart`click$45466$45555 = 
       False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.440497565477732, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 18427]& , TagBoxNote -> "18427"], 
                    StyleBox["18427", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[18427, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$45449$45555, 
                    FEPrivate`Not[DynamicChart`click$45449$45555]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$45449$45555, {{{1., 0.}, {0., 1.}}, {
                    0.13191433757046722`, 0.15032833247044558`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$45449$45555}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.440497565477732}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 6841]& , 
                    TagBoxNote -> "6841"], 
                    StyleBox["6841", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[6841, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$45466$45555, 
                    FEPrivate`Not[DynamicChart`click$45466$45555]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$45466$45555, {{{1., 0.}, {0., 
                    1.}}, {-0.1319143375704672, -0.1503283324704456}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$45466$45555}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["18427", {}, StripOnInput -> False], 
                    TraditionalForm], {0.43971445856822405`, 
                    0.5010944415681519}]}}}, StatusArea[#, 18427]& , 
                 TagBoxNote -> "18427"], 
                StyleBox["18427", {}, StripOnInput -> False]], Annotation[#, 
                Style[18427, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$45449$45555, 
                  FEPrivate`Not[DynamicChart`click$45449$45555]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$45449$45555, {{{1., 0.}, {0., 1.}}, {
                0.13191433757046722`, 0.15032833247044558`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$45449$45555}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["6841", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.4397144585682239, \
-0.501094441568152}]}}}, StatusArea[#, 6841]& , TagBoxNote -> "6841"], 
                StyleBox["6841", {}, StripOnInput -> False]], Annotation[#, 
                Style[6841, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$45466$45555, 
                  FEPrivate`Not[DynamicChart`click$45466$45555]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$45466$45555, {{{1., 0.}, {0., 
                1.}}, {-0.1319143375704672, -0.1503283324704456}}, {{1, 0}, {
               0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$45466$45555}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}], 
   FormBox[
    FormBox[
     TemplateBox[{"0", "1"}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[81]:=",
 CellID->1820484635]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[81], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[81]=",
 CellID->1685741636]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Transcriptome Time Series", "Subsubsection",
 CellID->267016150],

Cell[TextData[{
 "We can now create time series for each of the genes. MathIOmica provides \
functions to facilitate the process, such as ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CreateTimeSeries"]], "paclet:MathIOmica/ref/CreateTimeSeries"},
   
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeExtractor"]], "paclet:MathIOmica/ref/TimeExtractor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". The functions assume an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " as an input for which times have been used as the sample labels (outer \
keys)."
}], "Text",
 CellID->94668970],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     RowBox[{
      ButtonBox["CreateTimeSeries",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/CreateTimeSeries"], "[", 
      StyleBox["omicsObject", "TI"], "]"}], " "}], Cell["\<\
creates a time series list across an OmicsObject using outer keys as times.\
\>", "TableText"]},
   {
    RowBox[{
     ButtonBox["TimeExtractor",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeExtractor"], "[", 
     StyleBox["omicsObject", "TI"], "]"}], Cell["\<\
extracts a list of sorted times from an OmicObject's outer keys.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1824801338],

Cell[TextData[{
 "We extract the times for the filtered RNA data using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeExtractor"]], "paclet:MathIOmica/ref/TimeExtractor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->2019621014],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesRNA", "=", 
  RowBox[{"TimeExtractor", "[", "rnaFiltered", "]"}]}]], "Input",
 CellLabel->"In[82]:=",
 CellID->643857816],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[82]=",
 CellID->15810684]
}, Open  ]],

Cell["\<\
For each gene we now extract a time series (list of values) corresponding to \
these times:\
\>", "MathCaption",
 CellID->148216279],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesRNA", "=", 
  RowBox[{"CreateTimeSeries", "[", "rnaFiltered", "]"}]}]], "Input",
 CellLabel->"In[83]:=",
 CellID->2137454280],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "2.294595133333334`", ",", "1", ",", "4.676944000000001`", ",", 
              "4.481310666666667`", ",", "4.955066666666666`", ",", "1", ",", 
              "1.2572603333333332`", ",", "2.1476724666666676`", ",", 
              "1.932187333333333`", ",", "1", ",", "2.582170666666667`", ",", 
              "2.3130066666666664`", ",", "4.102843333333334`", ",", 
              "3.8092893333333335`", ",", "1.4547106666666665`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "5.916647999999999`", ",", "4.320814`", ",", 
              "3.195994666666667`", ",", "3.6416366666666664`", ",", 
              "2.7327000000000004`", ",", "2.134606133333333`", ",", 
              "2.1716795999999996`", ",", "3.2342906666666664`", ",", 
              "1.8957593333333331`", ",", "3.0267020000000002`", ",", 
              "4.340044000000001`", ",", "7.270013333333333`", ",", 
              "2.011321133333333`", ",", "9.277005333333333`", ",", 
              "7.5441486666666675`"}], "}"}]}], ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[83], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[83]=",
 CellID->344747750]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Take Log Ratios Compared to Reference in Transcriptome Time Series\
\>", "Subsubsection",
 CellID->1837977213],

Cell["\<\
Next, we want to use log ratios of expression at any time point compared to a \
healthy datapoint. \
\>", "Text",
 CellID->1135789927],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SeriesApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/SeriesApplier"], "[", 
     StyleBox[
      RowBox[{"function", ",", "data"}], "TI"], "]"}], Cell[TextData[{
     "applies a given ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     ", an association of lists, implementing masking for ",
     Cell[BoxData["Missing"], "InlineFormula"],
     " values."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1719166110],

Cell["Applying a function to a series with Missing data.", "Caption",
 CellID->1779824032],

Cell[TextData[{
 "We first use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement the logarithm:"
}], "MathCaption",
 CellID->1087636944],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesRNALog", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Log", ",", "timeSeriesRNA"}], "]"}]}]], "Input",
 CellLabel->"In[84]:=",
 CellID->533314544],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.8305564154590727`", ",", "0", ",", "1.5426449051847884`", ",",
               "1.499915563163511`", ",", "1.6004106221145828`", ",", "0", 
              ",", "0.22893501503264826`", ",", "0.7643846820900576`", ",", 
              "0.6586526945127277`", ",", "0", ",", "0.9486303888715844`", 
              ",", "0.83854826550484`", ",", "1.411680229288034`", ",", 
              "1.3374426450561796`", ",", "0.3748070263246455`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1.7777700723187606`", ",", "1.4634438104320098`", ",", 
              "1.1618983591500285`", ",", "1.2924332142933417`", ",", 
              "1.0052901314367368`", ",", "0.7582821487875812`", ",", 
              "0.7755008773783016`", ",", "1.1738096354916885`", ",", 
              "0.63961946188012`", ",", "1.107473577885762`", ",", 
              "1.46788448630977`", ",", "1.9837581255648373`", ",", 
              "0.698791786422256`", ",", "2.2275387935694635`", ",", 
              "2.0207722517470934`"}], "}"}]}], ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 84, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 84, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 84, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[84], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[84]=",
 CellID->1534941352]
}, Open  ]],

Cell[TextData[{
 "Now we need to compare  to use log ratios of expression at any time point \
compared to a healthy datapoint. We can use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesInternalCompare"]], 
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->440466924],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SeriesInternalCompare",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/SeriesInternalCompare"], "[", 
     StyleBox["associationOfLists", "TI"], "]"}], Cell[TextData[{
     "compares each value in each list of ",
     Cell[BoxData[
      StyleBox["associationOfLists", "TI"]], "InlineFormula"],
     " to an internal reference value in the list, if the reference point \
itself is not ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1719094828],

Cell["\<\
Comparing values in a series to an internal reference point in the series.\
\>", "Caption",
 CellID->581787458],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"CompareFunction", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MatchQ", "[", 
         RowBox[{
          RowBox[{"Head", "[", "#2", "]"}], ",", "Missing"}], "]"}], ",", 
        RowBox[{"Missing", "[", "]"}], ",", 
        RowBox[{"(", 
         RowBox[{"#1", "-", " ", "#2"}], ")"}]}], "]"}], "&"}], ")"}], Cell[
    TextData[{
     "The function is used by a ",
     ButtonBox["Query",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Query"],
     " operation on non-missing input data. Namely: ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Query", "[", 
        RowBox[{"All", ",", 
         RowBox[{
          RowBox[{"CompareFunction", "[", 
           RowBox[{"#", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "ComparisonIndex", "]"}], "]"}]}], "]"}], "&"}]}], 
        "]"}], "@"}]], "Input"]
    }], "TableText"]},
   {"ComparisonIndex", "1", Cell["\<\
List position of list value that will be used as a reference data point.\
\>", "TableText"]},
   {"DeleteRule", 
    RowBox[{"{", 
     RowBox[{"Head", ",", " ", "Missing"}], "}"}], Cell[TextData[{
     Cell[BoxData["DeleteRule"], "InlineFormula"],
     " allows the customization of how to select values for the reference \
data point for which its key should be deleted.  The ",
     Cell[BoxData["DeleteRule"], "InlineFormula"],
     " value takes the structure ",
     Cell[BoxData[
      RowBox[{"deleteRuleOptionValue", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{
            Cell[
             TextData["MatchQ"]], "paclet:ref/MatchQ"},
           "RefLink",
           BaseStyle->{"InlineFormula"}], "first", " ", "argument"}], ",", 
         RowBox[{
          TemplateBox[{
            Cell[
             TextData["MatchQ"]], "paclet:ref/MatchQ"},
           "RefLink",
           BaseStyle->{"InlineFormula"}], "second", " ", "argument"}]}], 
        "}"}]}]], "InlineFormula"],
     ".\nThe ",
     ButtonBox["MatchQ",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/MatchQ"],
     " function referred to here is implemented by ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["SeriesInternalCompare"]], 
        "paclet:MathIOmica/ref/SeriesInternalCompare"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " internally, and uses the ",
     Cell[BoxData["deleteRuleOptionValue"], "InlineFormula"],
     " as:\n",
     Cell[BoxData[
      RowBox[{"MatchQ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"deleteRuleOptionValue", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"reference", " ", "comparison", " ", "value"}], "]"}], ",", 
        RowBox[{"deleteRuleOptionValue", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]], "InlineFormula"],
     "\nThe default removes the corresponding key if the value used for \
reference in the comparison is actually ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     ", i.e. the comparison reference point has ",
     ButtonBox["Head",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Head"],
     " that matches ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1460313503],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesInternalCompare"]], 
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->2045927005],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->1398268181],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesRNALog", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[85]:=",
 CellID->779768946],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.8305564154590727`", ",", "0", ",", "1.5426449051847884`", ",",
               "1.499915563163511`", ",", "1.6004106221145828`", ",", "0", 
              ",", "0.22893501503264826`", ",", "0.7643846820900576`", ",", 
              "0.6586526945127277`", ",", "0", ",", "0.9486303888715844`", 
              ",", "0.83854826550484`", ",", "1.411680229288034`", ",", 
              "1.3374426450561796`", ",", "0.3748070263246455`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.31432626188675084`", ",", "0.`", ",", 
              RowBox[{"-", "0.3015454512819813`"}], ",", 
              RowBox[{"-", "0.1710105961386681`"}], ",", 
              RowBox[{"-", "0.45815367899527293`"}], ",", 
              RowBox[{"-", "0.7051616616444286`"}], ",", 
              RowBox[{"-", "0.6879429330537081`"}], ",", 
              RowBox[{"-", "0.2896341749403213`"}], ",", 
              RowBox[{"-", "0.8238243485518898`"}], ",", 
              RowBox[{"-", "0.3559702325462477`"}], ",", 
              "0.004440675877760203`", ",", "0.5203143151328276`", ",", 
              RowBox[{"-", "0.7646520240097537`"}], ",", 
              "0.7640949831374537`", ",", "0.5573284413150836`"}], "}"}]}], 
           ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[85], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[85]=",
 CellID->1779061158]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Transcriptome Time Series", \
"Subsubsection",
 CellID->384896847],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1747726374],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedRNACompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "rnaCompared"}], "]"}]}]], "Input",
 CellLabel->"In[86]:=",
 CellID->755844152],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.21829331924794013`", ",", "0.`", ",", "0.4054499736632343`", 
              ",", "0.39421951450899434`", ",", "0.4206324102233949`", ",", 
              "0.`", ",", "0.06017048739059012`", ",", "0.20090154784186665`",
               ",", "0.1731122416739286`", ",", "0.`", ",", 
              "0.2493264424569924`", ",", "0.22039379964993433`", ",", 
              "0.3710288154208633`", ",", "0.35151711414050807`", ",", 
              "0.0985097078669049`"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.1564105847744402`", ",", "0.`", ",", 
              RowBox[{"-", "0.15005077872901465`"}], ",", 
              RowBox[{"-", "0.08509587199020531`"}], ",", 
              RowBox[{"-", "0.22797994802620195`"}], ",", 
              RowBox[{"-", "0.3508925636575009`"}], ",", 
              RowBox[{"-", "0.34232442368796406`"}], ",", 
              RowBox[{"-", "0.14412365801429614`"}], ",", 
              RowBox[{"-", "0.40993981010358166`"}], ",", 
              RowBox[{"-", "0.17713286793361294`"}], ",", 
              "0.0022097062671921166`", ",", "0.25891144382253184`", ",", 
              RowBox[{"-", "0.3804953156202253`"}], ",", 
              "0.3802181288269338`", ",", "0.2773298893139476`"}], "}"}]}], 
           ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[86], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[86]=",
 CellID->1063560421]
}, Open  ]],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ConstantSeriesClean",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantSeriesClean"], "[", 
     StyleBox["dataIn", "TI"], "]"}], Cell[
    "removes constant list series from an association of lists.", "TableText"]}
  }]], "DefinitionBox",
 CellID->1164836919],

Cell["Removing constant series.", "Caption",
 CellID->953171581],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1883423327],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaFinalTimeSeries", "=", 
  RowBox[{"ConstantSeriesClean", "[", "normedRNACompared", "]"}]}]], "Input",
 CellLabel->"In[87]:=",
 CellID->786900109],

Cell[BoxData["\<\"Removed series and returning filtered list. If you would \
like a list of removed keys run the command \
ConstantSeriesClean[data,ReturnDropped \[Rule] True].\"\>"], "Print",
 CellLabel->"During evaluation of In[87]:=",
 CellID->1253250375],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.21829331924794013`", ",", "0.`", ",", "0.4054499736632343`", 
              ",", "0.39421951450899434`", ",", "0.4206324102233949`", ",", 
              "0.`", ",", "0.06017048739059012`", ",", 
              TemplateBox[{"20"},
               "OutputSizeLimit`Skeleton"], ",", "0.1731122416739286`", ",", 
              "0.`", ",", "0.2493264424569924`", ",", "0.22039379964993433`", 
              ",", "0.3710288154208633`", ",", "0.35151711414050807`", ",", 
              "0.0985097078669049`"}], "}"}]}], ",", 
           TemplateBox[{"11783"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 87, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 87, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 87, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[87], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[87]=",
 CellID->859442849]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Transcriptome Data", "Subsection",
 CellID->1956292219],

Cell["\<\
In addition to the above, we want to create a resampled distribution for the \
transcriptome dataset prior to classification and clustering. In this \
subsection we first resample the imported and labeled transcriptome dataset, \
Then, we carry out the full analysis in this \"bootstrap\" dataset, to create \
a set of random time series. This bootstrap distribution of time series will \
be used to provide the cutoffs used in the time series classification in the \
following subsection.\
\>", "Text",
 CellID->673780035],

Cell[CellGroupData[{

Cell["Resampling the Transcriptome Data", "Subsubsection",
 CellID->576856357],

Cell[TextData[{
 "First, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["BootstrapGeneral"]], "paclet:MathIOmica/ref/BootstrapGeneral"},
   
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1399228810],

Cell[BoxData[GridBox[{
   {
    RowBox[{"BootstrapGeneral", "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["numberResampled", "TI"]}], "]"}], Cell[TextData[{
     "performs a resampling of the ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " data with replacement, and generates a new association structure with \
numbering corresponding to the ",
     Cell[BoxData[
      StyleBox["numberResampled", "TI"]], "InlineFormula"],
     " of new identities."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1661281776],

Cell["\<\
We can perform resampling of an OmicsObject to create a bootstrap dataset to \
be used for statistical considerations.\
\>", "Caption",
 CellID->2000128109],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->809854710],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"rnaLongitudinal", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[88]:=",
 CellID->2018927283],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "5.5402`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.00246625`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "12.7439`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99990"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99996", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.347246`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "12.2697`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 88, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 88, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 88, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[88], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[88]=",
 CellID->1775673247]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Transcriptome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->1483609541],

Cell[TextData[{
 "We normalize the transcriptome bootstrap data using the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileNormalization"]], 
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function:"
}], "MathCaption",
 CellID->214676973],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapQuantileNormed", "=", 
   RowBox[{"QuantileNormalization", "[", 
    RowBox[{"rnaBootstrap", ",", 
     RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[89]:=",
 CellID->303358251],

Cell[TextData[{
 "We use  ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to tag zero values as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[]:"
}], "MathCaption",
 CellID->375344567],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapZeroTagged", "=", 
   RowBox[{"LowValueTag", "[", 
    RowBox[{"rnaBootstrapQuantileNormed", ",", "0"}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[90]:=",
 CellID->1256666330],

Cell[TextData[{
 "We next use  ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " again to set all FPKM values <1 to unity:"
}], "MathCaption",
 CellID->1035495647],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapNoiseAdjusted", "=", 
   RowBox[{"LowValueTag", "[", 
    RowBox[{"rnaBootstrapZeroTagged", ",", "1", ",", 
     RowBox[{"ValueReplacement", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[91]:=",
 CellID->367863841],

Cell["\<\
Next, we filter out data where the reference point \"255\" is missing and \
retain data with at least 3/4 points available:\
\>", "MathCaption",
 CellID->61312748],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapFiltered", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"rnaBootstrapNoiseAdjusted", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[92]:=",
 CellID->1838688723],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6719999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6719999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.5, 0}, {0.5, 72929.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{35.65072057646117, 
           133.66873498799038`}, {-48.971932560236766`, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 72929]& ,
        TagBoxNote->"72929"],
       StyleBox["72929", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[72929, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 27071.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{133.16873498799038`, 231.1867493995196}, {
           24.454727201168545`, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 27071]& ,
        TagBoxNote->"27071"],
       StyleBox["27071", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[27071, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-0.54, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{-0.5, 1.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[92]:=",
 CellID->793810163],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "72929"}], ",", 
     RowBox[{"1", "\[Rule]", "27071"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[92]:=",
 CellID->1398994377],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$49768$49842 = False, DynamicChart`click$49774$49842 = 
       False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.4406715590832082`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 72929]& , TagBoxNote -> "72929"], 
                    StyleBox["72929", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[72929, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$49768$49842, 
                    FEPrivate`Not[DynamicChart`click$49768$49842]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$49768$49842, {{{1., 0.}, {0., 1.}}, {
                    0.1319274151555435, 0.15031685577598033`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$49768$49842}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.4406715590832082`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 27071]& , 
                    TagBoxNote -> "27071"], 
                    StyleBox["27071", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[27071, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$49774$49842, 
                    FEPrivate`Not[DynamicChart`click$49774$49842]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$49774$49842, {{{1., 0.}, {0., 
                    1.}}, {-0.13192741515554346`, -0.1503168557759804}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$49774$49842}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["72929", {}, StripOnInput -> False], 
                    TraditionalForm], {0.43975805051847827`, 
                    0.5010561859199344}]}}}, StatusArea[#, 72929]& , 
                 TagBoxNote -> "72929"], 
                StyleBox["72929", {}, StripOnInput -> False]], Annotation[#, 
                Style[72929, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$49768$49842, 
                  FEPrivate`Not[DynamicChart`click$49768$49842]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$49768$49842, {{{1., 0.}, {0., 1.}}, {
                0.1319274151555435, 0.15031685577598033`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$49768$49842}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["27071", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.43975805051847816`, \
-0.5010561859199345}]}}}, StatusArea[#, 27071]& , TagBoxNote -> "27071"], 
                StyleBox["27071", {}, StripOnInput -> False]], Annotation[#, 
                Style[27071, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$49774$49842, 
                  FEPrivate`Not[DynamicChart`click$49774$49842]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$49774$49842, {{{1., 0.}, {0., 
                1.}}, {-0.13192741515554346`, -0.1503168557759804}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$49774$49842}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}], 
   FormBox[
    FormBox[
     TemplateBox[{"0", "1"}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[92]:=",
 CellID->100043236]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "4.7468285833333335`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "11.660224000000001`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99992"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "11.26338088888889`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[92], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[92]=",
 CellID->1866962899]
}, Open  ]],

Cell["\<\
For each bootstrap member we now extract a time series (list of values) \
corresponding to the series times:\
\>", "MathCaption",
 CellID->274183705],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesBootstrapRNA", "=", 
  RowBox[{"CreateTimeSeries", "[", "rnaBootstrapFiltered", "]"}]}]], "Input",
 CellLabel->"In[93]:=",
 CellID->1853107120],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "4.7468285833333335`", ",", "1", ",", "204.56655238095237`", ",",
               "1", ",", "1", ",", "1", ",", "3.217454`", ",", "6.863135`", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
              "6.6208108333333335`", ",", "1.1237841555555557`"}], "}"}]}], 
           ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "28.96456190476191`", ",", "1", ",", "1", ",", 
              "9.124801666666668`", ",", "1", ",", "1", ",", "1", ",", 
              "1.018968911111111`", ",", "18.96063425`", ",", "1"}], 
             "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[93], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[93]=",
 CellID->1161877176]
}, Open  ]],

Cell[TextData[{
 "We use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement a logarithm:"
}], "MathCaption",
 CellID->373642571],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesBootstrapRNALog", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Log", ",", "timeSeriesBootstrapRNA"}], "]"}]}]], "Input",
 CellLabel->"In[94]:=",
 CellID->568506969],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1.557476728391234`", ",", "0", ",", "5.320893362054563`", ",", 
              "0", ",", "0", ",", "0", ",", "1.1685903635716475`", ",", 
              "1.9261643344309773`", ",", "0", ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "1.8902178448251994`", ",", 
              "0.11670170060702972`"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "3.3660730794475615`", ",", "0", ",", "0", ",", 
              "2.210996164072526`", ",", "0", ",", "0", ",", "0", ",", 
              "0.018791244561346027`", ",", "2.9423649482715892`", ",", "0"}],
              "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[94], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[94]=",
 CellID->600894861]
}, Open  ]],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->369078912],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesBootstrapRNALog", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[95]:=",
 CellID->1176501448],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1.557476728391234`", ",", "0", ",", "5.320893362054563`", ",", 
              "0", ",", "0", ",", "0", ",", "1.1685903635716475`", ",", 
              "1.9261643344309773`", ",", "0", ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "1.8902178448251994`", ",", 
              "0.11670170060702972`"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "3.3660730794475615`", ",", "0", ",", "0", ",", 
              "2.210996164072526`", ",", "0", ",", "0", ",", "0", ",", 
              "0.018791244561346027`", ",", "2.9423649482715892`", ",", "0"}],
              "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[95], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[95]=",
 CellID->1771820633]
}, Open  ]],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1458062219],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedBootstrapRNACompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "rnaBootstrapCompared"}], "]"}]}]], "Input",
 CellLabel->"In[96]:=",
 CellID->715818816],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.24812700467967763`", ",", "0.`", ",", "0.8476899256853185`", 
              ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.1861721728003447`", 
              ",", "0.3068639024333002`", ",", "0.`", ",", "0.`", ",", "0.`", 
              ",", "0.`", ",", "0.`", ",", "0.3011371428406584`", ",", 
              "0.01859215157747957`"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", "0.`", ",", 
              "0.`", ",", "0.`", ",", 
              TemplateBox[{"5"},
               "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
              "0.0037675423468814012`", ",", "0.5899281714099865`", ",", 
              "0.`"}], "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 96, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 96, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 96, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[96], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[96]=",
 CellID->1492281749]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->841142010],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedBootstrapRNACompared", "]"}]}]], "Input",\

 CellLabel->"In[97]:=",
 CellID->188913869],

Cell[BoxData["\<\"Removed series and returning filtered list. If you would \
like a list of removed keys run the command \
ConstantSeriesClean[data,ReturnDropped \[Rule] True].\"\>"], "Print",
 CellLabel->"During evaluation of In[97]:=",
 CellID->1269750011],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.24812700467967763`", ",", "0.`", ",", "0.8476899256853185`", 
              ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.1861721728003447`", 
              ",", "0.3068639024333002`", ",", "0.`", ",", "0.`", ",", "0.`", 
              ",", "0.`", ",", "0.`", ",", "0.3011371428406584`", ",", 
              "0.01859215157747957`"}], "}"}]}], ",", 
           TemplateBox[{"99965"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", "0.`", ",", 
              "0.`", ",", "0.`", ",", 
              TemplateBox[{"5"},
               "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
              "0.0037675423468814012`", ",", "0.5899281714099865`", ",", 
              "0.`"}], "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 97, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 97, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 97, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[97], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[97]=",
 CellID->1143434638]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Transcriptome Time Series", "Subsection",
 CellID->834625544],

Cell[TextData[{
 "In this subsection we will classify the transcriptome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1375671789],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesClassification",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClassification"], "[", 
     RowBox[{
      StyleBox["data", "TI"], ",", " ", 
      StyleBox["setTimes", "TI"]}], "]"}], Cell[TextData[{
     "takes a ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " association (or list of lists) of values corresponding to intensities \
collected over time and classifies the values into classes (groups) that show \
distinct similar temporal patterns. ",
     Cell[BoxData["TimeSeriesClassification"], "InlineFormula"],
     " takes as inputs:\n",
     Cell[BoxData[GridBox[{
        {
         StyleBox["data", "TI"], Cell[TextData[{
          
          "Association with series as values, or a list of series, where the \
series contain information regarding time intensities/observations. Each \
series may include ",
          Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData["Missing"]], "paclet:ref/Missing"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          " data points and may be entered as list of ",
          Cell[BoxData["N"], "InlineFormula"],
          " signal intensities corresponding one-to-one to the ",
          Cell[BoxData["N"], "InlineFormula"],
          " ",
          Cell[BoxData[
           StyleBox["setTimes", "TI"]], "InlineFormula"],
          " with ",
          Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData["Missing"]], "paclet:ref/Missing"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          " inserted appropriately if the data is absent, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["X", "1"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "1"], ")"}]}]}], ",", 
             RowBox[{
              SubscriptBox["X", "2"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "2"], ")"}]}]}], ",", "...", ",", 
             RowBox[{
              SubscriptBox["X", "N"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "N"], ")"}]}]}]}], "}"}]]],
          
          ". Alternatively, each series data may be a list of pairs of values \
{{",
          Cell[BoxData[
           SubscriptBox["t", "1"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "1"]]],
          "},{",
          Cell[BoxData[
           SubscriptBox["t", "2"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "2"]]],
          "},. ..,",
          Cell[BoxData[
           RowBox[{"{", 
            SubscriptBox["t", "N"]}]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "N"]]],
          "}} for only existing measurements."
         }], "TableText"]},
        {
         StyleBox["setTimes", "TI"], Cell[TextData[{
          "A global complete set of all possible ",
          Cell[BoxData["N"], "InlineFormula"],
          
          " times during which all data series could have been collected in \
the window of the experiment, including times for which no values were \
reported or are missing, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["t", "1"], ",", 
             SubscriptBox["t", "2"], ",", "...", ",", 
             SubscriptBox["t", "N"]}], "}"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]]]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->628162865],

Cell["Classifying a set of time series based on temporal behavior.", "Caption",
 CellID->503663403],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AutocorrelationCutoffs", 
    RowBox[{"{", "0", "}"}], Cell[TextData[{
     "Cutoffs, for \"Autocorrelation\" and \"InterpolatedAutocorrelation\" \
methods, for different lags that will be used to filter out data series for \
which the lags are not within cutoffs. The list length corresponds to cuttofs \
at different lags, with the ith lag cutoff provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "jk"]}], "}"}]}], TraditionalForm]]],
     " up to ",
     Cell[BoxData["k"], "InlineFormula"],
     ", where ",
     Cell[BoxData[
      RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "  ", "n"}]], 
      "InlineFormula"],
     ", and typically ",
     Cell[BoxData[
      RowBox[{"n", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "setTimes", "]"}], "/", "2"}], "]"}]}]], 
      "InlineFormula"],
     ". The classification will only consider lags up to the length of the \
list provided. The cutoffs are user-provided and typically calculated through \
simulation."
    }], "TableText"]},
   {"AutocorrelationLogic", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "Option to return the autocorrelation logic list for each signal, with \
the default set to ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["False"]], "paclet:ref/False"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". If set to True, a logic vector is returned indicating whether or not \
at a particular lag the autocorrelation for a signal is above or below the ",
     Cell[BoxData["AutocorrelationCutoffs"], "InlineFormula"],
     "."
    }], "TableText"]},
   {"AutocorrelationOptions", 
    RowBox[{"{", 
     RowBox[{
      ButtonBox["UpperFrequencyFactor",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/UpperFrequencyFactor"], " ", 
      "\[Rule]", "  ", "1"}], "}"}], Cell[TextData[{
     "Options that are used by the internal Autocorrelation function in the \
case that  the ",
     Cell[BoxData[
      RowBox[{"Method", "\[Rule]", " ", "\"\<Autocorrelation\>\""}]], 
      "InlineFormula"],
     " is set."
    }], "TableText"]},
   {"InterpolationDeltaT", "\"\<Auto\>\"", Cell["\<\
Time step used to grid the time window over which calculations will be \
performed. If set to \"Auto\" the step will correspond to dividing the span \
of the interval into a number of equal steps equal to the number of input \
time points.\
\>", "TableText"]},
   {"InterpolationOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "Options list for the internal Interpolation function used to \
interpolate between data points that have ",
     Cell[BoxData["Missing"], "InlineFormula"],
     " values or uneven spacing."
    }], "TableText"]},
   {"LombScargleCutoff", "0", Cell["\<\
Cutoff value for \"LombScargle\" method, for filtering the highest intensity \
observed in the power spectrum. The cutoff is user-provided and typically \
calculated through simulation. \
\>", "TableText"]},
   {"LombScargleOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PairReturn", "\[Rule]", "  ", "False"}], ",", 
      RowBox[{"NormalizeIntensities", "\[Rule]", " ", "True"}]}], "}"}], Cell[
    TextData[{
     "Options that are used by the internal LombScargle function if the case \
that the ",
     Cell[BoxData[
      RowBox[{"Method", "\[Rule]", " ", "\"\<LombScargle\>\""}]], 
      "InlineFormula"],
     " is set."
    }], "TableText"]},
   {
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], "\"\<LombScargle\>\"", Cell["\<\
Selection of which algorithm to use in the classification scheme.\
\>", "TableText"]},
   {"ReturnAllSpikes", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Option whether each signal may maintain unique membership to each spike \
class, or be allowed to belong to multiple classes. Used in \"Autocorrelation\
\" and \"InterpolatedAutocorrelation\" methods. If set to False, first spike \
maxima are classified, and only signals found not to belong to spike maxima \
are then considered for membership in the spike minima class.\
\>", "TableText"]},
   {"ReturnData", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell["\<\
If set to True will return input keys to data associations in the \
classification. If set to False will only return the keys of the input data \
in the classification.\
\>", "TableText"]},
   {"ReturnModels", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Whether to return the models as well as the classification information for \
the input data. The data is returned as an association with the  key \
\"TimeSeriesClasses\" for classification groups and one of the following: (i) \
\"Models\" for model-based methods, (ii) \"LombScargle\" for periodograms in \
the \"LombScargle\" method, (iii) \"Autocorrelations\" for autocorrelation \
based methods.\
\>", "TableText"]},
   {"SpikeCutoffs", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"1", " ", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{".99", ",", 
         RowBox[{"-", "99"}]}], "}"}]}], ",", " ", 
      RowBox[{"2", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{".99", ",", 
         RowBox[{"-", "99"}]}], "}"}]}]}], "|>"}], Cell[TextData[{
     "Association with number, ",
     Cell[BoxData["n"], "InlineFormula"],
     ", of data points as keys, and values corresponding to cutoffs, in the \
form ",
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{"n", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Cutoff", "n"]}], ",", 
          RowBox[{"Minimum", " ", "Spike", " ", 
           SubscriptBox["Cutoff", "n"]}]}], "}"}]}], "|>"}]], "InlineFormula"],
     " used to call spike maxima and minima for a time series with this \
number of datapoints. The values are provided by the user depending on data \
approach based on simulation. The default values are only place-holders and \
should be replaced by real values. The association must have corresponding \
keys for all lengths of input datasets, so that ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Keys", "[", 
        RowBox[{"OptionValue", "[", "SpikeCutoffs", "]"}], "]"}], 
       "\[Element]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Possible", " ", "lengths", " ", "of", " ", "numeric", " ", "data"}],
          "}"}], "."}]}]], "InlineFormula"],
     " ,  i.e. all possible lengths of series constructed by excluding ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Missing"]], "paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or other non-numeric values)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->495990132],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1722114517],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " uses multiple methods to classify data. The periodogram/autocorrelation \
methods used use cutoffs from simulation/user-provided values, to assess \
class membership based on statistical significance. In this tutorial we will \
use the \"LombScargle\" method, to classify data based on a Lomb-Scargle \
computation of a periodogram. The data is classified based into classes major \
(highest intensity) frequencies based on the generated periodogram for a \
signal, when the intensity of this frequency is above an intensity threshold \
cutoff. Additionally, data that displays spikey behavior in the real \
intensity, that is not classified into any frequency classes, is classified \
as a SpikeMaximum or SpikeMinimum if the spike is higher or lower \
respectively than what one would expect from a random signal."
}], "Text",
 CellID->1268036459],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<LombScargle\>\"", Cell[TextData[{
     "Classification based on periodograms (power spectra) generated by a \
Lomb-Scargle computation as implemented internally by the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function. The data is classified into classes of major (highest \
intensity)  frequencies and spikes (maxima or minima in real signal \
intensity), depending on cutoffs typically provided by simulation and passed \
to the function by the ",
     Cell[BoxData["LombScargleCutoffs"], "InlineFormula"],
     " and ",
     Cell[BoxData["SpikeCutoffs"], "InlineFormula"],
     " option values. The returned {computed classification vector} for this \
method is the intensity list of the periodogram for each signal."
    }], "TableText"]},
   {"\"\<Autocorrelation\>\"", Cell[TextData[{
     "Classification based on autocorrelations generated by a Lomb-Scargle \
approach using an inverser Fourier transform of spectral intensities, as \
implemented through the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Autocorrelation"]], 
        "paclet:MathIOmica/ref/Autocorrelation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function. The data is classified into autocorrelations at different \
lags and spikes (maxima or minima) classes, depending on cutoffs typically \
provided by simulation. The returned {computed classification vector} for \
this method is the autocorrelation list for each signal."
    }], "TableText"]},
   {"\"\<InterpolatedAutocorrelation\>\"", Cell[TextData[{
     "Classification based on autocorrelations generated directly in time, \
with ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Missing"]], "paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " data handled through interpolation. The data is classified into \
autocorrelations at different lags and spikes (maxima or minima) classes \
depending on cutoffs typically provided by simulation. The returned {computed \
classification  vector} for this method is the autocorrelation list for each \
signal."
    }], "TableText"]},
   {"\"\<TimeSeriesModelAggregate\>\"", Cell[TextData[{
     "Classification based on model fitting of time series through ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesModelFit"]], "paclet:ref/TimeSeriesModelFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and all available models therein. The data is classified into \
aggregate model classes. The returned {computed classification vector} for \
this method is the actual input signal."
    }], "TableText"]},
   {"\"\<TimeSeriesModelDetailed\>\"", Cell[TextData[{
     "Classification based on model fitting of time series through ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesModelFit"]], "paclet:ref/TimeSeriesModelFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and all available models therein. The data is classified into model \
classes based on individual model degree parameters.  The returned {computed \
classification vector} for this method is the \"BestFitParameters\" for the \
model fit. If this list is empty an integer list is returned {token integer} \
- this is used in subsequent clustering applications."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1644998689],

Cell[TextData[{
 "Methods for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->788494545],

Cell[TextData[{
 "To create the cutoffs for the classification we will first use the \
bootstrap time series set created in the previous subsection, and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileEstimator"]], 
    "paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->1104163398],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["QuantileEstimator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/QuantileEstimator"], "[", 
     RowBox[{
      StyleBox["data", "TI"], ",", " ", 
      StyleBox["timepoints", "TI"]}], "]"}], Cell[TextData[{
     "obtains the quantile estimator following bootstrap for time series.  It \
takes as inputs:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["data", "TI"], Cell["\<\
Association or list with series as values, from which to generate a \
distribution.\
\>", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["timepoints", "TI"], Cell[
         "Timepoints over which the time series run.", "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}},
      GridBoxDividers->{"Rows" -> {{True, True, True}}}}]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->219567939],

Cell["\<\
Estimating  the quantile value that can be used as a cutoff for \
classification of time series based on bootstrap simulations.\
\>", "Caption",
 CellID->908945433],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AutocorrelationOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Specific options when calculating autocorrelations for the time series.\
\>", "TableText"]},
   {"InterpolationDeltaT", "\"\<Auto\>\"", Cell["\<\
Time step used to grid the time window over which calculations will be \
performed. If set to \"Auto\" the step will correspond to dividing the span \
of the interval into a number of equal steps equal to the number of input \
time points.\
\>", "TableText"]},
   {"InterpolationOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Options list for the internal Interpolation function used to interpolate \
between data points that have Missing values or uneven spacing.\
\>", "TableText"]},
   {"LombScargleOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PairReturn", " ", "\[Rule]", "  ", "False"}], ",", 
      RowBox[{"NormalizeIntensities", "\[Rule]", " ", "True"}]}], "}"}], 
    Cell["\<\
Specific options when calculating LombScargle periodograms for the time \
series.\
\>", "TableText"]},
   {
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], "\"\<LombScargle\>\"", Cell["\<\
Method of calculation. Choices include one of the following: \
{\"LombScargle\",\"Autocorrelation\", \
\"InterpolatedAutocorrelation\",\"Spikes\"}\
\>", "TableText"]},
   {"QuantileValue", "0.95", Cell["Which quantile to extract.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1624929440],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileEstimator"]], 
    "paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->639559181],

Cell[TextData[{
 "Depending on the cutoffs we would like to generate, we select the \
appropriate Method (also considering the Method that the downstream ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " will use)."
}], "Text",
 CellID->67687095],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<Autocorrelation\>\"", Cell[TextData[{
     "List of values corresponding to selected quantile of autocorrelations, \
with the ith lag quantile provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "ck"]}], "}"}]}], TraditionalForm]]],
     " up to k lags, where 1\[LessEqual] k \[LessEqual] n, and typically \
n=Floor[Length[timepoints]/2].  The method utilizes the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Autocorrelation"]], 
        "paclet:MathIOmica/ref/Autocorrelation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function internally."
    }], "TableText"]},
   {"\"\<InterpolatedAutocorrelation\>\"", Cell[TextData[{
     "List of values corresponding to selected quantile for autocorrelations, \
with the ith lag quantile provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "ck"]}], "}"}]}], TraditionalForm]]],
     " up to k lags, where 1\[LessEqual] k \[LessEqual] n, and typically \
n=(Length[timepoints]-1). The method utilizes an ",
     ButtonBox["Interpolation",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Interpolation"],
     " followed by a ",
     ButtonBox["CorrelationFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/CorrelationFunction"],
     " implementation to compute autocorrelations, i.e. missing data or \
uneven sampling is handled by data interpolation."
    }], "TableText"]},
   {"\"\<LombScargle\>\"", Cell[TextData[{
     "Single value corresponding to selected quantile of maximum peak \
intensity of periodogram. The method utilizes the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function internally."
    }], "TableText"]},
   {"\"\<Spikes\>\"", Cell[TextData[{
     "Association with number, n, of data points as keys, and values \
corresponding to quantiles for maxima and minima of the series, in the form ",
     
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{"n", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Quantile", "n"]}], ",", 
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Quantile", "n"]}]}], "}"}]}], "|>"}]], 
      "InlineFormula"],
     " . The keys are generated automatically so that so that ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Keys", "[", "output", "]"}], "\[Element]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Possible", " ", "lengths", " ", "of", " ", "numeric", " ", "data"}],
          "}"}], "."}]}]], "InlineFormula"],
     " ,  i.e. all possible lengths of input series constructed by excluding \
Missing or other non-numeric values)."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->131328315],

Cell[TextData[{
 ButtonBox["Method",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Method"],
 " selection and output for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileEstimator"]], 
    "paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->751094438],

Cell[TextData[{
 "The default output for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " is an ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Association"]], "paclet:ref/Association"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". The general output structure is for M output classes of each having ",
 Cell[BoxData[
  SubscriptBox["m", "i"]], "InlineFormula"],
 " members: "
}], "Text",
 CellID->1062814029],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "11"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "11"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "11"]}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["Member", "12"], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "12"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "12"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      " ", 
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"1", 
         SubscriptBox["m", "1"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   RowBox[{
    SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "21"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "21"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "21"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "22"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "22"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "22"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"2", 
         SubscriptBox["m", "2"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   " ", "...", ",", " ", 
   RowBox[{
    SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "M1"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M1"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M1"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "M2"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M2"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        SubscriptBox["Mm", "M"]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "|>"}]], "InlineFormula"]], "Text",
 CellID->2093893304],

Cell["\<\
Before we classify our transcriptome data, we estimate for the \
\"LombScargle\" Method a 0.95 quantile cutoff from the bootstrap \
transcriptome data:\
\>", "MathCaption",
 CellID->1669899255],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95RNA", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"rnaBootstrapFinalTimeSeries", ",", "timesRNA"}], "]"}]}]], "Input",\

 CellLabel->"In[263]:=",
 CellID->532996142],

Cell[BoxData["0.8602315900893768`"], "Output",
 CellID->177650624]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
transcriptome data:\
\>", "MathCaption",
 CellID->365627628],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95RNASpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"rnaBootstrapFinalTimeSeries", ",", "timesRNA", ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[264]:=",
 CellID->186560353],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"14", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.884016143838748`", ",", 
      RowBox[{"-", "0.3480693290704187`"}]}], "}"}]}], ",", 
   RowBox[{"15", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.858813122520236`", ",", 
      RowBox[{"-", "0.3376351832224358`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[264]=",
 CellID->811386742]
}, Open  ]],

Cell["\<\
Now we can classify the transcriptome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1987903082],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"rnaFinalTimeSeries", ",", "timesRNA", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95RNA"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95RNASpikes"}]}], "]"}]}]], "Input",
 CellLabel->"In[265]:=",
 CellID->136519148],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[265]:=",
 CellID->1026543908],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.08553735041954855`", ",", "0.2041353122187633`", ",", 
                   "0.21930279158524527`", ",", "0.3784958694491304`", ",", 
                   "0.5848999163284979`", ",", "0.34601221698539536`", ",", 
                   "0.5457352214922402`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
                   TemplateBox[{"7"},
                    "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
                   "0.07591897179810148`", ",", "0.`"}], "}"}]}], "}"}]}], 
              ",", 
              TemplateBox[{"821"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}], ",", 
           
           TemplateBox[{"7"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 265, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 265, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 265, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[265], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[265]=",
 CellID->755245404]
}, Open  ]],

Cell[TextData[{
 "The default output for TimeSeriesClassification is an Association with \
outer keys being the classification classes,  inner keys being the class \
members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". The general output structure is for M output classes of each having ",
 Cell[BoxData[
  SubscriptBox["m", "i"]], "InlineFormula"],
 " members: "
}], "Text",
 CellID->673783308],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "11"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "11"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "11"]}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["Member", "12"], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "12"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "12"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      " ", 
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"1", 
         SubscriptBox["m", "1"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   RowBox[{
    SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "21"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "21"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "21"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "22"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "22"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "22"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"2", 
         SubscriptBox["m", "2"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   " ", "...", ",", " ", 
   RowBox[{
    SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "M1"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M1"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M1"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "M2"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M2"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        SubscriptBox["Mm", "M"]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "|>"}]], "InlineFormula"]], "Text",
 CellID->594786925],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->1134620377],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "rnaClassification", "]"}]], "Input",
 CellLabel->"In[101]:=",
 CellID->2057374526],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[101]=",
 CellID->568030100]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->172558847],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", "rnaClassification"}]], "Input",\

 CellLabel->"In[266]:=",
 CellID->1093618079],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "822"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "5963"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "116"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "35"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "61"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[266]=",
 CellID->1781151258]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->47471690],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "rnaClassification"}]], "Input",
 CellLabel->"In[267]:=",
 CellID->1140260793],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"PADI4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AHDC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC28B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AGO1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JAK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C1orf52\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IARS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"URB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HSPA14\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"WBP1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PDZD8\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LOC102288414\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TRMT112\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DRAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CDK2AP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FAM168A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FLI1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EFCAB4B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EMG1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NDUFA12\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ELK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SSH1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C12orf49\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IPO5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TMCO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KIAA0586\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JKAMP\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PCNX\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EHD4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CLPX\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AAGAB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RCCD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FAM173A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LINC00921\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZC3H7A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GLG1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBTPS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TNFRSF13B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZNF207\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ACLY\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PSME3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TEX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKCA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ATP9B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBP\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ADNP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HOOK2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EMR3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SDHAF1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZNF529\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RPL18\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CTU1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GEMIN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GMCL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"COA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MRPS9\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GTF3C3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NDUFS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RALGAPA2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LOC284801\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SAMHD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SERINC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"USP25\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RUNX1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DSCR3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"THAP7\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAPK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PITPNB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EWSR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NPTXR\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TCF20\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ARPC4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STT3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SNRK-AS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC12\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKAR2A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GSK3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PTPLB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DNAJC13\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LRCH3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KLF3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ANTXR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GPRIN3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPP4B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PTGER4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NNT\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC125\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"POC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ERAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TBC1D22B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HACE1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SYNJ2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CYTH3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAG3L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAG3L3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MTERF\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBLAC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TRIM56\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AHCYL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RNF122\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ADAM9\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKDC\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AGO2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ERMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KDM4C\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FOCAD\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CEP78\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RC3H2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GTF3C4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZRSR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PDK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CASK\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DDX3X\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TIMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ARHGEF6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IDS\"\>", ",", "\<\"RNA\"\>"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[267]=",
 CellID->384783444]
}, Open  ]],

Cell[TextData[{
 "We may also want to know what these frequencies correspond to. The \
\"LombScargle\" method uses a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " transformation."
}], "Text",
 CellID->1070903617],

Cell[BoxData[GridBox[{
   {
    ButtonBox[
     RowBox[{"LombScargle", "[", 
      RowBox[{
       StyleBox["data", "TI"], ",", " ", 
       StyleBox["setTimes", "TI"]}], "]"}],
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/"], Cell[TextData[{
     "calculates the Lomb-Scargle power spectrum for time series ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " that runs over specified ",
     Cell[BoxData[
      StyleBox["setTimes", "TI"]], "InlineFormula"],
     ". It takes as input:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["data", "TI"], Cell[TextData[{
          
          "Time series (data as a list; list may be the value of a single key \
in an association). The series may include Missing data points. Data may be \
entered as list of N signal intensities corresponding one-to-one to the N \
setTimes with Missing inserted appropriately if the data is absent, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["X", "1"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "1"], ")"}]}]}], ",", 
             RowBox[{
              SubscriptBox["X", "2"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "2"], ")"}]}]}], ",", "...", ",", 
             RowBox[{
              SubscriptBox["X", "N"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "N"], ")"}]}]}]}], "}"}]]],
          ". Alternatively, the data may be a list of pairs of values {{",
          Cell[BoxData[
           SubscriptBox["t", "1"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "1"]]],
          "},{",
          Cell[BoxData[
           SubscriptBox["t", "2"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "2"]]],
          "},. ..,",
          Cell[BoxData[
           RowBox[{"{", 
            SubscriptBox["t", "N"]}]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "N"]]],
          "}} for only existing measurements."
         }], "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["setTimes", "TI"], Cell[TextData[{
          
          "A complete set of all possible N times during which data could \
have been collected in the window of the experiment, including times for \
which no data was collected,",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["t", "1"], ",", 
             SubscriptBox["t", "2"], ",", "...", ",", 
             SubscriptBox["t", "N"]}], "}"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}},
      GridBoxDividers->{"Rows" -> {{True, True, True}}}}]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1990717933],

Cell["\<\
Calculating the power spectrum of a (possibly unevenly sampled) time series.\
\>", "Caption",
 CellID->201079671],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"FrequenciesOnly", "False", Cell[TextData[{
     "Whether to return only the computation frequencies. An association of \
frequencies \"f\" ordered from low to high by index i is returned in the \
form:\n",
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<f1\>\"", "\[Rule]", " ", 
         SubscriptBox["frequency", "1"]}], ",", 
        RowBox[{"\"\<f2\>\"", "\[Rule]", " ", 
         SubscriptBox["frequency", "2"]}], ",", " ", "...", ",", 
        RowBox[{"\"\<fi\>\"", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["frequency", 
            RowBox[{"i", ",", "...", ","}]], "\"\<fn\>\""}], "\[Rule]", " ", 
          SubscriptBox["frequency", "n"]}]}]}], "|>"}]], "InlineFormula"]
    }], "TableText"]},
   {"NormalizeIntensities", "False", Cell[
    "Whether the intensities list should be normalized or not.", "TableText"]},
   {
    ButtonBox["OversamplingRate",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/OversamplingRate"], "1", Cell["\<\
Rate at which to oversample the time series using zero-padding.\
\>", "TableText"]},
   {"PairReturn", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Whether data should be returned as {frequency list,intensity list} or as \
pairs: {{frequency1,intensity1}, {frequency2, \
intensity2},...,{frequencyN,intensityN}.\
\>", "TableText"]},
   {
    ButtonBox["UpperFrequencyFactor",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/UpperFrequencyFactor"], "1", 
    Cell["\<\
Value \[GreaterEqual] 1,  by which to scale the upper Nyquist cutoff \
frequency and increase spectral resolution. \
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->3905959],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1222943503],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["True"]], "paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->661398041],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"rnaFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesRNA", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[104]:=",
 CellID->741518215],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[104]=",
 CellID->1561171098]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proteomic Data", "Section",
 CellID->1387790784],

Cell[CellGroupData[{

Cell["Importing OmicsObject Proteome Data", "Subsection",
 CellID->1225055698],

Cell[TextData[{
 "We now import the proteomics data example (for details on how to import \
such data please refer to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporter"]], "paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirect"]], 
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirectLabeled"]], 
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObjectCreator"]], 
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->72301240],

Cell["We import the proteomics OmicsObject MathIOmica example:", "MathCaption",
 CellID->1419719176],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", "\"\<proteinExample\>\""}], 
     "}"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[105]:=",
 CellID->458823941],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.937`", "}"}], ",", 
                 RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.073`", "}"}], ",", 
                 RowBox[{"{", "24", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.059`", "}"}], ",", 
                 RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5219"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"9"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 105, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 105, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 105, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[105], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[105]=",
 CellID->647445040]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->1754470356],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", "proteinExample"}]], "Input",
 CellLabel->"In[106]:=",
 CellID->285316335],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"14\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>", ",", "\<\"21\"\>"}], "}"}]], "Output",
 CellLabel->"Out[106]=",
 CellID->309147931]
}, Open  ]],

Cell["\<\
We notice that sample 8 is missing - this is because it was used as a \
reference in the proteomics experiment. Point 18 is missing as there was no \
sample for that time point. We will address this in the next section.\
\>", "Text",
 CellID->460190071],

Cell[TextData[{
 "We can get the expression raw data from any sample and entry. For example, \
the ",
 Cell[BoxData[
  SuperscriptBox["14", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["214", "th"]], "InlineFormula"],
 " entries in sample 12:"
}], "MathCaption",
 CellID->1259531385],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<12\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", "22"}], "}"}]}], "]"}], "@", 
  "proteinExample"}]], "Input",
 CellLabel->"In[107]:=",
 CellID->1197679216],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"A5PLN9\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1.057`", "}"}], ",", 
      RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"A6NGU5\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[107]=",
 CellID->1086334224]
}, Open  ]],

Cell[TextData[{
 "The keys correspond to UniProt accessions, and have been tagged with a \
\"Protein\" label as well. The  values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example: ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "relative", " ", "intensity", " ", "compared", " ", "to", " ", 
       "reference"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "number", " ", "of", " ", "unique", " ", "peptides", " ", "identified", 
       " ", "for", " ", "the", " ", "given", " ", "protein"}], "}"}]}], 
    "}"}]}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1823731250],

Cell["\<\
The measurement for each protein is a relative intensity, i.e. the ratio of \
the value for the protein compared to the reference timepoint that has been \
chosen as the healthy sample \"8\", day \"255\" (in the experiment this was \
TMT reporter with 126 amu). The last list, the \"metadata\", in the \
proteomics OmicsObject was chosen to be the number of unique peptides \
identified for the given protein.\
\>", "Text",
 CellID->220886326],

Cell[CellGroupData[{

Cell["Additional Information: Gene Translation", "Subsubsubsection",
 CellID->237385776],

Cell[TextData[{
 "As an aside, let us consider the form of the protein identifiers. \
MathIOmica can perform basic ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GeneTranslation"]], "paclet:MathIOmica/ref/GeneTranslation"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " going from one kind of identifier to another, using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GetGeneDictionary"]], 
    "paclet:MathIOmica/ref/GetGeneDictionary"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1605734052],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["GeneTranslation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/GeneTranslation"], "[", 
     RowBox[{
      StyleBox["inputIDList", "TI"], ",", 
      StyleBox["targetIDList", "TI"], ",", 
      StyleBox["geneDictionary", "TI"]}], "]"}], Cell[TextData[{
     "uses ",
     Cell[BoxData[
      StyleBox["geneDictionary", "TI"]], "InlineFormula"],
     " to convert ",
     Cell[BoxData[
      StyleBox["inputIDList", "TI"]], "InlineFormula"],
     " IDs to different annotations as indicated by ",
     Cell[BoxData[
      StyleBox["targetIDList", "TI"]], "InlineFormula"],
     ". It takes for inputs:\n",
     Cell[BoxData[GridBox[{
        {"inputIDList", Cell[TextData[{
          "List of ",
          Cell[BoxData["n"], "InlineFormula"],
          " IDs (strings) to be converted in the form ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["inputID", 
               RowBox[{"1", ","}]], 
              SubscriptBox["inputID", "2"]}], ",", "...", ",", 
             SubscriptBox["inputID", "n"]}], "}"}]], "InlineFormula"]
         }], "TableText"]},
        {"targetIDList", Cell[TextData[{
          
          "List of target identifier strings, as used in the gene \
geneDictionary,",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{"target", " ", 
              SubscriptBox["ID", "1"]}], ",", 
             SubscriptBox["targetID", "2"], ",", 
             RowBox[{"...", "target", " ", 
              SubscriptBox["ID", "k"]}]}], "}"}]], "InlineFormula"],
          
          ", e.g. {\"UniProt ID\",\"Gene Symbol\"}. Can also be provided as a \
single string for only one kind of IDs."
         }], "TableText"]},
        {"geneDictionary", Cell[TextData[{
          "Gene dictionary to base translation on in the form generated by ",
          Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData["GetGeneDictionary"]], 
             "paclet:MathIOmica/ref/GetGeneDictionary"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]]]
    }], "TableText"]},
   {
    ButtonBox[
     RowBox[{"GetGeneDictionary", "[", "]"}],
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/"], Cell["\<\
creates an ID/accession dictionary from a UCSC table search - typically of \
gene annotations. GetGeneDictionary uses MathIOmica data for the annotations..\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->730612315],

Cell["Translating gene identifiers using a gene dictionary.", "Caption",
 CellID->69474757],

Cell["We use GetGeneDictionary to define a gene dictionary:", "MathCaption",
 CellID->1155116896],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"geneDictionary", "=", 
  RowBox[{"GetGeneDictionary", "[", "]"}]}]], "Input",
 CellLabel->"In[108]:=",
 CellID->797502192],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"\<\"human\"\>", "\[Rule]", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"UCSC ID\"\>", "\[Rule]", 
              RowBox[{"{", 
               
               RowBox[{"\<\"uc001aaa.3\"\>", ",", "\<\"uc010nxr.1\"\>", 
                ",", "\<\"uc010nxq.1\"\>", ",", "\<\"uc001aal.1\"\>", 
                ",", "\<\"uc001aaq.2\"\>", ",", "\<\"uc001aar.2\"\>", 
                ",", "\<\"uc001aau.3\"\>", ",", "\<\"uc021oeh.1\"\>", ",", 
                TemplateBox[{"121567"},
                 "OutputSizeLimit`Skeleton"], ",", "\<\"uc022cfk.1\"\>", 
                ",", "\<\"uc031tkn.1\"\>", ",", "\<\"uc022cgh.1\"\>", 
                ",", "\<\"uc022cha.1\"\>", ",", "\<\"uc022chb.1\"\>", 
                ",", "\<\"uc022chc.1\"\>", ",", "\<\"uc022che.1\"\>", 
                ",", "\<\"uc022cpe.1\"\>"}], "}"}]}], ",", 
             TemplateBox[{"6"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{
              RowBox[{"\<\"HGU\"\>", "\[Ellipsis]", "\<\"x ID\"\>"}], 
              "\[Rule]", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[108], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[108]=",
 CellID->113335974]
}, Open  ]],

Cell["\<\
The current version of the gene dictionary has accessions for the following \
identifiers:\
\>", "MathCaption",
 CellID->811349928],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Keys"}], "]"}], "@", "geneDictionary"}]], "Input",
 CellLabel->"In[109]:=",
 CellID->1984565093],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"human\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"\<\"UCSC ID\"\>", ",", "\<\"UniProt ID\"\>", 
     ",", "\<\"Gene Symbol\"\>", ",", "\<\"RefSeq ID\"\>", 
     ",", "\<\"NCBI Protein Accession\"\>", ",", "\<\"Ensembl ID\"\>", 
     ",", "\<\"KEGG Gene ID\"\>", ",", "\<\"HGU133Plus2 Affymetrix ID\"\>"}], 
    "}"}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[109]=",
 CellID->19720129]
}, Open  ]],

Cell["\<\
We can now use GeneTranslation (setting the optional InputID to \"UniProt \
ID\") to convert our example \"UniProt ID\" accessions to \"Gene Symbol\":\
\>", "MathCaption",
 CellID->589880236],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneTranslation", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<A5PLN9\>\"", ",", "\"\<A6NGU5\>\""}], "}"}], ",", 
   RowBox[{"{", "\"\<Gene Symbol\>\"", "}"}], ",", "geneDictionary", ",", 
   RowBox[{"InputID", "\[Rule]", " ", 
    RowBox[{"{", "\"\<UniProt ID\>\"", "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[110]:=",
 CellID->557131970],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Gene Symbol\"\>", "\[Rule]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"A5PLN9\"\>", "\[Rule]", 
      RowBox[{"{", "\<\"TRAPPC13\"\>", "}"}]}], ",", 
     RowBox[{"\<\"A6NGU5\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[110]=",
 CellID->723726465]
}, Open  ]],

Cell["\<\
We note that an ID might not necessarily be annotated across all databases, \
as in the above example.\
\>", "Text",
 CellID->1398286274]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing of Proteome Data", "Subsection",
 CellID->1281067914],

Cell["\<\
We will next preprocess the imported proteome data. We will first perform a \
transformation on the data towards a normal distribution, then we will \
re-label the samples with real time and carry out filtering for unique \
peptides present in each protein identification, as well as for missing data. \
Finally, we will create the proteomics time series or relative intensities \
compared to the healthy reference point for each protein.\
\>", "Text",
 CellID->1997801546],

Cell[CellGroupData[{

Cell["Power Transformation, Labeling and Filtering", "Subsubsection",
 CellID->1973203023],

Cell[CellGroupData[{

Cell["Data Power Transformation", "Subsubsubsection",
 CellID->666869090],

Cell[TextData[{
 "To make the data comparable across time points, and as close to a normal \
distribution as possible for each sample, we normalize each time point \
/sample by using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ApplyBoxCoxTransform"]], 
    "paclet:MathIOmica/ref/ApplyBoxCoxTransform"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->611320926],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ApplyBoxCoxTransform",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ApplyBoxCoxTransform"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "for a given ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " set, computes the Box-Cox transformation at the maximum likelihood \
\[Lambda] parameter."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->351641937],

Cell["\<\
Applying a power transformation (Box-Cox) for an optimized parameter for each \
dataset.\
\>", "Caption",
 CellID->171038615],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which component of a list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["HorizontalSelection",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/HorizontalSelection"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Horizontal selection across components for a single level association with \
multi-list values.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1055700668],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ApplyBoxCoxTransform"]], 
    "paclet:MathIOmica/ref/ApplyBoxCoxTransform"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->651235562],

Cell[TextData[{
 "We apply a Box-Cox transformation to the proteomics data measurement in the \
OmicsObject, which is in the first list first component for each identifier. \
The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1312882619],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedProteinData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"proteinExample", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[111]:=",
 CellID->223704608],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.15263837861185456`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.15263837861185456`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->916487219],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.17708643543086405`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.17708643543086405`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1393161984],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4215814241016595`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4215814241016595],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1933820101],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.29228668269327357`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.29228668269327357`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1615625703],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4320423187977895`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4320423187977895],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->944609390],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3466732904603381`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3466732904603381],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1760647747],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3680613181947485`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3680613181947485],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->729347633],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.08340736160903305`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.08340736160903305],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->928300839],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", "0.134129663481085`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.134129663481085],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->200801478],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.16633647201933024`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.16633647201933024`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->584112668],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.08662842477048169`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.08662842477048169],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->805571796],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.199246934668649`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.199246934668649],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->507574800],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.22177775113087478`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.22177775113087478`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1093520098]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5221"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", 
                   TemplateBox[{"21"},
                    "OutputSizeLimit`Skeleton"]}], "}"}], ",", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton"]}], "}"}]}], ",", 
              TemplateBox[{"5223"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 111, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 111, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 111, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[111], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[111]=",
 CellID->627236060]
}, Open  ]],

Cell["\<\
We can plot the data to see what the resulting distributions look like:\
\>", "MathCaption",
 CellID->1190633123],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "transformedProteinData"}], ")"}]}]], "Input",
 CellLabel->"In[112]:=",
 CellID->718275515],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.609], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.609], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.9, 0}, {-1.8, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-82.10026737967915, -73.84625668449199}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.7, 0}, {-1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-66.5922459893048, -58.33823529411765}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.5, 0}, {-1.4, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-51.084224598930476`, -42.830213903743314`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-35.57620320855615, -27.322192513368975`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1.1, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-27.822192513368975`, -19.568181818181827`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-20.068181818181827`, -11.81417112299465}, {
              18.944799262775355`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.9, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-12.31417112299465, -4.060160427807489}, {
              18.944799262775355`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.9, 0}, {-0.8, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-4.560160427807489, 3.6938502673796805`}, {
              18.900813620652837`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 10.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{3.1938502673796805`, 11.44786096256685}, {
              18.592914125795218`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 10]& ,
           TagBoxNote->"10"],
          StyleBox["10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[10, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 18.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{10.94786096256685, 19.20187165775402}, {
              18.24102898881508, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 20.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{18.70187165775402, 26.95588235294118}, {
              18.15305770457005, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 20]& ,
           TagBoxNote->"20"],
          StyleBox["20", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[20, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 41.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.45588235294118, 34.70989304812835}, {
              17.229359219997193`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 96.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{34.20989304812835, 42.46390374331551}, {
              14.810148903258757`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 96]& ,
           TagBoxNote->"96"],
          StyleBox["96", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[96, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 171.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{41.96390374331551, 50.21791443850268}, {
              11.511225744069982`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 171]& ,
           TagBoxNote->"171"],
          StyleBox["171", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[171, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 511.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{49.71791443850268, 
              57.971925133689844`}, {-3.4438925775857925`, 
              19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 511]& ,
           TagBoxNote->"511"],
          StyleBox["511", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[511, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 1161.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{57.471925133689844`, 
              65.72593582887701}, {-32.03455995722183, 19.53277054702039}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1161]& ,
           TagBoxNote->"1161"],
          StyleBox["1161", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1161, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 1073.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{65.22593582887701, 
              73.47994652406418}, {-28.163823450440344`, 
              19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1073]& ,
           TagBoxNote->"1073"],
          StyleBox["1073", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1073, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 514.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{72.97994652406418, 
              81.23395721925135}, {-3.575849503953343, 19.532770547020387`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 514]& ,
           TagBoxNote->"514"],
          StyleBox["514", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[514, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 197.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{80.73395721925135, 88.98796791443851}, {
              10.367599048884541`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 197]& ,
           TagBoxNote->"197"],
          StyleBox["197", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[197, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 85.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.48796791443851, 96.74197860962568}, {
              15.293990966606444`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 85]& ,
           TagBoxNote->"85"],
          StyleBox["85", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[85, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 45.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{96.24197860962568, 104.49598930481284`}, {
              17.053416651507124`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 45]& ,
           TagBoxNote->"45"],
          StyleBox["45", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[45, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 35.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{103.99598930481284`, 112.25}, {
              17.493273072732293`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 35]& ,
           TagBoxNote->"35"],
          StyleBox["35", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[35, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 18.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.75, 120.00401069518718`}, {
              18.24102898881508, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 11.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{119.50401069518718`, 127.75802139037435`}, {
              18.5489284836727, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 7.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{127.25802139037435`, 135.51203208556151`}, {
              18.72487105216277, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 7]& ,
           TagBoxNote->"7"],
          StyleBox["7", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[7, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{135.01203208556151`, 143.26604278074868`}, {
              18.944799262775355`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{142.76604278074868`, 151.02005347593587`}, {
              18.768856694285287`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.5, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{173.78208556149735`, 182.03609625668452`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.5, 0}, {1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{181.53609625668452`, 189.79010695187168`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.522, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-1, 2], 
         Rational[3, 5]}, {All, All}}, {{-0.5, 0.6}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.476], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.476], Thickness[Small]}], 
        RectangleBox[{-1.2, 0}, {-1.15, 1.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 1.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 2.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 4.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 1.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 2.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 5.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 6.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 21.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 30.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 69.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 92.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 102.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 140.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 163.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 207.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 334.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 382.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 434.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 391.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 365.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 372.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 351.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 260.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 147.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 75.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 29.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 12.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 9.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 6.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 5.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 3.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 4.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 1.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 2.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 1.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 1.},
         RoundingRadius->0], RectangleBox[{1.15, 0}, {1.2, 1.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 3.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.78, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-3, 4], 
         Rational[3, 4]}, {All, All}}, {{-0.75, 0.75}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.567], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.567], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.25, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-78.5598007818019, -72.4929943955164}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.95, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-45.1589624640889, -39.092156077803395`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.85, 0}, {-0.8, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-28.458543305232396`, -22.39173691894692}, {
              21.520832192096776`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.75, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-22.89173691894692, -16.824930532661412`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.75, 0}, {-0.7, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-17.324930532661412`, -11.258124146375906`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.65, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-11.758124146375906`, -5.6913177600904135`}, {
              21.594036755152175`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.65, 0}, {-0.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-6.1913177600904135`, -0.12451137380490707`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.55, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-0.6245113738049071, 5.442295012480578}, {
              21.667241318207573`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.55, 0}, {-0.5, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{4.942295012480578, 11.009101398766084`}, {
              21.520832192096776`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.45, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{10.509101398766084`, 16.575907785051584`}, {
              21.594036755152175`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.45, 0}, {-0.4, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{16.075907785051584`, 22.142714171337076`}, {
              21.594036755152175`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.35, 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.642714171337076`, 27.709520557622582`}, {
              20.7155819984874, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.35, 0}, {-0.3, 31.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{27.209520557622582`, 33.27632694390808}, {
              19.544308989601035`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 31]& ,
           TagBoxNote->"31"],
          StyleBox["31", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[31, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.25, 50.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{32.77632694390808, 38.84313333019358}, {
              18.153422291548473`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 50]& ,
           TagBoxNote->"50"],
          StyleBox["50", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[50, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.25, 0}, {-0.2, 79.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{38.34313333019358, 44.40993971647907}, {
              16.03048996294193, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 79]& ,
           TagBoxNote->"79"],
          StyleBox["79", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[79, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.15, 174.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{43.90993971647907, 49.97674610276458}, {
              9.076056472679129, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 174]& ,
           TagBoxNote->"174"],
          StyleBox["174", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[174, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.15, 0}, {-0.1, 313.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{49.47674610276458, 
              55.54355248905007}, {-1.0993777920211834`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 313]& ,
           TagBoxNote->"313"],
          StyleBox["313", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[313, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {-0.05, 558.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{55.04355248905007, 
              61.11035887533557}, {-19.034495740593677`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 558]& ,
           TagBoxNote->"558"],
          StyleBox["558", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[558, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.05, 0}, {0., 758.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{60.61035887533557, 
              66.67716526162107}, {-33.67540835167327, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 758]& ,
           TagBoxNote->"758"],
          StyleBox["758", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[758, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.05, 774.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.17716526162107, 
              72.24397164790656}, {-34.846681360559636`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 774]& ,
           TagBoxNote->"774"],
          StyleBox["774", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[774, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.05, 0}, {0.1, 535.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.74397164790656, 
              77.81077803419207}, {-17.35079079031953, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 535]& ,
           TagBoxNote->"535"],
          StyleBox["535", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[535, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.15, 326.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{77.31077803419207, 
              83.37758442047756}, {-2.0510371117413584`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 326]& ,
           TagBoxNote->"326"],
          StyleBox["326", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[326, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.15, 0}, {0.2, 154.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{82.87758442047756, 88.94439080676307}, {
              10.540147733787087`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 154]& ,
           TagBoxNote->"154"],
          StyleBox["154", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[154, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.25, 81.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.44439080676307, 94.51119719304856}, {
              15.884080836831139`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 81]& ,
           TagBoxNote->"81"],
          StyleBox["81", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[81, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.25, 0}, {0.3, 53.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{94.01119719304856, 100.07800357933405`}, {
              17.93380860238228, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 53]& ,
           TagBoxNote->"53"],
          StyleBox["53", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[53, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.35, 40.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{99.57800357933405, 105.64480996561956`}, {
              18.885467922102453`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 40]& ,
           TagBoxNote->"40"],
          StyleBox["40", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[40, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.35, 0}, {0.4, 22.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{105.14480996561956`, 111.21161635190506`}, {
              20.203150057099617`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 22]& ,
           TagBoxNote->"22"],
          StyleBox["22", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[22, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.45, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{110.71161635190506`, 116.77842273819056`}, {
              20.27635462015501, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.45, 0}, {0.5, 7.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{116.27842273819056`, 122.34522912447605`}, {
              21.301218502930585`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 7]& ,
           TagBoxNote->"7"],
          StyleBox["7", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[7, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.55, 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{121.84522912447605`, 127.91203551076157`}, {
              21.228013939875186`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.55, 0}, {0.6, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{127.41203551076157`, 133.47884189704706`}, {
              21.44762762904138, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.65, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{132.97884189704706`, 139.04564828333255`}, {
              21.667241318207573`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.75, 0}, {0.8, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{149.67926105590357`, 155.74606744218906`}, {
              21.667241318207573`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.85, 1.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{155.24606744218906`, 161.31287382847455`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.95, 0}, {1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{171.94648660104554`, 178.01329298733106`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.41700000000000004`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-2, 5], 
         Rational[9, 20]}, {All, All}}, {{-0.4, 0.45}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.45499999999999996`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.45499999999999996`], Thickness[Small]}], 
        RectangleBox[{-1.45, 0}, {-1.4, 1.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.15, 1.},
         RoundingRadius->0], RectangleBox[{-1.15, 0}, {-1.1, 2.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1.05, 1.},
         RoundingRadius->0], RectangleBox[{-1.05, 0}, {-1., 1.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.95, 4.},
         RoundingRadius->0], RectangleBox[{-0.95, 0}, {-0.9, 2.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 4.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 3.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 6.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 7.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 12.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 19.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 24.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 48.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 75.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 74.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 89.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 89.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 128.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 168.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 245.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 278.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 343.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 377.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 376.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 345.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 335.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 317.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 236.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 130.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 101.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 51.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 34.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 29.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 14.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 11.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 11.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 16.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 3.},
         RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 7.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 2.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 4.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 1.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 2.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 3.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 2.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 1.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.35, 1.},
         RoundingRadius->0], RectangleBox[{1.45, 0}, {1.5, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.883, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-17, 20], 
         Rational[4, 5]}, {All, All}}, {{-0.85, 0.8}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.602], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.602], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-23.29901960784312, -15.691176470588218`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-9.083333333333329, -1.4754901960784252`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{12.240196078431367`, 19.848039215686278`}, {
              16.05669343918261, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{19.348039215686278`, 26.955882352941174`}, {
              16.05669343918261, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.455882352941174`, 34.06372549019607}, {
              15.912841803959392`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 12.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{33.56372549019607, 41.17156862745097}, {
              15.625138533512956`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 12]& ,
           TagBoxNote->"12"],
          StyleBox["12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[12, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 79.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{40.67156862745097, 48.27941176470587}, {
              12.412452013527766`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 79]& ,
           TagBoxNote->"79"],
          StyleBox["79", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[79, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 285.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{47.77941176470587, 55.387254901960766`}, {
              2.5346397282001636`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 285]& ,
           TagBoxNote->"285"],
          StyleBox["285", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[285, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 530.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.887254901960766`, 
              62.49509803921566}, {-9.21324381502927, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 530]& ,
           TagBoxNote->"530"],
          StyleBox["530", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[530, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 1065.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{61.99509803921566, 
              69.60294117647057}, {-34.8667854298364, 16.700545074405824`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1065]& ,
           TagBoxNote->"1065"],
          StyleBox["1065", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1065, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 1057.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{69.10294117647057, 
              76.71078431372547}, {-34.48318106924114, 16.700545074405824`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1057]& ,
           TagBoxNote->"1057"],
          StyleBox["1057", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1057, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 777.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{76.21078431372547, 
              83.81862745098036}, {-21.05702844840751, 16.700545074405827`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 777]& ,
           TagBoxNote->"777"],
          StyleBox["777", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[777, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 158.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.31862745098036, 90.92647058823526}, {
              8.624358952649704, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 158]& ,
           TagBoxNote->"158"],
          StyleBox["158", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[158, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 29.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{90.42647058823526, 98.03431372549016}, {
              14.809979267248059`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 29]& ,
           TagBoxNote->"29"],
          StyleBox["29", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[29, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 11.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{97.53431372549016, 105.14215686274505`}, {
              15.673089078587363`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{104.64215686274505`, 112.24999999999996`}, {
              16.008742894108202`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.74999999999996`, 119.35784313725486`}, {
              15.960792349033799`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{118.85784313725486`, 126.46568627450976`}, {
              15.960792349033799`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{125.96568627450976`, 133.57352941176467`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{133.07352941176467`, 140.68137254901956`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{140.18137254901956`, 147.78921568627447`}, {
              16.104643984257017`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.624, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-3, 5], 
         Rational[3, 5]}, {All, All}}, {{-0.6, 0.6}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.6, 0}, {-1.4, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.45588235294116, 31.69444444444443}, {
              18.670170862552855`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{31.19444444444443, 36.4330065359477}, {
              18.670170862552855`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1., 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.9330065359477, 41.17156862745097}, {
              18.456276284524616`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.8, 29.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{40.67156862745097, 45.91013071895423}, {
              17.17290881635518, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 29]& ,
           TagBoxNote->"29"],
          StyleBox["29", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[29, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.6, 152.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{45.41013071895423, 50.6486928104575}, {
              10.595650541986808`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 152]& ,
           TagBoxNote->"152"],
          StyleBox["152", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[152, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.4, 259.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{50.1486928104575, 55.38725490196076}, {
              4.873970579731397, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 259]& ,
           TagBoxNote->"259"],
          StyleBox["259", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[259, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.2, 452.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.88725490196076, 
              60.12581699346403}, {-5.446442810131167, 19.223644507059916`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 452]& ,
           TagBoxNote->"452"],
          StyleBox["452", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[452, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {0., 877.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{59.62581699346403, 
              64.8643790849673}, {-28.17274172563163, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 877]& ,
           TagBoxNote->"877"],
          StyleBox["877", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[877, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.2, 955.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{64.3643790849673, 
              69.60294117647057}, {-32.343685997182305`, 
              19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 955]& ,
           TagBoxNote->"955"],
          StyleBox["955", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[955, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.4, 656.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{69.10294117647057, 
              74.34150326797383}, {-16.35506628957139, 19.223644507059916`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 656]& ,
           TagBoxNote->"656"],
          StyleBox["656", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[656, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.6, 184.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{73.84150326797383, 79.08006535947709}, {
              8.884493917760892, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 184]& ,
           TagBoxNote->"184"],
          StyleBox["184", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[184, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.8, 44.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{78.58006535947709, 83.81862745098036}, {
              16.37080414874928, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 44]& ,
           TagBoxNote->"44"],
          StyleBox["44", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[44, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {1., 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.31862745098036, 88.55718954248363}, {
              17.921539839454017`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.2, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.05718954248363, 93.2957516339869}, {
              18.509749929031678`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.4, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{92.7957516339869, 98.03431372549016}, {
              18.456276284524616`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.6, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{97.53431372549016, 102.77287581699343`}, {
              18.509749929031678`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.6, 0}, {1.8, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{102.27287581699343`, 107.5114379084967}, {
              18.616697218045797`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.8, 0}, {2., 2.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{107.0114379084967, 112.24999999999997`}, {
              18.616697218045797`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.6720000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1.6, 2.}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.2, 0}, {-2., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.64271417133707, 26.257310195982875`}, {
              18.867915887176146`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.6, 0}, {-1.4, 9.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{33.98650224527448, 38.601098269920286`}, {
              18.1585533606675, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.2, 12.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{38.101098269920286`, 42.71569429456609}, {
              17.89254241322676, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 12]& ,
           TagBoxNote->"12"],
          StyleBox["12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[12, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1., 31.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{42.21569429456609, 46.8302903192119}, {
              16.207806412768726`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 31]& ,
           TagBoxNote->"31"],
          StyleBox["31", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[31, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.8, 99.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{46.3302903192119, 50.944886343857696`}, {
              10.178224937445245`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 99]& ,
           TagBoxNote->"99"],
          StyleBox["99", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[99, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.6, 219.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{50.444886343857696`, 
              55.0594823685035}, {-0.4622129601844307, 19.456586202989726`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 219]& ,
           TagBoxNote->"219"],
          StyleBox["219", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[219, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.4, 349.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.5594823685035, 
              59.1740783931493}, {-11.98935401594991, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 349]& ,
           TagBoxNote->"349"],
          StyleBox["349", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[349, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.2, 466.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{58.6740783931493, 
              63.28867441779511}, {-22.36378096613884, 19.456586202989726`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 466]& ,
           TagBoxNote->"466"],
          StyleBox["466", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[466, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {0., 559.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{62.78867441779511, 
              67.40327044244091}, {-30.61012033680184, 19.456586202989726`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 559]& ,
           TagBoxNote->"559"],
          StyleBox["559", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[559, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.2, 639.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.90327044244091, 
              71.51786646708672}, {-37.703745601888286`, 
              19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 639]& ,
           TagBoxNote->"639"],
          StyleBox["639", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[639, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.4, 548.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.01786646708672, 
              75.63246249173253}, {-29.634746862852452`, 
              19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 548]& ,
           TagBoxNote->"548"],
          StyleBox["548", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[548, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.6, 375.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{75.13246249173253, 
              79.74705851637833}, {-14.294782227103006`, 
              19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 375]& ,
           TagBoxNote->"375"],
          StyleBox["375", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[375, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.8, 191.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{79.24705851637833, 83.86165454102414}, {
              2.020555882595829, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 191]& ,
           TagBoxNote->"191"],
          StyleBox["191", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[191, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {1., 80.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.36165454102414, 87.97625056566993}, {
              11.862960937903276`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 80]& ,
           TagBoxNote->"80"],
          StyleBox["80", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[80, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.2, 40.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{87.47625056566993, 92.09084659031573}, {
              15.4097735704465, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 40]& ,
           TagBoxNote->"40"],
          StyleBox["40", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[40, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.4, 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{91.59084659031573, 96.20544261496154}, {
              17.626531465786016`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.6, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{95.70544261496154, 100.32003863960735`}, {
              18.601904939735405`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.6, 0}, {1.8, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{99.82003863960735, 104.43463466425314`}, {
              18.51323462392182, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.8, 0}, {2., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{103.93463466425314`, 108.54923068889894`}, {
              18.867915887176146`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2.2, 0}, {2.4, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{112.16382671354475`, 116.77842273819056`}, {
              18.779245571362566`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.2920000000000003`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-2.2, 2.4}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.6, 0}, {-2.4, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.63235294117647, 26.224424552429674`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.4, 0}, {-2.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{25.724424552429674`, 30.316496163682864`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.2, 0}, {-2., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{29.816496163682864`, 34.40856777493607}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.8, 0}, {-1.6, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{38.00063938618926, 42.59271099744246}, {
              19.124539917646118`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.6, 0}, {-1.4, 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{42.09271099744246, 46.684782608695656`}, {
              18.202278742559628`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.2, 51.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{46.184782608695656`, 50.77685421994886}, {
              14.882138512248265`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 51]& ,
           TagBoxNote->"51"],
          StyleBox["51", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[51, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1., 85.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{50.27685421994886, 54.86892583120205}, {
              11.746450516954202`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 85]& ,
           TagBoxNote->"85"],
          StyleBox["85", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[85, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.8, 124.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.36892583120205, 58.96099744245525}, {
              8.149631934116892, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 124]& ,
           TagBoxNote->"124"],
          StyleBox["124", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[124, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.6, 184.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{58.46099744245525, 63.05306905370845}, {
              2.6160648835979536`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 184]& ,
           TagBoxNote->"184"],
          StyleBox["184", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[184, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.4, 273.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{62.55306905370845, 
              67.14514066496164}, {-5.592059574671804, 20.085670505189363`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 273]& ,
           TagBoxNote->"273"],
          StyleBox["273", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[273, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.2, 449.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.64514066496164, 
              71.23721227621483}, {-21.82385625619402, 20.085670505189363`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 449]& ,
           TagBoxNote->"449"],
          StyleBox["449", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[449, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {0., 611.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{70.73721227621483, 
              75.32928388746804}, {-36.764487292595156`, 
              20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 611]& ,
           TagBoxNote->"611"],
          StyleBox["611", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[611, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.2, 574.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{74.82928388746804, 
              79.42135549872124}, {-33.352120944775145`, 
              20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 574]& ,
           TagBoxNote->"574"],
          StyleBox["574", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[574, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.4, 520.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{78.92135549872124, 
              83.51342710997443}, {-28.3719105993081, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 520]& ,
           TagBoxNote->"520"],
          StyleBox["520", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[520, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.6, 397.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.01342710997443, 
              87.60549872122763}, {-17.028098145744273`, 
              20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 397]& ,
           TagBoxNote->"397"],
          StyleBox["397", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[397, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.8, 200.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{87.10549872122763, 91.69757033248082}, {
              1.1404470034595704`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 200]& ,
           TagBoxNote->"200"],
          StyleBox["200", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[200, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {1., 76.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{91.19757033248082, 95.78964194373403}, {
              12.576485574532041`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 76]& ,
           TagBoxNote->"76"],
          StyleBox["76", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[76, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.2, 35.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{95.28964194373403, 99.88171355498721}, {
              16.357756392386648`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 35]& ,
           TagBoxNote->"35"],
          StyleBox["35", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[35, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.4, 13.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{99.38171355498721, 103.97378516624042`}, {
              18.386730977576924`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 13]& ,
           TagBoxNote->"13"],
          StyleBox["13", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[13, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.6, 13.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{103.47378516624042`, 108.06585677749362`}, {
              18.386730977576924`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 13]& ,
           TagBoxNote->"13"],
          StyleBox["13", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[13, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.6, 0}, {1.8, 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{107.56585677749362`, 112.15792838874681`}, {
              18.84786156512017, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.8, 0}, {2., 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.65792838874681`, 116.25}, {
              19.03231380013747, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2., 0}, {2.2, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{115.75, 120.3420716112532}, {
              19.401218270172066`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2.6, 0}, {2.8, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{128.0262148337596, 132.61828644501279`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2.8, 0}, {3., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{132.11828644501279`, 136.710358056266}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{4., 0}, {4.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{156.67071611253198`, 161.26278772378518`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.692, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-13, 5], 2}, {All, All}}, {{-2.6, 2}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.7, 0}, {-1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-10.014705882352928`, -5.004901960784309}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{8.024509803921575, 13.034313725490208`}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1.1, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{12.534313725490208`, 17.544117647058826`}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{17.044117647058826`, 22.05392156862746}, {
              18.420171671427592`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.9, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.55392156862746, 26.563725490196084`}, {
              18.158448402172937`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.9, 0}, {-0.8, 9.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.063725490196084`, 31.07352941176471}, {
              17.809484043166734`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{30.57352941176471, 35.58333333333334}, {
              16.76259096614812, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 33.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.08333333333334, 40.09313725490197}, {
              15.715697889129505`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 33]& ,
           TagBoxNote->"33"],
          StyleBox["33", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[33, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 70.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{39.59313725490197, 44.602941176470594`}, {
              12.487777568322112`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 70]& ,
           TagBoxNote->"70"],
          StyleBox["70", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[70, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 139.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{44.102941176470594`, 49.11274509803922}, {
              6.468142375465083, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 139]& ,
           TagBoxNote->"139"],
          StyleBox["139", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[139, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 200.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{48.61274509803922, 53.622549019607845`}, {
              1.1464359006204603`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 200]& ,
           TagBoxNote->"200"],
          StyleBox["200", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[200, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 299.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{53.122549019607845`, 
              58.13235294117648}, {-7.490431984783104, 19.094653850930694`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 299]& ,
           TagBoxNote->"299"],
          StyleBox["299", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[299, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 401.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{57.63235294117648, 
              62.642156862745104`}, {-16.389023139441324`, 
              19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 401]& ,
           TagBoxNote->"401"],
          StyleBox["401", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[401, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 600.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{62.142156862745104`, 
              67.15196078431373}, {-33.75, 19.094653850930698`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 600]& ,
           TagBoxNote->"600"],
          StyleBox["600", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[600, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 619.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.65196078431373, 
              71.66176470588236}, {-35.40758070527947, 19.094653850930698`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 619]& ,
           TagBoxNote->"619"],
          StyleBox["619", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[619, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 533.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.16176470588236, 
              76.17156862745098}, {-27.904846986646074`, 
              19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 533]& ,
           TagBoxNote->"533"],
          StyleBox["533", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[533, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 349.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{75.67156862745098, 
              80.68137254901961}, {-11.852486472360663`, 
              19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 349]& ,
           TagBoxNote->"349"],
          StyleBox["349", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[349, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 159.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{80.18137254901961, 85.19117647058823}, {
              4.723320580434059, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 159]& ,
           TagBoxNote->"159"],
          StyleBox["159", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[159, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 93.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{84.69117647058823, 89.70098039215686}, {
              10.481232504036436`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 93]& ,
           TagBoxNote->"93"],
          StyleBox["93", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[93, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 42.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{89.20098039215686, 94.2107843137255}, {
              14.930528081365544`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 42]& ,
           TagBoxNote->"42"],
          StyleBox["42", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[42, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 27.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{93.7107843137255, 98.72058823529412}, {
              16.239144427638813`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 27]& ,
           TagBoxNote->"27"],
          StyleBox["27", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[27, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 9.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{98.22058823529412, 103.23039215686275`}, {
              17.809484043166734`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 17.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{102.73039215686275`, 107.74019607843138`}, {
              17.111555325154324`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 17]& ,
           TagBoxNote->"17"],
          StyleBox["17", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[17, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{107.24019607843138`, 112.25}, {
              17.896725132918284`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.75, 116.75980392156863`}, {
              18.420171671427592`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.1, 0}, {1.2, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{116.25980392156863`, 121.26960784313725`}, {
              18.24568949192449, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.3, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{120.76960784313725`, 125.77941176470588`}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.5, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{129.7892156862745, 134.79901960784315`}, {
              18.420171671427592`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.04, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1, 1}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.504], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.504], Thickness[Small]}], 
        RectangleBox[{-2.2, 0}, {-2.1, 1.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.7, 1.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.5, 1.},
         RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1.4, 2.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.2, 1.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.1, 3.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1., 6.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.9, 12.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.8, 29.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.7, 46.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.6, 84.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 139.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.4, 156.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.3, 196.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.2, 242.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.1, 321.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 425.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 399.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 386.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 368.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 266.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 144.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 57.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 35.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 17.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 13.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 11.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 7.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 6.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 1.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 3.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 2.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 2.},
         RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 1.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 1.},
         RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.352, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-13, 10], 
         Rational[13, 10]}, {All, All}}, {{-1.3, 1.3}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44099999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44099999999999995`], Thickness[Small]}], 
        RectangleBox[{-2.1, 0}, {-2., 1.},
         RoundingRadius->0], RectangleBox[{-1.9, 0}, {-1.8, 1.},
         RoundingRadius->0], RectangleBox[{-1.7, 0}, {-1.6, 1.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.5, 1.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.3, 4.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.2, 3.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.1, 4.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1., 14.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.9, 25.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.8, 46.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.7, 83.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.6, 109.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 125.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.4, 147.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.3, 165.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.2, 247.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.1, 289.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 384.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 375.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 343.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 327.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 277.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 182.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 86.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 46.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 30.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 21.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 12.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 11.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 9.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 4.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 2.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 2.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 3.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 3.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 1.},
         RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 1.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 1.},
         RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.17, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-21, 10], 
         Rational[7, 5]}, {All, All}}, {{-2.1, 1.4}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], 
        RectangleBox[{-1.95, 0}, {-1.9, 1.},
         RoundingRadius->0], RectangleBox[{-1.85, 0}, {-1.8, 1.},
         RoundingRadius->0], RectangleBox[{-1.75, 0}, {-1.7, 1.},
         RoundingRadius->0], RectangleBox[{-1.35, 0}, {-1.3, 1.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.25, 1.},
         RoundingRadius->0], RectangleBox[{-1.15, 0}, {-1.1, 1.},
         RoundingRadius->0], RectangleBox[{-1.05, 0}, {-1., 1.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.95, 1.},
         RoundingRadius->0], RectangleBox[{-0.95, 0}, {-0.9, 4.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 4.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 6.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 9.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 4.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 8.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 19.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 29.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 30.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 34.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 46.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 84.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 116.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 106.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 153.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 196.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 224.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 269.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 297.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 310.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 344.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 284.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 253.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 175.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 101.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 78.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 43.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 27.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 25.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 19.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 21.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 13.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 10.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 5.},
         RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 5.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 3.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 4.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 4.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 2.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 3.},
         RoundingRadius->0], RectangleBox[{1.05, 0}, {1.1, 3.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.15, 1.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 1.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 2.},
         RoundingRadius->0], RectangleBox[{1.35, 0}, {1.4, 1.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.45, 1.},
         RoundingRadius->0], RectangleBox[{1.45, 0}, {1.5, 1.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.55, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.884, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-17, 20], 
         Rational[17, 20]}, {All, All}}, {{-0.85, 0.85}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.1, 0}, {-2., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-28.053921568627445`, -23.044117647058812`}, {
              20.120823987220888`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.3, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{3.5147058823529562`, 8.524509803921575}, {
              20.214253458771424`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{8.024509803921575, 13.034313725490208`}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1.1, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{12.534313725490208`, 17.544117647058826`}, {
              20.120823987220888`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{17.044117647058826`, 22.05392156862746}, {
              20.214253458771424`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.9, 11.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.55392156862746, 26.563725490196084`}, {
              19.279958743266057`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.9, 0}, {-0.8, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.063725490196084`, 31.07352941176471}, {
              18.34566402776069, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{30.57352941176471, 35.58333333333334}, {
              18.34566402776069, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 41.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.08333333333334, 40.09313725490197}, {
              16.477074596749958`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 61.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{39.59313725490197, 44.602941176470594`}, {
              14.608485165739227`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 61]& ,
           TagBoxNote->"61"],
          StyleBox["61", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[61, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 90.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{44.102941176470594`, 49.11274509803922}, {
              11.899030490773665`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 90]& ,
           TagBoxNote->"90"],
          StyleBox["90", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[90, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 181.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{48.61274509803922, 53.622549019607845`}, {
              3.3969485796748344`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 181]& ,
           TagBoxNote->"181"],
          StyleBox["181", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[181, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 290.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{53.122549019607845`, 
              58.13235294117648}, {-6.786863819333654, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 290]& ,
           TagBoxNote->"290"],
          StyleBox["290", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[290, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 392.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{57.63235294117648, 
              62.642156862745104`}, {-16.31666991748839, 20.80768293032196}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 392]& ,
           TagBoxNote->"392"],
          StyleBox["392", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[392, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 515.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{62.142156862745104`, 
              67.15196078431373}, {-27.80849491820439, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 515]& ,
           TagBoxNote->"515"],
          StyleBox["515", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[515, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 578.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.65196078431373, 
              71.66176470588236}, {-33.694551625888195`, 20.80768293032196}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 578]& ,
           TagBoxNote->"578"],
          StyleBox["578", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[578, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 510.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.16176470588236, 
              76.17156862745098}, {-27.34134756045171, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 510]& ,
           TagBoxNote->"510"],
          StyleBox["510", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[510, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 306.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{75.67156862745098, 
              80.68137254901961}, {-8.28173536414224, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 306]& ,
           TagBoxNote->"306"],
          StyleBox["306", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[306, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 154.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{80.18137254901961, 85.19117647058823}, {
              5.9195443115393225`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 154]& ,
           TagBoxNote->"154"],
          StyleBox["154", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[154, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 78.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{84.69117647058823, 89.70098039215686}, {
              13.020184149380105`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 78]& ,
           TagBoxNote->"78"],
          StyleBox["78", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[78, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 43.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{89.20098039215686, 94.2107843137255}, {
              16.290215653648886`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 43]& ,
           TagBoxNote->"43"],
          StyleBox["43", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[43, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 25.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{93.7107843137255, 98.72058823529412}, {
              17.971946141558544`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 25]& ,
           TagBoxNote->"25"],
          StyleBox["25", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[25, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 24.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{98.22058823529412, 103.23039215686275`}, {
              18.065375613109083`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 24]& ,
           TagBoxNote->"24"],
          StyleBox["24", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[24, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{102.73039215686275`, 107.74019607843138`}, {
              19.560247157917665`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 10.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{107.24019607843138`, 112.25}, {
              19.373388214816593`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 10]& ,
           TagBoxNote->"10"],
          StyleBox["10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[10, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.75, 116.75980392156863`}, {
              19.74710610101874, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.1, 0}, {1.2, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{116.25980392156863`, 121.26960784313725`}, {
              20.120823987220888`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.3, 3.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{120.76960784313725`, 125.77941176470588`}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.3, 0}, {1.4, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{125.27941176470588`, 130.2892156862745}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.5, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{129.7892156862745, 134.79901960784315`}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.5, 0}, {1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{134.29901960784315`, 139.30882352941177`}, {
              20.214253458771424`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.04, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1, 1}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[112]=",
 CellID->2106720944]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->528878766],

Cell["\<\
As with the transcriptome, we notice that the sample numberings do not \
correspond to actual days, so we may adjust using the sampleToDays \
association created before and reproduced here for reference:\
\>", "MathCaption",
 CellID->1740422649],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[113]:=",
 CellID->750369086],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1712427223],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "transformedProteinData"}], "]"}]}]], "Input",\

 CellLabel->"In[114]:=",
 CellID->188499867],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[114], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[114]=",
 CellID->2096017719]
}, Open  ]],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->292613774],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinRawData", "=", 
  RowBox[{"TimeExtractor", "[", "proteinLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[115]:=",
 CellID->222147988],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380", ",", 
   "400"}], "}"}]], "Output",
 CellLabel->"Out[115]=",
 CellID->448057845]
}, Open  ]],

Cell["\<\
We notice a small complication: there are two timepoints missing, compared to \
the transcriptome: (i) the reference time point \"255\" does not appear \
explicitly in our computation (corresponding to a zero value about which \
other timepoints are computed for proteins with at least 2 unique peptides). \
(ii) there is no sample for day \"329\". \
\>", "Text",
 CellID->1796883614],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantAssociator"]], 
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed data. Timepoints \"255\" (zero \
measurement assumed to have at least 2 unique peptides available per protein) \
and \"329\", assumed to be Missing data:"
}], "MathCaption",
 CellID->306227952],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinLongitudinalEnlarged", "=", 
  RowBox[{"ConstantAssociator", "[", 
   RowBox[{"proteinLongitudinal", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<255\>\"", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
      RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}]], "Input",
 CellLabel->"In[116]:=",
 CellID->1402371052],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[116], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[116]=",
 CellID->1430534533]
}, Open  ]],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->136402831],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProtein", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinLongitudinalEnlarged", "]"}]}]], "Input",
 CellLabel->"In[117]:=",
 CellID->1157329268],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[117]=",
 CellID->1914467966]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Unique Peptides", "Subsubsubsection",
 CellID->1560572010],

Cell[TextData[{
 "Typically, proteomics data from mass spectrometry is filtered to retain \
only identifications of proteins that are supported by at least 2 unique \
peptides having been identified per protein. We can use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilteringFunction"]], 
    "paclet:MathIOmica/ref/FilteringFunction"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement the filtering:"
}], "Text",
 CellID->1315991259],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["FilteringFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilteringFunction"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["cutoff", "TI"]}], "]"}], Cell[TextData[{
     "filters OmicsObject data by a chosen comparison (by default greatr or \
equal) to a ",
     Cell[BoxData[
      StyleBox["cutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->391089394],

Cell["\<\
FilteringFunction can be used to filter data in an OmicsObject.\
\>", "Caption",
 CellID->1739485138],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which component of a list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["SelectionFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/SelectionFunction"], 
    ButtonBox["GreaterEqual",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqual"], Cell[
    "Selection of comparison to use for filtering.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2083543412],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilteringFunction"]], 
    "paclet:MathIOmica/ref/FilteringFunction"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1245777502],

Cell[TextData[{
 "We filter out proteomics data with less than 2 unique peptides per protein. \
The unique peptides is reported as the second list, first component in the ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " values in this case:"
}], "MathCaption",
 CellID->178778395],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinUnique", "=", 
  RowBox[{"FilteringFunction", "[", 
   RowBox[{"proteinLongitudinalEnlarged", ",", "2", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "2"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[118]:=",
 CellID->398862612],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y616\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[118], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[118]=",
 CellID->715621561]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1066609228],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1455293487],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredProteinData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"proteinUnique", ",", 
    RowBox[{"3", "/", "4"}]}], "]"}]}]], "Input",
 CellLabel->"In[119]:=",
 CellID->1426380326],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.588], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.588], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 2475.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{28.785228182546035`, 
           43.69675740592474}, {-50.75544747610698, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2475]& ,
        TagBoxNote->"2475"],
       StyleBox["2475", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2475, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.5, 0}, {5.5, 443.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{86.43134507606085, 101.34287429943956`}, {
           48.42148648390962, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 443]& ,
        TagBoxNote->"443"],
       StyleBox["443", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[443, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.5, 0}, {6.5, 143.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{100.84287429943956`, 115.75440352281827`}, {
           63.06375035595931, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 143]& ,
        TagBoxNote->"143"],
       StyleBox["143", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[143, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.5, 0}, {9.5, 499.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{144.07746196957567`, 158.9889911929544}, {
           45.68826389446034, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 499]& ,
        TagBoxNote->"499"],
       StyleBox["499", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[499, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9.5, 0}, {10.5, 345.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{158.4889911929544, 173.40052041633308`}, {
           53.204626015445854`, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 345]& ,
        TagBoxNote->"345"],
       StyleBox["345", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[345, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{13.5, 0}, {14.5, 1320.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{216.1351080864692, 231.04663730984788`}, {
           5.617268431284344, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1320]& ,
        TagBoxNote->"1320"],
       StyleBox["1320", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1320, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{0.21999999999999997`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{0.5, 14.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[119]:=",
 CellID->1543152527],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "2475"}], ",", 
     RowBox[{"5", "\[Rule]", "443"}], ",", 
     RowBox[{"6", "\[Rule]", "143"}], ",", 
     RowBox[{"9", "\[Rule]", "499"}], ",", 
     RowBox[{"10", "\[Rule]", "345"}], ",", 
     RowBox[{"14", "\[Rule]", "1320"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[119]:=",
 CellID->604516470],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$165560$165694 = False, 
       DynamicChart`click$165566$165694 = False, 
       DynamicChart`click$165572$165694 = False, 
       DynamicChart`click$165578$165694 = False, 
       DynamicChart`click$165584$165694 = False, 
       DynamicChart`click$165590$165694 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.16534698176788387`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 2475]& , TagBoxNote -> "2475"], 
                    StyleBox["2475", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[2475, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165560$165694, 
                    FEPrivate`Not[DynamicChart`click$165560$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165560$165694, {{{1., 0.}, {0., 
                    1.}}, {-0.016515869094466458`, 0.19931689860133397`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165560$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.9965728, 0.58382944, 0.22525344]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.36737093040064384`, 
                    0.16534698176788387`}]}], "DelayedMouseEffectStyle"], {}},
                     StatusArea[#, 443]& , TagBoxNote -> "443"], 
                    StyleBox["443", {}, StripOnInput -> False]], Annotation[#, 
                    Style[443, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165566$165694, 
                    FEPrivate`Not[DynamicChart`click$165566$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165566$165694, {{{1., 0.}, {0., 1.}}, {
                    0.19898052539076774`, -0.020168056803123918`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165566$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8704000000000001, 0.50272, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.5393317914392433, -0.36737093040064384`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 143]& , 
                    TagBoxNote -> "143"], 
                    StyleBox["143", {}, StripOnInput -> False]], Annotation[#, 
                    Style[143, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165572$165694, 
                    FEPrivate`Not[DynamicChart`click$165572$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165572$165694, {{{1., 0.}, {0., 1.}}, {
                    0.17979686437075768`, -0.08759616180200691}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165572$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.1393910198186905`, -0.5393317914392433}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 499]& , 
                    TagBoxNote -> "499"], 
                    StyleBox["499", {}, StripOnInput -> False]], Annotation[#, 
                    Style[499, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165578$165694, 
                    FEPrivate`Not[DynamicChart`click$165578$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165578$165694, {{{1., 0.}, {0., 1.}}, {
                    0.13358764292344796`, -0.14884334603252297`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165578$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.5542616286181081`, -1.1393910198186905`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 345]& , 
                    TagBoxNote -> "345"], 
                    StyleBox["345", {}, StripOnInput -> False]], Annotation[#, 
                    Style[345, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165584$165694, 
                    FEPrivate`Not[DynamicChart`click$165584$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165584$165694, {{{1., 0.}, {0., 1.}}, {
                    0.04442044170887618, -0.19500467778591452`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165584$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.5542616286181081`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 1320]& , 
                    TagBoxNote -> "1320"], 
                    StyleBox["1320", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[1320, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165590$165694, 
                    FEPrivate`Not[DynamicChart`click$165590$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165590$165694, {{{1., 0.}, {0., 
                    1.}}, {-0.1402473568544977, -0.14258568965827945`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165590$165694}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["2475", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.055052896981554855`, 
                    0.6643896620044465}]}}}, StatusArea[#, 2475]& , 
                 TagBoxNote -> "2475"], 
                StyleBox["2475", {}, StripOnInput -> False]], Annotation[#, 
                Style[2475, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165560$165694, 
                  FEPrivate`Not[DynamicChart`click$165560$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165560$165694, {{{1., 0.}, {0., 
                1.}}, {-0.016515869094466458`, 0.19931689860133397`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165560$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["443", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.6632684179692258, -0.06722685601041306}]}}}, 
                 StatusArea[#, 443]& , TagBoxNote -> "443"], 
                StyleBox["443", {}, StripOnInput -> False]], Annotation[#, 
                Style[443, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165566$165694, 
                  FEPrivate`Not[DynamicChart`click$165566$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165566$165694, {{{1., 0.}, {0., 1.}}, {
                0.19898052539076774`, -0.020168056803123918`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165566$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["143", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.5993228812358589, -0.29198720600668965`}]}}}, 
                 StatusArea[#, 143]& , TagBoxNote -> "143"], 
                StyleBox["143", {}, StripOnInput -> False]], Annotation[#, 
                Style[143, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165572$165694, 
                  FEPrivate`Not[DynamicChart`click$165572$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165572$165694, {{{1., 0.}, {0., 1.}}, {
                0.17979686437075768`, -0.08759616180200691}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165572$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["499", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.44529214307815984`, -0.4961444867750765}]}}}, 
                 StatusArea[#, 499]& , TagBoxNote -> "499"], 
                StyleBox["499", {}, StripOnInput -> False]], Annotation[#, 
                Style[499, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165578$165694, 
                  FEPrivate`Not[DynamicChart`click$165578$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165578$165694, {{{1., 0.}, {0., 1.}}, {
                0.13358764292344796`, -0.14884334603252297`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165578$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["345", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.14806813902958724`, -0.650015592619715}]}}}, 
                 StatusArea[#, 345]& , TagBoxNote -> "345"], 
                StyleBox["345", {}, StripOnInput -> False]], Annotation[#, 
                Style[345, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165584$165694, 
                  FEPrivate`Not[DynamicChart`click$165584$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165584$165694, {{{1., 0.}, {0., 1.}}, {
                0.04442044170887618, -0.19500467778591452`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165584$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["1320", {}, StripOnInput -> False], 
                    
                    TraditionalForm], {-0.4674911895149923, \
-0.4752856321942648}]}}}, StatusArea[#, 1320]& , TagBoxNote -> "1320"], 
                StyleBox["1320", {}, StripOnInput -> False]], Annotation[#, 
                Style[1320, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165590$165694, 
                  FEPrivate`Not[DynamicChart`click$165590$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165590$165694, {{{1., 0.}, {0., 
                1.}}, {-0.1402473568544977, -0.14258568965827945`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165590$165694}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}], 
   FormBox[
    FormBox[
     TemplateBox[{"1", "5", "6", "9", "10", "14"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9965728, 0.58382944, 0.22525344], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6643818666666668, 0.3892196266666667, 
                    0.15016896000000002`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9965728`", ",", "0.58382944`", ",", "0.22525344`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8704000000000001, 0.50272, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5802666666666667, 0.33514666666666665`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8704000000000001`", ",", "0.50272`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.49372288, 0.31936, 0.27266112000000015`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.74058432`", ",", "0.47903999999999997`", ",", 
                    "0.4089916800000002`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.42680576000000003`, 0.3325866666666667, 0.49611296], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.64020864`", ",", "0.49888000000000005`", ",", 
                    "0.74416944`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[119]:=",
 CellID->363177333]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"2471"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6W5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.05149461539056731`"}], "}"}], ",", 
                 RowBox[{"{", "14.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.026397012306561926`"}], "}"}], ",", 
                 RowBox[{"{", "10.`", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[119], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[119]=",
 CellID->772910957]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Proteome Time Series", "Subsubsection",
 CellID->1796762249],

Cell["We can now create time series for each of the proteins. ", "Text",
 CellID->1723717413],

Cell["\<\
For each protein we now extract a time series (list of values) corresponding \
to these times:\
\>", "MathCaption",
 CellID->141883528],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesProtein", "=", 
  RowBox[{"CreateTimeSeries", "[", "filteredProteinData", "]"}]}]], "Input",
 CellLabel->"In[120]:=",
 CellID->929606926],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.06539623262957527`"}], ",", "0", ",", 
              "0.002994714615415848`", ",", 
              RowBox[{"-", "0.03484490076135003`"}], ",", 
              RowBox[{"-", "0.01821227311815761`"}], ",", 
              "0.06270726568914738`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.08295938346569019`", ",", 
              "0.06898558805479732`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.050132042020201786`"}], ",", 
              RowBox[{"-", "0.13767416728731544`"}], ",", 
              RowBox[{"-", "0.012088757412992066`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[120], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[120]=",
 CellID->185873596]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Proteome Time Series", "Subsubsection",
 CellID->1908271188],

Cell[TextData[{
 "Next, we normalize each protein series, using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1758442397],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedProteinAll", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "timeSeriesProtein"}], "]"}]}]], "Input",
 CellLabel->"In[121]:=",
 CellID->471416365],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.20512151369766354`"}], ",", "0.`", ",", 
              "0.009393207686535883`", ",", 
              RowBox[{"-", "0.1092943507816164`"}], ",", 
              RowBox[{"-", "0.05712452965038666`"}], ",", 
              "0.19668731272116724`", ",", "0.5296378663769438`", ",", 
              "0.07400932770616492`", ",", 
              RowBox[{"-", "0.539240654836878`"}], ",", "0.2602100094709663`",
               ",", "0.21637986893336714`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.15724392568889564`"}], ",", 
              RowBox[{"-", "0.4318281414007336`"}], ",", 
              RowBox[{"-", "0.03791753927664883`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.05027722328878657`"}], ",", "0.`", ",", 
              "0.09612084857400716`", ",", "0.08485184825964483`", ",", 
              "0.2073722042772388`", ",", "0.18814267853211547`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.13483525476760364`", ",", 
              
              RowBox[{"-", "0.13334802450732536`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.18513498512557355`"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3695191728536936`"}]}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 16201641659859159471, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 16201641659859159471, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[121], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[121]=",
 CellID->1536305234]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->2143452651],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinFinalTimeSeries", "=", 
  RowBox[{"ConstantSeriesClean", "[", "normedProteinAll", "]"}]}]], "Input",
 CellLabel->"In[122]:=",
 CellID->970526932],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.20512151369766354`"}], ",", "0.`", ",", 
              "0.009393207686535883`", ",", 
              RowBox[{"-", "0.1092943507816164`"}], ",", 
              RowBox[{"-", "0.05712452965038666`"}], ",", 
              "0.19668731272116724`", ",", "0.5296378663769438`", ",", 
              "0.07400932770616492`", ",", 
              RowBox[{"-", "0.539240654836878`"}], ",", "0.2602100094709663`",
               ",", "0.21637986893336714`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.15724392568889564`"}], ",", 
              RowBox[{"-", "0.4318281414007336`"}], ",", 
              RowBox[{"-", "0.03791753927664883`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.05027722328878657`"}], ",", "0.`", ",", 
              "0.09612084857400716`", ",", "0.08485184825964483`", ",", 
              "0.2073722042772388`", ",", "0.18814267853211547`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.13483525476760364`", ",", 
              
              RowBox[{"-", "0.13334802450732536`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.18513498512557355`"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3695191728536936`"}]}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 16201641659859159471, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 16201641659859159471, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[122], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[122]=",
 CellID->1486179957]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Proteome Data", "Subsection",
 CellID->1059869896],

Cell["\<\
In addition to the above, we want to create a resampled distribution for the \
proteome dataset prior to classification and clustering. In this subsection \
we first resample the imported and labeled proteome dataset, Then, we carry \
out the full analysis in this \"bootstrap\" dataset, to create a set of \
random proteome time series. This bootstrap distribution of time series will \
be used to provide the cutoffs used in the time series classification in the \
following subsection.\
\>", "Text",
 CellID->214174283],

Cell[CellGroupData[{

Cell["Resampling the Proteome Data", "Subsubsection",
 CellID->444582009],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->168882663],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"proteinExample", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[123]:=",
 CellID->1585019354],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.061`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.053`", "}"}], ",", 
                 RowBox[{"{", "10", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.13`", "}"}], ",", 
                 RowBox[{"{", "8", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"6", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.888`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
              RowBox[{"7", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99987"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99995", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.027`", "}"}], ",", 
                 RowBox[{"{", "15", "}"}]}], "}"}]}], ",", 
              RowBox[{"99996", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.926`", "}"}], ",", 
                 RowBox[{"{", "6", "}"}]}], "}"}]}], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.993`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.325`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 123, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 123, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 123, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[123], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[123]=",
 CellID->844239042]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Proteome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->1807183132],

Cell[TextData[{
 "We apply a Box-Cox transformation to the bootstrap set proteomics data \
measurement in the OmicsObject, which is in the first list first component \
for each identifier. The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1847604807],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedProteinBootstrapData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"proteinBootstrap", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[124]:=",
 CellID->80455629],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.15017066817014188`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.15017066817014188`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->534263066],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2228174692911122`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2228174692911122],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->2122200127],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.3687984643437591`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.3687984643437591],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->840909824],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2879300846458019`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2879300846458019],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->53150085],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4791399700665757`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4791399700665757],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1067283359],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3408826705882606`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3408826705882606],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1639847900],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.36683619844100357`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.36683619844100357`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->961166574],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.06735147105718207`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.06735147105718207],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1489251853],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.13961988867477013`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.13961988867477013`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1713518480],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.15632482895988384`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.15632482895988384`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->499513137],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.1004790270547353`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.1004790270547353],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->406807222],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.1867068807032459`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.1867068807032459],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->690439218],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.21520312209478668`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.21520312209478668`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->820946473]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.05894938566154792`", "}"}], ",", 
                 RowBox[{"{", "1.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.05144349547436535`", "}"}], ",", 
                 RowBox[{"{", "10.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.12110290200091585`", "}"}], ",", 
                 RowBox[{"{", "8.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99991"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.0070283213420885195`"}], "}"}], ",", 
                 RowBox[{"{", "1.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.27554911350071687`", "}"}], ",", 
                 RowBox[{"{", "1.`", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 124, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 124, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 124, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[124], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[124]=",
 CellID->2128264267]
}, Open  ]],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys to actual days:"
}], "MathCaption",
 CellID->1446718475],

Cell[BoxData[
 RowBox[{
  RowBox[{"proteinBootstrapLongitudinal", "=", 
   RowBox[{"KeyMap", "[", 
    RowBox[{"sampleToDays", ",", "transformedProteinBootstrapData"}], "]"}]}],
   ";"}]], "Input",
 CellLabel->"In[125]:=",
 CellID->1187557991],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->918869862],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinBootstrapData", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinBootstrapLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[126]:=",
 CellID->890865057],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380", ",", 
   "400"}], "}"}]], "Output",
 CellLabel->"Out[126]=",
 CellID->1249911037]
}, Open  ]],

Cell[TextData[{
 "As with the regular protein data above use the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantAssociator"]], 
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed bootstrap data. Timepoints \
\"255\" (zero measurement assumed to have at least 2 unique peptides \
available per protein) and \"329\", assumed to be Missing data:"
}], "MathCaption",
 CellID->916506595],

Cell[BoxData[
 RowBox[{
  RowBox[{"proteinBootstrapLongitudinalEnlarged", "=", 
   RowBox[{"ConstantAssociator", "[", 
    RowBox[{"proteinBootstrapLongitudinal", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<255\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
       RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[127]:=",
 CellID->1973625881],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->19000568],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinBootstrap", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinBootstrapLongitudinalEnlarged", 
   "]"}]}]], "Input",
 CellLabel->"In[128]:=",
 CellID->1514966620],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[128]=",
 CellID->569763905]
}, Open  ]],

Cell[TextData[{
 "We filter out proteomics bootstrap data with less than 2 unique peptides \
per protein. The unique peptides is reported as the second list, first \
component in the ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " values in this case:"
}], "MathCaption",
 CellID->1183809265],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrapUnique", "=", 
  RowBox[{"FilteringFunction", "[", 
   RowBox[{"proteinBootstrapLongitudinalEnlarged", ",", "2", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "2"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[129]:=",
 CellID->1993811047],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.05144349547436535`", "}"}], ",", 
                 RowBox[{"{", "10.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.12110290200091585`", "}"}], ",", 
                 RowBox[{"{", "8.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"8", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07468549415355666`", "}"}], ",", 
                 RowBox[{"{", "4.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"9", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.150168186299147`"}], "}"}], ",", 
                 RowBox[{"{", "14.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99992"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"88851", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"47564", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"39785", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"81335", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"2", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99998"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"81335", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[129], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[129]=",
 CellID->1808037231]
}, Open  ]],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
bootstrap samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1212150445],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredProteinBootstrapData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"proteinBootstrapUnique", ",", 
    RowBox[{"3", "/", "4"}]}], "]"}]}]], "Input",
 CellLabel->"In[130]:=",
 CellID->1582653673],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.595], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.595], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 142.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{35.65072057646117, 51.15349202438874}, {
           67.05973819184112, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 142]& ,
        TagBoxNote->"142"],
       StyleBox["142", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.5, 0}, {2.5, 1220.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{50.65349202438874, 66.15626347231631}, {
           61.43907938575053, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1220]& ,
        TagBoxNote->"1220"],
       StyleBox["1220", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1220, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.5, 0}, {3.5, 5012.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{65.65626347231631, 81.1590349202439}, {
           41.66770814948383, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5012]& ,
        TagBoxNote->"5012"],
       StyleBox["5012", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5012, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.5, 0}, {4.5, 11693.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{80.6590349202439, 96.16180636817145}, {
           6.833179871662658, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11693]& ,
        TagBoxNote->"11693"],
       StyleBox["11693", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11693, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.5, 0}, {5.5, 18728.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{95.66180636817145, 
           111.16457781609904`}, {-29.8470935057467, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 18728]& ,
        TagBoxNote->"18728"],
       StyleBox["18728", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18728, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.5, 0}, {6.5, 22396.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{110.66457781609904`, 
           126.1673492640266}, {-48.97193256023675, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 22396]& ,
        TagBoxNote->"22396"],
       StyleBox["22396", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[22396, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.5, 0}, {7.5, 19536.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{125.6673492640266, 
           141.17012071195418`}, {-34.05998062571069, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 19536]& ,
        TagBoxNote->"19536"],
       StyleBox["19536", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[19536, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.5, 0}, {8.5, 12532.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{140.67012071195418`, 156.17289215988177`}, {
           2.458659706254494, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 12532]& ,
        TagBoxNote->"12532"],
       StyleBox["12532", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12532, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.5, 0}, {9.5, 5943.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{155.67289215988177`, 171.17566360780933`}, {
           36.81350281695104, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5943]& ,
        TagBoxNote->"5943"],
       StyleBox["5943", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5943, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9.5, 0}, {10.5, 2117.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{170.67566360780933`, 186.1784350557369}, {
           56.76214900628554, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2117]& ,
        TagBoxNote->"2117"],
       StyleBox["2117", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2117, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10.5, 0}, {11.5, 573.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{185.6784350557369, 201.18120650366447`}, {
           64.81251746324646, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 573]& ,
        TagBoxNote->"573"],
       StyleBox["573", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[573, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{11.5, 0}, {12.5, 96.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{200.68120650366447`, 216.18397795159206`}, {
           67.29958077540343, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 96]& ,
        TagBoxNote->"96"],
       StyleBox["96", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[96, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{12.5, 0}, {13.5, 12.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{215.68397795159206`, 231.18674939951964`}, {
           67.73755418886503, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 12]& ,
        TagBoxNote->"12"],
       StyleBox["12", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{0.24, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{0.5, 13.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[130]:=",
 CellID->1368119989],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "142"}], ",", 
     RowBox[{"2", "\[Rule]", "1220"}], ",", 
     RowBox[{"3", "\[Rule]", "5012"}], ",", 
     RowBox[{"4", "\[Rule]", "11693"}], ",", 
     RowBox[{"5", "\[Rule]", "18728"}], ",", 
     RowBox[{"6", "\[Rule]", "22396"}], ",", 
     RowBox[{"7", "\[Rule]", "19536"}], ",", 
     RowBox[{"8", "\[Rule]", "12532"}], ",", 
     RowBox[{"9", "\[Rule]", "5943"}], ",", 
     RowBox[{"10", "\[Rule]", "2117"}], ",", 
     RowBox[{"11", "\[Rule]", "573"}], ",", 
     RowBox[{"12", "\[Rule]", "96"}], ",", 
     RowBox[{"13", "\[Rule]", "12"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[130]:=",
 CellID->885246694],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$168596$168835 = False, 
       DynamicChart`click$168602$168835 = False, 
       DynamicChart`click$168608$168835 = False, 
       DynamicChart`click$168614$168835 = False, 
       DynamicChart`click$168620$168835 = False, 
       DynamicChart`click$168626$168835 = False, 
       DynamicChart`click$168632$168835 = False, 
       DynamicChart`click$168638$168835 = False, 
       DynamicChart`click$168644$168835 = False, 
       DynamicChart`click$168650$168835 = False, 
       DynamicChart`click$168656$168835 = False, 
       DynamicChart`click$168662$168835 = False, 
       DynamicChart`click$168668$168835 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.132670530453598, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 142]& , TagBoxNote -> "142"], 
                    StyleBox["142", {}, StripOnInput -> False]], Annotation[#, 
                    Style[142, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168596$168835, 
                    FEPrivate`Not[DynamicChart`click$168596$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168596$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.199998009896269, 0.0008922093542924382}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168596$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.988576, 0.6767648, 0.2841781333333333]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.056015669706007, 
                    3.132670530453598}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 1220]& , TagBoxNote -> "1220"], 
                    StyleBox["1220", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[1220, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168602$168835, 
                    FEPrivate`Not[DynamicChart`click$168602$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168602$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19977678950077757`, 0.009446394908218388}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168602$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.994288, 0.6103824, 0.24208906666666669`]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.741102422110166, 
                    3.056015669706007}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 5012]& , TagBoxNote -> "5012"], 
                    StyleBox["5012", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[5012, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168608$168835, 
                    FEPrivate`Not[DynamicChart`click$168608$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168608$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19412248198905793`, 0.04812963729769719}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168608$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.006409564141657, 
                    2.741102422110166}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 11693]& , TagBoxNote -> "11693"], 
                    StyleBox["11693", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[11693, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168614$168835, 
                    FEPrivate`Not[DynamicChart`click$168614$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168614$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.14388299307930927`, 0.13891610526695403`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168614$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.928, 0.5210666666666667, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.8296946198130639, 
                    2.006409564141657}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 18728]& , TagBoxNote -> "18728"], 
                    StyleBox["18728", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[18728, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168620$168835, 
                    FEPrivate`Not[DynamicChart`click$168620$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168620$168835, {{{1., 0.}, {0., 1.}}, {
                    0.03043019727813825, 0.19767145239921113`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168620$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.5774875615828763, 
                    0.8296946198130639}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 22396]& , TagBoxNote -> "22396"], 
                    StyleBox["22396", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[22396, {}], "Tooltip"]& ], 
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168626$168835, 
                    FEPrivate`Not[DynamicChart`click$168626$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168626$168835, {{{1., 0.}, {0., 1.}}, {
                    0.19841189618432042`, 0.02515391525274853}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168626$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8049706431934798`, -0.5774875615828763}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 19536]& , 
                    TagBoxNote -> "19536"], 
                    StyleBox["19536", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[19536, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168632$168835, 
                    FEPrivate`Not[DynamicChart`click$168632$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168632$168835, {{{1., 0.}, {0., 1.}}, {
                    0.07410370626023725, -0.1857650147861445}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168632$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.5923794258892263`, -1.8049706431934798`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 12532]& , 
                    TagBoxNote -> "12532"], 
                    StyleBox["12532", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[12532, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168638$168835, 
                    FEPrivate`Not[DynamicChart`click$168638$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168638$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.11748587423872935`, -0.1618550875146082}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168638$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.965789128694909, -2.5923794258892263`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 5943]& , 
                    TagBoxNote -> "5943"], 
                    StyleBox["5943", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[5943, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168644$168835, 
                    FEPrivate`Not[DynamicChart`click$168644$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168644$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.18700204879205642`, -0.0709241407954538}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168644$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.0988041616479007`, -2.965789128694909}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 2117]& , 
                    TagBoxNote -> "2117"], 
                    StyleBox["2117", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[2117, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168650$168835, 
                    FEPrivate`Not[DynamicChart`click$168650$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168650$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19880662692911488`, -0.021815707393246214`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168650$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6167072, 0.5082666666666666, 0.7586295999999999]], 
               
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.134806813458039, -3.0988041616479007`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 573]& , 
                    TagBoxNote -> "573"], 
                    StyleBox["573", {}, StripOnInput -> False]], Annotation[#, 
                    Style[573, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168656$168835, 
                    FEPrivate`Not[DynamicChart`click$168656$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168656$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19993856278568675`, -0.004956925578824368}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168656$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.5579536, 0.5317333333333334, 0.7947799999999999]], 
               
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.140838671352932, -3.134806813458039}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 96]& , 
                    TagBoxNote -> "96"], 
                    StyleBox["96", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[96, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168662$168835, 
                    FEPrivate`Not[DynamicChart`click$168662$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168662$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19999857877864946`, -0.0007539804509012958}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168662$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.140838671352932}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 12]& , 
                    TagBoxNote -> "12"], 
                    StyleBox["12", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[12, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168668$168835, 
                    FEPrivate`Not[DynamicChart`click$168668$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168668$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19999998578776984`, -0.00007539822190018135}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168668$168835}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["142", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666600329875633, 
                    0.0029740311809747936`}]}}}, StatusArea[#, 142]& , 
                 TagBoxNote -> "142"], 
                StyleBox["142", {}, StripOnInput -> False]], Annotation[#, 
                Style[142, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168596$168835, 
                  FEPrivate`Not[DynamicChart`click$168596$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168596$168835, {{{1., 0.}, {0., 
                1.}}, {-0.199998009896269, 0.0008922093542924382}}, {{1, 0}, {
               0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168596$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["1220", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6659226316692585, 
                    0.031487983027394625`}]}}}, StatusArea[#, 1220]& , 
                 TagBoxNote -> "1220"], 
                StyleBox["1220", {}, StripOnInput -> False]], Annotation[#, 
                Style[1220, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168602$168835, 
                  FEPrivate`Not[DynamicChart`click$168602$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168602$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19977678950077757`, 0.009446394908218388}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168602$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["5012", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6470749399635264, 
                    0.1604321243256573}]}}}, StatusArea[#, 5012]& , 
                 TagBoxNote -> "5012"], 
                StyleBox["5012", {}, StripOnInput -> False]], Annotation[#, 
                Style[5012, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168608$168835, 
                  FEPrivate`Not[DynamicChart`click$168608$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168608$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19412248198905793`, 0.04812963729769719}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168608$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["11693", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.4796099769310308, 
                    0.46305368422318005`}]}}}, StatusArea[#, 11693]& , 
                 TagBoxNote -> "11693"], 
                StyleBox["11693", {}, StripOnInput -> False]], Annotation[#, 
                Style[11693, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168614$168835, 
                  FEPrivate`Not[DynamicChart`click$168614$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168614$168835, {{{1., 0.}, {0., 
                1.}}, {-0.14388299307930927`, 0.13891610526695403`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168614$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["18728", {}, StripOnInput -> False], 
                    TraditionalForm], {0.10143399092712749`, 
                    0.6589048413307037}]}}}, StatusArea[#, 18728]& , 
                 TagBoxNote -> "18728"], 
                StyleBox["18728", {}, StripOnInput -> False]], Annotation[#, 
                Style[18728, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168620$168835, 
                  FEPrivate`Not[DynamicChart`click$168620$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168620$168835, {{{1., 0.}, {0., 1.}}, {
                0.03043019727813825, 0.19767145239921113`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168620$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["22396", {}, StripOnInput -> False], 
                    TraditionalForm], {0.6613729872810681, 
                    0.08384638417582842}]}}}, StatusArea[#, 22396]& , 
                 TagBoxNote -> "22396"], 
                StyleBox["22396", {}, StripOnInput -> False]], Annotation[#, 
                Style[22396, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168626$168835, 
                  FEPrivate`Not[DynamicChart`click$168626$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168626$168835, {{{1., 0.}, {0., 1.}}, {
                0.19841189618432042`, 0.02515391525274853}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168626$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["19536", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.24701235420079082`, -0.6192167159538149}]}}}, 
                 StatusArea[#, 19536]& , TagBoxNote -> "19536"], 
                StyleBox["19536", {}, StripOnInput -> False]], Annotation[#, 
                Style[19536, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168632$168835, 
                  FEPrivate`Not[DynamicChart`click$168632$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168632$168835, {{{1., 0.}, {0., 1.}}, {
                0.07410370626023725, -0.1857650147861445}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168632$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["12532", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.3916195807957644, \
-0.5395169583820272}]}}}, StatusArea[#, 12532]& , TagBoxNote -> "12532"], 
                StyleBox["12532", {}, StripOnInput -> False]], Annotation[#, 
                Style[12532, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168638$168835, 
                  FEPrivate`Not[DynamicChart`click$168638$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168638$168835, {{{1., 0.}, {0., 
                1.}}, {-0.11748587423872935`, -0.1618550875146082}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168638$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["5943", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.623340162640188, \
-0.23641380265151263`}]}}}, StatusArea[#, 5943]& , TagBoxNote -> "5943"], 
                StyleBox["5943", {}, StripOnInput -> False]], Annotation[#, 
                Style[5943, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168644$168835, 
                  FEPrivate`Not[DynamicChart`click$168644$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168644$168835, {{{1., 0.}, {0., 
                1.}}, {-0.18700204879205642`, -0.0709241407954538}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168644$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["2117", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6626887564303829, \
-0.07271902464415403}]}}}, StatusArea[#, 2117]& , TagBoxNote -> "2117"], 
                StyleBox["2117", {}, StripOnInput -> False]], Annotation[#, 
                Style[2117, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168650$168835, 
                  FEPrivate`Not[DynamicChart`click$168650$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168650$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19880662692911488`, -0.021815707393246214`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168650$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["573", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6664618759522891, \
-0.01652308526274789}]}}}, StatusArea[#, 573]& , TagBoxNote -> "573"], 
                StyleBox["573", {}, StripOnInput -> False]], Annotation[#, 
                Style[573, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168656$168835, 
                  FEPrivate`Not[DynamicChart`click$168656$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168656$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19993856278568675`, -0.004956925578824368}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168656$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["96", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666619292621648, \
-0.0025132681696709855`}]}}}, StatusArea[#, 96]& , TagBoxNote -> "96"], 
                StyleBox["96", {}, StripOnInput -> False]], Annotation[#, 
                Style[96, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168662$168835, 
                  FEPrivate`Not[DynamicChart`click$168662$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168662$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19999857877864946`, -0.0007539804509012958}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168662$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["12", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666666192925661, \
-0.00025132740633393777`}]}}}, StatusArea[#, 12]& , TagBoxNote -> "12"], 
                StyleBox["12", {}, StripOnInput -> False]], Annotation[#, 
                Style[12, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168668$168835, 
                  FEPrivate`Not[DynamicChart`click$168668$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168668$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19999998578776984`, -0.00007539822190018135}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168668$168835}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13"}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6590506666666667, 0.4511765333333334, 
                    0.18945208888888887`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.988576`", ",", "0.6767648`", ",", 
                    "0.2841781333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6628586666666667, 0.4069216, 0.16139271111111114`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.994288`", ",", "0.6103824`", ",", 
                    "0.24208906666666669`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.544`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6186666666666667, 0.3473777777777778, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.928`", ",", "0.5210666666666667`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.928, 0.5210666666666667, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.928, 0.5210666666666667, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5706666666666668, 0.3320888888888889, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8560000000000001`", ",", "0.4981333333333333`", ",", 
                    "0.2`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.784`", ",", "0.47519999999999996`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.49854684444444447`, 0.31893333333333335`, 
                    0.24943982222222214`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7478202666666667`", ",", "0.4784`", ",", 
                    "0.3741597333333332`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4744270222222222, 0.32106666666666667`, 
                    0.36554631111111113`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7116405333333333`", ",", "0.4816`", ",", 
                    "0.5483194666666666`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6754608`", ",", "0.4848`", ",", "0.7224792`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4111381333333334, 0.33884444444444445`, 
                    0.5057530666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6167072`", ",", "0.5082666666666666`", ",", 
                    "0.7586295999999999`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37196906666666674`, 0.35448888888888896`, 
                    0.5298533333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5579536`", ",", "0.5317333333333334`", ",", 
                    "0.7947799999999999`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13}], 
             "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None", ",", "None", ",", "None", ",", "None"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[130]:=",
 CellID->574479642]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"10", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.0440972546516367`"}], "}"}], ",", 
                 RowBox[{"{", "15.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"15", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.09820855580560213`", "}"}], ",", 
                 RowBox[{"{", "2.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"83", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.26095238819475913`", "}"}], ",", 
                 RowBox[{"{", "4.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"131", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.05787920075595823`"}], "}"}], ",", 
                 RowBox[{"{", "3.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"6366"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"88885", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"91871", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"92952", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"96125", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"10", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              TemplateBox[{"6372"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[130], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[130]=",
 CellID->314696655]
}, Open  ]],

Cell["\<\
For each bootstrap protein we now extract a time series (list of values):\
\>", "MathCaption",
 CellID->1388846014],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesProteinBootstrap", "=", 
  RowBox[{
  "CreateTimeSeries", "[", "filteredProteinBootstrapData", "]"}]}]], "Input",
 CellLabel->"In[131]:=",
 CellID->1335198055],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[131], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[131]=",
 CellID->2001941671]
}, Open  ]],

Cell[TextData[{
 "Next, we normalize each protein series, using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1164916883],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedProteinBootstrapAll", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "timeSeriesProteinBootstrap"}], "]"}]}]], "Input",\

 CellLabel->"In[132]:=",
 CellID->149642882],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"10", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.03144802637947889`"}], ",", "0.`", ",", 
              "0.06407161618429313`", ",", 
              RowBox[{"-", "0.11500814497472765`"}], ",", 
              "0.02030351406722126`", ",", 
              RowBox[{"-", "0.05862659638869126`"}], ",", 
              RowBox[{"-", "0.023784381510738785`"}], ",", 
              TemplateBox[{"20"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", 
               TemplateBox[{"19"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"-", "0.06295888538654712`"}], ",", 
              RowBox[{"-", "0.17115950215528627`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.7173193068037694`", ",", 
              
              RowBox[{"Missing", "[", "]"}], ",", "0.3749107966117535`"}], 
             "}"}]}], ",", 
           TemplateBox[{"6372"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 132, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 132, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 132, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[132], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[132]=",
 CellID->2007366948]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1523959247],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrapFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedProteinBootstrapAll", "]"}]}]], "Input",
 CellLabel->"In[133]:=",
 CellID->145606560],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"10", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.03144802637947889`"}], ",", "0.`", ",", 
              "0.06407161618429313`", ",", 
              RowBox[{"-", "0.11500814497472765`"}], ",", 
              "0.02030351406722126`", ",", 
              RowBox[{"-", "0.05862659638869126`"}], ",", 
              RowBox[{"-", "0.023784381510738785`"}], ",", 
              TemplateBox[{"20"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", 
               TemplateBox[{"19"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"-", "0.06295888538654712`"}], ",", 
              RowBox[{"-", "0.17115950215528627`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.7173193068037694`", ",", 
              
              RowBox[{"Missing", "[", "]"}], ",", "0.3749107966117535`"}], 
             "}"}]}], ",", 
           TemplateBox[{"6372"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 133, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 133, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 133, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[133], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[133]=",
 CellID->848200666]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Proteome Time Series", "Subsection",
 CellID->2003973854],

Cell[TextData[{
 "In this subsection we will classify the proteome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileEstimator"]], 
    "paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for the \"LombScargle\" method to provide a cutoff for the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " inputs."
}], "Text",
 CellID->1328457457],

Cell["\<\
First, we estimate for the \"LombScargle\" Method, 0.95 quantile cutoff from \
the bootstrap proteome data:\
\>", "MathCaption",
 CellID->1629616244],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95Protein", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"proteinBootstrapFinalTimeSeries", ",", "timesProteinBootstrap"}], 
   "]"}]}]], "Input",
 CellLabel->"In[268]:=",
 CellID->2101262717],

Cell[BoxData["0.8350640860442666`"], "Output",
 CellLabel->"Out[268]=",
 CellID->384258966]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
proteome data:\
\>", "MathCaption",
 CellID->218785383],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95ProteinSpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "proteinBootstrapFinalTimeSeries", ",", "timesProteinBootstrap", ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[270]:=",
 CellID->633928417],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"12", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.804264750066626`", ",", 
      RowBox[{"-", "0.8380547398330289`"}]}], "}"}]}], ",", 
   RowBox[{"13", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.8027925581149449`", ",", 
      RowBox[{"-", "0.8174904385249819`"}]}], "}"}]}], ",", 
   RowBox[{"14", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.7877720084250821`", ",", 
      RowBox[{"-", "0.8216094289485545`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[270]=",
 CellID->1148116342]
}, Open  ]],

Cell["\<\
Now we can classify the proteome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1746502806],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"proteinFinalTimeSeries", ",", "timesProtein", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95Protein"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95ProteinSpikes"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[271]:=",
 CellID->1666173246],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[271]:=",
 CellID->1621576223],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 271, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 271, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 271, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[271], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[271]=",
 CellID->116615884]
}, Open  ]],

Cell[TextData[{
 "As discussed above, the default output for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " is an ",
 Cell[BoxData["Association"], "InlineFormula"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". "
}], "Text",
 CellID->808687274],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->690387281],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "proteinClassification", "]"}]], "Input",
 CellLabel->"In[137]:=",
 CellID->484887026],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",\

 CellLabel->"Out[137]=",
 CellID->459471277]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->1931356472],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "proteinClassification"}]], "Input",
 CellLabel->"In[272]:=",
 CellID->1092900499],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "124"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "48"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "77"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "7"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "36"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "18"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[272]=",
 CellID->1294671978]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->642146293],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "proteinClassification"}]], "Input",
 CellLabel->"In[273]:=",
 CellID->1447420276],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"O00160\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00267\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00273\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00571\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O15031\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43143\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43175\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43312\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43516\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O60271\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O60879\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O75643\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O75792\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O95498\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P00488\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P00915\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P02042\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P02671\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P04844\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P08174\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P09326\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P09496\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P11021\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P12956\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13501\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13611\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13667\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P19387\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P23141\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P23368\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P32119\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P32189\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P33176\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P40306\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P42892\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P50225\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P51531\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P52888\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P54920\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P55036\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P60660\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P84095\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q01518\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q07021\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q08722\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q09666\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13151\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13217\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13488\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14165\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14643\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14653\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q15084\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q5H9R7\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q6NYC8\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q709C8\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q86YP4\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q92499\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96AT9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96L92\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96RT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q99439\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BTE3\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BTV4\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BWS9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9C0I1\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H0D6\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H2U2\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H444\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H4Z3\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NS69\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NUP9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NVJ2\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NYB0\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9UQ35\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9Y277\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9Y2Q0\"\>", ",", "\<\"Protein\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[273]=",
 CellID->157992455]
}, Open  ]],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["True"]], "paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1243280944],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"proteinFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesRNA", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[140]:=",
 CellID->806940498],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[140]=",
 CellID->1715219372]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metabolomic Data", "Section",
 CellID->779816621],

Cell[CellGroupData[{

Cell["Importing OmicsObject Metabolome Data", "Subsection",
 CellID->1971981026],

Cell[TextData[{
 "We now import the metabolomics data example (for details on how to import \
such data please refer to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporter"]], "paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirect"]], 
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirectLabeled"]], 
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObjectCreator"]], 
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->1838680125],

Cell["\<\
We import the metabolomics OmicsObject MathIOmica examples for each of \
positive and negative mass spectrometry aligned mass features:\
\>", "MathCaption",
 CellID->902655240],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesNegativeModeExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", 
      "\"\<metabolomicsNegativeModeExample\>\""}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[141]:=",
 CellID->1102136272],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"23444", ",", "16317", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"2289"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"421.948`", ",", "0.39287496`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "115528", ",", "130042"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C11 H12 Cl2 O11 S, db=0.00, overall=48.58, \
mfg=97.17 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[141], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[141]=",
 CellID->1616524567]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesPositiveModeExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", 
      "\"\<metabolomicsPositiveModeExample\>\""}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[142]:=",
 CellID->1021092447],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "202.0329`", ",", "0.33260712`", ",", "\<\"Meta\"\>"}], "}"}],
                "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"263741", ",", "276622", ",", "337241"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "174.0375`", ",", "0.33451426`", ",", "\<\"Meta\"\>"}], "}"}],
                "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"78435", ",", "88529", ",", "121073"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], 
              ",", 
              TemplateBox[{"3670"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "36919", ",", "102737"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"8"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"19\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[142], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[142]=",
 CellID->1548290285]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->969019879],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", 
  "metabolitesNegativeModeExample"}]], "Input",
 CellLabel->"In[143]:=",
 CellID->1948611152],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>"}], "}"}]], "Output",
 CellLabel->"Out[143]=",
 CellID->1243364280]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", 
  "metabolitesPositiveModeExample"}]], "Input",
 CellLabel->"In[144]:=",
 CellID->619818574],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>"}], "}"}]], "Output",
 CellLabel->"Out[144]=",
 CellID->1440862894]
}, Open  ]],

Cell["\<\
We notice that sample 7, 18 and 21 are missing as there was no sample for \
these time points. This will be addressed further below.\
\>", "Text",
 CellID->1900924848],

Cell[TextData[{
 "We can get the intensity data from any sample and entry. For example, the \
",
 Cell[BoxData[
  SuperscriptBox["77", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["155", "th"]], "InlineFormula"],
 " entries in sample 14:"
}], "MathCaption",
 CellID->729703917],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<14\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"77", ",", "155"}], "}"}]}], "]"}], "@", 
  "metabolitesNegativeModeExample"}]], "Input",
 CellLabel->"In[145]:=",
 CellID->2002108649],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"322.0892`", ",", "0.4402413`", ",", "\<\"Meta\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"31950", ",", "29801", ",", "27440"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Isosorbide-2-glucuronide [ C12 H18 O10, db=60.03, \
overall=60.67, mfg=61.31, KEGG ID=, CAS ID=29542-01-6 ]\"\>", 
        ",", "\<\"29542-01-6\"\>"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"146.0588`", ",", "0.7426923`", ",", "\<\"Meta\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"62667", ",", "1", ",", "60382"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Adipic acid [ C6 H10 O4, db=45.74, overall=46.59, \
mfg=47.44, KEGG ID=, CAS ID=124-04-9 ]\"\>", ",", "\<\"124-04-9\"\>"}], 
       "}"}]}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[145]=",
 CellID->81485738]
}, Open  ]],

Cell[TextData[{
 "The outer keys correspond to the identified features in the form {mass to \
charge ratio (m/z), retention time, \"Meta\"}, i.e. each m/z and retention \
time has been tagged with a \"Meta\" label as well to indicate these are \
metabolomics data. The  values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example: ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "1"}], 
       ",", 
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "2"}], 
       ",", 
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "3"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Annotations", ",", " ", 
       RowBox[{"CAS", " ", "Number"}]}], "}"}]}], "}"}]}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->527526154],

Cell[TextData[{
 "We would like to combine the positive and negative mode metabolomics data. \
We will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["EnlargeInnerAssociation"]], 
    "paclet:MathIOmica/ref/EnlargeInnerAssociation"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->449223127],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesExample", "=", 
  RowBox[{"EnlargeInnerAssociation", "[", 
   RowBox[{"{", 
    RowBox[{
    "metabolitesNegativeModeExample", ",", "metabolitesPositiveModeExample"}],
     "}"}], "]"}]}]], "Input",
 CellLabel->"In[146]:=",
 CellID->1688076284],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"23444", ",", "16317", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "36919", ",", "102737"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], "}"}], ",", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton"]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 146, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 146, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 146, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[146], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[146]=",
 CellID->2034427395]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing of Metabolome Data", "Subsection",
 CellID->1357359281],

Cell["\<\
We will next preprocess the imported metabolome data. We will first perform \
calculate the median of the technical replicates, transform the data towards \
a normal distribution, then we will re-label the samples with real time and \
carry out filtering for missing data. Finally, we will create the \
metabolomics time series or relative intensities compared to the healthy \
reference point for each mass feature identified.\
\>", "Text",
 CellID->1802528277],

Cell[CellGroupData[{

Cell["\<\
Medians of Technical Triplicates, Data Transformation, Labeling, Filtering, \
Matching Mass\
\>", "Subsubsection",
 CellID->524759768],

Cell[CellGroupData[{

Cell["Median of Technical Triplicates", "Subsubsubsection",
 CellID->1551861331],

Cell["\<\
The metabolomics intensities have three measurements, corresponding to \
technical triplicates. Typically we would like to use the median of these \
values. An additional complication is that some of the triplicates have \
intensity values of 1, which should be taken as a Missing value. We can use \
MeasurementApplier to perform the calculation:\
\>", "Text",
 CellID->944497302],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["MeasurementApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/MeasurementApplier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", 
      StyleBox["omicsObject", "TI"]}], "]"}], Cell[TextData[{
     "applies a ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to the measurement list of an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", ignoring missing values."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1659581078],

Cell[TextData[{
 "Applying a function to the measurements in an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 "."
}], "Caption",
 CellID->1061570710],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ComponentIndex"]], "paclet:MathIOmica/ref/ComponentIndex"},
       
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for MathIOmica functions, such as ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Applier"]], "paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", that allows selection of which component of a list to use in an \
association or ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input or output values."
    }], "TableText"]},
   {"IgnorePattern", "_Missing", Cell[TextData[{
     Cell[BoxData["IgnorePattern"], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["MeasurementApplier"], "InlineFormula"],
     " specifying a pattern of values to delete prior to applying the \
function to the measurement list."
    }], "TableText"]},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], "1", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ListIndex"]], "paclet:MathIOmica/ref/ListIndex"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for MathIOmica functions, such as ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Applier"]], "paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " that allows selection of which list to use in the association or \
OmicsObject input or output values."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->524783694],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["MeasurementApplier"]], 
    "paclet:MathIOmica/ref/MeasurementApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->324206829],

Cell["\<\
We implement a Median calculation, and ignoring entries with missing and \
values of 1:\
\>", "MathCaption",
 CellID->873132756],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metaboliteMedians", "=", 
  RowBox[{"MeasurementApplier", "[", 
   RowBox[{"Median", ",", "metabolitesExample", ",", 
    RowBox[{"IgnorePattern", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"_Missing", "|", " ", "1", "|", "1."}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[147]:=",
 CellID->986470141],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "19880.5`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "69828.`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "16606.5`", "}"}], ",", 
                 RowBox[{"{", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[147], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[147]=",
 CellID->469857818]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Power Transformation", "Subsubsubsection",
 CellID->128983684],

Cell[TextData[{
 "We apply a Box-Cox transformation to the metabolite median data in the \
OmicsObject, which is now the first list first component for each identifier. \
The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1069961234],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedMetaboliteData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"metaboliteMedians", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[148]:=",
 CellID->1957883507],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2888569651995717`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2888569651995717],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->64325918],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.28237388560304527`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.28237388560304527`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->107170713],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2762019481112037`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2762019481112037],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->95796752],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2620754231729624`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2620754231729624],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->824325630],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27130818835487147`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27130818835487147`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->524837664],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27702965627620246`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27702965627620246`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1492609609],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.29539457602287605`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.29539457602287605`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1812054345],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2648334191658074`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2648334191658074],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1204774573],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2785561129338028`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2785561129338028],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1653787195],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26951291666846366`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26951291666846366`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1967842748],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2657839634539137`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2657839634539137],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1388283531],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2627686191517685`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2627686191517685],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->66431071]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.263454850806397`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3238554275098924`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[148], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[148]=",
 CellID->637169717]
}, Open  ]],

Cell["\<\
We can plot the data to see what the resulting distributions look like:\
\>", "MathCaption",
 CellID->2078239195],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "transformedMetaboliteData"}], ")"}]}]], "Input",
 CellLabel->"In[149]:=",
 CellID->144631910],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.518], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.518], Thickness[Small]}], 
        RectangleBox[{3.21, 0}, {3.22, 3.},
         RoundingRadius->0], RectangleBox[{3.22, 0}, {3.23, 8.},
         RoundingRadius->0], RectangleBox[{3.23, 0}, {3.24, 17.},
         RoundingRadius->0], RectangleBox[{3.24, 0}, {3.25, 55.},
         RoundingRadius->0], RectangleBox[{3.25, 0}, {3.26, 97.},
         RoundingRadius->0], RectangleBox[{3.26, 0}, {3.27, 169.},
         RoundingRadius->0], RectangleBox[{3.27, 0}, {3.28, 254.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 322.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 352.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 461.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 502.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 528.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 549.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 496.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 452.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 440.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 369.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 292.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 181.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 154.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 91.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 68.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 37.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 9.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2052, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.21, 3.45}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.504], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.504], Thickness[Small]}], 
        RectangleBox[{3.27, 0}, {3.28, 3.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 6.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 23.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 44.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 88.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 142.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 209.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 249.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 328.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 411.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 441.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 466.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 482.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 500.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 486.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 431.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 388.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 353.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 284.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 185.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 145.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 106.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 68.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 44.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 23.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 3.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2648, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.27, 3.53}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{3.32, 0}, {3.33, 1.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 3.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 13.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 21.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 50.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 85.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 134.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 188.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 225.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 281.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 370.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 397.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 428.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 446.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 447.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 422.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 445.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 377.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 359.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 320.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 262.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 201.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 141.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 97.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 70.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 63.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 30.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 11.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3144, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.32, 3.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], 
        RectangleBox[{3.45, 0}, {3.46, 1.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 9.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 10.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 17.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 33.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 52.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 82.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 138.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 149.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 171.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 199.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 242.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 274.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 312.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 299.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 323.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 297.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 301.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 300.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 298.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 281.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 262.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 244.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 241.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 185.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 156.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 108.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 76.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 70.},
         RoundingRadius->0], RectangleBox[{3.74, 0}, {3.75, 54.},
         RoundingRadius->0], RectangleBox[{3.75, 0}, {3.76, 44.},
         RoundingRadius->0], RectangleBox[{3.76, 0}, {3.77, 21.},
         RoundingRadius->0], RectangleBox[{3.77, 0}, {3.78, 14.},
         RoundingRadius->0], RectangleBox[{3.78, 0}, {3.79, 3.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4432, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.45, 3.79}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.469], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.469], Thickness[Small]}], 
        RectangleBox[{3.36, 0}, {3.37, 1.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 4.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 5.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 21.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 32.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 50.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 94.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 165.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 184.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 203.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 288.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 317.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 344.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 351.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 364.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 393.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 416.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 369.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 368.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 368.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 338.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 258.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 226.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 172.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 150.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 129.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 114.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 74.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 47.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 31.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 6.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3537999999999997`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.36, 3.67}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{3.31, 0}, {3.32, 1.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 5.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 9.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 23.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 43.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 71.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 164.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 197.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 255.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 280.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 321.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 373.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 378.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 403.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 444.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 429.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 391.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 385.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 378.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 319.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 272.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 191.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 151.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 144.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 114.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 77.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 48.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 26.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3042000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.31, 3.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.518], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.518], Thickness[Small]}], 
        RectangleBox[{3.14, 0}, {3.15, 1.},
         RoundingRadius->0], RectangleBox[{3.15, 0}, {3.16, 1.},
         RoundingRadius->0], RectangleBox[{3.16, 0}, {3.17, 7.},
         RoundingRadius->0], RectangleBox[{3.17, 0}, {3.18, 23.},
         RoundingRadius->0], RectangleBox[{3.18, 0}, {3.19, 53.},
         RoundingRadius->0], RectangleBox[{3.19, 0}, {3.2, 118.},
         RoundingRadius->0], RectangleBox[{3.2, 0}, {3.21, 193.},
         RoundingRadius->0], RectangleBox[{3.21, 0}, {3.22, 277.},
         RoundingRadius->0], RectangleBox[{3.22, 0}, {3.23, 379.},
         RoundingRadius->0], RectangleBox[{3.23, 0}, {3.24, 467.},
         RoundingRadius->0], RectangleBox[{3.24, 0}, {3.25, 513.},
         RoundingRadius->0], RectangleBox[{3.25, 0}, {3.26, 530.},
         RoundingRadius->0], RectangleBox[{3.26, 0}, {3.27, 559.},
         RoundingRadius->0], RectangleBox[{3.27, 0}, {3.28, 526.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 512.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 449.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 390.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 319.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 240.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 162.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 93.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 76.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 29.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.1352, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.14, 3.38}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.44, 0}, {3.45, 2.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 16.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 23.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 28.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 60.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 83.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 143.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 186.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 205.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 243.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 272.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 315.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 338.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 392.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 368.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 355.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 361.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 333.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 366.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 291.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 301.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 286.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 220.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 177.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 142.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 121.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 108.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 67.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 55.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 32.},
         RoundingRadius->0], RectangleBox[{3.74, 0}, {3.75, 18.},
         RoundingRadius->0], RectangleBox[{3.75, 0}, {3.76, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4335999999999998`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.44, 3.76}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{3.29, 0}, {3.3, 1.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 2.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 5.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 17.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 28.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 61.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 100.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 166.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 194.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 307.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 324.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 403.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 383.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 416.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 425.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 437.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 410.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 371.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 393.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 338.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 311.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 220.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 172.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 161.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 124.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 78.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 43.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 29.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2842000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.29, 3.58}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.37, 0}, {3.38, 2.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 1.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 5.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 8.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 29.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 46.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 92.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 118.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 119.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 190.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 234.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 293.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 306.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 359.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 309.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 394.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 366.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 333.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 389.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 334.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 335.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 313.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 268.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 209.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 158.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 133.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 135.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 98.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 54.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 58.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 28.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 10.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3636, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.37, 3.69}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.42, 0}, {3.43, 1.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 3.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 12.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 11.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 26.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 56.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 102.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 115.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 155.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 218.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 244.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 284.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 354.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 356.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 358.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 351.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 371.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 363.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 396.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 319.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 361.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 294.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 253.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 218.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 165.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 133.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 115.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 90.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 56.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 39.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 25.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 10.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4135999999999997`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.42, 3.74}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5529999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5529999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.42, 0}, {3.44, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.504901960784196`, 26.62306501547971}, {
              18.560274912575586`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.44, 0}, {3.46, 2.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{26.12306501547971, 31.24122807017534}, {
              18.485439040025405`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.46, 0}, {3.48, 18.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{30.74122807017534, 35.859391124870854`}, {
              17.28806507922253, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.48, 0}, {3.5, 58.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.359391124870854`, 40.47755417956637}, {
              14.294630177215344`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 58]& ,
           TagBoxNote->"58"],
          StyleBox["58", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[58, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.5, 0}, {3.52, 149.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{39.97755417956637, 45.095717234262}, {
              7.484565775148994, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 149]& ,
           TagBoxNote->"149"],
          StyleBox["149", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[149, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.52, 0}, {3.54, 307.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{44.595717234262, 
              49.71388028895751}, {-4.339502087779394, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 307]& ,
           TagBoxNote->"307"],
          StyleBox["307", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[307, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.54, 0}, {3.56, 442.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{49.21388028895751, 
              54.33204334365314}, {-14.44234488205365, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 442]& ,
           TagBoxNote->"442"],
          StyleBox["442", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[442, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.56, 0}, {3.58, 591.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{53.83204334365314, 
              58.950206398348655`}, {-25.592889892030417`, 
              19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 591]& ,
           TagBoxNote->"591"],
          StyleBox["591", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[591, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.58, 0}, {3.6, 667.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{58.450206398348655`, 
              63.56836945304428}, {-31.280416205844073`, 
              19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 667]& ,
           TagBoxNote->"667"],
          StyleBox["667", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[667, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.6, 0}, {3.62, 702.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{63.06836945304428, 
              68.1865325077398}, {-33.89967174510036, 19.13511078512576}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 702]& ,
           TagBoxNote->"702"],
          StyleBox["702", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[702, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.62, 0}, {3.64, 681.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{67.6865325077398, 
              72.80469556243531}, {-32.32811842154659, 19.13511078512576}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 681]& ,
           TagBoxNote->"681"],
          StyleBox["681", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[681, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.64, 0}, {3.66, 625.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{72.30469556243531, 
              77.42285861713094}, {-28.137309558736522`, 
              19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 625]& ,
           TagBoxNote->"625"],
          StyleBox["625", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[625, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.66, 0}, {3.68, 560.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{76.92285861713094, 
              82.04102167182646}, {-23.27297784297485, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 560]& ,
           TagBoxNote->"560"],
          StyleBox["560", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[560, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.68, 0}, {3.7, 458.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{81.54102167182646, 
              86.65918472652208}, {-15.63971884285652, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 458]& ,
           TagBoxNote->"458"],
          StyleBox["458", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[458, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.7, 0}, {3.72, 296.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{86.15918472652208, 
              91.2773477812176}, {-3.516307489727417, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 296]& ,
           TagBoxNote->"296"],
          StyleBox["296", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[296, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.72, 0}, {3.74, 191.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{90.7773477812176, 95.89551083591311}, {
              4.341459128041448, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 191]& ,
           TagBoxNote->"191"],
          StyleBox["191", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[191, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.74, 0}, {3.76, 106.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{95.39551083591311, 100.51367389060863`}, {
              10.70250829480672, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 106]& ,
           TagBoxNote->"106"],
          StyleBox["106", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[106, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.76, 0}, {3.78, 41.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{100.01367389060863`, 105.13183694530414`}, {
              15.566840010568399`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.78, 0}, {3.8, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{104.63183694530414`, 109.74999999999977`}, {
              18.560274912575586`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4124, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.42, 3.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[149]=",
 CellID->841573546]
}, Open  ]],

Cell["We may also wish to standardize the distributions:", "MathCaption",
 CellID->1914505686],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesStandardized", "=", 
  RowBox[{"Returner", "[", 
   RowBox[{"transformedMetaboliteData", ",", 
    RowBox[{"Applier", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StandardizeExtended", "[", 
        RowBox[{"#", ",", "Mean", ",", "StandardDeviation"}], "]"}], "&"}], 
      ",", "transformedMetaboliteData", ",", 
      RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
      RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}], ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[150]:=",
 CellID->1349581601],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[150], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[150]=",
 CellID->1805328114]
}, Open  ]],

Cell["\<\
We can again plot the data to see what the standardized distributions look \
like:\
\>", "MathCaption",
 CellID->2141940815],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "metabolitesStandardized"}], ")"}]}]], "Input",
 CellLabel->"In[151]:=",
 CellID->1785374157],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 2.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 7.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 10.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 27.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 48.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 82.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 134.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 188.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 228.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 292.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 298.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 386.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 423.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 414.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 461.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 416.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 412.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 381.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 376.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 335.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 270.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 214.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 143.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 142.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 74.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 62.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 51.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 25.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 5.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.116, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 5.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 13.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 30.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 43.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 92.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 134.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 183.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 226.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 278.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 328.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 399.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 384.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 412.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 436.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 448.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 433.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 379.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 377.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 329.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 269.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 197.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 149.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 134.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 93.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 64.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 35.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 31.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 6.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.116, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 6.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 12.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 23.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 49.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 93.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 131.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 181.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 216.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 268.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 348.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 383.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 397.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 455.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 421.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 402.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 440.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 383.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 340.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 343.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 268.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 231.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 161.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 110.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 87.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 64.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 42.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 26.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 6.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.116, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-2.8, 0}, {-2.6, 4.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 14.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 18.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 39.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 67.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 136.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 172.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 204.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 247.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 304.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 354.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 344.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 404.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 359.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 361.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 367.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 343.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 316.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 307.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 260.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 206.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 143.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 98.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 75.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 63.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 36.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 21.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 4.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.912, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-2.8, 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 2.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 4.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 9.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 25.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 45.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 82.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 122.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 197.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 229.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 296.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 353.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 374.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 386.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 414.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 449.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 423.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 391.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 418.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 373.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 309.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 243.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 189.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 159.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 151.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 108.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 67.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 46.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 18.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.112, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 5.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 7.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 22.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 41.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 69.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 158.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 192.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 255.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 283.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 333.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 376.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 385.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 409.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 452.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 428.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 401.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 385.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 379.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 320.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 262.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 192.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 156.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 138.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 113.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 68.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 47.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 16.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.112, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.476], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.476], Thickness[Small]}], 
        RectangleBox[{-3.2, 0}, {-3., 1.},
         RoundingRadius->0], RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 3.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 9.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 28.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 43.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 84.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 130.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 178.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 237.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 298.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 350.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 382.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 401.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 429.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 438.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 417.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 421.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 368.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 361.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 310.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 279.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 222.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 178.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 137.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 79.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 65.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 46.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 22.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.3200000000000003`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3.2, 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-2.8, 0}, {-2.6, 2.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 16.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 28.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 38.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 71.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 146.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 197.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 237.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 289.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 307.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 397.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 426.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 442.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 411.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 417.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 392.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 389.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 357.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 332.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 279.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 202.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 170.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 138.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 93.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 71.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 39.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 21.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.912, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-2.8, 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 2.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 3.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 9.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 20.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 44.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 76.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 137.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 178.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 252.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 295.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 362.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 392.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 409.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 398.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 436.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 434.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 384.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 365.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 374.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 327.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 278.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 205.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 171.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 134.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 106.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 70.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 41.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 18.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.112, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 3.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 2.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 6.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 25.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 43.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 104.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 126.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 146.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 232.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 292.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 342.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 377.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 356.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 442.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 410.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 381.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 424.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 380.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 363.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 319.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 239.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 195.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 151.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 143.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 97.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 64.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 42.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 22.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.112, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 5.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 12.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 15.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 49.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 93.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 129.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 172.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 233.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 293.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 343.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 391.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 415.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 381.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 416.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 414.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 444.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 369.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 359.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 332.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 252.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 221.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 160.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 130.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 96.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 66.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 39.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 20.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 4.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.116, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.469], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.469], Thickness[Small]}], 
        RectangleBox[{-3.4, 0}, {-3.2, 1.},
         RoundingRadius->0], RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 4.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 12.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 14.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 52.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 84.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 117.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 187.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 266.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 279.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 347.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 385.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 402.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 436.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 410.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 439.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 392.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 355.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 350.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 325.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 296.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 211.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 177.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 128.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 96.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 69.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 43.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 17.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.524, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3.4, 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[151]=",
 CellID->628044284]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->418653686],

Cell["\<\
As with the transcriptome, we notice that the sample numberings do not \
correspond to actual days, so we may adjust using the sampleToDays \
association created above:\
\>", "Text",
 CellID->1156073030],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[152]:=",
 CellID->38250836],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1834860801],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "metabolitesStandardized"}], "]"}]}]], "Input",\

 CellLabel->"In[153]:=",
 CellID->640311487],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"5963"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 153, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 153, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 153, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[153], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[153]=",
 CellID->658156183]
}, Open  ]],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->571106757],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetaboliteRawData", "=", 
  RowBox[{"TimeExtractor", "[", "metabolitesLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[154]:=",
 CellID->1486846456],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380"}], 
  "}"}]], "Output",
 CellLabel->"Out[154]=",
 CellID->2090185631]
}, Open  ]],

Cell["\<\
We notice a complication: there are three timepoints missing, corresponding \
to the three samples for which we had indicated above that there were no \
measurements (compared to the transcriptome samples). These are samples on \
days \"186\", \"329\" and \"400\".\
\>", "Text",
 CellID->280773926],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantAssociator"]], 
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed data, tagging these data as \
Missing data:"
}], "MathCaption",
 CellID->945801823],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesLongitudinalEnlarged", "=", 
  RowBox[{"ConstantAssociator", "[", 
   RowBox[{"metabolitesLongitudinal", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<186\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{"\"\<400\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}]], "Input",
 CellLabel->"In[155]:=",
 CellID->417284067],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 155, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 155, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 155, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[155], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[155]=",
 CellID->1212402591]
}, Open  ]],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->430709602],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetabolites", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesLongitudinalEnlarged", "]"}]}]], "Input",
 CellLabel->"In[156]:=",
 CellID->1916390424],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[156]=",
 CellID->1525504201]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1084739385],

Cell[TextData[{
 "We will next remove values that have been tagged overall as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Additionally we remove data where the reference healthy sample \"255\
\" was missing. We use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for this implementation:"
}], "Text",
 CellID->1226164312],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredMetaboliteData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"metabolitesLongitudinalEnlarged", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[157]:=",
 CellID->890515172],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.651], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3., 0}, {4., 4601.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{28.785228182546035`, 
           69.63751000800642}, {-50.75544747610698, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4601]& ,
        TagBoxNote->"4601"],
       StyleBox["4601", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4601, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4., 0}, {5., 1158.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{69.13751000800642, 109.9897918334668}, {
           39.64008495588685, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1158]& ,
        TagBoxNote->"1158"],
       StyleBox["1158", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1158, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0}, {6., 172.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{109.4897918334668, 150.34207365892715`}, {
           65.52739107785777, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 172]& ,
        TagBoxNote->"172"],
       StyleBox["172", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[172, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6., 0}, {7., 31.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{149.84207365892715`, 190.69435548438756`}, {
           69.22932836304835, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 31]& ,
        TagBoxNote->"31"],
       StyleBox["31", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[31, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7., 0}, {8., 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{190.19435548438756`, 231.0466373098479}, {
           69.9907197195769, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{2.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{3., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[157]:=",
 CellID->341844674],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "4601"}], ",", 
     RowBox[{"4", "\[Rule]", "1158"}], ",", 
     RowBox[{"5", "\[Rule]", "172"}], ",", 
     RowBox[{"6", "\[Rule]", "31"}], ",", 
     RowBox[{"7", "\[Rule]", "2"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[157]:=",
 CellID->864680193],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$182320$182439 = False, 
       DynamicChart`click$182326$182439 = False, 
       DynamicChart`click$182332$182439 = False, 
       DynamicChart`click$182338$182439 = False, 
       DynamicChart`click$182344$182439 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.7056467156813797`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 4601]& , TagBoxNote -> "4601"], 
                    StyleBox["4601", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[4601, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182320$182439, 
                    FEPrivate`Not[DynamicChart`click$182320$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182320$182439, {{{1., 0.}, {0., 1.}}, {
                    0.1506281553794014, 0.13157187696084188`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182320$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.925621327638784, -1.7056467156813797`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 1158]& , 
                    TagBoxNote -> "1158"], 
                    StyleBox["1158", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[1158, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182326$182439, 
                    FEPrivate`Not[DynamicChart`click$182326$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182326$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.1355704985970502, -0.1470395862009521}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182326$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.106826537704997, -2.925621327638784}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 172]& , 
                    TagBoxNote -> "172"], 
                    StyleBox["172", {}, StripOnInput -> False]], Annotation[#, 
                    Style[172, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182332$182439, 
                    FEPrivate`Not[DynamicChart`click$182332$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182332$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.19843032592021287`, -0.02500811378729119}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182332$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.1394856162634417`, -3.106826537704997}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 31]& , 
                    TagBoxNote -> "31"], 
                    StyleBox["31", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[31, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182338$182439, 
                    FEPrivate`Not[DynamicChart`click$182338$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182338$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.19996601022710422`, -0.003687106433730781}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182338$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.1394856162634417`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182344$182439, 
                    FEPrivate`Not[DynamicChart`click$182344$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182344$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.1999998890098529, -0.00021070369365843502`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182344$182439}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["4601", {}, StripOnInput -> False], 
                    TraditionalForm], {0.5020938512646713, 
                    0.4385729232028062}]}}}, StatusArea[#, 4601]& , 
                 TagBoxNote -> "4601"], 
                StyleBox["4601", {}, StripOnInput -> False]], Annotation[#, 
                Style[4601, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182320$182439, 
                  FEPrivate`Not[DynamicChart`click$182320$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182320$182439, {{{1., 0.}, {0., 1.}}, {
                0.1506281553794014, 0.13157187696084188`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182320$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["1158", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.4519016619901673, \
-0.49013195400317355`}]}}}, StatusArea[#, 1158]& , TagBoxNote -> "1158"], 
                StyleBox["1158", {}, StripOnInput -> False]], Annotation[#, 
                Style[1158, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182326$182439, 
                  FEPrivate`Not[DynamicChart`click$182326$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182326$182439, {{{1., 0.}, {0., 
                1.}}, {-0.1355704985970502, -0.1470395862009521}}, {{1, 0}, {
               0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182326$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["172", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6614344197340428, \
-0.08336037929097062}]}}}, StatusArea[#, 172]& , TagBoxNote -> "172"], 
                StyleBox["172", {}, StripOnInput -> False]], Annotation[#, 
                Style[172, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182332$182439, 
                  FEPrivate`Not[DynamicChart`click$182332$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182332$182439, {{{1., 0.}, {0., 
                1.}}, {-0.19843032592021287`, -0.02500811378729119}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182332$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["31", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6665533674236807, \
-0.012290354779102602`}]}}}, StatusArea[#, 31]& , TagBoxNote -> "31"], 
                StyleBox["31", {}, StripOnInput -> False]], Annotation[#, 
                Style[31, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182338$182439, 
                  FEPrivate`Not[DynamicChart`click$182338$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182338$182439, {{{1., 0.}, {0., 
                1.}}, {-0.19996601022710422`, -0.003687106433730781}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182338$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["2", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666662966995096, \
-0.0007023456455281167}]}}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
                StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                Style[2, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182344$182439, 
                  FEPrivate`Not[DynamicChart`click$182344$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182344$182439, {{{1., 0.}, {0., 
                1.}}, {-0.1999998890098529, -0.00021070369365843502`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182344$182439}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}], 
   FormBox[
    FormBox[
     TemplateBox[{"3", "4", "5", "6", "7"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.544`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.784`", ",", "0.47519999999999996`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6754608`", ",", "0.4848`", ",", "0.7224792`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[157]:=",
 CellID->658164502]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"4599"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"406.3805`", ",", "14.560919`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.3484220998264644`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"2,4,6-trimethyl-2,15\"\>", 
                    "\[Ellipsis]", "\<\"ipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 157, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 157, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 157, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[157], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[157]=",
 CellID->82519417]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matching Unique Mass", "Subsubsubsection",
 CellID->1252715262],

Cell[TextData[{
 "We may want to match a unique mass to the metabolites. This is a putative \
mass identification based on the uniqueness of the mass feature. If matched, \
a KEGG compound identity can be prepended to the identifier using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObjectUniqueMassConverter"]], 
    "paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->1581980320],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["OmicsObjectUniqueMassConverter",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"], 
     "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["massAccuracy", "TI"]}], "]"}], Cell[TextData[{
     "assigns a unique putative mass identification to each of ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     "'s inner association keys, using the ",
     Cell[BoxData[
      StyleBox["massAccuracy", "TI"]], "InlineFormula"],
     " in parts per million."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->472784104],

Cell[TextData[{
 "Matching putative mass identifications to mass features in an ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObject"]], "paclet:MathIOmica/ref/OmicsObject"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " of metabolites."
}], "Caption",
 CellID->392942028],

Cell["\<\
We match our identities to KEGG compound identifiers, using a 2ppm accuracy \
(this may take some time depending on the number of matching data):\
\>", "MathCaption",
 CellID->1324534886],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"massMatchedFilteredMetabolites", "=", 
  RowBox[{"OmicsObjectUniqueMassConverter", "[", 
   RowBox[{"filteredMetaboliteData", ",", "2"}], "]"}]}]], "Input",
 CellLabel->"In[158]:=",
 CellID->642344200],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"4599"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"406.3805`", ",", "14.560919`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.3484220998264644`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"2,4,6-trimethyl-2,\"\>", 
                    "\[Ellipsis]", "\<\"id ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[159], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[159]=",
 CellID->524174621]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Metabolome Time Series", "Subsubsection",
 CellID->1109625018],

Cell["We can now create time series for each of the proteins. ", "Text",
 CellID->719686978],

Cell["\<\
For each metabolite feature we now extract a time series (list of values) \
corresponding to the set of times:\
\>", "MathCaption",
 CellID->1151139342],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesMetabolites", "=", 
  RowBox[{
  "CreateTimeSeries", "[", "massMatchedFilteredMetabolites", "]"}]}]], "Input",\

 CellLabel->"In[160]:=",
 CellID->518745171],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[160], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[160]=",
 CellID->824935153]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Take Difference Compared to Reference in Metabolome Time Series.\
\>", "Subsubsection",
 CellID->1009763177],

Cell[TextData[{
 "Now we need to compare  to compare the difference of each intensity for a \
given metabolite's time series to the intensity of the ratios of expression \
at any time point compared to a healthy datapoint. We can use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesInternalCompare"]], 
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->278067401],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->96962883],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesMetabolites", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[161]:=",
 CellID->1862570155],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.32665866089642104`"}], ",", 
              RowBox[{"-", "0.24484346068429885`"}], ",", 
              "0.03077460777441865`", ",", 
              RowBox[{"-", "0.11284688855970915`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6407940659720814`"}], ",", 
              RowBox[{"-", "0.16561264066131298`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.3404546845684606`"}], ",", 
              RowBox[{"-", "0.14390369162531425`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4599"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[161], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[161]=",
 CellID->530691439]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Metabolome Time Series", \
"Subsubsection",
 CellID->1412731195],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->966741969],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedMetabolitesCompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "metabolitesCompared"}], "]"}]}]], "Input",
 CellLabel->"In[274]:=",
 CellID->170999781],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3437843266552544`"}], ",", 
              RowBox[{"-", "0.2576798179368774`"}], ",", 
              "0.0323880217434761`", ",", 
              RowBox[{"-", "0.11876308894482825`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6743888433582577`"}], ",", 
              RowBox[{"-", "0.17429518017096568`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.35830363159453466`"}], ",", 
              RowBox[{"-", "0.1514481005734021`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4600"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 274, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 274, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 274, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[274], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[274]=",
 CellID->1856841682]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->245953314],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolomeFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedMetabolitesCompared", "]"}]}]], "Input",
 CellLabel->"In[275]:=",
 CellID->1978811570],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3437843266552544`"}], ",", 
              RowBox[{"-", "0.2576798179368774`"}], ",", 
              "0.0323880217434761`", ",", 
              RowBox[{"-", "0.11876308894482825`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6743888433582577`"}], ",", 
              RowBox[{"-", "0.17429518017096568`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.35830363159453466`"}], ",", 
              RowBox[{"-", "0.1514481005734021`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4600"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 275, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 275, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 275, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[275], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[275]=",
 CellID->1324492706]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Metabolome Data", "Subsection",
 CellID->453326653],

Cell["\<\
We also would like to create a resampled distribution for the metabolome \
dataset prior to classification and clustering. In this subsection we first \
resample the imported metabolome dataset. Then, we carry out the full \
analysis in this \"bootstrap\" dataset, to create a set of random metabolome \
time series. This bootstrap distribution of time series will be used to \
provide the cutoffs used in the time series classification in the following \
subsection.\
\>", "Text",
 CellID->184556424],

Cell[CellGroupData[{

Cell["Resampling the Proteome Data", "Subsubsection",
 CellID->633718938],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->1542785493],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"metabolitesExample", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[164]:=",
 CellID->878226973],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"88478", ",", "100725", ",", "59680"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99998"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"44327", ",", "153862", ",", "33442"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid\"\>", 
                    "\[Ellipsis]", "\<\".87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[164], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[164]=",
 CellID->1614351122]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Metabolome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->360522749],

Cell["\<\
We implement a Median calculation, and ignoring entries with missing and \
values of 1 for the bootstrap set:\
\>", "MathCaption",
 CellID->677226397],

Cell[BoxData[
 RowBox[{
  RowBox[{"metaboliteBootstrapMedians", "=", 
   RowBox[{"MeasurementApplier", "[", 
    RowBox[{"Median", ",", "metabolitesBootstrap", ",", 
     RowBox[{"IgnorePattern", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"_Missing", "|", " ", "1", "|", "1."}], ")"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[165]:=",
 CellID->480725279],

Cell[TextData[{
 "We apply a Box-Cox transformation to the bootstrap metabolite median data \
in the OmicsObject, which is now the first list first component for each \
identifier. The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->700277754],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedBootstrapMetaboliteData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"metaboliteBootstrapMedians", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[166]:=",
 CellID->1357825918],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2871523055287482`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2871523055287482],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1877585153],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.28037607704250345`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.28037607704250345`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->163355591],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2763466764965233`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2763466764965233],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->259759008],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26024284466383885`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26024284466383885`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->778641117],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27025675415129474`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27025675415129474`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->617410823],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2739743911493624`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2739743911493624],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->71021389],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2947078607539085`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2947078607539085],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->901761449],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2650660721998507`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2650660721998507],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->932516019],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2801283174874604`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2801283174874604],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1175383913],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26904171465531007`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26904171465531007`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->290081537],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2651084328101397`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2651084328101397],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1628114812],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26292251438570274`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26292251438570274`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->458717401]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3502234334097394`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"99996"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99999", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3211903759895276`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid [ \"\>", 
                    "\[Ellipsis]", "\<\"96.87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[166], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[166]=",
 CellID->197065877]
}, Open  ]],

Cell["We may also wish to standardize the distributions:", "MathCaption",
 CellID->1180721070],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesBootstrapStandardized", "=", 
  RowBox[{"Returner", "[", 
   RowBox[{"transformedBootstrapMetaboliteData", ",", 
    RowBox[{"Applier", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StandardizeExtended", "[", 
        RowBox[{"#", ",", "Mean", ",", "StandardDeviation"}], "]"}], "&"}], 
      ",", "transformedBootstrapMetaboliteData", ",", 
      RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
      RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}], ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[167]:=",
 CellID->1630125210],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.023749550672516283`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"99996"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99999", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.7142620049001477`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid \"\>", 
                    "\[Ellipsis]", "\<\".87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[167], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[167]=",
 CellID->666411065]
}, Open  ]],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys with labels corresponding to days:"
}], "MathCaption",
 CellID->314732997],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapLongitudinal", "=", 
   RowBox[{"KeyMap", "[", 
    RowBox[{"sampleToDays", ",", "metabolitesBootstrapStandardized"}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[168]:=",
 CellID->465258018],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->1296207012],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetaboliteBootstrapData", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesBootstrapLongitudinal", "]"}]}]], "Input",\

 CellLabel->"In[169]:=",
 CellID->1277135516],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380"}], 
  "}"}]], "Output",
 CellLabel->"Out[169]=",
 CellID->1243550350]
}, Open  ]],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantAssociator"]], 
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append the \"186\", \"329\" and \"400\" missing days to the \
transformed bootstrap data:"
}], "MathCaption",
 CellID->115749397],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapLongitudinalEnlarged", "=", 
   RowBox[{"ConstantAssociator", "[", 
    RowBox[{"metabolitesBootstrapLongitudinal", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<186\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}], ",", 
       RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}], ",", 
       RowBox[{"\"\<400\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[170]:=",
 CellID->1927414844],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->889199561],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetabolitesBootstrap", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesBootstrapLongitudinalEnlarged", 
   "]"}]}]], "Input",
 CellLabel->"In[171]:=",
 CellID->438322254],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[171]=",
 CellID->1039879846]
}, Open  ]],

Cell[TextData[{
 "We next remove values that have been tagged overall as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Additionally we remove data where the reference healthy sample \"255\
\" was missing. We use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for this implementation:"
}], "MathCaption",
 CellID->107474856],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"filteredMetaboliteBootstrapData", "=", 
   RowBox[{"FilterMissing", "[", 
    RowBox[{"metabolitesBootstrapLongitudinalEnlarged", ",", 
     RowBox[{"3", "/", "4"}], ",", 
     RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[172]:=",
 CellID->1335914459],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.651], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {4., 75579.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{35.65072057646118, 
          75.1579263410729}, {-48.97193256023675, 68.30012181935953}}],
        StatusArea[#, 75579]& ,
        TagBoxNote->"75579"],
       StyleBox["75579", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[75579, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {5., 21924.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{74.6579263410729, 114.1651321056846}, {
          33.926816797881756`, 68.30012181935953}}],
        StatusArea[#, 21924]& ,
        TagBoxNote->"21924"],
       StyleBox["21924", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21924, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5., 0}, {6., 2352.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{113.6651321056846, 153.1723378702963}, {
          64.16620403927763, 68.30012181935953}}],
        StatusArea[#, 2352]& ,
        TagBoxNote->"2352"],
       StyleBox["2352", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2352, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6., 0}, {7., 142.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{152.6723378702963, 192.17954363490804`}, {
          67.58072712345323, 68.30012181935953}}],
        StatusArea[#, 142]& ,
        TagBoxNote->"142"],
       StyleBox["142", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7., 0}, {8., 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{191.67954363490804`, 231.18674939951973`}, {
          67.79548672015025, 68.30012181935953}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{2.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{3., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->1038652436],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "75579"}], ",", 
     RowBox[{"4", "\[Rule]", "21924"}], ",", 
     RowBox[{"5", "\[Rule]", "2352"}], ",", 
     RowBox[{"6", "\[Rule]", "142"}], ",", 
     RowBox[{"7", "\[Rule]", "3"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->1884409036],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$593535$593641 = False, 
       DynamicChart`click$593540$593641 = False, 
       DynamicChart`click$593545$593641 = False, 
       DynamicChart`click$593550$593641 = False, 
       DynamicChart`click$593555$593641 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.6071759697234667`, 
                    3.141592653589793}]}], {}}, StatusArea[#, 75579]& , 
                    TagBoxNote -> "75579"], 
                   StyleBox["75579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[75579, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593535$593641, 
                    FEPrivate`Not[DynamicChart`click$593535$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593535$593641, {{{1., 0}, {0, 1.}}, {
                   0.1439702482353572, 0.13882567350115624`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593535$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.984701516469519, -1.6071759697234667`}]}], {}}, 
                    StatusArea[#, 21924]& , TagBoxNote -> "21924"], 
                   StyleBox["21924", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[21924, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593540$593641, 
                    FEPrivate`Not[DynamicChart`click$593540$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593540$593641, {{{1., 0}, {
                    0, 1.}}, {-0.1326484068914845, -0.1496809946157199}}, {{1,
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593540$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.132482034894383, -2.984701516469519}]}], {}}, 
                    StatusArea[#, 2352]& , TagBoxNote -> "2352"], 
                   StyleBox["2352", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2352, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593545$593641, 
                    FEPrivate`Not[DynamicChart`click$593545$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593545$593641, {{{1., 0}, {
                    0, 1.}}, {-0.19931148083858252`, \
-0.016581121974442822`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593545$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 
                    1., {-3.1414041580305785`, -3.132482034894383}]}], {}}, 
                    StatusArea[#, 142]& , TagBoxNote -> "142"], 
                   StyleBox["142", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[142, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593550$593641, 
                    FEPrivate`Not[DynamicChart`click$593550$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593550$593641, {{{1., 0}, {
                    0, 1.}}, {-0.19999783816574662`, \
-0.0009299080749361384}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593550$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.1414041580305785`}]}], {}}, 
                    StatusArea[#, 3]& , TagBoxNote -> "3"], 
                   StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593555$593641, 
                    FEPrivate`Not[DynamicChart`click$593555$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593555$593641, {{{1., 0}, {
                    0, 1.}}, {-0.1999999991117356, \
-0.000018849555893581826`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$593555$593641}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["75579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.47990082745119067`, 
                    0.46275224500385403`}]}}}, StatusArea[#, 75579]& , 
                TagBoxNote -> "75579"], 
               StyleBox["75579", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[75579, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593535$593641, 
                 FEPrivate`Not[DynamicChart`click$593535$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593535$593641, {{{1., 0}, {0, 1.}}, {
               0.1439702482353572, 0.13882567350115624`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593535$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["21924", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.4421613563049483, \
-0.4989366487190663}]}}}, StatusArea[#, 21924]& , TagBoxNote -> "21924"], 
               StyleBox["21924", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[21924, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593540$593641, 
                 FEPrivate`Not[DynamicChart`click$593540$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593540$593641, {{{1., 0}, {
                0, 1.}}, {-0.1326484068914845, -0.1496809946157199}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593540$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2352", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6643716027952751, \
-0.05527040658147607}]}}}, StatusArea[#, 2352]& , TagBoxNote -> "2352"], 
               StyleBox["2352", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2352, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593545$593641, 
                 FEPrivate`Not[DynamicChart`click$593545$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593545$593641, {{{1., 0}, {
                0, 1.}}, {-0.19931148083858252`, -0.016581121974442822`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593545$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["142", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666594605524887, \
-0.003099693583120461}]}}}, StatusArea[#, 142]& , TagBoxNote -> "142"], 
               StyleBox["142", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[142, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593550$593641, 
                 FEPrivate`Not[DynamicChart`click$593550$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593550$593641, {{{1., 0}, {
                0, 1.}}, {-0.19999783816574662`, -0.0009299080749361384}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593550$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666666637057853, \
-0.00006283185297860608}]}}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
               StyleBox["3", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[3, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593555$593641, 
                 FEPrivate`Not[DynamicChart`click$593555$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593555$593641, {{{1., 0}, {
                0, 1.}}, {-0.1999999991117356, -0.000018849555893581826`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$593555$593641}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}], 
   FormBox[
    FormBox[
     TemplateBox[{"3", "4", "5", "6", "7"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1., 0.544, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.6754608, 0.4848, 0.7224792]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->173842096]
}, Open  ]]
}, Open  ]],

Cell["\<\
For each bootstrap metabolite feature we now extract a time series (list of \
values) corresponding to the set of times:\
\>", "MathCaption",
 CellID->40883495],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeSeriesMetabolitesBootstrap", "=", 
   RowBox[{
   "CreateTimeSeries", "[", "filteredMetaboliteBootstrapData", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[173]:=",
 CellID->2081617072],

Cell["\<\
We compare every value in each bootstrap series to the healthy \"255\" time \
point, which is the second element in each series: \
\>", "MathCaption",
 CellID->1475115608],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapCompared", "=", 
   RowBox[{"SeriesInternalCompare", "[", 
    RowBox[{"timeSeriesMetabolitesBootstrap", ",", 
     RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[174]:=",
 CellID->1716802688],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->454276768],

Cell[BoxData[
 RowBox[{
  RowBox[{"normedMetabolitesBootstrapCompared", "=", 
   RowBox[{"SeriesApplier", "[", 
    RowBox[{"Normalize", ",", "metabolitesBootstrapCompared"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[175]:=",
 CellID->725274691],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1396633943],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolomeBootstrapFinalTimeSeries", "=", 
   RowBox[{
   "ConstantSeriesClean", "[", "normedMetabolitesBootstrapCompared", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[176]:=",
 CellID->1230418291]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Metabolome Time Series", "Subsection",
 CellID->298821825],

Cell[TextData[{
 "In this subsection we will classify the metabolome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileEstimator"]], 
    "paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for the \"LombScargle\" method to provide a cutoff for the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " inputs."
}], "Text",
 CellID->1481646089],

Cell["\<\
First, we estimate for the \"LombScargle\" Method, 0.95 quantile cutoff from \
the bootstrap metabolome data:\
\>", "MathCaption",
 CellID->1952930858],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95Metabolites", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "metabolomeBootstrapFinalTimeSeries", ",", "timesMetabolitesBootstrap"}], 
   "]"}]}]], "Input",
 CellLabel->"In[276]:=",
 CellID->768869658],

Cell[BoxData["0.8461247616777212`"], "Output",
 CellLabel->"Out[276]=",
 CellID->1856700619]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
proteome data:\
\>", "MathCaption",
 CellID->1337236679],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95MetabolitesSpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "metabolomeBootstrapFinalTimeSeries", ",", "timesMetabolitesBootstrap", 
    ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[277]:=",
 CellID->1520498098],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"12", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"0.6705198068392632`", ",", 
     RowBox[{"-", "0.651832513904884`"}]}], "}"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[277]=",
 CellID->1886752990]
}, Open  ]],

Cell["\<\
Now we can classify the proteome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1474915870],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metaboliteClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"metabolomeFinalTimeSeries", ",", "timesMetabolites", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95Metabolites"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95MetabolitesSpikes"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[278]:=",
 CellID->507289769],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[278]:=",
 CellID->1019182225],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "1514.0966`", ",", "0.36623535`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.15009402640884575`", ",", "0.15075945952409445`", ",", 
                   "0.33651460690487767`", ",", "0.1975579977785776`", ",", 
                   "0.43038474234090673`", ",", "0.6678462629237746`", ",", 
                   "0.41379036735122116`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
                   TemplateBox[{"12"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"Missing", "[", "]"}]}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"134"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"6"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 278, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 278, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 278, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[278], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[278]=",
 CellID->1066388514]
}, Open  ]],

Cell[TextData[{
 "As discussed above, the default output for TimeSeriesClassification is an \
",
 ButtonBox["Association",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Association"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". "
}], "Text",
 CellID->754816834],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->1020626209],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "metaboliteClassification", "]"}]], "Input",
 CellLabel->"In[180]:=",
 CellID->1712806074],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", 
   ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[180]=",
 CellID->497917949]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->1056863292],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "metaboliteClassification"}]], "Input",
 CellLabel->"In[279]:=",
 CellID->864104307],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "136"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "713"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "63"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "38"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "43"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "15"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "33"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[279]=",
 CellID->2040720583]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->575017700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "metaboliteClassification"}]], "Input",
 CellLabel->"In[280]:=",
 CellID->646072400],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"373.8593`", ",", "0.4113235`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C11821\"\>", ",", "184.0236`", ",", "0.6534444`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"221.1087`", ",", "10.306158`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C18218\"\>", ",", "272.2353`", ",", "12.773695`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"294.1655`", ",", "13.049499`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"631.3846`", ",", "13.522097`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"563.3196`", ",", "13.700788`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"779.6037`", ",", "13.962242`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"362.2657`", ",", "14.001`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C17873\"\>", ",", "384.3602`", ",", "14.298198`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"390.2971`", ",", "14.359208`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"420.3606`", ",", "14.665766`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"434.3762`", ",", "14.779639`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"392.366`", ",", "15.017344`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"394.3811`", ",", "15.151882`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1599.146`", ",", "15.281029`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"693.6282`", ",", "15.692093`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"874.7147`", ",", "15.911758`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"281.9862`", ",", "0.39045456`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"504.3091`", ",", "14.391079`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"416.3126`", ",", "14.462658`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"735.5212`", ",", "15.179166`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"571.9606`", ",", "0.3881667`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"489.9575`", ",", "0.38891178`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"325.9501`", ",", "0.3924723`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"465.9127`", ",", "0.39305556`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"383.9092`", ",", "0.39772224`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"301.9058`", ",", "0.40786114`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"219.9025`", ",", "0.4121111`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"161.944`", ",", "0.4130858`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"139.0609`", ",", "0.45847225`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"115.0636`", ",", "0.4639722`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"71.074`", ",", "0.48255876`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"253.165`", ",", "9.127285`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"298.1321`", ",", "9.309667`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C20605\"\>", ",", "411.1791`", ",", "9.316696`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"440.2009`", ",", "11.290919`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"355.2179`", ",", "12.744277`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"338.2438`", ",", "12.854486`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1061.1475`", ",", "13.061242`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"210.198`", ",", "13.161266`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"501.3666`", ",", "13.296033`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"594.3745`", ",", "13.370138`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1538.0292`", ",", "13.379565`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"404.3139`", ",", "13.602781`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"692.323`", ",", "13.76518`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"670.265`", ",", "13.873167`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"814.5844`", ",", "14.151257`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"366.3494`", ",", "14.30147`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"442.4017`", ",", "14.35682`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"406.3808`", ",", "14.358058`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"278.1517`", ",", "14.363973`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C19658\"\>", ",", "344.2712`", ",", "14.433056`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"420.3577`", ",", "14.4446125`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"311.3186`", ",", "14.611917`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"791.5832`", ",", "15.4236`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1553.1772`", ",", "15.442857`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1545.174`", ",", "15.501686`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"352.0515`", ",", "0.53367996`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C17237\"\>", ",", "254.0726`", ",", "12.292558`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"336.228`", ",", "12.510321`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"638.4015`", ",", "13.413879`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"668.3243`", ",", "13.987971`", ",", "\<\"Meta\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[280]=",
 CellID->1348085108]
}, Open  ]],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["True"]], "paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->861507568],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"metabolomeFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesMetabolites", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[183]:=",
 CellID->1022947302],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[183]=",
 CellID->603088833]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combined Data Clustering", "Section",
 CellID->1340833355],

Cell[TextData[{
 "In this section we will combine the omics data classes from the individual \
classifications above using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["JoinNestedAssociations"]], 
    "paclet:MathIOmica/ref/JoinNestedAssociations"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "  and hierarchically cluster the information to obtain a second level of \
classification using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will visualize the results in the following section."
}], "Text",
 CellID->834349127],

Cell[CellGroupData[{

Cell["Combining Multi-omics Classified Data", "Subsection",
 CellID->1502510612],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["JoinNestedAssociations",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/JoinNestedAssociations"], "[", 
     StyleBox["associationList", "TI"], "]"}], Cell[TextData[{
     "merges the nested ",
     ButtonBox["associationList (",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/associationList"],
     "an association of associations",
     ButtonBox[")",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/associationList"],
     " by joining the inner associations for each matching key."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1289482141],

Cell["Joining classification data.", "Caption",
 CellID->2068861910],

Cell[TextData[{
 "We combine the classification data using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["JoinNestedAssociations"]], 
    "paclet:MathIOmica/ref/JoinNestedAssociations"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->681556684],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"combinedClassification", "=", 
  RowBox[{"JoinNestedAssociations", "[", 
   RowBox[{"{", 
    RowBox[{
    "rnaClassification", ",", "proteinClassification", ",", 
     "metaboliteClassification"}], " ", "}"}], "]"}]}]], "Input",
 CellLabel->"In[281]:=",
 CellID->245414890],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.08553735041954855`", ",", "0.2041353122187633`", ",", 
                   "0.21930279158524527`", ",", "0.3784958694491304`", ",", 
                   "0.5848999163284979`", ",", "0.34601221698539536`", ",", 
                   "0.5457352214922402`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
                   TemplateBox[{"7"},
                    "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
                   "0.07591897179810148`", ",", "0.`"}], "}"}]}], "}"}]}], 
              ",", 
              TemplateBox[{"1081"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}], ",", 
           
           TemplateBox[{"7"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 281, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 281, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 281, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[281], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[281]=",
 CellID->808884430]
}, Open  ]],

Cell["We can check the keys before and after the combination:", "MathCaption",
 CellID->1179244319],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Keys", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "rnaClassification", ",", "proteinClassification", ",", 
    "metaboliteClassification"}], " ", "}"}]}]], "Input",
 CellLabel->"In[282]:=",
 CellID->764718377],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", 
     ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f2\"\>", ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", 
     ",", "\<\"f7\"\>"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[282]=",
 CellID->729829850]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "combinedClassification"}]], "Input",
 CellLabel->"In[283]:=",
 CellID->432691270],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[283]=",
 CellID->1950743689]
}, Open  ]],

Cell["\<\
We can also check the membership counts before and after the combination:\
\>", "MathCaption",
 CellID->2090161703],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Length"}], "]"}], "@", "#"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "rnaClassification", ",", "proteinClassification", ",", 
    "metaboliteClassification"}], " ", "}"}]}]], "Input",
 CellLabel->"In[284]:=",
 CellID->810244695],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "822"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "5963"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "116"}], ",", 
     RowBox[{"\<\"f2\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
     RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "35"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "13"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "61"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "124"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "48"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "77"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "36"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "18"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "136"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "713"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "63"}], ",", 
     RowBox[{"\<\"f2\"\>", "\[Rule]", "38"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "43"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "15"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "33"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[284]=",
 CellID->1387605075]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "combinedClassification"}]], "Input",
 CellLabel->"In[285]:=",
 CellID->75235690],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "1082"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "6724"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "256"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "41"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "85"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "64"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "112"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[285]=",
 CellID->916666016]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clustering of Classified Data", "Subsection",
 CellID->1764557057],

Cell[TextData[{
 "Now that we have combined the classes for the various omics, we can cluster \
them together to obtain the various trends using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". A two-tier hierarchical clustering of the data is performed, using a set \
of two classification vectors, ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"classification", " ", 
      SubscriptBox["vector", "1"]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"classification", " ", 
      SubscriptBox["vector", "2"]}], "}"}]}], "}"}]], "InlineFormula"],
 " for each time series to cluster the data pairwise. The vectors are \
typically the output from ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". Similarities at each clustering tier are then computed using in \
succession from each time series first ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"classification", " ", 
    SubscriptBox["vector", "1"]}], "}"}]], "InlineFormula"],
 ", and subsequently ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"classification", " ", 
    SubscriptBox["vector", "2"]}], "}"}]], "InlineFormula"],
 " (which corresponds to the ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"input", " ", "data", " ", "time", " ", "series"}], "}"}]], 
  "InlineFormula"],
 " if the input is from ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ").  "
}], "Text",
 CellID->32166003],

Cell[TextData[{
 "The number of groups and subgroups for each tier of clustering is \
automatically determined by using internally the \"Silhouette\" (default) or \
\"Gap\" as \"SignificanceTest\" methods (see also ",
 ButtonBox["Partitioning Data into Clusters",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/PartitioningDataIntoClusters"],
 ")."
}], "Text",
 CellID->58096227],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesClusters",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClusters"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "performs clustering of time series data using two tiers of hierarchical \
clustering to identify groups and subgroups in the data. TimeSeriesClusters \
takes as input series data, where each data is comprised of two lists and \
performs clustering of the data to identify groups and subgroups based on \
similarities between the input series. The form of the input data is either \
an association of classes and members, where each member must have a list of \
two components, typically two vectors used in classification: ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"classification", " ", 
          SubscriptBox["vector", "1"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"classification", " ", 
          SubscriptBox["vector", "2"]}], "}"}]}], "}"}]], "InlineFormula"],
     ".\n",
     StyleBox["I", "Notes"],
     "n the most common case of using as input data that came from performing \
a ",
     ButtonBox["TimeSeriesClassification",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClassification"],
     ", the ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{"classification", " ", 
        SubscriptBox["vector", "2"]}], "}"}]], "InlineFormula"],
     " will correspond to input original data for the corresponding time \
series."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1813135289],

Cell["Clustering of classified time series.", "Caption",
 CellID->571851293],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"ClusterLabeling", "\"\<\>\"", Cell["\<\
Additional label to append to each cluster being computed to prepend to the \
inbuilt G#S# labeling.\
\>", "TableText"]},
   {"DendrogramPlotOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Options passed to the DendrogramPlot function used internally to generate the \
dendrograms.\
\>", "TableText"]},
   {
    ButtonBox["DistanceFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/DistanceFunction"], 
    ButtonBox["EuclideanDistance",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/EuclideanDistance"], Cell[TextData[StyleBox[
    "Distance function to be used in calculating the similarities between \
different time series in the first tier of clustering.", "Notes"]], 
     "TableText"]},
   {"LinkageMeasure", "\"\<Average\>\"", Cell["\<\
Which linkage measure to use in computing fusion coefficients.\
\>", "TableText"]},
   {"PrintDendrograms", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[
    "Option to print dendrograms for the clustering computed.", 
     "TableText"]},
   {"ReturnDendrograms", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[
    "Option to return the dendrograms as output.", "TableText"]},
   {"SignificanceCriterion", "\"\<Silhouette\>\"", Cell["\<\
Method used in determining the number of groups and subgroups at each tier of \
clustering.\
\>", "TableText"]},
   {"SingleAssociationLabel", "\"\<1\>\"", Cell["\<\
Label to use in case a list is provided to name the class of data produced.\
\>", "TableText"]},
   {"SubclusteringDistanceFunction", 
    ButtonBox["EuclideanDistance",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/EuclideanDistance"], Cell[TextData[StyleBox[
    "Distance function to be used in calculating the similarities between \
different time series in the second tier of clustering.", "Notes"]], 
     "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1454392793],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1320801797],

Cell["\<\
The output of TimeSeriesClusters is always an association of associations, \
providing a summary of the two tier clustering results for each class \
provided in the input. The output has the form:\
\>", "Text",
 CellID->416113495],

Cell[TextData[Cell[BoxData[
 RowBox[{"output", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"<|", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "1"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "11"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "12"], "..."}]}], "}"}]}], ",",
        " ", "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", "11"], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "12"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "11"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "12"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "11"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "11"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "2"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "21"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "22"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", "21"], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "22"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "21"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "22"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "21"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "21"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "M"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "M1"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "M2"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", 
           RowBox[{" ", "M1"}]], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "M2"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["subsplitClusters", "M1"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["subsplitClusters", "M2"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "M1"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "M1"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "|>"}]}]]]], "Text",
 CellID->1412755833],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<Cluster\>\"", Cell[TextData[{
     "Cluster generated using the input ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{"classification", " ", 
        SubscriptBox["vector", "1"]}], "}"}]]],
     " for similarity calculations. "
    }], "TableText"]},
   {"\"\<InitialSplitCluster\>\"", Cell["\<\
Clusters resulting from splitting the initial cluster (reported by key \
\"Cluster\") into groups using the SignificanceCriterion to determine the \
number of clusters.\
\>", "TableText"]},
   {"\"\<IntermediateClusters\>\"", Cell["\<\
Aglomerative clustering result of hierarchical clustering of each of the \
initial split clusters (reported by \"InitialSplitCluster\")\
\>", "TableText"]},
   {"\"\<SubsplitClusters\>\"", Cell["\<\
Custers generated from splitting the clusters following the second tier \
clustering (reported by \"IntermediateClusters\") into subgroups using the \
SignificanceCriterion to determine the number of clusters.\
\>", "TableText"]},
   {"\"\<Data\>\"", Cell[TextData[{
     "Data reported in the order of clustering results as rules of ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"classification", " ", 
         SubscriptBox["vector", "2"]}], "}"}], "\[Rule]", " ", "label"}]]],
     " for each time series, sorted in order of the clustering results."
    }], "TableText"]},
   {"\"\<GroupAssociations\>\"", Cell["\<\
Association denoting membership of each initial data label to groups and \
subgroups generated by the two tier clustering.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1608083999],

Cell[TextData[{
 "Output keys for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provide clustering information."
}], "Caption",
 CellID->986073698],

Cell["\<\
We now cluster our combined data (a printout of the clusters is included as a \
default option):\
\>", "MathCaption",
 CellID->565513990],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"combinedClusters", "=", 
  RowBox[{
  "TimeSeriesClusters", "[", "combinedClassification", "]"}]}]], "Input",
 CellLabel->"In[286]:=",
 CellID->1978491955],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"5"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f6\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"\<\"Cluster\"\>", "\[Rule]", 
               RowBox[{"Cluster", "[", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "]"}]}], ",", 
              TemplateBox[{"4"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"\<\"GroupAssociations\"\>", "\[Rule]", 
               RowBox[{"\[LeftAssociation]", 
                RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\<\"MIR6723\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"ZNF324\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"CBX6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
                   
                   TemplateBox[{"106"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"O60884\"\>", ",", "\<\"Protein\"\>"}], "}"}],
                    ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"RTFDC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "246.1213`", ",", "0.9403793`", ",", "\<\"Meta\"\>"}], 
                    "}"}]}], "}"}]}], "\[RightAssociation]"}]}]}], 
             "\[RightAssociation]"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 286, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 286, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 286, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[286], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[286]=",
 CellID->92211928]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization", "Section",
 CellID->1200455778],

Cell[TextData[{
 "After our data have been clustered, we would like to visualise the results \
in heatmaps and dendrograms. For the two-tier clustering we have performed \
MathIOmica can output all the clusterings in labeled dendrograms and heatmaps \
using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesDendrogramsHeatmaps"]], 
    "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", which iteratively calls ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesDendrogramHeatmap"]], 
    "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " on each class."
}], "Text",
 CellID->944139540],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesDendrogramsHeatmaps",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "generates  dendrograms and associated heatmap plots for clustered time \
series data, typically the output of all classes generated by implementing  ",
     
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesClusters"]], 
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". "
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["TimeSeriesDendrogramHeatmap",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "generates a dendrogram and heatmap plot for one set of time series ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " clusters, typically the output of a single class of  ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesClusters"]], 
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->581300403],

Cell["Visualizing the results of classification.", "Caption",
 CellID->1012763018],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"FunctionOptions", 
    RowBox[{"{", 
     RowBox[{
      ButtonBox["ImageSize",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/ImageSize"], " ", "->", " ", "200"}], "}"}], 
    Cell[TextData[{
     "Options list passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesDendrogramHeatmap"]], 
        "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2015411944],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesDendrogramsHeatmaps"]], 
    "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->768978677],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"ColorBlending", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CMYKColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "1", ",", " ", "0"}], "]"}], ",",
       " ", 
      RowBox[{"CMYKColor", "[", 
       RowBox[{"0", ",", " ", "1", ",", " ", "1", ",", " ", "0"}], "]"}]}], 
     "}"}], Cell[TextData[{
     "Color scheme for the plot. The color list is passed to an internal ",
     ButtonBox["Blend",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Blend"],
     " function to create a ",
     ButtonBox["ColorFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ColorFunction"],
     " for an internal ",
     ButtonBox["ArrayPlot function",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ArrayPlot"],
     "."
    }], "TableText"]},
   {"DendrogramColor", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"1", ",", " ", "1", ",", " ", "0"}], "]"}], Cell[
    "Color to highlight the dendrograms.", "TableText"]},
   {"FrameName", "\"\<Dendrogram and Heatmap\>\"", Cell[
    "Label for plot frame.", "TableText"]},
   {"GroupSubSize", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", " ", "0.1"}], "}"}], Cell["\<\
Relative size of group and subgroup reference column in plot.\
\>", "TableText"]},
   {"HorizontalAxisName", "\"\<Time (arbitrary units)\>\"", Cell[
    "Label for the horizontal heatmap axis.", "TableText"]},
   {"HorizontalLabels", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[
    "Labels for horizontal axis for each column.", "TableText"]},
   {"IndexColor", "\"\<DeepSeaColors\>\"", Cell[
    "Choice of color for labeling the group/subgroup index.", "TableText"]},
   {
    ButtonBox["ImageSize",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImageSize"], "200", Cell[TextData[{
     ButtonBox["ImageSize",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ImageSize"],
     " is an option that specifies the overall size of an image to display \
for an object. "
    }], "TableText"]},
   {"ScaleShift", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "Option to reset the blend of the colors used overall. The option is a \
real positive number, and is used as a multiplier for an internal ",
     ButtonBox["Blend",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Blend"],
     " function's second argument."
    }], "TableText"]},
   {"VerticalLabels", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[
    "Labels for vertical axis for each row.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1299131947],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesDendrogramHeatmap"]], 
    "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1044394180],

Cell["\<\
For each class a separate plot is generated: dendrograms are represented on \
the left, and are highlighted to represent the grouping level. The G, S, \
columns represent the groupings and subgroupings generated by the clustering. \
 The legend shows the corresponding groupings and subgrouping, and the number \
of elements in each group subgroup.\
\>", "MathCaption",
 CellID->1376228890],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimeSeriesDendrogramsHeatmaps", "[", "combinedClusters", 
  "]"}]], "Input",
 CellLabel->"In[287]:=",
 CellID->1880076040],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
/ernVKlSLV261Fjy8uXLxgXpsmbNeuTIkTgnxkyARrrv1q2b/Fq1atXHHnts
69atu3btcsjsgwcPNh69T58+sbGxqt04nt8h3V+8eLFAgQIO6T5z5szmOQoA
AAAAAEhOklXVJPB58uTp169fZGTkP//8M3bsWPPx+eqMcnO6f+21106fPi1p
etiwYUZj9uzZb9686fJRvEz39957786dO//8808jxUuONl+QrnTp0sbCtWvX
Pn78uGqPiYkZP378wYMHjSUd0r3BOd03aNDAWKeaWO/GjRtDhw41+uyQ7hs1
amQs/9lnnxk/lylTxmGiAAAAAAAAkkfNmjU1j8qXL6+WdLgiXqpUqTJnzmxu
8XDuuZfpvmfPnqqxVatWRuN7771nLBwZGWmeeU+UKFFCeqgmrlcXoFe8T/ed
O3c21pYpU6ZSpUo5PC9zujcfk//6669LS926dY2W9u3b+/AWAAAAAABg0Zw5
c5yvd2/Imzfv4cOH1ZIO6d5B2bJlPey59jLd9+rVSzVevnzZ3KspU6YYyw8e
PNgh4BtSpUplHB7vfbrfuXOnw0SCStasWR2WNB+Tnz59+n/++Ucaz5w5Y5y2
Lx1QcxQAAAAAAJDMYmJievbsWbx4cXNqzpYt26effnr+/HljMXO6r1u3bu7c
uY2c26hRI1mJh4fwkO7NV5bv16+f0b506VIJy6pdHuvSpUvGTZs3b65SpYqE
buOO8nOtWrX+/PNPYxlj73/v3r3ND7dv3z7VnjlzZqNx7ty59913n7G2IkWK
/N///d/8+fMdlmzbtq2xTKdOnYy7z5kzx2i/9957Hab6BwAAAAAgOUlC37hx
47Jly44dO+Z8qzndS/i9efPmli1b/vrrL8+5PnBu3Ljx999/r1y58p9//nF3
vr/3ZA2ytsWLF58+fdov3QMAAAAAIAVyN2c+AAAAAACwC9I9AAAAAAB2R7oH
AAAAAMDutm/f/u1tBw4cCHZ3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDcaQAA
AAAAAAAAAAAAIAUI9hEEAAAAAADAF6R7AAAAAADsjnQPAAAAAIDdke4BAAAA
ALA70j0AAAAAAHZHugcAAAAAwO5I9wAAAAAA2B3pHgAAAAAAuyPdAwAAAABg
d6R7AAAAAADsjnQPAAAAAIDdke4BAAAAALA70j2S2cyZM8eOHXvkyJFgdwQA
AAAIKfv37588efKlS5fCtgNhjnQfqm6YBLsvd8iePbt82CTjB7sjAJAE8fHx
MpzevHnT+abY2Fi5KS4uLvl75Y7002VvpZMp8O8CgBRLhpHNmzfPmzdv69at
KWqUs0iNhKH0jJR9+/alTp1atrQff/zx8OwASPch6fjx4+Z39q677ipXrlyD
Bg3mzp0b7K6R7gHY0vLly2XsSpcu3ZUrVxxu+u9//ys3ffzxx8nWGdnMXr9+
vYft0ldffVW6JOPt9evXze2tW7dWfxdOnDgR+G4CsLG//vrrueeey5gxo7E9
+cADD4wePTrY/fIDNZ6L+vXrB7svfjZr1iz11NKmTXv58mXrKzx79qz8uTl8
+HCwOoCkIt2HJCPdy6Zd/vz5U6VKZbzL77777rlz54LYN9I9ADsytgadjzZU
6f6dd95Jts7cfffdLntiUOlezJ4922iMj4+///77SfcAEvXVV1+lT59eDRcy
4Dz22GMS1tSvX3zxRbB7Z1WLFi3Uc8mWLVtMTEywu+NP169ff+ONN4oUKTJg
wAC/rPDbb7+VF6pdu3bB6gCSinQfkox0v337dvn18uXL69evr1u3rmp84YUX
gtg30j0AO0o56T4uLk4d9+hNun///feNxlWrVhl/8Un3ANxZuHChGigeffTR
zZs3q8arV6927do1c+bMkZGRwe2eRbGxsXnz5k2VKlXx4sXlOf7222/B7lGK
1qNHjySlewQd6T4kOaR7w9ChQ1X7jBkzXN7x4sWL69evP3nypJcPdODAgW3b
tjkc+engxo0bmzZtki6pX3PmzOlNur9y5YqsWTpz5swZD48ua070S1fpgLwO
O3bsSNKppol2QP46SAfWrl17+PDh+Ph4D6u6fPmyrMr8619//XXt2jXvOwMg
6HxO996Pq+fPn9+6dasMa56PZpRByV1PDCrd58qVy3xwvmyeqWO63KV774c1
RRaTDruciwCATcXFxZUqVUpGiccee0yGL4dbEz3+U4aOo0ePyjCyc+dOGVJc
LiND3MaNG2Ux//TYRDauZM2nT5/2sMySJUvk2ZUpU2bw4MHyQ7169TwsfPXq
1V27dm3YsCHROeLkics4L6P9vn37vBk/vdyIVWSxLVu27Nmzx5s1e8P70V4d
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
atSoITfVrl3baHF3DTU1v73D/neXCxvT4hlHoSdpI9Y4icA8M7zB89xx7sJv
kkZ7g/wh05yu5eqZh/Tt/cfgVlLSfZLer5BHug9JDulexrE///zz5ZdfVo3m
4evW7X0uWsK0nOavSXft2iX/fcxzg3if7uV/mbrWZ+nSpY3rNcsora4rqvma
7uPj49W3i/fdd5+xWSuPpa7eIpvTxrR+t25vbztcXMMdLztw5swZtZj5+hqb
N29W18PSSPdA6ErS9e69H1dbtGihJUwgbGyc3LhxQ+5lnKTvsjNqguVatWqZ
V24+5937dO/9sHbLdL37efPmqRYZ3N5++20t4bB8h01xADY1e/Zs9d9ftuKM
LSsZuNq1a6f5mu4lkqdKlUpL2AtsTIH++++/q0nt6tWrZywpW5XqgvV16tRR
S8o4o+adU5zTvay5cePGxhgoOVqt1pyX1YHxVapUce6bipYZM2ZUw7v8+9BD
D73wwgvr1683L3b69Gm12qZNmxqN33//ffbs2WXMd5hMr0uXLqq3J0+eVC1J
2oiVhSWTagmnDHz99dfGJNUy5vfs2VO6YZ5b3oG7cJ2k0d4watQoLeHcscjI
SKNR/k457P33pgO3kvIxuOV1uk/S+xUOSPchyUj3uXLlUufXKPIfqlWrVg7j
j4wY6ktLkT9//po1a8p/rjJlyqjpQWRIMZb0Pt2LiIgI9f83c+bMzz33nPoe
OEOGDOo/mm/pXuzdu1edPi9bktLJatWqqRWKgQMHmpc0jh+QF6FixYovJZBn
9/7778uSDt9bet+BF198Ub2SMkTLJv3DDz8sP8vzKlasmEa6B0JXktK99+Pq
0qVLVaNsxtSvX79q1arq6ER18Wh3f5rV3MuiYMGCbyQoWbKkDLZG2Pc+3d/y
eli7Zbr6sJZwHL7cUR3pKjp06JD0FxVACiVxVUVstR0lI4w69lK8/PLL5iW9
TPe3bocyLWFCJNkkk40itaFYqFAh4/Lrirp+sZZwqbunn35ahiMtYfex2sXs
8nr3WsJ0dpUqVZLVGoOqMVWyBMkcOXJobnaFSwBXd1HXrF+9erWab1+6V7hw
4VdeeaVFixYywqvhTtZj3r/8wQcfqGeRNWvWp556SjYymzVrpvZQi4YNG5of
yPuNWHHs2LECBQqoW+W5yMIVKlRQ74JsXqquenidXYZr70d7g6QGNfJLnyVB
y98p6Yn8nXJ5qb5EO3ArKR8DL9N9kt6vcKCZBLsv8BsZpszvrAwdEm+bN2++
ZMkSd3cZN26ceapJ8eCDD8omqPmrADURtId0v23bNnP77Nmz1Q4mLeFLv3Ll
yv31119qL4+x30c5cOCAWsz4htMD+b//7rvvmmefli6Zh3pFtsBloNDckOHR
PGOn9x04ffq0uqyeIuPb66+//s8//6hrlxgDo8rvDunemNWKdA/YjnE2vTfp
XvFmXFWLqYOdFNncku3PuLg4NUuJy87IrbLtrbZ4FdmqKVu27MGDB9UCapgy
TsIyU+nefG1oL4e1W7e3tYYOHSqbZGp7TOTJk2fs2LFev5AA7GHlypVGslaD
jGRASdMOZ4I3aNBA83r36LRp08zbZhkzZpQg5jyd3blz52QUMhaTjcnPP//8
5s2b6mLH6prOikr3pUqVkh+MLxtlm7NGjRrmLbpFixapp+BuOhR1CfW6deuq
X2NiYr766qvHH3/cYZiV1RrXhzJs3rxZ7mhs8Sr58+fv06eP83xuXm7EKrL1
2LVrV/W9hCL9qV69+t9//+3hRZbXSnN1FYBbSRntzXbu3Gns31fkpe7du7cP
HVC8/Biol9RdujevP0nvV8gzv1PB7guCLyoqauPGjWvXrpXA7q91Hjp0aPXq
1TJQ+2uFyo0bN2Q4XbZsmcs1y3Aq/8dleB84cKAkd0nTfyWYN2/e4MGD1dfR
3nzP7M6JEydks1k6YBwrBQAueTOuXr9+fdu2bbKBZw7diZJ7yZr//PNPGeKc
zyRNKm+GNZXuJ0+efCvhRIA1a9bs2bPH4uMCSMnU5tb69eudw5fPJHcvWbJk
x44dniczlygq45tx4rxLKt0XL178VsLXntu3b5dR0Y9dlR7u3r07MjJShuhE
V6tGe1n4yJEjnrcPPW/EOjt+/PjSpUu3bNly8+bNJPTeDd82Yo8dO7Zy5Up5
R/bt2+eXrV8vPwZJkqT3K1SR7hGS1NQlzz//vMtb1feWztNYAQA8cHecJAAE
hYcr4gHhiXSPkKSuHFq0aFHzNFPKunXr1FlOHEoKAElCugeQopDuAQeke4Sk
qKgotRVaoECBrl27/vrrr9OmTfvmm29q1aqlDsv/6KOPfLiEKACEM9I9gBSF
dA84IN0jVO3atat27dpZs2bV7lS2bNmffvqJaA8ASfXkk0/myZNnxowZwe4I
AOgmTZokg1KFChWC3REgpSDdI7Rdu3ZtyZIl48ePnzhx4urVq80XgQIAAACA
kEG6BwAAAADA7kj3AAAAAADYHekeAAAAAAC7I90DAAAAAGB3pHsAAAAAAOyO
dA8AAAAAgN2R7gEAAAAAsDvSPQAAAAAAdke6BwAAAADA7kj3AAAAAADYHeke
AAAAQCg5ePDg2LFj58yZE+yOAMmKdA8AAAAg0G545N/HGjZsmKSbJ554wr+r
BVI40j0AAACAQCtatKjm3sqVK/34WKR7hCfSPQAAAIBAK1OmTI7bjABitCxf
vtyPj0W6R3gi3QMAAABITtmyZZP0MWHChACtn3SP8ES6BwAAAJCckpTur127
tmHDhpMnT3pe7Pjx45s2bVKn8H/99dee0/3FixfXr1+f6DoBeyHdAwAAAEhO
ntN98eLF77rrritXrkRGRlarVi1TpkwqrRQrVmzNmjXOy48fP75AgQJqmYwZ
M9arV693797u0v2UKVMefvjhVKlSqeXvvvvufv36xcbGmpfp1KmTdKBgwYIn
Tpwwt/fo0UO1nz9/3sKzBwKFdA8AAAAgOXlO93nz5pVbu3fvnj59+tSpU5co
UaJQoUIqsOTMmfPixYvmhdu2bWvk+rJly95zzz1GunFO9++88466qWjRoq+/
/vozzzwj65dfX3rpJfNily5dKlKkiLRXq1YtPj5eNa5ZsyZNmjTSOGXKFP+9
EoA/ke4BAAAAJCdv0r0oX7787t27VaMsrBpHjBhhLLlixQq1F/61114zUv+v
v/6aK1cu53T//fffS6Mk9NGjRxuZPTIyUs3yN27cOPPC69atS5cunbQPHjxY
fr169epDDz0kv3700Ud+eg0A/yPdAwAAAEhO3qT7mjVrXr9+3dwuYV/aW7Zs
abQ8//zz0iK5W51ubxg6dKhDuo+JicmSJYs09unTx+HhJL9Le+XKlR3aBw0a
pA4J2LFjx2effaZODbh8+bIPzxdIHqR7AAAAAMnJm3Q/adIkh/aPP/5Y2uvU
qaN+jY+PV+sZOXKkw5LOc+avW7dOWtKmTRsVFeWw8KZNm+QmeVCHdln/f/7z
H7mpYMGCqVOnTpcu3YYNG5L6TIHkRLoHAAAAkJx8S/fqFPtatWqpXw8ePKhS
TGRkpMOSzul+9OjRauH0Tow05DC3njh16pTqqujXr5+l5wwEHukeAAAAQHKy
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
r7/++uGHHzr6yeOPF3jpJdJ9GNWMGVrt2lqRIuy7J91Tfi7SvR2LdA8AIYB0
D5u6cCHi558bv/NOje7dy/ulypS56+WXSfdhVFOmaHXraqVKafffT7on3VP+
LNK9HYt0DwAhgHQPmzpy5PnPP9cKF9aGDPFPPf209sorpPswKkn3H36oPfss
c+aT7ik/F+nejkW6B4AQQLqHTUm679RJP2l61Sr/1Msva7Vqke7DqEj3pHsq
QEW6t2OR7gEgBJDuYVOS7mVr5Pnn/Zb13nlHY878sCrSPemeClCR7u1YpHsA
CAGke9hUSKb7mze11au1yEhL1ayZ1r496T7xIt2T7qkAFenejkW6B4AQQLqH
TYVeuo+P186f1/r312vAAN+rZk2tZUvSfeJFuifdUwEq0r0di3QPACGAdA+b
Cr10f+2aNmyYPpNA69Zax46+V7VqWvPmpPvES6X7ihW1hx8m3ZPuKX8W6d6O
RboHgBBAuodNhV66v3pV3+eeL5+e7rt08b2qVyfde1Wke9I9FaAi3duxSPcA
EAJI97CpkEz3rVrptWmT3g2fq317fQ8+6T7R4sh80j0VoCLd27FI90g5Goeu
YL+0CH2ke9hUqKb7IUO0S5csrYc5870s0j3pngpQke7tWOQOpByh+mkM1eeF
FIV0D5si3bsr0r2XRbon3VMBKtK9HYvcgZQjVD+NHp5XXFzc9u3bIyIi+vfv
37Fjx759+44dO3b58uWxsbHu7hIVFTVixIglS5Y437R79+5JkyYNGTJEVjV0
6FD5edu2bR46tnDhwuHDh1++fDlJT8c30dHRP/7448SJE33ozI4dO8aPH//d
d99Nnz59165dgeymjZHuYVOke3dFuveySPekeypARbq3Y4VqnoIdhd5fTON5
uXy+ktMl1Ls8kv/LL788ceKE812uX78uN8kCP/30k7k9Pj5+2rRpLlc1derU
uLg451WtX79eLXDu3DnLb13iJJvLY33++ecub/XQmTlz5jg8o7lz5wa+v/ZD
uodNke7dFeneyyLdJ08FPbNQyV+kezsW6R4pR+j9xTSel/OTjYmJ6dChg4qr
48aN27Rp08mTJ/fs2SPRtUWLFtIotzrswT9z5szgwYPVXRzS/e7du1X7mDFj
du3adeLECWmRZVTjokWLzAvHx8cvW7ZMPUrypPsVK1aox3JO9547c/To0WbN
mjVp0mTBggWHDx+ePXu2WszzMQnhiXQPmyLduyvSfaIVH6/FxmqTJunpvkIF
0n1gK+iZhUr+It3bsUj3SDlC7y+m8bycn+wvv/wi7c2bN9+5c6fDTRJppV1u
Xb16tdG4ePHili1bGvuvHdL95MmTpbFnz54Sls3t6tiAQYMGGS2nT5+WX827
wgOd7k+dOmX03CHdJ9oZdeuECROMlkmTJknLN998E9A+2xHpHjZFundXpHvP
JdH+wgXt5EltzBjt/fdJ9wGvoGcWKvmLdG/HIt0j5Qi9v5jG83J4pjExMWpv
9ezZs12+FOPHj2/WrJk51TZp0kSWl7Q+btw453Q/atQoaRw+fLjDenbs2NG9
e/chQ4YYB+erA92bN2++ZMkSeQif0/2ePXukJy6P+TeLjY3t16+fOqjAOd17
7sz169fVsz548KDRePjwYWmR9qtXr/rQ7RBGuodNke7dFeneQ8XF6S/v3Lna
7Nlahw5avXqk+4BX0DMLlfxFurdjke6RcoTeX0zjeTk803Xr1nnebx6TwNwi
uX7t2rWSpufPn++c7pctW6Yy75QpU1yesG9YunSppPIzZ87Iz+oIAd/Sfd++
feW+ERERDkcLOJg5c6YsNmTIkAMHDjine8+dUXeRJ+XwEOp7gP379/vQ7RBG
uodNke7dFeneQ127pm3bpuXMqRUtquXLp1Wvrqf7hx8m3Qewgp5ZqOQv0r0d
i3SPlCP0/mIaz8vhmap91m3atPHhVZo3b55zur969erAgQON49s7dOjw888/
r1u3Ljo62sOqrOy7P3LkiDrefvz48e6W2bt3r2Tz1q1by0McPHjQ5Xn3Hjqz
Y8cOafn0008dlpQWTr13RrqHTZHu3RXp3vOLvHmzliWL9vrrWrlyWs2apPuA
V9AzC5X8Rbq3Y5HukXKE3l9M43k5PFNJxOowe3Pj33//HRER8X8Jfkzwyy+/
OL9KLtO9uHHjxqRJk9q0aWM+jb1p06Zz5sxxt3vdSrq/ZToCYcqUKc63xsTE
dO7cWW5ds2aN/OpDut+yZYu0dOzY0WHJbt26SfvGjRt963aoIt3Dpkj37op0
76HktV2/XnvkEf1n5sxPngp6ZqGSv0j3dizSPVKOUPqL2fhODs906tSp0ti+
fXtz45IlSxzuJYHX+VVyl+6VuLi4vXv3zpo1a9CgQRLt1Xq+//57lwsnmu53
7Nix1qNOnTqph5BHdLivmrF/1KhR6lcf0v327dulRR7CYUnJ+9Iu2d/dqsIT
6R42Rbp3V6R7D0W6T/4Kemahkr9I93Ys0j1SjtD7i2k8L4dnunjxYhWKz58/
bzSePHky8rbffvstSeleQv2VK1cclrxw4YLkevVA6tx2B4mm+x49ejT2mnln
ujqoXvzxxx+rEqgT8Fu1aiU/b9261ZvOHD16VFpat27tsKS0SPvu3bvddTs8
ke5hU6R7d0W691Ck++SvoGcWKvmLdG/HIt0j5Qi9v5jG83J4pseOHVPhd+3a
tS5fiv3793uf7mVtTZo0kYUvX77ssHB8fPxnn30myy9fvtx5VYmm+zlz5oz1
SK1cDBgw4Nq1a8Yd1Sx/7vTs2dObzkRHR6vlr1+/bjTKo6jG06dPu+t2eCLd
w6ZI9+6KdO+hSPfJX0HPLFTyF+nejkW6R8oRen8xjefl/GT79Okj7Z988sme
PXucb922bZv36T4uLq5du3bSuGjRIoeF5aa2bdvKTV7uLk+SY8eOSf9lDfJc
HK5Pt2/fvgl3GjlyZOOEi9/JzwsWLPCyM2oCvXXr1hkta9eulRZ5Ur71OYSR
7mFTpHt3Rbr3UM7p/rnntGLFSPcBrKBnFir5i3RvxyLdI+UIvb+YxvNyfrKH
Dh1SeVYC8ooVK9SeaAnjEpmnTJmibvL+yPyIiAi1R3vGjBkXL15UjZKUhw8f
Lo0tW7a8ceOG86qspHuJ8126dFE74p2PGXDmw3n3t25fXKB3797qvAP5t1ev
XtIye/ZsH/oc2kj3sKkUm+6vX9dOntROnEhyHTigNWxIug9IbdigrV2r19Kl
2s8/63H+1u10/+KLWsmSpPsAVtAzC5X8Rbq3Y5HukXKE3l9M43m5fL6bNm1S
p5Ar7dq1U9eYU7p16+byom8u0/2lS5fMV8Rr06aN2puvviJYtWqVyw5YSffq
jH7ppPFlgme+pfvo6Gj1EnXo0OGHH36Qf+XnHj16xMbG+tDn0Ea6h+3Ex8df
uXLln38qduqkVarktwDol3QfH69FRelXVPeh1q/X3n1XGzyYdO/nun5dmzlT
mz5dmzFD+/VXbdAg/VD8W7fTfbVqWunSpPsAVtAzC5X8Rbq3Y5HukXKE3l9M
43m5e8pnz56dMGGCkcRFixYt+vTp88cff7gLsL///rssNnbsWIf2mzdvTpo0
SV2ETmnZsuWAAQNcHvmvqC8TzDP7eW/u3LnyWN7f9/Dhw41dXd4u0c6cPHmy
d+/expPq1avX0aNHfehwyCPdw3YuXbrUt2/fFi0eqFJFv1i5vzKgX9J9TIy+
jfTss/qF1F97LWn16qv6hdcHDCDd+7OuXtXmzNEvbf/uu9rHH2vvv6+/1IUL
6zepdP/KK9qTT5LuA1hBzyxU8hfp3o5FukfKEXp/MY3n5fmJx8XFRUVFSf49
ceKE/GzxZbx69eqBAwf8sirPXB7tHyDR0dGHDh06e/ZsfHx8sj2ovZDuYTtn
zhx6773/vvRSzjJltGee8VsM9Eu6v3JFe+stLUcO7dFHtcceS1qVLKnlz6/1
70+692dFR2ujRunvyEsv6e9vrVpalSpaoUL6TSrd16ihPfUU6T6AFfTMQiV/
ke7tWKR7pByh9xfTeF7BfWERDkj3sJ2FC/9Tt27eTz9NW7t2itt3f/myniIH
DNCWLdNWr05ayV3q1ePIfD/XhQta377aRx9pK1ZoW7Zoq1bpB+ebz7vnyPxA
V9AzC5X8Rbq3Y5E7kHKE3l9M43m5e8pxcXHbt2+PiIjo379/x44d+/btO3bs
2OXLl3s4rzwqKmrEiBFLlixxvmn37t2TJk0aMmSIrGro0KHys8sz90+fPj1r
1qwxY8aMGjVqxowZhw8fTvp7lWQLFy4cPny4h/n3oqOjf/zxx4kTJyZDZ0IS
6R62M2lS9rp1tYEDtQ8+0I+B91cM9Fe6r1JFPxQ8JibJ92XOfP9WbKz+duzc
qX32mf6CnD+vNzrPmS/v12OPke4DWEHPLFTyF+nejkW6R8qRnH8xn0rbMBnK
eF4un6/kdAn1jV358ssvT5w44XyX69evy03Os+rFx8dPmzbN5aqmTp1qPkR/
+fLlav46Q5MmTebOneu/t9GF9evXq8fyMIPfd99953naPXhGuoftSLqXUDZ7
tta5c4qbM590n3LqxAlt2jStalU9vHfq5DbdywKlSpHuSfeUP4t0b8ci3SPl
CKt0HxMTo2aAF+PGjdu0adPJkyf37NkjQbtFixZqlniHPfhnzpwZPHiwuotD
ut+9e7dqHzNmzK5du06cOCEtsoxqXLRokVrs2LFjKtoPGTJk7dq1f/3114gR
I9Qysnwg3tP4+Phly5apZ+Qh3a9YsUItQLr3GeketiPp/uOPtYUL9a0R0r1z
hWG6j4vTbtzQJz0w186d+hn3Tz+tz4FAuifdU8lZpHs7FukeKUdYpftffvlF
2ps3b75z506Hm44ePSrtcuvq1auNxsWLF5uvl+eQ7idPntw44dLzDpPOqWMD
Bg0apH6dNWtW44RL7xnfG8TFxXXq1EkaA3FI/OnTp+WhzccJuEz3p06dMp4a
6d5npHvYDunec4Vhur94Udu9W1uw4I7q318P7198odWtq3XtSron3VPJV6R7
OxbpHilH+KT7mJgYtTt79uzZLl+K8ePHN2vWbMKECUZLkyZNZHlJ6+PGjXNO
96NGjZLG4cOHO6xnx44d3bt3HzJkiDo4f9KkSRKf5V/zMlOmTJH7jhgxIklv
1p49e6QnnqflnzNnjvoGY8mSJS4vZy9iY2P79eunjjog3VtBuoftkO49Vyil
+5s39ZdFXhDPtXGjNnas9s032siR/6sWLbQ33tD69dMaNdJP4jh2TH93jh/X
Zy8sVEj7+299+Ro19MvhFS1KuifdU/4s0r0di3SPlCN80v26des8H6kek8Dc
Irl+7dq1kqbnz5/vnO6XLVumzqCXqO7yhH0P1P793377LUn36tu3r9wrIiLC
wyXqli5dOm7cuDNnzsjP6mgE5+c7c+ZMdabAgQMHSPdWkO5hO6R7zxVK6f7C
BW3vXm3DhkTqk0+0++7TX/m33vpfVaqk75cfMULfcf/pp/pVCbZt09as0efM
z5BBk4/QSy9p2bJpWbNqWbKQ7kn3lD+LdG/HCs90f/PmzQkTJqxfvz7YHcEd
wifdq53abdq08eFVmjdvnnO6v3r16sCBA40D4Dt06PDzzz+vW7cuOjra89qM
rwX279+fpG4cOXJEHU4/fvx4b5Z3ue9+79698tCtW7eW9oMHD5LurSDdw3YC
lO7r1dNefVU/WTs62vc6eVJ74QXSvbcVF6e/Yu7q+HE9kk+YoP3ySyL1xhta
/vz6PvrPPvu3WrfWatfW0327dvq1FeTNlZj/44/at9/q+/HTptW/CnjiCS19
ej3pZ8yYqlixYoH+3JLuqfAp0r0dKzzTvTrl2eH4ZARd+KR7ScTqMHtz499/
/x0REfF/CX5MIB9U51fJZboXN27ckI90mzZtzOe5N23adM6cOe52r2/cuFEd
8O/b/wXjCIQpU6YkurBzuo+JiencubM0rlmzRn4l3VtEuoftBCjdv/aaHsxX
rdI2b/a95O4VKujz+ZPuvXzKEt7d1f/9n/bmm3psr1QpkSpSRH/Zt23Tz75X
tXKlfs3EatW07Nm1TJn0CJ8167976jNn1oe7dOn0jK+kT5/+6aefDvTnlnRP
hU+R7u1Y4Zbur169akwkTrpPacIn3U+dOlUa27dvb25csmRJ4ztJInZ+ldyl
eyUuLm7v3r2zZs0aNGiQRHu1nu+//955yWXLlqlo/80339y8edPl2nbs2LHW
IzUjn5BH9PzmOqd79T9x1KhR6lfSvUWke9hOgNL9Bx/oh2pHROhHbvtccvcn
ngjHdH/tmp6pJV/v2OFtbd+urVihz2Y/bJj29dcuql8/7cUXtZw5terVHatq
Ve3xx/VL3ZUqpZUurR+WL//K6y/PesoUvX74QT9c/8kn9b3zqVNrnmXIkKFC
hQqB/tyS7qnwKdK9HSus0v3WrVslOxjRiXSf0oRSunfI6Q7PdPHixar9/Pnz
RuPJkycjb/vtt9+SlO4l1F+5csVhyQsXLkiuVw+kTn43qPWL0aNH37hxw907
0qNHj8Ze27hxo4c31yHd79ixQ93rjz/+WJVAnYDfqlUr+Vn+q3pYFVwi3cN2
ApTuv/9ea9hQD4kSz30uufu992ozZ4Zduj98WGveXKtZ844z3z1X7dpayZL6
yPP229q777ooWebRR7UCBfRvAByqdWt9f33evHqulwXy5NEyZtTSpNF3x6dK
pcd5tWtefpBfhfrXnUyZMlWuXDnQn1vSPRU+Rbq3Y4VVulcHLQ8dOnT69Omk
+xQolNK95333x44dU9l27dq1Ll+K/fv3e5/uZW1NmjSRhS9fvuywcHx8/Gef
fSbLL1++3GhR5wWIqVOnepgT71bC/ABjPVIrFwMGDLh27ZqHVTmke3W+vzs9
e/b0sCq4RLqH7QQo3a9fr6fykSP1mO9zff21vjd51qyUnu6le3/8oU2erP32
m39q4ECtaVM9dHu/JSkhvUYNfeQpXVorU8ZFySuZL5++717eZYeqUEHLnVu7
6y79wPscOfRp8STOS5ZXcV5Kkr7xc6LpPl26dGXKlAn05zaM071FwU89VFKL
dG/HCqt0/9VXX6ndi+oQaNJ9ShM+6V706dNH2j/55JM9e/Y437pt2zbv031c
XFy7du2kcdGiRQ4Ly01t27aVm4y94RLJGydMo2fkfZ8dO3ZM+i9rk+dy9epV
zws7pPt9+/ZNuNPIkSMbJ1w+T35esGCBxb6FIdI9bCdA6d4vZZc58y9c0D7/
XL8Q/Hvv+ackjDdurH+5MWmStzV2rNaypT7yZMzottKn/3cvvIeSIK/KyPJJ
lSpVqqJFiwb6cxvG6T74sYVK5iLd27HCKt0bSPcpU1il+0OHDqnAKwF5xYoV
p0+fvpUQxiUyT5kyRd3k/ZH5ERERaq/3jBkzLl68qBolSg8fPlwaW7ZsqQ6/
3759u1osMjIy9k6er1zvTOJ8ly5d1H5252MGnLm73r2B8+4tIt3Ddkj3nuvL
L/WD5Hv00A8hcFfDh2tNmujh2l+bhdWqafXra+3b6yfLe1nSz2bN9NMZnnrK
dT30kL7jXh1v75DlM2T4X6VPr5eaIk/tsjfK2HGfaBUuXDjQn1vSPRU+Rbq3
Y5HukXKEVboXmzZtat26tXE4ert27dQ15pRu3bpt27bN+V4u0/2lS5fMV8Rr
06aN2puvviJYtWqVWkySuLuD4b/66qskvVnqjH7ppPFlgmek+0Aj3cN2SPee
a+BA/aT1evX07OyuypfXp6Pv1k2/SJyHGjnSsdydkiBre/ll/d8PPkhCNWjg
+ox7VZUq6ZMYqMxulJDYnimTPvW9UfKrBPyEY+z/922ASvpqeQ+l0n2hQoUC
/bkl3VPhU6R7OxbpHilHuKV7cfbs2QkTJhhJXLRo0aJPnz5//PFHbGysy7v8
/vvvstjYsWMd2m/evCkfaXWNOaVly5YDBgwwjvyPi4szZtG3nu7nzp0rj2We
FdAz9cWFh+UPHz4sC3Ts2DFJ3YCBdA/bId17rl279OPe+/XTBg1yW6++qu8Z
r15d+/RTT/XYY/q+dXUWfNmy+hT0qtS+9XLltKef/reKFtUeeECf4y5//qRV
vnxuK0cOfde8Sy5zuqbdsbPee+nSpStbtmygP7ekeyp8inRvxyLdI+UIw3Sv
SO6OioqSeHvixImkHiHv7OrVqwcOHPDLqjzzMNk+kh/pHrYTqule7tKmjda/
v3b8uBYdneS6eFE/m17qxAltwQL9MnMe6rXXtFy59Ons3n/fU6VL9+9l4qXU
FHZG5cypl6wkd+5/S5ZRO9BtJ0OGDOXLlw/055Z0T4VPke7tWLZL97NmzYqo
XNlDefOMSPcpU9ime8A68yZusPsCeCVU0/21a/qp6C++qH30kX5SfJKqYUP9
anSVK+svyHPP6TvcixXzVPny6cld8rjnHetq8nlzOU9qJ+tRpa5GZ0eS7p95
5plAf25J91T4FOnejmW73CHp3vMHqeN//5voSkj3KRPpHvCZeRM32H0BvJLC
073E89mz9Z3pN28mreS+Q4dqDz+sHwZvHAPvZT3+uH4cu/fhWp3A7oFNc7pv
2HdPuqf8W6R7O5btckfg0v2VK1f27t174MCBQHUdiQnDdB8XF7d9+/aIiIj+
/ft37Nixb9++Y8eOXb58ubuT7kVUVNSIESPkM+x80+7du+VTPWTIEFnV0KFD
5WeX8/KdPHnyt99+Gzly5Pjx49euXZvoxez8YuHChcOHD/cwu350dPSPP/44
ceLEZOhMSDJv4ga7L4BXUnK6l1D/1FPaL79oS5dqf/6ZtFq2TBs/Xnv0Ue2R
R/R/k1RFiugnnqvZ481l7Fg372F3mIJe7uiwgz5jRi1PHv1fNSO9cUd1bnvo
yZgx47PPPhvozy3pngqfIt3bsUj3hq1bt6rJxgPWdyQiOf9iVs7UJRnKeF4u
n6/kdAn1Lue4+/LLL0+cOOF8l+vXr8tNznPmx8fHT5s2zeWqpk6daj4Bf/Xq
1Wr6ekPPnj0vXLjgv7fRhfXr16vH8jBn/nfffcec+VaYN3GD3RfAKyk53at9
9yNH6vPaTZmStJo8WRs9Wp/s7uGHfUn3kr4zZXIsh8vHmy8kJ6VmmE9Sug/J
ffqS7p977rlAf25J91T4FOnejhWe6X7p0qXu0n3btm0D1nckIqzSfUxMTIcO
HVTmHTdu3KZNm06ePLlnz565c+e2aNFCGuVWhz34Z86cGTx4sLqLQ7rfvXu3
ah8zZsyuXbtOnDghLbKMaly0aJFa7PTp082bN5eW4cOHb9u2bdWqVd26dZNf
hw4dGpi3VP/aYdmyZeoZeUj3K1asUAuQ7n1m3sQNdl8Ar6TkdH/9uvbDD1qd
Onq98UbSSu5SrZqeqUuW/Heaeu+rVCmtUCH9+nHeT1afN6+WJYvbwCsZ32WQ
l+6FHvbdk+4p/xbp3rfq3cVSWXz08Ez3SJnCKt3/8ssv0i5Ze+fOnQ43HT16
VGXw1atXG42LFy9WF5Vzme4nT56s9sJLmja3q2MDBg0apH6dO3eu+grr+vXr
qkV9qdWsWbOYmBhr754Lp0+floc2HyfgMt2fOnXKeGqke5+ZN3GD3RekRDI4
RKcwY8dm//DDFJHu4+K02Ng76to1beZMrX597e239SvOJ6nkLjVr6gn9uef0
AwCMqlxZq1hRb3RXzz6rX7++dGn9kH7nKlpUD/4FC+r/mqtAAX3Se+dj9V2W
ca150r3PSPdU+BTp3rfq08lSWXx00j1SjvBJ9xKl1e7s2bNnu3wpxo8fL4l7
woQJRkuTJk1keUnr48aNc073o0aNUnvkHdazY8eO7t27DxkyRB2cv2vXrqlT
p0ZGRhoLXLp0KdFj5l3as2eP9MTzRffmzJmjvsFYsmSJOh3A+VFiY2P79eun
jjog3Vth3sQNdl+Q4ki0j4qKmpLCtGuX+b//1S/61j2o6V6i/fnz2smTd9SJ
E9r+/dqWLb7U5s3apk3auHHamDH6AQBGffWVfun5tm09VZs2WuvWWqtWLuqN
N/53eXqHKl1anz+/cOHEq2BB7Z579FHCmyPzE52yL6XhyHzSvbvq/4WlCnr/
g1WkezsW6R4pR/ik+3Xr1nnO1DEJzC2S69euXStpev78+c7pftmyZdLYpEkT
2WB2ecK+S1evXv3555/ljt26dfPyLoa+ffvKHSMiIhyOFjBbunTpuHHjzpw5
Iz+roxGcn+/MmTOlfciQIQcOHCDdW2HexA12X5DiXLkStWHDrA4dOgwd2mHY
sJRSDRpkeOst7Y8/tC5d9Eu/rVsXnFq1Sps1S5s2TZs61Z81eLDWs6fWo8e/
JVtcX3yhX3r+3Xd9rGrVtBIltOLF9QP+Herhh/Xkfv/9ide99+pXtPcS6d4l
0j0VPkW6D0oN/tRSke6RcoRPulc7tX2bwnHevHnO6V5y+sCBA40D4GUbXmL7
unXroqOjXa5EHTOv9qd/+umne/bsSWo3jhw5og6nHz9+vDfLu9x3v3fv3iZN
mrRu3VraDx48SLq34v/ZOxO4qKr2j5+3xTSzfd9X25c3szJNrextedu1TbPF
in0Z1thEIEARwQUUUIhkCUdw+wtpsgRhKqTxJoISBi4QCIK4sQ/+n8Oh63Vm
uMzM4zBzmfP7fD994MyduWdmGJvvPec8R/wV19R94TG7VFcXOjldMWLEiJkz
R3z5pbnw4ovknXdIQQFxd6eF45591gQ8/TRd6n755eefkSPJpZeewxVXqFfD
0wtWOk8rF1ygB0Oynh4L2P3zzz9v7E+Txdr9ImeCAek7pp3qbLFwuzeMoNko
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
Y/dGBVlnDCksyLOnzECBPLt8Qdq9yftvMMu/RoEsQYnsPLd7HvOJRdl9W1ub
l5cX89nk5OSSkpL6+vrKysqsrCx7e3tohFvVRvAbGxsXLFjA7qJm9xUVFaw9
Pj5+3759dXV10ALHsMacnBzNDhQWFrJbB8Hu+zsX9BYa3dzctm3bVlZWJpT7
O3jwoLG7NPQi/opr6r7wmF243Q8CXl60Iv0LL1A9748ZM8jtt9Pydz09Wmhr
I6Wl9DVxdERhb09XyoO8X3QRHWfvD0L6quSJERfQM8/SeRLhdm9UTD4eiqFg
IgoT9jz+SxTIsyPtfr4HCpP/2cgUbvc85hOLsvuUlBRot7Oz27t3r9pNNTU1
0A63bt++XWjMzc0V75enZverV6+26t16vqenR9zO5gaEh4erneLIkSPCoxnb
7vs7V2Njo7W1NTSWl5cLjQEBAXz43rCIv+Kaui88g53OgVJenuPszO3ecEC9
4aU7dUqKr74iTz9NK9W7uvYLCD54t58f+ftvLRw+TIqL6eT8zz4jn3+O4tZb
6aA8wKbQa4WcWwxfMHox8gqfmW9UkHvSIYUFuXA+ewoKZEVBTL195Bxv5OuG
tHtMXTvgk2QUmIIDcVYokPvde81Fwe2ex3xiOXbf1tbGBug3btyo9aVITU21
tbVNS0sTWpgIg60nJydr2n1cXBw0RkVFqT1OWVnZnDlzIiIixJPzu7u7586d
ywb6Dbb7yspK6MmAFf4lzrVu3TpoSUhIEB9fU1MDfW5qajKgSxYe8VdcU/eF
Z1DT2tpaMVC2bEkG9+R2bzCnT9M19WvXSvH223TcfMsW0tjYLxUV1O4ffJAe
rJU33iATJpwHxoyh5fcfeoiW6bOc8LF7o4Ksa4e0e+SedEjJRdq937eGs/JT
FKa1+7leKMZvRYHZQvGrFShCfFAEzUbB7Z7HfGI5dl9cXMzGsvvT2LbeiFvA
64uKisCmN23apGn3+fn50GhtbZ2enq51wb44GzZsgINB+aurqw22+9DQULhv
YmKi2mwB3c+1YsUKNj+hvr4+Ly8vOTl5y5Yt8LMBneE5w+3eUtPd3XXo0F74
7Pz8sxQpKQtmzOB2bzjNzSQzkyxfLsVrrxEPD1qvXvpxxo4lTz5JDx6QV14h
L79sIFOm0Lp548fTPexGjpRixAg6vj80wu3eqMxIIRiQdv/xDyiQQ7FfL0eB
WUONnHUQ5okCaffOi1Cg/+QMj3UswYCc6MJr5nO7HzKxHLvPzMyERoVCYcCr
9OOPP2rafWtr6/z584V5+15eXitXriwuLj558qTa3ffv329tbe3s7NzU1HTg
wAGD7f7w4cNsvn1qamp/x0ifKzw8nN3d1tZW6Lmdnd3WrVsN6A+P+CuuqfvC
M3hpajpoY3PFqFGjnnxy1Nix/fL445c+/DC3e8MpLKR7wElPhv/3v4mz8wB2
39NDn++OHeTnnwdm7Vr6Eq1aZSDJybSIH2j+9Onko4/6+PBDygcfkPffp0yb
Ri8jPP64EY172LDBm+HPZ+YbFeTG60i7D/ZF4R+IArk/Wqi34TRchwI5iIy0
e8ykBWCxEwqM3c8JIBis4lDw/e653Q+ZWI7dg9KyafbixvLy8sTExO96k9Cb
lJQUzVdJq92f6V14q1QqFQqFqPy8lY2NTWZmpjC83tbW5uvrC+07duyAXzF2
f0Y0AyE9PV3z1gHP5ePjIyzGz83NBalnc/hB9mtqagzrkiVH/BXX1H3hGbwc
PXrgk08ImDv897PP+mXqVPLcc9zuqVyfOEHXtv/vf+SPP/QgIYFceSUtaC+x
ffyECbScXUEBOXJEitJSnew+K4uWvp83j4SHG0hoKF0p8MwzWuyeCT5z/P/+
l16XuOACcvHFfVx0EYVV2MMHHnDQ7J6P3RsV5FJipN3bxKBA6jlypjTGr7c/
i0KxEAXS7r+MR4G+oGR4/u9NggG5R0OEKwpu9zzmk6Fk91bnRu2ZZmRkQKOH
h4e4MS8vT+1e4Lmar1J/ds+iUqn2798PH5Pw8HBQe/Y4sbGx7FZWRT8uLo79
OqDdl5WVFUlGMHTNOngDngt+hhZnZ+eWlhbW0t3d7ebmJvHseCQi/opr6r7w
DF4aGg6AqSUnk6Ym6q39UVJCRY/bfVcXfSlAeN94o9+V71oBc7/9dnLypPad
7Biffkq++ILEx5P0dCl0HI7/9lvywAPkppuktrST5q67yHXX0dr40vP/p0yh
KwUuvZRcey3lmmvoVnrAFVfQRnmF271R2fIywYC0e/toFMtsUSDnt2PY8QwK
0667R06ZQF4cwNg9cmo9siwespwgt3se88lQsnvpsfvc3FwmxceOHRMa6+vr
t/6TtWvX6mX3IPWnT59WOxKsGbyenaixsRFUnf2cnZ29rTdsUbyTkxP8vHv3
bs1zsQr2OmbXrl3CHXU5FxupV5vYz2Y1wE0D/rXwqEX8FdfUfeEZvIDdf/AB
WbOGdHZKWW1lJbHwHfHAvhsaSFUV9euJE+lUBzBx3QELBrtvbaUvYH94esJ3
KjoZftGi84C9PVX7G26g0+Z155FHyI03kptvpsX0rr+ejBpFh86ffVaKsWPp
pQAQ+auvplx5Zd9+93BftmuejMJn5huVtzYQDEi7/zwRBWZuPICcaI3xa+TW
55i68QDS7te8h2JmEgqM3SNXNHjMR4G8lsXtnsd8Yjl2X1tby+S3qKhI60tR
VVWlu93Do1lbW8PBp06dUju4p6fH3d0dji8oKGCV9/pLYGCg5rkyMzOTJMMe
HBIWFtbe3i7cUZdzsd3t1eweXpD+OsMjHfFXXFP3hWfwwu1eR/bto14fGUne
eYe4u9OfN27UA3D2W28lNTWktrZfNmygW96/9x5dzI7nmWfIZZeRRx8lM2bo
yvTp9OzDhlE3B0lnnj5iBPV0CeAsrLYeCD5w4YV6b4dnPhvncbs3KtNTCQbT
jt27RKL4z08ofvjYcGJsUCDr2iHtPn8SCmRxOYzdz/cgGNzDUTgtRsHtnsd8
Yjl2DwkJCYF2R0fHyspKzVtLS0t1t3uVSuXq6gqNOTk5agfDTS4uLnDT7t27
//rrr7Rzw/zazs4Ofv7pp5/0fb9qa2uh//AI8FxaW1vFN+lyLrYjntowPRvi
T0pK0rczPOKvuKbuC8/gRe52/+mndKp8e7txOXCA1rT/4gvyzTdk8mTi709+
+YXs3KkHCQnkzjvJ7NlSWFuTV1+la9iffFKdJ56gnv7IIwPw0EN0Nj7j5pup
p994I72vjrCx+wsuoNvcDx9OgR+E1fQ6YoCqc7u3EN5fTTAg7R451TlgDgrk
DPN17xgOchAZ2XOk3W8bhyL+SxQYu9/8CsGwwA0FcsIGt3se84lF2f3BgwdZ
rXgQ5MLCwoaGhjO9Mg7KnJ6ezm7SfWZ+YmIiGxZfv3798ePHWWNTU1NUVBQ0
Ojg4dHZ2aj4Upqoe6Lyfnx8bZ9ecM6DLuY4dOwayD41btmxhLfX19c7Ozla9
2+QZ0CULj/grrqn7wjN4kbvdf/wx2b6dtLQYl/x8OhX/llvozPlx40hQEC1t
V1WlB+vXk3vvpXPdDePaa+koufTOdJdeSmUcAnrOEMbQ9cKSM3z48AkTJhj7
Q2exdj8tnWBA2v3sIBTR9iiQE60jXQwnAodvMAqk3SPLHSDtPvkTw0EOviOv
JiGnmnC75zGfWJTdQ0pKSpjMsri6urI95lj8/f1LS0s176XV7k+cOCHeEU+h
ULDRfHaJYNu2bVo7gLF7tqIfOilcTJCO1nOtWbOGdTIkJGT58uVsJkB0dLRK
pTKgSxYe8VdcU/eFZ/Aia7v/5Rdayd/WFvu1f0C++oqWxZs0iaxbR7y9aUk9
+K9ej2BjQzeOv+UWXbn55rPcdBO1ezB3caMmcNjVV9OJ8SNG9DF8OB2+v/hi
+l8BC/d36fCqekZlQiHBgPwUJ8xCkT4NBVIzMXO8kdX+532DAmn3yCFs5MQD
zNg9cm488s/1nXUouN3zmE8sze7P0N2sjqalpQkmDrG3twfVzc7O7u7u1nqX
zZs3a5273tXVpVQq2SZ0LA4ODmFhYVpn/rMcOnQIDvP29tb/vTqTlZUF5xJX
BZROf+fKz89naweseuvnx8fHd3R0GNAfHvFXXFP3hWfwImu7//NPKsIjR/aV
cTMel15KbruNrvFvbyebN9NK8rffTmfaG4k77qCPLwCnhjNecAGdeC/BAw/Q
I8Hl2ZJ5xqhRtPPC+P5ll1H95+kv3O6NCnqaNArkfnxL7VAg695j7H792yiQ
LzvS7rOnoEBf2jU8yJUgyI0I31uDgts9j/nEAu2eRaVSNTc3g//W1dXhh61b
W1urq6vPy0NJR+tsf8PS2NhYW1vLh+wxEX/FNXVfeAYvsrb71laybRspLDQ6
K1fSOnX330+H7O3syAsv0G3gjMSLL5Lx4+lIvZhhw+gHk5Wtk4DNzGfbzTOG
D++rXQ+PwPag55EIt3ujslBBMCBNDbn8HDmxH9l5zN7lSE8M9EeBtPuvVqBA
7neP+YNBXstCDv0rP0DB7Z7HfGKxds/Dg4/4K66p+8KDSnd3d6fOqampfP99
udr9oFFWRpyc6DA6vFbni2nTyNSptAK/Gm+9RR1fWDuPZMSIvn3nQfzB7qGF
RyK8qp5RQQ+kmhLk2L3J+28qkHaPPDumGiFg8lfPVMjOO7jdD+Fwu+fhMTji
r7im7guP4VGpVNXV1b/onP/7v9WvvMLtfgBOnaIj+NHRJCbmLFFRdFv5yEgD
CQ4mCoV263/zTXLXXerz8w0DHoQ9FHs0Vkif9JapZ1XxBdRmCzAuvtg0lm2q
gN2PGzfO2B9Sbvccy8G0dm9Cvv8MhWk7Lzvv4HY/hDOY/8d8/Y60QUB4Xv09
Zfgmv2fPnsTExHnz5nl7e4eGhiYlJRUUFPS36B7S3NwcHR2dl5eneVNFRYVS
qYyIiICHioyMhJ816/KdPHnyJ21pbGw06E0bIC0tLZmZmSt6Az/Ar2oH1NfX
r127NiYmJjU1taioSG1nPR7dI/6Ka+q+8Bie9vYTu3YVpaamKJU6sWLFohdf
HJp239NDurrO26Z4+/eT7Gz6QgkkJ5P4eLpTnmFERBAPD+12//bbdP87YW87
3bn/fnLffVLceScVedJr95oT+4VyfALsUoDlBOz+ueeeM/aHlNu9ScBMbgfS
PkJhctk0Faa1+6SZKDCnRv7BIKfWI183Odp9z7+IBNzu5RtLs3vwdJB6K20J
Dg6uq6vTvEtHRwfcpFkzv6enR6g/r5aMjAzxevbff/9d62ElJSXn753sy969
e52cnMRncXZ2hkbhgO3bt7O9/4QEBgZqXgHg0SXir7im7guP4cnNdba1Hfvc
cw9bW+vE55+PfvLJoWn3x4/TovqrVp0fVq4kcXF0+J4RFUXnzz/xBBk71kAe
fpg8+CCZPPmcRffw6/jxdCMAtvv8Y4/pB/g7KLnmZnmXXdYHKLwwOV/Huf0W
tX0en5lvVJB+jRSWYF8Uft+iQFae3/2o4SxyRhFjgwJp90hHTp2OAlNVD7OJ
IYDc6QB5dm73POYTi7L7trY2Ly8vprTJyckg1/X19ZWVlVlZWfb29tAIt6qN
4Dc2Ni5YsIDdRc3uKyoqWHt8fPy+ffvq6uqgBY5hjTk5OcKRGzZsgJZvv/1W
eW7+/vvv8/tuQuc9PDzYlYrffvtt586dISEh8Cs0snJ8DQ0NbL/7qKio0tLS
bdu2+fv7w6+RkZHntycWEvFXXFP3hcfwpKZOeuMNMno0+fprnfj0U/Lvfw9B
u+/qIocP0yHyefOMxV13UZW++moDAem+4gry1FNk3LizwK8g6Y88MjAPP6wF
6BLRpu0XXtiHAevuud2f91is3WN2DweQdo/c0g6p5999gWLlp4aD3CwgzgoF
0u6RF1XWvosCY/eLnQgG5N8bsqYft3se84lF2X1KSgq0g96Kx7JZampqmPZu
375daMzNzXVwcBDGuNXsfvXq1Wzgu6enR9zO5gaEh4cLLdHR0dCSn5+PfLMG
DNvgHgJPh7XU1taylr/++utM75568LOLi4uwBd7u3buhxdbWtq2tzdjdG3oR
f8U1dV94DM/y5ZO8vOjgckODTpSXk3ffHYJ2X1NDVq+mW8x7ehoFDw+6/RxI
+j33GMgdd/RtbX/rrX3cdBP1/eHD6X8HZNQoui5ebWo93BcUXlwzXxqi7VIA
c3Zpqed2j4nF2n3i5wSDae3eYz6KgDkokGfHkDEVBdLukZ2PtkfxzTzDQfYc
swcigDw7t3se84nl2D3YKxug37hxo9aXIjU1FSQ3LS1NaLG2tobjwdaTk5M1
7T4uLo4Ngqs9TllZ2Zw5cyIiIoTJ+WzCQFVVFeadglRWVkJPJPawq66uZi4v
zLRvbW1l8/DLy8vh13379mVkZGzdulW4y4kTJ9hdmpqakN2zwIi/4pq6LzyG
JzZ2EnyPTU3V1YJB8HXZEW//fuLuTgICqOYfPCgDtm8nCxeSa66hxeuMwbff
kqefpqvjn3/eQJ57jowZQ2dZ3H13H7ffTjs8ciS56qqBYdcBwPEFLruMziXg
do8JX3dvVExbwDxlBgqrOBTIAfRZCYbjHYpiTgAKpN1bx6JAbqg3M8lwPMNQ
IPdo8JqLgts9j/nEcuy+uLhYWmPbeiNuAa8vKioCm960aZOm3efn50OjtbV1
enq61gX7LKdOnWLn3bx585IlS4KDg+Pj43ft2mXAmxUaGgqPk5iYqDZbQAh0
1dXVla07gPPC01EqlfCro6Mjm5mvFnD/lStXwgH+/v4G9IdH/BXX1H3hMTxG
svu//yZz59Kh6vvvN6Ta2+DDBsdBn5ubjcXevWTHDlJQYDjr1xMfH/Lll2d5
7z0yceI5c/UlmDCBvPQS5cUXKc8/Tx56iH5+L76YIrZ4YWa+jlhs+Ni9Ucl9
kWBA2j2SLS+jMG3nTYhpq+pxDIPbPY/5xHLsPjMzExoVCoUBr9KPP/6oafeg
xvPnzxfm7Xt5eYEpFxcXnzx5UnzY3r17rbQFJF3fbhw+fJitFEhNTe3vmLKy
Mib4dr2BH+AuhYWFaoc1NDSEh4ezYX03N7fKykp9O8NzxpLsvr29/dSpUyeG
aBYtmuDnd/7tvqmJpKVRf5wyhbz8sgwYP55WpQMOHTIWYPe//Ua2bjWQ/Hz6
ktrZ0SUPAiD4U6fSLe8H5O236ZKKDz88yzvvkGefPWerO2FjO7zdW8gg/vDh
w7ndG49NrxIMSGFB1hlDTq1HDsUmzDIcp8UokEX5kHaPHINGTpnArLtHLgpA
rrtH1ivgds9jPrEcuwcjZtPsxY3l5eVg2d/1JqE3KSkpmq+SVruHdHZ2KpVK
hUIh1nYbG5vMzExheH3Lli2sffXq1dXV1QcPHoSzsBbxGn8dI8xASE9P13oA
iDxbgCDEw8ODLboX53//+59wgLu7u+Yufjy6RPwV19R9MW5qamr27t27a4jG
13eMu/v5t/ueHtLaSmprZcOOHX0z8xctMiIGb3YPBASQjz4i119Ph+8FvL2J
l5eBODuTN9+kU+uvvPIcrrjCQNUFZxcq8mnO6mczBASGRsDun3/+eWP/E2Sx
do80DqTduy1AgSz4H+KDArMA/O6/UCAn9iPt/ls/FJjXDcDYvU0MweC4BAWf
mc/tfshkKNm92uC42jPNyMhgqituzMvLU7uXra2t5qvUn92zqFSq/fv3w8ck
PDwc1J49TmxsLLu1oaEBLF5t87uoqCg4Zv78+ZqPVlZWViQZHx8fdgo4o9p9
Kysr2U1KpbKpN+np6Va9ywcqKirER3Z2djY2NsK5oJ/sLnv27NH67HgkIv6K
a+q+GDFdXYX/93/paWnfp6bGDkm+/HK0nd35t3tB8OVCdTVJT6cz84207h6P
pycdggf7Bs3XC19f4uBANzuYNescZsygG+oNG3bO8vyrr6anYALOBuW1bpmn
Vp0PgMPgv8JWeoD4YOb7YrvXcbW+mYfbvVFBGgfS7hULUSD3H19miwIzAP3u
WhS2y1Ag7R6p54H+KDB27xJJMCCvJoV5opCj3asuIBJ4T+d2L9cMJbuXHrvP
zc1lGnvs2DGhsb6+fus/Wbt2rV52D1J/+vRptSNbWloEXwZ97u9l37lzp1U/
ywQCAgI0ZvH3m13nrt9nLh8XFyduTExMtJKczA//olr1LtXv7wCe/iL+imvq
vhgxzc23P/jgqPvuu+z554cm999/4dSpRrF7edHdTWvrLVxorJr5eGxt6QoC
EPCICP3w9iaTJlHdvvlmdW64oc/o1bjmGsqoUdSv77yTLs/X5MEHaVEFxujR
5L77KPfeS7nnHlr07667+rj1VvqvxAUXnJ35DwwbRhuli/iZ/wJ/PjPfqCD3
LkfavX8gCuRMaWRRPsyigGd2oAj1RoG0e2QtROS2dBi7Ry4KQNbMR24FKEe7
77qISMDtXr6xHLsX9oYrKirS+lJUVVXpbvfwaNbW1nDwqVOn1A7u6elxd3eH
4wsKCs70+v7BgweFIvYsf/zxR392n5mZmSQZ9uCQsLCw9vZ28X2DgoKE8wop
KSmBRl9fX/i5sbGxtLS0ublZfACrGejn56f1ZeGRiPgrrqn7YsQ0NFwBqvL0
0/A/r6EJeN/Mmdzu6UyDo0dp2bqYGCOyZAmZP39grbCzI19/TXWeAb8CX3xB
ixiAj7u56cesWbSeAKix1p3yLr9cC+ymESOo3d9001lPV+OOO/q4/XbKbbf1
ATrPNu9jQJ9Jr92D0QuwyflyL9/Hq+oZFWQBc6TdI8+OLIGOPLt8Qdq9yftv
mcjR7jsuJhJ4cbuXbSzH7iEhISFWvQXktRaRA+3V3e6F6vQ5OTlqB8NNLi4u
cNPu3bvh18jISPh56dKl4mPYPAG1IgC6pLa2FvoP94Xn0traqnYrO9e6devE
jSD70AjiDz8vWrQIfl6zZo34APgVGsPDw/XtDI/4K66p+2LE1NRc8dRTdADU
5PppJGJj6fdYbveDQ1MT2bmTJCQMwJtvkmeeIa+80serr/YxeTIdKL/zznMQ
67awWZ7APfdQ1x41in5O5TXpXRbhdm9U7KMJBqTdI8egkWP3SD773nCQ5d2Q
LzvS7pFD2Njl54jpFshihnFWKJAXo+Ro9+2XEAm43cs3FmX3Bw8eZFXiQZAL
CwsbGhrO9Mo4KHN6ejq7SfeZ+WzGO2T9+vXHjx9njU1NTWxNvYODA9uEbuPG
jewwYb97+IEVvsvPz9frzQKd9/PzgzsGBgZqzhk40/tRhVudnZ3hmbKWY8eO
eXl5QeOqVavO/DNM7+TkBE+ZHXDgwAFWhz8rK0uvzvBAxF9xTd0XI4bbvRr1
9eSNN2iBuIICw8u/G4/8fDr+HhBA9+MzHqGhBuLjQ0fhP/+8bzhewN7+HJ5/
njz5JP3vhAlU5x95hPLww/RnNp1e4MYbz/lVEzjguuuo3V988TlD52z0XN+h
c0Bzv3uGZYbvd29UMJu2A0jN/Ho5CmTn7ZaiwGgm8sKCaavqIWshIt81zKx+
5LWsrNdRrH4fhRztvnUEkYDbvXxjUXZ/pneaOsivsG7d1dWVuS2Lv7+/1urx
Wu3+xIkT4h3xFAoFG81nlwi2bdvGDgMl9/X1Ze1w/LJly9hlhPDw8O7ubr3e
LLaiHzopXExQS0dHB9N/e3v7xYsXr1ixgj1ZT09PdjWgvb0d7s46Ax0QOhMU
FMSuRfDoFfFXXFP3xYjhdq9GXR0dQXZzo5I7b57ZERhI3RmidRb6eeHyy6ks
i8vH6Q449SWX0CH1Z545y7PPqvP44+TRR2mJP/gBjoeTslL2QgfUZtRDf/pD
rcadWh08tYXwuqBW+l5YI2+ZkwHA7seNG2fsf4Us1u4//oFgMK3du4ejmJaO
AqOZs4NQYKYNAEi7R1ZLMGHJfeQfzKoPUfzfmyjkaPenLyUSeM3gdi/XWJrd
Q44ePZqWliaYOHPhkJCQ7Ozs/nR78+bNcFhSUpJae1dXl1KpFOSdDdmHhYWp
zfxvbGwEjxaOcXR0/OGHH/RVe0hWVhacS1wVUDMg/iD11tbWwung1OKF9vBz
TEyMcKuNjU1KSormJH8eXSL+imvqvugR+LuFP9H09PQM3bJ8+aUPPEDCw02v
4caze39/8v335MQJnaipIUFBxMmJbqnm7W12uLqSadOYdhkLcGSwZh1dWA02
/H3VVecsS7/1VnVuuIHufHfTTXTkHY5X24xeEwOsnIk5H7tHhs/MNypffEcw
IO0eWcN8oQLFl/EoMIXfkcUMkYKMtHvku+YQheLTlYaDPDVSz5NmopCj3Z+8
jEjA7V6+sUC7Z1GpVOC5hw4dqqurg5+RLyPYcXV1tfRDtbW11dTUIE+n4wg7
HFbTm46ODq0HQIerqqrgABA9gzvDI/6Ka+q+6BH4U9y8efOHH3748ccfT9ch
77xzMdjW/Pmm13Dj2b2fH1mxgvz9t04cPkx+/fVsqTdz46uv6Pp0o2bECDpc
zsNDemvmT5gwwdj/alms3SNNDWn3vsEokMv2F7ihwMzMj/8Shax3xPskGcWK
rwwHuRnfj6+hQO7AKEe7PzGKSMDtXr6xWLvn4cFH/BXX1H3RI42NtbNmPRYQ
cN3ChdcvXjwwQUH/uu++oTx2/8svdDP0f/+b/Pe/OvH66+TFF/tWgpshDz1E
d2TT3OLtvDB6NB1YZ0vdr7qKTo+/7DI6qj5sGB0Ht9jxa0sOH7s3Ksg6Y0i7
R24gjhy7d41AMTXDcHxCUFjHokDa/cwkFB+lofCYbzjIv/aNb6BA1iuQnXeA
3bdcQST4htu9bGOBdq9Sqfbs2ZOYmDhv3jxvb+/Q0NCkpKSCggKJqfLNzc3R
0dF5eXmaN1VUVCiVyoiICHioyMhI+Fnryn04aVFREdy6bNky+K/Wov3nKwOe
q6WlJTMzc0Vv4Ae13fp4dI/4K66p+6JH6usPvPwyLQr3ww9EqRyYmBhaymwI
2/3u3UShoNuZgbrKiDvuUN92TYzmxu7nhaee6itZf9tt9Nfrr6ebwoPjjxxJ
B/SZ4+P517/oBHj4QffFAsKc//MFv1KhY3hVPaOC2T28Nyi7n5SPAqmZ76xD
gSmLh6wbj7mwACDtHjN6Duy/BwXmj1WxkGBATlpAftLkaPfHriQScLuXbwbz
/5hTnvppEBCel9bnC54OUm+lLcHBwXV1dZp36ejogJs0q+r19PSwveQ0k5GR
IZ5+f+LECdB/tWPgY3X+3sazGfBce/fudXJyEt/q7OwMjcbozJCP+Cuuqfui
R8DuX3uNavuhQ+TIkYH54w/yxBNDuareyZPkzz9ptflt22RDfj5xdKTbxr34
onZeeMEovPoqefll8tJLfaeYPJkycSItbs/q2+vC+PHkuefIuHF9BfSefpqM
HUt55hnaCFxzDd3GDtpnzOhj+nQpPvqIvPMOrcKn4/SGhx8egAcfpJcvIJpL
9RmWWUBPa8Dun332WWP/q2Wxdo/c5Atp98ip9cjOL7VDgalGOCMFxSJnFEi7
f3kLCnSpB8Mz+WeCAXlxALOUgyJDu2+6mkjwzSfc7uUai7L7trY2tj0cJDk5
uaSkpL6+vrKyMisri21RB7eqjeA3NjYuWLCA3UXN7isqKlh7fHz8vn376urq
oAWOYY05OTnCkXAAtLi5uW3btq2srEwoaifsW3ceI30ueHYeHh7sUsZvv/22
c+fOkJAQ+BUaec18AyL+imvqvugRsPv//pds3Eja2nSS35oaWrp8wQLS02N6
OjrIqVPUx+G/lszRo7Q2/iefkPfflx/TppGpU8l771ElB956i16meOMN+jM0
ArfeSh57jF5GcHPrw9VVCy4ufTg7wzervisMEkyYQK8qsAsL0jz9NLnvPvq5
7q9AH7d7IbxmvlFBjici7f77z1CYVnLDPA3nl+dRlD2E4qf/oJjrhQI5bwHz
x/r2eoIBWSYC+UmTo90fvYZIwO1evrEou09JSYF2Ozs7zaHqmpoaaIdbt2/f
LjTm5uaK98tTs/vVq1db9W4939PTI25ncwPCw8PZr42NjayCfXl5uXBMQECA
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
tbW10Odly5Y1Nzfr2xkeCLd7DsfYcLs3Wzo76dL7f/2L2z23e6PA7Z4jI+Ro
9xWjiQTu3O5lGwu0exaVSgVKe+jQobq6On3H0DXT2tpaXV094EM1NjbW1tZi
Tsdm++sS6XPB49T0xoCLDDxCuN1zOMaG273Z0t5OJk6k//pxuzem3SODEpY4
KxRfrUCBtHvvUMNB7vmeNBPFAjcUQbNRpH2EAvPH6hpBMES6oEB+0uRo9/vu
JxJwu5dvLNbueXjw4XbP4RgbbvdmC9g9H7sf2naP3BEPubca0u4xPV//Ngpk
yf3U6SiQRQO+/wwF5o8VaffzvkGB/KTJzjvA7ssfJBJwu5dvLNDuVSrVnj17
EhMT582b5+3tHRoampSUVFBQ0N+0fEhzc3N0dHReXp7mTRUVFUqlMiIiAh4q
MjISflZbuf/7779v7ieFhYWGvm9SOXLkSGZmZlxcHHSmvLy8q6vLGGfhgXC7
53CMDbd7s4Xb/ZC3e/dwFEhLRdp9+jTDQV7WCHdHsfENFGvfRbFQgQLzx4qc
8yA9z3xAkJ80Odq9dCEC98+43cs1g/l/zEmv7RwEhOel9fmCp4PUW2lLcHBw
XV2d5l06OjrgJs2qej09PUIJO7VkZGQIU+IXLVqk9RiIl5fXeX0zaXbs2CGu
Ewjx8/PjFfOMFG73HI6x4XZvtnC7H/J2jxwMRUou0u53PGM4y79G8VEais++
R+G2AAXymgzmjxWzmAKIsUGB/KTJ0e5LHyEScLuXbyzK7tva2tjub5Dk5OSS
kpL6+vrKysqsrCx7e3um22oj+I2NjQsWLGB3UbP7iooK1h4fH79v3766ujpo
gWNYY05ODjussLBQeW7g1MIdz++72dDQwJ7IvHnz/vzzz6qqKnZtYeHChfja
Ajya4XbP4RgbbvdmC7f7IW/3yg9QLLVDgbT7de8YDnJ2euLnKKZmoEBuDPfn
fSgwf6zIKRNzvVAgP2lytPvdjxIJuN3LNxZl9ykpKdBuZ2e3d+9etZtqamrY
TvHiPehzc3PF4+Bqdr969Wqr3q3ne3p6xO1sbkB4eHh/r/mqVavYHdvb2/V9
v6TDHtnHx0covtfd3c22wNu6dev5PRcPhNs9h2NsuN2bLdzuh7zd730AhWnt
3irOcDa8hQJZThC5IMJ5EQrk0D/mj9UlkmB4ZgcK5CdNjnb/v8eJBG7c7mUb
y7H7trY2Nq69ceNGrS9Famqqra1tWlqa0MK2jQNbZ6PtanYfFxcHjVFRUWqP
U1ZWBh/ziIgIrcPlbMTfxsbm8OHD+r5ZlZWV0BOJUfjIyEh48E2bNokbN2zY
AI3Lly/X93Q8A4bbPYdjbLjdmy3c7oe83dfcgiJlBgqk3b+3xnCi7VEg148j
190jS+7bR6NACTLiggyQMAsF8pMmR7sveYJIwO1evrEcuy8uLmZD8E1NTVpf
irbeiFvA64uKisCmwZc17T4/Px8ara2t09PTtS7Y10x7e7uPjw/cC+6i6zsk
SmhoKNw3MTFRbbaAkKCgIM1hejagHxwcbMAZeaTD7Z7DMTbc7s0WbvdD3u6R
66BNW1UPs+7eMwxFzksokGcP80Tx/C8oMH+syE0WpqeiQH7S5Gj3u54kErh9
zu1errEcu8/MzIRGhUJhwKv0448/atp9a2vr/PnzxSXyVq5cWVxcfPLkyf4e
Jzs7G450dHSE+xrQjcOHD7OVAqmpqVoPiI2NZSUFxI2+vr5sur4BZ+SRDrd7
DsfYcLs3W7jdD3m7X+KIIv5LFEi7/+0pw0GufM/8LwrkjvOYzQKACFcUmD/W
GSkEA3JJAvKTJke73zmGSMDtXr6xHLsHI2bT7MWN5eXliYmJ3/UmoTcpKSma
r5JWu4d0dnYqlUqFQiGuUW9jY5OZmal1eJ19/Ptzc10izEDQOvr/888/s+kE
cBhr2bp1Kzve3d3d4JPy9Bdu9xyOseF2b7Zwux/ydr/yUxT5k1Ag7R6zeHx2
EIrisSg+/gHFaz+i8AlBgfljfWMjweC4BAXykyZHu5f+O+R2L98MJbu3Ojdq
zzQjIwMaPTw8xI15eXlq97K1tdV8lfqzexaVSrV//374mISHh4Pas8eJjY1V
OwyOYTfV1tZKvCNlZWVFkmFz+yFwRs2esM37IN69Yc/IqndfPImT8hgWbvcc
jrHhdm+2cLsf8nYf4oPim3kokHaPqRv/eSIKhygUyKp6SD2f/DMKzB9r3Y0E
w1sbUCA/aXK0+6KniQSu3O5lm6Fk99Jj97m5uUx7jx07JjTW19dv/Sdr167V
y+5BpU+fPq12ZEtLC5seD2lsbBTflJiYaCVZS58lICDASufs2rVL7e6tra1w
IjaBX6FQrFixgg3fh4SESJ+Xx4Bwu+dwjA23e7OF2/2Qt/tIFxT770GBtHtM
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
QF4csEC7//E1IgG3e/nGouw+JSUF2u3s7DTHzWtqaqAdbt2+fbvQmJub6+Dg
IIxuq9n96tWroTEwMLCnp0fczuYGhIeHs18PHDjA7g6nYC3g4Kzlr7/+wr17
6oGPKjysq6urcI1CpVL5+PhA46pVq7TeBdrZs2hvbz+/nbGEcLvnDG3S6TRL
EhVlyj7wmvnmA7f7weeTZIIBaffIHee/mYcCOb99eqrhIO1+3jco/vMTCuTf
DLLzGLtf+SnBgLwU9t0XKORo91mvEwkUX3K7l2ssx+7b2trYAP3GjRu1vhSp
qam2trZpaWlCi7W1NRwPts4GuNXsPi4uDhqjoqLUHqesrIzOL4qIYJPzq6ur
mcsLa+1bW1vZCHt5ebleb1ZlZSX0RGKTO6VS6enpCf8VN6anp8O5oqOjNY9n
0w9sbGwOHz6sV094WLjdc4Y23O45YrjdDz7h7gQD0u5TP0aB9ERkUb6kmYaD
tHvlByjeWYfCOhbFxjdQYOw+zopgQF4OQl7LkqPdS7+V3O7lG8ux++LiYmbZ
TU1NWl+Ktt6IW8Dri4qKwKY3bdqkaff5+flsVTvos9YF+yxwd1dXV7YW4NSp
U3AKsG/41dHRUd+Z+aGhoXDHxMREtdkC0mFzCdauXavW3t7ezob1of96dYNH
iPnYPfxJwF9al26pqdn/+uvc7jkDw+2eI4bb/eDjtoBgQNo9cuX76vdRJH+C
AnNVBGn3i5xRIN81pN1j9hoAMHa/4S2CIWMqCuRfuxzt/v/eJBJwu5dvLMfu
MzMzoVGhUBjwKv3444+adt/a2jp//nxxVbqVK1cWFxefPHlS7e5lZWVM8O16
Az84ODgYUKP+8OHDbKVAamqqjncRLkFUVVWp3ZSdnc0uMsAT0bcnPCzmY/en
T59uaGg4oFt++23rf/5D/u//uN1zBoDbPUcMt/vBB2lqSE9E6jly2T5yLPWn
/xgO0u4xpwaQde2Q8z0SZqHA2D1y4Tyy3AHyZZej3a9/m0jgzO1etrEcuwcj
ZtPsxY3l5eWJiYnf9SahNykpKZqvkla7h3R2diqVSoVCIS4+b2Njk5mZKR5e
B5FniwKEeHh4GLboXpiBoMuA+65du9jiArW5+izwD6leFwp4NGMmdq9S1dXW
lv/222+//lqgC5mZysmTud1zBobb/dBGpSLHj5OWFl0pKSFJSeStt/ruzu1+
EEDunI60e2RZvEgXFMizYxYFmLaq3gN7USCvCH3/GQqM3SMLNSB3YETOuJCj
3UtPw+B2L98MJbu3OjdqzzQjI4NptbgxLy9P7V62traar1J/ds+iUqn2798P
H5Pw8HBQe/Y4sbGx7NbKykrWAord1Bu2EB68m9WxV0tZWVmRZNh0egicUeKd
zc/PZ2q/ZMmSrq4utVuhw+xBamtrJR6ERzpmYvctLR8GB99+1123jRt3iy6M
HXvjfffRfau53XOk4XY/tDl2jHz/PVm6VFcCA+EbLN3CgN2d2/0gMDuIYEDa
PfLaQup0FMgaaxhTM+26++d+RYEcg/YORYGxe+RkD8wuCYDdUhRytPs17xEJ
nL/idi/XDCW7lx67z83NZT577NgxobG+vn7rP1m7dq1edg9Sf/r0abUjW1pa
wOvZiRobG8/8U9QuLi5OfFhiYmJ/4+YBAQFWOmfXrl1a31b2XCDLly/Xurqf
dUAo7M9jWMzE7puaJnl6kpEjyfPP68S4cWT0aG73nIHhdj+0qaggISEkIID+
VxdcXcmMGeTVV/vuzu1+EJDesmpAkHaPKUwHIMvibR2PAvPETWv3c71QILd9
/9YPBcbukaPn8z1QOC1GIUe7ly5EwO1evrEcuxf2oSsqKtL6UlRVVelu9/Bo
1tbWcPCpU6fUDu7p6XF3d4fjCwoK4NegoCDhZyElJSXQ6Ovrq3muzMzMJMmw
B4eEhYVpbmMHZ2drECAZGRla6+91dHSw9fs7d+7U+lLw6Bgzsfuamkn+/mT8
eHLihE7s30+/n/OqepwB4XY/tPn4Y/L44+S994i3t07Y2pJp07jdDypIv0ba
PdJSkTPzkcXbU2YYDtLuV3yFAjl6jty3HX1ByfCsfZdgQE41WeCGQo52L103
g9u9fGM5dg8JCQmx6q0jV1lZqXlraWmp7nYvVMLPyclROxhucnFxgZt2794N
v0ZGRsLP69atEx8Dsg+NIP56vl30qgL0H+4Lz0VrNTzQfzbtX+16gjgHDhxg
x+hbtJ9HLeZj9/A1bOJEXb/S19cTviMeRxe43Q9t4IV95RWiUJC4OJ0ICaGC
//rrfXfndj8IeMwnGJB2H2uNImAOCqQjY8qnI+0e+brZxKBAjoAXTESBsXvk
qZFF75F1HuRo99JX55y43cs2FmX3Bw8eZBvNgyAXFhY2NDSc6ZVxUOb09HR2
k+4z89nkdsj69euPHz/OGpuamqKioqx6q+Izd4aPD/zq7OwMZ2fHHDt2zMvL
CxpXrVql15sFOu/n5wd3DAwM1JwzANmzZw/r0tatW7vPDTxN4bDt27fDMfBQ
ep2dRzPc7jlDG273Q5tPPyUxMWTnTvpPgS6Ul9M3glfVG0xmJhEMSLtHauZC
BQrk9uWYRQFIu0dWS0Be1kAuiEAXcjQ82VMIBuSGesg6D3K0+7SPiATc7uUb
i7L7M71T4kG0hXXrrq6ubI46i7+/f2lpqea9tNr9iRMnxDviKRQKNprPLhFs
27aNHdbR0cGU3N7efvHixStWrGAd8PT01GroEmEr+qGTwsUEtYD197dCf9Gi
RcJhbFV+TEyMXmfn0Qy3e47sACMrKSG//07+97+BWbCAuLiQJUtM2WFu97rQ
00NaW+miG72YNo0kJJA9e3Q9C98Rb/BBzrJG2n2YJwrk2D3y4gAGpN0jz65Y
iGKpHYpNr6LA2P3PkwkGZM+RK0HkaPc/fEwk4HYv31ia3UOOHj2alpYmmDjz
7pCQkOzs7O7ubq132bx5MxyWlJSk1t7V1aVUKn19fYWHcnBwCAsLU5v5DzIO
Us8q2LMsW7asublZ3zcrKysLziWuCiiOSqUSKvZL2/3y5cuhZcOGDfp2gEct
3O45sqOmhhrZhAnkpZcG5pFH6MzthQtN2WFu97rQ3U327aNV79zc9GDMGDrf
ntu9Ods9cu9ypN0v/xoFcmO4+C9RYOoVIO1+mS2KnJdQIK/JIIstYOx+y8sE
Q5QDilBvFHK0e+nqE05fc7uXayzQ7lnAhcGvDx06VFdXJ561blhaW1urq6ul
H6qzs7OmNx0dHQafiK+UN6twu+fIjs2byfvvUw3U5bs9HPnxx2TRIlN2mNu9
LlRXE6WSLorXy93GjiXLl3O7N2u7n5pBMCDtPs4KhVUcCqRtmbCqHnIFd94L
KJCSK11pbUAwdv/dFwQDckc85LUsOdp90idEAm738o3F2j0PDz7c7jmyIzyc
ODiQtDSSnT0wfn7E3p4sXmzKDnO714XCQvpmffEFfX9157nnuN2bu90nf0Iw
IO0eOYzrGoECufw8YZbhIO0eOTdeer70gCD/ZpCl4zF2jzz195+hQM64kJ13
gN1LVxJw5HYv21ig3atUqj179iQmJs6bN8/b2zs0NDQpKamgoKC/afmQ5ubm
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
CvHx8aSbnu/U4eHhs2bNgn/5jUREREC1VatWaf6rzMzMhOOU3sNO+kiWLl0K
Jfv27eM/ZNeuXVC4bt26x5Xn8MCBA5s2bSopKeEqkGsmgpNjImF2z2DIiEeP
0M2b6MqVOnDxIlq3Dnl7o0WLNAXejL/+it56C02YgG9ozaRJuIWffxbSrx8G
7p01qwrwfYKTUy28/z7q0QOvqvfbb9X8+CMerg//iqK6kt64cdW8+SZ67jlm
98zuxWF2zzAd5Gj3I/ciCSYzu5dtTMfuk5OTVXur+SmtDL8EvD4pKQl8GYRX
VWATEhLMKyfIg4mLTtjncujQIfDugoICuE1GCKg7Bv5TQ7WoqCjpavx4enrC
Q4KCggRjCTQ/kvnz53Pd9FxIh/7ChQtFG8zMzLS1tYUKJ0+e1PxQjSbM7hly
QalEpaX6oKjI8JuwqyM/H6WloaSkOnD4MF6DbuJENH68poA79+qFPxMGDsTv
Sq0ZPBj171/l8nw6d0Zvv41dfvHiKry8qvH2lmLAADyQvnt31Lt3NZ06oWef
xf+q8sorIsABcLRrh1q2hMJXdPWhqi7M7uUIs3uG6SBHu/9sP5KA2b18Yzp2
T7qt7ezstDhLe/fuVbX7kpISb29vboi7k5PTpk2bkpOT7927J9GUao+5arjr
BpcvX9b8IK9fv07mEYSFhWlSX/VI1q5dS1Yk4FdzcXEhw/UFD4+Jifnjjz+4
OQuqS+ubQpjdM+oDhQL3MpeU6JKrV1FoKO6Grj8CAtCSJejTT9G33zZEvvkG
jRqFfRkMVx2qNv3BB6hjR6yxXbpoCkjxM8/gz4Q2bVDbttrz9NO4hdathTRv
joUankXzQ+KABuHhTz6JW+CAkqZN8b9aUPnApu+++66uPlTVhdm9HGF2zzAd
5Gj3n/6FJGB2L9+Yjt2D85Jh9vzC8+fPBwUFbazMhsqEhoaqniVRu39cOQ89
PDzczs6OP5Pd0tIyOjpaXQd6rXZ/+vRpMiNAMFZfk3DjEyIiImqtrHokhw4d
IlcVoB1ScuTIEdKgo6Oj4OFkHwGSkJAQ1Z31TCHM7k2WsrJ67P6+dw/dvo1y
cnQG/IUkJyM3t+qx3PXBzJloyhTUogXq0AHP725ovPRSlXQ3a6YWcNUmTWrQ
uDF+CCgweLGGgIDDSaBPo0Y6aEQPMTMz69evn64+VNWF2b0cYXbPMB3kaPfD
DyIJJs9gdi/XGJPdm9eM4JVGRkZC4cyZM/mF8fHxgkeB86qeJXV2T6JQKC5e
vAhvEx8fH1B70s7atWtFK0vbfUJCAlH7lStXivaGp6WlJUmGLMcHgeMRfQqJ
I4EXwjm7c2XICTGv3BdP8HB4YEFBwf79+2fNmgUVFi1aJP10Rhn+V1yadpjd
y4sHD9Du3birup5wdUU//IB/ocOH64Zhw3A3dPfuInOodciPP6IvvsAi3K4d
7ncGlRYF7mrVCpRQ3xB5R5XWrDkk4PgC65cAKj/xhN4d23ABux8wYICuPlTV
hdm9HGF2zzAd5Gj3w2KRBMzu5Rtjsnvpvvu4uDjirXfu3OEK8/LyjvyXqKio
Otk9uPCDBw8ENYuKisj4dgiZ3i6IhN2TAzCvXMKOW7VekHnz5plrnNOnT4s2
InEkJSUlQUFBZIS/nZ3d+vXrSfe9h4eHunZOnTpFng5eu8TTGWX4X3Fp2mF2
L8GjR7ijvOFQWopu3MBTmJ2ddYOTE+715jNmDB4KDmqp3WBpVcBtwTrhxief
1CPDh+PB7U89hfuvwfFB4UWBCnAkLEaT5s2bDxw4UFcfqurC7F6OMLtnmA5y
tPuh8UiCX5ndyzamY/c5OTlEQpOSkkRPxeXLlzW3e2jNwsICKquOSFcqlY6O
jlA/MTFRtSlRp4aHkIkDkMjISIll8aKjo4MlQ54a4uXl9fDhQ3XtqDsSEoVC
cevWLbL8PlmvIDAwEG6XlZVdunQpLS2NX7m8vJxsk6fuxBpx+F9xadphdq+O
igqUlYVXQms4nDyJNm5EffogDw8d4O6OZs9GU6fWYMQIPNcb8sQTmtKoUe0V
gBYt6hfQdnIkGvaJsxhBmN0zu1cHs3uG6SBHu//oEJKA2b18Yzp2//i/ndlB
RTMzM1XvTU1N1dzuwXzt7e2hMDY2VlAZ7poxYwbclZKSotqUqFODlZtXTngX
vSCgeXJycohowyvlb1onGtUjSU5O9vX13bVrF78a2e8+ISEBboPak1PEbxxu
k6bS09NpDl6O4X/FpWmH2b06iorQkSNo3z508GBDYdcutHAh3jp89WodAHZv
b48XWudvhfbJJ7jvvk6980iDAecsLPURMzMzZvfM7kVhds+oE/PoMOzBy9Hu
P0xEEjC7l29Myu6vXr1KPBQU+PDhw/n5+Y8rZRykOCIigtyl+cj8oKAg0ku+
c+fOu3fvkkKQZT8/Pyi0sbERHV2v6tTnzp0j7Rw5cqSiZqQ3rxcELJuYuLu7
uyZr3InaPZRYWVlxkxdIxz00S4YBcN30oaGhcHhQAv9u2LABSmxtbcvKyjQ/
WuMI/ysuTTvM7tURHo4He7/2Gvr444bCkCG44x4oKtIBYPcjRuCJ6h99VM3A
gahv36pn0YS33jKU2BlnGjfGk/RZNAyze2b36qC0e09nKgz+8hkmhRztftDf
SIJf7ZndyzUmZfeQM2fOkP3ZSezt7ckccxI3N7fU1FTVR4nafXFxMX9HPDs7
O9KbTy4RHDt2TPQAVJ0aZFzdxPnly5dr/qsk8/3hJXCXGqSjeiSg8OT6ACi8
v78/WWEPqmVlZXF1uFX0HRwcAgMD58yZQ35k+93TtMPsXh3+/mjQICywU6Y0
FH75BW+s9sYbdds2XR2WlmjoUOzy1tbaY2GBrwlIb57evz/ehF0PvPkm3nDt
xRdR+/a6R916+PB0rVurXQm/rnniiar191g0CbP7emXHGESDYX2H9d0zTAc5
2v3AI0gCZvfyjanZPeTWrVtbtmzhTBxibW3t4eFx8OBB0h+tmv3790O14OBg
QXl5eXl4eDjZEZ7ExsbGy8tLdOQ/CbmYwHWOKxQKbpl9SruPiYmBI+GvGSgd
wZGQ5Obm8i9ZzJo1i9sdj8uxY8dA7bk68KSCmfimE/5XXJp2mN2rY/58THAw
Ki5uKOTno/37sf29954OePVV/IvbtQvvgqc1cFS3b+MDU8fNmyg9HW3bpg/g
l9WtG5owAU2eLIK6aya//Sbk99/FMTevgYUFZvx4fDJfeqkKwTWBJk0MJb4m
EWb3Rtx37+5GBaXdL3KiQr5jvJc4UGHYg19uqz1bfqTCsC9cjnbf/xiSYBKz
e9nGBO2eBLS6sLDw2rVr4LN1GgAvmpKSkqysLJ00RRN1K+3XNUVFRVevXr15
86a6lwPl+fn5mZmZGo4TMNbwv+LStCMLu1cqUXm5boaja87s2cjTE0VEGP46
A0dZGTp7Fs8X+OYbHdCjB/7FwQu8dk17rl7Faw9euqSWtDQUG4vX+a+/Xfw4
Vq7Eiwb8/DOaNAmPc1BFXbloTXWVJ06sAp4I1H7MGPT22zV68zt0qObJJ6t2
xBNsbU8g7l+nbfI030rPFMJW1atXQn5GNBjWdyjtntL1or7WnoPDqTDsaQ8w
p8KAR77MjgrDnnY52n2/40gCZvfyjcnaPQsLffhfcWnakYXdV1SgW7fQsWN6
5fff8cz0BmX3wMOH6Nw5dOqUDvjuOzyRf84ctHx5PTJzJvr0U/Tss3g/+vrm
s8/wnnfwdCNHVgElHFBOIDvokaUMhg2rZujQKuC0cAsRwN/24MGYQYPwogTA
gAFV9OqFunfHixx26oQ3GgBefrkaYvcvvljFCy9U8/zz6LnnMG3b4vcv6L8A
deP8peEuGphOwO4HDx6sqw9VdTFZu59LGyphoVzljNLuR+6lIrWn9sydR8VC
FypmelPhuoCKX/6kguaPdcV0RIObOxWU7zTZeQfYfd8kJAGze/nGBO1eoVCc
O3cuKCho8eLFzs7Onp6ewcHBiYmJ6oblQwoLC1etWhUfH696V0ZGRnh4uK+v
LzS1dOlSuC06c5/LgQMH/Pz8VFe9y8vLi4qKWrNmTVhYWFJSUq0r3tPn3r17
GzZs2Lp1q6C8qKgoOjp6fWXghgnuYq95+F9xadqRhd2D2h8/jpd537RJf3zz
DXJza3B2r1Dg4e5Xr+oAV1e8SL6TE16Hv/6wtMRqDErLGXc9MWIENnRQ4379
qjScmHj//lVAOeGDDzB9+2Lef78a/rSFPn3QO++g3r1xvzzw1lv4NsCf5v/K
K7invn37GtrOQfz92WereeaZap5+GtOqFX7/am33nM7zBwOY1FwAsPtBgwbp
6kNVXZjdaxsquz/xARWUdh/7MRV//qI9s7yo2P0lFUtnUBE4hYqdo6mg+WOl
PO0bf6WC8p0mR7t/PxlJMMmB2b1co8//MYPSFXqAe12irxc8HaRedJL7woUL
c3NzVR9SVlZG1pcTrKqnVCq3b98u2lRkZKTomPaTJ0+SCoId8Y4fP07WuOPi
7u5e31rt7+9PZtbzCy9cuDB9+nT+kdja2kJhvR6JfMP/ikvTjizsPjYWD4EG
6+GsTQ+89hpycGhwdq9DbtzAW/45OuLu9fpj3DjcFf7xx+inn+qXH37Agg8B
j27XTgeAgzdujNq0EadlS3xvo0b4XxqeeKJKyVVVXRp4iLo24aigWVOImZnZ
gAEDdPWhqi7M7rUNld2HjqeC0u7Tu1HRLV171v1ORdg4Kig73x19qKAcOUDz
x7rAFdFgwFEHc+Vp931OIQmY3cs3JmX3paWlTk5ORFpDQkLOnDmTl5eXmZkZ
ExNjbW0NhXCvoAe/oKBgyZIl5CECu8/IyCDlgYGB6enpubm5UAJ1SGFsbCy/
slKpTEhIIM8isPv8/HwrKyso9PPzS01NPXbsmJubG/y4dOlSnf2aVXL48GFu
3TyuEF77zJkzyYWOkydPnjp1ysPDA36EQl3N6Dey8L/i0rQjC7vftw8vXwb6
tmGD/hg7Fo9aN2K7Ly7GPfh//YUOHKhHIiORnx++TqL67d3NDZfrihkz8FAE
8G7BzHfgpZdq9JtryNNP49ZUu90JbduiFi1Q8+b4Xz5Qwke1X17QO895Pbld
1ysDopjO7HtTWFXvk9VFhoLSOAxr9xM3UTF6JxX+U7WHct791h+ooNwKcK0F
Fcf7UUHzx0p5OcjPhgrKd5oc7f7d00gCZvfyjUnZfWhoqHnlfu6qndHZ2dlE
sY8fP84VxsXF8ffLE9j9tm3bSCc7mDu/nIwN8PHx4UrA3+FHfoc43+5jYmKg
ZMaMGdx+8SkpKeaVW9GVlpZq80utLTdv3uReF9/ur1y5QgrhbJCSnJwcUnLp
0qX6OBK5h/8Vl6YdWdj9rl3Y3TZv1qv8urujRYuM2e71g0KBBwmEhYmwaRPy
9dUZS5bguQYdO6IuXdDrr1cDP0IhUXVQcs2Bh7z4Yo1h9gTSsw/KD3UEHfqt
W+M+fT5PPYV58kkh3KUAvu+biJLrMKYwMt9k7X7fCCpWW1FBKWs0i7df6UQF
pd1TLidIudMB9aJ82ofS7uOGUUH5TpOj3b99BknwC7N72cZ07B5MmXSd79mz
R/RUhIWFgVBv2bKFK7GwsID6YOshISGqdh8QEEA63AXtpKWlwdvc19eXG5wf
HR1NrirEx8er7jKfnp4eGRl55MgRrqS4uFh0AL90MjMz4ThrXbS/oqJi0aJF
ZMiBwO6zsrLI83KTAkpKSsgBnz9/XvMjMZ3wv+LStMPsXh14Wad5aP169O+/
MuDCBXyWwsMR/DYbFPBbg3M4e7YQJyc0dSpe4270aLzsPD3QzogRuJte0HEP
gJK/8AJ2/E6d6sDLL9ei56Jd87VOjedPkBf0xbPUNaYwMt+gdk+l5wyGjKC0
e8MevBzt/q2zSAJm9/KN6dh9cnKytDKXVoZfAl6flJQEvrxv3z5Vu09ISIBC
CwuLiIgI0Qn7XA4dOgTeXVBQALfJCAEJbQeh3rRpE9Rxc3OTaFM1np6e8Kig
oCDBWAJBdu3aBdV8fX2Jy/PtHl6pvb09mbZw//59OBvh4eHw47Rp09jIfNHw
v+LStMPsXh0LFmADXbQI7dghA7ZuxXu0ffmlPpam1wlg4r164b/eZ56psfSc
KloMqhcMsAc9B1Xv3h29+WYd6NrVMMbKonnA7vv166erD1V1YXbPYBg9zO71
GbD7XilIgl8cmd3LNaZj96QD3c7OTouztHfvXlW7Bw339vbmBts7OTmBlScn
J9+7d0+iKdW+ey5kAD+p4ODgkJmZWaeDvH79OhlvHxYWpq7OxYsXLSwsbG1t
4QDIOHzBqnppaWlE8K0qAzegzcOHD9fpSEwn/K+4NO0wu1fH4cPI2hpvGzdl
igyYMAF3W7dvLxvgaNu2xf3Xqt3igi5y0s1NwxNP4F510guvOfDsLA08TZs2
fffdd3X1oaouzO4ZDKOH2b0+A3bfMxVJwOxevjEduwfnJcPs+YXnz58PCgra
WJkNlQkNDVU9S6J2D3n06FF4eLidnR1/Tr2lpWV0dLS6DnQJuz979izXiKOj
o/TOeqLhxidERESo3ltaWuri4gL3njhx4vF/s+wFdg8izy39RzJz5kw26V5d
+F9xadphdq+OixeRnR366iu8NV7DZ9QoPO+7XbsaM8QbOGT2eq0L16tbtb5O
tG5dB1q1qhuCufYSPPVUHSrXlbpevqBH+sqMDmnevGqnP/7igZAmTZr07t1b
Vx+q6mLCdk8ZKmGhXMPc4LbIkBfM7vUZsPseaUgCZvfyjenYfWRkJHFVfmF8
fLx5zYB9q54ldXZPolAoLl68CG8THx8fUHvSztq1a0UrS9j9o0ePCgoK0tLS
4LGkkXPnzgnqwL1Jkpk9ezZ5LByP4LFkPf+AgADyo6rdZ2ZmkseGh4ffrkxE
RASZfZCRkSH6ckw8zO7rm5ISlJGBzp5FKSky4MwZFB2Ntm/Ha9QbE1FRaP9+
lJCglvh4FBeHiY1FBw/iVfr/+gs/BNi3DxMTg88MYfdu/LcE7NyJgcbhjJGT
FhGBtm3DCxds3YohKwaQ1f9CQ1FICAoOxmzahIKC0J9/oo0bq/ZWWL8es24d
CgjArF2L1qxB/v6Y1avxfgHAypWY5cvR0qVV1TigPnkI9ygOeDiwalUVpCl+
g8CKFRhomWPZsirguQiCtQcBH58qvL1r4OWFWby4ikWLqvH0xHh4VLFwYQ0W
LMDMn49xd6/BvHlVkG+hbm7VzJlThasrxsWlBmR9BmdnzKRJqGdPvDQBf2GE
Nm1QixaNXnvtNV19qKqLCdu94Z2LoWcoF703+PFrDbN7fQY04Y3zSIKJzO5l
G2Oye4GnC15pXFwcKb9z5w5XmJeXd+S/REVF1cnuQeofPHggqFlUVMS5OZlo
L4iE3fNDlt8MCQkRlM+bN89c45w+fZp7YFpaGik8ePDgscqQCfjTp0+H2ykp
KVCHuDyn/yRBQUHmkqP9TTnM7hkCiorw6vTwGzEmcnPRvXtqX7JSidfkr6hA
5eXo0SNUVoYePsSXZR48QPfv4wcCd+/iM0MoLES3b6Nbt1BBAcrPR3l5GHgK
OG85Oej6dXTtGt4lELhyBWVlocuX0aVLeBQHvEH+/Rdf7blwAZOWhs6dw6Sm
4ksr//d/+CoQ8M8/6NQpdPIkJjkZJSWh48fRsWOYo0fRkSP4csSZMxioSTh9
GgOPInCPJQ8HTpzAQDsE0hppkLQJHD5cg7//xiQmVgFPeuhQFfHxVXCXRAgH
D1ZdGyGXRwRXSIC9ezExMVVwF0wIe/Zgdu+uvn5CLqFw60JERVXBXU4hV1QI
27ZVXVrhX13hVmUE5s9Hgwfj0QJ9+1bz0kt4xEKnTp109JmqNszuDQLl1mwG
t0WGFuz6igqaXRKY3eszYPfd0pEEzO7lG2Oye+m+e25zt6SkJNFTcfnyZc3t
HlqzsLCAyvfv3xdUViqVjo6OUD8xMVG1KVW7LygoSE1NLSws5Fcj6/i5uroK
Hh4dHR0sGfLUEC8vr4cPH3IPJGsAqou7uzvUmT9/vuphnzlzBgpdXFxET5qJ
h9k9QwCoLniu8QGvq67nQRWFQgSJJy0vF/LokVrKykR4+FBIaSlGtHKtj9UE
0r7mlJTgqxzkQod23LypJeS6iuaA+9vbo8mT8UUYjilTUI8ezO7rkd1fIhoM
rooMhuYwu9dnwO67ZiAJmN3LN6Zj9xAPDw/zyhXgRResA8XW3O655eVjY2MF
leGuGTNmwF2kQ1wQVbtfvnw5lGzfvp1fDX6EQh8fH7W/ObHk5OTAq4MHwist
KSnh33Xp0qUtNbNmzRrzytXz4PZff/0FdZYuXQolO3bs4D8QZB8KQfzrdCQm
koZj93PmoH79cO9n/bFpE17gjtk9g6ErlEpUXIyHH6SlyYD16/EiGDY2NV7C
tGmod29m9/Xad2/Iefe/bqTCfyoVtsupMA/QnqBJVMybS8WGyVRQnvYftlJB
88dKafeHhlBB+U6To913yUQSTJzJ7F6uMSm7v3r1KpFrUODDhw/n5+c/rpRx
kOKIiAhyl+Yj88mQdcjOnTvv3r1LCkHb/fz8zCuXmhfdRU7V7kk3/fTp0+Ew
SMmVK1fI6vcxMTGa/ypB511dXUlHvOqIAtWozruHdzqU2NrawokiJXfu3HFy
coLCrVu3an4kppMGYvcFBWjmTLwQmU62LFfHoEFo+HBm9wyGznjwAC8p0LEj
6tYNvfFGQweO8/33kbl5jZfA7N647X6qPxUOS6iwXkVF6Hjt2TuSiqUzqNgz
iorYj6lYZkcFzR8rpd3HDaOC8p0mR7t/9SKSgNm9fGNSdv+4cpw52Cs3It3e
3p54NImbm5voSvWidl9cXMzfEc/Ozo705pNLBMeOHRM9AFW7f/jwITwveaCP
j4+/vz+pM3/+/DrtMk/m+0NT3KUG6ajafVlZGbk+YG1tvWLFivXr15NzBXU0
uVxggmkgdl9YiKfEdu6MRo6sRz74AA0bxuyeYTyoG/9PSUkJXkZAkwUN/v0X
L6D39NPY7nv0aOh06oQn2jO7Nym7t1tGhdcsKhx9qPg4Vnu+iKZiQjAVn+2n
4rttVPz5CxU0f6yUdj/kEBWU7zQ52n3ny0iCCczuZRtTs3vIrVu3tmzZwpk4
kVkPD4+DBw9WVFSIPmT//v1QLTg4WFBeXl4eHh5OtpkjsbGx8fLyktiqnlxM
4K/sByksLCTj5EksLS1DQ0MFQ+trTUxMDByJoGWJXLt2DZ7L2dmZX3j37l2Q
egsLC+5g/P39BWsCsHBpIHYPhnL5Ml6ki1tuqz6Ab3oTJjC7ZxgPt2/jFfwu
XdIxBw6gsWPRkCFo6NBa+PBD1KsXnlZz7lzVQoINmdBQ5OiIdZ5/DqdPR2+9
xezeaO1+znwqKLv+Ka8ttLynPe5uVFD23X+5mwofRyrmz6GC5o+V0u69Z1JB
+U6To913ykISMLuXb0zQ7kkUCgVIKxhubm4u3KY8jWDiWVlZlE1BI5cvX87O
zi4vL9euhTr19Uu3k12ZsrIynTRorGkgdg8UF2NPqddZt6tX4247ZvcGgVuX
Xic8fIgvB50/X7X4vGmSmoqvWZGF4nWLjw/uzu7XD/XvL8UHH2Av7twZL1YZ
F1e1LL8EZPV+bgF//ePnh9fQ++676o0AgG+/RV26MLs3WrunHKS9xIGK9G5U
rP9NeyhnvlOeN0q/XuhChdVqKmj+WCntPngCFZTvNDnafcerSAJm9/KNydo9
Cwt9Go7d69b+RNm5k62ZbzDKyvAc7eJi3XDjBt76fPJkZGFhuowfj826Qwfd
z0/v1Am1aIFXn5PG3ByNHo26d8f1e/bEpq/K229X8847VfTujXv8CXBbb7z+
Onr2WWRmhv/lgB8bN2Z2b7R2T7muHeXybpSLpP0eoD3TV1AROIUKytNOudwB
5cgBmj9WSrvf/BMVlO802XkH2H2Ha0iCCbOY3cs1Jmj3CoXi3LlzQUFBixcv
dnZ29vT0DA4OTkxMVDcs/3HlyPlVq1bFx8er3pWRkREeHu7r6wtNLV26FG6L
ztzncuDAAT8/P4lp7Pfu3duwYUP9rWKXl5cXFRW1Zs2asLCwpKQk1fH/cGwx
MTHr1q2DUwSnBY6nno7ECNJw7F4PsB3xdEVpKV4qQXMKCvDW6mQDdJ0QFYXd
9uuvseDLhbFj0Zdfoi++qGLUKBGggihffSXCJ5/gCe8tW6IXXhDn+efV3iXx
EACabdoU93FL8O23WO0//BCr/TPPoBdfRO3bC/nf/8SByhwvvaQ/nnsOPfkk
/qwDnedo1Aj+faJr1666+lBVF2b32obK7imnYNNsfQ4k9aXi+3DtmRJIxWwP
KkbvpIJyyETih1TQ/LFS2v2YHVRQvtPkaPf/y0YSMLuXb/T5P+bRW4/1APe6
RF8veDpIvblYFi5cmJubq/qQsrIyuEt1VT2lUkn2rVNNZGSk6BD9kydPkgr8
VfUE8ff3Fyx2p8McP36cLNnHxd3dvaioiKsALu/g4MCv4OLiUlBQUB8HYwRh
ds+oKxUV6MoVFBtbB/bswcO8wa3U6V5dgaZatEADBuBJ03KhTx/0yivVL6FD
B/Tyy5iOHTHgyHAvoXPnKl59FfPaa9V06YJ5/XUM3AWuChpuZiakeXP8b5Mm
+N46Abb7xBNVzqvarCrwEKgPleFfzYH6dX2ITiDPqxozM7MBAwbo6kNVXQxr
919HlRkKSt+htPs/FlNBubjcb+upoFkxYN8IKiZvoIKy755y3r0BV9WjvLCw
YwwVlPMp5Gj3L91AEvzM7F62MSm7Ly0tJfu7QUJCQs6cOZOXl5eZmRkTE2Nt
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
7/7JJ/Ve8rJldaa++urMUpUru+4Hlypf/nJdeWVKlSt3uazzvu3ng5szx02V
KpVS1kHv9kPiixe/XMWKpVTRovqAAfnptszR8k6qcOF0yu1d8ubV+/Rz53Yt
/44NyJ5fpHDePemeorJAke4BAPZN3FC3RQvTdG8qMdHnio9X27fr4co7dFCd
OoW+OnbUI6Vb1xHLDNW0qWrdWrVpo39KtWqlq2VL1aJFSjVvrocLMNWkSUrJ
o7j22pSyro1+zTWXvzRo0EAPCC9ljhCoW1dXnTopI72bsd/NKPE1auiqXl1/
CVOlii63l2YzN6VVlSunX5UqpVMyj8uiKlbUXztERbkOR+/3afjmRPvshnRP
uqeoLFCkewCAfRM31G3Rwjrd+/eFQEyMvjDZBx/oIdBDXtKMGTOcXmQtsDVz
pnrvPT3Qn73eeedyyQym3n77csmjMGVf1LRpl+utt1LqzTdTaurUyzVlyuWa
PDmlJk1SEyfqn25LbnJYb7yRTqW+y/336+9k2rXToxPYq3dvP+uGG/QXJoH6
Zsb6gsWbato05Yuaq6/WX7BUrqyPwShYUH/hYL6viIrSF6y3roIXQHny5GnS
pEmwOzfSPUVRQS3SPQCAdE9R4VsffqhPqRg+XH39dWBqypQAXGXPXo895m0N
HaqvGPjMM2rgQP09w6236gNaqlfXJ0dcdZU+SqFCBX0yQoEC+hJ79krroIWo
KNeKjLxc1oX5cuSQn7kbNmwY7M6NdE9RlOca6axI9wAA0j1FhW9JupcwPmmS
OnYsMLVvn/rzT7V1awhq2za9aqktW9Tvv6t169SaNeqnn/QbOTo6pW68UV/Q
4bnn1EsvqVde0YNdyC+jRumt4uef199yPPus/pbgiSf0Fwv/+pcaPFg99JAa
MEAf5NCvn7r3Xj2yxF13qTvvVD166KtA3nqrPuGiWLGIqlWrBrtzI91TVJav
/wx1VA7XTroHAJDuKSp8S9K9bNHNmBH6lmRM9emjxo3Tj/rrr9X336tFi/Qv
8+erefPUZ5/pfuPjj/XZJe++q0/EeOstfSjCG2+oCRPUyy/rO44Zk3IZSvM9
wFNPqccf10M0lCmjKlasGOzOjXRPUZTnmtPTUZHuAQCke4oK38pu6b5fPx3Y
JdcfO6aOH9djVsgvR4+qI0d0HTyo66+/1IEDav9+Xfv2qb171Z49avduXTt3
qh07dP35px7Ncts2XXfeqUcsJN2T7ikq5PXhvY6KdA8AIN1TVPhWdkv3992n
d8r/9FMgl9m/v+4oSPeke4oKec0Y4KhI9wAA0j1FhW+R7p3XgAF67D7SPeme
okJe79zvqEj3AADSPUWFb4VRuk9I0AfSHz3qqO65R1/NMFDp/tIlfej+3Xdz
ZD7pngpwfdzLUYW8/aGqmf0dFekeAEC6p6jwrTBK96dO6cHtn3pKPfmk/9Wo
kZo4MWDp/vBh1batvspeVBTpnnRPUSn15S3+V2hbTroHAJDuKcphxcToodvM
uG0ZXG+8oa93P3166J8Ez5WYqMe7e/hhfX06J9WggX7IgUr3e/aoWrVUvnwq
MpJ0T7qnAlmLOzuqkLc/VLW8taMi3QMASPcU5bCGDtWvtEKFQlB586p27cIg
3V+4oL75Ru95nzpVvf22/yUPdvLkgKX7FSvUTTepevUk2pPuSfcUFfpyctiA
FOkeAEC6pyiHNWCAat5cNWumD/PO4KpZU918cxik+9hYtWCBuvZafWF6ifl+
1w036O8HnKf7hAR9XbxJk1SnTurqq1XlyqR70j1Fhb6+uNVRke4BAKR7inJY
t9+u8/Xvv6sTJzK6pk1Tw4eHwXn3ku6//lq1b68vUi9vSb+rX7/AjJkv7Xn+
eVW0qKpfX6d7rohHuqeozFD/6+SoSPcAgEyY7u+8U40dqw+aXb3aUUnkqVKF
dE8FvW67Tc2apU+9T0zM6JL1/jscRtUz6b5DB3X2rKPleHNFvLg4vbrz593X
qVPq0CG1aJHq00eH+kaNVOPG+hAI0j3pnqJCXitaOSrSPQAgs6X78+dP9u+v
z4Rt0UK1auWoZCGVKpHuqaCXle4zftXhMmZ+hqX7xER17Jj680+1bZv7WrVK
ffSRKlxYVaigByTs2FGfy9+wIemedE9Roa8N9RwV6R4AkNnSfVzcyc8/1wcb
O/+U7NdPn05LuqeCXVks3Z8+rdasUa+8ohcbqJo6Vf3rX6plS3XmjKO29eql
I/nkyWmemP/ll3qGF17QT8vzz+uexKpnntElzbjjDhURocqUUddfr3ffV6qk
ypaVn5WC3bmR7sOxJjzhqELefiq8alVjR0W6BwBktnSflHQyNlZt2KDWrnVa
77zDkflURlQWS/f796uZM1WpUvqQ9UBVo0b66Hf5xWG6795d9eih9+A/+qj7
evBB3ZVVrqyqV9dv/4oV9T765CHxVcmSqnRpVby4KlhQp/ty5fQe/Bw59PwR
ERFVq1YNdtdGuqcoynPtruioSPcAgMyX7i/Ex488dGjkwYNOa968foyqR/lX
CQl65IcFC/S+4HSrdWv13ntZJ92vWaPGjVNduwZyk3X4cHXPPfrKAg7TvTzP
zz+vnn02zRUNHaq7MonwkuVLlVIlSly+emC+fKpAgZSr2wvJ+FFROuaLHDly
1KxZM9hdW7ZN94OnKCfl9OU30lENfNNRPTfWUb3xqP816V+OashER/WvSY5q
ymBH5fCxPzvO/3r0DUf1YwtHRboHAGS+dB8wy5YtJd1T/lV8vBo/Xg0cqK92
l27VrKl3dmeZdL9woXriCT2y5cqVAavly9Vrr6k2bZym+6NH1SefqNdfT7Ne
fFF3ZXny6MqfX8d5O8nyJs67yJUrV7169YLdI2XbdP/IZOWkHKZ7h2sPbS3u
7H85iahSoX3grz7pqELY8mfGO6rnRzsq0j0AgHRPUS6VkKC2b9dXkx81Sr36
avrVqJE+DSRU6b5/f3X//erHHwNWEsMHDNDntp8+HbA6ckTNnauviOdwVL24
OHX4sNq3Tz/bu3e7qR071P/+p4fEl5JffvhBff+9Lvlz3jw9nt7bb6s339Tf
h8gD7NBB78fPkUPlzBlRpUqVYPdI2Tbdh/xoZyq71fr6jirk7fe7SPcAANI9
RbmUpPv161WtWnpf8HvvpV9Nm6p33w1Nup89W/XurY+il+wcqBoxQl8tTiJw
ANvpYcz8+Hifr3ovSztxQsXEuK8jR9TBg+qvv/SV744eTZkoU7Zu1ScdLF+u
U//Sperbb9Xtt6tixXTAz52bMfNJ99Q/6s8qjirk7XdS797nf4W25aR7AADp
nqJcyqT7a6/VYzNKSEy3unRRH3wQmnS/fbsaPVrvE/fmDAIvSx7ODTdkULq/
dEn9+qseu2D+fB9qxgw9vF67dvqBpy6ZLtW2rS5rHvmlZUvVrFnKEH/mZ6VK
atgw/WBr1Mj66f69LQmhqpCHNYoKl3IYzx2unXQPAFkA6Z7KJiVB8uRJryom
RkVHqyZN1IEDXi05hGPmHz+uY7jk0zvvDFhJFu7UKfDpfuFCfd79/v3/eKqP
HVNffKGmTFGTJvlQQ4fq69lFRKicOR1VoUL6Un29eqmrrybdk+4pKvRFugcA
OES6p7JDyctg7Vq9A1eC8I03plMyT6tW+kroEkW9WXgI0318vG7kb7+pjRsD
VtOm6eEEA5vu4+LUL7/oK9B16qSvMm9Vx46qfn39lYJEbO/ruuv00PeSzWWB
Tip/fn3+RalSevA90j3pnqJCXqR7AIBDpHvKp5I4GRurj68OrzpyRH3zjY6E
NWuq2rXTr0qVdHmZ7rt1U++/r3bu9Pn8cakLF/Sgc6dOeVUxMXpMOW9KHq/f
NXu2+te/9Jj5e/boryz8KLmjy2B3f/6pLy8o8ua9XFFRKRena9lS79b3vq6+
Wg+JL/G8WDFHJQ2wkO5J9xQV8iLdAwAcIt1TPpVkt2XL9PDj4VUffqgP577x
RrVqlfr993Rq/Xr13/+qhg29PTL/+uv1nu7oaH14gK/1yy/6Em9vv62vqee2
3nknpWbMUC+8oO67L6Xuv1+Plm/qgQcuV+rz6B988B/10EPq4Yd1DRz4jxo0
SNfgwfpQBInP5cqpevX8qTp1VLVqEpZdq2zZy9eks5eQlO1TSbRPvki907Ku
jhcRkfXHzCfdU1TmL9I9AMAh0j3lfcXF6UBqLisWXvX66zr5du+ux05P9/Jt
J06on39W11yj9zifP59+3XSTGj9eff653j3ta/33v+qVV9TIkbpGjbpcZoo1
Uba7nn9e9eunD2U31amT6tz5cl13XUrZj3s3dcMNKWX9bk5AkGbbq0uXlGrZ
UlWurEP0FVf4UwUKpOyRDyM5cuSoXr16sHsk0j1FUZ6LdA8AcMi+iRvqtgQY
6T7gtX27evJJfci6tdc4XOree3Uc7tZNnTmjEhPTqfh4/SVGkSL6GPUlS9Kv
wYP14eJNm6oWLXyudu304PwNGuiqX9/NrvC6dfXe8DJl9O7v0qVV0aKXS1qY
uqyTyt3eVLCgPtk8deXLd7kk1+fOnbJj3eE+8XARGRnZvHnzYPdIpHuKojwX
6R4A4JB9EzfUbQmw7JnuJZwmJASrNm3Sx3UXL66GDAmzevBBdfPNerf1n3/q
3feea/9+9cMPOgi/9poeLi/dGjBAZ/NKlVSVKv8oc/K+56pVS/+sUEFX+fLq
yitdq1w5fUy7JG5pT4ECruetu63ISPeVJ48eKD71sfFhF8YDLioqqlWrVsHu
kUj3FEV5LtI9AMAh+yZuqNsSYNkw3V+6pA8sj4kJVi1bpp5+Wp+Xfe5cmJVk
9o8/1sm3Y0c3x66nrg4dVMmSeo+5JOt0S+ZMvSddpkiadnJKuEv6JoMHT968
edu1axfsHikbp3uHQp+5KCpjinQPAHDIvokb6rYEWHZL9xLtDx3SI8N//XWw
avJkfeq3pPuQP1hf6+xZfQh948bqnntU797pV69e+rLvrVq5qWuu0Tvcq1VL
p6pX18fSp7U73m1ZXxcULqx3siuVGXesu931nwnb6RP23bPvnqIyQzlM99Me
clSkewDIAuybuKFuS4Blt3R/+rT64gu91zj1cOWBqjJl9FXgb7wx9A/Wjzp3
Ti1frv73P7V4sVf17bfua8IE9eijqm/f9GvQIH1puUce0TV4cMqg9FLWMPVm
7PqHHtL14IP6CH8z7n3r1np4OsnLuXLpkqTvXzkfVd5eRu7caVb4BvzcuXNf
e+21we6RSPfhWAu6OKqQt58Kr2LfPQDAIfsmbqjbEmDZLd2fOKHmzNFX8b7l
lmBV27aqSRN9AnuQHsLRo/rwg3TPi3epnTvV0qVq5cp0Kjpaj/b/zjtpXnvO
m3r7bfX4424uM5e6JLA/+qh64omUkns99lhKyXRTQ4bo+G/K+hJAqkMHVaiQ
fktaOT0yMrOke/OFg9sK63R/zTXXBLtHIt1TGVmrr3VUIW9/9izSPQDAIfsm
bqjbEmDZLd1LLp49W58zHrxVrF2rNwDuuCNYy//vf9W77/oWt6dPV88+q1+9
8r+uXj3oddVV+uT9Jk1SwniQykr3liJFLudrBFzOnDlr164d7B6JdE9RlOdy
mO431XZUpHsAyALsm7ihbkuAhWm6j49Xu3Zdvty59zV0qLrrLn22ePDa9scf
6qmn9PjwM2YEviZOVHffrZf/3HM+lDzqXr30q7dECT26neeSeYoXd1SSsnPl
0ufIS8APXlWq5HrJ+Lx5w3jPeOaXO3fuhg0bBrtHysbpPpSj6vWc46heGOWo
Gq9yVHd86n9NHOKoPujjqF4c7qgenO6ouixwVE5erA5P5XC8794R0j0AZAH2
TdxQtyXAwjTdnz+vvv/ez5AikbBFiyC2bedOfdp4njx6eLrA1rXX6kvI5cih
D/u/4w4f6vbbVcuW+rFLq9Kt3Ln9P4fdKlJ21hMZGdmiRYtg90ike385SvfN
f3JUA2Y4qsWdHZWThPvKU45q8iOOasYAR/XEBEfl8LsFJy/WDfWUkyLdAwAc
sm/ihrotARam6f7UKTV/vqpRQw0blun23R8/rubO1WeLB/ZYxBde0Gej9+ih
h5Jr2lSPKed9tWqljyUoUsSrPe+FC+svEDycOe6h7Cezy0+Z4mF8uXAfZS67
iYqKatmyZbB7JNK9v5x1L852vj/wtqMa+Kaj2ljX/xr+Yijrk7sdlcN07/Bp
d/Ji3VxTOSnSPQDAIfsmbqjbEmBhmu6PHdODv91yi76Im093zIDz7pOSB777
44/0h7DzqX78UX3+uRo7Vo/JX7myPoPe16pUKf266ip9NTpJ3N7s5U9d9qQv
yV2m5M2bTnGmfLjginhZON23Xeqohr3kqBx+t/DMeP+r0/8clcOY+X93Oaov
bnVUY0Y4Kicv1k/vUE5q0XWOyuE7jXQPAFmAfRM31G0JsKVLl5YurS9h5uUV
0DJJffaZ3mt/440+p/sMGDNf6oYbVMeOql27gFXbtnoXfN26qmFDVaqUDvjW
Zd+9L7mXNyXLL1xYD1jnuQoW9HRVd6u8HGTem0U5Lzgh6b5NmzbB7pFCm+5/
PJYUqgrsoT4UFexytvc8lLXvSkdFugeALMC+iRvqtgTY8uVLJfe98456771w
qsmT9TXQr7/e53SfAde7D1JdeaUO1BUqZESVK5fOFwWlS+vB98zh906uN2cl
btJ95ke6J91TlFXhm+4dFukeALIA+yZuqNsSYNu2LR08WF9fzLqkeFjUAw+o
m25SnTr5nO4vXdIH53/zjfr66zCr+fP1gPk+DZXvdz37rKd68kl9Lfvbb9df
AtSqpWrXTrOqV0/5KsBD5ckTqrQK32SHI/NJ9xTlZZHuAQDhy76JG+q2BNiB
Aytef73QAw+EWd17b4HrrtNHv/ua7k3AP31axcRkrtq9W9euXWnW9u1q4UI1
aVLoa8IEfVqEBPxKlVSjRnok/7SqQQN91IHn4wRcrmqHTCsyMjLLj6pHuqco
L4t0DwAIX/ZN3FC3JcAuXbpw8uTuo0fDrLZunf3WW/rCcH6ke6nERJWQkInq
9GnVpYuOww0bplnXXKPq1VM1a4a4atTQob5IEX2mQNGinsbel1sLFkx/jH1v
mAH67NfsM5ftczl/n2P7g0rSffPmzYPdI5HuKSosinQPAAhf9k3cULcF2rFj
Sz/+WB+Zv2uXOnw47GvHDr2bW0oifAbX1Vf7VtJIyfilS+vR9aXKlNFBvlgx
N1WkiE736V4Rz5vKm1flz3+58uXTJTHfnNpvDdcfkHV5rrS+pnCZJ/WAA1ng
+wTSPemeoqwi3QMAwpd9EzfUbYF28uTSTz/Voa9XL9W3b9iXPAqJq199pdas
ydD65Rd9oT2fKjpaLVqk3npLjRqlq0sXPZJ/7dqqTh03JdOrVQtWFSumj+qX
sF+5cuiratXLDbvqqpRRB80xDNLOwoV1U1NfDTAq6h8l86Su3LlDleZdSbpv
1qxZsN/apPtwrFefdFQhbz/lR5HuAQDhy76JG+q2QDt9eqlkYclQ3burO+4I
+7rtNh3ivv9ebd2acbVpk07rK1b4XJLup01LSfc33aSaN1ctWqiWLd2UTG/S
JP269lpVv74+78CnKlNGJ2LSfYZh3z3pnqKsCmG631jXUTlcO+keALIA+yZu
qNsCLTFx6fHj+qr3s2dnhXr3Xb3v/pln1PjxGVTjxunVlS/vT5KtVEnfUcK1
lITrIUPU8887qsce098StG+fUh06pFMdO+qqXVuvPVeulAP1nVfq9O192Zcj
OT1nzn9k9jx5ssKR+YyZH9QaL29/B+UwsDz9sqP69npH9cIoR/Xa4/7XB30c
lZNVO68BMxzVVzc7KifpftpDjuo/Qx3VzP6OinQPAFmAfRM31G2BsTYuru2G
DW1/+aXtzz+Hff3wQ6vmzXM+9ZTTmOx9jRihBg7Ur2f7aHV+lOjVSz30kKPq
3Vvv6G/U6HJ5GIdfqnFjXZUr61gtOTpQ59Sbk/edlxkq0OU0/CwgX758HTp0
CPYbO9um+5Dvig3fGvuc/xXyxodvOUn36xo4qtA+cNI9AGQB9k3cULcFxqWk
pJOXLp2Mj88KFRu7Z/HiQuPHq9GjM6hGjVKPPhqY0BcZ6XqEua8lS/AjRJtx
8gNIWhLwZWYlBQsW7NatW7Df2A8CQOYW7G4QABBs9k3cULcFWVBCwpmNG7vM
nt121qwMqg8+aDtpUlvYde4c2b69ats2k1abNu6rdWs31aqV+3I7PIIZISF1
NW/+j+rUqcywYcNC/V4BAAAAHCHdI9guXTp54ULGVWysLvxThZMnVeapEyd0
HT+uKyZGHTuWUkePqiNHdJnLKR46pA4eTKm//lIHDujavz+l9u1Te/fq2rPn
cu3enVI7d6bUjh3qzz91bd+eUtu2pYy+uGWLrs2b5dYWMTExoX6jAAAAAI6Q
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
2UqUKCH/hQCeQ/Haa6+1aNEiUEsDAMBCugeA7KZgwYLS5//f//1fqBsSFHFx
cZUrV37vvfcyYF1+p3svjRw5knQfWgkJCeYcigCm+7NnzxYrVsy/4RoAAPCA
dA8A2U3A072klY0bN9r//O233y5cuJDW/KdOnVq9evWhQ4cC1QC7KVOmlCtX
Lj4+Pq0ZLl26tGvXrpUrV+7duzcxMdGbZcps+/fvl7ts3rzZfkiAS7qPjY1d
s2bN0aNHHT4Ey+DBg/1I92m11uLHMyDOnTsn/2X5xwXwAQaDvPB+/fXXQL26
5MGabSRv0r08mbJeeYp27Njh+YkdNWpUnTp1MuDkEQBAtkK6B4DsxnO6L126
9BWp3H333S6z/f7774UKFerbt++wYcOioqJkgVWqVDl27Njw4cPz5csnf5Yp
U2bTpk0u95o7d26NGjUiIiLM506JEiXGjRsXwEPoz549W6pUqTFjxri9ddWq
VX369ClatKj1wVegQIGXXnop9VcBEqvlUS9cuFB+//DDD6tXr27dpXz58tZs
Jt3Xr19fHmmHDh3y5Mlj5qlUqdKCBQtclunlEyvq1q1bsWLFkiVLmgXKT5d7
LV261I/W+vQMSPAvXLhwmzZt5PeDBw/ee++9uXPnNnfJkSPH22+/bWZr2bKl
rNrtEx4bGytrl1uXLFni9t/hwaJFi+SOxYoVS31TkSJF5KZly5ZZU2rXri1T
zp07Fx0d3blz57x585p2yvPwyy+/2O87ceLE1P8CsX79epe1TJ8+vWrVquXK
lbPOZJF3jf0u119/vX3+8+fPP/XUU/YnNn/+/O3atUv9MjBiYmLkmX///fd9
fWYAAPCAdA8A2Y1P6d58QNx6660us/36668y3eR6iflmNsm55nR+82ePHj3s
d7nnnnvMdMlNt912W7NmzcwxzzfccEOgHtrrr78uIfTw4cOpbzJHuVvpu3Xr
1sWLFzd/PvLIIy4z9+7dW6ZLUpYFmnkiIiIqVKggydF+xrRJ99bzUKZMGXkG
cuXKZeafNWuWfZlePrFCQqJ9nnTTvZet9ekZ2LFjh0r+xkaifc2aNc1s8o+W
RyG/LF682Mw2ZcoU+bNkyZKS5V2W8NFHH8lNFStW9GMP9ddffy33lX9l6pty
5swpN33//ffWlFKlSsmUf//73/JEySuqTp06V111lWlwkSJFTp06Zc3pku7N
G0GsXbvWZS1Tp04181jf2HhO97fffruZTZ5w+Xdcd9115okS48ePd/sYH3/8
cXkj+PrMAADgAekeALIbn47MlwziId0LyTVxcXHvvvuu+VPmlzQ3bNgw+f3K
K6+05p82bZpMkWg2Y8YM66Dl6Oho81WAJNOAPLSWLVtKsHJ705IlS2Rdo0aN
sg4sv3DhQv/+/VXywPUu46qZvNygQQP5WaNGDWnzX3/9lZQ8Gt6uXbus2ax0
L4/U2kO9e/fu2rVrq+T95jJ/Wk1N64m1u+WWW5QXR+Z72VqfngGT7qOiosyx
FoMGDVq2bJk5ykKWaZ12cf78eTPo3MyZM11a1a5dO5n+4osvem68W36ke9G8
efOtW7eaifLyNhOnTJmS1lok+KeV7i1r1qwx83g4Mv/AgQNmno8++siaKO+C
Tz75pGvXrmldE2HlypVyl9SHDQAA4DfSPQBkNwFM9zly5DA7yvft2yd/li1b
1uQ+CV9mp7OZOTY2Nn/+/DLlpZdeclnOq6++KtMlCTp9VElJ0hJpjyTutGZI
nbXPnTtndpHPnj3bPt3kZdG4cePjx4+ntUCT7kuXLn3s2DH79BUrVpi7exg5
LeDpPt3WJvnyDJh0b3j+7mX06NEyT926de0Tt23bZuL5wYMHPTfeLT/S/c03
3+zy6CTsK3eHJVgCle43btxo5vn888/TeWA2iYmJ8n6RZ8/7uwAA4BnpHgCy
mwCmeyu/S0iUP+vVq2f+lLhk9gibP1etWmX+TJ09zZwS0Px/PH9bsmSJLEpi
abpzbt26dd68eePGjXvooYdMth07dqx9BpOX5YnyfK00D2PmlytXTm6aMGFC
WvcNeLpPt7V26T4DVrr3kI4Ncwq5sh2uL55++mmV6tQM7/mR7j/99FOXOc1h
Cd27d09rLYFK96JZs2Yq+dAUechz5849f/68h5ktMnPPnj29mRMAAG+Q7gEg
u8n4dD9jxgzzQZMnFeszyPnYeh9//LHEKw+j5e/atWvgwIFlypRRqYwcOdI+
p8nL9913n+c1ekj3Ju4NGTIkrfsGPN2n29okX54BK93v2bMn3cWax3LjjTea
P+Pi4kqWLClTvvvuu3Tv61ZA0r1pVdeuXdNaSwDTvSyqT58+ZhwJlTykXrdu
3WbPnu35VS0vj5YtW3qYAQAAn5DuASC7yfh0b066Fw+mYdCgQc4f1xtvvOHh
GIAlS5YUK1ZMJR8n8NBDD82bN+/333+XZpvTw92m+/79+3teo4d0X7duXblp
xIgRad034Ok+3db69AxY6X7fvn2eF5uUfF6GJPGIiIjNmzfLn59//rlKHrLe
+8vtuQhguvfwDAcw3RvypL3yyiutW7c2jVTJwxKuWLEirfnHjBlTp06ddBcL
AICXSPcAkN1kfLqPjo42HzT79+8P0INw4/3338+bN29at1aqVEka0LNnT2mq
fXow0v3FixfNZQE//vjjtO7rTbrv3r27zJPuVx9ettanZ8CndC/69etnNbVr
167K41kJ6frmm2/M2q3h+ywZnO43bNhg5jly5Ij37T9+/PjkyZNNwwoVKuTy
hFuGDh3atGlT7xcLAIBnpHsAyG4yPt2fOXPGXC093ZO4nVi0aJGswn4FNIsZ
9E+4nJl+6dKlhg0bBjzdv/nmm2Z1mzZtSuu+3qR7ebqUF1cM9Ka1vj4DvqZ7
eaQREREFChTYvn27/K+joqJiYmK8uaNb69evN2t3GVJ+5syZZnqGpftjx46Z
eX755RcPDXY7ML7cxdz3p59+cnuvvn37duvWzcNiAQDwCekeALKbjE/3Yty4
ceazZvTo0fYdslu2bJFVeDkKmWe7du2S5VtXprM7evSoWfv7779vTVy3bl2j
Ro3MdCfpXlLtgAEDrAEDFy9ebC7z53nANG/S/fTp01XyhQmio6OtiXFxcS77
gr1pra/PgK/pPunvXfY1atSQn9IkL+/lluRuefGo5DHxzEj48pDHjBljbbFk
WLoXZcuWVcnn79tftydOnLB+nzZtWqFCheQV7vIyHjFihFn+oUOH3C5Znvyn
n37aw6oBAPAJ6R4AspuQpPuEhIQuXbqYj5syZcrcfPPNd911V8OGDc1AZBMn
TgzEI0uqVavW0KFD3d7UoUMHk8TbtWt39913m8u4R0ZGVq9e3WG6N8eK58+f
v1WrVvIMyGJV8rntnsej8ybdS1o00VVW0b59+169enXu3Fn+fS6XUfOytT49
A36k+59++snaovjxxx+9vFda7r//frOo0qVLN23aVNqpkg9jMEcaZGS6nzBh
gpmtYsWKtyerW7duvnz5rLDfr18/808vUKBA48aN+/TpM3DgwJYtW5p7PfDA
A24Xe/DgQbnX0qVLvX1GAABID+keALKbQoUKSZ//2WefeTOzubSZJBqX6Sa/
u6R7SV72W+3p3vjwww/N2d+WypUrS7QPyL77pOQTmdMazO3IkSPdunWz1isZ
+bbbbtu2bdvrr7+eOtv27dtXJj788MOeV2euBfDcc89Nnz69RIkSZsk5cuTo
0qVLWrtrLWk9sS42b95s7V43ihYtOmbMGD9a69MzYA6E8LDf2S1ziXnrSx4n
YmJipHlWa8uWLSvPWHx8fI8ePdQ/j9Aw+9bTSvcenmEr3W/cuNFDSxISEsaN
G2e+XjAklcs/Zffu3dY869atu+OOO0xLLGXKlHnppZfSGjZfXjNFihTxcIkH
AAB8RboHAGSw48ePr1mzZuXKlW7PkXdCAleePHkWLFiQ1gwHDx5ctmyZZDGJ
bIFddWJi4h9//PHrr7+eOXMmsEsWBw4c+PHHH5cvX75jxw6HLQ/eMyAxtnbt
2rI5MXXq1EAt88iRI/KoPQxfkGEuXrwoL1ppzNq1a62zMFIzr+3o6Oh9+/Z5
eIbl1VKrVq3hw4cHp7EAgGyKdA8AyEoGDhzYtm3bULciOxo7dqxsSxQrVszt
EHOwmz9/fqFChTx8SwAAgB9I9wCArGT//v1RUVGrVq0KdUOyhYSEhPj4eHnO
X3nlFXPs+ssvvxzqRoWBFi1auJwKAQCAc6R7AEAW8+ijj3oerx6BsnjxYgn1
Zkw5lTywvNtBD2C3YsWKIkWKBPy0FAAASPcAgCzm8OHD06dPD3UrsgV5ngsX
LhwVFdWwYcPJkycH/Fz+LGnlypWLFi0KdSsAAFkQ6R4AADjB/noAADID0j0A
AAAAAOGOdA8AAAAAQLgj3QMAAAAAEO5I9wAAAAAAhDsFAAAAAAAAAAAAAAAy
gVAfQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAADAk9WrVx85ciTUrfBKTEzMypUrExMTQ90QAAAAAAAy
ix07dlSpUkUplStXriFDhrjceunSpQN/O3PmTEhaaDds2LA8efJIaytUqPD7
77+HujkAAAAAAPgsJibmt99+O3HiRACXKYle/S1nzpz79++33zpv3jzr1tGj
RwdwvX44dOiQifbGww8/HNr2AAAAAADgvZMnTz777LMlSpSwgu1VV13Vr1+/
AwcOOF/44MGDlc3atWvttwYp3Q8fPrzo3+bMmWMmXrp0SR6XmViqVKnU9zp4
8GCuXLms9tx6662Bag8AAAAAAEH1119/lStXTrlTqFChGTNmOFz+pk2bihQp
YhbYvXt3l1uDlO7tXyn07t3bTPzll1+siblz53Z7xwcffNDMcMUVV0RHRweq
PQAAAAAABFWbNm3cRntD0q7zVVy8eHHJkiXbtm1LfVMGpPuSJUuaIfJk+emm
e7Fz587vvvsuNjY2UI0BAAAAACCo/vrrLyvwRkZGTp8+/ddff50/f/4DDzyQ
M2fO5s2bSzA3cx47dmx9sj///DMp+WD+b7/99rXXXvvmm2+OHz/ustgdO3as
d2fPnj0uc6aV7q3Vib1797rc6/z58ytXrpTWvvXWWz/++OPp06ddZnA5HWD1
6tUysXXr1qnT/dmzZ902VVy4cMFlsZs2bTI3mQEApRlLlix5/fXXP/vsM3km
fXzuAQAAAAAIjIULF1qBt2HDhvabNm7ceOjQIevPN99808xWqlSpiRMnFihQ
wLpjvnz5rHPbjfbt27s9EqB27douDXCb7iUpm2H2DYnP9ru89957xYoVsy82
f/7806ZNs8/jku5lyadPn7afU2+l+2XLlrltqnB5UKJkyZLmpg8++GDs2LH2
IfgKFiz41Vdf+fwPAAAAAADAsQ0bNtjz7AMPPLB582a3c1rpPi0LFy60Zk4r
3deqVctlsanT/fHjx+vWrWtNfO655+zz33fffWk1YMSIEdZsVro3Qwo0b958
/vz58ovk8eLFiyvv0v2nn37q0lor3du/3LAULVr07Nmz/v4rAAAAAADwU3x8
fOXKlV1SaqdOnb788ktzrrrFJd0XLFiwWbNm+fPnt6Y0btzYmrl3795VbSIi
IrxM95KOmzZtak1xOet/9uzZ1k05c+bs2LFjly5drD3ykZGRO3bsMHNa6b5r
167yU+Yxw+V16NBBWm5P96tWrbI31X5UgId0b+TJkydfvnz2KR999FFA/i8A
AAAAAPhkyZIl9pBuad269ZYtW6zZ7OleYnVMTIxM3Lx5c968ea3p5pT81KKi
orxJ98OHD+/UqZP1Z48ePRISEuwz27+I+N///mcmrl271po4fvx4M9FK92PG
jLE/qHHjxplf0hpVT5bgZbofMmTI+fPnz5w5c+edd1oTR44c6e3zDgAAAABA
QK1fv94eqy2RkZHvv/++mcee7u2XyevZs6c1ffHixW6X72W6z5kzp/V7q1at
rAH9jJiYGOvW/Pnzv2Jj7b7v27evmdlK95MmTbIf5x8dHR2QdF+2bFlrov2I
gocffjjdZxsAAAAAgOBZs2aNpGMriRsFCxY0u+nTSvdPP/20NX3mzJlul+xl
ureTSO4yZL2HE+QtnTp1MjNb6X7s2LEvvPCC+b127dq7d+8OeLpftWqVdZeA
XEAQAAAAAACHjh8/PmbMGPvw8t99911S2ul+0KBB1vQvvvjC7TL9SPfiySef
tM/5448/ppvue/ToYWa20v2///3v9evXm9+ff/75rVu3ku4BAAAAAFnPrl27
JEebHfQWMxid8dlnnyWlne4bNWpkTZfs7HYV3qf7UqVKXXnlleb3iIiIJUuW
WHOePXs2R44c5qYCBQrs27cvIRVrJEAr3b/wwgvyZ6dOnerVq7dhw4YtW7aQ
7gEAAAAAWcypU6fq1KkjsbR48eLjxo2Ljo7etm3brFmz7Mfn79y5M+mf6f7W
W289cuSIpOnXX3/dmlioUKH4+Hi3a/Ey3Utk3rx58/Lly60UX6FChZMnT1oz
N2jQwJq5W7duf/31l5keGxv78ccf796925rTJd1bSPcAAAAAgKzn5ptvVh41
b97czOlyRbyIiAiXi8G98soraa3Fy3Q/atQoM3HIkCHWxN69e1szR0dH20fe
E3Xq1JEWFipUSH6/6667rDlJ9wAAAACA7GPBggWpr3dvKVWq1N69e82cLune
RaNGjVyGuLfzMt2PHj3aTDx79qy9VXPnzrXmf/XVV10CviUiIsK6hB/pHgAA
AACQrcTGxo4aNap27dr21FywYMEnn3zyxIkT1mz2dH/HHXcUK1bM/J4nT54B
AwbIQjyswkO6nz9/vrXYcePGWdOXLFkiad1Ml3WdPn3aumndunUdO3aUeG7d
UX7v2rXr8uXLrXmsvf9jxoyxr27Hjh1mer58+dw21XO6L1OmjLmpYsWK1sS1
a9dadxk8eLCH5wEAAAAAgGCThL5mzZqlS5ceOHAg9a32dP/uu+/Gx8evX7/+
t99+85zrgycuLu6PP/748ccft23bltb5/gAAAAAAwC6tMfMBAAAAAEC4IN0D
AAAAABDuSPcAAAAAAIS733//ferfdu3aFermAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAEB2pwAAAAAAAAAAAAAAQCYQ6iMIAAAAAACAP0j3AAAAAACEO9I9AAAA
AADhjnQPAAAAAEC4I90DAAAAABDuSPcAAAAAAIQ70j0AAAAAAOGOdA8AAAAA
QLgj3QMAAAAAEO5I9wAAAAAAhDvSPQAAAAAA4Y50DwAAAABAuCPdI4PNnz9/
1qxZ+/btC3VDAAAAgExn586dc+bMOX36dLZtQNjZvXu3BJwFCxaEuiGk+ywr
zibUbfmHQoUKyYtNMn6oGwIAPkhMTJTuND4+PvVNly5dkpsSEhIyvlVpkXa6
ba00MhN+LgAIKukK1q1bt3Dhwg0bNmSqnsoh05tlpUdk7NixI0eOHLK1fPXV
V2fPBgRKnEeBXdfrr78uz9g111wT2MX6gXSfJf3111/2/+wVV1zRpEmTvn37
fv3116FuGukeQFhatmyZ9F25c+c+d+6cy01333233NS/f/8Ma4xsoq9evdrD
Nu0tt9wiTZL+9uLFi/bpjz76qPlcOHjwYPCbCSDEfvvtt1atWkVFRVnbhOXL
l58xY0ao2xUApk8WvXr1CnVbAuzLL780Dy1Xrlxnz551vsBjx47JR8bevXtD
1YBQqVq1qkrbjz/+GMB1ke4RVFa6l027MmXKREREWP/le++9NyYmJoRtI90D
CEfWlmTqIxVNur/nnnsyrDElSpRw2xKLSffiq6++siYmJiZeeeWVpHsgm3jj
jTfy5Mlj3vLSadSrV0/CmvnzmWeeCXXrnBo8eLB5LAULFoyNjQ11cwLp4sWL
t99+e5UqVV5++eWALHDq1KnyRD3xxBOhakCoNGzYsPDfrChkTZGP9QCui3SP
oLLS/e+//y5/nj17dvXq1XfccYeZ2L59+xC2jXQPIBxlnnSfkJBgjpn0Jt33
6dPHmvjTTz9Zn/ikeyBrW7x4sXmz16pVa926dWbi+fPnn3/++Xz58kVHR4e2
eQ5dunSpVKlSERERtWvXlsf43//+N9QtytRGjhzpU7rPkgoWLChPwv/93/8F
afmkewSVS7q3vPbaa2b6F1984faOp06dWr169aFDh7xc0a5duzZu3Ohy5KeL
uLi4tWvXSpPMn0WKFPEm3Z87d06WLI05evSoh7XLktP9wlYaIM/Dpk2bfDrF
Jt0GyCeLNGDlypV79+5NTEz0sKizZ8/Koux//vbbbxcuXPC+MQBCzu90732/
euLEiQ0bNki35vlISOmU0mqJxaT7okWL2g/Ol007c0xXWune+27NkNmkwW7H
IgAQQgkJCfXr15d3er169aQLcrk13WM45e2/f/9+6Qo2b94s3YLbeaSbWrNm
jcwWmBbbyAaSLPnIkSMe5vnhhx/k0TVs2PDVV1+VX+666y4PM58/f37Lli2/
/vprumPEyQOXvlp67B07dnjTB3q5IWrIbOvXr9++fbs3S/aG9z22Oc4hGOne
15eB/HPlH+H5A9H7/5dPfEr33rQzKTlwyQvA5IuJEyd6Tve+hiy/ke6zpLTS
vbz3pZ+X6Q0aNHC5y9y5c2vUqGEdw1+iRIlx48a5dOmzZs264oorRowYIduK
Tz/9dJUqVczMuXLlevzxx1Nn/MOHD3fv3t062+uqq66aM2dO6dKlU6d76ZcK
Fy7cpk0b+V22Oe+9997cuXObe+XIkePtt9+2zyxvdummzAaqWXuzZs3k/ZL6
eTh27NhDDz1kLUrmvMKmd+/e/jVg1apVffr0kc1m671ToECBl156yb6JK8+8
tLBv377Dhg0zz4A8XdKe4cOH58uXT/4sU6bMpk2b3P//AGQ+fqR7b/pVcebM
mUmTJjVq1MiaU36Rbs3+raCYPn161apVy5UrZx1hKNsq9j7t+uuvt2Y26b5b
t27KdnB+xYoVK1SoINseqdO9N92aqFatmqxIosGYMWNkUWZO6eJk0zp1ggAQ
Kp999pl5e86bN8+b+WWzSt7aCxculN8//PDD6tWrW11B+fLlXWb+/vvv69ev
b44gEsWLF5dtG5d9FosWLZIFFitWLPW6ihQpIjfZD4p+5513ZMpzzz23YcOG
jh07RkZGmiVLl/Xll1+6bfDDDz8sM8h6ZVPK9FcSCVPPtmTJktatW1uPRbpW
2RYdOnSobKC6zCl3f+qpp+x9YP78+du1a+d2CHTvN0STkre933///Zo1a1rP
mPTh0jlLMLfPJpvHV6QiHy5ul+llj123bl15DkuWLGlO0JCfLstfunSpfw1I
8u5lIGrXri3LOXfuXHR0dOfOnfPmzWvml9fYL7/84jKz9/8vP3hO9z61U3z8
8ccuH4LysajSSPfebAxIXpAGyP/L5dN55MiRZvqJEye8fKTKxsu7IPNLK92L
d99913RE9h5ANkrN/LLpeNttt0kfZd6tN9xwg/2+b731lky86aabWrVqZd7I
DRo0kN7P3Fde1faZt27dWqpUKat/lh7AOttLpUr3O3bsUMn5V17S0gGaeaTb
NF8FLF682Jpz37591rtJWtukSROTnXPmzDlt2jT7Mi9evHjttdeaHu/++++/
7777TKw2b1VhP+nM+waYo5uMSpUqSS8kz4P585FHHrFm+/XXX837Xf29p0yY
L9KtLfMePXp4/z8FEFq+pnsv+1Xpc8qUKWPmlO5UZqtXr550aPKndFn2QZCm
Tp1qNresE2nTTfeTJ09Wfx+cv3LlSvn9X//6lyR09c9072W3JkyvLptb5nNE
NmPMCABCNo08H8cFIMOMGDHCvJ293E3cu3dvmV9yvTm6WCUHK9nckozTokUL
+5yjRo2y+qvmzZtbm2R16tQ5efKkNdvXX3+tkochTb0u079JNrSmmM1L6QlN
5ya/WBuN0oxZs2a5LEFikel5TOyqXLmy/C4BymU2icAmo0mHdvvtt0v+ki7L
7LspVqyYyyFSMoN5IPJ45dm47rrrzBagGD9+vH1O7zdEk5J3bcsCzczSpct2
qTw08wzI1qn9K1yXcG3ucuutt6Z+Ar3vsSX+25fmU7r30IAkr18GSX9/avz7
3/+WtcuHoMxgPkFEkSJF7F8L+/T/8oPndO99O8Xjjz9ubpJ/faNGjUqWLGn9
R1Kney83BmTTwuw27dy5s/W2lVe4ebWkfnl7oGy8vxcyOQ/p3jrv8s8//zRT
pC8yndKMGTOsl1N0dLQJodLVW/c13a+IjIycOHGiORAlJiZG3tfmzWhfUadO
nVTycP3W966HDx+WXsIswW26l/eI+Wpr0KBBsiFtvtTatWuX/ZvAm2++2azr
u+++M1OOHz8ubxCZKH3C9u3brTnNECLyXt62bZuZsmnTJula5ZH+9ttvLk+L
9w1YsmSJPDPSrVlH7Mut/fv3V8nbujt37jQTTboX0kHJE2W+VBHSISQkJAwb
Nkx+v/LKK9P8FwLIZKx0L1t6k/9JPtzVP9O99/2qaNeuXfv27aVvsb7JlyRu
dsrcf//9qVuyZs0a05J0j8z/4Ycfqlevbg7OHzp0qEoeIthshtnTvZfdWtLf
2z/i4Ycfttb+8ssvm4lvvvmmT08pgCAxQy3ddNNNXs5v0n2DBg3kp2wIScdl
TqiUrsO+i1myhgkmvXr1sq4eMmfOHLOjZ8CAAdacfqR7s10k3ZGZuHv3bnNO
ffny5V2+OZQtQJku3ZHpXc2lQHr27OmyogcffFAl71ix79bfs2fPAw888P77
79vnPHDggGnARx99ZE2UrbVPPvmka9euLrnS+w1RIX246UhHjBhhbUzK9rD8
g6677joP1z0x+dFtuPa+x7aYTwSfjsz30ADvXwZJtk8NCQtbt241EyVim4lT
pkyx5vT+/+Ufb9K9N+1csWKF2QsvT46V+uWlYj61XdK9TxsDq1atMt9mvPrq
q0nJx5OYb+Pdbgl4QLrPkjyke+smsz86NjbWvBlfeukllznNqUyy2WlNMd2v
RGB7n5yUfPyVWeaxY8fMFOl5zJT33nvPZbHm+0C36d5weanbWVvXn376qX26
vP7Lli3rsnVtvisbPHiwfU7TzT7//PMuS/ayAUbq/VPSuZnHNXv2bDPFpHvp
/czRRPv27ZM/pZGmb5cnUCV/iep5RQAyD6v/SYvV//jUrya561LEiy++KHPW
rFkz9U3ep3vZ+DR7WL799luJ+ZUqVZKbzLD5Lsf+edOtJf29/ZP6cXXs2DH1
Vg2AUGnYsKHLJpAEltdtZIvOPr9J96Jx48aSVdNabPv27WWeunXrusTSN954
w9zd2p/iR7ovXbq0tRlpSIwyi3XZaJT8qGwXITXbVPny5XO5XKnZHd+kSZN0
z4vfuHGjWdHnn3/ueU6fNkQlBZuZR48enXpRng+r8BCuk7zusS2BTffevwyS
/v7UuPnmm13abPYM2g828P7/5R9v0r037Wzbtq1MkdztMpyXGdzM/jno68aA
eOWVV0zU2rRp01NPPaWSjzf29bgF+5aJT3dEZuYh3e/Zs8fcZL4dXbVqlUr+
ri91Z7527VqV/NWoNcV0v7Vq1XKZ00RXsWHDBjPFvDilo0v9taTbMfOtcO1y
TJGLCRMmyDwVKlRI3SWas11q1KhhTenRo4dMufPOO+2zmbNQBw0a5HJ3Lxvg
Qj4r582bN27cuIceesh0qmPHjjU3mXRv5XfpdVXy4DbmT/PcytPu/boAhJa1
UScbloP+yXy7bm3U+dSv2p05c0a2Zt9+++2hQ4e2adNGpfEdoE/pfvv27Sr5
Uinyc8SIEUlppHuLh24t6e/tH5fNWiFtVskHa6XVHgAZyaR7+9aOvG3t2/xF
ihSxz2/SvcQft3t+LaZPmDlzpsv0CxcumJMfrejkR7pPvXkpypUrJzdJbrKm
xMfHmwPRrUNDZYoZsdmla5I2mF3MVapUGTly5ObNmz08tGbNmqnkfayy9Th3
7ly3Z/En+bghak5zKFGihE+jOhue073Fc49tCWy69/5lkJT2p4Y52KB79+7W
FJ/+X37wJt2n2075v5vluHw/luRuzHw/NgZk+ddff71KPqlZng15B0mg8PWR
ku6zJA/p3tpANadzzpgxw/yZJxXrhWEdLJpW93vq1Ckzp3XEe79+/eTPTp06
pW6b53S/Z88eD4/rvvvuk3muu+661Df997//Vcn7yq0O2XyHFhkZaX0VfOjQ
IXPEyzvvvONydy8bYOzatWvgwIHWqbJ20h2ZeUj3QBbj/Xn3PvWrxuzZs7t1
62aNQer5o9mndC+/N23a1MxvNpbcpntvurWktLd/vv32WzOz98P+AAienj17
yvuxS5cu1hTZIByVTGKgSiPdy1aWh2Vau4d++umn1LeakYWee+4582eg0r0J
3Y8++qg1xTpeVEJQt78VKFBAJZ8L6XJ32dqsVKmS1ZvVrl37mWeecRnOzpBN
2T59+lhjxOXPn18WKz2zS1/t04aoeVbdzpwuz+neyx7bEsB079PLICntTw2z
/K5du9onev//8oN/6d6lnbt37zZtS31NydTp3o+NgaTkEzdMU8W4ceP8eKT2
14Mfd0fm5CHdT5o0SSUf8mG+dTTng4gH02D/4jfddC+h1Uy59957VRonfHlO
9/v27fPwuMyXBm77SVmgSh59xTp8JSYmpmrVqjKxZMmS8t587LHHzBgsNWvW
PHPmjMvdvWxAUvJJB8WKFVPJX7jJR+S8efPkSZbw3q5dO0W6B7Iu79O9T/1q
bGxsr169zDZh27ZtZfNAthkOHDhgnd+UuiW+pnvT7Tds2NDclDrde9mtJaW9
/fP555+r5N1eXOsTyAzM8D5uR9UzHYjbdG8d6+6WlWt+/vnn1Leai3EMHTrU
/BmodG+u9DR8+HBritmX6lbevHlTb+DFxcV9+eWXci8rC8vWl/TDbq/0J1uD
r7zySuvWrU0jVfJ+5BUrVlgz+LQhak4RtX/H4j3P59172WNbApjufXoZJKWX
mlMv36f/l0+cpHurnX/++adp1apVq1zmTJ3ufdoYsCxatMgaXV/eyH48Uvub
wo+7I3NKK93LW8Z8JyYdl5kim5FmTm8uVel9upd+WNnCrJ2TdG/GbpKe1pub
Ll68aEb2s5O3p9vvAL1P9+YJ7Nmzp8vpXaR7IGvzPt371K9+8MEHKvnKGtYA
TcbSpUvT+mjesGGDucnD9aDt6f7w4cOdO3e2RhRJne697NaS0t7+GTdunEo+
DzHdxwsgA1jH4ae+oJvf6T4hIcGcRJx6eCJJXiY6WTd98803pgGpv/HzPt3L
VqvZKf/xxx9bU8zYZePHj//V5pdffjHHPn3yySdptT8xMVFm6969u2nYiy++
6OHBHj9+fPLkyabHk/7Z6ht92hAdO3asTClXrpwfF7j3kO6977Et5lG7zZK+
NsCnl0GS7+ne4tP/yxsBSffyejYHeKQeoiF1uvdpY8CQj2YzAr8Zh1xivryV
vLyvxR58fL0vMi236V7eJua7XGFdZvTMmTPmYHVvzjf3Pt2b7VUhHyL2OY8d
O2auduFfuv/f//7n9tNKgrzp6+zXmDMDVgwZMkQ2gGUTVx6yh8tletkAa4QB
lxPTpEMz57iR7oGsyvt071O/avZDpb6msDnI0+1Hs3Sk5ia3F+E17OnehUu6
975bS0pj+0d64IoVKyp3Y1YDCAl5/8rWmrwrr732Wpfd2X6ne9GyZUuVPPKe
y3Qz8oZ9s3P9+vVmivxin3PmzJlmujfp3tr1uWnTJjPFfGng9kTmLl26yE3d
unWzpqQ1FpkZ395l/7vbma1h8ayj0H3aELVOIrCPuG7xPHZcWuHXpx7bIh9G
KtUl2DzzkL69fxkk+ZLuffp/+SEg6T7p729XXM4pEE8//bT6Z7r3aWMgKTmp
mf2S7dq1k98HDx6skq/OkO6eRxfKxqc7IjNzSffSBy5fvvzGG280E+1dX9Lf
+1xU8pCe9q9Yt2zZIi9p+7gi3qd7eYea64Q2aNDAul6z9PDmmqTK33QvL3Xz
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
k77MlOLIkSNqhBS6kgIAgFMg3QMA3A7SPQBuBOke+CQPHjxQV6Fp0qQZPHjw
qlWrNm7cOG3atBo1aqhu+a1bt3Zh+lEAAIjMIN0DANwO0j0AbgTpHvgq586d
q1WrVqxYsSxqaOTPn3/JkiWI9gAA4CwFChRIlCjRd999Z/aBAAB8h7Vr19If
lqJFi5p9IAD4Akj3wLd5+fLlnj17Vq5cuWbNmkOHDukngQIAAAAAAAAAnwHp
HgAAAAAAAAAA8HaQ7gEAAAAAAAAAAG8H6R4AAAAAAAAAAPB2kO4BAAAAAAAA
AABvB+keAAAAAAAAAADwdpDuAQAAAAAAAAAAbwfpHgAAAAAAAAAA8HaQ7gEA
AAAAAAAAAG8H6R4AAAAAAAAAAPB2kO4BAAAAAAAAAABvB+keAAAAAAAAAOxz
+fLlZcuWbd682ewDAbahE7Ru3bonT56YfSBmgnQPAAAAAACAr/LmzZs//vhj
+/btJ0+eDAoKMvtwPE1gYCC9cHr5Fy9eDA4O5mxq9uzZlJg+++wzdx0bsI9T
5+7SpUsfffQRnaC8efN65vAiJkj3AAAAAAAA+B6///578eLFo0WLpl3tp06d
et68eWYfl4e4d+9e165do0SJor38uHHj1q9f/+bNm65tEOneY7hw7rZs2aLW
/OSTT549e+bJo41QIN0DAAAAAADgY0yZMkULR4kTJ86VKxelHvVj3759zT46
w3nx4kX+/PnV6/3000/z5MkTP3589SM9+Omnn1zYJtK9Z3Dt3L169apOnToZ
M2YcN26chw84QoF0DwAAAAAAgC+xa9cudXlPUfSPP/5QCwMDAwcPHhwjRowD
Bw6Ye3guc/To0TZt2lgv/+677wYNGqRfEhAQQC8/SpQoK1asePr0qVpIb0XR
okWTJk16/fp1F/aOdK9w/Cy4hhHnLvKAdA8AAAAAAIDPEBQUlDt3brq2z5Ur
1+PHjy2evX//vv1fDw4O/vfffw8fPnz27Nm3b9/aXOfZs2fHjx+n1dxzxDpe
vnxJW75z547NZ3fu3Pn5559bL585c2bt2rX1S6pVq0bvQMOGDS3WpDfHXT3z
X7x4QYd69+5d+7/1+vXr06dPnzlzhh44vq/nz5+fOnWKcrSd7V+5cuXEiRN0
GI5v1hHsn4J3zpwF1zDi3LkMfYPoLNy+fdvD+3UZpHsAAAAAAAB8hg0bNqhr
+2+//daR9Tt37hwnTpzt27fT4+XLl2fJkkU/Tt9i5d27d+fOnVuVLyMSJUo0
cOBAyoP6dX744QfaYMKECa33FT9+fHpq//792pKFCxfSkv79+588ebJs2bJR
o0ZVW06bNu2WLVu01X7++edly5b5+/unSpVqmRVNmzalvEkP6PhViK5cuTJt
pFSpUvZfu1OHqtI9vXyK6mXKlNEGPqRPn37btm3WW7h3716HDh0+/fRTbTx4
HB3NmjXT1vznn3/ixYtXsmRJenzr1i16Odpv0Vs9f/58/WafPHlCpyxu3Lja
ZgsXLkwJ1OhT8M75s+AaDp47IlmyZHGsaNSokfWaz549s15Tz9mzZy1+Zf36
9VmzZv3f//6nDW8ZM2ZMWPe7Ig5I9wAAAAAAAPgMgwYNUpHTwRLxFDNpfUpk
kydPVqGAEk2aNGmiR49etGhR/ZrDhg1TK8SMGbNIkSK0jvoxR44cjx490lb7
/vvv1Yhp6319/PHH9NTu3bu1JSoyJ0+eXIVlekDxWZUIoMOgqKhWGzlyZMWK
FfPmzUu7rmhFlixZEiVKpB6rCdFofXVsHTt21B+bBS4cKqEKFYZ1qIpXr14V
KFCAnooVK1br1q1btWoVI0YM9etZQtBXP7h06RItz5gxI0X7bNmyqdUov1N6
pQe7du3S1rx+/br2tmfKlKlgwYLqYOho58yZY+gpcOEshAVF6VGjRoX1rIPn
7p1Vule/VbNmTes1X7x4QfHcItFrt1DosC36SDRp0kR7k2vXrl24cGF1R6tS
pUp2jicigHQPAAAAAACAz1C/fn26sK9SpYqD66t0nydPHvo3a9as8+bNU/2f
KZ9euXJFW+23335TAadx48bPnz9XC9etW0dBjxa2a9dOW9O1yJwqVaq9e/eq
hVevXs2ePbsI6TxAh6Gt7HifcDpCtQUiduzYfn5+Fy9etP5F4w6VDknt+sKF
C2rJmTNnKODTZn///XeLfal0TzldNRZ36tRp//79qpmYToG+a4TqtU5pVCsu
9+DBA4qctDB69OjaazTudb1zR8/8ffv20Yvt0aOHzWcdPHfW0AbDSvfWBAUF
1alTh9ank3Lo0CH9U3PmzFE3TOi7oN0iO3DgQLx48dR9MEe2bxZI9wAAAAAA
APgM+fLlowv7zp07a0vOnz8/WQelOf36Kt0TX3zxBUXFsDb75Zdf0jo5c+ak
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
33/u3LkqYts51CdPnujfKAvoSPSzD1y5ckUtt96ONXfv3m3atKm+hPtnn32m
T+vOvi6nTsE7J8+CTei1t2rVKqyR7+8cPncW0AukNW0eQ8KECcM6Fwo6eItf
Wb58uRrvoJEhQwaK9mi7BwAAAAAAAJjC69ev//jjj6NHj1pncJeh0Ldnz54z
Z87Ynxrszp07P//8s340ujUqWmbPnv1dSJvp6dOnjx8/7sZDpW2eO3eO4uTl
y5ftlG5z5FD1BAcH//XXX8eOHbN5qPS25M2blwJyQEAAJfcTJ078HsL27dsn
TJig+lQ40lnCDuq07tu3j1K8ndUiwilwGQfPnaE8ePCA3o3Dhw/b6TMQoUC6
BwAAAAAAAJiCnenYvBdV/q5UqVI2n61VqxY926hRI88eVJj45CmItCDdAwAA
AAAAAEzBJ6Olmn0+U6ZMWpE6jSNHjqiR8suWLTPl2KzxyVMQaUG6BwAAAAAA
AJiCT0bLBw8eJE2alF5XmjRpBg8evGrVqo0bN06bNq1GjRqqW37r1q0tqh+Y
iE+egkgL0j0AAAAAAADAFNauXZsoUaKiRYuafSBu5ty5c7Vq1dLXhVPkz59/
yZIlESfav/PdUxA5QboHAAAAAAAAALfz8uXLPXv2rFy5cs2aNYcOHbp165bZ
RwR8HKR7AAAAAAAAAADA20G6BwAAAAAAAAAAvB2kewAAAAAAAAAAwNtBugcA
AAAAAAAAALwdpHsAAAAAAAAAAMDbQboHAAAAAAAAAAC8HaR7AAAAAAAAAADA
20G6BwAAAAAAAAAAvB2kewAAAAAAAAAAwNtBugcAAAAAAAAAALwdpHsAAAAA
AAAAAMDbQboHAAAAAAAAAAC8HaR7AAAAAAAAAADA20G6BwAAAAAAAAAAvB2k
ewAAAAAAAAAAwNtBugcAAAAAAAAAALwdpHsAAAAAAAAAAMDbQboHAAAAAAAA
AAC8HaR7AAAAAAAAAADA20G6BwAAAAAAAAAAvB2kewAAAAAAAAAAwNtBugcA
AAAAAAAAALwdpHsAAAAAAAAAAMDbQboHAAAAAAAAAAC8HaR7AGzyyhmeP3/+
NGyeMXj8+LHNbdLyR8B90Ptp9CeqPQAARGyM/jMIAADAaJDuAbDJ1q1b1zvM
6NGj/f39O3Xq1Llz5y4hdO3a1S+Ebjp6hOAfQs+ePXv16tU7hD4h9O3bt9//
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
Vq9XDbHXqw2316ueoi1QqFebor2oXG9RRk9lef1jpHtHQLo3TmahMGa6Z9a1
K7WPJXN+tHF9XJf5tpvYuZ0M6M2SOSCCM2a/1rcsmR1damxmiXQPAAA+gP76
1uxjidR4Pt0/fSpLtU+aJBP08uXhmySJp9M9+fKlPOZHj+z54IGcgz5HDpEr
l8iblyVtIXNmG9pP96lSvZ9mjhJ9jBhyofqtjBll3qewT+9e4sQykmuF8qJH
l6mfVJ3qtaiuVbO3SN/6VK7UMjtyOh+ke+NkBj1mumeWKSu9lyWzNp2Jk6Mx
xxR8uYfl6P4smZMwcl541W0smXP5MT9vSPcAAOAD6K9vzT4W3yEwMPDy5cvn
nGHEiJT+/rKrvHHpfvx4GYTfvg2VcnHBgnIK+127ZGwP1+TJTUj3+pdw966s
nnfpkqW08MQJWXa+cGHWuPuwLFBA5nSbU8YrKbzru9NTVFfjBVTqV833CRLI
ZnfK9drEdirRa0Pm6bHW2m4z3VuDdO9GkO6Nk1OBnGSme2adscKHWLZczJKT
cMf2ZdlxNktmG/ScDiyZ/ds5t4OY5QSZN1Uar2SJdA8AAD6A/vrW7GPxEYKC
gi5cuNCvX7+WzlC0aKyWLWWNOOPS/dix4t9/35eav3FDxmGK9i9fOrSRDBnM
TPdXr8qK/T17yin5PGyrVrIhXo9FG3rs2LLZ3ZGIrf2KKnqvdaFXuR6YCNK9
cS5qJTgy0z2zk3aO0yy/nsWSM3h8fluW43uxZN7W8J/I0sRx98yKAQ1Xs2R+
3pDuAQDAB9Bf35p9LD7Ckyd79uzpWqNGiW++yeu41apFadfOqHT/6pWYPl2O
Xu/X7/1F74ABMrT+8IOj6T59ekFHOGaMvEvgeXv3lnvv0UM+8Iw9ewp/f2nr
1iJ79tAZ6JQqlavx72SiRKHD4ePEsWfMmPIX9QHfQmAiSPfG2TtAcDS3qh5z
4nVmBXXOkVfbypI5fpxZjbDsTyyZDegT/V2X2fi+vCnL6V1YIt0DAIAPoL++
NftYfITbt4euWCGD86JFTtiihfj6a6N65r95I7ZtCy3OptVzo7yZIIHco4Pp
Pm1a+evx4skk63mjRZO93Lt1E336eEhK9927S1u1kkPyo0aVg+WVak66VKmc
M2lS+YsgYoJ0b5zMVmBz0z1z2D6z5gAnIDPHFFTezpITkElmyf0ZnU2z+2SW
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
bi1tWmnKlDZMlUqqHiRJ8sGdAYtuAPpi/piez1yQ7o2T2Q7LTPcN1rDUJr53
TWZLLidfM6dm6zOOZY3NLDmdFkjmLR3ONAdj+rE88gXLLtNZIt0DAIAPoL++
9fCuI1q6j+Cq+e5//FEmfXrsgsePy9L0hw974mgp3V+5IgYNEm3acK1dWyRM
KFN5s2auWLJkaKin164sUkTkzy/y5bOUFjpozpxyMr6MGUWaNDZUwV+ZLJlZ
aRU4B9K9cXJGMYfASvfMlMqsTZf8JktOzJzoz7LeOpbMcgfMegWcsngk58Pa
ZoHgyPy8Mb9pSPcgLNoD78TsDw4wB/31rYd3jXTvlE+fygRaqZJo2FA0buyK
1aqJzJnFoUOeONrXr8X+/TJTT57MdcAAGZkpJufN64rZsol06WTJgvTpQ/3s
M5Eo0ft+9S6outZbTJlnc9a8KFHMSqvAOZDufTXd1/qWJbMROcdplpz659/V
ZMns483ssMEpJ0gubsmS82FlTsY3pRtL5jcNWQCEBT4b3gjOWqRFf33r4V0j
3Tvls2eyg3r27LIF3zWzZpUx2dl0HxQk2/2fPnXO+/fFpk0yRPOnApw2TR48
xfMcOVyUXnimTO/Nk0feK4gb970W5e/CLZenVcZTD7Q+9sB7Qbr31XT/1UaW
zHj+xRGWnKDHnIyPWXKfme6ZMvstcD6szIIDSPcgYoLPhjeCsxZp0V/fenjX
SPdO+fatrC1PkXnjRhelmJwvn3M981+/Fn/9Jdv9/fxEt25O2KWLqFVL9l2/
fZvr9etyPMK337oovWMWb9r27WL3brFvn3TvXlmuv3nzDzo5NGwoGjSQ9fbr
1hV16oivvpKvpWZNUaOG7P9AVqkiZ06sWFFUqCDKlxfJk8tSe5TuVdF7eqxX
q5hnsVzvRx+Ffgdt1vELa7Q+cCNI976a7pmtwDM7sUx/meWgEa7LnLC+/Vwz
Zc7bvrsMS86HldltgFnngflNQxYAYaF9Nkz8Xww6rsVZA5EN/fWth3eNdO+s
z5+La9fkeHbXpEhbtKhz6Z72SBE4Z05Zm47irePS+sWKycHpbnnhDx+KmzfF
P/+EeumSOHpUeuyYK546JT9y//0nvX1bXLwoO//36yfL95H0oG9f0bu36NlT
1tvv0UPerPDzk/crOnYUHTqItm1lNYDWrUXLlqJFCzm0P2NG2QmfQnqUKKH/
6qe9s/jRptpceEj3ZoF076vpnjmCmzl9+SdvWHJq5jNfOPPmAHPvzGoJ3aaw
5HxYObPpkcyRIMxvGrIACAuke+/S4qyByIb++tbDu0a6d9bgYFnY32VPn5Y1
851K93Rqxo+XMXb9eudazGn9oUPdlu7fvpVqL+TkSdGokWxeb9LEFZs2lalc
qcruUWYfPlyMGiUdOfK9I0a8d9gw0alTaMBXtm8fap48sjZ+vHgifnw59kFN
fqeG4UeN+kHTPIiwIN37arrfUYll86UsM/7Ncm5712V2ra+7nuW4PiwDerNk
3pPhfFiZVesHD2fJ/KYhC4CwQLr3Li3OGohs6K9vPbxrpHsPe+6cbLs/eFD2
t3dQOkF0edy5syyRd+iQE/7yixwIkDGjPLlu94cfZN+AWrVE/fpc69SRg/ob
N5aN9artPiz79JEd+K1r8jdtKj/DiRPLdJ8woUz3anb7GDFC072+aR5EWJDu
jbP4L4IjM903W8ay/C6WTZez1Ca+d0FmTmQ2fzNr5o8cyJJ5Z4PTtZ7Z52FX
eZbMyQKQBUBYIN17lxZnDUQ29Ne3Ht410r3n0322bGL1anH+vKPu3Su7pvft
K/vGv3jhhE+fim3bZLwtVsz90meme3cxf75YtYrrsmWyFT55clltL0uWMM2c
ObRRPkWK0OnsNVOmlKGeon3cuPJf9UBJMV9TQ3WqV33sKfXrR+XTcv3wfDtd
9IHbQbo3Tk73cpKZ7tvNY1l5O0tmup/R2XWZzd/MHuYrmrBc0IYlc/D7xq9c
l3lThTnTwQ8VWCILgLBAuvcuLc4aiGzor289vGukew975Yp8t0eOFGvXOurM
mbJtul8/Gdid2tfbt3IIQIkSzo3Wd9ACBWSj+ZAhYuxYrqNGyRb8WLFEggSy
wj/ldJvSsxTtCVrTYnY8SvExY34grWOthkW612d5Wm4z1CPdewCke+Nc3VBw
NLeqXvUtLJktuf3GuO6P5Vgyq9b/VJbl2L4smXc2OAMixvRjyWy7Z+4dWQCE
BdK9d2lx1kBkQ3996+FdI9172EePRLlysmz+F184au7cstm6b1+n0z1Jv3L5
sixh53YDAkTSpDJWx4/PNV48Gb3DrWmvVba3TtwU8FHgzgdAujfOee0ER2a6
Z46DZnY8YM6Pxtn1kGEs+45l2WoRy4WtWTKL8q2t77rFDrD8uQRLZtN/ZMsC
N2/e3L59+8qVK7ds2XL9+vVw17969erOnTtXrVq1Y8cOemzx7KVLlw5bcfbs
WWOO3dMg3XuXFmcNRDb017ce3jXSvYd9/lzWgVeV3h20bl05VN+Ftvt3Ic33
qta9hTduiDNnWM6fL/vn58sn8ue3NHt2imlytLu+V7x9VRN8tGgy4NMvqt71
1mr97S1MkuT9RsiYMc2Kp4AF0r1x1tkgODLTPTPkNlnBktmI3GGO69b6liWz
6D0zZg4bwnJbVZacI2fez9lSneXQb1hGqizw008/dezYsf3/06FDh127dtlZ
f/369bSOfv0NGzboV5gwYUJ7KwICAgx+HR4C6d67tDhrILKhv7718K6R7j3v
06fiyRMnpCg9ZIisKedCun8XUuQ/KMjSly/l/PUct29/P5G9hRMmyLnqKKpn
zuyciRPL1vlYsWzcMXDcfPlkZQPgjfh8ui9beLdZtlgiODLTPXMcdP21LHsH
sGy52HXbzmfZYxJLZsf+1gtZMkspciotMD8wjVeyrPADy8iTBf7++2+K5506
ddqzZ8+NGzd++OEHlfSvXbtmc/3ff/+dnu3SpcuBAwfu3Llz8OBBekxLjh8/
rq3TvXt32ubatWvX6di7d6+HXpLBIN17lxZnzSZBQUGnT59evHjx2LFj+/fv
P3r06GXLlu3fv//t27dh/cqDBw9mzJhB3xrrp86fP08f/okTJ9KmJk2aRI9P
nTplZ++7du2aPn36s2fPwv/wsQl3X2Gt8OjRo23bts0PgR7Qj/pnnz59+oMt
7t69a8jLcAb99a2Hd410H/H95x85VVyTJnISugsX3ODZs3Ke+vHjZfv7ggVu
du5c2c2gbl3ZmP7ZZ86ZIoWcw45+kT6Qyhw5RM6czkm/kiHD+zHymJjei0C6
N05mUmOme+bkaMywxqyq13WaaTLPGnPgPKfTAllmN0vOmIJGq1gyZ2BklomI
POl+1qxZ9GJ37typLdmxYwctWbp0qc31KQHRs3R5ry3Zvn07LVmwYIH68d69
e/TjwIEDDT1sE0G69y4tzpo1lNMp1Fv3NiFGjhx569Yt61959eoVPUUrLFmy
RL88ODh448aNNje1YcOGoKAg600dPXpUrXD//n3XP5SOEe6+wlrh7Nmzfn5+
+pfTrVs3/VgbddPPmhMnThj7khxAf33r4V0j3Ud86dQMGSI/G23bytne+bZs
KYoXlxv88ktRvrybLVpUhuuUKUW6dE4H88yZ5Vj+BAneGyOG7fp4NtXX2VMd
/mPGfD/fvRBI+hEdpHvjZM6txkz3zNbzzjNYMmv6+U113f6jWTLb7s9nYdlm
AcuvZ7HkTMbHfNuZbfdf7mEZSdI9hRG6SqcX+/DhQ23h48ePO3To0KVLF5sN
lzNmzKD19+/fry05cuQILZk4caL6ka7n6ce5c+caffBmgXTvXVqcNQtevHjR
r18/FUWXL19On97bt29fvHjx+++/79y5My2kZy2+CHfv3tXGnlik+/Pnz6vl
CxYsOHfu3K1bt2gJraMW/vTTT/qV6du3b98+tRej0324+7KzAr383r17q3sd
FP+PHTs2atQo+pEWvn79Wq2zefNmWjJixIi1H3Lz5k3jXpSD6K9vPbxrpPuI
7+PHYudOUbWqGDSIe42t7NVLTlVPgZfOe968bjZtWpExo5zbjtJ91qzOSb+Y
KpVswdekhB4//gd5n6QllPqjR7eUFmpSoiejRAktgK9K3CPdR3CQ7o2TOYKb
+TeHOQ66+2SWzHnbO8103Yn+LL8ZyvLP3CzNnceQ03Zfbx1LZo+LrzayjCTp
/r///qNX2rNnT4vlvXr1ouUUc6x/RbXs02X88+fP6ceXL1+qds9NmzapFbZs
2UI/rlu3buvWrbNnz168ePHevXu1FOADIN17lxZnzYIVK1bQU506dbKu+vjv
v//Scnr20KFD2sLdu3eroSg20z197GnhsGHDKCzrl6vvyPjx47Uld+7coR/1
zdzGpftw92V/hatXr6qF9IaoJTdu3FBLLl26pJaom3779u0z6CVw0F/fenjX
SPde4ZMnYvZsMWOGexw7VhbrixZNTjGvj9J8aYMUpSna58wpozpfCvLJklma
NKnM8pTcVYTXpCVKegy8EaR742ROPs5M9zU2syz3I8uq21jW/M51289lyczX
zJsqzJ4DPSew5PSNZ5ZhZN5U4UyhSEaSdH/58mUV1S2W0xJafvHiRetfefXq
1bRp0+hZf3//yZMnq/sA9ECFfWLmzJnWHXS/+eabiDAC1y0g3XuXFmdNz4sX
L1Rr9datW22e65UrV3799derV6/Wlqh6kpTWly9fbp3u586dSwunT59usZ0z
Z87QV2DixIla5/xt27apuwp79uyhXbic7ulLSkdis8+/Rrj7sr/ClStX1LdY
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
K6h7dxZHfuLECVo4cODAdyG3L65du2bRY+fPP/9Euke6p3S/YoUICoqIvn0r
J7u/dctAr18XW7fKd2D1ahuuWiVWruS6Y4c4ckQcPy6OHhWHDokDB8T+/WLP
HvHjj2LnTvH992LzZvHtt2L9ejk1AK2/fLm837JwoZg3T8yaJe9vTJ0qJk8W
EybIufxGjZLlAigvtG0r73sUKSIKF5bF//Plk/civvhCSg/y55dLPv88VHqs
/Zg3r/zAp0snv24uDAT46CPU5DcKpHvjnNtecGSme+YcYcyZ05kd1Mf2dd0F
bVgOGsFy+GCW26qyZDZhc/I1cxxKwcMsI2HP/P+SCDv2CSPdP3nypGfPnu1D
KudTolcluPv06aN1yz958qT+Kl0b5Dtp0qTvvvtu3rx5ao4wbarrQ4cOqRVm
zZpFRzVx4sT2IeOObVbg90aQ7r1Li7NmwahRo1RvE5vzP546dcrxdK/Vlv/p
p58sVtbuetG3yXpTzHH3N27cUIUv6LUEBgbaX9mFdE/fdFry7bff6lejsE8L
KfhrK8ycOVO/grqnZ12x0/Por289s0ekey3d9+wps63pR2KWwcHixAmxb5+B
/vWXuH1b3Lsn/vsv9H7C1auynuGFC3K+v9OnZfCndL9hg1i7Vt5PoNOxdKlY
tEjMny9mzxYzZohp02S6nzhRjBsnRo8Ww4eLoUNluq9cWQb88uVF2bKidGlZ
HbFMGSk9oB/JkiVDVb0R1OMSJeQ9gWzZ5NcN6T5CgXRvnKsbCo7MdM/sG88M
a8w2aM6RMwv6Md83Zlk85rh7ZrrnvPDZHVky33am3pjubyUVdgwr3RP37t2j
C1EV0lXMp7ygPavSPWUTbckff/yhpr1T9OnThyK/foO//fZb7969tRUGDx58
5swZI161KSDde5cWZ82Ca9euqTxLAfmXX35R5SIpjNNXYP369eopx3vmq/7q
xHfffff48WO1kJKyGoTepUsXbeJIPZx0T3F+0KBB9OvDhg2z7jPgwr6sV6C/
Le1DxuNoc148fPhQjehZs2YN/bh161b1qrX57umBqsKn3fQzEf31rWf2iHSv
RLonX70SL14Y6OvXshOC1huBfPNGSstJWuGff0SaNCJDhveqUgDp0oWaNq2U
1iFVvcEUKUT8+HIdyvht2jhh69bSZs3kTQAiatRQw+rkTwttSutrohKgu0C6
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
1jV7lHaf0+zaNS4qivn70wlSc/Mm69LlAWN1I3QM+fOzOXPYsmVs+XInmT+f
DR/O2rXLGfQhDBzIBgzgn5KfH/PxYd7erF8/frugTx/+bLNmfGK+qlXZ889z
0xdUrsypVIlPqFehAofWeeopd/mljDsj7d44QM0E7R5sgwY1E5yPD7F7cOg6
2Oug3EkIsPG94woI5IyDk/G1TYAAy0SY0e4/7800kHavV6TdmwvVWVOGjFh0
s1cuPHToUExMzOf3s/B+4uLirF9r0+7v3S8OFh8fHxAQoByl7uPjk5iYaN28
/ttvv1nWGTp0qM2J8+zG0gPBkW7wdu1+165dYvSBqq++xhbE9AG//PKL9VGN
GzfO4fdhVJTXt67Zo7T7nEbD7u/eZatXs/DwXMGkSVy0hw1jo0fzdnznoJeT
krdpkzPat2c9e7IePVj37pxu3VjXrlzqO3fmfPghb8EvWjRrnL4F67b7IkUe
6NIvOvyLUgACy5h9gUzeiLR74wD9GrR7N/aNJ8AK6hubOc+CjyHAEQ0v7YUY
OwECVOygT50HvKny9ncQ4DSIZrR77c4zA7yk3esTafdmwevBWJ/KhIQEWj5s
2DDlwqSkJNULyWetX5ud3Yukp6f//vvv9FcZHh5Oai+2M3fuXNVqd+/evXjx
4sGDB+kpsc6BAwest0Yr7NCMKIJHoT1qf3u17X7z5s1C7WfOnJmamurgFiZO
nOj1YO1BCsm+1/0pBbWPxwVRXt+6Zo/S7nMaDbvPVdy9y1vtSa5Jq42GnJ2k
vlUrh2jalFWvnqXn1ign8XvoIV7KgCDNJwoX5nUCiUKFMgsCiJH7FvGXyRuR
dm8c4Jx0oN13j4UAiwaA732Oj/Not2naJWQMBGipYCXGFl9DIPUKwNZzcEq7
7oshzGj32jeppN3rFWn35kJ11pTZtCnzDsA///xjWZicnLz1/xH14hy3e5L6
mzdvqta8cuWKRd41poAnH/S6Pyuf9VNigjkHs2vXrux2cU/T7sWbpcyfP//u
3buOb2HOnDleivn+RDZu3Oh1f5Y9jYNxTZTXt67Zo7T7nMYsdp+RwZKT2YED
bP9+w0lKYr6+vMnekVsBHTqwjz5ijRtnS4MG3NYtzfGW9nrrhntl872y8D4t
tH6VBXb/poEyYhY/mdwTaffGEeXHEEC7RyqkET0XQYBt9ys6Os+XH0KAzd/v
J0KA1RLAvSOTBYA187sshQDfuBntProv00DavV6Rdm8uVGdNmbNnzwqf3bFj
h81zffz4ccftnrbm7e1NK9+4cUO1ckZGxtChQ2n9LVu20K/k+Pv37798+bJy
HVGmLygoyHpfiYmJsZoRG6dMnjz59u3b2X1172Vj93R4YpACJSEhQaNAn80t
LFu2TLxQuZroF7Fw4UKNTbkmyutb1+wxb9s9fT3S9c5//vNJZKQJ7F6bO3fY
rVu8UIAuHDnChg7l3e8dqdTXpw8v9EcrZ0ebNryNnlRdw+Kzg1YTFfuzK9dP
MGn3uT7S7o3jEzSQ3X/7DgQ4cL7bEoipQ5wHmdYNn9mtzFkIsOB/RCAE8mUF
RzSMCoMA/9LMaPfz+jEN/KXd6xRp9+ZCddZUCQ0NpacGDBhgs6IdObjjdk+S
EhgYaN2KLZ4aPHgwPbVv3z76dfr06fR49erVynXoV1oYHh7u6Bfx/zl79iwd
P72W3sutW7e0V7Zp97GxsV73y+iJmw853YIooDd27FjlakFBQbQwKSkpJ2/F
kCivb12zx7xt99evX09OTj6pa776anBICG+qdruhI2zcyKKi2IQJ+tC9O6+e
N24c++wzR4mIyJbQUFazJp+Pr1w59uyzWZQqxSf4E6P1s4NWKFKEaz75e3ZI
l8/9kXZvHGtaMwTQ7uO6QkwbDDFzAMQn45wHLDgA9o2vegQCvKkSOhoCGXc/
uz9Eqy8gwHKCZrT7ud5MA2n3ekXavblQnTVVyCyErpIg//TTTxcuXLh3X8ZJ
mVetWiWecrxnfkxMjGgBX7t27dWrV8VCEuHIyEha6O/vL3q8i2b6gQMH0l7E
On/++acofU9imKNvI+m88Ojx48db9xmwjrWbHzhwQBzz1q1b0x4MfQ6ObCEl
JWXQoEFeisJ6P//8M/0aGBiY3WQBrozy+tY1e8zTdn/17NlTBw8e2LXrVx1Z
utRr1CjWv7/7DR0hJoYNGsQL3+lC3bq8JP7kySw6WgciI3nn/GrVeEV9JWXL
sqef5lX0tSlePLN/vrD47JDJzZF2bxzurZn/fVMIsBEZ7B4/Y6DzgHYPTgX4
0ToIsGb+LF8IpM/DpiYQ87wgwK+rGe1eu/qEtHu9Iu3eXKjOmnX27Nkj5FSE
nFSItkhwcLDNUvY27f7atWvKGfECAgJEa764RWCR39u3b9NmxfLw8PDZs2cL
ZZ4wYYLGgHebESP6aWuWmwnasXbz8ePH2xq+zzN9+nRHtkBZu3ataP2fcT+i
NF924x1cHOX1rWv2mIftPi2tQfv2z9asWfbNN5/Rkdq1H3/xRS6zbjd0hA8+
YB07sgUL9KF9e/buu6xtW14qH6d7dz5l3pNP8mJ65PiCypUfGIyvgarXvYwZ
I+3eOMCZ00G7B1vPwaZYRM8JpKoeeFMFGXtOlPoLot98CLDpHznj4Hz34BsH
R4KY0e61T4e0e70i7d5cqM6azVy6dGn58uUWE6f4+fmFhoZu3LgxLS3N5ku+
/fZbWi02Nla1PDU1NT4+fsyYMZZN+fv7T548WdXz//Lly6IYnYiPj09cXJzd
fvXWIZGkfSmrAmpH3LiwrJ+enm4p6e+g3au2IJKRkZGYmEgfmnihr6/vF198
kdP3YlCU17eu2WOetvvyb73Fp03XKODmBPXqsZde0tPu09LY9evs2jWX8sYb
rFMntnatPgwaxNW+Y0c+oF4XWrfmdv/YY5lq//zzrGLFzDH1skXeEyLt3jjG
hDAE0O7BHuZgcbnpgyCQcv1gMy54W6P4ZQhwRjzwpCM3ZGJ6QYCTLIAzRJjR
7rW7Yfh7S7vXJ9LuzYXqrGmEVJek+9SpU+fPn7fZKT1HIVU/ceKE9qZonePH
j585cya76eccSU6b+40LvdNz587R20lJSXH3sWRFeX3rmj3mYbu/e7c8yfjQ
oezMGT355hs+MNzPTze7/+svFhfnaqpXZ6NGsRs39OHcObZmDVu4kH3+uT58
9hl78UXex75SJe71pUuzEiVY0aJZU+PZpFAh3ezyX//ig/dFFT7RH8AyZl/G
BZF2bxzgyHfQ7sFp38Hpy5HGdwIpsBY+FAK01Lr/gegaBwF27EemeJg4EqJX
DETzDRBmtHvt0yHtXq9IuzcXqrMm42lRXt+6Zo953u7Hj9e5T/uuXUzHGfFI
jQ8dYhMnshkzXMpzz/Er7YwMR4/z7l128iQ7dco2f/zBVqxgs2frxuTJ3O7J
6EVtPXrwzDOcMmWy5emn+U2AwoV5i7+AZF9VdV8DZeF9IfLS7t0YaffGAQ4A
B+0eHILdIR4CLMqHtN2DUwGCYwrAmvm9P4cAa+YjgGd84AwI8K6I6VyA7F57
pIO0e70i7d5cqM6ajKdFeX3rmj1Ku3ev3a9ZwwYPZiVL8iL8roR02HG7T01l
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
XUfZS/v27du0aSPt3o1kZPAJ5e1Cn+2ff7Kff2bx8a5jxQr26ae82Z2k22hI
6lu1Yu++y1vwCTEYgbEHFJ5kX3TOL14862eRIuyxxzLH49MDawoVegAxN32B
AmpEPUDLnPUWZFwfaffGAbYngnYP9jBHOmkTYCPytMHOA05YX/0QxNQhEODB
j5gEgXxZwaEc4OcG/qWZzgXI7scHMw36S7vXKdLuzYXqrMl4WpTXt8h2atas
+c477/Tr12+ivci2+9wJKf/t2+zatSyuXmXnz7MdO7h0r1njIhIS2KRJvFX9
ww8zef99nWnRIhPy+ubNef09wSuv8EEBqpCDi8750u7zdqTd51W7/ywAov1K
iLKnIbrHOs/oUAiw2j84Yb22stll3CcQyJe1QzxDQM44Af6lmc4FyO61T6W0
e70i7d5cqM6ajKdFeX2LbKdZs2bz58//9ddfL9vLypUrR40aJavq5TauX+ci
//nnDxAWxlu0yXnJgkUDt9E0acIH+9eqxYfeEy+8wMqWZc88oxu0NVJypXqT
d1sg0VZFOfW87JmfhyPt3jjAOmOg3YPNuEjrOQG+d2Tu8j8qQcz1hgBHNIBn
reVaCGQiQrDxfeYAiG5LIEznAmT32vUVpd3rFWn35kJ11mwmPT39wIEDMTEx
kyZNIi8LCwuLjY3dsmVLWlqa9Zrbt29ftmzZrFmz4uLiaJ3U1FTVOkePHo2P
j4+IiKBNTZs2jR7v379fY+8bNmyIjIy8ceNGzr6IOQkd9o4dO+hIZs+eTT+P
HTumfPb69evf2crFixct69DhffXVV6S39CnRu6aXGHe0+kZ5fYts5913312+
fLnqo7MZvWbEy7V2Twd265b5OHuWrVrFpk59gMBAVrkyHwhfvz6vM+8CXn6Z
T1dXpQr3euL553kd++LFdYO29vDDDzi7tG8ZJu3eSMCRyKDdt02AQEa+E2BT
LLLr+A4Q4EwH/6kLAX7sYNu9G8cUgGdt/QcQZrR77ZE10u71irR7c6E6a9a5
fPkyiZiXrYSEhJw/f96y5s2bNydMmKBaJygo6O+//xYrZGRkrF692uamEhIS
SLGt9/7rr7+KFSwb0T3Xrl2LiIhQHQ/9i2FZYffu3TaPec+ePWIFcvkhQ4Yo
nxozZozS/XNzlNe3yHak3Qu7b9iQjxnfuNF8TJ/OnnqKBQQ8QJcuvKpeixZ8
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
mzdvFkMDvO4XA1ywYMGdO3csz168eJGk3nLApP/Lli2zvPF79/stJCYmigZ9
r/szBXzxxRdOHK1bory+RbYj7d6NnDzJ53l/8UXbxd90pGpV3tGdBNzpQ71+
ne3Zw7Zty2LDBhYSwivgNWqUScWKpFq8ER+8qtdg2DD+dooUYfXq2efllzPf
OB1knTr8jkSVKvwIn3oq8y6ETB6ItHvjaPo9Q3Cv3YNt9wNnQCBHDpbFA9ug
T1SAAIvex3aHQHr1g0cOnjWwgqUZ7V77L0javV6Rdm8uVGdNI+np6ZcvXz51
6tT58+dFuzaSW7dunThxQpdNacdmb3+bIYs/e/ZsdseTkpJy5swZjQOm5efO
naN1aE0nj9UdUV7fItuRdu9GDh/mc7pVqGB/gDkIWS3Z95Ahzh9qair75x8+
NZ6FQ4fY4sXs/ff5DQrBK6/w4nuhoWzqVKOYMIHPkVesGHd2FfQG33hD2r3H
Rdq9cSQ1Zgig3SNTxhOdl0H0WQiBTI42YCYEMiscMc8LApkKkACn80PK4k0e
DtFuFQQ4JMGMdq/9Nfb2l3avT6TdmwvVWZPxtCivb5HtSLt3I198wT7+mE2e
zLZvN5bwcD6nvNM98wXp6dzxLdy9y65dY+fOZbFtG5s3jxfNCww0Cm9v7uml
S9sos9+pE7f7AgUyC9oT9Dh/fl7+TnTpp8eEGGVv0Nx2ssO/6yPtPq/2zAf7
xn8yDgLc+4dfOg/YiBzpD9FlKQSo5zMGQiBfVrBr/TNnIMC/NNO5ANm9naEx
0u51irR7c6E6azKeFuX1LbIdafduZMUK1r8/W7iQnTljLIsWcTUeMIAlJxvI
f/7D34sTE+RZ06uXbTp25IX7SpZk7duradOGt9ezbCavt8aISLt3faTdGwdY
RRy0e3BuNXBYATgAHGm/BquvIzcWiMAIiNDREFOGQbhxIsIGWyHADhumcwGy
e+3PU9q9XpF2by5UZ03G06K8vkW2I+3evXbv789WrWJpacaSlMS6duWz2vXo
YSBdumQW0scpXjxr3nklhQvz9veHH7Y9GX2BAu5STBm3Rdq9cYDl3UC7nzkA
YnwwBDjf/cSRzgO23SO7JsCTDk5ph+g5gZTFAws1gJ8biOlcgOxeu76itHu9
Iu3eXKjOmoynRXl9i2xH2r177X7AALZ6teE72ruXF7t79VU+EMBd9OrFOnfm
/ecdoWpVTrVqmQ+I55/nVKmSxXPPcSpXzqJSJU7FillUqMAH2lsoVy4TMTdf
2bJ8snsxwb2FokX5bQQxnb3TyLgs0u6NY9pghgDaPeiJ4LTvyAhuYmi48xT7
BwJ842Axw5ZrISaMhUA6t4NzDYBl8XrFQJjOBcjufeYwDbyk3esUaffmQnXW
ZDwtyutbZDvS7j3B7lNTeRG89evZ2rXuYc0aFhvLJk7kNfccYfJkFhXFZs/m
zJrFIiPZzJls+nQ2bRqLiOBlBAhaZ9IkTlgYJySE19yjr9a4cSw4mNHXbMwY
zqhR/M7GiBG83v7Qoby0YGAgLw5A9O/P3nmHFzZs2JD/fOMNzuuv8x7+1atz
wRcz99EDC7RE/MwOelbW63NlpN0bBzgWGLT7NqshQF0CRyV8sN55Kv0BAd4V
AXsOjPsEom80BPJlBd/4HB8I8C/NdC5Adq9duULavV6Rdm8uVGdNxtOivL5F
tiPt3hPsnjh/nu3ezXbs0IFffuHV8km6hX07Auk5GTfZ9KBBmWatDck4Xd4L
W6cH9FpC2Pro0VnCPnz4A84+eHDmywcO5B+svz/H15fv1zJyv2dPTo8erHt3
3kng3/9mtWvzSn308+WXObVq8er6lSpxSSe1V5bpE0vEz+wQ5ftkXBZp98YB
1mdz77h7UHI7xEMg7f7gmAKwczs4UQIoueBJ7zffecB6BeCMeN++A2E6FyC7
tzM5o7R7nSLt3lyozpqMp0V5fYtsR9q9h9i9quI9wuXLrF8/Ps2c45A+Fy7M
e7xXq8ZefNE+NWuyl17i0ANtHNka2TrtvUQJPhfe009nUaoUl/FHHsni4Yez
EH3s3VWgT8bBSLs3DveOuweLt7dNgAD3jlRIA8vOg/XZfn4dYsQkCLCiIDKJ
IdjZAxzGAo4LMJ0LkN1r32zxGiDtXp9IuzcXqrMm42lRXt8i25F27yF2b5cD
B9iuXezXX+3zww98dvtXX+UV7B2kTRvu9WXL8ibyV15xEtHC7hyPP867zdPP
okWzoCUaY+Sl3Zsi0u6NAyyfDto9UiGNGDIVAnzvk0Y4j/Z4ZLu8nwixqw7E
LF+Izssgusc6z/RBEL0/hwC/b6ZzAbJ77UEW0u71irR7c6E6azKeFuX1LbId
afduJFfZfYcO3KAtjeYaVKnCO65/8AHv6u8g27ezefN4x/ju3Z2nY0fWti2/
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
e2yLtHu9Iu3eXKjOms2kp6cfOHAgJiaGjGzUqFFhYWGxsbFbtmxJS0uzXnP7
9u3Lli2bNWtWXFwcrZOamqpa5+jRo/Hx8REREbSpadOm0eP9+/db7/TChQv0
Z7tgwYJ58+atXbv21KlTTn4jHYjdfV25ciUxMTH6fugB/ZrTLdy4cYOsdv78
+fQx0sdy/fp1495OjqK8vkW2o5fdp6Ze/eGHck2bPj516mNz52bLtGmFSNCC
g6Xdc0xq95cv8wb0F1/k7fWCWrW4t06cqEPp/tu3+e2CbdvYzz+r+fJLXuyu
d28u+PQtErRqlUmbNpy2bR+wftL5jh2z6NyZderE3n+f2zRZ9pNPPjC7nyNT
ASopWpSr9//YOxM4m8r/jz/tliyRvUShZKkUWpSkbPlFhKJsxdiNsQ3DhIy1
kS0hsstayojsUoSkyNbPz75lJ2ZsM/7fr2f+x3Hmzpk793PuvXPnfj+v92te
95577nPPveeo83me70KmW/fF05ATt+eee6zQCC6du7h4dyTu3nuA1ddBdx/V
E2JhTQgw0HpEB88B+91PbgIBrkH3jIJ4YykEEnUAfnSPARDgpweiu28wS9kg
7t4pibsPLCxnLanOnDlDRqylK/Xv3//YsWPGnpcuXerXr59ln169ep0+fVrv
kJCQMH/+fJdDzZs3Lz4+3hiK/G/r1q3NO4SEhJArdP56deOzdu7c2aFDB/MO
HTt2pI3uj0BevnPnzuYdIiIiTp486Y2vk1qZ72+RcZxz9+eWLOHmYhMncou3
5Jgyhe0V3bmJu78RsO7+n3+4AF3evKpMmURKleKnQ4Y4MPj162rjRjbyCxda
+eYbroPXtCnH5xM1ayb+1RhbzLz1FmM81kv/lSuzu9fl7+iBgV5Gd59Mmdib
k/XW9twgxbr3LveXfHzPJO7ee4Cp66C7B6vqgcXbwcD+z9t4zpCuEGBkPjit
gXxxotpiCGTtHuzACNYDDMJ+9/VmKxvE3TslcfeBheWsWRQXFxceHq4N6bRp
07Zs2XL8+HFycGTQ2rZtSxvpVWMFf8KECbQlNDSULPzu3bsXLlzYpUsX2hId
Ha13oI16KNpz165dx44doy2TJ0/WG5cvX653O3LkiDbL9MYNGzb8/vvvo0eP
1vvQ/s5eril+Fn27rl276qmMTZs2/fbbb1FRUfSUNl69etXNo/3yyy/pKb2R
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
1dosjxw58tq1ay4vOfqIDbbSNe5I9Ik2l67LzyK7qt9Lbv30TemcetozaQF/
lyMMHDiw5f/XHjSk6w3Sr2RzPL6R+f4WGUfcfapw3N2nijRSM9+lu3cKMvhH
jqi1a3kqA+fHH7leAalmTc4d8IxatTi2v2lTHi21zJ/PHp9+q9atGXpAP13F
iuqll+ygHYgKFRJjA8qX55mBp5/mvgAlSvAFoHMBsmThdIBMmW5rtGfY/CCR
uHvvAdYZA9092BgODFAfGA7RdYjngJH5oEEutRWixXiIluMg3v3ac8BMEPuV
6BQBJwcC0d3b1+QUd++UxN0HFpazZtaKFSu0sT179qyx8fjx4z//v3S9OIu7
px10E72OHTta/C+Z+kuXLlk+5dy5c+Tr9QdZWsDr8Unjx4+3SXLXDebc1ObN
m10OktxnaS8/btw4886TJk1qmSTaP7kRvvjii5amfn9ay5Yta2nqFehHme9v
kXHE3aeKgHb3V6+yMedFsUEc5O8xZFfJe374obe+5oUL/Avv3+8Ae/awxX7v
PRUR4bnL6NqVF9arV1effZZq6Odq25Z/q3r1bq3dP/kkG3Ybd//yywy5+xdf
TIz/p/3LlVNly/II5Ovz5FEPPCBr9yxx994DaetGgO4ebI6GZL4TSGg9gbh7
0CB/0gui+A6I96dB9IyCQCajwOkg0N1XWwwRiO7evrHjh6Hi7p2RuPvAwnLW
zDJav23YsMHlud67d6/F3R86dKhz584tb+bU09sto4WEhNDOujueWQkJCV26
dKF3rVmzxtii8wJI8+bNs6+JFxMTM9VWenDS4MGDL1++nPTTbT6rX79+5gPT
2rJlC22MiIhwZ4SZM2fq7eaNOi5i4sSJNt/LNzLf3yLjiLtPFQHt7i9dUpMn
8wWTMydHd3tM9uwcSf7BB/4/He5w7Zr67js1e7aaNctDJk7knHqy1S1bekjj
xlxJwBB5cxrNfvnehly5uD2Bm/X60r3E3XsP/67dR4dBRPSHAN09UrwdXL8G
Cw6U3Abx3kwIo/G9ZyA/O5g4X+VHiDdjIALR3dt/I3H3TkncfWBhOWsWRUVF
tbxZH96la9u2bZvZ3R8+fFgn1Pfv39/oH2fIKD5vWcXWL3Xq1Ile2rp1q95C
llxHv1tstQc6cuQIHT+NRt8lNjY26Q72nzVs2DB69dtvvzVvpD1pIxl/d0bQ
BfR69+5t3tirVy/auHLlSs+/mEMy398i44i7TxUB7e7Pn1dRUbwG3asXdNdN
dpU8ZvPm/j8d7hAfr3btUtu3q7/+cs2GDWrZMi5okBxjx3Jdvpo1uWFBUsi5
16/Pq+q6ZYBedrega+7deWdiCH3WrJxKr5PrzRQsaM3Hd0mmTByB706xvmCQ
uHvvgZZPx9w90lSOaD4RAvGJBFI3vs/HEGBZPPsV1RQBAw/ASw5pBQh+9Iu/
QJT+EyIQ3b19JQFx905J3H1gYTlrFh04cED3dieDvHbt2hMnTty4acbJMs+d
O1e/pN19QkKCLg5Pxu3ff/+9frv0aDqgnbRgwYLz58/rjadPnx41alTLm4Xo
dUC77qNH+vnnny3j2HSudymy89pH9+3bN2nMgDufRf/paHkzy4B+Cv2Ws2fP
6tSDWbNmuTNCXFwcvb2lqbDeL7/8Qk/DwsJSbBbgA5nvb5FxxN2nioB296dO
qTZtuEbc0aPq5EnPWbmS48zJ4/v+FyCrfvnyrZb3jrB3L7cmHD6cmxckR3i4
atGCI/yTQj9F1arstXXVu5w5ueQd/TWji+CRJdex9NrjJyWoIuqdkrh77+Hf
yHzQ5IIl98HqcEjMg3/nJZ7bBAEGHoCTA0hSQLOvIOyzyFMkCKvq2VcSaC7u
3iGJuw8sLGctqbZs2aLNqRZ5Ut1jTisyMnLbtm03btaKd53oflN79uyhfS5c
uGDuiBcaGqpX8/UUgWF+yYknN87w4cNTdTXqjH46SGMywaIUP+vKlSt6fqBt
27YjRoz48ssv9a/RrVs3PV3gztEuWLCg5c3F/RE3pSvvJZfv4GOZ72+RccTd
p4p04O7HjGFLe/Wq52zcyK7WS1X17Dl6VE2frjp0SKF8fapo0IBDET78kPPr
k4M+sXVr11H3zZqpN9/kf4bk3O+7j807/X3gAStZsgRdRrxvJO7eeyAroQTo
7sG5BbDgPwjir5Gm7cSHEyDKbIYAQ+vBmY1G0z0HPHLQ3SNHTgSiu7evJCDu
3imJuw8sLGfNpU6dOkXGzXDi2upGRUUtW7bMWJdfuHChjbs3+sddu3Zt9uzZ
ERERxkvt2rUbPHiw4Qrj4+ONKvq4uycjSZ9lrgpolpufdf78eTL12pJrjRkz
Rrf5c3OEhISEmJgYo61emzZtLKH+fpT5/hYZR9x9qkgH7v6LL3gc5DDcr5l/
/TqnvdPHOcWOHap/f/X66+qddxyjRAmuPP/WW9y9zgMaN+ZkBy0dLX/33Vya
wML99/vc9waHxN17D3D5G3T3/rXnHYdDIAX9mk6CANfun/0NAvx0MGQC6SQI
VtUDI/PBKZ1AdPdVlygbxN07JXH3gYXlrNmInCxZ2oMHDx47diy1EfJJFRsb
u2/fPkeGspdNsf3UjnP4pq5cueLZCPRNjx49SiPExcU5ckiOyHx/i4wj7j5V
iLu/kRp3f/iw+vVX9cMPjhERodq14y72HjevT8q77yb2kbfPdtet55NuL1BA
5c6dGFqvS9bTX13K3oylV53LdXw9gihVEnefXt096Lbqz4YA4xaQlnZgMcMO
IyCeXw8BtvML/QwCuVzBnAL77u0pYm91UyQQ3b19mUFx905J3H1gYTlromCT
+f4WGSdI3P21a/zROBUr+tndb9zIvc49W/g+epQtuS/dPVn7r7/mT3SKevW4
mt+IEZ60nk+OHj24Vx25ezLgSV25gbmnfHJoe560OZ1G3L03JO7ee4Cd00F3
Hz4QAozxBm0mEhuPLEATSDM+AlyDBvMCwMkBKLgdc/d15kMEobt/Y6myoXkn
cffOSNx9YGE5a6Jgk/n+FhknGNw9WftDh9SwYQ5QvDibQT+6e/LL2bKxv/aA
Vas4X96X7r5OHS4jHxLiGC+/rJo2VTNn8mXmFHv3qs2bVXQ0/1PKnNk1mTIl
GvysWVOByAcSd+89AnrtHjRrYGB/qy88B0wK6N0PovJyiAaz/Anys4PXG/i7
BWG/+9eXKRvE3TslcfeBheWsiYJN5vtbZJxgcPexsWxIwTZwmmLF/Ozuf/uN
a7AvWuQJs2ZxZzfc3f/5J/eAe/99dfCgHfQrPf+8evFF1bmzY1Svznnuo0er
bducZONGdvdZsvD5feIJ1xQqxJH5RYrc4rHHeGPBgsmSPXtiwXwiW7bEmnuW
cH0RKHH33gOM8Qb/Ywt+OmL0CPDTkc7p4JGDnd0ePggBphWANfORJgvg71b7
Wwik2j8RcF6A3P1ry5UN4u6dkrj7wMJy1kTBJvP9LTJOMLj7v//mheZ27QLe
3cfH80JzxYpscj3g9de5ghzu7sm5V6jA1rVUqRTInFl168b5/k4xfz5PLOTP
z1/EQbR5b9SIbf7Wra756Sf+9ClTbvH556pfPxUWlizdu3MNQOKTT1T79urp
p2/NFdCFRBQsyB7fRsn1zjM66InE3XsP//a7B30iGOMNRphH9PecnlEQYE5B
2Y0QYMzDB1MhkAum8RSImgshgnDtvtJKZUMzcfcOSdx9YGE5a6Jgk/n+Fhkn
GNz99u2qYUPVqZP67DMU/0bmJyRwnbr331e1anlCjRrsuHF3f+yYql1bFS6c
smvOlIk7xdO5dorFi9mD586dQgW81PLQQ1xYj0besIEjE1yyZg27+8mTbzF6
tOrTh6+r5BB37wOJu/ce9qGzKQK6e7D6OuKvCXBuAZkZ+OhLCLCTYIW1EGBf
uV6fQCCr52AdRbClXRDWzH91lbJB3L1TEncfWFjOmijYZL6/RcYJBne/Ywd3
M58xQ12+jFKpEt92+svda4N/8aL6919PoMNu0cIBd0/HcOIElzKgAW3Yv1+V
L88BA4MGOUZUlIqMdLLZvaZbN57/ufdeDqS39KnXcfUEPc6W7TYyZ1YZMyZL
hgyM8fS++6w194wKeyJE4u69BxJeToDuvttgiIYzIPr1hkDcPegTwd/tsT0Q
YFqBH2sOgP4aDFoAL9eA8wLk7iuuVjaIu3dK4u4DC8tZEwWbzPe3yDjB4+5n
z3ZgKP92xAPBO+LFx6s9e9R//6v++ouXs+2L+G3ezD9XpUqqQwdf0L69atbM
Q3TP+jvuYINvXxXfTHK18ZMWwxd5T+LuvQdYfd2/efdgjDe4Ao4kj7/7NQRY
TvCZ3yHATwezEpBJFbDoPdijAcwLCDgvQO7+lTXKBnH3TkncfWBhOWuiYJP5
/hYZR9x9qghyd3/xIq90d+/O8fb0N0UaNOC1+5de8gVly/JaeaZMrkmuGL5B
xoxuOXpzQTyjC57IjxJ37z3AVWD/uvu3voMAy7sh0elgyj8YG//UHxDNvoIA
0zH8WIax/mwIcDIq4LwAufuXf1I2NAsTd++MxN0HFpazJgo2me9vkXHE3aeK
YHb38fG8ZN+xI8exu2PtiZYtuQhezZq+oGpVzmR/+mnmqaduo3RpF1uKFuXq
fPnyWcmb1wW5c3NF/QwZ1P33J2LMG2TMmOyKv8gHEnfvPT5GBbn7/hEQYFW9
AT0gkND6WgsgwMmBwv+DANegwbx75GIFqxGCRe/Bf2kB5wXI3dsXcBB375TE
3QcWlrMmCjaZ72+RccTdp4pgdvdxcWzY27ZVQ4c6UJ/QcYYPV2PGKLoIFy9W
P/zALFqkYmKYhQvV99+r775TCxYw337LREerpk3Ve+/d4t13E2nQIJH69Zl6
9fjCLlmSs+8LFbrFI48wBQuy/bdk6xPZs/vL7waXxN17j6kfKATQ3X/aGSJ8
IARYcwCpyAdW1QNd6iP7IcBqhOBZQzIawH734KQKWGwh4LwAufuXflY2iLt3
SuLuAwvLWRMFm8z3t8g44u5TRaC7+48+4t//xx/VihWphlxzw4a8cL9ypVq/
3g+sWcNWXXvzpJBtJwu/di3z009q0iTVuTP3F6BTTzRvnoiRa1+tGlf+p2/0
wQdMo0bc5u+ll/ivgTnsn1x8liwqVy4rDz7IRj5rVhfccw8v6xP0QAfw61r3
UkzPQYm79x7+raoHxiqDVc7A8m5ICnbTSRCgzbSvdZYi//keosEsCCRa472Z
EODPDp70gPMC5O5f/EXZIO7eKRnXRuXnV6Q/fjl1I51hOWuiYJP5/hYZR9x9
8Lj7kydVkybscHv2VBERqaZ7dza8Pj53Zi5eVDt3plDKz2DQIFWmDNtqo+i9
hTvu4LNJpl6bfTL4hQvzWnyhQvzAwsMP81ts8vqTS/Y3wvjJ45Puuy/R7Jtr
8YkQibv3Hn0+Vgiguwf9NbgYCq5Bdx/kOWBwO1jezX5FNUXAxffoMAikoB+4
dl9uAwQY2B9wXoDc/fPrlA1Nxd07JHH3gYXlrImCTeb7W2QccfepIqDd/aVL
auZMXtH27GabDP4rr/jo3F2+rDZtsgYPfP45H3yXLm4dbe3aqnhxVblysnn6
pUqpl1/mbP0aNRh6kDcvr8Jny8Z/LdBGXXbPqKrnJrJ2722Ju/ceYC4w6O7B
qnqf9IIA4xaQ0nDvzIXoMQDi8V0Q4KTKoO4QyMUKZjTYr0SnCPgvLeC8ALn7
8r8qG8TdOyVx94GF5ayJgk3m+1tkHHH3qSKg3X1Cgjp9Wn3yiYdERqqKFX10
7i5cUGPHWoMHypblcPcCBRJL59lDVr1QIT7aAQNc8957qnx59eyz6rnnmGee
YQsvCjiJu/ceoM0E3f3HfSDAxdDWYyCQVWD/Vvt/egsEeM2AFhspeg+GDYCh
JmjQQqB5AXL39sEM4u6dkrj7wMJy1kTBJvP9LTKOuPtUEdDunrh+Xe3f7yG7
dqmQEK6ZP3Gimj7du7Rty3TvzpeKwQsvcIR84cLqySdThqz9Qw/xAn3p0vw3
KTSOpVQ+uXujJL7ukacfZ80qbe/SrsTdp9e1+/YjIMDJAbBif8MZngMmBQzp
CmG/opoivftBgA31kIu16G6F0K83BPgvLeC8ALn7shuVDU07i7t3RuLuAwvL
WRMFm8z3t8g44u6Dyt0jxMXxuWvTRvXrp6KivMsrr6jGjdnd9+9/i4oV1RNP
MCVLpgztRgY/Tx4mZ85kQ+6Tg3bOkiXxcY4cHFpvpMm7g8hnEnefXt09WKas
22AIsGs84u7rzYEAj7zo3xBgLUTwpCMXKzix0H4kBPgvLeC8ALn75zYpG8Td
OyVx94GF5ayJgk3m+1tkHHH3qSKY3X18PC/f9+zpYVG+VFG+PJ8yuk6io28R
Hq5ateKy/y1apAztRiM0bcrl8l54gevakWF/8EF3yZmT0VXxc+d2/aqBuVjf
Aw/wtIDIZxJ37z0i+yoE0N1H9A9gkPVrMHG+6xCIO+MhwCVscE4G+d3AOg9I
HUUCKdRABJwXIHf/7G/KBnH3TkncfWBhOWuiYJP5/hYZR9x9qghmd09cuaIG
DuRfoE8f71KpEhv5fv3UsGG3GDyYL54ePVJHt27qjTfY3ZMNN4fiu0/+/Bzk
//DDt6CnBgUK3AbtTx+kq+cZGKv5d96ZArLun1qJu/ceSAVyAnT3YCYyuAIO
JoAjzfjejIEAa7+X+AsCnFsAJ1WQxfeeURAffQkB9uMLOC9A7r7MZmWDuHun
JO4+sLCcNVGwyXx/i4wj7j5VBLm7T0hQ+/apvXu9zvLlfJGEhbE3N+jSRXXq
pEJDU0e7dlwbv2hRLrVXtqyHlCvnLrRzmTKqRInEJAJN3rxcOf/uu1OeSZB1
/9RK3L33aDdKIYDuHowcABuIg4HWyAI0OKkCGmQwMh9cfA+LhkBOGXi111oA
8Z/vIQLOC5C7f+Z3ZUMTcfcOSdx9YGE5ay4VHx//119/TZo0iRxZjx49BgwY
MHXq1DVr1ly/fj3pnr/88gu9+sUXXyxevHjfvn1JR9u9e/fs2bOjo6NpqGHD
htHjbdu22Xz60qVLR40adfHiRbevwVSLDnvDhg10JGPGjKG/SS3qiRMn6L8h
EyZMGDdu3IIFCw4ePGjZgQ6PTOv48ePpV6Jf5t9///Xe0Tor8/0tMo64+1QR
5O4+Rcj+X7vGS/wghw9zkECbNuzNk6NFCw68193qbWjcmEviFy/Of59/nnnh
Bc/RI9hDHv+ZZ9RTT93ioYe40z25e3MAgEukbn9qJe7ee4Dr16C7B32if/vd
I78bWK4fCRsgcp2AAD8dnFQJH+g54BkHKwaAXzwQ3b198wVx905J3H1gYTlr
SXXmzBkyYi1dqX///seOHTP2jIuLi4qKsuyzYsUKY4eEhIT58+e7HGrevHlk
sZN++qZNm/QOp0+fduT6TKoLFy5ER0dbjof+i2HsQG69devW5ldDQkLIoho7
kJfv3LmzeYeIiIiTJ0966YCdlfn+FhlH3H2qEHdvT1wcr7z/+SfK+vW8WN+k
iWre3DX0UtmyXPJO58XbQDvoYvhGSfwU6+kZWF7KmpVr6RNGaf0sWZgMGW6D
jDyhO91ryNfrkHt6YM+dd/rHIweuxN17DzATGXT3n4VCgJHSA8MhkHkJsLzb
J70gwH734M/e6xMI5HoDuySAfQyrLYYIRHdf+k9lg7h7pyTuPrCwnDWLyLCH
h4drxzpt2rQtW7YcP36cHBwZtLZt29JGetVYwacdaEunTp2WLFmye/fumTNn
6jcajo826i0TJkzYtWvXsWPHaMvkyZP1xuXLl5s/OiEhYfXq1fpTvOru6WBo
fLLn69at2759+xdffKE/8cCBA/TqkSNHtLWPjo7esGHD77//Pnr0aL0DHbwe
4csvv6SnUVFR9E137tzZp08fejpgwAAvHbCzMt/fIuOIu08VvnH3165xw/eT
J9WpU4EEHfD+/WrVKkVXAsg333D3vbp11bvvuqZePW57R3Y4U6ZEx03QY5dk
zJjou++5h99CT40t5seGMTdjtu3k03UevWHGaUBC5EeJu/ceYKUv0N2DLrVv
JAT43Yd28Rywqh7YES/3PxDI6jnxRSuIPh97DlgPELTn70+DCER3X2qrsqFJ
F3H3zkjcfWBhOWsWTZ8+nV5q06YNmVbLS4cPH6bt9Or69evp6dWrV9u3b09P
ydob++il/Pnz5+unc+bMoad9+/Yl524eSscGDB061Nhy4sQJempeDfeSuz95
8mRISAiNv2PHDmOjtud6+Z7+0uOwsDBjEiM+Pr5nz560cdasWfR0165d9LhV
q1bnz5/XO9ADPSHgMjEhrcl8f4uMI+4+Dbr7gwfV1KmqfXvVuXMgQQf8zjvc
h65yZZRy5XjZPU8e9dhjrnn0Uc5SN6+zE2TkjVV1C9r+k1snM25ZajeQVneB
KHH33gP0iaC7B5dxX1kD0WQyRINZngMmgDefCAHW9AP73Q/rBIHExr8zFwL8
xwIu/Qeiuy+5Tdkg7t4pibsPLCxnzay4uDi9dL5w4UKX53rGjBlkY8nT6Z2X
Ll06ZcqU2NhYYwc9OTB58mT9dNy4cfR01KhRlnG2b99Odi86OtoIzo+JidGz
CitXrtRO2TN3T2Zz2rRpLmP+tb799lsafOLEieaNhw8fpkPSnzh79uxu3brR
X/MOc+fOpXeNHj2aHn/zzTdJv9Tnn39OG2k3D47ZxzLf3yLjiLtPg+5+3To1
dCjnlXfsGEi0aqVq1OAV7WLFUHSiOvlx3ZPOJTlycKi8jo03IuT1Wnxy6CB5
c8y8GVEgSty992j1hUIA3T1YXK7uPAgwPB5ZhwUb1oO/G5j1D/5u9WdDvPu1
54B17cA6D8iRE4Ho7u2bL4i7d0ri7gMLy1kza+PGjfbr5nE3ldyVQEavY8eO
9PZNmzbpLatXr9ZJ62R7zQn7SbVq1Spy5Tp1XUcIeObuBwwYQO+dNGmSJVrA
kA6qX79+/fHjx1euXEkfunTpUnpsP6wONiBfT49HjhxJj2NiYsw7kIGljSNG
jPDgmH0s8/0tMo64+zTo7qOiuDj84MHqyy8DiVGjVOvWvMCd3AK6+5Cv13Hy
lnx2HQmfHKIglLh77wHmUPvX3YM284OpEIhBBsu7gc0CwN8NbPv+9jcQNRZ5
DujuG0+BaDgDIhDd/ZPblQ3i7p2SuPvAwnLWzNIL6KGhoam9Bsi+de/eXc8M
TJ48+dq1a3p7bGzskCFDjGD78PDwKVOmbNy40b7CPLJ2f+jQoXbt2tHbZ8yY
4XIHHf+vgxCMA2vTps3PP/+c3JjGHMXevXtv/L/Tp41J9wmI1Hvz/S0yjl/c
fffuassWtWePj/jxR9WwYSC5+z59uBncuHHqhx8cY9EiFROjFi70IvPnq+ho
bj+XXLz9q69yL3hLOH1yZM1qhfw7GX96kNxb9MyAKKgk7t57tBivEEB3jwS3
E+DUBLiWiuTsg60AQXsORg5E9YQA1+5fW+E5/l27BzNBAtHdF9+hbGgs7t4h
ibsPLCxnzSzyvLTd4sJ27NgxadKkr25q4k1Nnz7d8sb+/fsbTnnatGnmZnZX
r16dPXt2aGioOae+VatWMTExyS2vI+7+hikCwWWcvM6gJ3Xr1m3FihVk6gcO
HEhP6UMPHz6cdP/NmzfrPH0jVl9/2XXr1iX90D59+nh2zL6U+f4WGcfH7v7c
ORUZqRo1YoMfEeEjWrdmXxlA7r5fP/6VfvzRgdZyBhcv8tSKtwvr/fOPOnQo
WbZt4/ZwBQtybr4H3H03p9vTCE8/bcddd/nLaIr8IHH33gOskAa6e7DOWO1v
IcAOZSFjPQf8aPB3G9wNAly7B7P+kY7zYKEGsBUgGKkSiO7+iZ3KBnH3Tknc
fWBhOWtmzZs3j7Z37drVvHHlypUtbxcZYcsbyYmfPHlyyZIlZJlpB/LLlh3i
4+P37NlD/yqHDh1K1l6PM3bsWJdXVIrufvv27RtsZVh4c587LX2EHTt2PHfu
nN5y/fp13d7OKBdgaPXq1drajxw50ghI0LMBurSgITL7LW92DEzumNOOzPe3
yDg+dvfkMSdOpP8Tcb+zHj18REiIqljRGXdfqRI3YV+0SG3e7EXatuXZj2XL
HJsuiI3l9AQ6QT/+6E/mzuWc+hdfVNWqeUKRItxH/oUXeAQL5cur0qVVqVKM
Lm6PYBTMl2j/tC9x997Dvx3xQJcKFkkDa9MhkfmguwfX7sGADbDXABigjpxx
sFBDnfkQ4GRUILp7+9aK4u6dkrj7QMFi0pOeyhUrVuiXzp49a2w8fvz4z/8v
XVAuqbs39Ntvv+kRtHcmU3/p0iXLPvQS+Xq9m8se8Sm6e13i3k1t3rzZ/F7t
zS1x+zpowTIpob8safz48VevXjW26w56lnZ+y5Yta3mziV5yx5x2ZL6/Rcbx
sbu/cbMl+siRXDXOZ3Trpt54wxl3X6GCeuIJ9pjlynmRxx5TzZo56e7/+18u
eedIRjxCxoy8sE5nxLPJgb59OcOiVi0rdNVVqsQhAfnzO0OBAlzWj8iVy1+e
VeSuxN17j7BohQC6+55REG8shQBnNpDMdzBkouNwCLCqHlgzHyl6T1Ra6TlI
zj5Rbw5EEFbVK7pb2SDu3imJuw8sLGfNrCNHjmg/u2HDBpfneu/evYa7v3Ll
yv/+97/t27ebd7h27Zpuk0cj0GghISG0szlQXyshIaFLly6025o1a5J+Soru
PiYmZqqt9OCkwYMHX7582fxe7c0t7p6OtuXNzn3G4Wm/T5o3b54lg2DmzJl6
u3mjDnuwlOJPmzLf3yLj+N7dX7umfv1V/fKL75g5kzu1OeLux4xhj9mrF3rj
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
dz8IMPDg/WmeA8bGgwShu890SdkAuvvly5e3atXKKD8eEhJCljy5na9duzZ5
8mRzufI2bdqsWbPG/R1EIpHIEZnvb5FxgsHdE1eusMH3JUuXqqZN1cMPqwYN
fET9+pzmX6JEYjJ7xYp2PP88167PmtVFSHyOHLzdJpndQeyz5nU7OUtpemMF
PzmS63ZnjyhAJe7ee4A+EXT34NzC299AgEuxyMwA2HgdnBUBq8P5t1UBUk4Q
DFoA3T1YzDAQ3X2GWGVDQ8Dd79mzh+w8GfCVK1ceOXLkxx9/1E7/wIEDLveP
iYmhV9u3b79q1aqjR4+uW7cuNDSUtmzbts3NHUQikcgRme9vkXGCxN37nt27
VdeunDaOpK57wDPP8IeSwX/jDTsqVGALT2Y5e/a0S+bMiTMAOtFeY4nzTxr2
L+4+qCTuPr26e9AngmYNdPdIUkDH4RDg7wbGxoN5AeCnI/M54Oo52LC+0XSI
QHT3911WNiDufsyYMfSDLFmyxNiyePFi2jJlypSkO1+/fr1t27b06saNG42N
v//+O22JiopyZweRSCRySub7W2Qccfde4soVtX8/98XzMT/9pEaN4oyApk3t
ePttXqYnB125ctqlaFFOvX/gAa6wlzcvl+NLEfpSZNWTNqNPijj69CFx997D
v1X1wE9HgrQJsGa+H6vqgUv/YF07MDIfNLnI8jeYdw8W5QMnowLR3d97Rdng
sbtPSEjo2LEj/SBnz541Np4/fz4kJKRdu3Zk1S37Hz16lHbu3LmzZXv79u1p
+7///pviDp4dp0gkEiWV+f4WGUfcvff491917Jg6dMin7N2rvvtO9e2rune3
o1UrjuF/4gmuv5dmKVuW0wRy51bFi4u7F7mWuHvvASZBg+4e/HQwUhpsqIes
X4Oh9WBRPnD1vG8kBFg6vuZCzwELNYAXDFjnIRDd/T1XlQ0Ne3jo7v/55x+X
ZrxLly60/fjx45btO3fupO39+vWzbO/atStt//vvv1PcwbPjTLOKj4//66+/
Jk2aNGjQoB49egwYMGDq1Klr1qxJOjESQNq9e/fs2bOjo6PpGw0bNoweS1aF
KG3KfH+LjCPu3nskJHBBv2vXfM3Fi+rMGXXqlB0nTqiVK9X8+WrGjLRLRISq
UkU9/rgqVowT8O1j8o3I/BQT891M1deI0rjE3XsPcBEZdPdgCjbotsCGeoi/
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
TIboGwmBhJe3HgMRPhCizGYIsNcAWAsRybtH6u0TYKyIROaLRCKRyHx/i4yT
Bt39779zaff1633tXvGa+YHLlSsqLi4F6MxmzsxN7d96y/W6fO3a6uWXeRl9
6VI7Jk5Uo0apkSNdMHgwzw/cdx/b+Zw5Uwd5/4wZXYRkFCyYGG9vQcfhm9FN
7e+4wwWiNCtx995jfAuFALp70OSCJdBDxkIg69dg0ALSjI8AG8P17gcBVtVD
wi3e/gai7EYIMNRE3L1IJBKlA5nvb5FxxN0bBK27v3pVffcdV70bP94Oct8P
PMCZ9Zs3qz//dMEff3AxvTfeUB98YEf9+lziwCVvvcWR+U2bqrAw1blz6ggN
5cHr1XPB229zvj/RsKF6912O0ND1/Gl7rVp80dasqWrU4ImF557j5f5cuZjc
uZk8eTgaIWtWnhAwmt3rVX73MeYHZKLAcYm79x4fo4LcPRirDBZJAy02Mi/R
YwDEJ70gXlkDMaQrxNAuEMjFWvRvhQDGioD/0sTdi0QiUTqQ+f4WGUfcvUFA
uPuEBO4p4CwXLqgRI25VwEuOLl14ifyvv7jxX3LHtnMnW+yqVT2kcmVVogSn
SNDxjBrlAtqeHMOGccB/SIgLWre+VdYvLEx16KDatOGN9NJHH6nmzfm802E3
asQHULgwJ/gbFCzIBRkeeIADA7RVN2L4LbiM9hd3722Ju/ceYHk30N2D5dPB
yvMDekAgyeMtxkMM7gYBzoqAgf1g1j9UJqIPRP8ICDBWRNy9SCQSpQOZ72+R
ccTdB5C7v3IlsXC9g2zdyk3rnn2Wb6f797ejd29exbZx9zduhgH88w93PfCM
Q4fUypXsu9u3dwFtb9Ag2Xp9tWvz0n/Nmq6hlzRVq/ICfZEiXLRfk7R0/6OP
JtbqL1CA0/Zz5WJ3nzUrl9rLlIkr6pPI4IvSgsTdp9e1+1HtIHr1gwAjzJtO
8hxwWgOM8QaL3ncbDAHmUyAX68MHFQKY0QD+SxN3LxKJROlA5vtbZBxx94Hi
7uPj1dmzat06tWKFkyxezNnuZHKjo9Xo0XZ8+imv3a9ezTMMHvt3e2jkn37i
6nzNm7ugUSNVpQovr3sWFfD665w18MorbORz53ZRf4946KFbPfjosbb2uqJ+
Und/xx38Vz9Imqcvafu+kbj79Oruwdh4cPG9ZxQE0lsNjPGODoP46Et/UuIv
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
XLp04OuvVZcuqlMnrxAaqtq1U23bep3WrVWHDioyUvXurXr14nz/nj1VeDgH
D3Trxl+wc2cVFpZYbaB9+8S3EK1aqZAQ1aKF+vBDTt5v2pSD/Bs3Vu+/zx3u
GjZU777LUfr166t69bjZ/dtvc8T+W2+p//xHvfkmU726qlZNVa3KLfwqV+Zm
Aa++qipW5LqCOoz/xRc5kl/HMDz3HAcbPP20euoprsavC/Q9+WRiU7zHH+d5
CXLi5ukFPaWgJxCyZ+fJAT0bkDHjrd555h555jZ5xrSABOenD4m79x5L31AI
oLsf2gVicDeIL1pB9BjgOdFhEKPbQoA/e+3/Y+8+wJyo2jaOD6j0Ir0JSBGQ
qqCAtAUEEVBEigUREJSqWF7RFwGlShELAiKIyoeACCpi4RWkSlF6lya9dxDY
ZYHd/Z7Zg+OYZLOTnGSzCf/f9Vx77U4mk5NJMnvuzMyZWVpVY7lWhXDMfM1T
EhrP0SrSPQBEAHv/Vmc5qTLdh9K1axeWL4/66KOo0aPDvsaNi5oyJeqLL6Im
T476v/+LmjQp6vPPoz77LOrTT6MmToz65JOoCROixo+P+vhj8/mOHRs1Zsz1
O44aFfX++2a9+27UyJFR77wTNWJE1PDhUcOGRQ0dGjVkSNTgwVGDBpk1YEBU
//5Rb70V9eabUf36RfXpY1bv3lH//a9ZvXpFvfpq1H/+Y9Yrr0S99JJZPXtG
vfBC1PPPR/XoEdWtm1ldu0Z17mzWs89GdeoU1bFjVIcOZrVrZ9aTT0bVqxfV
ooVZjz4a9dBDNerWrVi2bIGyZQtJlSlT6I47ChUunEcSvRo/317WFPcDA+R3
uctNN13fie9lpz9Ss5RJ9/dXXxCqWn4qIVS14j5DpzTT/RdttUrzyumfdtQq
nVHrnx+tVZpH5mtet73d/2lVv4FapXMJxQnPaZXmaftPTtMq0j0ARAB7/1Zn
OaR7d1evnouJiZC6fNm1vM8fHZ1MXbqUTF286K0uXEi+/vrLtcT589dr9+5d
3377bceOz3Tp0lmVePjhhyWb58lz/bQC55U9u7kTXyK82uOvBtxzGWqAYQFS
M9J98GpqG0OnNNN9r+FaFdoh0J+b4H91HadVmoeIV9qgVZrp/r9DteqNIf6X
5rcimhcLaDhPq0j3ABAB7P1bneWQ7hFs8fHxZ8+enTVr1teBMHr0O//979P/
+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
7wyd0tz1r/lJI90DQASw9291lkO698/x4wcbNy5cunT+Bg3yN24cgGrYME/F
ikanTsapU4FM90ePGsuWmWevL1kSyBo/3ujd28z4EqudxHNVEsPz5zePn7/v
PrPk7lZVq2ZW1arGvfeadc89Zllnx1eqZB5FX7Lk9VLD6KkjAazB7aUKFLhe
8ih58pjXqb/11n9V9uz/qkyZOCw/7JHuIzXd61y7XEpzSEDN49t1AvJTU7Tq
/Ze0SjPktpmqVWW3apXOm1XzSxXNJ675SSPdA0AEsPdvdZZDuvfPkSP7JHWW
KWOOu968eQBKllO5sm66P3LEOHDgX/Xnn8avvxoLFwa4xowxXn/dPNg+TRrX
i8R5qQwZzOvNyXpThxOojG/FfCvgq4yvAr6qu+4yx9u3ny+vYj7pHqT7SE33
Y3po1dwHtErz0Z+e7H9pfrGg2XLNAw80z2got0WrdN6smqM4zmitVZqfNNI9
AEQAe/9WZzmke/9Iuq9VyxzOXcJ4QE6Ql2A+bJjRs6f/R+bHx5vXdJPkW7z4
v+r22wNfuXKZcbtTJ/NsdwnsDitfPjNiy33tZY1X770kqruUpPhbbvnnIHyX
C9I5KUQA0n2kpnvNne8jemmVzhncUj3G+F8vfhDK0jwhQueJS+U8rVU6b9Zm
sw2d0hwtQfOTRroHgAhg79/qLId07x9J97VrG6tWGbGxgTmEXgL+uHFG69bG
L7+Yi/WjVq40KlY0LwDXuHHQq0IFcxd8mzZmxE72SvTWgfRFi5p71b2UxP/c
uV3jf1IlD505s5Exo3lUwM03hypcIsRI98Er7YONtarFN1qleUU8zT25Ohde
1zxEXHO9aY79/uo7WtVrhFZ1/NT/6jxeq155V6uW1dQq0j0ARAB7/1ZnOaR7
/wQ83UdHGzNmmLuk7777XyekO69q1cxz26dNM3bvDnqNGmUO71+jhvmgDtt2
111mVazorcqXv36wfeHCHsplIP2iRa//og4JCBKXQ/c5kj+1Id0HrzSHAddM
95qXfe/weShLM6XqVKeJWrWmilZpXmdB84CNB//nf2lesF7zy4FPntUq0j0A
RAB7/1ZnOaR7/wQ83ctyFi82r8z+6KPmHnw/qlUr80TyDz4wlxPsGjzY6NjR
TPe1aiVfNWua59GXKmXceWcyVaaMuZdfYrsq+xXxVORX59cXKmSWdZZ9rlxG
1qzBCo+k+1SOdB+80hw+XTPdax4prXmIuOYOdJ3h07t9pFXPfKZVmjvfNS9V
UHeRVj36rf/V6Get0lxvmkW6B4AIYO/f6iyHdO+fgKd7qbg4Y8cOY/NmP2vj
RvPc9rvvNq9Bn6pKVlT58uYbNXt212HuXCp3bnP//h13/HMkv9qVLxE+Xz5z
oDyZIWdOcznZsl0/IF9dC4/L292wSPfBK82Eq5nu2/2fVmnuitW8spvODugB
b2qV5q5/zUMmNA9Qbz1Dq3T2nj/2lVbpHDYgpfldFukeACKAvX+rs5zatWuP
HTt26dKlO+CLpUsXVq8e4HQfH2+O0Xf8uJ917JjZJe7TR7dTHfDq29fo1s3c
NX/33eZ1AbzUPfcY9eub3wbUqmWOnC93Ucfkq/31BQteHw9fkn7evGbSV2Ff
DYYveV+dhp8hw/Wr76nUL+QXa/A9+8Xu+UIgApDug1faA4WF8sj88Z21Smcv
sJTOGQ2au781D1oY/bxWaV72vd5CrdL5PkfzsIHPO2jVW/21inQPABHA3r/V
WU6VKlUGDRo0Y8aMH+CLyZM/rVIlwOlevw4cMJYvNxYsSF01b57x5ZdGy5a+
nWjQtKn5bYDkeutAfXvdfru5f/+OO67v4i9c+Pr+/Vy5zLCfNauZ9CXmS8YX
EvbTpTN/V+Wyx5+YH9ZI98Erzb3nmum+5ddapTlogObYdDpXxNPc+a55PsWw
17VKZzhBqSe+1Cqdl+zx6Vql+YbRHMWRdA8AEcDev9VZTs+ePV966aXevXtr
XpDlRvPqqy+VK5fq0v3582bA37MnddXu3eaJA199ZQ4baK/p042hQ81D8atU
+dfV7VVVrGiesP/II8YTT3iuNm2Mp54ynnzS/P3xx43HHjNHHmjRwhy4oHlz
o1kz46GHzK8IGjc2f1Elf1rVpIlZLtcCqFzZPGBAXUmwVKnrpc4UyJHD/DYg
UyazbropVFkWrkj3wauu4wyd0kz3mgdpa47Ppnmcdt9B/pdmutfce/7Oq1ql
eSVBzUEDdHa+ax4br5nuNb/LIt0DQASw9291ljNjxox27do1bty4KXzRsGF9
CX2pLd2HV129asyda+5kl+DsfsG7W281GjY0O/mjRqVcPfus+c1AgwZmWd8G
NGlitqRYMXO/v7pgX7p0ocqycEW6D17du8rQKc10rznOmOZ595rnj+t8K6J5
wfoXPtSqgf20SudrDSnN1a5zVL/mKBOaJ5JoHrRAugeACGDv3+os58SJE9u2
bdsEHy1Y8HO1ajdQuo+ONrZtMz79NJA1fry5810C9cyZxk8/uZZk7U6dzFjd
rJnPJdm8Th1zSH9fq2BBM7+rIf4kxefMeb3kzwwZzAP4JddL2Q/pT7YQVKT7
4NUj3xk6pZnuNXeGah6g3niOVr37iv+lGZDbTNWq/4zUqqlttGpsd63SObi9
+Syt6v+WVn32jFaR7gEgAtj7t6Fuy40oGGPmp+Y6f95YtMjo1894882A1Rtv
mMfeDxhgHr1/8qRrLVxovPaaOcJe/fr/KnV9Pe91551GyZLm3nYvZV1uz172
wfc8RnWXofm8z0y6TwGk++BVaM+710xbrWZqleY3GzrxfOR/tErzVXt9mFaN
66pVmjvQdb7PCe2h9R0/1SrSPQBEAHv/NtRtuRHdaOl+40bztPTevc1ed//+
gak+fcyoLr/s2mUO+O9Su3cbK1eaI/L98ss/JX++8II5pJ668H1SlSWLeQ0+
Lzv35bnIbJLx1Sn2Vqmr76mR+fPk+WffvVUupw+ocfvlF4cI+wFHug9e6Vxf
TCq0o+o99INWaaYtnVP+Q3hSgNQDc7Xqo25apTko33MT/C/NUzk0B2ro9pFW
ke4BIALY+7ehbsuNKCLT/eXLxqVLxsWLHmrBAnPX9ptvmuPgDRsWmBo82DyE
/o03jPXrzYDvpHbsML9hKFjQ8553KYnn+fKZJ8hXqmQe9u+x2rQxB/CXhdx+
u2u6l7wvE4sWNRelBuG3l0R+91JfBThEug840n3wSnMUcc10rznAWoNftEpz
17/OUdafPKtVml8OaOZrzSPzu4/VKp2vNRr9rFWa8Vzz6pOkewCIAPb+bajb
ciOKvHQfH298/rnx0ktGhw4e6uGHzcwrMfz0aePcucDUyZPGN9+YmbpiRfPi
d07qrrvMNF2unDF5soeaNMl4+20zud9zj5nuK1TwXOXLmyPhq+viJVU33WSW
9UuyhVAh3QevNPdmaqZ7zTPfNeOS5q5YnUPrh7+mVTr7r6UG9dWqj7to1cPf
a5XOE9c82EPzhAjNoRRJ9wAQAez921C35UYk6b5GDWPpUjPtXrgQCfXXX8aQ
IUbbtubV5dyrUSNzp/auXUZcXMC+T7h2zVi+3LwInVSVKmZJeE8qklvBvGBB
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
yfLSSy8F9TR/AAAApAzSPQCkmAEDBsjGtnnz5taUM2fO9Hezfv36YLdkxowZ
xYoVUxv/m2++uX379gcOHAj2gwIAACB4SPcAkGI6deokG9sePXpYU3766Sf3
K9MtWLAgBRpz7dq1adOmVaxYUT1owYIF//zzzxR4XAAAAAQD6R4AUszTTz8t
G9uePXtaU3bv3j3lb2pIvTRp0pw/fz54bYiLi7P/GR8fP3PmzDx58qhr5AXv
cQEAABBUpHsASDH9+/dX18LzeKsazb5MmTJBevTdu3fnzJmzQIEC7jdNnjxZ
HjpjxoyhHRAAAAAAfiPdA0CKmTVrlgrRHgeye/HFF+XWdu3aBenRY2Jibrrp
JnkI9yPwFy9eLNPz5cvnsmcfAAAA4YJ0DwApRrJz+fLlZXtbs2ZN+yh2586d
GzlyZO7cueWm0aNHB68B6tGrVat27Ngxa+KhQ4cqVaok07t16xa8hwYAAEBQ
ke4BICX99ttv+fLlk01u5syZ77///jZt2tSqVUt+V9vh4sWLb9++PaiPni5d
OvXo1atXb9u2baNGjdKnTy9TKlSosHfv3uA9NAAAAIKKdA8AKez48eMtW7bM
kSOHtfmV3+vXrz9z5sxr164F+9GXLl3apEkTdb17pWjRot27d4+Ojg72QwMA
ACB4SPcAECqHDh1avXq1/SD5FBMTE7Nz50559LNnz6b8owMAACDgSPcAAAAA
AIQ70j0AAAAAAOGOdA8AAAAAQLgj3QMAAAAAEO5I9wAAAAAAhDvSPQAAAAAA
4Y50DwAAAABAuCPdAwAAAAAQ7kj3AAAAAACEO9I9AAAAAADhjnQPAAAAAEC4
I90DAAAAABDuSPcAAAAAAIQ70j0AAAAAAOGOdA8AAAAAQLgj3QMAAAAAEO5I
9wAAAAAAhDvSPQAAAAAA4Y50DwAAAABAuCPdAwAAAAAQ7kj3AAAAAACEO9I9
AAAAAADhjnQPAAAAAEC4I90DAAAAABDuSPcAAC/27NkzY8aMv/76K9QNSY1k
5UyePHn27Nn+3ZcVG1pXrlz58ccf16xZE+qGAAAQGKR7AIh4Vxy4du2a+x13
796dNm1a+Qdx1113pXyzU79x48bJyrnzzjt9vSMrNjVo37696v989913oW4L
AAABQLoHgMi2Z88ew4HXX3/d/b7ff/+9uvXmm2++ePFiyjfeP3FxcXPnzpWf
wX4gv9O9wxV76tSp1atXHzhwQK+Z8Kxy5crqVejdu7eX2TZt2iSvQgDfTlu2
bNm/f3+glgYAgIV0DwCRbd++fbf+m7XZt08cMWKE+31jY2NbtmxZokSJ4cOH
p3zL/TZlypQ77rjD49EIgeV3une4YseOHSvLf+WVVzTaiCTNmjWrfPnyUVFR
e/bs8TJbnjx55FUI4DkU7733Xo0aNQK1NAAALKR7ALjRZM2aVbb5X375Zagb
EhRXrlwpXrz4559/ngKP5Xe6d6h///6k+9CKi4tT51AEMN1fvHgxV65c/g3X
AACAF6R7ALjRBDzdS1rZvHmz/c9169Zdvnw5qfnPnz+/evXqY8eOBaoBdmPG
jClUqNDVq1eTmuHatWt79+5duXLlgQMH4uPjnSxTZjt06JDcZdu2bfZDAlzS
fUxMzNq1a0+ePKn5FCw9evTwI90n1VqLH2tAXLp0SV5leeEC+ASDQd54a9as
CdS7S56s6iM5SfeyMuVxZRXt3r3b+4odMGBAuXLlUuDkEQDADYV0DwA3Gu/p
Pn/+/NncPPnkky6zbdmyJXv27O3bt3/jjTcyZMggCyxRosSpU6f69OmTKVMm
+bNAgQJbt251udfMmTNLly6dJk0a9X8nT548Q4cODeAh9BcvXsyXL9+gQYM8
3rpq1ap27drlzJnT+seXJUuWIUOGuH8VILFanvWcOXPk9y+++KJUqVLWXQoX
LmzNptJ9xYoV5ZnWr18/Xbp0ap5ixYr9+OOPLst0uGJF+fLlixYtmjdvXrVA
+elyr8WLF/vRWp/WgAT/W2+9tU6dOvL70aNH27Zte8stt6i7pE2b9pNPPlGz
1axZUx7a4wqPiYmRR5dbFy1a5PHl8GLu3Llyx1y5crnflCNHDrlpyZIl1pSy
ZcvKlEuXLi1btqxhw4YZM2ZU7ZT18Pvvv9vvO2rUKPeXQGzcuNHlUcaPH1+y
ZMlChQpZZ7LIp8Z+l0aNGtnnj46OfvXVV+0rNnPmzHXr1nV/GyinT5+WNT9p
0iRf1wwAAF6Q7gHgRuNTulf/IB555BGX2dasWSPTVa6XmK9mk5yrTudXf7Zq
1cp+l6eeekpNl9z06KOPVq9eXR3z/OCDDwbqqb3//vsSQo8fP+5+kzrK3Urf
tWvXzp07t/rz+eefd5n56aeflumSlGWBap40adIUKVJEkqP9jGmV7q31UKBA
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
MhX+XwAQVLIp2LBhw5w5czZt2pSqtlSa1NYskp6Rsnv37rRp00pv+a677rox
GxAoV7wK7GO9//77ssbuvvvuwC7WD6T7iHTkyBH7K5stW7aqVau2b9/+p59+
CnXTSPcAwtKSJUtk23XLLbdcunTJ5aYnn3xSburUqVOKNUa66KtXr/bSp334
4YelSbK9jY2NtU9/8cUX1f+Fo0ePBr+ZAEJs3bp1tWrVypAhg9UnLFy48IQJ
E0LdrgBQ22TRpk2bULclwL7//nv11G6++eaLFy/qL/DUqVPyL+PAgQOhakCo
lCxZ0kja8uXLA/hYpHsElZXupWtXoECBNGnSWK9y27ZtT58+HcK2ke4BhCOr
J+l+pKJK90899VSKNSZPnjweW2JR6V788MMP1sT4+PjbbruNdA/cID744IN0
6dKpj7xsNCpUqCBhTf35+uuvh7p1unr06KGeS9asWWNiYkLdnECKjY1t2bJl
iRIlhg8fHpAFjh07VlbUK6+8EqoGhErlypVv/ZsVhawp8m89gI9FukdQWel+
y5Yt8ufFixdXr1792GOPqYn16tULYdtI9wDCUepJ93FxceqYSSfpvl27dtbE
FStWWP/xSfdAZJs3b576sN95550bNmxQE6Ojo/v165cpU6Zly5aFtnmarl27
li9fvjRp0pQtW1ae47fffhvqFqVq/fv39yndR6SsWbPKSvjyyy+DtHzSPYLK
Jd1b3nvvPTX9u+++83jH8+fPr169+tixYw4faO/evZs3b3Y58tPFlStX1q9f
L01Sf+bIkcNJur906ZIsWRpz8uRJL48uS072C1tpgKyHrVu3+nSKTbINkP8s
0oCVK1ceOHAgPj7ey6IuXrwoi7L/uW7dusuXLztvDICQ8zvdO9+unj17dtOm
TbJZ834kpGyUkmqJRaX7nDlz2g/Ol66dOqYrqXTvfLOmyGzSYI9jEQAIobi4
uIoVK8onvUKFCrIJcrk12WM45eN/6NAh2RRs27ZNNgse55HN1Nq1a2W2wLTY
RjpIsuQTJ054mWfhwoXy7CpXrjxy5Ej55YknnvAyc3R09Pbt29esWZPsGHHy
xGVbLVvs3bt3O9kGOuyIKjLbxo0bd+3a5WTJTjjfYqvjHIKR7n19G8iLKy+E
93+Izl8vn/iU7p20MyExcMkbQOWLUaNGeU/3voYsv5HuI1JS6V4++7Kdl+mV
KlVyucvMmTNLly5tHcOfJ0+eoUOHumzSJ0+enC1btr59+0pf8bXXXitRooSa
+eabb3755ZfdM/7x48dbtGhhne11++23z5gxI3/+/O7pXrZLt956a506deR3
6XO2bdv2lltuUfdKmzbtJ598Yp9ZPuyymVIdVPXo1atXl8+L+3o4depUly5d
rEXJnNlsnn76af8asGrVqnbt2km32frsZMmSZciQIfYurqx5aWH79u3feOMN
tQZkdUl7+vTpkylTJvmzQIECW7du9fz6AUh9/Ej3Trar4sKFCx9++GGVKlWs
OeUX2azZvxUU48ePL1myZKFChawjDKWvYt+mNWrUyJpZpfvmzZsbtoPzixYt
WqRIEel7uKd7J5s1cccdd8gDSTQYNGiQLErNKZs46Vq7JwgAofL111+rj+es
WbOczC/dKvloz5kzR37/4osvSpUqZW0KChcu7DLzggULKlasqI4gErlz55a+
jcs+i7lz58oCc+XK5f5YOXLkkJvsB0V/+umnMqV3796bNm26//7706dPr5Ys
m6zvv//eY4O7du0qM8jjSldKba8kErrPtmjRotq1a1vPRTat0hft1auXdFBd
5pS7v/rqq/ZtYObMmevWretxCHTnHdGExL73pEmTypQpY60x2YbLxlmCuX02
6R5ncyP/XDwu0+EWu3z58rIO8+bNq07QkJ8uy1+8eLF/DUhw9jYQZcuWleVc
unRp2bJlDRs2zJgxo5pf3mO///67y8zOXy8/eE/3PrVTTJ061eWfoPxbNJJI
9046A5IXpAHyern8d+7fv7+afvbsWYfP1LBxeBekfkmle/HZZ5+pDZF9CyCd
UjW/dB0fffRR2UapT+uDDz5ov++4ceNkYpMmTWrVqqU+yJUqVZKtn7qvvKvt
M+/YsSNfvnzW9lm2ANbZXoZbut+9e7eRmH/lLS0bQDWPbDbVVwHz5s2z5jx4
8KD1aZLWVq1aVWXnm2666eOPP7YvMzY29p577lFbvI4dOz7zzDMqVquPqrCf
dOa8AeroJqVYsWKyFZL1oP58/vnnrdnWrFmjPu/G33vKhPoi3eqZt2rVyvlr
CiC0fE33Drerss0pUKCAmlM2pzJbhQoVZIMmf8omyz4I0tixY1V3yzqRNtl0
P3r0aOPvg/NXrlwpv7/wwguS0I1/p3uHmzWhturS3VL/R6Qbo0YAENI18n4c
F4AU07dvX/Vxdrib+Omnn5b5Jdero4uNxGAl3S3JODVq1LDPOWDAAGt7dd99
91ldsnLlyp07d86a7aeffjIShyF1fyy1fZNsaE1R3UvZEqqNm/xidRqlGZMn
T3ZZgsQiteVRsat48eLyuwQol9kkAquMJhu0li1bSv6STZbad5MrVy6XQ6Rk
BvVE5PnK2njggQdUD1AMGzbMPqfzjmhC4q5tWaCaWTbp0i+Vp6bWgPRO7V/h
uoRrdZdHHnnEfQU632JL/Lcvzad076UBCY7fBgl//9d466235NHln6DMoP6D
iBw5cti/Fvbp9fKD93TvvJ3i5ZdfVjfJS1+lSpW8efNar4h7unfYGZCuhdpt
2rBhQ+tjK+9w9W5xf3t7Ydg4vxdSOS/p3jrv8s8//1RTZFukNkoTJkyw3k7L
li1TIVQ29dZ91eZXpE+fftSoUepAlNOnT8vnWn0Y7Q/UoEEDI3G4fut71+PH
j8tWQi3BY7qXz4j6aqt79+7SkVZfau3du9f+TeBDDz2kHmv+/PlqypkzZ+QD
IhNlm7Br1y5rTjWEiHyWd+7cqaZs3bpVNq3yTNetW+eyWpw3YNGiRbJmZLNm
HbEvt3bq1MlI7Ovu2bNHTVTpXsgGSlaU+lJFyAYhLi7ujTfekN9vu+22JF9C
AKmMle6lpzf63+Sfu/HvdO98uyrq1q1br1492bZY3+RLElc7ZTp27OjekrVr
16qWJHtk/sKFC0uVKqUOzu/Vq5eROESw6obZ073DzVrC3/0f0bVrV+vRhw8f
riZ+9NFHPq1SAEGihlpq0qSJw/lVuq9UqZL8lI6QbLjUCZWy6bDvYpasoYJJ
mzZtrKuHzJgxQ+3oee6556w5/Uj3ql8kmyM1cd++feqc+sKFC7t8cyg9QJku
myO1dVWXAmndurXLA3Xu3NlI3LFi362/f//+Z599dtKkSfY5Dx8+rBowZcoU
a6L01qZNm9asWTOXXOm8IypkG642pH379rU6k9IflhfogQce8HLdE5UfPYZr
51tsi/qP4NOR+V4a4PxtkGD7ryFhYceOHWqiRGw1ccyYMdaczl8v/zhJ907a
uXTpUrUXXlaOlfrlraL+a7uke586A6tWrVLfZowcOTIh8XgS9W28x56AF6T7
iOQl3Vs3qf3RMTEx6sM4ZMgQlznVqUzS7bSmqM2vRGD7Njkh8fgrtcxTp06p
KbLlUVM+//xzl8Wq7wM9pnvF5a1uZ/Wuv/rqK/t0ef8XLFjQpXetvivr0aOH
fU61me3Xr5/Lkh02QHHfPyUbN/W8pk+frqaodC9bP3U00cGDB+VPaaTatssK
NBK/RPX+QABSD2v7kxRr++PTdjXB0yZFDB48WOYsU6aM+03O0710PtUelp9/
/llifrFixeQmNWy+y7F/TjZrCX/3f9yf1/333+/eqwEQKpUrV3bpAklged9G
enT2+VW6F/fee69k1aQWW69ePZmnfPnyLrH0gw8+UHe39qf4ke7z589vdSMV
iVFqsS6dRsmPhu0ipKpPlSlTJpfLlard8VWrVk32vPjNmzerB/rmm2+8z+lT
R1RSsJp54MCB7ovyfliFl3Cd4HiLbQlsunf+Nkj4+7/GQw895NJmtWfQfrCB
89fLP07SvZN2RkVFyRTJ3S7DeanBzez/B33tDIh33nlHRa2tW7e++uqrRuLx
xr4et2Dvmfh0R6RmXtL9/v371U3q29FVq1YZid/1uW/M169fbyR+NWpNUZvf
O++802VOFV3Fpk2b1BT15pQNnfvXkh7HzLfCtcsxRS7effddmadIkSLum0R1
tkvp0qWtKa1atZIpjz/+uH02dRZq9+7dXe7usAEu5H/lrFmzhg4d2qVLF7VR
ffvtt9VNKt1b+V22ukbi4DbqT7VuZbU7fywAoWV16qRj2f3f1LfrVqfOp+2q
3YULF6Q3+8knn/Tq1atOnTpGEt8B+pTud+3aZSReKkV+9u3bNyGJdG/xsllL
+Lv/49KtFdJmI/FgraTaAyAlqXRv7+3Ix9be58+RI4d9fpXuJf543PNrUduE
iRMnuky/fPmyOvnRik5+pHv37qUoVKiQ3CS5yZpy9epVdSC6dWioTFEjNrts
mqQNahdziRIl+vfvv23bNi9PrXr16kbiPlbpPc6cOdPjWfwJPnZE1WkOefLk
8WlUZ8V7urd432JbApvunb8NEpL+r6EONmjRooU1xafXyw9O0n2y7ZTXXS3H
5fuxBE9j5vvRGZDlN2rUyEg8qVnWhnyCJFD4+kxJ9xHJS7q3OqjqdM4JEyao
P9O5sd4Y1sGiSW1+z58/r+a0jnjv0KGD/NmgQQP3tnlP9/v37/fyvJ555hmZ
54EHHnC/6dtvvzUS95VbG2T1HVr69Omtr4KPHTumjnj59NNPXe7usAHK3r17
u3XrZp0qayebIzUP6R6IMM7Pu/dpu6pMnz69efPm1hik3v81+5Tu5fdq1aqp
+VVnyWO6d7JZS0i6//Pzzz+rmZ0P+wMgeFq3bi2fx6ZNm1pTpEM4IJHEQCOJ
dC+9LC/LtHYPrVixwv1WNbJQ79691Z+BSvcqdL/44ovWFOt4UQlBzf+WJUsW
I/FcSJe7S2+zWLFi1tasbNmyr7/+ustwdop0Zdu1a2eNEZc5c2ZZrGyZXbbV
PnVE1Vr1OHOyvKd7h1tsSwDTvU9vg4Sk/2uo5Tdr1sw+0fnr5Qf/0r1LO/ft
26fa5n5NSfd070dnICHxxA3VVDF06FA/nqn9/eDH3ZE6eUn3H374oZF4yIf6
1lGdDyI6J8H+xW+y6V5Cq5rStm1bI4kTvryn+4MHD3p5XupLA4/bSVmgkTj6
inX4yunTp0uWLCkT8+bNK5/Nl156SY3BUqZMmQsXLrjc3WEDEhJPOsiVK5eR
+IWb/IucNWuWrGQJ73Xr1jVI90Dkcp7ufdquxsTEtGnTRvUJo6KipHsgfYbD
hw9b5ze5t8TXdK82+5UrV1Y3uad7h5u1hKT7P998842RuNuLa30CqYEa3sfj
qHpqA+Ix3VvHuntk5ZrffvvN/VZ1MY5evXqpPwOV7tWVnvr06WNNUftSPcqY
MaN7B+/KlSvff/+93MvKwtL7ku2wxyv9SW/wnXfeqV27tmqkkbgfeenSpdYM
PnVE1Smi9u9YnPN+3r3DLbYlgOnep7dBQnKp2X35Pr1ePtFJ91Y7//zzT9Wq
VatWuczpnu596gxY5s6da42uLx9kP56p/UPhx92ROiWV7uUjo74Tkw2XmiLd
SDWnk0tVOk/3sh02bGHWTifdq7GbZEvr5KbY2Fg1sp+dfDw9fgfoPN2rFdi6
dWuX07tI90Bkc57ufdqu/t///Z+ReGUNa4AmZfHixUn9a960aZO6ycv1oO3p
/vjx4w0bNrRGFHFP9w43awlJ93+GDh1qJJ6HmOzzBZACrOPw3S/o5ne6j4uL
UycRuw9PJMlLRSfrpv/973+qAe7f+DlP99JrVTvlp06dak1RY5cNGzZsjc3v
v/+ujn2aNm1aUu2Pj4+X2Vq0aKEaNnjwYC9P9syZM6NHj1ZbPNk+W9tGnzqi
b7/9tkwpVKiQHxe495LunW+xLepZe8ySvjbAp7dBgu/p3uLT6+VEQNK9vJ/V
AR7uQzS4p3ufOgOK/GtWI/Crccgl5stHyeF9Lfbg4+t9kWp5TPfyMVHf5Qrr
MqMXLlxQB6s7Od/cebpX/VUh/0Tsc546dUpd7cK/dP/LL794/G8lQV5t6+zX
mFMDVvTs2VM6wNLFlafs5XKZDhtgjTDgcmKabNDUOW6keyBSOU/3Pm1X1X4o
92sKq4M8Pf5rlg2pusnjRXgVe7p34ZLunW/WEpLo/8gWuGjRooanMasBhIR8
fqW3Jp/Ke+65x2V3tt/pXtSsWdNIHHnPZboaecPe7dy4caOaIr/Y55w4caKa
7iTdW7s+t27dqqaoLw08nsjctGlTual58+bWlKTGIlPj27vsf/c4szUsnnUU
uk8dUeskAvuI6xbvY8clFX592mJb5J+R4XYJNu+8pG/nb4MEX9K9T6+XHwKS
7hP+/nbF5ZwC8dprrxn/Tvc+dQYSEpOa2i9Zt25d+b1Hjx5G4tUZkt3z6MKw
8emOSM1c0r1sA3/99dfGjRurifZNX8Lf+1yMxCE97V+xbt++Xd7S9nFFnKd7
+YSq64RWqlTJul6zbOHVNUkNf9O9vNXVN5OFChWyurXyWOrKL/IJsob1S/i7
v+1yYY6kOGzAyZMn1Wz2a3Ns2LBBXQ/LIN0Dkcun6907366qf9/ly5e3OjZX
rlyRe1nn5XlsjBqcWXoX9oXbz3l3nu6db9YSbNe7nzNnjpoiG7fHH3/cSDws
36UbDyCEfvjhB/URlp6Y1TuSjc8rr7xi+JvuJZKrY4a7d+9uDS3+888/q0Ht
nnjiCWtO6RmqC9a3aNFCzSnbCjXunOKe7mXJnTt3trZjkqPVYu15WR0Yf//9
97u3TUXLDBkyqE20/Lzjjjvq1au3evVq+2wnTpxQi+3atas18eOPP86ePbts
t10G0+vbt69q7bFjx9QUnzqiMrNkUiPxlIFRo0ZZA03LdnvAgAHSDPvY8i6S
Ctc+bbEt48ePNxLP/7KfLS7/a1z2/jtpQIIvb4MEx6nZp9fLP4FK92rvoawB
eU3VlKtXr/73v/9V69/l2jHOOwPWzNmyZVOHGcfExKhxDGrUqCEP4fyZGjbO
74VUzkr3OXPmVOfmKPJW7Nmzp8t7SbY26gtPUaBAgYceekg+mJUrV1ZHnlhv
3QRf0r34/PPP1Wc/U6ZMtWrVUt8hp0+fXn1I/Uv3CYknvKjT56UnKY1s2LCh
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
Tp06uU//7rvv+vbta58yYsQIefrp0qWbMmXKhQsX1ERZFTVq1MiXL9/Bgwf9
eHTSveL8VfBPMF67GwfpHgAAAIgYcXFxFStWlL59hQoVzp8/73Lr6dOnvd89
Pj7+0KFDK1eu3LZt27Vr1zzOc/HixbVr18psgWmxzeXLl2XJJ06c8Hjrzz//
fPfdd7tPHzt27KOPPmqf8tBDD8kaeOKJJ1zmlJUTqCPzY2JipKknT570fq8r
V65s2bJl69at8ovzx7p06dLmzZslR3tZ/t69e9evXy/NcL5YJ7y/BAm+vAr+
CcZr5zf5BMmrcOzYsRR+XL+R7gEAAICI8fXXX6u+/axZs5zM36NHj2zZss2Z
M0d+/+KLL0qVKmU/T99l5gULFlSsWFENXyZy587dp08fyYP2eebOnSsLzJUr
l/tj5ciRQ25asmSJNeXTTz+VKb179960adP999+fPn16teSiRYt+//331my/
/vrr5MmTX3nlldtuu22ym7Zt20relF+k/SpEN27cWBYSFRXl/bn71FSV7uXp
S1SvX7++deJDsWLFfvzxR/clnDp1qkuXLrfccot1Png2m6efftqa88CBA7fe
emudOnXk96NHj8rTse4lq/qTTz6xL/avv/6Slyx79uzWYqtXry4JNNgvQYLv
r4J/HL52In/+/NncPPnkk+5zXrx40X1Ou23btrncZebMmaVLl06TJo11esvQ
oUOT+r4r9SDdAwAAABGjb9++KnI6HCJeYqbML4ns/fffV6FAEk2RIkUyZsxY
o0YN+5wDBgxQM2TOnPm+++6TedSf5cqVO3funDXbTz/9pM6Ydn+sm266SW5a
sGCBNUVF5gIFCqiwLL9IfFZDBEgzJCqq2QYPHtyoUaO77rpLHrqRm1KlSuXO
nVv9ri6IJvOrtnXt2tXeNhd+NFWogQqTaqoSGxt7zz33yE1ZsmTp2LHjM888
kylTJnX3Uonsox/s3r1bppcoUUKifZkyZdRskt8lvcov8+bNs+Y8ePCgtdpL
lixZtWpV1Rhp7ccffxzUl8CPVyEpEqWHDBmS1K0OX7sEt3Sv7vXII4+4zxkT
EyPx3CXRW1+hSLNdjpF46qmnrJX86KOPVq9eXX2j9eCDD3ppT2pAugcAAAAi
xmOPPSYd+yZNmjicX6X7SpUqyc/SpUtPmDBBHf8s+XTv3r3WbL///rsKOG3a
tLl06ZKaOGPGDAl6MvG5556z5vQvMt92222LFi1SE/ft21e2bFkj8eABaYY1
s/NjwqWFagkia9asPXv23LVrl/sdg9dUaZJ66J07d6opW7dulYAvi123bp3L
Y6l0Lzld7Szu3r37kiVL1G5ieQnsh0aoo9YljVqDy505c0Yip0zMmDGj9RyD
97wSAnFk/uLFi+XJvvzyyx5vdfjauZMFJpXu3cXFxbVs2VLmlxflt99+s9/0
8ccfqy9M5LNgfUW2bNmyW2+9VX0P5mT5oUK6BwAAACJG5cqVpWPfo0cPa8qO
HTvet5E0Z59fpXtx7733SlRMarH16tWTecqXLy+xyD79gw8+UHe3Yqwf0TJ/
/vynTp2yz7l06VK12NmzZ1sTfcqVZ8+ebdu2rXUSgaTmZs2a/f777/Z5gtdU
tfPX/iqIjh07ysR+/fq5PJZK94qX8CiRX83z1Vdf2adHR0cXLFhQpsuDBvt5
JQTovHtZSPr06V955RWPtzp57dz5lO5feOEFFeFdzj6IiYlRX1i5H10wcuRI
mV63bl0nyw8V0j0AAAAQMVS67969uzVFwqC9z58jRw77/CrdZ82adc+ePV4W
q458njhxosv0y5cvq2POv/zySzXFj2jpcSD6QoUKyU3vvfeeNcWPXLljxw5Z
FSqvKZIorS8oAtvUd99915rSqlUrmfL444/bZ2vevLnLS6NY6f7555/3+CwU
Wb7MU6RIEfdzLgYNGmQkHnoRjOdlfwkSAjeq3pw5cyTgv/rqq0nN4P21c+c8
3ath+cX48eNdblq1apWROJqB+zdd69evl5vy5cuX7PJDiHQPAAAARIzWrVtL
x75p06bWlC1btgxI1KVLl6TS/TPPPONlmfv371d5YcWKFe63qiH6e/furf4M
VLSsXr263PTiiy9aU/zOlWfPnh02bFju3LnVsxg1alQwmtqzZ09riiRimSLp
1dohfuzYMXWi96effupydyvdy3r28izkNZJ5HnjgAfebvv32WyNxCL7o6OiA
Py/7S5Dg+FWIc+D777+XRvbq1cvLs07qtXPnMN1PnTpVjZXnfhCFmDBhgnqg
dG6s1Jyax9Yj3QMAAAAR44033jCSGFVv7dq1SaV7j1cwt+zbt0/lBZczlBXJ
enKTldECFS0rVKggN/Xp08eaornXWIJ2uXLlZJllypQJbFPLly8vN9mv9n76
9OmSJUvKxLx580rqfOmll/LkyaMe2rqGu8VK994v5t6hQ4ek0v3s2bONxCPY
L168GMDn5f4SJDh7FTZu3Gj44ttvv/XyxBM8vXbunKR7eeIqp3fs2NHjDOqk
e9E5Ce6HXqQqpHsAAAAgYljH4btfps3vdB8XF6cOkHY/K/zatWtZs2a13/S/
//1PNcDlSnkJvkTLK1euZMmSRW6aOnWqNVH/mPDx48cbiWdbqwO8A9LU2NhY
dW6CvakysUGDBi4ZVoKnfaBCi8N0P3z4cCNxaP1kbwreS5Dg7FW4evXqTge+
/PJLI3G4AC/H21tcXjt3yab7jRs3qhNMmjRpIi30OM+yZcvUqjt06FCyTUqF
SPcAAABAxJC4LUlN+vb33HOPy25iv9O9qFmzppE48p7L9E8++URFiS1btqgp
1n5b+cU+58SJE9V0J9HS2oW6detW+fPrr78eOHCgxMC8efMOdNO4cePSpUvL
L4MGDYqJiUlIHABt5syZ7s9C5pFl3n777QFs6kcffWRvqqJGYOvZs+eJEyfm
z5+/ZMmS48ePJ7VuHab7X375xeP3NrGxscWKFZPprVq1CuDzcnkJEnx/Fbxb
t25dzpw5n3zySZcD3R2+du68p/v9+/ersQflPayOcPBIPjLqBArvYyCkWqR7
AAAAIJL88MMPqntfqVKlTZs2qYnR0dGvvPKK3+le8qA6W7l79+7WJdJ+/vln
WZpMfOKJJ6w5z58/r66W3qJFCzXnpUuX1LBvSUVLWXLnzp3Pnj2rJkqMVYu1
4uqECRO6dOnSqFEjmd7FzX333VekSBH1uzzWjBkz1APJU5Onr3b1HjlyRLKt
2skuj6XT1Oeee84acm3evHnqQmmtW7e2ry4Jrca/LxTohcN0Hx8fX7duXZmt
UKFC1gDyElTVNRAlk1qvdTBeAl9fBe9Pef369RLtpeUu0d75a+fOS7qX10td
Za9EiRJevmZRhg4dqtowcOBA+8EP27dvl4dQIxukWqR7AAAA4P/ZOw/wqMq0
Db+AKEVQsFBEpKbRpXcCJPTeRJoUpfciVQFR6bBUUZQiEEpClyZVQKUjTVyQ
riAI0mvI/t+345/FMJlMzjMnk3Pmua/78mInk0zNbO5zvmIzVKE4+k6hMipv
3rwpU6Z0/M9q1ao9eU036/4//19P8t+55FWrVs2XL5+j97Nly3blypUnr+nY
+k3+u89a8eLFn3vuOfVv9S2O9fydbrauSJ06dbly5dSPdWyFliFDhhirzLk5
Mv/PP/986623on9smjRpcufOHf0/1b9V/Bq+q46R7equlilTJvoZePquzpkz
J/rJL1u2bNX/UrNmzZYtW44ePTrG9gRu1r3i5MmTjvn76m6oexgSEuJocIX6
sQnwErj/Krjgp59+eumllxo2bPj08Ph4vXYxcFH3FStWjP4hrzsjIiIi+sqP
Hz+uUaOG48qZMmVSr5q6S+p5czwnLpb1Swyw7gkhhBBCCLEfO3fujM46+e/J
WT8/P5VyMVbba9Wqlfpqhw4d3PmZKoJUy0fnQ4oUKTp37vz0MnFXr15VoRd9
tcyZM/fr10+lnGOfuC1btkRf05GW+fPnV/9QIey4vsoolVeXLl2K8WM3bNhQ
uHDhp++V+t4GDRrEuDA8PFwFuGPmuIOUKVP27t07xk5n7t9Vx2rqAwYMmDFj
hiOxXdzVmzdvPvlExUDdkyd3Hzh9+rTj8qd/ztNcuXKlefPmTy7hHhgY+GSt
x/dxxesl+E88XwWnqMfeunXr2Ga+/8ft1y4G6gGqazq9Dy+99FJsr4UDdedj
fMvXX3/tmO8QTY4cOVTa89w9IYQQQgghxCs8fPjw4MGDe/bsebrBDaOib/Pm
zUePHnW9Ndjly5e/++67J2ejP40jLYOCgv7z33OmR44c2bdvnwfvqvqZx48f
Vzl56tQpF0u3uXNXnyQqKurYsWN79+51elfV01KwYEEVyKNHj1blfuDAgf3/
Zc2aNWPHjnWMqXBnsIQLHC/r1q1bVcW7uFpieAkM4+ZrZyrXrl1Tz8auXbtc
jBlIVLDuCSGEEEIIIV7BxXZs1sWx/F358uWdfrVu3brqq02bNk3YOxUrtnwJ
fBbWPSGEEEIIIcQr2DItHbvP58qVK3qRumh2797tmCk/d+5cr9y3p7HlS+Cz
sO4JIYQQQgghXsGWaXnt2rUMGTKox5U1a9YhQ4YsWLAgIiJi0qRJtWvXdgzL
b9OmTYzVD7yILV8Cn4V1TwghhBBCCPEKixYtevnll0uVKuXtO+Jhjh8/Xrdu
3SfXhXNQuHDh2bNnJ560/499XwLfhHVPCCGEEEIIIR7n/v37mzdvnj9//sKF
C3/44YeLFy96+x4Rm8O6J4QQQgghhBBCrA7rnhBCCCGEEEIIsTqse0IIIYQQ
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
69RJjBYtqg9obNz4vyEBx4/r127WLLdUr+/AgXrMg2Odvdy59Q4LL7wgL77o
runTy3PP6cxX98Si1q0bEB4ebvYvI+uedc+6Z92z7gkhhJgK697eWKXuHzyQ
iROlc2c9D/2334zbpIk+9ezZur99W89tf/ZZ/TQmQrNnlwoVZPt2uXPnb8+e
1a+deuHcOXc/ebJ06aJ//VOkMGiaNHrqvWrkMmWsaqNGAVxVzzzBGdxg3Xs3
csF598jQevCgSuNFkOC8+27/ggTn3SPHJcA188GdBMF5Aax7QgixAax7e2Ot
uu/ZUy5f1svNGdaMNfOvXZPFi6V6db0IXiL00091WbdooSPdYfnyUqSIXg//
vffitlUrff1kyeTNNw2e+C5YUN54Q5/09/OzqqGhHJlvouC6dmDdg8cWQMHJ
7x2nGRe852+FQYLLu/UZAwkmNnL6G+zrAgchwSETrHtCCLEBrHt7Y7m6v3oV
+jktW+rB6j/+qBfB85QnTujJ6fXqJcTz4FTXBzS++kpCQvRy96rTHebJo3M7
KMitdQhr1dJd/8wzUrjwP7bGc99ChfSke0sbHMy6Z92z7ln3rHvWPSGEWB7W
vb3xtbpXaa+qtlMnef99j9m9u67gGjW8k/bqmTl/3pX79kl4uIwcKaNH/221
arruU6fWawzG6auv6onzKVLoufbGTJtWnn/e2hYqxHn3JurdeffI1HUlOEDd
izvigRsRgs+bd0fmg/sYlt9iXLDu8xyBLLUTknVPCCE2gHVvb3yt7t95R0qW
lLZt9RR+T9munR6W76j7yEi5dUv++iuBvHZNT6LfsUN++CFWN2+WhQtl+PD/
WaWKXsQ+XsGeOrU2VSoftWBBzrs30Xc/F0RLn7sHGxlZDxB82sF7Dm7N1nkK
JDjvHjl3X2kjJFj34KJ8rHtCCLEBrHt742t1f+qUbuFp02T6dI85dqyen16z
pv75Fy7oUfojRiSQQ4ZI1ar65HhgoB5v79SgIAkI+Mcs8uzZ5fXX5bXX4m2G
DHpTwvTpfc5ixbjfPeuedc+6Z92z7gkhxPKw7u2Nr9W9+vZ//1tWrfKkCxZI
//763P3Dh7Jlix4DP2iQ7u4EsF8/KVdOL3mXJYsOdjdVVzaQ9kqV9hkzSubM
PmeZMqx7E31nliCCdQ/OH28QDgneOjIyv/1nkOBmAaV3QHaZDAkmNjJ1HXzg
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
zP6M8tm6r7NcEMHfrOZfQwZvhgRv/a0w44IL+oFHRaquhQRn/YMiRwYqboIs
tRMSPKjiO3U/bdo09WDXrVsXfcnatWvVJXPmzHF6/VmzZqmvrl69OvqSNWvW
qEtmzpxp+n0lhJB4wrq3t6x7T3nvngwcKG3bSv/+Xqj7VKn0l5ImlWeeMUuv
Jzbr3q6y7ln3rHvWfeIhKiqqe/fu6sH+9ddf0RfeuHGjffv2Xbp0iYyMfPpb
pkyZoq6/bdu26Et2796tLhk3blxC3GNCCIkPrHt76wt1r17xU6fk44/lo49M
9IMP9IpznTrpNei2bPG869fr3fSaNNFD9AcOjGnp0pIjh2TLpv/rpurKr7wi
L79M47Z4ca6Zb6LVvxFEsO6RQFaCQ53BzOw01bi1VkKCUxLA5w2cd4+sV6BE
jkuADxwU/F3zkbr/448/1CPt3bt3jMv79OmjLr906dLT3+I4s//RRx/duXNH
/c/79++PHDlSXbJ06dKEuMeEEBIfWPf21hfq/tEj2bhRUqfW08BNNXlyfYb9
zBmzHsjDh/rFWrxYr2A/f/4/7NJFQkKkQgUJDnbXsmXF319y56ZxGxrKNfNN
tN0XggjWPXgOGqwtcPb6ezOM23YmZPTG98YE96QD592DG8Mhy+KV/Q4SnLZf
egekj9T9qVOnHKke43J1ibr8xIkTT3/LgwcPJk2apL7aq1evCRMmOI4DqH84
Yp8QQhIVrHt76wt1/+CBfPGFXvLdpDHzDgcN0r3crZusWiU//GCKO3bIrFnS
rp00bCiNG8tbb/3PMmUkIEB3qJtbvKlr5sihz0rnz0/jtmZNrpnPumfds+5Z
9z5R9z///LN6pJ9++mmMy0eNGqUuP3bs2NPfcv/+/bCwsPf+yYIFCx4+fJgg
d5kQQuIB697e2qbu1cv68KHcvevEa9ekb18ZPlz++EPPjjdJ9Ux+8IEemf/R
RzJunIlmzapnwadOLWnTGvf55/Ua+OrnFC1K47Zu3YAlS5aY/Rnls3UPjvEG
6x4Z3K4EK7X1V5BenDgPPm/gEPFqayDBkfnI8RxwuX7w4MCb+yB9qu5HjhwZ
43LHYPvjx48//S3Tp09XX/rwww9/+eWXO3fuqP8OGzZMXaIuT5C7TAgh8YB1
b29tU/d//inff6+3ZZ84MaZjxkhoqAwdqjNfvfom+eiRHDumhwf06SPvv2+i
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
QICv1H3Tpur/hc29lQTeEU/V/SuveGbYfGyeO6fXzFc3oSo7vmHuEa9flx07
ZP16vWyCeS5bptfiK1hQD/DwoEWLxl33Xl8cD1lVb8WKFWZ/jrHuWfese9Y9
696DqLo/84a4kHVPCPFBLFH3t27dKF8+S7ly6du2Td+jh3Pffjttrlyse49p
v7o/e1bPu//lF/2gDAyqx/3qK736XIECUqmSiZYsqWfBq7p3bHzvEdX7rXJl
efZZVyZLZmEDA/3mz59v9ueYz9b98CGCCNY9OEC9y2RIcIh4yAbjgnUP7q0G
bgwHDlDPexgSqfvspwQRPBgF7tFgxbo/nU1cyLonhPgglqj7mzev58snDRrI
sGF6kTGn9uqll2Vj3XtK+9X9+fN66PiCBaYvhRebPXroM+AVK0qbNpCtWknN
mrEaEiJ+fnqZfXU1T9mypR7t/9xzcQS+dc2Txy8sLMzszzGfrXtwYTqw7sFl
ysDt/Oothay61rjgA287ExLckw48JuP3CyRS9wE/CyKY55U2Qlqx7k9lFxey
7gkhPogl6v7Wretlysjy5XLxot46zanffSc+sqoe696Yv/+u3yFm72HnQvUA
O3bUg+dv3oRUvwVffeXK99+Xdu08XPfq/ZAli16H35aWKcP97ln3rHvWPeve
enV/Mqe4sG9L1j0hxOewSt2XLSvr1umZy7G1265d4iM74iXCuo+KkocPYz3w
4o6XLulV9Uyt+6tX9ZNWo4bXLFJEmjeX6dP1bnqI69frBQ9Hj47VLl2kWTO9
372nbNhQqlTRq89lz25PK1Zk3du27r07Mr/6N5AVNxkXnMH97ueQeY5AggPU
y2yHROo+8Jgg1l4B6YM74p3IJS5k3RNCfBDWveVMhHX/6JFcuaLb3LAHD8pL
L5lb91FRcuuWfgt5y9mzJW9e/TCRAQCvvSavvipp0uix97FZurSefe/ZVfWK
F9dHJ+xqnTrcEc9EwYXpwLoHIxc8d18/ArLUTuM2mwcJzrsvsgfSi8+bEqn7
AgcFEdxQDzyaZMW6/3ducSHrnhDig7DuLWdiq3tVzSrtly+XiAjjzpun14Iz
te697ubN+pR6xYr6PLhhQ0OlXDl9Gr16dSeqr1ao4K7ly+tmL1hQ/+L4uLVr
B0RERJj9Oca6Z92z7ln3rHsPour+uL+4sA/rnhDie7DuLWdiq/vISNm0SZ55
RnLlMm6OHJIqld6S3t4vn0cGD5w/L59+6tx+/eSdd6RFC7ds3FiflM+aVXLn
9nVDQ4O437159v9UEMG6bxAO2WcMJFipSKmB8+7BJffBVevBWy+8FxKp+3yH
BBHcZAE8OGDFuv85QFzIuvcU7xE74u23FTEL1r3lTGx1/+iRbNyol4z717+M
O3KkvPCC/ev+wQO5dw/y/n39W6Ce8BEjnFihgtSqpWfKq3KP0xo1JChIXnxR
D/X3iOo9YFFLlOC5exNt/5kgerfuwTsPLpJWY7VxwQ3rwXP34I7z4PNWdDck
UvdBRwURXI3QB1fVOxYoLmTdewrLvTdInPA1tTGse8uZ2OpeFeu33+oToMjN
JcCa+bYxKkr/Igwb5sQUKaRUKZ3t6uWL0/Ll9UT+JEk8tq9c8uRWNU8e/4UL
F5r9Oca6Z92z7ln3rHsPour+SB5xYZ9WrHvPYLn3BokTvqY2hnVvOVn31jUy
El1+UHn0qHzxhd6AfsCAmCHz3HP69L167erWjdtq1aRYMfHzk4AAD5g9u6RM
KcmS6TkaljMoiHVvouDq62Ddg2Pje46HBAdal99qXHBOQavZkNlPQYLHFkr8
AInUfcEDgghuFgC+2y33176q+8N5xYWse0/x5HvD6/+fQhGdvqbEZrDuLSfr
3rqq5+r4cdmwATI8XIf5iy9Kjx4yZMg/VHUfGir16kn9+m6pXuXq1fVPwy1V
Sq/knzSpDnzLGRjoFxYWZvbnGOuedc+6Z92z7j2IqvtD+cSFrHtPwbq3jU5f
U2IzWPeWk3VvXVWYt2qld6xr3dq4b7+t3+rdu+v3/LFj/3D2bJk4USZMcNfx
42XcOON+/LF07SpvvaVVb5gcOSRjRsmSxXqWKxe4bNkysz/HfLbu3x8piGDd
h2yAbPcFZLU1kMj6bC3nQIKZmesEJLjgf/BmSKTukQMySvCBg79rlvtrX9X9
wQLiwt6sew/BureNTl9TYjNY95aTdZ/Aqrt0966+hzdvoo4dq89xZ84sdeoY
t0YNKVRIPvlEDwO4cOEf7twpX30lM2YkkBMnSq9eeps/ZYMGEhiox+f7+VnP
KlW4Zr6JdpoqiGDdV/4WsstkSLDukeMSvcZBNl0A+eY+yKprIcHp50jdB/ws
iOCi9+BQE8v9ta8+tw8UFBey7j0F6942On1Nic1g3VtO1n0Ce/68XtK/YUN3
d5pzoUp7VcHjx+sX0bA//qiXx8+ZU4KDJSTkH5Yrp38LVPsngAULSp48ejfD
ihW1FSpI0aL61osUsZ516nDNfBNl3bPuWfesezNQdb+/kLiQde8pWPe20elr
SmwG695y2rXuX35Zrxd35w66Z5zHPXxYh3lAgBQujJo9uzRvLqtW6SfNsOpF
mTtXL2H30kuSLp2kTasnvCe8zz+v70OKFFK8uOWtXz9gyZIlZn+O+Wzd95gg
iGDdg1Owx/SBBCsVuefgGG9wyX3waS+yBxIcHo/Ufekdggju0QBqub/2Vd3v
LSwu7P0O694zsO5to9PXlNgM1r3ltGXdq1c2aVK9Ltzo0TJmTOKyZ08d5mvX
yrZtqG3aaEeN0nlu2DlzZPp0+egjfQa/Xj39tldPfmCgF/Tzk2zZ7GBwcCBH
5psnmOegTRZCgtP2wTPgZbYbF5w4/84syJwnIcE1/QrvhUTqHrxpcKyID9b9
niLiQta9p2Dd20anrymxGax7y5kwdV+rlgwcKL//rk+mu/avv/TJaPzcfaZM
ehL34MGJTtXjefPK3r16aAFo3776hRsyBFrL7kkbNNCD5HPl8syudvFVvehv
vKFfOKtbpkzg8uXLzf4cY92z7ln3rHvWvQdRdb+7qLiQde8pWPe20elrSmwG
695yJkzdBwfrhdCXL5fVq+NwxQq9droKTOTmHj3ShwhGjJDhwxOd776rM3bn
TjlwAFU9Vyo31MvXvLlnzJlTUqXSO7YnT+4d1U17fT87j+yIN3/+fLM/x3y4
7kGguu88BRJcNABcwzzLeeOCxyXG9oYEI7fKOkjwkA7yZs3/kyAix3OU4G+a
5f7aV3X/Y3FxYS/WvYdg3dtGp68psRmse8uZYOfumzSRmTNl1qw4VNfp1w+t
e/WqHTok06bJpEmJzj59JF8+Hebffou6aJEeEeFY+l49w7hZsug97r1ex1aX
dW+qYHGAdf9WGOS7n0MOGQ6Z+TfjgrvCjesFCc67B9crANccQN6seY4IIvjA
wd80y/21r+r+hxLiQta9p2Dd20anr+nTPH78+MiRI7NmzRo5cuSAAQM++eST
uXPnbtu2LTIyMrZvuXbt2pQpUzZv3vz0l3755ZdFixaNGzdO/ajx48erfx8+
fNjFrW/YsGHy5Mm3b9929ab0EE5v69atW+udceXKlejrXL58WX0EzZw5c8aM
GcuXLz937lwC3Fs3Yd1bzoSpe5Xt3bvr1eRatYrD5s0lNFSfRAZv8cED/fom
Qvfvl7Zt9ZrwlSqhqh9SqpR+o+bPr4+H4GbNqvfXo6Bly3JkvomCxcG6Z92z
7ln3TlF/Wn9fUlzIuvcUrHvb6PQ1jYHqdBX17zljxIgRFy9efPpbHjx4oL6k
rjB79uwnL4+KioqIiHD6o8LDwx8/fvz0j9qzZ4/jClevXjXyZo0Psd3W/v37
nd7nAwcOOK6wbdu2jh07Pvml9u3bf/PNN2bfYTdh3VvOhKn7bdtk6lT54IO4
HTxYWrb0QN2DqjeAus/ffed5Fy7U09tVSntqd3XHdPUsWfST5pHGp6CVKweu
WLHC7M8x1r1RoLqvsxyy278ghw+BTHfNuODI/PE9IStuggT3MWwxFxJ5sxba
L4jgForgb5oV635HaXFhr9ase8/AureNTl/TJ7l3717//v0dxfr111+rnr10
6dKJEydUunbu3FldqL4a4wz+lStXxo4d6/iWGHX/yy+/OC6fOXPm8ePHL168
qC5R13FcuHHjxievHBUVtXXrVsetmF33rm9L/U2oLvzoo48W/ZPff/9dffW3
335zpP24ceN27dq1f//+KVOmOH6OenTm3Wf3Yd1bzoSp+4cP9WZwcS6pp1Qv
yurV6Kp6uMWKyauvajNk8LCvvCIvvKCnt6dO7RlTptTT1dVPLl5cSpak3rdB
A+6IZ6JgcYB1X2slJLgxHLjpfL5Dxi3+I+SofpDFdkGW2wbZeBEk8mYF6x48
JgP+plmx7reXERey7j0F6942On1Nn2TevHnqS506dfr5559jfOnChQvqcvXV
H374IfrCTZs2denSJfoUdoy6X7x4sbpw2LBhqqafvNwxNmDMmDHRl1y+fFn9
zyfPhptX93HelqPWVf47/Xb1yaO+2qtXr+ijHI8fPx44cKC6cOHChSbd53jB
ujfP27fl7Fk5c8bDquehXj1p1877D9ChR3bEi5eXLsm5czHNmVMPescHz0db
vrxejr5AAc+bN6++t4GBUrGiVK6c0KqHpnq2aFF9PIQ6rFcvICIiwuzPMda9
UVj3rHvWPeveCepv7O/KigtZ956CdW8bnb6m0dy7d89xOnvVqlVO3wnz58/v
2LFjWFhY9CXt27dX11e1/vXXXz9d9zNmzFAXTp48OcbPOXr0qPrMGTduXPTg
/NWrVzuOKmzevNlxZtxY3Z84cULdE6dj/qOJ87YcoxdOnTrl9NsXLVrUr18/
9d8nL1yyZIn6lilTphi4zx6HdW+S6m4cOaL3LBs50sP26CFlysg773j/Mf7H
S3W/aJFe7G7ixH/4wgv6PXDxosc8fFjvLP/555536lQZNkzefttjK+fHS3W7
BQvq14tGGxoaxP3uzRMsDrDuG4RDNv8asud4yOynjAsG8odDIcFjC+CiAeBi
C8ibtcgeQQQ3CwB/06xY91vLiwt7su49BOveNjp9TaPZvXu36/Pm9/7Lk5eo
rt+1a5eq6bVr1z5d91u3bnXMSVfx63TCfjRbtmxRVe5Yts4xQsBY3X/yySfq
e2fNmhVjtID7t3X79m3Hk7Bu3bpJkyaNGDFi5syZ+/btc327jtEIS5cuNXCf
PQ7r3iTv3pWOHaVbN725OfjXaQzbt9cnqX2z7h89kuPH9VZ9AwbEfFqef16/
+urOPHzoGceP10919+7/2/jeU6o7r94YTZt6x0aNJGNGSZ+e/s9ixQLCw8PN
/hxj3RsF+sAEQ+/t+ZBg3fsfN27Z7yAHfwQJLi4HzrsHF1tA3qzglnah6yHB
3zQr1v2WCuJC1r2nYN3bRqevaTSOk9o9evQw8CZZs2bN03V/9+7d0aNHRw+A
79+//5w5c3bv3n3r1i0XPwo5d3/+/HnHTAE390J6+rZ+/vnn95wxa9as2H5I
9EGM2E73JzCse5NUd1XRuLFOORX4HvS99/TIat+s+7t3ZflyPXVddXffvv9Q
1b0Kfw+++qVL6/XW1H8bNrSVder8/fueJMk/9GX8/PyeHGZmEqx7o7DuWfes
e9a9E1Tdbw4WF7LuPQXr3jY6fU2jUUXsGGb/5IXHjh1TYfvVf/nyv8ybN+/p
73Va94qHDx8uWrSoR48eT5Zyhw4dVq9eHdvpdaTu//PECAR3llR6+rY2bNjg
+PbFixefPn367Nmz6iE7LnlywYFo9u3b55ieEGOsvhd58k9cb9+XWLFi3d+4
IenSyZQpsmGDbN7sSWfOlGrV9B5tXn+MDhOy7u/ckaVL9XT4hQv1E/uk6dPr
OQsffSQff+wZ/fz06IsJE/READNUD2HSpL83vlf/TTDVzeXKJTly6Ln/DtW/
M2XSge/1fee9ZVCQfwIshMK6NwpU9+Di7e2+gOwzBjLoqHHBme/gjnhg3YN5
3mgxJPJmLfm9IHrxuMSH1qz7jRXFhT3bsO49A+veHsY4Gf30Cx0eHq4u79u3
75MXbt68OcY3qiJ++ntjq3sHjx8/PnnypPqdHTNmjEp7x8/57LPPnF45zro/
evToLpc41rhTxDnv8unbunz5sqr46M3vHEyePFldbfTo0TG+fevWrY60nzRp
0qNHj1zfVoLBujfJmzd1NP30kx5M7tmfnDBr5rtvAtd9eLg0aSKXL8f8UsaM
ei36VKk85osv6iMJ586Z9VgiI/VLWb26hIZKjRoJatWqEhLyPytV0mv9qch9
7jkfNV8+1r2JgsXBumfds+5Z905Rf7d/W1lcyLr3FKx72+j0NY1m06ZNjij+
66+/oi+8dOnSjv9n6dKl8ap7FfV37tyJcc3r16+rrnfckGPyewzirPuhQ4c6
HTzvFNdT5t0cJ7B37973npqz4Hg2FJ9//vnDhw9d/4SEhHVvkqx7M3RR9yNH
enh9g2zZZPhw+fpr+eYbU1yxQo80aNtW3n/fw/d88GAZOFD6949VdYtPTmro
3VtP9HjjDX1O39TF69RTmiHD3xsXJipLluSa+SYKFgf469B0AeTAjyH7joYs
utu44BBx8IGDq+qB0wrAx468WZGXTFlqJyT4m2bFut8QIi5k3XsK1r1tdPqa
RvPbb785cnXXrl1O3wmnTp1yv+7VT2vfvr268u3bt2NcOSoqqk+fPur627Zt
e/pHxVncq1evnusSxw9XjBo16v79+7H9HKe3df369bNnz6r/Pnm1n3766cm6
V/ffMYtBER4e7mIFP6/AujdJX6t7FYb37pnu1asSFqZXM3i67h8+1O1/+7bH
LFNGLy/fvr1eAc8MO3eWwoV1ic+frxcT8KDqB86aJV9+6a5ffCGjR+uN4cqX
l+Bgs6xQQYoXF3//xGjVqlwz30TB4gDrHpw432MC5KARkEgngn3d/1NI8BQ2
OP0cPDiAvFnBLe0Cj0GCv2lWrPt1oeLCHqx7D8G6t41OX9Mn+fjjj9WXunbt
euLEiae/evjwYffr/vHjx7169VIXbty4McaV1Zd69uypvnTo0KGnfxQ47/63
335T91/9BPVY7t696/rKT9/W+PHj1SVTp0598mqO0/TRKxLMnTv3vf8uo+f0
6ITXYd2bpO/UvcpqVfcvv2zK5nExnDJFOnSQ2rXljz9i3o2oKP3Se9A1a2Ts
WD0kYNQoUxwxQq+OqDJf3Yp6XJ5ywgQ90r5gwfht+K6u/9prkjWrib7+uqRN
K4GBehaAurlEZc2aPHdvomBxsO5Z96x71r1TVN2vrSouZN17Cta9bXT6mj7J
2bNnHcGrAnn79u2XL1/+z39jXCXzkiVLHF9yf2T+rFmzHCe4ly9ffuPGDceF
KqUd09i7dOnidEA7Uvcq5wcPHqy+fdiwYU+PGXDntlatWuW4z9EL4Kt/dO7c
WV2ydetW9T+PHDniuMKOHTsi/4l6ogzcZ4/DujdJn6r7TZv0smwDB5pu375S
r56eOf503XvcCxdk7lyZMcMsVYmHhuoz+B995MmDBsOG6QHwKVN6f5u5GKZL
pxfuCwrSiyKqX9VEZe3aAe4srArCujcKVPfgfveNF0F2mQxZaL9xwWXnwdX+
wW3fy2+FBBMbebOChzXKbYMEf9OsWPdrqokLWfeegnVvG52+pjE4cOBA9+7d
o+et9+rVy7HHnIMPPvjg8OHDT3+X07q/efPmkzvi9ejRw3E233GI4Pvvv3d6
B5C6d8zoV3cy+mCCa56+rbt37w4aNMhxJ9WdnzZtmuM6Y8aMUf2urjBs2LDY
5vhPnDjRwH32OKx7k/Sduo+KkvPn9e7ww4eb7uDBetJ9zZoJUff378vFi7rx
TfLsWdm2TT+i99/X2yZ6yl69JEsWvSRg9ux/q2L/jTcShRkz6jP4Xr8bTxsc
HLhs2TKzP8dY90aB6r71V5BtvoTsMB0SqfsKWyB7jYPMexgSvPPVv4FE3qzg
kAkvrhjwoTXr/pvq4sIebVn3noF1bxudvqZP8+eff4aFhUWXuKJz584ff/zx
t99+6yjcp1m3bp262ty5c2Nc/ujRo0WLFkX3suOU/ahRo5yO/HfgOJjw5Mp+
7vPNN9+o23L/e53e1pUrV1TUR9/hrl27LliwwPHAHz9+HL3mP+segXX/pImt
7pXqddm4UY8wN9tPPpGWLfWebglQ92YbFaWXERg1SgYN0o3vjuqa/fvrfu/d
O1a7dtW5miGDHgOv9PfX78PEYPbseny+umOJ0NKlWfcmChYH6551z7pn3TtF
1f2qmuJC1r2nYN3bRqevaWyokr127dq5c+cuXryIjzm/e/fu6dOnPfKjXOOp
5evv3bt34cKFBLjDHod1b5I+VffqOb93T786Zvv773q0vNNV9ayoet7Ug7p2
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
ZrVv0IAXLyRJ3bqkvoPPPUfPP29BvLw8Fi1aZPR1TOze0Yjdi92L3Yvd24my
+8mdSYOOYvc6RezeMtg9pnGj/hxSPwoKClJWG+9Hly9fVtvVT/fs2RO7ccuW
LcHBwbFj3PHsfvny5WrjkCFDlE3H3W6bGzB27Fjb/1TfZfU/Q0JCYu8bREdH
9+vXT200Ysb79evX1UvHHZqPa/enTp1SWzp06HD79m3bFvUftpsP58+fj/s8
v/32W+x7F7tPacTurcEff9CxY7R1a7KIjCTbQb91i8f9XYU6jmfP0rJlFB6e
ili+PFHUri5dSkuWJM3QoTwcX6lSsnoLVqzI1fzszvC3AHnzeixdutTo65jb
2n2fkYQA2v2nyyF6jIXw2wBRdofjgL3V2n0FAZaOBz83F/aVA9fdg288YCaE
Ge1+YhfSQOxer4jdWwa7xzQ2Dx48sA1nr1mzxu6ZsHjxYuW5cf9kCggIUI9X
tr5w4cKEdj9r1iy1MTQ0NN7zHD9+XF0wx48fb5ucHxYWpuxY/Rv3MeHh4ep3
p06dmsyz1JYzZ86oPYk75z9h1q5da7uDsXXrVpu2x7X7FStWJNznadOmqY1x
uyc/ffp05MiRtmkJYvcOROzeDbl6lfvZRUXxaPWZMy5j714aNYpeesn1ld+S
iTrrMmfmlnlGkDGjNSlb1jsqKsro65jYvdi92L3Yvdi9jlF2P6EbaSB2r1fE
7i2D3WMam/3799udqR6bB88Sd4vy+n379imb3rBhQ0K737Ztm20FvfJiuwv2
NWIb30/pwskRI0ao35o3b1682QJx8/333y9cuNC2jt42GyHu+50yZYrasnbt
2ri/sm7dOrVx8uTJsVvU3422pQTnz58Xu3cgYvduyI0bXMYtIIAGDED/vEfo
3p3q16ds2WjYMNfQty9lysTCnkzSpeO9zZ2bOwUIyaRaNVl3byDdJhAC+BUG
i953ngwB1qYrdMhxwKp6rq2ZD+o5Uo1Qgdi95ylCAI9a0DQIM9r9+BDSoGMH
sXt9InZvGewe09jYBrW7du3qwEmyfv36hHZ///79MWPGxE6A79OnzzfffLN/
/36NEvS2xN4W+Pnnn1O0G7/88otttvzixYuT8/iEY/e2uwpqBxLuT+zS+7Nn
z6p969Kli/rFCxcuiN07ELF7N+T2bXbbLFn4Y8yZ02Vkzcpy7ePDRQOcz4UL
dOAApUlDadNyRbvk8Pzz/IkVLqxP5T03oW5dr7izrQyK29r9wC8JAbR70BP7
joAAZw4UOeg4DcMgGi+FqLcCos4qCOSuiAKx+7zHCAHsY9h8IYQZ7X5cd9JA
7F6viN1bBrvHNDbKiG3T7ONuPHHixLx58+Y+y5xnsVuqyK7dqzx+/DgsLKxr
165x17l36NBh7dq1iQ2vHzx40DbhP95c/WQmdgZCcv60S2j3tuL/u3fvTvic
gwcP/vvZBIb+/fur/7l37171P8XuHYvYvRvy8CFt304TJtCkSTR5sssYNYra
taNcuVw2eSAkhFvaNW2a3E6Cfn5UtSr5+nI9fCuh3pf6ghcoQPnz60+NGt4r
V640+jomdi92L3Yvdi92r2OU3Y/pSRqI3esVsXtr0P7fSXigIyIi1PaePXvG
3bh169Z4v6iMOOHvJmb3tkRHR589e1Z9Z8eOHavU3vY8M2fOTPjIbdu22dR+
ypQpT548sftsx48f36cZW0U+lST7HSe0e9tq+riVA1WU7Ld/1hBQ/bet5v+s
WbNsPxK7dyxi94KrUMdx1SoePc+SxTVkzMjfzYULucxgchg/njp0oBYtrEaz
ZjwhwdOTPDz0x9dX+t0bCOJKzwLZPVj0Hpzq3GUSBDK9vNpGCPDmQJldEOBR
Axe/IydriX2EUG47BPhNM6Pdj+5FGgSJ3esUsXvLYPeYxmbLli02Kb5161bs
xmvXru38/9gqziXf7pXU37t3L94j//zzT+X1theK10Te9vwqX3311ePHjxM7
IW0t6pKZgwcPJvY8f9uz+xkzZrSP063Plk2bNrV/tsr++PHjtqdVW3Y/i20B
fufOndV/HzlyROO1nBaxe+OsUOzeAjx9Sr//Tjt20J49rmHzZqpXjz7/nKcQ
xKNtW2rdOj5NmlDt2lSzptXw9+flCWnSGEKRIp4yM984eo0mBNDuW82H6D4O
AhyDRgwXGfdXdJwKAa67//xriJJ7IRBB9j5BCFW/gwDvyZjR7kf1Jg3E7vWK
2L1lsHtMY3PlyhWbuu7bt8/umfDzzz8n3+7VswUEBKgH3717N96DY2JievTo
oR6/ffv22C22dQEqERERGjXx/n5WH2CBZmxPrjJ69OiHDx9qPFVCu1+yZIlt
H+I+zDarYc6cObYF+IllyJAhGq/ltFjJ7gsXpuPH6fFjNjKXc+sW5cghdu++
xMTQgwd07x7KtWvUsSO3m1fOHpdatahaNe5VV6mS9alYkcqXpxdeMKojXr58
nkY0VI0XsXuxe7F7sXuxex2j7H5EX9JA7F6viN1bBrvHNG6GDx+uftSpU6cz
Z84k/OnRo0eTb/fR0dEhISEJx8FtP+rWrZv6Uexgt1Ly9s/K6MX6vsO5cuWK
2n/1bOq93L9/X/vBCe3e5u8DBw6M+7ABAwaojVu3bj137tzSf8c21h8UFKT+
e+PGjeDO6xLL2P3u3VwDbds2FuojR1yP2p+sWenwYbF7c/D4Mav0X3/pxo0b
NGcOffklDRoE0b8/L7qvX/9f1KvHdp8xI737rruQLh0XDDQILy/pd28g2kWt
kwS0e7D2O9gRr+liiNK7HQesGx84HQLs7FZxK4QLa+bnOU4I4Mz82lEQZrT7
4f1Ig6BAsXt9InZvGewe07i5ePGiTXiVIO/YseP69et/P5Nxpczh4eG2HyV/
Zv68efNsg9qrVq26ffu2baNS6dDQULUxODjYNv3+2LFjtoft3Lnz6b+j3bk+
YZTO20x8yJAhCecMJExCu3/w4EGXLl3axymst2vXLvU/Q0JC7Jb6l3X3jiWZ
dp8rF7dH/+67VMGqVbxoWuw+dRIdzfMrlNHH8scf9Msvepa7P32aevWihg3p
008NoW5devNNHs5+8UV3Qb1Zg/D2Frs3EO0/v5MEtHuwJx048aDuSghEkMF1
92ArQPCNxza+d4yaayAQuwenTOQ7CgHWKzCj3Q/rTxqI3esVsXvLYPeYxsuh
Q4dsemuLslpbjzlbBg0adPTo0YS/Zdfu79y5E7cjXteuXW2j+bZbBLH6rEw8
sbnukyZNStG5alvRr3Yy9maCdhLavcqqVatsEwkmP4utyl9iqxXE7h1Lcuz+
3DluTe7n5/oFwrHLhNOlE7tPpSj73rWLVq/+hwoVuEd8zpyUN68+eHjwCaCe
U52WuhMSQp07U6FCXNshe3YBpWJF76ioKKOvY2L3Yvdi92L3Yvc6Rtn9lwNJ
A7F7vSJ2bxnsHtOEuXHjxtKlS2NNXKVjx47Dhw/ftGnT06dP7f7Kt99+qx62
YMGCeNufPHkSFhZmayFnS3Bw8OjRo2Nn/kdHR8dW0cftft26deq14lYF1I7t
xkW8x8fExKxdu1a9Zds+BAUFaXRWunTpknpM3759U7SfhsYydn/5Mk2cyAOa
DRqkCurU4enELrT7O3fo5k0ekhYSotR++XKeOR+L0uS0aemdd+iDD/QhQwZ6
/XU2R6XhRhAUxI3aPT35BoIAUq2a1Mw3kOmBhADafcBMiP7DIHqOgUBMDewK
B9q977cQYB/DSlsgELvPeZYQwIoBbtgRb8gg0iBQ7F6niN1bBrvHNLEo7755
86ay16tXr6Z0hnzC3L9///z587o8lXY0iu2nKGo/f/3118uXLz948ECXJ3Ra
LGP3tkJ2V6+mFs6cYbNzVVU99aILF/Ki7wEDhPj068ftFdQZ1abNP6RJQ2XK
cLU6vW7v1KtHJUpwf3b1WgaRJw95eQk64Ocndm8gE7sSAmj3YF27r9pBgI6M
tD4HG6+HjIeosRaiwwyI8tsgXGj3YC+/PiMhzGj3g78gDcTu9YrYvWWwe0wl
Fotl7D614dqOePfu0ejRPH+7SxchPp06UaZM5O39rzp1yu7VOaaUXK918Urw
S5Wi/Pl5eF1I5fj6eovdG4fYvdi92L3YvRFR1+1BQ0gDsXu9InZvGeweU4nF
InZvPbuPjubOgBUrUu/evFpBiMf48by+PmNGKlr0H3LlYvSd750jB2XLJpiA
SpVk7N5AEFd6FsjuwdZs2u6QJLnOQAwd4DjgzHxwRQNY9P7T5RDgvQXkZEXa
HCjAhfPgN810f+2r6/bAL0mDwCCxe30idm8Z7B5TicUidm89u3/6lNf7lypF
Y8fSihVCfCIjuZS9nx81avQP9epxLcTq1d0d9bGUKUP58tmpE5g7N733njUp
XdprxYoVRl/HxO4djdi92L3Yvdi9nSi7HzCUNBC71yti95bB7jGVWCxi91a1
+8qVuUvgo0eCHS5epEOHuLZeXHbuFGj7dho3ju9+1K37L2rXpvLl6bnnrImn
p8eiRYuMvo6J3TsayO7BxutNlkCA5d26TXCcj3+AAOuzgVXrwZ33Xw+BnKzg
TZWiByDAb5rp/tpXdt9vGGkgdq9XxO4tg91jKrFYxO6tavdVqtCBA67/HFIn
t29zk4UzZ0zP0aO0fj3Nnv2v+v8Is2ZxQf4aNahly3/RvDnPbXj5ZXrlFQuS
L5/0uzcQ0DhAuwdFr2EYBGipyOh51e8gwNFz8KYKuPMuHAEv/BMhiN2nKMru
+44gDTqI3esUsXvLYPeYSiwWsXuDELtPzcTEcHUCC3DxItdOTJOGe/npQtq0
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
9U6dnvviixd1p1+/Fz08aMMGsfsU2L2rOH2aunenwEC4Fpal6d8/xfc02rSh
5s2padN/Ub8+Va/O3Q9BKlXiGoyenrzu3g3x9RW7F7sXuxe7F7s3n923WEAa
tOssdu+ybNu2LSgoqH2CBAYGKuWPjo529Q5CiYmJiYyMTPjuVCIiIsz+7iRm
j1527+ubbckSOnWKHjzQn99/50nIMjNfm1Ri94rvvuNC7qGhgp4EB3Nzulat
DKFZM8qfn9fdq5PWDalSRezeQMCucKDdg1Xrx/aA6DQFYn4rx9npAwG2tCv2
I8QJbwjkrgh4Y6TpYoj8RyC8T0CY0e61q0+I3bsqW7Zssalu//79t2/ffu7c
uatXrx44cGDs2LG27Wqjq/cRyunTp21vZPbs2adOnVLvTm2ZP3++bePmzZtd
vYMSt46Odr90KaulklnduXWLZ3qL3WuTeuz+3Dn66Seu6SckZMsWWrmSwsNT
xsSJ3ATQ15eH742gUSMu0PfOO25K8eJeERERel1UE4tr7X7Xjb9dxeAvCAG0
+29aQoCSu6AFxKYqjrPeH2JWe4gdZSGWNYL4sRgEUlXvfHZCWFUHAqxgaUa7
b7aINBC7d0l+//33jh07qtNp2rRpDx8+jPuj6OjouXPnqh8NGDDA1APcy5cv
V+9iyJAhMTExcbePGjVKbR87dqyrdkwiUdHL7v382O7PnDHEFv/6i6RmfpKk
HrsXNLh6lQ4epJ07U8a4cSyh+fNTkyaG0KABt6d323h4eCxevFivi2piEbsX
uxe7F7sXu9cxyu61ixx+LnbviqxatUqdSyEhIX/99VfCn968eTMwMLBXr15X
r151/r7plVmzZqn3GBoaGm/78ePH1XVg/Pjxpr53ITF74v6JizyP2H08xO6F
hFy7RosWcVW9lBqKEvDcuallS5o71xC+/prL/XXsqEVQEI/yZ8xIOXLoMx9e
Pc8HH/CV5+WXXUzevB5Lly7V66KaWNzW7jtPJgTQ7ue2geg3HCKyPsSeUo6z
tgYEeFtjb0mI8E8gwHsLiN3/mpEQFjeFWNIEwox233gpaSB275IMGjRInUvz
589P7AF//vmnM/fHiGzbtk29x4CAgPDwcFPfppBYMmL3BiF2n5qJieHj8vCh
szl4kIvjpU9P1aqljMKFqVQpGjmSTpwwisOH6ccfaf/+RNmzh9v5FSjAhfqr
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
73TvcMWeO3du69atR48eNWsmElejRg39KowaNcrLbLt375ZXIYBvpx9//PG3
334L1NIAALCR7gEgsh05cuSW/2V3+64Tp0yZ4nnf6Ojobt26lS5devLkySnf
cr/NnTv39ttvT/RohMDyO907XLHTp0+X5T/xxBMGbUSSli5dWrly5SZNmhw6
dMjLbPnz55dXIYDnULz66qv169cP1NIAALCR7gEgrbn55pulz//kk09C3ZCg
iImJKVWq1AcffJACj+V3undo3LhxpPvQio2N1edQBDDdX758OW/evP4N1wAA
gBekewBIawKe7iWt7Nmzx/W/O3bsuHbtWlLzX7p0aevWradOnQpUA1y9+eab
RYsWvX79elIz3Lhx4/Dhw5s3bz569GhcXJyTZcpsx48fl7vs27fP9ZAAt3Qf
FRW1ffv2s2fPGj4F27Bhw/xI90m11ubHGhBXrlyRV1leuAA+wWCQN962bdsC
9e6SJ6u3kZyke1mZ8riyig4ePOh9xY4fP75SpUopcPIIACBNId0DQFrjPd0X
KlQop4d7773XbbYff/wxV65c/fv3f+aZZ7JmzSoLLF269Llz50aPHp09e3b5
b+HChffu3et2r0WLFpUrVy5dunT6eyd//vyTJk0K4CH0ly9fLliw4IQJExK9
dcuWLf369cuTJ4/9xZcjR46JEyd6/hQgsVqe9cqVK+Xvjz76qGzZsvZdihUr
Zs+m033VqlXlmd51112ZM2fW85QsWfLzzz93W6bDFSsqV65cokSJAgUK6AXK
v273WrdunR+t9WkNSPC/5ZZbGjduLH+fPHmyT58+mTJl0ndJnz79zJkz9WwN
GjSQh050hUdFRcmjy61r165N9OXwYtWqVXLHvHnzet6UO3duuembb76xp1Ss
WFGmXLlyZcOGDS1btsyWLZtup6yHTZs2ud739ddf93wJxK5du9we5d133y1T
pkzRokXtM1nkU+N6l9atW7vOf/Xq1SeffNJ1xd50001Nmzb1fBto58+flzU/
e/ZsX9cMAABekO4BIK3xKd3rL4hOnTq5zbZt2zaZrnO9xHw9m+RcfTq//m/3
7t1d73Lffffp6ZKbunTpUq9ePX3Mc5s2bQL11F577TUJoadPn/a8SR/lbqfv
Ro0a5cuXT//3kUcecZu5b9++Ml2SsixQz5MuXbrixYtLcnQ9Y1qne3s9FC5c
WNZAxowZ9fxz5sxxXabDFSskJLrOk2y6d9han9bAwYMHVcIvNhLty5cvr2eT
F1qehfyxevVqPdubb74p/y1QoIBkebclzJ07V24qUaKEH3uov/jiC7mvvJSe
N2XIkEFu+uqrr+wpBQsWlCnPPvusrCh5R1WqVOm2227TDc6dO/elS5fsOd3S
vf4giB9++MHtUaZPn67nsX+x8Z7uu3XrpmeTFS4vR6tWrfSKEi+++GKiz3HE
iBHyQfB1zQAA4AXpHgDSGp+OzJcM4iXdC8k1MTEx77//vv6vzC9p7plnnpG/
b731Vnv+d955R6ZINJsxY4Z90PKGDRv0TwGSTAPy1Bo0aCDBKtGb1q5dK481
fvx4+8Dya9euDRo0SCUMXO82rprOy9WqVZN/y5UrJ23+/fff4xNGwzt8+LA9
m53u5Znae6iPHDlSsWJFlbDfXOZPqqlJrVhXd999t3JwZL7D1vq0BnS6z5o1
qz7WYujQod98840+ykKWaZ92cfXqVT3o3KxZs9xa1bRpU5n+/PPPe298ovxI
9+LOO+/8+eef9UR5e+uJb775ZlKPIsE/qXRv2759u57Hy5H5J06c0PPMnTvX
niifgo8//rhjx45JXRNh8+bNchfPwwYAAPAb6R4A0poApvv06dPrHeXHjh2T
/xYpUkTnPglfeqeznjkqKuqmm26SKRMnTnRbzssvvyzTJQmaPqv4eGmJtEcS
d1IzeGbtK1eu6F3k8+fPd52u87KoXbv2hQsXklqgTveFChU6d+6c6/T169fr
u3sZOS3g6T7Z1sb7sgZ0ute8//by3HPPyTyVK1d2nXjgwAEdz0+ePOm98Yny
I9136NDB7dlJ2FeJHZZgC1S637Nnj55nyZIlyTwxF3FxcfJ5kbXn/C4AAHhH
ugeAtCaA6d7O7xIS5b9VqlTR/5W4pPcI6/9u2bJF/9cze+o5JaD5/3z+tnbt
WlmUxNJk5/z555+XLl06adKkhx9+WGfbF154wXUGnZdlRXm/VpqXMfOLFi0q
N73yyitJ3Tfg6T7Z1rpKdg3Y6d5LOtb0KeTK5XB98dRTTymPUzOc8yPdL1iw
wG1OfVhC165dk3qUQKV7Ua9ePZVwaIo85UWLFl29etXLzDaZuUePHk7mBADA
CdI9AKQ1KZ/uZ8yYob9oMnuwv4PMx9abN2+exCsvo+UfPnx4yJAhhQsXVh7G
jRvnOqfOywMGDPD+iF7SvY57w4cPT+q+AU/3ybY23pc1YKf73377LdnF6ufS
tm1b/d+YmJgCBQrIlDVr1iR730QFJN3rVnXs2DGpRwlgupdF9evXT48joRKG
1OvcufP8+fO9v6vl7dGgQQMvMwAA4BPSPQCkNSmf7vVJ9+KhJAwdOtT8eU2d
OtXLMQBr167NmzevSjhO4OGHH166dOmPP/4ozdanhyea7gcNGuT9Eb2k+8qV
K8tNY8aMSeq+AU/3ybbWpzVgp/tjx455X2x8wnkZksTTpUu3b98++e+SJUtU
wpD1zi+35yaA6d7LGg5gutdkpb300kuNGjXSjVQJwxKuX78+qfknTJhQqVKl
ZBcLAIBDpHsASGtSPt1v2LBBf9EcP348QE8iEbNnz86WLVtSt5YsWVIa0KNH
D2mq6/RgpPvo6Gh9WcB58+YldV8n6b5r164yT7I/fThsrU9rwKd0L+6//367
qR07dlRez0pI1r/+9S/96PbwfbYUTve7d+/W85w5c8Z5+y9cuDBt2jTdsFy5
crmtcNvIkSPr1q3rfLEAAHhHugeAtCbl0/1ff/2lr5ae7EncJlatWiUP4XoF
NJse9E+4nZl+48aNGjVqBDzdv/XWW/rh9u7dm9R9naR7WV3KwRUDnbTW1zXg
a7qXZ5ouXbocOXL88ssv8lpnzZr1/PnzTu6YqF27dulHdxtSftasWXp6iqX7
c+fO6Xk2bdrkpcGJDowvd9H3/f777xO9V//+/Tt37uxlsQAA+IR0DwBpTcqn
ezFp0iT9XfPcc8+57pDdv3+/PITDUci8O3z4sCzfvjKdq7Nnz+pHnz17tj1x
586dNWvW1NNN0r2k2gcffNAeMHD16tX6Mn/eB0xzku7fffddlXBhgg0bNtgT
Y2Ji3PYFO2mtr2vA13Qf//cu+3Llysm/0iSH90qU5G5586iEMfH0SPjylCdM
mGBvsaRYuhdFihRRCefvu75vL168aP/9zjvv5MqVS97hbm/jMWPG6OWfOnUq
0SXLyn/qqae8PDQAAD4h3QNAWhOSdB8bG9u+fXv9dVO4cOEOHTr06tWrRo0a
eiCy119/PRDPLL5ChQojR45M9Ka77rpLJ/GmTZvee++9+jLuWbJkKVu2rGG6
18eK33TTTQ0bNpQ1IItVCee2ex+Pzkm6l7Soo6s8RLNmzXr37t2yZUt5+dwu
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
9CpVqkgX5HZrssdwysf/+PHj0hXs27dPuoVE55Fuavv27TJbYFrsQjaQZMln
zpzxMs/XX38tz65GjRovv/yy/NGrVy8vM1+9enX//v3btm1Ldow4eeLSV0uP
ffDgQSd9oMMNUU1m27Vr1y+//OJkyU4477H1cQ7BSPe+vg3kxZUXwvsXovPX
yyc+pXsn7YxPCFzyBtD54vXXX/ee7n0NWX4j3UekpNK9fPaln5fp1apVc7vL
okWLypUrZx/Dnz9//kmTJrl16XPmzMmZM+eYMWNkW/Gpp54qXbq0njljxowj
RozwzPinT5/u2rWrfbbXbbfdtnDhwkKFCnmme+mXbrnllsaNG8vfss3Zp0+f
TJky6XulT59+5syZrjPLh126Kb2Bqh+9Xr168nnxXA/nzp17+OGH7UXJnDld
9O3b178GbNmypV+/frLZbH92cuTIMXHiRNdNXFnz0sL+/fs/88wzeg3I6pL2
jB49Onv27PLfwoUL7927N/HXD0Dq40e6d9Kvir/++uuNN96oWbOmPaf8Id2a
66+C4t133y1TpkzRokXtIwxlW8W1T2vdurU9s073nTt3Vi4H55coUaJ48eKy
7eGZ7p10a+L222+XB5JoMGHCBFmUnlO6ONm09kwQAEJl8eLF+uO5dOlSJ/PL
ZpV8tFeuXCl/f/TRR2XLlrW7gmLFirnN/NVXX1WtWlUfQSTy5csn2zZu+yxW
rVolC8ybN6/nY+XOnVtucj0o+r333pMpo0aN2r17d/PmzbNkyaKXLF3WihUr
Em3w4MGDZQZ5XNmU0v2VRELP2dauXduoUSP7uUjXKtuiI0eOlA1Utznl7k8+
+aRrH3jTTTc1bdo00SHQnW+Ixidse8+ePbt8+fL2GpM+XDpnCeaus8nmcU4P
8uWS6DId9tiVK1eWdVigQAF9gob867b8devW+deAeGdvA1GxYkVZzpUrVzZs
2NCyZcts2bLp+eU9tmnTJreZnb9efvCe7n1qp5g3b57bl6B8Laok0r2TjQHJ
C9IAeb3cvp3HjRunp1+8eNHhM1UuHN4FqV9S6V68//77uiNy7QFko1TPL5uO
Xbp0kT5Kf1rbtGnjet+3335bJrZr165hw4b6g1ytWjXp/fR95V3tOvPPP/9c
sGBBu3+WHsA+20t5pPuDBw+qhPwrb2npAPU80m3qnwJWr15tz3ns2DH70ySt
rVOnjs7OGTJkeOedd1yXGR0dXatWLd3jDRw4cMCAATpW64+qcD3pzHkD9NFN
WsmSJaUXkvWg//vII4/Ys23btk1/3tXfe8qE/iHd3jLv3r2789cUQGj5mu4d
9qvS5xQuXFjPKd2pzFalShXp0OS/0mW5DoI0ffp0vblln0ibbLqfNm2a+vvg
/M2bN8vfjz76qCR09b/p3mG3JnSvLptb+ntENmP0CABCNo28H8cFIMWMGTNG
f5wd7ibu27evzC+5Xh9drBKClWxuScapX7++65zjx4+3+6s777zT3iSrVKnS
H3/8Yc/2xRdfqIRhSD0fS/dvkg3tKXrzUnpC3bnJH/ZGozRjzpw5bkuQWKR7
Hh27SpUqJX9LgHKbTSKwzmjSoXXr1k3yl3RZet9N3rx53Q6Rkhn0E5HnK2uj
VatWegtQvPjii65zOt8QjU/YtS0L1DNLly7bpfLU9BqQrVPXn3DdwrW+S6dO
nTxXoPMeW+K/69J8SvdeGhDv+G0Q//e3xrPPPiuPLl+CMoP+BhG5c+d2/VnY
p9fLD97TvfN2ihEjRuib5KWvWbNmgQIF7FfEM9073BiQTQu927Rly5b2x1be
4frd4vn29kK5cH4vpHJe0r193uWvv/6qp0hfpDulGTNm2G+nDRs26BAqXb19
X939iixZsrz++uv6QJTz58/L51p/GF0fqEWLFiphuH77d9fTp09LL6GXkGi6
l8+I/mlr6NChsiGtf9Q6fPiw6y+BHTp00I+1Zs0aPeXChQvyAZGJ0if88ssv
9px6CBH5LB84cEBP2bt3r3St8kx37NjhtlqcN2Dt2rWyZqRbs4/Yl1sHDRqk
ErZ1Dx06pCfqdC+kg5IVpX9UEdIhxMbGPvPMM/L3rbfemuRLCCCVsdO9bOlN
+1/y5a7+N90771dF06ZNmzVrJn2L/Uu+JHG9U2bgwIGeLdm+fbtuSbJH5n/9
9ddly5bVB+ePHDlSJQwRrDfDXNO9w24t/u/tHzF48GD70SdPnqwnvvXWWz6t
UgBBoodaateuncP5dbqvVq2a/CsbQtJx6RMqpetw3cUsWUMHk969e9tXD1m4
cKHe0fPggw/ac/qR7vV2kXRHeuKRI0f0OfXFihVz++VQtgBlunRHunfVlwLp
0aOH2wM99NBDKmHHiutu/d9+++2BBx6YPXu265wnTpzQDZg7d649UbbWPv74
444dO7rlSucbokL6cN2Rjhkzxt6YlO1heYFatWrl5bonOj8mGq6d99g2/Y3g
05H5Xhrg/G0Q7/KtIWHh559/1hMlYuuJb775pj2n89fLP07SvZN2rl+/Xu+F
l5Vjp355q+hvbbd079PGwJYtW/SvGS+//HJ8wvEk+tf4RLcEvCDdRyQv6d6+
Se+PjoqK0h/GiRMnus2pT2WSzU57iu5+JQK79snxCcdf6WWeO3dOT5GeR0/5
4IMP3Barfw9MNN1rbm91V/bW9YIFC1yny/u/SJEiblvX+reyYcOGuc6pu9mx
Y8e6LdlhAzTP/VPSuennNX/+fD1Fp3vp/fTRRMeOHZP/SiN13y4rUCX8iOr9
gQCkHnb/kxS7//GpX41PrEsRzz//vMxZvnx5z5ucp3vZ+NR7WL788kuJ+SVL
lpSb9LD5bsf+OenW4v/e/vF8Xs2bN/fcqgEQKjVq1HDbBJLA8poL2aJznV+n
e1G7dm3JqkkttlmzZjJP5cqV3WLp1KlT9d3t/Sl+pPtChQrZm5GaxCi9WLeN
RsmPyuUipHqbKnv27G6XK9W74+vUqZPsefF79uzRD7RkyRLvc/q0ISopWM/8
3HPPeS7K+2EVXsJ1vOMe2xbYdO/8bRD/97dGhw4d3Nqs9wy6Hmzg/PXyj5N0
76SdTZo0kSmSu92G89KDm7l+D/q6MSBeeuklHbX27t375JNPqoTjjX09bsF1
y8SnOyI185Luf/vtN32T/nV0y5YtKuG3Ps/O/IcfflAJP43aU3T3W6FCBbc5
dXQVu3fv1lP0m1M6Os+fJRMdM98O127HFLl55ZVXZJ7ixYt7don6bJdy5crZ
U7p37y5T7rnnHtfZ9FmoQ4cOdbu7wwa4ke/KpUuXTpo06eGHH9ad6gsvvKBv
0unezu/S66qEwW30f/W6ldXu/LEAhJa9UScblkP/l/513d6o86lfdfXXX3/J
1uzMmTNHjhzZuHFjlcRvgD6l+19++UUlXCpF/h0zZkx8Eune5qVbi/97+8dt
s1ZIm1XCwVpJtQdAStLp3nVrRz62rtv8uXPndp1fp3uJP4nu+bXpPmHWrFlu
069du6ZPfrSjkx/p3nPzUhQtWlRuktxkT7l+/bo+EN0+NFSm6BGb3bomaYPe
xVy6dOlx48bt27fPy1OrV6+eStjHKluPixYtSvQs/ngfN0T1aQ758+f3aVRn
zXu6t3nvsW2BTffO3wbxSX9r6IMNunbtak/x6fXyg5N0n2w75XXXy3H7fSw+
sTHz/dgYkOW3bt1aJZzULGtDPkESKHx9pqT7iOQl3dsbqPp0zhkzZuj/ZvZg
vzHsg0WT6n4vXbqk57SPeL///vvlvy1atPBsm/d0/9tvv3l5XgMGDJB5WrVq
5XnTp59+qhL2ldsdsv4NLUuWLPZPwadOndJHvLz33ntud3fYAO3w4cNDhgyx
T5V1Jd2Rnod0D0QY5+fd+9SvavPnz+/cubM9Bqn3r2af0r38XbduXT2/3lhK
NN076dbik97++fLLL/XMzof9ARA8PXr0kM9j+/bt7SmyQTg+gcRAlUS6l60s
L8u0dw99//33nrfqkYVGjRql/xuodK9D92OPPWZPsY8XlRDU+W85cuRQCedC
ut1dtjZLlixp92YVK1Z8+umn3Yaz02RTtl+/fvYYcTfddJMsVnpmt77apw1R
vVYTnTlZ3tO9wx7bFsB079PbID7pbw29/I4dO7pOdP56+cG/dO/WziNHjui2
eV5T0jPd+7ExEJ9w4oZuqpg0aZIfz9T1/eDH3ZE6eUn3b7zxhko45EP/6qjP
BxEPJcH1h99k072EVj2lT58+KokTvryn+2PHjnl5XvpHg0T7SVmgShh9xT58
5fz582XKlJGJBQoUkM/m448/rsdgKV++/F9//eV2d4cNiE846SBv3rwq4Qc3
+YpcunSprGQJ702bNlWkeyByOU/3PvWrUVFRvXv31tuETZo0kc0D2WY4ceKE
fX6TZ0t8Tfe6269Ro4a+yTPdO+zW4pPe/lmyZIlK2O3FtT6B1EAP75PoqHq6
A0k03dvHuifKzjUbN270vFVfjGPkyJH6v4FK9/pKT6NHj7an6H2picqWLZvn
Bl5MTMyKFSvkXnYWlq0v6YcTvdKfbA2+9NJLjRo10o1UCfuR169fb8/g04ao
PkXU9TcW57yfd++wx7YFMN379DaITy41ey7fp9fLJybp3m7nr7/+qlu1ZcsW
tzk9071PGwO2VatW2aPrywfZj2fq+qHw4+5InZJK9/KR0b+JScelp8hmpJ7T
yaUqnad76YeVS5h1ZZLu9dhN0tM6uSk6OlqP7OdKPp6J/gboPN3rFdijRw+3
07tI90Bkc57ufepXP/zwQ5VwZQ17gCZt3bp1SX017969W9/k5XrQrun+9OnT
LVu2tEcU8Uz3Dru1+KS3fyZNmqQSzkNM9vkCSAH2cfieF3TzO93Hxsbqk4g9
hyeS5KWjk33Tv/71L90Az1/8nKd72WrVO+XnzZtnT9Fjl7344ovbXGzatEkf
+/Txxx8n1f64uDiZrWvXrrphzz//vJcne+HChWnTpukeT/pnu2/0aUP0hRde
kClFixb14wL3XtK98x7bpp91olnS1wb49DaI9z3d23x6vZwISLqX97M+wMNz
iAbPdO/TxoAmX816BH49DrnEfPkoObyvzTX4+HpfpFqJpnv5mOjfcoV9mdG/
/vpLH6zu5Hxz5+leb68K+RJxnfPcuXP6ahf+pft///vfiX5bSZDXfZ3rNeb0
gBXDhw+XDWDZxJWn7OVymQ4bYI8w4HZimnRo+hw30j0QqZyne5/6Vb0fyvOa
wvogz0S/mqUj1TclehFezTXdu3FL9867tfgktn+kBy5RooRKbMxqACEhn1/Z
WpNPZa1atdx2Z/ud7kWDBg1Uwsh7btP1yBuum527du3SU+QP1zlnzZqlpztJ
9/auz7179+op+keDRE9kbt++vdzUuXNne0pSY5Hp8e3d9r8nOrM9LJ59FLpP
G6L2SQSuI67bvI8dl1T49anHtsmXkfK4BJt3XtK387dBvC/p3qfXyw8BSffx
f/+64nZOgXjqqafU/6Z7nzYG4hOSmt4v2bRpU/l72LBhKuHqDMnueXSjXPh0
R6Rmbule+sBvv/22bdu2eqJr1xf/9z4XlTCkp+tPrPv375e3tOu4Is7TvXxC
9XVCq1WrZl+vWXp4fU1S5W+6l7e6/mWyaNGi9matPJa+8ot8guxh/eL/3t52
uzBHUhw24OzZs3o212tz7Ny5U18PS5Hugcjl0/Xunfer+uu7cuXK9oZNTEyM
3Ms+Ly/RxujBmWXrwnXhrue8O0/3zru1eJfr3a9cuVJPkc7tnnvuUQmH5btt
xgMIoc8++0x/hGVLzN46ks7niSeeUP6me4nk+pjhoUOH2kOLf/nll3pQu169
etlzypahvmB9165d9ZzSV+hx5zTPdC9Lfuihh+x+THK0XqxrXtYHxjdv3tyz
bTpaZs2aVXfR8u/tt9/erFmzrVu3us525swZvdjBgwfbE995551cuXJJv+02
mN6YMWN0a0+dOqWn+LQhKjNLJlUJpwy8/vrr9kDT0m+PHz9emuE6trybpMK1
Tz227d1331UJ53+5ni0u3zVue/+dNCDel7dBvOPU7NPr5Z9ApXu991DWgLym
esr169f/8Y9/6PXvdu0Y5xsD9sw5c+bUhxlHRUXpcQzq168vD+H8mSoXzu+F
VM5O93ny5NHn5mjyVhw+fLjbe0l6G/2DpyhcuHCHDh3kg1mjRg195In91o33
Jd2LDz74QH/2s2fP3rBhQ/0bcpYsWfSH1L90H59wwos+fV62JKWRLVu21AsU
U6ZMcZ3TPn5AVkKjRo3aJJBn169fP5nT7TdP5w2466679JqU7l026cuVKyd/
y/MqW7asIt0DkcundO+8X127dq2eKJsWvXv3btGihd4C0ReeTuqrWY/brBKG
1e2WoHLlytLZ2hsPztN9vONuLd7lisAq4Th8uaM+SlbIto3vKxVAEElY0BFb
bwtJL6GPnxRt27Z1ndNhuo//O+yohEGNZLNKNmz0xt5tt91mX35d09cgVgmX
uqtbt650KSph97HexZzo9e5VwnB2jRs3lsXaHaM93LEESX2V8ER3hUsA13fR
16zfuHGjHm9fmleyZMl27doNGzZMemndZclyXPcv33///fpZ5MiRo3bt2rKh
OGTIEL2HWjzwwAOuD+R8Q1ScOHGiePHi+lZ5LjKzJDX9Ksgmom6ql/WcaLh2
3mPbZMtf997SZknQ8l0jLZHvmkQv1ZdsA+J9eRs4TM0+vV7OyXs+4990g+VN
Yk/5+uuvfW1nfMKPM+XLl9dLK126tLwK+ltb79Z0S/fONwa+//573UjXd8XP
P/+sF+7TmAnKhfN7IZWTLs71lZVuR+Lt0KFDXd/Gbj766CPXYSpFqVKl5F3n
+lOAHvvRS7rfs2eP6/TPPvtM72DSn6Y6ders2LFD7+Wx9/tohw8f1rPZv456
If1Gnz59XAeclCa5fk1osgUunYxKgnStrqN9Om/AmTNn9GX1NPnQdenS5cCB
A/p0G7tT1fndLd3bo1qR7oGwY59A5yTda076VT2b3irQZFNNtl1lk0CPUpJo
Y+RW2W7XW8uabBHVrFnzyJEjegbdTdknYbnS6d71utIOu7X4v7d/Xn31Vdmc
s4f9yZcv35w5cxyvSAAp57vvvrOTte4oJANKmnY7E7x///7K8e7RJUuWuG5f
Zc2aVYKY53B258+fl57Enk02CJ966qnr16/rCxbr6zJrOt1XrVpV/rB/MJTt
RolFrltla9as0U8hqbOY9aXJe/bsqf8bFRU1derU6tWru3WVslj7Gk+2nTt3
yh3trVZN4tjEiRM9x3NzuCGqyRbg2LFj9e8SmrSnVatWP/30k5eVrA/z9rwK
QLwvPbarffv22fv3NVnVEyZM8KMBmsO3gV6lSaVm1+X79Ho5pH/xSIrrS+a8
nfEJwUdCuutPZ6NGjdJD4kjY8WxGshsD8rnQK7N3795u950/f76+S6I/1yfK
9YEc3gUR7MKFC9u3b9+8ebO8bwO1zN9++23jxo3SyQdqgVpMTIx0xevWrUt0
ydIVS/8gXw1TpkyR5C5pekeClStXvvzyy/rz6OQ36qScPHlSNpulAfZxVgCQ
KCf9anR09J49e2RLwzV0J0vuJUv+9ttvpYvzPAvVV066NZ3uFy5cGJ9wIsCm
TZt++eUXw8cFEGx6k2nr1q2e4ctvkru//vrrvXv3eh/MXKKo9FH2ifOJ0um+
YsWK8Qk/Xf7444/SswWwqdLCn3/+ecOGDdLNJrtY3WPLzMeOHfO+jed9Q9TT
77//vnbt2l27dvl0lHVS/NsQPXHixHfffSevyMGDBwOyBevwbeATn16vEJJs
LutfXlCHazIYIStRpHtEJD3sSZMmTRK9Vf/m6TmMFQDAi6SOXQQAv3m5Ih4A
X5HuEZH0VUfLlCnjOsyUtmXLFn2GFIeSAoBPSPcAAo50DwQQ6R4R6cKFC3or
tHjx4mPHjv3444+XLFnyxhtvdOzYUR+WP3DgQD8uPwoAaRnpHkDAke6BACLd
I1Lt37+/c+fOOXLkcBtDo2bNmrNnzybaA4CvatWqlS9fvmXLloW6IQAix4IF
C6RjqV+/fqgbAkQC0j0i27Vr177++ut58+bNnz9/48aNrheBAgAAAICIQboH
AAAAACDcke4BAAAAAAh3pHsAAAAAAMId6R4AAAAAgHBHugcAAAAAINyR7gEA
AAAACHekewAAAAAAwh3pHgAAAACAcEe6BwAAAAAg3JHuAQAAAAAId6R7AAAA
APDu0KFDc+bMWb58eagbgsTJC7Rw4cI///wz1A0JJdI9AAAAEKmuX7++c+fO
lStX7t69OzY2NtTNSWlXr16VJy5P/5dffomLizNZ1Ntvvy2JqUKFCoFqG7zz
6bU7ePBg+vTp5QWqXr16yjQvdSLdAwAAAJFnx44dDRs2zJo1q721X6xYsRkz
ZoS6XSnk3Llzjz76aObMme2nnytXrp49e/7+++/+LZB0n2L8eO1WrFih58yY
MePly5dTsrWpCukeAAAAiDBTp061w1H+/PmrVKkiqUf/9+mnnw5164IuKiqq
Zs2a+vlmypSpWrVquXPn1v+VP9asWePHMkn3KcO/1y46Orpbt26lS5eePHly
Cjc4VSHdAwAAAJFk9erVevNeoujOnTv1xKtXr44dOzZ79uwbNmwIbfP8tnXr
1kGDBnlOX7Zs2ZgxY1ynTJkyRZ5+5syZ586d+9dff+mJsirq169fsGDBY8eO
+fHopHvN+avgn2C8dmkH6R4AAACIGLGxsVWrVpVt+ypVqly6dMnt1vPnz3u/
e1xc3PHjxzdv3rxv374bN24kOs/ly5e3b98uswWmxS6uXbsmSz5z5kyit375
5Zd33HGH5/Tp06d36dLFdUqHDh1kDfTq1cttTlk5gToyPyoqSpp69uxZ7/eK
iYn58ccf9+7dK384f6wrV67s2bNHcrSX5R8+fPiHH36QZjhfrBPeX4J4X14F
/wTjtfObfILkVTh16lQKP67fSPcAAABAxFi8eLHetl+6dKmT+YcNG5YzZ86V
K1fK3x999FHZsmVdz9N3m/mrr76qWrWqHr5M5MuXb/To0ZIHXedZtWqVLDBv
3ryej5U7d2656ZtvvrGnvPfeezJl1KhRu3fvbt68eZYsWfSSS5QosWLFCnu2
b7/9ds6cOU888cStt946x0OfPn0kb8of0n4dotu2bSsLadKkiffn7lNTdbqX
py9R/a677rJPfChZsuTnn3/uuYRz5849/PDDmTJlss8Hz+mib9++9pxHjx69
5ZZbGjduLH+fPHlSno59L1nVM2fOdF3sn3/+KS9Zrly57MXWq1dPEmiwX4J4
318F/zh87UShQoVyerj33ns957x8+bLnnK727dvndpdFixaVK1cuXbp09ukt
kyZNSur3rtSDdA8AAABEjDFjxujI6XCIeImZMr8kstdee02HAkk0xYsXz5Yt
W/369V3nHD9+vJ7hpptuuvPOO2Ue/d9KlSr98ccf9mxffPGFPmPa87EyZMgg
N3311Vf2FB2ZCxcurMOy/CHxWQ8RIM2QqKhne/7551u3bl29enV56NYeypYt
my9fPv23viCazK/bNnjwYNe2ufGjqUIPVJhUU7Xo6OhatWrJTTly5Bg4cOCA
AQOyZ8+u7142gevoBwcPHpTppUuXlmhfvnx5PZvkd0mv8sfq1avtOY8dO2av
9jJlytSpU0c3Rlr7zjvvBPUl8ONVSIpE6YkTJyZ1q8PXLt4j3et7derUyXPO
qKgoieduid7+CUWa7XaMxH333Wev5C5dutSrV0//otWmTRsv7UkNSPcAAABA
xOjZs6ds2Ldr187h/DrdV6tWTf4tV67cjBkz9PHPkk8PHz5sz7Zp0yYdcHr3
7n3lyhU9ceHChRL0ZOKDDz5oz+lfZL711lvXrl2rJx45cqRixYoq4eABaYY9
s/NjwqWFegni5ptvHj58+C+//OJ5x+A1VZqkH/rAgQN6yt69eyXgy2J37Njh
9lg63UtO1zuLhw4d+s033+jdxPISuB4aoY9alzRqDy534cIFiZwyMVu2bPZz
DN7zig/Ekfnr1q2TJztixIhEb3X42nmSBSaV7j3FxsZ269ZN5pcXZePGja43
vfPOO/oHE/ks2D+Rbdiw4ZZbbtG/gzlZfqiQ7gEAAICIUaNGDdmwHzZsmD3l
559/fs2FpDnX+XW6F7Vr15aomNRimzVrJvNUrlxZYpHr9KlTp+q72zHWj2hZ
qFChc+fOuc65fv16vdjly5fbE33KlRcvXuzTp499EoGk5o4dO27atMl1nuA1
Ve/8dX0VxMCBA2Xi2LFj3R5Lp3vNS3iUyK/nWbBggev0q1evFilSRKbLgwb7
ecUH6Lx7WUiWLFmeeOKJRG918tp58indP/roozrCu519EBUVpX+w8jy64OWX
X5bpTZs2dbL8UCHdAwAAABFDp/uh/8/eu8BFcd39/+d5nt/Te5qmzeVp+jTp
LWmbJm36JE1zM5smNTHXpolJkzQxTdLITQFRUBQJKiCgWOMtXlBUwEtAEkWU
SkQoBAVFVEAxIshNVlAUQZbbLv8vnGb/m91hXObM7DLL5/36vHjtnjkzZ3Zn
zrLvnZkzvr7WEpJB2+/81113nW19bvfXXHNNdXW1zGL5mc8JCQl25V1dXfyc
882bN/MSBWopORD9D37wA5q0aNEia4kCrzx58iS9FdzXOGSU1h8o1F3V+Ph4
a8n48eOp5C9/+YtttRdeeMFu03Csdj9p0iTJV8Gh5VOdW265xfGai3nz5rHB
Uy+0eF22m6BfvVH1du3aRYI/bdq0oSrIbztHnLd7Piw/sWrVKrtJxcXFbHA0
A8dfukpLS2nSTTfddNXluxHYPQAAAAAAAB7Dyy+/TF/sn3nmGWtJeXn5nEG8
vLyGsvu3335bZpm1tbXcFwoLCx2n8iH6Q0ND+VO11PL++++nSQEBAdYSxV55
8eLFmJiY66+/nr+KDz74QItV9ff3t5aQEVMJ2av1gLjRaOQXeq9du9Zudqvd
0/ss8ypoG1GdJ554wnFSeno6GxyCr7OzU/XXZbsJ+p3eCmYn2LFjB61kcHCw
zKseats54qTdp6Sk8LHyHE+iIFavXs0b+ooDVmseyWPrwe4BAAAAAADwGGbO
nMmGGFWvpKRkKLuXvIO5lTNnznBfsLtCmUOuR5OsjqaWWt511100adasWdYS
waPGJNq/+tWvaJm/+MUv1F3VO++8kybZ3u39woULP/vZz6jwxhtvJOsMDAy8
4YYbeNPWe7hbsdq9/M3c//a3vw1l99u3b2eDZ7B3dHSo+LocN0G/c1vh6NGj
bDikp6fLvPB+qW3niDN2Ty+ce/o777wjWYFfdE9MHALHUy9GFLB7AAAAAAAA
PAbrefiOt2lTbPdms5mfIO14VXhfX98111xjO2n37t18BezulNc/HLXs6en5
1re+RZNSUlKsheLnhK9atYoNXm3NT/BWZVW7u7v5tQm2q0qFf/zjH+0clsTT
dqBCK07afWxsLBscWv+qk7TbBP3ObYXe3t7PnWDz5s1scLgAmfPtrdhtO0eu
avdHjx7lF5g8/fTTtIaSdQoKCvhb19DQcNVVGoHA7gEAAAAAAPAYSLfJ1Oi7
/b333mt3mFix3RMPPfQQGxx5z658zZo1XCXKy8t5ifW4LT2wrZmQkMDLnVFL
6yHUiooKepqWljZ37lzSwBtvvHGuA0899dTPf/5zejBv3jyTydQ/OABaamqq
46ugOrTMH/3oRyqu6ooVK2xXlcNHYPP3929ubv7000/z8vLOnTs31HvrpN1n
Z2dL/m7T3d394x//mMrHjx+v4uuy2wT9w98K8hw+fPi73/3ua6+9Zneiu5Pb
zhF5u6+treVjD9I+zM9wkIS6DL+AQn4MhBEL7B4AAAAAAABPIiMjg3+9/81v
fnPs2DFe2NnZGRQUpNjuyQf51cq+vr7WW6RlZWXR0qjw1VdftdZsa2vjd0t/
8cUXec0rV67wYd+GUkta8sSJEy9evMgLSWP5Yq26unr1ai8vryeffJLKvRx4
4IEHbrnlFv6Y2vroo494Q/TS6OXzQ71nz54lt+UH2aktkVV97733rEOu7dmz
h98o7eWXX7Z9u0ha2ZdvFCiDk3ZvsVgeffRRqvaDH/zAOoA8iSq/ByI5qXVb
a7EJhrsV5F9yaWkpqT2tuZ3aO7/tHJGxe9pe/C57P/3pT2V+ZuHMnz+fr8Pc
uXNtT36orKykJvjIBiMW2D0AAAAAAAAeBhkK9zuCNOrOO+/8+te/zp8+9dRT
tjWdtPv+L+yJDV5LPm7cuLvuuov7/o9+9KOWlhbbmvzWb2zwPmu///3vv/rV
r9JjmoWP5y95s3Xim9/85iOPPEKL5bdCu+mmm+xGmXPyzPzz58+/+uqr1sVe
c801t912m/UpPSb5Vbyq/Mx2WtWHH37Y+g44ruqGDRusb/6YMWPGDfLss89O
mDAhLi7O7vYETto9UVVVxa/fp9WgNRw7dix3cIIW64JN4PxWkOHo0aPf+973
xo8f73h6/LC2nR0ydv/YY49ZF/JDKbZt22atbDabn3nmGV75+9//Pm01WiV6
3/h7IjOs30gAdg8AAAAAAIDn8dlnn1m1jg0enL399ttJ5exG23vrrbdoqre3
tzPLJAkil7fqw9e+9jU/Pz/HYeIuXLhAometdvPNN4eEhJDK8fvE7du3z1qT
q+Wvf/1rekAizOuTRpFeGY1Gu8Xu2bPnnnvucVwrmvell16yK0xLSyMB51eO
c77+9a9PnTrV7k5nzq8qH009NDR01apVXLFlVvXy5cu2b5QdtCa2dx+oqanh
5Y7LcaSlpeWNN96wHcL9l7/8pa2tD/d1DWsT9A9zK0hCr/3tt98e6sr3fqe3
nR30Aqmm5Dp873vfG2pbcGjl7WZJSkri1ztY+clPfkJqj2P3AAAAAAAAALfQ
09Nz5MiRgwcPOjq4Ykj6cnJyKioq5G8N1tzc/K9//cv2anRHuFrecccd/YPH
TMvLy0tKSlRcVVpmZWUl6WR1dbXM0G3OrKotFovl+PHjhw4dklxVelvuvvtu
EuS4uDgy99LS0sOD7Nq1a+HChfycCmdOlpCBb9bc3FyyeJlqI2ETKMbJbacp
ra2t9G4UFRXJnDMwooDdAwAAAAAAANyCzO3Y9Asf/s5gMEhOfeGFF2jqa6+9
5tqVGhKP3ASjFtg9AAAAAAAAwC14pFryu8//7Gc/sw5SZ6W4uJhfKb9x40a3
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
DDIzM9esWbNSbWbPfnbCBObt7X6Rl0xXFysrY598gghl794Hmpubtd5FYfdK
gd3D7mH3sHvg+fA98A72HCKfftg9kAV2D/SPxWQ6s3Llh7GxYfPnh6qbgICH
X3mFeXm5X+SHytmzrKSEHTiAKM/Row9dunRJ690Udq8U2D3sHnYPuweeD+we
dg9UAXYP9E5f36X8/GtvvPEb3t5fCw5WOX/72/977jk2caL7LX6omM2srw8R
jMFisWi9o8LulQK7h93D7mH3wPOB3cPugSrA7oHe6e29tG8fu/lmFh3NVqxQ
OWFhbCSfmY+oFIMLdlTYvVJg97B72D3sHng+sHu17N5sNpeXlycmJsbExISG
hkZHR2/cuDEvL6+vr2+oWVpbW5ctW5aTk+M4yWQy7dmzJyEhgT4lIiIi6EFW
VlZ7e/tQi6LKS5cu7ejoGMa2HyZGozE9Pf3DDz9MSUkpKirq7OzUri09ArsH
eofs/tNP2RNPsDNnmMmkcg4eHLib/IgdVQ9RKQYX7Kiwe6XA7mH3sHvYPfB8
YPeq2D15Okm95DD7kZGRTU1NjrN0d3fTJKqwfv16u0n19fVhYWGOiwoNDaVJ
jos6ePAgr3DhwgWhvWFo9u/f7+PjY7syc+bMccH1lToCdg/0Drf7p55iRqP6
3nfsGBvJd8RDVIrBBTsq7F4psHvYPewedg88H9i9uN2bTKYZM2Zw501KSiot
LTUajWRnmZmZfn5+VEhT7Y7gt7S0LFy4kM/iaPd8UkhISH5+ft0gBQUFvImg
oCDbRVksltzcXN6Kdnbf3Nzs6+tLy1+6dGlZWVlhYWF4eDg9XbRokRbN6RTY
PdA7sHtEOAYX7Kiwe6XA7mH3sHvYPfB8YPfidp+cnEyTyH9PnDhhN6mhoYF7
8f79+62Fe/funTRpkvUguJ3dd3R0eHt7U/mhQ4dsyysqKnj9yspKXkLSvWDB
Atvj6RrZfWZmJi18ypQp3d3dvOTYsWNU4uPjYzKZtGhRj8Dugd7R1O7Ly1lc
HHvkEZaVhXhsCgoebGlp0XpHda/dj7t9m7siaByCdp/1pFDWvyWUj18Qyt/X
KM87a4WSOl4oImtOEZTcJ/4pFJGdtf5/mUgynhWKYE+D3QP3ArsXtHvSW37o
PCMjQ/IdTklJIQsmX7OWeHl5Uf2YmJikpCRHu29sbOSqXltba7eoZcuWRUVF
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
bP3gwYO8gu1C1CUvL8/Hx8d2Zby8vDIzMzVqTo/A7gEAwAXA7pUCu4fdw+5h
9xKQ3R+6h8lk6t9g93oCdi9u9yaTacaMGdx5k5KSSktLjUYj2RnJr5+fHxXS
VOsR/ISEBCoJDAzctm3byZMnMzIypk2bRiXx8fHWBS5cuJBKQkJC8vPz6wYp
KCjgTQQFBdmeDGCxWHJzc3kr2tl9Y2MjV3tayaKiosOHDy9btoy3SC9Bixb1
COweAABcAOxeKbB72D3sHnYvAdn9wXuZTGD3+gJ2L273ycnJNMnX1/fEiRN2
kxoaGqicpu7fv5+e9vT08KfZ2dnWOoWFhdyU+Xn19Nfb25ue2t1XqKKigler
rKzkJc3NzQsWLLA9nq6R3VOvt/thwWw2z5w5kwq3bNmiRYt6BHYPAAAugP71
uPHLwKN/POCuCBqHoN1PjxHKCh+hTNgglG+3KU9csFBe3SwUQbu/s0wor20S
isjOuuUvTCSvpwhFsKfp0e6Lf8dkArvXF7B7Qbs3mUz80HlGRobkO5ySkuLj
40O+Ro+bmprCw8OnTJnS1tZmrdDV1cXdvLa2tn/wQLntU1uWLVsWFRVVWFjI
n+7cuZP/qpCTk8OPrSuzexLJpKQkEvahKmzdujUkJIT+2hampqZSi7RKClr0
SGD3YFTR2dl58eLFVgBsoH9trhlVD3avCNg97B52D7uXgOy+6D4mkyDYva6A
3QvafXFxsfxxc9MgMpugvLycX8be3d3dP3iyfXBwMJVERESUlJSQ+w814759
+8jKW1pa6DE/JUCZ3UdHR9O8iYmJ1LTzc/FxBtLT0xW06JHA7sHoobe3Nzs7
e+7cubMAsGHJkiWff/651rsf7F4psHvYPewedi8B2b38tS2we30Buxe0e34A
PTAwUNn7f+XKlfDwcFrC0qVLrYVFRUXWIezoQXx8fGZmZnV1tYx9ixy7r6+v
nzRpEs2ekpLi5Cy5ubn8FwlaKwUteiSwezB66OrqWrRo0cyZb4aG/gVBrFm8
eDrsHnYPu4fdw+61/hhUF7L7/fczmcDu9QXsXtDuyYipPCYmxrbw+PHjiYmJ
6wZZO0hycrLjvCaTKS4ujmb39/dvbW21nXTy5Mn58+fbjZkfERFhO/y+LSJ2
329zBkJqaupVK5eUlJDXU2W7c/VHObB7MHq4dOnSzTffPGPG1+Livoog1qxb
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
0R1iCKjpf0rR0tKiUYu6A3YPhoWu7Z4Lfm+v54c20A9+wKqqEKdSVzfmypUr
Wvcd2L1SYPewe9g97F4CUomdzzCZwO71BexeFbtvbW0lqZ8oRWRkZFNTk7Um
ffOZO3euXZ2wsLALFy5Y69TX11OJ46JCQ0NpkrVaXl6ej4+PbQUvL6/MzEwt
9pPDhw9LvrrS0lItmtMjsHswLPRu96Mk8+ezn/yEbduGOJXs7AeMRqPWfQd2
rxTYPewedg+7l4DsfsezTCawe30Buxe3e5PJNGPGDG67SUlJJLz09YbsjETb
z8+PCmmq9Qh+QkIClQQGBm7btu3kyZMZGRnTpk2jkvj4eOsCFy5cSCUhISH5
+fl1gxQUFPAmgoKC+KIaGxu52tOMRUVFZN/Lli3j60CLVX0/2b59Oy153rx5
W7/M2bNnVW9Lp8DuwbCA3esia9aw++5jv/kN4lReeuk3hYWFWvcd2L1SYPew
e9g97F4CkvvtzzOZBMDudQXsXtzuk5OTaZKvr++JEyfsJjU0NFA5Td2/fz89
7enp4U+zs7Otdei7ELfyjo4Oekp/vb296emhQ4dsF1VRUcGrVVZW9g/2RFvZ
7x884X/mzJlUuGXLFrV2Dyv8p4Pc3FzVl+wxwO7BsIDd6yKZmczHh73+OuJU
QkL+7+jRo1r3Hdi9UmD3sHvYPexeAnKKT/7EZAK71xewe0G7N5lM/AB9RkaG
5DuckpLi4+NDvkaPm5qawsPDp0yZ0tbWZq3Q1dXFtb22trZ/8KC87VNbSLGj
oqL4kZGtW7eGhITQX9sKqampNCNVG9Y+QCKZlJQkPxQSP3Ogurp6WEseVcDu
wbCA3SOeGIML+g7sXimwe9g97B52LwHZ/ccvMJnA7vUF7F7Q7ouLi7mM2144
b4tpEJlNUF5ezi+Z7+7upqcWiyU4OJhKIiIiSkpKyP2d35r82v/09HTnZyGi
o6NprsTERGpaskJHRwd/jVlZWUuWLImMjExISKB1G1YrHg/s3gPo7e3dtm3b
Bx98sFh7/P3H/fnPLCzM7TqGICrG4IJ+CrtXCuwedg+7h91LQHaf/mcmE9i9
voDdC9r9zp07+XX0yt7/K1euhIeH0xKWLl1qLSwqKrIOl0cP4uPjMzMzq6ur
h7JvTm5uLv+VYLhH2Ovr6ydNmkTzpqSkSFY4ceKE5JB6iYmJw2rIs4HdewAm
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
wZn5sHvYPewedq9Hu18cwGQCu9cXsHsn0z/EsXvrEPdFRUWS73B1dbXV7knb
T58+XVFRYVuht7eX3yaPL2H16tVDnSGfm5tLk6ZNm+Y46arGvXPnzo2y0GL5
C4mNjZUZys+ZtmD37l6XqwC7HwrYPU9vL5sxgz33nKvzq18N3IDelXZP6elh
ly8PjKqHiKe9/RHbMWQ0AnavFNg97B52D7uXgOz+H4FMJrB7fQG7F7T7/i9u
WE+GfurUKcepZWVlVrsnteePbe+IR4+5L/Mb2fOTAaZPn+440n52djZNouYc
WxG87r6xsZH/wkALt103SWD3ksDuPQDYPU9fH1u8mE2cyMaPd2l+/euBS+9d
bPeIqjG4oJ/C7pUCu4fdw+5h9xKQ3cv3X9i9voDdi9t9bW0tF14S5Pz8/Obm
Zio0m82kzKmpqXwSt3vrYfrk5OS+vj4qob9r166lkoCAgO7ubippaWnhx9DD
w8NPnTplrXbgwAF+77yMjAzHdRCxe9L5sLAwmn3OnDl2g/tJAruXBHbvAcDu
rTGZBq6+b293aaZPZ7GxsHtdx+CCfgq7VwrsHnYPu4fdS0B2Hx/EZOLnDbvX
E7B7cbsnSktLuXpzgoKC+D3mrJ5eVlbGaxYUFPDCqVOnJiQkzJ49mz+13u+e
KCws5PeU5z8LBAcHW2+QFxsb297e7rgCIna/cuVKvpJtbW3O1IfdSzLa7L63
t5ePDOlJHD/+7bFjB4Ztd7cijdK4/o54iNoxqPQpJQfsXilCdv/cDqG8myCU
iPeF8uI25REU5DsqhPJ6ilDG7hGKG+1e8EeV4DihCPY0Pdr9wqlMJrB7fQG7
V8XuifPnz2/evJkPfMfx8/OLiorKzs7mx9+tkLyT2lurzZo1y+5KfKKqqiou
Lo4f6OeEhoZu2bJlqEsa+Y8JtiP7OU9mZiatg/PzXrWtrKwsqjDaDg2PNrtv
bW3dvXv3Ts8iJeWb998/cPjY3Yo0SgO7138MKn1KyQG7VwrsHnYPu4fdS0B2
v2AakwnsXl/A7tWye47ZbCbrqaura2pqoscy1Zqbm0+dOiV/uNxisRiNxpqa
Gsnj9SpiN0Q/UMCosvuOjo4jR47ExsZ+6FnExX397rth927LzJkDd8Tbu5c1
NyO6TGvrI/wSM02B3SsFdg+7h93D7iUgu48NZjLxhd3rCti9unYPRi2jyu7L
y8vnzJlz/fXXv+xZPPfcf996K4uJcb/njs4EBw+Mmf/hh2zbNkSXyc5+wGg0
qvhhJQnsXimwe9g97B52LwHZfUwIkwnsXl/A7mH3QBVGld0fOnQoIiJi7Nix
mz2LVau+8bvf4di92/LRRywkhE2bJuQgiBuzfPnvqqqqVPywkgR2rxShjQu7
h93D7p1Ed75Adj9/BpMJ7F5fwO5h90AVRpXd79+/f/78+XPmzFFxrUYCGDPf
vamuHlD78ePZK68guszUqf935MgRrfsp7F4psHvYPewedi8B2X10KJMJ7F5f
wO5h90AVYPceAOzevbl4ke3ZM3AEPzUV0WX27MGZ+bB72D3sHnavM18gu4+a
yWTi6wO71xOwe9g9UAXYvQcAu0cQsRhc0E9h90qB3cPuYfewewnI7iNnMZnA
7vUF7B52D1QBdu8BwO4RRCwGF/RT2L1SYPewe9g97F4Csvt5YUwmsHt9MWLt
/pGJp0dU+mH3QBbYvQcAu0cQsRhc0E9h90qB3cPuYfewewnI7ufOZjKB3esL
2D3sHqgC7N4DgN0jiFgMLuinsHulCNn9G0lCSXhXKMl/FcrPTinPnWVC+eRP
QhH8UeXlj4Ty53ShiOyssyKZSKYtEIpgT9OdL5DdzwlnMvGB3esK2D3sHqgC
7N4DgN2PqpjNiOoxuKCfwu6VAruH3cPuYfcSkN3Ln/0Cu9cXsHu17N5sNpeX
lycmJsbExISGhkZHR5M95eXl9fX1Odb87LPPaOqHH364e/fumpoax6WZTKY9
e/YkJCTQp0RERAQ9yMrKam9vt6vW3NxMXZKmrlq16pNPPqmrqxPZGeRxZVt6
BHbvAcDuR0nIQzs7WUMDonKMxjH0z0vrfgq7VwrsHnYPu4fdS0Bf79+PYDKB
3esL2L0qdt/a2kpSP1GKyMjIpqYma0365hMVFWVXh2zLdmn19fVhYWGOiwoN
DaVJ1mp5eXk+Pj62Fby8vDIzM9XfS1zblk6B3XsAsPtRElL7+nqWl8c++wxR
M6WlD128eFHrfgq7VwrsHnYPu4fdS0B2Hz6HyQR2ry9g9+J2T8I+Y8YM7rxJ
SUmlpaVGo/HUqVMkv35+flRIU61H8KkClUyZMiUrK+vkyZObNm3iM1J96wIX
LlxIJSEhIfn5+XWDFBQU8CaCgoL4ohobG7lux8fHFxUVHT58eNmyZXxRtFh1
dxJXtqVfYPceAOx+lOTQITZzJrv1VvbAA4ia+etf7z5w4IDW/RR2rxTYPewe
dg+7l4DsfvZcJhMfX9i9noDdi9t9cnIyTfL19T1x4oTdpIaGBiqnqWRD9LSn
p2fy5Mn0lNTeWocfyt+2bRt/2tHR4e3tTSWHDh2yXVRFRQUX6srKyv7Bnmgr
+/2DJ/zPnDmTCrds2aLKvmHFlW3pF9i9BwC7HyXJz2e+vuymm9iYMYiamTDh
7qKiIq37KexeKbB72D3sHnYvAX3PD5vHZAK71xewe0G7N5lM/AB9RkaG5Duc
kpLi4+OzefPm/i+upt+wYUNnZ6e1Av9xYP369fxpY2Mjt/ja2lq7RS1btiwq
KqqwsJAeb926NSQkhP7aVkhNTaUZqdqw9oFTp04lJSWRsA9VQcW2PBjYvQcA
ux8lycxkQUFs8WL3X6juYTEax3R1dWndT2H3SoHdw+5h97B7CcjuZ0YymcDu
9QXsXtDui4uLuYxfuHBB8h02DTLU+09mHRAQQLMfPHiQl1gsluDgYCqJiIgo
KSkZ1jclfu1/enq687MQ0dHRNFdiYiI1rXVbHgzs3gNwmd339LCODtbairgn
W7Ywf3+WlOT+3xk8LgYX9FPYvVJg97B72D3sXgKy+9AoJhNv2L2ugN0L2v3O
nTupPDAwcLjvfGZm5vTp0/kvA+vXr+/t7bVOKioqsg5hRw/i4+OpcnV1tbx9
5+bm8sHuqOaw1qS+vn7SpEk0b0pKipOzKG7Lg4HdewAus/uqKrZ5M5s9m4WH
I27IX//K/vQn2L0WMbign8LulQK7h93D7mH3EpDdz5jPZAK71xewe0G7JyOm
8piYGNvC48ePJyYmrhtk7SDJycl2M0ZGRlrHn09KSuro6LCdevLkSbKniV8m
IiLCdvh9W0pKSsi1qY7d+fNOYj0DITU19aqVBdvyVGD3HoDL7H7PHhYfz2bM
YLNmIW7Ia6/B7jWKwQX9FHavFCG7l78d9lWz3Fcou54SymN7lefH1ULJ+YNQ
fFYI5U+fCEXkfaOI7Kzr3mYiiZwlFMGepke7nx7DZAK71xewe/nY+bXjG5iW
lkblwcHBtoU5OTl2M/r4+NjNeOHChZaWlqysrJCQEKpAruS48La2tsLCwsTE
RH6uPuHv719VVWVXLTc3l+v2kiVLbM8BsKWioqJIFj5KHkF9XGaHcaat0Qns
3gNwmd2/+y575ZWBY/fz5yNuyNtvsxdfhN1rEYML+insXimwe9g97B52LwF9
8w+JZTKB3esL2L3gsXsSJS7Ftjf5NRqNBV+Qnp4uafdWDh06xJdw6dIlXtLd
3d3T02Nbx2KxFBcXBwUFUbV169bZTuLLJ1avXm03ly0RERETnaakpERyIU62
NTqB3XsALrP7N99kb7zBlixhKSmIGxISMnByPuxegxhc0E9h90qB3cPuYfew
ewnI7oPjmEy8/WD3egJ2L2j31iHuh7oNUHV1tdXuSdtPnz5dUVFhW6G3t5ff
Jo8vgcR5qDPk+dXu06ZN409J+fl1AURaWpr8Vfk7d+7cKAstli8qNjbWcSi/
YbU1OoHdewCuPHZP35YrKtzuYqM0GRls6lTYvRYxuKCfwu6VAruH3cPuYfcS
kN3LD0QAu9cXsHtBu+//4ob1ZOinTp1ynFpWVma1e1J7/tj2jnj0mI+hx29k
z08GmD59uuNI+9nZ2TSJmuNPyc4mDg5tl5eXJ7gbNDY28l8YaOG262ZFxbY8
Fdi9BwC7HyXZt2/gjngvvcRiYhA1k5BwnwuGWoXdKwV2D7uH3cPuJSC7n7qQ
yQR2ry9g9+J2X1tby/WcBDk/P7+5uZkKzWYzKXNqaiqfxO3eepg+OTm5r6+P
Sujv2rVrqSQgIKC7u5tKWlpa+CHy8PDwU6dOWasdOHCA3zsvIyODSsrLy3m1
goKCvi8jc+d6SUjnw8LCaFEka3aD+3FUbMuDgd17ALD7UZLiYjZlCvuv/2Lf
+Q6iZh544C76eNG6n8LulQK7h93D7mH3EpDdB8UzmcDu9QXsXtzuidLSUq7e
nKCgIH6POaunl5WV8ZokyLxw6tSpCQkJs2fP5k+t97snCgsLfX19ebmPj09w
cLD1BnmxsbHt7e1Uh8RqqKvmFy9ePKx9YOXKlXwl29raJCuo2JYHA7v3AGD3
oyQNDSwzc+CeBYK+g9hl+fLfOY77qjqwe6UIbVzYPewedu8kerT7KYuYTLxg
97oCdq+K3RPnz5/fvHkzH/iO4+fnFxUVlZ2dzY+/WyF5J7W3Vps1a5bdlfgE
fUGKi4vjB/o5oaGhW7Zs4cPUm81mb29vtYw7MzOT1sF2VEBb1G3Lg4HdewCw
+1ESi4X19LDWVkTltLU94oIBV2H3SoHdw+5h97B7CcjuA//BZAK71xewe7Xs
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
ykR2tli3jvHHbNnyUFlZma/vPtS9UdQ9dU/dU/duyLp/faHQGereWqh7xbqX
RSyXjx071nnh3r17Y2JiFjT7sFlcXJx20qZNm7TH5c+cOXO2lbqXDhw4IOup
6/+S52rt8PsqdX/W6RkICQkJOqtpLyjQDBgwIDMz09jmghJ1D8+p1P1//iOG
DBHffCP27GGaZts28cQTrT4zf/9+8cUXYtAgMXgw4/N5//375X9evr77UPdG
UffUPXVP3bsh677zIqEzb/Wm7q2Eutcfl75ueQMuW7ZMLh84cKDzwg0bNric
Uda3XC7bvFevXvLjgoICbc3W6l5TWVmZkpISExOjPVdf6t27d05OTss1z1n3
WVlZqbqGDh2qbULex1u7kDNnzpSWlsqLmj17trbynj17Wls51FD38JxK3b/1
lhg2TKSnN70BHCMnP1907NjqUfVmz26qzogI859jEAozY8b9bv+H8i7q3iil
by51T91T9x6yYt2/Fit0hrq3Fupe8bF7GUpa5544ccKxsLi4OPk7K1ascNT9
2LFj5cejRo1K+U5UVJRcsmDBAvlxeXm5dva6ujrtkX2HxsbGbdu2aa/Wlyu3
vBrnrHttQx5KT08/556j/fiKjY0955ohgrqH51TqvmvXpt+09+3z/0uqA3T0
j5n/0kuibVvx7rti8mTG57No0QP5+fm+vvtQ90ZR99Q9dU/duyHr/tU4oTPU
vbVQ94p17zjEfWpqqttbODc311H3/fv3P2dTz507t2srz5DXntU/YMCAlied
s+5XrVq1SJe8WO1qjBs3zuVQfqWlpZmZmY4/Pmi+/PJLuXJkZGRrWww11D08
R937re47dxZ//7tIShKHDzM+n2+/fcQPb5NK3RtF3VP31D1174as+1fihc5Q
99ZC3SvWvRQdHS1Pevvtt90eZU52saPuP//888X/a/DgwfLUCRMmyI8LCwvP
fvdkALm85e9I69atkyfJzbXciuLr7uWm5fXXLry6utrl1ClTpsiTli9f7rxQ
fqpdc2NbDD7UPTxH3Xu37v/xD7FwYdNT9CsrXeeVV0SnTuLAAfOvZ2iMzQ93
H+reKOqeuqfuqXs3ZN2//LHQmf9Q95ZC3avX/eHDh7W4loGclJRUUlIiF9rt
dpnMCQkJ2kla3bfU8nX3paWl2mPoI0aMyM7ObmhokAvlv1u3bu3Tp49cvnLl
ypaXo1L3MucjIyPl2WWsVVVVtVxBe5i+d+/e2t8fpPz8fO0w+4mJiQa2GJSo
e3iOuvfinD7ddJu0bdv0rvcdO7rOrbeKxx+n7v02Nj/cfcyt+/ZdD5k1isWh
WPcL/qU0Ue8oTZsspclqY3y2tFWafpOVRrFS53dRmk9eUBqVnfXv/xUq894Q
pVG8p1mx7v+5WOgMdW8t1L163UsZGRlaemvCw8O1+HV0emuHl3d7VL2UlBTt
/eu1PwsMHDjQ8QZ548aNO3XqVMvLUal77RB58kpWVla6XaG2tlaeql2BCRMm
zJw5U9vcqFGjXI4PEMqoe3iOuvfiVFeLgQPFr34lfvlLccMNrnPVVeLPf6bu
/TY2P9x9qHujqHvqnrqn7t2Qdf/SEqEz1L21UPdeqXuprKxs8eLF2oHvND17
9oyOjl63bp32+LtbM2bMkGt+8803LstzcnLGjx+vPVteExERsWTJkvr6ereX
o/0xwfnIfp5LTEwcNmyY/nnLy8tnzZrluDLdu3ePi4tr+Rz+UEbdw3PUvRen
sbHpyPmZmWL3bjfzzDPi2Wepe7+NzQ93H+reKOqeuqfuqXs3ZN2/uFToDHVv
LdS9t+peY7fbZQgXFBQUFRXJjxW/O42NjcXFxXl5eW4fr/ciDx+Clzmfm5t7
9OjR1v7IEMqoe3jurbdsAwaIr75qeqn4+c5rr4nhw6n7/5mGhqaX2J844WZe
fFE8/XRT+58+zfh8ampsOn/N9hbq3ijqnrqn7ql7N2Tdv/CJ0Jn/9KHurYS6
927dI2RR9/BceLjtnnvEL34hbrnlvOfaa0WfPtS969jt7kemfdu2YskSkZjI
+Hy+/voh7cgzPkXdG0XdU/fUPXXvhqz7fyQInaHurYW6p+7hFdQ9PBcdbWvf
vuml4tS9r+fll4XNJmbPbjqoPuPr+eyzto6Dr/oOdW8UdU/dU/fUvRuy7jst
EzpD3VsLdU/dwyuoe3iuutp24oQoLTUyb7whRoyg7j2d//5XjB0rXnpJ/POf
jM9nwID7du3a5eu7D3VvFHVP3VP31L0bsu6fWy50pgt1bynUPXUPr6Du4bnG
xj4NDbb6eiPz1luXcVQ9z2f7dpGQICIjm/4kwvh6pk+/Pzs729d3H+reKOqe
uqfuqXs3ZN0/u0LoDHVvLdQ9dQ+voO5xPk6dPVthbLp2fZi693zq60VdnfmH
mwuR4ah61D11T91T95brBVn3z3wmdIa6t5aArfsXP6sLqDlL3UMXdQ//6NrV
Rt0zgTo2v9wFqHtjqHvqnrqn7t2Qdf/050JnqHtroe6pe3gFdQ//oO6ZAB6b
X+4C1L0xSnXfYZXSLOukNNN6Kc24QcbnyS+UZu1jSvPxy0rTfZbSZN6lNCo7
a7tkoTL6rXrOUbynWa4XZN3r/7WkS1/q3kqoe+oeXkHdwz+oeyaAx+aXuwB1
bwx1T91T99S9G7LuO64UOkPdWwt17626t9vte/bsiYmJGTt2bERExJgxY2Q9
bd68Wf9FiElJSfPmzTt48KDL8pqamrVr186fP1/+lIiKipIfrF69+tSpUy6r
lZSUyLukPHXOnDmfffZZQUGBkZ3gPMkrNm3atKqqKj9sy0Koe/gHdc8E8Nj8
cheg7o2h7ql76p66d0OmhP79l7q3FureK3VfXl4uo76rO6NHjy4qKnJ7rry8
vO7du8t1ZOM7Lz9y5EhkZGTLi4qIiJAnOVbbvHlzWFiY8wrdunVLTEz0zp7R
iu3bt2vbOn78uE83ZDnUPfyjSxfbsGFi505RXs4wgTWVle3PnDnj67sAdW8U
dU/dU/fUvRuy7p9KFDpD3VsLda9e9zU1NUOGDNGaNzY2NiMjo7i4ODs7W4Z2
z5495UJ5astH8Ovq6hwJ71L3EydOlAsHDRoklxc0S05O1jYRHh6uXVRhYaGW
9pMmTUpNTd2xY8f06dO1Sztw4IAvdpXGxsZNmzZpXxF13xJ1D/94803b4MEi
NVXk5jJMYM3Ro49UV1f7+i5A3RtF3VP31D1174ase/3d+N/UvaVQ9+p1HxcX
J0/q0aPHvn37XE46evSoXC5PlTXkclJsbKzjMXfnuq+qqtIe0E9LS3NePysr
S1t5//79Z5vvic6xf7b5pQFDhw6VC5csWaK0T7hTUlIyYcIE5+cJUPcuqHv4
x7BhtjfeEP37K/2izjC+mBkz7s/JyfH1XYC6N0rpm0vdU/fUvYesWPd/+1Lo
DHVvLdS9Yt3X1NRoD2evXLnS7S0cHx8fFha2ePFi54U7d+7UHtMfP368S90X
FhZq+Xz48GGXi5o+fXp0dHRKSor8eOnSpYMGDZL/Oq+QkJAgzyhXO699IDs7
OzY21m6366yzatUq7S8YGzZs0J4zQN27oO7hH/Pnd3j++cvatLns7rsZJrDm
uefaffPNN76+C1D3RlH31D11T927Iev+idVCZ6h7a6HuFet+27Zt+o9l1zRz
XlJZWRkeHq49Cj9t2jSXum9sbBw4cKBcGBUVlZ6eXltb6/l3U3vt/4oVKzw/
izRmzBh5rpiYGLnp1tbZuHFjbGxsaWmp/Fh7NgJ174K6h38cPZqxa9emLVs2
bd3KMIE1u3Ztr6io8PVdgLo3irqn7ql76t4NWfePrxE6Q91bC3WvWPfag9p9
+/b1/DbXiv6TTz5xfOzyuvvU1FTH4fLkB5MmTUpMTMzNzdWpb2nTpk3agfXk
mp5fmbPNB/Hr1auXPG98fLwn6/PYvVvUPQD4AXVvFHVP3VP31L0bsu4fWyt0
5t/9qHsroe4V614WsVw+duxY54V79+6NiYlZ0OzDZnFxcdpJWoNHRUVpBxZ2
W/fSgQMHZD11/V/yXK0dfj89PV12vVzH5bn6HnI8AyEhIeGcK1P3blH3AOAH
1L1R1D11T91T927Iuv/LOqEz1L21UPf649LXLW/AZcuWyeUDBw50XrhhwwaX
M8oilstlm/fq1Ut+7Hhj+tbqXlNZWZmSkhITE6M9V1/q3bt3y2MWbdq0SUv7
qVOn1tfXu72orKysVF3aEfkkeR/X32eoe7eoewDwA/kfkIm/nPx14nGzRrE4
FOt+ZpjSfPqs0qzsqDTJ7YzPmseV5su/Kc2qDkqz/Q9Ks/x5pVHZWUcNFyrz
4b+VRvGeZsW6//N6oTPUvbVQ94qP3ctQ0qL4xIkTjoXFxcXJ31mxYoWj7rXX
xY8aNSrlO1FRUXLJggUL5Mfl5eXa2evq6lzeMrixsXHbtm3aq/Xlys4naZcv
zZ07V+eNhrUNeSg9PV1nn6Hu3aLuAcAPqHujqHvqnrqn7t2Qdf+nDUJn/kXd
Wwp1r1j3jkPcp6amur2Fc3NzHXXfv3//cza1jPSurTxDXntW/4ABA7RPZfJr
rwuQli1bpv+q/FWrVi3SJS9Wu6hx48bpH8qPunfLQnUvd6TOnTtPmTLliFGf
f/75sGHDqHsA/kfdG0XdU/fUPXXvhqz7RzcKnaHurYW6V6x7KTo6Wp709ttv
Z2dntzw1MzPTUfeyiRb/r8GDB8tTJ0yYID8uLCw8+92TAeRylyPtS+vWrZMn
yc1pn8ok79p8GL3Nmzcr7gZy0/L6axdeXV2tvzJ175aF6n7Pnj0PPfTQTTfd
9KBRd91113333ScD3+wvBUDIoe6Nou6pe+qeundD1r1tk9AZ6t5aqHv1uj98
+LAWvDKQk5KSSkpK5EK73S6TOSEhQTtJq/uWWr7uvrS0VHsMfcSIEdnZ2Q0N
DXKh/Hfr1q19+vSRy1euXHm2OdC01ZKTkxv+l/4717ckcz4yMlJe1MiRI6uq
qs65PnXvloXqPicnp2PHjnfccccfjWrTps29995L3SOkFBUVyZ/2BWidvIla
/l3a66h7o6h76p66p+7dkHXffrPQGereWqh79bqXMjIytPTWhIeHa+8x5+j0
zMxMt2d0e1S9lJQU7T3ltT8LDBw40PEGeePGjTt16pRcR5Z4a8/wnzJlynnt
A7Nnz9auZGVlpSfrU/duWaju7Xb7kSNH9u3bt8eojz/+WO6WUVFRZn8pgP90
6NDhxhtvvOGGG36FVjz++OPqzyU7J+reKOqeuqfuqXs3ZN0/8rXQmX+FU/dW
Qt17pe6lsrKyxYsXawe+0/Ts2TM6OnrdunXa4+9uzZgxQ675zTffuCzPyckZ
P3689mx5TURExJIlS7RD4ss66969u7fqPjExcdiwYc5HBdSn/eHC8/VDhIXq
/mzz2zGUlJQUGyX3meHDh1P3CCkPPPCHRx+95IknfvLkk5cybqd794f1D8rq
FdS9UdQ9dU/dU/duyLp/OEnoDHVvLdS9t+peI7u7vLxce4Li+T5DvqXGxkZZ
Unl5edrj9b6jc7B9eMhadd+oJiUlZcyYMRxVDyHlxhuv2LxZ5OZekJfHuJ/C
wvbnPHKLOureKOqeuqfuqXs3ZN23SxY6Q91bC3Xv3bpHyLJW3SviHfFgupqa
mvLy8lI/+uUvL01PF+XloqKCcT8nT7b3w9+KqXujqHvqnrqn7t2Qdf/QN0Jn
qHtroe6pe3gFdQ/4U15e3rp165b50bXXXrR7t6ivl3dwprWx+eFbT90bpVT3
U/oozeJ/Kk32rUqjUvcTBihN4lNKs/YxpfniSaVZ1klpVHZWxbqPf0VpFO9p
lusFWfcPpgideZO6txTqnrqHV1D3gN+UlMR89FHfbt06v/POi36bK674AXVP
3VP31D11T93rs1wvyLpvu0XoDHVvLdQ9dQ+voO4Bv8nKsnXpIq66Sjz/vP/m
0ksFdU/dU/fUPXVP3euzXC/Iun9gq9AZ6t5aqHvqHl5B3QN+s3OnrV8/8de/
iqVL/TfXXEPdU/fUPXVP3VP352C5XpB1f3+q0Bnq3lqoe+oeXkHdA36TlmaT
uREe7td0veEGkZlJ3euPzQ/ffereKOqeuqfuqXs3ZN3/YbvQmTf7U/dWou2B
j/51a6DNpB0NATVnqXvoou4BvzGl7q+8Urz5ZtNG+/dn3M+ECX/Yv3+/r7/7
1L1R1D11T91T927Iuv99mtAZ6t5aqHvqHl5B3SMUNDY2njlzps5sW7a0j4wU
/fr5te6vv1786U+iQwfRsSPjfnr0+N2OHTt8vRNS90ZR99Q9dU/duyHr/r50
oTPUvbVQ996qe7vdvmfPnpiYmLFjx0ZERIwZM2bRokWbN29uaGhwWXPnzp1r
Wti6davzOjU1NWvXrp0/f778KREVFSU/WL169alTp1rbulx52rRpVVVVxncF
j8mr8eGHHy5ZssQP27IQ6h6h4MSJE+vXr19utgkT7nz9dfH2236t+xUrxIcf
innzxPz5jPtZvrztkSNHfL0TUvdGUffUPXVP3bsh6/53O4TOvEHdWwp175W6
Ly8vl1Hf1Z3Ro0cXFRU5ryybqOVqo0aNcqwgfzuKjIxsuU5ERITbX5y2b9+u
rXD8+HGv7RmtmzlzptzWoEGD/LAtC6HuEfTs9prCwpwPP/zw/ffHmTvh4Tc/
/7zo1cuvdX/kiPj6a7F+PdPqbN36UFlZma/3Q+reKOqeuqfuqXs3ZN3fmyF0
hrq3Fupeve5ramqGDBmi9XVsbGxGRkZxcXF2dnZiYmLPnj3lQnmq4xH8+vr6
sLAwuTA+Pn6pk3Xr1jkucOLEiVo+JyUlFTRLTk7WNhEeHu78ZIDGxsZNmzZp
W/FP3curpG2LundB3SPoFRbGxMY+9Pvf3zFw4K3mzuuv//jJJ/1d97W1oqJC
lJczrU5lZfszZ874ej+k7o2i7ql76p66d0PW/W93Cp2h7q2Fulev+7i4OHlS
jx499u3b53LS0aNH5XJ5qqwhbcnhw4flp/3792/tO1JVVdW9e3e5TlpamvPy
rKwsLasdxywqKSmZMGGC84P7vq77Y8eO9erVi7p3i7pH0Dt06J333xfXXitG
jDB53nqr6VXefq57xoOx+WE/pO6NUqr7d6KUJquN0mz/g9Ks7Gh8Rg9TGsW+
3vio0nz6rNIseUlpVHZWxbqPeVNpFO9pVqz7e3YJnaHurYW6V6z7mpoa7aHz
lStXur2F4+Pjw8LCFi9erH2anJwsV/7ggw9a+44UFhZq+Xz48GGXk6ZPnx4d
HZ2SkqJ9umrVKu2vChs2bNCeD2Cs7rOzs2NjY+12u/5qDQ0NMujkVubPn0/d
t0TdI+hlZ78zZ4544QVx/LjJs369GDzY30fVYzwYmx/2Q+reKOqeuqfuqXs3
ZN3fvVvozBsDqHsroe4V637btm36j5vXNHN8KjNfriw7/aOPPpJ9NHny5GXL
lp08edKxQmNj48CBA+U6UVFR6enptbW1rX3vNm7cKKu8tLRUfqw9Q8BY3Y8Z
M0aeNyYmRm5aZ7XPP/9crjZp0qS8vDzqviXqHkHv4MF35s0Tr79uekKKtLSm
3PDzO+IxHozND/shdW8UdU/dU/fUvRuy7u/KFDpD3VsLda9Y99oD6H379vXw
Bh8/fnzLw+WFh4fLZHask5qaqj0WL8kPZFAnJibm5ubq1LfKY/dHjhzRnm8f
Hx/f2jo5OTndunXr06eP3ER+fj513xJ1j6BH3TPnGpsf9kPq3ijqnrqn7ql7
N2Td37lH6Ax1by3UvWLdyyKWy8eOHeu8cO/evTExMQuafdgsLi7ubPPj8r17
95brR0ZGpqWlFRUVyZDXHqkfMWKE88GIDhw4oD0N3llUVJTL4fcdVOr+rNMz
EBISElqeWlNTM2zYMHmq9rZ91L1b1D2CXkDV/ZAhTdckN5cJoDl69JHq6mpf
74fUvVHUPXVP3VP3bsi6b5MldIa6txbqXn9c+rrlDbhs2TK5XBa688INGza4
nFHW99nmut+1a5c8tbKy0rFybm5ut27d5DotD8onV0tJSYmJidH+AiD17t07
Jyen5dU4Z91nZWWl6ho6dKi2CXkfdznvwoUL5fI5c+Zon1L3blH3CHqBU/fp
6eLNN8Utt4iRI5kAmpkz73f7P5R3UfdGUffUPXVP3bshf/O/Y6/Qmdepe0uh
7hUfu1+/fr0WxSdOnHAsLC4uTv7OihUrHHXfGu1Hgbwo7dO6ujqXNxVqbGzc
tm1beHi4XG3BggUtL+GcdR8VFdXyFQGtSU9Pd5zRcaz+devWpTTTXoDfu3dv
+fHu3bt1vq6QQt2brr6+Xt5Ntm7dugW+8cknXSIjxauvml/3Bw6IoUPFI48I
eX2YwJmpU+/Pzs729T2dujeKuqfuqXvq3g1Z97fvEzpD3VsLda9Y945D3Kem
prq9hXNzcx11L5u9qKgoPz/fZZ3Ro0c76n7u3LmtPUN+06ZN8qQBAwa0POmc
db9q1apFuuTFal/IuHHjnA/lp220NYHWdyai7k1XXl5+//3333PPPXfDN267
7ZrbbhOdOplf9w0NIjVVTJsmRo9mAmjmzPnjoUOHfH1Pp+6Nou6pe+qeundD
1v1tB4TOUPfWQt0r1r0UHR0tT3r77bfdPmaRmZnpqHu5ghbFBQUFjhWqqqq0
g9plZWWd/e7JAIMHD3Y+0r5m3bp18iS5uZZbUXzdfWFhobz+2oW7vGpS/qq2
+H/NmjWra/M78cmP16xZY2yLwYe6N11paemvfvWrp5566hn4xl/+cvuDDza9
I57pdS8nJ0esXCliY5kAmpUr28r/TXx9T6fujaLuqXvqnrp3Q9b9rw8KnXl9
IHVvJdS9et0fPnxYi2sZyElJSSUlJXKh3W6Xv+QkJCRoJzkeu+/Zs6f8dObM
mfX19Webn0s8b948uWTIkCHas/FloWh/ARgxYkR2dnZDQ9Om5b9bt27t06eP
XL5y5cqW10Gl7mXOR0ZGag/EV1VVnXN9XnfvFnVvrsbGRnlPvOiii7755ps8
+MbGjX3GjROdO5uf9kygjs0Pd3bq3ijqnrqn7ql7N2Td35otdIa6txbqXr3u
pYyMDC29NeHh4drD8Y5Oz8zM1NZ0HHCvX79+c+fOHT58uNb+O3fudFxaSkqK
9v712kkDBw50vEHeuHHjTp061fIKqNT97NmztSvpfKw/HdS9W9S9ubS6v+SS
S+R97QR8Iz198NSpAXFUPSZQx+aHO7u5df/iZ3VmjWJxKNZ91zlK868FSqN/
yK9zTodVxid8ktL8aYPS/GG70jzzmdI8+YXSqOysAyYIlQmbqTSK9zQr1v0t
OUJnqHtroe69UvdSWVnZ4sWLtQPfaXr27BkdHb1u3Trt8XeHr7/+un///o7V
5M+B3Nxcl0vLyckZP3689mx5TURExJIlS7RH/FvS/phwwunIfp5LTEwcNmyY
5+ctKCjQro+BbQUx6t5cWt1feuml8l+zr0vQCpxj5jOBOjY/7IfUvVHUPXVP
3VP3bsi6v/mQ0Bnq3lqoe2/VvcZut5eXl8v+LSoqkh/rrFZaWioz5PTp0zqX
JoOluLg4Ly/P7eP1XuRyiH4YQN2bi7r3A+qeOdfY/LAfUvdGUffUPXVP3bsh
6/6mXKEznal7S6HuvVv3CFnUvbmoez+QdT93btM74p05wzBupr7eJu+Jvt4P
qXujqHvqnrqn7t2Qdf+rPKEz1L21UPfUPbyCujcXde8Hsu7ff1/cfbfYvJlh
3ExaWrvy8nJf74fUvVHUPXVP3VP3bsi6vzFf6Ax1by3UPXUPr6DuzUXd+0FO
TlPd33STWLKEYdzMl18+WFRU5Ov9kLo3irqn7ql76t4NWfc3HBY6Q91bC3VP
3cMrqHtzUfd+UFn5zldfiSefFN27M4ybGTny91lZWb7eD6l7o6h76p66p+7d
kHV/fYHQmc6DqHsroe6pe3gFdW8u6t4P6urey8i47M03L3v1VYZxM4MHt9+1
a5ev90Pq3ijqnrqn7ql7N2Td//KI0Bnq3lqoe+oeXkHdm4u694PGxhN1dfkl
JQzjfsrLv62rq/P1fkjdG0XdU/fUPXXvhqz7644KnaHurSVg6/6bsrMBNWep
e+ii7s1F3QMhQv5fHJoPPSgWh2LdR6nN9J5Kk3+j0mx9wPgoZmbsa0qzyWbm
LH1RaVR2VsX9Le5VpVG8p1muF2Td/7xQ6Mxr1L2lUPfUPbyCujcXdQ+ECOre
KOqeuqfuqXs3ZN3/rEjoDHVvLdS9t+rebrfv2bMnJiZm7NixERERY8aMWbRo
0ebNmxsaGlzW3Llz55oWtm7d6rxOTU3N2rVr58+f3/QjLipKfrB69epTp065
XFRJSYm8S8pT58yZ89lnnxUUFKjvEq2pqKhYtWrVvGbyA/mp77ZlRdS9uah7
IERQ90ZR99Q9dU/duyFT4tpioTPUvbVQ916p+/Lychn1Xd0ZPXq0yzsEySZq
udqoUaMcKxw5ciQyMrLlOhEREfIkx2qbN28OCwtzXqFbt26JiYle30mkffv2
9e7d23lbffr0kQt9sS2Lou7NRd0DIYK6N4q6p+6pe+reDVn31xwTOkPdWwt1
r173NTU1Q4YM0Zo3NjY2IyOjuLg4OztbhnbPnj3lQnmq4xH8+vp6Lcnj4+OX
Olm3bp3jAidOnChXGDRoUFJSUkGz5ORkbRPh4eHaRRUWFmqXM2nSpNTU1B07
dkyfPl27DgcOHPDuTiK3OHDgQO0vFdu3b09LS4uOjpafyoVnzpzx7rasi7o3
F3UfgOSPjlqEkrq6Orvd7uv9iro3irqn7ql76t4NWfdXlwideW0wdW8l1L16
3cfFxcmTevTo0fKx7KNHj8rl8lRZQ9oSmR7y0/79+7f2HamqqurevbtcR0a0
8/KsrCwt3vfv33+2+Z7oHPtnm18aMHToULlwyZIlxnaG1uTn52ubll+OtqSw
sFBbcujQIe9uy7qoe3NR94FGfkcqKioOI5R8++23NTU1vt61qHujqHvqnrqn
7t2QTXFVqdAZ6t5aqHvFupe/yWgP0K9cudLtLRwfHx8WFrZ48WLt0+TkZLny
Bx980Np3xBHOh1tEyvTp06Ojo1NSUuTHS5cuHTRokPzXeYWEhAR5Rrma5zuA
lJ2dHRsbq/OAS15ennaVHK+1r66u1p45sHfv3vPaVhCj7s1F3Qca+VNi1apV
K1Ys+fRTJlRm/fovS0pKfL1rUfdGUffUPXVP3bsh6/7KMqEz1L21UPeKdb9t
2zatfI8fP+72Fq5p5vhUZr4W4B999JHso8mTJy9btuzkyZOOFWSkaE+Dj4qK
Sk9Pr62t9fy7qb32f8WKFZ6fRRozZow8V0xMjNy02xVk+IeHh2uvO6iqqpJf
ztKlS+Wnb7/9Ns/Md6DuzUXdBxr5jbj88stuu+3SO+9kQmWeffah5ORkX+9a
1L1R1D11T91T927Iur/iuNAZ6t5aqHvFul+1apVc3rdvXw9v8PHjx7c8XJ5s
57y8PMc6qampjsPlyQ8mTZqUmJiYm5vbWn1rNm3apB1YT67p8fe/yZEjR3r1
6qUdCqC1dbKysrTA79FMfiDPkpSUdF4bCm7Uvbmo+0CTn59/ySVi7FgxeTIT
KvPRR390/r/MR6h7o6h76p66p+7dkHV/ebnQmVepe0uh7hXrXhaxXD527Fjn
hXv37o2JiVnQ7MNmcXFxZ5sDRDvyfGRkZFpaWlFRkQx57ZH6ESNGOD8OfuDA
AVlPLn8EiIqKcjn8vkN6errsermOy3P1PeR4BkJCQoLbFWTIay9AcJBXmxfd
O6PuzUXdB5rDh/OvvVZUV8u7AxM6Y/PDrkXdG0XdU/fUPXXvhqz7n54QOkPd
Wwt1rz8ufd3yBly2bJmWus4LN2zY4HLGsLCws80BsmvXLnlqZWWlY+Xc3Fwt
zFselE+ulpKSEhMTo/0FQOrdu3dOTo7Laps2bdIuYerUqfX19W6/0VlZWam6
tCPySfI+7nLe7Oxs7aSlS5ceb6a9wF9u1OvH57cu6t5c1H2goe5Dcmx+2LWo
e6OU6n74KKXZf7vSbP+D0ix/3vgMjVaaFc8pzVd/UZrPnlGa//5daVR2VsU/
qsS8qTSK9zQr1v1lFUJnqHtroe4VH7tfv369Vr4nTpxwLCwuLk7+zooVKxx1
3xrtR4G8KO3Turo6l9ezy3LZtm2b9tz4BQsWOJ+kXb40d+5cnVfBR0VFtXxF
QGvS09Odz6u1/Jw5c5wXxsTEdNV9Mn+ooe7NRd0HGuo+JMfmh12LujeKuqfu
qXvq3g1Z95dWCp2h7q2Fulese8ch7lNTU93ewrm5uY66l/VdVFSUn5/vss7o
0aMddS8jvbVnyGuvrB8wYID2qcwZ7XUB0rJly/Rflb9q1apFuuTFahc1btw4
l0P5jRo1Si7fvHmz88KMjAy5cNiwYTobDSnUvbmo+0BD3Yfk2Pywa1H3RlH3
1D11T927Iev+JyeFzrw6hLq3Eupese6l6Ojors0HkM/Ozm55amZmpqPuHU9x
LygocKxQVVWlHdQuKyvr7HdPBhg8eHDLdw1et26dPEluTvtUJrn29HiX7jag
sLBQXn/twqurq11OnTx5sjzp008/dV4oNyoXyvBX3HTQoO7NRd0HGuo+JMfm
h12LujeKuqfuqXvq3g1Z9xefEhdXtTrUvbVQ9+p1L2tCO8S9DOSkpCTt3X7t
drtM5oSEBO0kx2P32rHpZs6cqb1AXv47b948uWTIkCHa8+pLS0u1vwCMGDEi
Ozu7oaFBLpT/bt26tU+fPnL5ypUr5ZI9e/ZoqyUnJzf8L513rndL5nxkZKS8
KBlrVVVVLVeQ93p5qty6o5tOnDghr7BcuGTJkvPaVhCj7s1F3Qca6j4kx+aH
XYu6N4q6p+6pe+reDfl7/kWnhc6o1/233377xRdfxMfHy20dOXKktdVkkmxt
XXl5+TlXULyewYG6V6/7s81PU9fSWxMeHq49HO/o9MzMTG1NxwH3+vXrN3fu
3OHDh2vtv3PnTselpaSkaO86p500cOBAxxvkjRs37tSpU3IdGVatvWp+ypQp
57UPzJ49W7uSzsf6c1ZXV6flf8+ePT/44IN58+ZpX+ygQYPc/jUgNFH35qLu
A00o1P2pU6KiQlRWMv9/Tp1q39qRXb2IujeKuqfuqXvq3g1Z3D+uFjrzilrd
f/XVV927d3d0Srdu3dauXet2Tcfrnd1KT08/5woq1zNoUPdeqXuprKxs8eLF
2oHvNLKFo6Oj161bpz3+7vD111/379/fsZr8OdDyHepzcnLGjx+vPVteExER
sWTJEu0XJ7vd7nw3Uaz7xMTEYcOGOR8VsCUZ/jLqtSPza2bOnMmfyJxR9+ai
7gNN0Ne9/NJ69xZPPSX+/nfx9NNM0/Tq9bsdO3b4etei7o2i7ql76p66d0PW
/Y9qhM6o1L0sGpkPPXr02LBhg2zzNWvWaAnj9re1kydPftKC9gro3r17Hzt2
7JwrKNwMwYO691bda2R3y+YtKCgoKirSeYa8PKm0tFTu2KdPn9a5NBksxcXF
eXl52uP1vqNzsH2X1Y42q6ur8+n1sSLq3lzUfaAJ+ro/dUo8+KC4/XZx993i
t79lmqZTp9+mpKT4etei7o2i7ql76p66d0PW/f/VCp1RqfuZM2fKG2T16tWO
JV9++aVc8tFHH3ly9rKysn79+nXr1q21Px2fc4UQRN17t+4Rsqh7c1H3gSbo
676yUvz852L9erFjh8jIYJpm//6HW3uFlxdR90ZR99Q9dU/duyHr/od1QmcM
17383Ux7Ma/zM4TlfxMyxnv16uXy3Ga3tCN76/wp4JwrhCDqnrqHV1D35qLu
A00w1f2ZM+L0adcpKhJXXSX27RMlJaKsjGmaEyfa++GZXdS9UdQ9dU/dU/du
yLr/wRmhM69EGKz7Y8eOyVujf//+Lsu1t+EuLi7WP3taWlrX5qOZtXaYr3Ou
EJqoe+oeXkHdm4u6DzRBU/cy7TMzxerVrrNihbj8cnHwoKipEXY7o43ND7sW
dW+UUt2PiVAaxdpK+IfSfP2I8VH5y4AcxWue+kelUfyryDcPKY3Kzqr416SZ
YUqjeE+zXC/Iur+wXuiM4brPzc2Vt8a7777rslwukcvdvpO4g91uHzp0qFxt
w4YNxlYIWZ7XvZ//Pz1nbsvrQ90jcFD35qLuA01w1H1jo6iqEomJIjbWdebO
FT/9qcjObsp/069nwIzND7sWdW8UdU/dU/fUvRuy7r/fIHTGcN3v27dP3hry
N0aX5ePGjZPL9+7dq3Pe7du3y3UGDBjQ2lPCzrlCyKLuqXt4BXVvLuo+0ARH
3dfUND1wf8UV4oUXXOfZZ8WllzY9dk/dO43ND7sWdW8UdU/dU/fUvRuy7r9n
FzrTWt0fOHBgfysKCwvPflf3Y8eOdTmjXCKXy9V0rpW2jvPh+M53hZBF3VP3
8Arq3lzUfaAJjrqX13/nTnHJJWLYMNcZMEBcdhl17zI2P+xa1L1R1D11T91T
927Iur+gUejMy+7q3m63t/be3NobZ8t18vLy5MdRUVEu59VupYKCgtauUnl5
ebdmrb1h9zlXCGU63xe0ZPa3C4GLujcXdR9ogqPuq6qaDol/883uj6p39dU8
M99lbH7YtbpS9wZR99Q9dU/du7fwXNyea9GiRR+1YuPGjWeb379e3hp9+vSR
v6Q5n7F3795yuTy1tevz1VdfyRUmTZpkeAUAUETdm4u6DzTBVPe33OLmpMrK
pqPqJSaK9HSxezfTNAcPPqzz25q3UPdGUffUPXVP3fvbkCFDuv7vw/TyY7kk
IiJC51yzZs2S63z55ZeGVwAARdS9uaj7QBP0dV9RIS64QDz1lHj+edGpE9M0
/frdl5GR4etdi7o3irqn7ql76t7fEhIS5A0ybdo07d3t5b9Tp06VS5YvX66t
cPr06ZycnLy8POdzDRo0SK6ze/fu1i72nCsAgCLq3lzUfaAJ+rqvqZExK4YP
VyqmIJsZM+6Xv6T5etei7o2i7ql76p6697eTJ0/279+/a/OR82XRjxkzRn4s
29zxRC9Z6HJJ3759HWepra3VXhBdWlrq9jLPuQIAqKPuzUXdB5qgr/vGRlFQ
INasEV98wfz/SUp6qKSkxNe7FnVvFHVP3VP31L0JysrKxo4d261bNy3J5S+Q
2hH1NVrd9+vXz3l9ueTtt992ebW+5ysAgDrq3lzUfaCxUN2fOtX0NHu3U1go
vv666ah6bs9YWSkOHWo6sB6jTUHBI6dPn/b1rkXdG6VU9yueU5o3Y5Sm40ql
+fRZ47Pur0rzapzSLOqsNJvbK03Kg0qjsrM+8rVQmah3lEbxnkbdu1VVVZWf
n19eXm72FQEAj1D35qLuA42F6r64uOlR+MOH3cy+fU0PSbdW90yLsflh16Lu
jaLuqXvqnroHAHiEujcXde9Fa9eu7dOnz2uvvdZNwauvvnrVVYFe93a72LVL
dOwonnxSPP20m3nqKfHoo+KGG8y/qhYZmx/2T+reKOqeuqfuqXsAgEdCre7H
jBkzbNiw2oBRXV2dnZ1N3XvFggXzH3us3b333tq+/X2G54EH7rryykCv+/p6
sXGjuP76pkfn77zTzdxxh7j11qYVTL+qFhmbH/ZP6t4o6p66p+6pewCAR0Kt
7vv373/vvfcuCRgff/zxzJkzL7nkEupeXffujw4fftnUqT+Oi/uJ4Zky5ZJr
rgn0uj9zRsTHixdeEEuWiC1b3MyGDeKjj8RNN5l/VS0yNj/sn9S9UdQ9dU/d
U/cAAI+EVN1v27ZN1v111103IWCMHz8+IiLi4osvpu7VvfjijdOmiS+/FGlp
xmflShH4dV9XJ+bPF2FhYv9+9yvoHDNfZRobm95QL/imrs5mt9t9vX9S90ZR
99Q9dU/dI9SdOHHiyy+/nDJlitxXhw0bNn369E8//dTEX55ramrWrl07f/58
eX2ioqLkB6tXrz516pRZ1wdwCKm6lz8ZNmzY0Llz54iAMWTIkB49elx00UXU
vbqXXrpRNm9qqjh50vjs2UPdux+7XRQViXnzmjYdZLN8edsjR474ev+k7o2i
7ql76p66R0jbtGmT/G25awthYWEy+f3w93kX8neGyMjIltdH/mLvh18nAH0h
VfcNDQ2HDh0aM2bMuwFj1KhRAwcOpO69QtZ9TExT1ao07OHDIvCPmW9K3Z85
I9LTxZAhIjIy2Gbq1PtzcnJ8vX9S90ZR99Q9dU/dI3StX79ea+dhw4Zt3rxZ
/iZfVFSUlpY2YcIEbblc6OerNHHiRLndQYMGJSUlFTRLTk4eMmSIXBgeHi5z
w8/XB3AWUnUv1dfXlweSsrKy3bt3c1Q9r6DufVr3paXizTdF375i5EgxalRQ
zaxZ1D11T91T99Q9dY+AU1pa2rNnT7lzzpgxo7a21vkku92+YMECeVJkZKQ/
H76vqqrq3r273G5aWprz8qysLO2vDfv37/fblQFaCrW6DzS8I54XUfc+rftj
x8Qzz4hBg8SUKWLq1KCa+PgH8vPzfb1/UvdGUffUPXVP3SNEffbZZ9oD4m5f
0l5eXh4WFjZo0KCioiK/XaXCwkKt4lv+6j59+vTo6OiUlBS/XRmgJereXNS9
F1H3Pq37kpKmo/THxzc9iF9REVRz8mT7+vp6X++f5tb9N2VnzRrF4lCs++XP
K83HLyvNPxKUZumLxmeTTWnenqo070QpzUevK037zUqjsrNuaStUJvWPSqN4
T6PuEYBGjBgh98yFCxe2tkJFRYU/r8/Z5l/dBw4cKK9VVFRUenq6yzMKANNR
9+ai7r2IunfM6dNi505x3XXim2+8NomJ4m9/E8uXN70A3/RbwNtj88P+Sd0b
Rd1T99Q9dY9QJH9JDgsLk3vm+vXrzb4u/yM1NVW7YtqR/SZNmpSYmJibmyuv
sNlXDaDuTUbdexF177zCnj3i+99vevjeW3PzzeKmm6h746h7o6h76p66p+4R
ik6ePKkVdFZWlvPyjz/+eMF3PmzmsoIfHDhw4L333nM5Zn5UVJQ/XyMAuEXd
m4u696JAqPv6epGd3RTdPp3MTPHuu+I//2m17uXVyMsTjzwinnrKa/PYY+KO
O6h746h7o6h76p66p+4Riurq6rRq/vrrr52X9+vXzyWrv/jiC1OuYWVlZUpK
SkxMjPZcfal3795+OE4voIO6Nxd170Wm131jozhxoum4c716iZ49fThhYeJP
fxIvvyz27Wv1yjQ0iCNHRE6O12bbNvH009S9cdS9UdQ9dU/dU/cIUX379pV7
5qJFi5wXbtu2Lfk72gvz/Vz3dXV1Z86ccV4if5+X1yo8PFxemQULFvjzygAu
qHtzUfdeZHrdy6DOzf3/bxvXr58Pp3dv8de/nqPuGxubXn1fXu61OXiw6Zj5
S5aIoqKmA+sF05w40V7+T+3r/ZO6N4q6p+6pe+oeIWr27Nlyz5QJ39qbyH/w
wQd+rvu5c+fKLSYkJLQ8adOmTfKkAQMG+O3KAC1R9+ai7r3I9LqX51q6VDz4
oJg5s+l18b6b2bPFG2+I11/Xq3uvT3Fx01H15swRK1aITz8Nqlm//sFjx475
ev+k7o2i7ql76p66R4javXu39oz3OXPmtAx8u90+duxYP9f9+vXr5RYHDx5c
U1PjctK6devkSdHR0X67MkBL1L25qHsvCoS6/+QT8Ze/NB1hPj3dh7N1qxgx
QnTp0urr7n0xFRVi5EgRHq6UWoE5M2bc74dXyVH3RlH31D11T90jdMmu1wJ/
xowZBw4c0J5rV1VVlZGRMXLkSP+/7r60tFTb6IgRI7Kzs7W/Och/t27d2qdP
H7l85cqVfrsyQEvUvbmoey8KkLr/+9+b3m7ep6F9zmPm+2Jqa8WaNaJDh6bn
5wfZ9O59344dO3y9f1L3RlH31D11T90jdFVXV0+fPt1xAL2wsDDHIeyk7t27
L168WMa+P69SSkpKjx49nK+P4w3yxo0bd+rUKX9eGcAFdW8u6t6LqHufTkND
07H14uPF4sXBNl9++aAf3sKGujeKuqfuqXvqHqFuy5Yt48ePdz5O/uDBg+fM
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
qHsAAAAAAKyOugcAAAAAwOqoewAAAAAArI66BwAAAADA6qh7AAAAAACsjroH
AAAAAMDqqHsAAAAAAKyOugcAAAAAwOqoewAAAAAArI66BwBTNDY2fvXVV716
9erQoUP79u3lBwsXLiwrK/PP1ouKiqZNm9a1a9dHHnnkn//85/jx47/++mv/
bBoAAAC+QN0DgP/t27fv7rvvFi1cf/3127dv9/XWP//886uuuqrl1gcOHNjY
2OjrrQMAAMAXqHsA8LPk5ORLL71U/tS99dZbZ82atX///r1797733nt33nmn
XPijH/0oPz/fd1uvq6vTtv7Xv/51/vz5ubm5O3fuHDFihNyuXDhq1CjfbRoA
AAC+Q90DgD9VVFRcf/318kduhw4dqqqqnE8qKiq65JJL5ElRUVG+uwJr166V
m7j66qurq6udl0+fPl0ub9Omje82DQAAAN+h7gHAn3r16qU9al9TU9Py1FGj
RslT//jHP/ruCsTFxclN3H333S7LS0pKbr75Zrnpuro6320dAAAAPkLdA4Df
VFdXX3bZZfLn7WeffeZ2hYaGBrfV70Xffvut9jP/lVdeOX78uE+3BQAAAL+h
7gHAb5YuXSp/2F5++eVnzpwx8WpMmzbtggsukNfkkksu6du3r09f5g8AAAD/
oO4BwG9Gjhwpf9g+++yzjiXl5eVRLWRkZPj6mnzyySc33XST9sP/wgsvfOON
NwoKCny9UQAAAPgOdQ8AftOlSxf5w7Znz56OJYmJiS3fmW79+vV+uDINDQ0f
f/zxPffco230F7/4RU5Ojh+2CwAAAF+g7gHAbzp37ix/2Pbu3dux5NChQ3Hf
0Q6pd8EFF1RWVvruOtjtdudPGxsbExISrr76au098ny3XQAAAPgUdQ8AfhMV
FaW9F57bU7Wj2f/mN7/x0dYPHTp0xRVX/PznP2950qJFi+Smf/zjH5t7QAAA
AAAYRt0DgN98+umnWkS7PZBdnz595Kmvv/66j7ZeU1Pz/e9/X26i5TPwN23a
JJdfe+21Lo/sAwAAwCqoewDwG9nOd911l/x5265dO+ej2FVUVEycOPGqq66S
J02bNs13V0Db+gMPPFBcXOxYePTo0d/+9rdyeVhYmO82DQAAAJ+i7gHAn7Zs
2XLttdfKH7kXX3zxX/7yl1deeeXhhx+WH2s/h2+++eb9+/f7dOs//OEPta23
bdv2tddee+KJJ/7v//5PLrn77rvz8vJ8t2kAAAD4FHUPAH527NixTp06XX75
5Y4fv/LjP//5zwkJCQ0NDb7eelJS0lNPPaW9373mxhtv7NGjR3V1ta83DQAA
AN+h7gHALEePHt2+fbvzk+T9pqam5uDBg3LrJ06c8P/WAQAA4HXUPQAAAAAA
VkfdAwAAAABgddQ9AAAAAABWR90DAAAAAGB11D0AAAAAAFZH3QMAAAAAYHXU
PQAAAAAAVkfdAwAAAABgddQ9AAAAAABWR90DAAAAAGB11D0AAAAAAFZH3QMA
AAAAYHXUPQAAAAAAVkfdAwAAAABgddQ9AAAAAABWR90DAAAAAGB11D0AAAAA
AFZH3QMAAAAAYHXUPQAAAAAAVkfdAwAAAABgddQ9AAAAAABWR90DAAAAAGB1
1D0AAAAAAFZH3QMAAAAAYHXUPQBAR25u7ieffHLy5Emzr0ggkjfOokWLPv/8
c2Pn5YY115kzZ1atWpWWlmb2FQEAwDuoewAIemc80NDQ0PKMhw4d+t73vif/
g7j33nv9f7UD36xZs+SNc8cdd5zvGblhA8Ebb7yh/f7z2WefmX1dAADwAuoe
AIJbbm6u8MDgwYNbnve///2vduqFF15YVVXl/ytvjN1uX7NmjfzX1xsyXPce
3rBlZWXbt28vKChQu5pw77777tO+CxERETqr7d69W34XvLg77dmz5/Dhw966
NAAAHKh7AAhu+fn5P/1fjh/7zgvHjx/f8rx1dXWdOnW65ZZbxo0b5/9rblhc
XNyvf/1rt89G8C7Dde/hDTtjxgx5+eHh4QrXEa369NNP77rrLpvNlpubq7Pa
1VdfLb8LXnwNxeTJkx966CFvXRoAAA7UPQCEmp/85CfyZ/7ixYvNviI+cebM
mZtvvjkmJsYP2zJc9x6Kioqi7s1lt9u111B4se6rqqquvPJKY4drAABAB3UP
AKHG63UvayUzM9P50x07dtTW1ra2fmVl5fbt24uLi711BZxNnz79uuuuq6+v
b22FhoaGvLy81NTUgoKCxsZGTy5Trnb06FF5ln379jk/JcCl7mtqatLT00tL
SxW/BIeePXsaqPvWrq2DgVtAOn36tPwuy2+cF79AX5A7Xlpamrf2LvnFar8j
eVL38saU25U30aFDh/Rv2JEjR955551+ePEIACCkUPcAEGr06/5nP/vZpS28
/PLLLqvt2bPnsssue+ONN4YOHfqjH/1IXuAtt9xSVlY2bNiwiy66SH7685//
PCsry+VcCQkJt99++wUXXKD9v3P11Ve/9957XnwKfVVV1bXXXvvuu++6PXXb
tm2vv/76FVdc4fiP75JLLomOjm75pwCZ1fKr/uKLL+THsbGxt912m+Ms119/
vWM1re7vuece+ZX++c9//uEPf6itc9NNN61atcrlMj28YaW77rrrxhtvvOaa
a7QLlP+6nGvTpk0Gru153QIy/H/605+2b99eflxUVPTaa6/94Ac/0M7yve99
b968edpq7dq1k5t2e4PX1NTIrctTN27c6PbboWPNmjXyjFdeeWXLky6//HJ5
0ubNmx1L2rRpI5ecPn06OTn5scce+/GPf6xdT3k7bN261fm8H3zwQctvgbRr
1y6XrcyZM+fWW2+97rrrHK9kkfca57M88cQTzutXV1cPGDDA+Ya9+OKLH330
0Za7geb48ePyll+4cOH53jIAAOig7gEg1JxX3Wv/QTzzzDMuq6WlpcnlWtfL
zNdWk52rvZxf+/Qf//iH81leffVVbbnspueee65t27bac57/9re/eetLe//9
92WEHjt2rOVJ2rPcHfX9yCOPXHXVVdqnvXr1clm5c+fOcrksZXmB2joXXHDB
DTfcIMvR+RXTWt07boef//zn8ha48MILtfUXLVrkfJke3rCSjETndc5Z9x5e
2/O6BQ4dOiSa/2Ij0/43v/mNtpr8RsuvQn6wdu1abbXp06fLT6+55hrZ8i6X
EBcXJ0+68cYbDTxCnZiYKM8rv5UtT/r+978vT1q/fr1jybXXXiuXvPPOO/KG
knvUnXfe+atf/Uq7wpdffnllZaVjTZe61+4IUkZGhstWZsyYoa3j+IuNft13
6tRJW03e4PLb8fjjj2s3lDR27Fi3X2O/fv3kHeF8bxkAAHRQ9wAQas7rmfmy
QXTqXpJdc+bMmQULFmifyvVlzQ0dOlR+/Mtf/tKx/uzZs+USmWZz5851PGk5
OTlZ+1OALFOvfGnt2rWTYeX2pI0bN8ptjRw50vHE8tra2i5duojmA9e7HFdN
6+Xf/va38t/bb79dXudvv/32bPPR8PLy8hyrOepefqWOR6jz8/PbtGkjmh83
l+u3dlVbu2Gd/f3vfxcePDPfw2t7XreAVvc/+tGPtOda9OjRY/PmzdqzLORl
Ol52UV1drR10bv78+S7X6tFHH5XLR48erX/l3TJQ99KDDz544MABbaHcvbWF
06dPb20rMvxbq3uH9PR0bR2dZ+YXFhZq68TFxTkWynvBxx9//PTTT7f2ngip
qanyLC2fNgAAgGHUPQCEGi/W/fe+9z3tgfIjR47IT3/xi19o3SfjS3vQWVu5
pqbm4osvlkuio6NdLmfixIlyuSxB1a/q7Fl5TeT1kcXd2gotW/v06dPaQ+RL
lixxXq71snT//feXl5e3doFa3f/sZz8rKytzXp6UlKSdXefIaV6v+3Ne27Pn
cwtoda/R/9vLqFGj5Dp33XWX88KDBw9qeV5UVKR/5d0yUPcdO3Z0+epk7At3
T0tw8FbdZ2ZmaussX778HF+Yk8bGRnl/kbee52cBAEAfdQ8AocaLde/odxmJ
8tO7775b+1TmkvaIsPbptm3btE9btqe2pgw041/PdzZu3CgvSmbpOdc8cODA
p59++t5773Xr1k1r2zFjxjivoPWyvKH03ytN55j51113nTxp0qRJrZ3X63V/
zmvr7Jy3gKPudepYo72EXDg9XV8aNGiQaPHSDM8ZqPulS5e6rKk9LeH5559v
bSveqnupbdu2ovmpKfJLTkhIqK6u1lnZQa78wgsveLImAACeoO4BINT4v+7n
zp2r/UfzwxYc/wepH1svPj5e5tX/Y+9O4Gys+/+PX62WREIlpURIpJuKhKFF
ttut0OKWorKGyNKEEskSbpFCtoisKTuFsWRfxjCYLIOxDsY2zD7z/3S+v67/
1Tlnzlxnn3PO6/n4PDzGdb7nOt9zrnN9z/U+51ocnC0/Nja2Y8eOxYsX12wM
GDDA2FLl5TZt2jh+RAfpXsW9rl27Zndfj6f7HHub5cwroKf748eP5zhb9Vwa
NGig/puamnrPPffIlN9//z3H+9rlkXSvetWkSZPsHsWD6V5m1bp1a3UeCc1y
Sr2mTZvOnj3b8bta3h7PPfecgwYAADiFdA8Aocb36V4ddC/aZaNTp07uP6/R
o0c72Adg7dq1RYoU0Sz7CbRv337hwoX79u2TbqvDw+2m+3fffdfxIzpI9xUr
VpSb+vXrl919PZ7uc+ytU6+Anu7j4uIczzbLclyGJPGbbrrpwIED8t8FCxZo
llPWm7/cnhUPpnsHr7AH070iL9pXX31Vq1Yt1UnNclrCDRs2ZNd+0KBBjz/+
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
5s0rV66cvg9/sWLFhgwZYjWkT58+vWDBgv369ZNtxd69e5cuXVo1vvXWW7t3
726b8c+dO/fqq6/qR3s9/PDDc+fOve+++2zTvYxLd911V+3ateVv2eZs1arV
bbfdpu518803f//998bGsrLLMKU2UNWjV69eXdYX29fhwoUL7du312clLQsa
vPXWW651YNu2ba1bt5bNZn3dKVCgwODBg42buPLKSw/ffvvtTz75RL0C8nJJ
f/r27Zs/f375b/HixaOjo+0vPwC5jwvp3sy4Kq5duzZmzJiqVavqLeUPGdaM
3wqKCRMmlClTpkSJEvoehrKtYhzTXn75Zb2xSvdNmzbVDDvnP/TQQyVLlpRt
D9t0b2ZYE48++qg8kESDQYMGyaxUSxniZNPaNkEA8Jf58+er1XPhwoVm2stm
lazay5Ytk79nzJhRtmxZfSh48MEHrRqvXr36iSeeUHsQiaJFi8q2jdVvFitX
rpQZFilSxPaxChcuLDcZd4qePHmyTAkPD4+KinrhhRfy5Mmj5ixD1qJFi+x2
uEOHDtJAHlc2pdR4JZHQttnatWtr1aqlPxcZWmVbtFevXrKBatVS7t6zZ0/j
GHjHHXfUqVPH7inQzW+IZlm2vadNm1a+fHn9FZMxXAZnCebGZrJ5XNCGfLjY
nafJEbtixYryGt5zzz3qAA3512r+ERERrnUgy9zbQFSoUEHmc/369Y0bN770
0kv58uVT7eU9tmXLFqvG5peXCxyne6f6KWbOnGn1ISgfi1o26d7MxoDkBemA
LC+rT+cBAwao6ZcuXTL5TDUDk3dB7pdduhdTpkxRA5FxBJCNUtVeNh1feeUV
GaPU2lq/fn3jfb/77juZ2LBhw5o1a6oVuXLlyjL6qfvKu9rYOCYm5t5779XH
ZxkB9KO9NJt0f+TIEc2Sf+UtLQOgaiPDpvoqYNWqVXrLuLg4fW2S3j7zzDMq
O99yyy3jx483zjMlJeWpp55SI17btm3btGmjYrVaVYXxoDPzHVB7NymlSpWS
UUheB/XfDz74QG+2Y8cOtb5rf/9SJtQX6fqWefPmzc0vUwD+5Wy6NzmuyphT
vHhx1VKGU2lWqVIlGdDkvzJkGU+CNG7cOLW5pR9Im2O6Hzt2rPb3zvlbt26V
v7t06SIJXftnujc5rAk1qsvmlvockc0YdQYAIZtGjvfjAuAz/fr1U6uzyZ+J
33rrLWkvuV7tXaxZgpVsbknGqVGjhrHl559/ro9Xzz77rL5J9vjjj1++fFlv
tnTpUs1yGlLbx1Ljm2RDfYravJSRUA1u8oe+0SjdmD59utUcJBapkUfFrkce
eUT+lgBl1UwisMpoMqA1a9ZM8pcMWeq3myJFiljtIiUN1BOR5yuvRr169dQW
oBg6dKixpfkN0SzLT9syQ9VYhnTZLpWnpl4B2To1foVrFa7VXf7zn//YvoDm
R2yJ/8a5OZXuHXQgy/TbIOvvT43PPvtMHl0+BKWB+gQRhQsXNn4t7NTycoHj
dG++n6J79+7qJln0VatWveeee/QlYpvuTW4MyKaF+tn0pZde0ldbeYerd4vt
29sBzcD8vZDLOUj3+nGXhw8fVlNkLFKD0sSJE/W308aNG1UIlaFev68afkWe
PHm+/vprtSPKxYsXZb1WK6PxgV588UXNcrp+/XvXc+fOySih5mA33cs6or7a
6tSpk2xIqy+1YmNjjd8ENm7cWD3W77//rqYkJCTICiITZUw4dOiQ3lKdQkTW
5T///FNNiY6OlqFVnumuXbusXhbzHVi7dq28MjKs6Xvsy63vvvuuZtnWPXr0
qJqo0r2QAUpeKPWlipABISMj45NPPpG/H3jggWwXIYBcRk/3sqU39p/kw137
Z7o3P66KOnXq1K1bV8YW/Zt8SeLqR5m2bdva9mTnzp2qJznumb9mzZqyZcuq
nfN79eqlWU4RrDbDjOne5LCW9ff2j+jQoYP+6MOGDVMTv/32W6deUgBeok61
1LBhQ5PtVbqvXLmy/CsbQjJwqQMqZegw/sQsWUMFk5YtW+pXD5k7d676oef9
99/XW7qQ7tV2kQxHauKxY8fUMfUPPvig1TeHsgUo02U4UqOruhRIixYtrB6o
Xbt2muWHFePP+sePH3/vvfemTZtmbHnq1CnVgR9//FGfKFtrs2bNatKkiVWu
NL8hKmQMVwNpv3799I1J2R6WBVSvXj0H1z1R+dFuuDY/YuvUJ4JTe+Y76ID5
t0GW4VNDwkJMTIyaKBFbTfzmm2/0luaXl2vMpHsz/dywYYP6FV5eHD31y1tF
fWpbpXunNga2bdumvs0YMWJElmV/EvVtvN0tAQdI90HJQbrXb1K/RyclJamV
cfDgwVYt1aFMstmpT1HDr0Rg45icZdn/Ss3zwoULaoqMPGrK1KlTrWarvg+0
m+4Vq7e6kb51PWfOHON0ef/ff//9VlvX6ruyzp07G1uqYbZ///5WczbZAcX2
9ykZ3NTzmj17tpqi0r2Mfmpvori4OPmvdFKN7fICapYvUR0/EIDcQx9/sqOP
P06Nq1n2hhTxxRdfSMvy5cvb3mQ+3cvGp/qFZcWKFRLzS5UqJTep0+Zb7ftn
ZljL+nv7x/Z5vfDCC7ZbNQD8pUqVKlabQBJY/mcgW3TG9irdi6efflqyanaz
rVu3rrSpWLGiVSwdPXq0urv+e4oL6f6+++7TNyMViVFqtlYbjZIfNcNFSNU2
Vf78+a0uV6p+jn/mmWdyPC5+79696oEWLFjguKVTG6KSglXjgQMH2s7K8W4V
DsJ1lukRW+fZdG/+bZD196dG48aNrfqsfhk07mxgfnm5xky6N9PPsLAwmSK5
2+p0XurkZsbPQWc3BsRXX32lolZ0dHTPnj01y/7Gzu63YNwyceqOyM0cpPvj
x4+rm9S3o9u2bdMs3/XZDua7d+/WLF+N6lPU8PvYY49ZtVTRVURFRakp6s0p
A53t15J2z5mvh2urfYqsjBw5UtqULFnSdkhUR7uUK1dOn9K8eXOZ8vrrrxub
qaNQO3XqZHV3kx2wIp+VCxcuHDJkSPv27dWg+uWXX6qbVLrX87uMuprl5Dbq
v+q1lZfd/GMB8C99o042LDv9k/p2Xd+oc2pcNbp27ZpszX7//fe9evWqXbu2
ls13gE6l+0OHDmmWS6XIv/369cvKJt3rHAxrWX9v/1ht1grps2bZWSu7/gDw
JZXujVs7stoat/kLFy5sbK/SvcQfu7/86tSYMGnSJKvpycnJ6uBHPTq5kO5t
Ny9FiRIl5CbJTfqUtLQ0tSO6vmuoTFFnbLYamqQP6ifm0qVLDxgw4MCBAw6e
WvXq1TXLb6yy9Thv3jy7R/FnObkhqg5zKFasmFNndVYcp3ud4xFb59l0b/5t
kJX9p4ba2eDVV1/Vpzi1vFxgJt3n2E9Z7mo+Vt+PZdk7Z74LGwMy/5dfflmz
HNQsr4asQRIonH2mpPug5CDd6xuo6nDOiRMnqv/ebkN/Y+g7i2Y3/F65ckW1
1Pd4f+edd+S/L774om3fHKf748ePO3hebdq0kTb16tWzvennn3/WLL+V6wOy
+g4tT548+lfBZ8+eVXu8TJ482eruJjugxMbGduzYUT9U1kiGI9WGdA8EGfPH
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
PTEx0YPPy3YRZJlbCnv27NGc8fPPPzt44ln2lp0tM+lenrjK6W3btrXbQB10
L9plw3bXi1yFdA8AAAAEDX0/fNvLtLmc7jMyMtQO0rZHhaenp995553Gm5Yv
X646YHWlvCxnomVqamqBAgXkppkzZ+oT3d8nfMKECZrlaGu1g7dHupqSkqKO
TTB2VSa++OKLVhlWgqfxRIU6k+l+2LBhmuXU+jne5L1FkGVuKaSlpf1pwk8/
/aRZThfgYH97ndWys5Vjut+zZ486wKRhw4bSQ7ttNm7cqF66kydP5tilXIh0
DwAAAAQNiduS1GTb/qmnnrL6mdjldC+ee+45zXLmPavp33//vYoS+/btU1P0
323lD2PLSZMmqelmoqX+E2p0dLT8d/78+QMHDpQYeM899wy00aBBg3Llyskf
gwYNSkpKyrKcAG3evHm2z0LayDwffvhhD3b122+/NXZVUWdg69q1a3x8/O+/
/75u3bpz585l99qaTPe//fab3e9tUlJSSpUqJdObN2/uwedltQiynF8Kju3a
tevuu+9+8803rXZ0N7nsbDlO98ePH1fnHpT3sNrDwS5ZZdQBFI7PgZBrke4B
AACAYLJ48WK1eV+5cuWoqCg18caNGz169HA53UseVEcrd+rUSb9E2ooVK2Ru
MvGNN97QW165ckVdLf3VV19VLa9fv65O+5ZdtJQ5t2vX7tKlS2qixFg1Wz2u
Tpw4sX379i+//LJMb2/j2WefLVmypPpbHmvu3LnqgeSpydNXP/WePn1asq36
kV0ey52uvv/++/op11atWqUulNaiRQvjyyWhVfvnhQIdMJnuMzMz69SpI81K
lCihn0Begqq6BqJkUn1Ze2MROLsUHD/l3bt3S7SXnltFe/PLzpaDdC/LS11l
r3Tp0g6+ZlGGDBmi+jBw4EDjzg8HDx6Uh1BnNsi1SPcAAABAkJGEovKdkBhV
sWLFfPnyqf82aNDA2NJkus/6Oz1plmPJ69evX6lSJZX3H3744fPnzxtbqku/
aZbrrFWrVi1Pnjzyt9xFnc/f7sXWxR133FG7dm2ZrboU2r333mt1ljmTe+Zf
uHDhjTfe0Gd75513Pvroo/p/5W8Jvy53Ve3ZLl2tWbOm/grYdvWHH37QX/xa
tWrVt2jcuHHr1q2HDx9udXkCk+leHD58WB2/L92QHr700ksqgwuZrQ8Wgfml
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
tWoVfvHF/A0aFKJCrTp0qLVz505vv8dI96R70j3pnnSfS/z+++8dOnTQf85r
3769bLw5aB8ZGdm1a1fjL4Bffvml8TRiOTYIcaT7XJvuEXxI9x5Hug9ElSs/
MmuWFhOjHT16ExVqdfJk7Rs3bnj7PUa6J92T7kn3pPvc4PDhwxLnO3XqtGbN
mlOnTq1cuVIl/ePHj9ttf/bs2c6dO7ezXPYrPj5+//79/fv3l//K9qfJBiDd
k+7hM6R7jyPdB6JKlR5atEiLj9cuX6ZCrq5ere2DvbxI96R70j3pnnSfG3z7
7bfyZI3H7S5fvlym/PDDD3bbT5kyRW796aef9CnHjh2TKd27d1e73+fYAKR7
0j18hnTvcaT7QPTEEw8tW6ZduSJrARWCFeaD9xjpnnRPuifdk+79TuK2ulCX
8cxgV65cad++/QcffGD38t9du3aVW69evWqcHhUVpU6+nWMDZJHuSffwIdK9
x4VOuj927Nj+/fujg0L58vcvXUq6D9kK88H6Qron3ZPuSfeke787d+6cPNOP
PvrIanrPnj1l+tmzZ62mnzlzRqYPGjQoMzPzwIEDy5YtW716tfG02zk2QBbp
nnQPHyLde1zopPt169bNnz9/blAoVaoY6T6EK8wH6wvpnnRPuifdk+797ujR
oyqMW02XKTL90KFDVtP37t0r00eOHDlq1CjjSfMmTZqkDunKsQGySPeke/gQ
6d7jQiHdZ2YmHT/+Wfv27/Tt+9pnn7UIgipePP+SJaT7kK0wH6w1pHvSPeme
dE+697sDBw7IMx0yZIjV9GHDhsn0/fv3W03fvn27fl796dOny38XL16srvq9
YMECMw2QRbon3cOHSPceFwrpPj398oYN2l13ac2aaa1bB0MVK6aR7kO4wnyw
1pDuSfeke9I96d7vVLofOnSo1XSZItMPHjxoNX3r1q0qvC9dulSfuG/fPpnS
sWPHpKSkHBt477kEENI96R4+Q7r3uFBI92lpl3/7TatVS1u3TouODoYqX15j
z/wQrjAfrDWke9I96Z50T7r3u9jYWHmmAwYMsJouW5Iy/cSJE1bTIyMj1e/y
ycnJxun9+vWT6UePHs2xgTeeRcAh3ZPu4TOke48LkXS/YoX2739rZ8/6PZd5
pp54QuOc+SFcYT5Ya0j3pHvSPemedO9BixYtmlK3joOy+4yuXr0q07t162Z1
rbquXbvKdKvz3gvJ+zK9Q4cOVqfTV3vyR0VF5djAQ083sAV0uvfjZ7fLZfXK
I6SQ7j2OdB+IRboP7QrzwVrj33Rft85Gf1XfLzR3ys1033ayW/XOVLeq5Uy3
qtl816vWerfKnYeWeiDOrfpsgFvlZud//K/r5eYTH/uBW/XxELcq4FKApPuU
2zUH9XHLN+3e8eOPP7b6mV4l9PDwcNvGaWlp6iD6Y8eO6RMlyKtz7J88eTLH
Bp57xgGMdE+6h8+Q7j2OdB+IVamS9vPP2pkzWmIiFXJ140aY7TWOPY50T7on
3ZPuSfceJOk+OY/moLJL9/PmzZMnO3bsWDXyy79jxowxngTv+vXrhw8fjo2N
Vf+dPHmyOlRfPwf+ypUrZUrfvn3VDgA5NgDpnnQPnyHdexzpPhCrVCktLExr
3lx7/XUq5KpnzyqRkZHeXmtI96R70j3pnnTvQZLuk/JqDiq7dH/16tWPPvpI
nTlfEv2XX34pf/fu3VvfLT8qKkqmfPjhh+q/Fy9eVO0HDRokDzp+/Hh1oL3+
wZFjA5DuSffwGdK9x5HuA7GqV9fq1v3rGf3nP1TIVdeuVXbt2uXttYZ0T7on
3ZPuSfceJDn6Rj7NQWWX7sWFCxeGDh0qAVyd7l5i/qlTp/RbVbrv3r27PuXs
2bMjRozQ2/fp02fHjh3GGebYIMSR7kn38BnSvceR7gOxdu3665z5P/+sLVxI
hVytXv3suXPnvL3WkO5J96R70j3p3oMk3V/Przmoj/+bbbpXEhMTjx07lpCQ
YPIRL1++HBsbe/r06ewO5sqxQcgi3efCdH/p0qXly5dLYJEY1bdv32+++Wbh
woXHjx93sBwl44wdO1ZWHKvpSUlJctOkSZNkVgMGDJA/VqxYce3aNatmGRkZ
W7ZsmTVr1rhx43788cd169alpaU5/WZy3oYNG77//vs///zTB4+VG5DuPS5A
031mZmZycrJ8zB034ciRvT/8oDVsGDzpPj7+r4C/aRMVihUZ+Zx8xnl7FSPd
k+5J96R70r0HSbq/VkBzUDmme/gM6T63pfuIiIhOnTq1s9GxY0eJ/BLDbe+y
fft21ebixYvG6XFxcer6j1bCw8PlJr3Z9evXBw4caNVG7mg1N4+LjY3t0KGD
PJZkfK8+UO5Buve4AE33Eu23bt368MMPP2ZC+fLlSpbUqlX76zR0fg/mHqn0
dC0lRUtKokKxUlLC7H6QeRbpnnRPuifdk+49SNL91Ts1B0W6zz1I97kq3a9e
vVqF6759+65bt+7IkSNnzpzZsWPHV199pabLRGP7zMzMiIiIzp072033I0aM
UGeukPh8wmLjxo3qyhQ9evTQ92OZNGmSOp3FggULYmJiFi9erK4rMXLkSM+/
4f6WkpKif/NAug8gpHuPuH793O+/jy1aVHvppXw51osv5vvXv7TnnguedE+F
doX5YBUj3ZPuSfeke9K9B0m6v1JQc1B9SPe5Buk+96T78+fPq5w+bty45ORk
400ZGRlTpkxRP6nrv3rEx8frqd823ScmJqpfxq1ONBEdHa0aHzx4UP6bmpqq
dhX47bff9DabNm1SbWx39feUGTNm6N0m3QcQ0r1HXLy4Yc6cAv/+t3byZM51
7Jg2c2ZQ7ZlPhXaF+WAVI92T7kn3pHvSvQdJur9cSHNQpPvcg3Sfe9L9L7/8
on5Vtz0uXiQkJHTs2LF3795nzpxRU5YsWSLtJZuvWbNGbrJK96dOnVLZ+bjN
AfvffPPN4MGDJcLL3zK3Tz/9tHv37leuXNEbJCcnZ3dfB9LT06dPn3748OEc
W0ZGRsrMP/744+HDh5PuAwvp3iMuXoyYPVtr1ky7cSPnunpVW7RIa9yYdE8F
R4X5YBUj3ZPuSfeke9K9B0m6v3SX5qBI97kH6T73pHtJ2TJx2rRp2S2sy5cv
G/+7du3aGTNmnD9/Xv5Wv78b031mZmavXr1k4oABA3bu3Gm1M4Bj+/bta2e5
dmRKSor5e+3du1fu1a1bN8ffCVy5cqVHjx5q54GxY8eS7gML6d4jVLpv3txU
GkpL05YvD6pz5lOhXWE+WMVI96R70j3pnnTvQZLuLxbWHBTpPvcg3eeSdC9h
XP3+vnr1aheWo+1v92Lr1q1qejvLSflGjhy5dOnSo0ePymM5mNX169fV9wwS
vZ3txuTJk9XuB8YLWVpRiX7u3Ln636T7AEK69whn032QXRGPCu0K88EqRron
3ZPuSfekew+SdH+hiOag+rQi3ecWpPtcku6vXr2qYnh0dLRx+qxZs6b8bbKF
VQPFbroXMTExQ4YMsTof/oABA/Td+60kJSWpveW7du1q/pKUupSUlC+++ELu
3qtXL7tXNI6IiFAdSE1NzSLdByDSvUeQ7qkQrjAfrGKke9I96Z50T7r3IEn3
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
e+ge0SzQPeJBge5RdarTYOuF7qF76B66h+4VDOH+yMNMosHQvTCB7qF7RLNA
94gHBbpH1alOg60XuofuoXvoHrpXMKT7w39gEoXuxQl0D90jmgW6Rzwo0D2q
TnUabL3QPXQP3UP30L2CId0feoRJFLoXJ9A9dI9oFuge8aBA96g61Wmw9UL3
0D10D91D9wqGdH/wUSZR6F6cQPcC6n5wcDA/P3/Dhg3EqNjY2NTU1EOHDrW1
tTnO7O3tpd0tPT2dtHX48OH29na7CUaj8fjx4zSBFmUwGOiLgoKC0dFRu2lm
s7mysjI7OzstLW337t0lJSXT09Oub1WLTmlp6ZtvvvmPf/xDg9cSIdA94kGB
7lF1qtNg64XuoXvoHrqH7hUMcWP/40yiwS9C96IEuhdN98XFxQEBAUsdotfr
ifzEcOtMMjgN2s7x8/PLy8uzTujo6IiLi3NcVExMDD1knTY+Pr5y5Uq7OfTE
/v5+5Tc4m7S2tvr7+9NraXDvY0EC3SMeFOgeVac6DbZen9X9jueZnMrU/W8K
ZXVZqqy+FiOry99wvXLeGaA+ckhWv90iq6+HyOqSk7IqDUbpyvyLy9xZMv4m
q56o+31/ZBKF7sUJdC+U7ouKijiuY2NjCe/Nzc1dXV3V1dXJycl8nAb5zM7O
Tk77lJSUqqqqjz76KDU1lc9pbGzkc9atW0ffRkZGEp/br6SsrCw6OpoGw8LC
ZmZm+LT09HQaCQkJOXDgAD03Nzc3PDycL1m9Dc9kMlnfeYDuPSjQve8EukfV
qU6DrRe6h+6he+geulcwpHvpQymge3EC3Yuj+76+vmXLltF4Wlra5OSk7UNm
szkjI4N/pM4/vqe9zA7pNP7SSy/RYE5ODn07NjbGPxmvrq62XVRDQwM39fnz
5+nbqakpfqhAYWGhdU55eTmfQwtRcGOzza5du6zHCUD3HhTo3ncC3aPqVKfB
1gvdQ/fQPXQP3SsYcsfeJ5lEg6B7YQLdi6P7w4cPc7A7nhdPGRgY0Ov1kZGR
XV1d9O3evXvpa/rTds6+fftoCampqZevfLjP7dzmcMI+TUhMTCTC09e0tPj4
+NDQ0OHhYeuEycnJ+Z4rkZmZmaysrKampgVnnj17lhYeHR29du1a6N6zAt37
TqB7VJ3qNNh6oXvoHrqH7qF7BUO6l75yBXQvTqB7cXRPyqbBnTt3zvfLGhoa
kv5tJiUl0RIOHjxIX1ssloiICPrWYDDU1NTYHQwgnfr6en4Wv8lkWvyz6urq
6FnBwcHS7wkMDw+HhYXxgwc2bdoE3XtWoHvfCXSvfaem2P79bONG9vrrXttd
u269ePGi2lsvdA/dQ/fQPXSvYEj32U8xiUL34gS6F0T3hHF+Hn1RUZFrv8ri
4mJO8paWFj5SVVVlvewefZGSkpKXl0eP0mtJLGd8fJy/z0D0dnYdduzYwQ8/
6OzsnG8OF/0777xj/Rq6dyEWN2X37t20eUD3vhDoXvtOTLCnnmLXX89++EOv
7SOP/PTUqVNqb73QPXQP3UP30L2CId2//Wcm0aC/Q/eiBLoXRPcjIyOc4Q0N
Dbbj2dnZGVez40rsJvDU1NSQ6+npdsfqNzY2rl692u56+AaDgR/e7xij0ciP
lg8KChoYGHB2czKZTKtWraKnR0RE9PT0OE7gb0HQCkxNTV2G7l0N/Zzpt9Pr
jmzZsiUmJga694VA99r3s8/Y737Hlixhhw55bYuKbp/z/w7KBrqH7qF76B66
VzCk+91PM4lC9+IEuteydsq2/UWQ1/jgyZMnbcdDQ0PtnnX06FG7XyKRmdP+
jTfemPM+9cPDw+Xl5ZmZmfxYfY53xxPkh4aGuM0DAgLmfA+Bz6mSTH5+Pn+J
6Ohou3vqdXV1BQYG6vX69vZ2PgLduxb6wV64cOHcuXOfaJ61a9eGh4dD974Q
6F770o/6/vvZb3/LLl702nZ2LpmYmFB764XuoXvoHrqH7hUM6X7XM0yi0L04
ge4F+eyeEhISQoNZWVm2g6dPny67Gn7AvJ3uDx48yDW9fft2/oG4NSaTyW7E
YrHQAvlp7xkZGbYPdXd385vlBQcHW++p55iampqli05CQoLtc/llAVauXFl+
NQaDga8Jfe3CoQIeF6V0/9JLL91777133XXX7zXPz372s4cffnjz5s1K/UwQ
YQPdu0X3Dz7IHn6YGY1eW5NJx+/8omqge+geuofuoXsFQ7rPepZJFLoXJ9C9
OLrfunUrDRLhrTe5s8vGjRttdU9Uf/vtt7mj9+/fb3c2PWGfxvft2+e4HH54
fHh4uHWko6NjxYoV/AN3iVPmKe3t7VmS4afeL71yBQC7m/Hxl5gvNTU1Eq/r
HVFK94888shXv/rVf//3f79B8/znf/7nvffeC937QkTTvcXCpqe9vJ2ds7p/
9FH3/7TVrE6DrRe6h+6he+geulcwpPudzzGJLofuhQl0L47ua2truXO3bdvm
CHyz2cw/+7bqnijNEV1SUuL4my0qKqJHo6KijEaj3UOFhYX0UGJiIv/20qVL
/LCBVatWLXhZ/gWTmZnJ16qiosLuoSNHjuz5fGj1aHJycjJ9Lf2ugndEKd0/
8MADaWlp9Hvv0DxvvPEG/dZwZL4vRCjdm82zq3HyJPvgA2/uwYPszjvZI4+4
/wcO3UP30D10D91D99aQ7jP/yiQK3YsT6F4c3VMITRz4ZLfGxkZ+Q7qxsbEz
Z84kJCTwh7ju+U3rKGVlZTOfDz/osa+vj0+Ij4+/cOECf7uA/qysrAwODqbx
3Nzcy1cOAOBvGrzyyiujo6N2i3J2c+JHBSxd9Kn0OO/etdx///179uyhX6tS
K7b44I54wob25cHBwf7+/s8USkfHmbffnpWmCLo3mVh1Nduzh+XksL17vbbb
t7NbbmF/+IP7f+DQPXQP3UP30D10bw3pXvpvBN2LE+heKN1PTEykpqZaD1bX
6/XW6+BR/P39yXSEfZppxb5jNmzYwJdWXl4eEBBguyjrDfLWrFlDlr+80Hn0
jlfek0hbW5uzN/WD7l0LdI84hmhP+35UVFSEQgkN9XvsMfbrX7Pubrd7kH36
KbvxRnbHHbPHEjzxhNf2979n3/rW7GXz3f4Dh+6he+geuofuoXtrSPfSP5Dl
S6F7UQLdC6V7noqKCn5bOmv4sdDWY9fNZjNJf0HdU4jntKjly5dbH42JicnJ
ybFeWj83N1dC983NzYvflgYGBmjhBQUFi39KWloavYoG9z4WJNA9olIsFmNX
19nw8NCAgKf0+icV6d///rsHHmB33y2E7js62Fe/OnuruKefZs8957Ul4H/3
u7PGd/sPHLr3UN2HvM7kVKbu7z0uq/+TI6vP7JLVpdtc70Pvyeof98nqbRWy
mviSrD56UFY3613vl3tl9cjDspr9J1n1RN2nv8AkCt2LE+heQN3zGI1G4nxb
Wxv/sF5OLBZLd3d3a2sr/7xevdhdoh+xC3SPqBSjsbS8/Jpvf/ufN278wrZt
ynTTpi8sWzZ7dzYRdH/pErv+elZaygYH2diY17a1lT3wAK6qp0Cge+geuofu
oXsFQ7p/80UmUehenED3wuoe8b5A94hKMRqLSb7f+hZ75x323nvK9MABFh8/
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
e+geulcwpPuVLzOJQvfiBLoXRPfW4+obGhpsx7OzszOuZseV2E04e/asVcHh
4eF1dXW2jzY2Nq5evdoOywaDgR/e7xiZurdeCT8iIqKnp0d6suNrWSyWoKAg
fnmB6upqWsmqqip+BEJ8fLwGl1lWO9A9olLU0L3ZzPr72V/+wp57jv31r27u
k0+ya6/1Id1HRLh/TVSrToM9ArqH7qF76B66VzCke0M8k6geuhcm0L2WtVO2
7S+CXMwHT548aTseGhpq9yxCse0EMm9fXx+Rf+vWrXxCfX293W95eHi4vLw8
MzOTS5lCiJ7zBPkFdT80NFQlGX68PSU6OppfAWC+zKn7jz/++MSJE7TC1sGW
lhZ+qv4nn3wisTSPCHSPqBQ1dC9Ufeea+dC9IoHuoXvoHrqH7hUM6f4VA5Mo
dC9OoHuNa/eTt01ISAgNZmVl2Q6ePn267Gr4ifl2urcNsYsm7Nq1i39rMpns
Pu8mPtMCw8LCaFpGRobjEhbUfU1NjeOR8/MlISFhvuUs5rXs/l7OnrMgYKB7
RKVA915T6F6RQPfQPXQP3UP3CoZ0H5/AJArdixPoXhzd8w/fifB2d6K3ZuPG
jVbd9/X11dXVDQwM2E7gn5vHxcXR19u3b6ev9+3b57ic4uJifhi/40MLiru9
vT1LMvzUe4qfn5/dzfgWfK2pqamurq6LFy/azeRH+0P31kD3iF2ge68pdK9I
fFb3aQFMTmWC5TeFsvrnt2X1iXdk9eEjrvfBPFl9NktWf1gvq2Epsvq3DFl9
Y7nr/X8/k1WZb4XJfHPAE3X/8komUX0AdC9KoHtxdM9vWE8hOjkC32w2JyUl
WXW/YcMG+vrAgQO2c+hbGkxOTr585bby9HVUVJTRaLRbVGFhIT2UmJjouD3I
PO+ekpmZyWlfUVEhPdPxtYir/CfQ3t5uHRwbGwsMDFzqcEUCTwx0j6gU6N4t
HRqavTSBss3JYYmJLDzc/X871arTYI+A7qF76B66h+4VDOk+7lUmUehenED3
4uieQmjivE1LS2tsbDSZTJev8PbMmTMJCQm2593zj+mDgoKsV6e/ePEiV3Be
Xt7lKx/u8/nx8fHEQP52Af1ZWVkZHBxM47m5uY4rIFP3/KgASmlp6YKT5/zs
ftmyZTS4efPm6elpGqE/33zzTX4WP66qZw10j9gFundL29tZUxO7cEHJbt/O
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
U5PaOw50D91D99A9dK9gSPf/dYFJFLoXJ9A9dI9oFugecTbQ/WJqNLLxccU6
Nsauu0553Xd2smPHZhfr44XuoXvoHrqH7j1OAaT77zYxiUL34gS6h+4RzQLd
I84Gul+wJhPbunVWFnFxyjQ2ll1zjfK6n5xk/f2spcXXe+nSkomJCbV3HOge
uofuoXvoXsGQ7r/TzCQK3YsT6B66RzQLdI84G+h+wY6Ps7Aw9tRT7MknlekT
T7B/+RfldY9erU6DHQe6h+6he+geulcwpHvpDelZ6F6YQPfQPaJZoHvE2UD3
C7apid13H3v5ZbZ5szJNS2Nf+hJ0r151Guw4Pqv7t//M5FSm7v++XVajV8tq
4kuy+tB7rveRQ7L6l52y+ptCWY1PkNU3X5RVOb6+97isfvQzWf3kBln1OAWQ
7r/VyiQK3YsT6F5A3Q8ODubn52/YsOGVV16JjY1NTU09dOhQW1ubxO9xdHR0
x44dOTk5duNGo/H48ePp6em0KIPBQF8UFBTQZLtpZrO5srIyOzs7LS1t9+7d
JSUl09PTl1XOwMAA/dVOnDih9guJE+gecTbQ/YKtq2O33MLWr5+92ZwiPXKE
XXstdK9edRrsONA9dA/dQ/fQvYIh3V/XxiQK3YsT6F403RcXFwcEBCx1iF6v
J/ITw+d81ubNm2lOZGSk7WBHR0dcXJzjomJiYugh67Tx8fGVK1fazaEn9vf3
y9/A5ovJZFq1ahW90M6dO9V7FdEC3SPOBrpfsKT7X/2KnTwp+lX10KvVabDj
QPfQPXQP3UP3CoZ0/412JtFnI6F7UQLdC6X7oqIijuvY2NiSkpLm5uaurq7q
6urk5GQ+ToOOzyotLeWP2ul+3bp1fJAmtF9JWVlZdHQ0DYaFhc3MzPBp6enp
NBISEnLgwIHGxsbc3Nzw8HAaSUlJUXBLs01fXx9fN+jetUD3vhPofsGS7u+5
h334oWILVOmOeOjV6jTYcaB76B66h+6hewVDuv96B5ModC9OoHtxdE/mXbZs
GY2npaVNTk7aPmQ2mzMyMvhH6nYf3/f09AQGBjrqfmxszN/fnwarq6tt5zc0
NPDJ58+fp2+npqb4oQKFhYXWOeXl5XwOLUTmBuaYoqIi6wpD964FuvedQPcL
Frr3tOo02HGge+geuofuoXsFQ7r/2iUmUehenED34uj+8OHD/FN1x/PiL185
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
oHvE2UD3Cxa697TqNNhxoHvoHrqH7qF7BUO6/78nmET/LEP3TU1NpO+AgIAT
J050dnYeO3aMS7+trW3O+d3d3cuWLaMJRPje3t5z5869/PLL9O3bb7/NJ3z0
0Uf0bWBgYFlZGU04deoUfU0jNTU1Lq+kBwW6h+4RzQLdI84Gul+wpPtf/YpV
VLDpadQDOjOjczx+UvFA99A9dA/dQ/cKhnT/z0YmUTm637x5M/1AbK/LnZ+f
TyNvvfXWnPMzMjLoUfqXsHWE3zssNDSU//8lMzOTvn3vvfesE/iNutLT011e
SQ8KdA/dI5oFukecDXS/GN3/7GfsyBHW0YF6QLu7l9gePKlSoHvoHrqH7qF7
BUO6/78mmURd1j15PDg4mH4gg4OD1sHh4WE/P7/AwMCZmRm7+WazOSgoiB4d
GRmxHa+trbXeyJvfXrykpMT66OnTp2kkJSXFtZX0rED30D2iWaB7xNlA9wv2
3Dn205+y9PTZj+9R8fvxx3cMDQ2pveNA99A9dA/dQ/cKhnT/T1NMoi7rvqen
h34aK1assBsPDw+n8e7ubrvxrq4uGn/11VctFssnn3xy9OjRoqIiu1t484/+
ac74+Dh9Ozk5mZSURCMHDx50bSU9K9A9dI9oFugecTbQ/YL97DP2i1+wG29k
t96KekD//OcbKyoq1N5xoHvoHrqH7qF7BUO6/z+nmUT/HOOi7ltaWrjE7cZp
hMYd/61bV1fHP4Vfv3697VX10tPTrTfmNplMb7zxBg2GhYW9/vrr/I0C+oJj
3+vjmu7pWW6nvbO6p3V2O+2hex8PdI84G+h+wQ4NsYcfZr/8JbvjDtQD+uyz
N1ZWVqq940D30D10D91D9wqGdP9/zDCJuqz7Tz75hH4aq1evthtfs2YNjZ87
d85u/MMPP7ReBj8rK4u+zc3N5RfNO3DgAJ8zOTlJ/05e+vlkZ2db+e/dge6h
e0SzQPeIs4HuF6zFwkZG2PAw6hkdHb1renpa7R0HuofuoXvoHrpXMKT7/93M
JDqf7hsbG8/Pk87OzstXdZ+UlGT3RH4sPU2zG6+qquJaz8vLsw7W19fTiF6v
59d12bJlC337yiuv0KuPj4/TnwkJCTRC40r+UESNa1uXx22Tl8VbZ9HWB9Eg
0D3ibKB71Ouq02DHge6he+geuofuFQzp/n+zMIn+aS7dm83mpfNn8+bNNKe1
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
DcuePbv8GR4eHhMTY/WsRYsWlStXLkOGDOpzp2DBguPGjfPiIfS3bt0qXLjw
mDFj7D66bdu27t2758uXT//gy5kz59ixY22/CpBYLWu9fPly+f+cOXPKli2r
P6VYsWJ6NZXuq1SpImv69NNPZ86cWdUpWbLkTz/9ZDVPkxtWRERElChRolCh
QmqG8q/Vs9auXetGa13aAhL88+bN26hRI/n/+fPnu3bt+vDDD6unZMyY8Ysv
vlDV6tevL4u2u8ETExNl6fLomjVr7O4OJ1asWCFPzJ8/v+1DYWFh8tC6dev0
KRUrVpQpt2/fjo6Obtq0abZs2VQ7ZTts2bLF+NzJkyfb7gKxd+9eq6XMmDGj
TJkyRYsW1c9kkXeN8SnNmzc31k9ISHjrrbeMGzZHjhyNGze2fRkoV65ckS0/
a9YsV7cMAABOkO4B4EHjUrpXHxDPP/+8VbUdO3bIdJXrJearapJz1en86s8O
HToYn/KPf/xDTZfc1LZt27p166pjnlu0aOGtVfvkk08khF68eNH2IXWUu56+
GzZsWKBAAfXna6+9ZlW5W7duMl2SssxQ1cmQIUPx4sUlORrPmFbpXt8O4eHh
sgUyZcqk6s+ePds4T5MbVkhINNa5b7o32VqXtsCxY8c0yzc2Eu3Lly+vqsmO
lrWQ/6xcuVJVmzp1qvxZqFAhyfJWc5g7d648VKJECTd+of7555/lubIrbR96
6KGH5KHff/9dn1K4cGGZ8u6778qGkldUpUqVHnvsMdXgsLCwGzdu6DWt0r16
I4jdu3dbLWXatGmqjv6NjfN03759e1VNNrjsjmbNmqkNJT744AO76/jmm2/K
G8HVLQMAgBOkewB40Lh0ZL5kECfpXkiuSU5O/s9//qP+lPqS5t555x35/6OP
PqrX//zzz2WKRLOZM2fqBy1HR0errwIkmXpl1erXry/Byu5Da9askWWNGjVK
P7D8zp07vXv31iwXrre6rprKy1WrVpV/y5UrJ20+d+5cmuVqeCdOnNCr6ele
1lT/hfrkyZMVK1bULL+bS31HTXW0YY2ee+45zcSR+SZb69IWUOk+a9as6liL
/v37r1u3Th1lIfPUT7tISEhQF5378ssvrVrVuHFjmf7ee+85b7xdbqR78eST
Tx46dEhNlJe3mjh16lRHS5Hg7yjd63bu3KnqODky/+zZs6rO3Llz9YnyLvjm
m2/atGnj6J4IW7dulafYHjYAAIDbSPcA8KDxYrrPmDGj+qE8Li5O/nzkkUdU
7pPwpX50VpUTExNz5MghU8aOHWs1n4kTJ8p0SYKerlVamrRE2iOJ21EF26x9
+/Zt9RP5/PnzjdNVXha1atW6evWqoxmqdF+kSJH4+Hjj9A0bNqinO7lymtfT
/X1bm+bKFlDpXnH+3cvo0aOlTkREhHHi4cOHVTw/f/6888bb5Ua6b926tdXa
SdjX7B2WoPNWut+/f7+qs3jx4vusmEFqaqq8X2TrmX8KAADOke4B4EHjxXSv
53cJifJn5cqV1Z8Sl9QvwurPbdu2qT9ts6eqKQHN/fX525o1a2RWEkvvW/PQ
oUNLliwZN25cnz59VLZ9//33jRVUXpYN5fxeaU6umV+0aFF56KOPPnL0XK+n
+/u21ui+W0BP907SsaJOIdcMh+uLIUOGaDanZpjnRrpfsGCBVU11WEK7du0c
LcVb6V7UrVtXsxyaIqu8aNGihIQEJ5V1Urljx45magIAYAbpHgAeNP5P9zNn
zlQfNJlt6J9Bnl9bb968eRKvnFwt/8SJE/369QsPD9dsjBw50lhT5eWXXnrJ
+RKdpHsV9wYOHOjouV5P9/dtbZorW0BP96dOnbrvbNW6PPvss+rP5OTkQoUK
yZRVq1bd97l2eSXdq1a1adPG0VK8mO5lVt27d1fXkdAsl9SLioqaP3++81e1
vDzq16/vpAIAAC4h3QPAg8b/6V6ddC9edaB///6er9ekSZOcHAOwZs2a/Pnz
a5bjBPr06bNkyZIDBw5Is9Xp4XbTfe/evZ0v0Um6j4iIkIeGDx/u6LleT/f3
ba1LW0BP93Fxcc5nm2Y5L0OSeIYMGQ4ePCh/Ll68WLNcst787faseDHdO9nC
Xkz3imy0Dz/8sGHDhqqRmuWyhBs2bHBUf8yYMZUqVbrvbAEAMIl0DwAPGv+n
++joaPVBc+bMGS+thB2zZs3Kli2bo0dLliwpDejYsaM01TjdF+k+KSlJ3RZw
3rx5jp5rJt23a9dO6tz3qw+TrXVpC7iU7kXPnj31prZp00ZzelbCff3yyy9q
6frl+3R+Tvf79u1TdS5dumS+/VevXp0yZYpqWJ48eaw2uG7w4MF16tQxP1sA
AJwj3QPAg8b/6f7mzZvqbun3PYnbEytWrJBFGO+AplMX/RNWZ6bfu3evevXq
Xk/3n332mVpcTEyMo+eaSfeyuTQTdww001pXt4Cr6V7WNEOGDDlz5jxy5Ijs
66xZs165csXME+3au3evWrrVJeW//PJLNd1v6T4+Pl7V2bJli5MG270wvjxF
PXfTpk12n9WjR4+oqCgnswUAwCWkewB40Pg/3Ytx48apz5rRo0cbf5CNjY2V
RZi8CplzJ06ckPnrd6Yzunz5slr6rFmz9Il79uypUaOGmu5JupdU+8orr+gX
DFy5cqW6zZ/zC6aZSfczZszQLDcmiI6O1icmJydb/RZsprWubgFX033a3z/Z
lytXTv6VJpl8ll2Su+XFo1muiaeuhC+rPGbMGH3E4rd0Lx555BHNcv6+8XV7
7do1/f+ff/55njx55BVu9TIePny4mv+FCxfszlk2/pAhQ5wsGgAAl5DuAeBB
E5B0n5KS0qpVK/VxEx4e3rp1606dOlWvXl1diGzy5MneWLO0ChUqDB482O5D
Tz/9tErijRs37ty5s7qNe5YsWcqWLethulfHiufIkaNBgwayBWS2muXcdufX
ozOT7iUtqugqi3jqqae6dOnStGlT2X1Wt1Ez2VqXtoAb6X7Tpk36iGLjxo0m
n+VIr1691KyKFClSp04daadmOYxBHWngz3T/0UcfqWolSpRobxEREZE9e3Y9
7Pfs2VPt9Jw5c9aqVat79+79+vWrX7++etbLL79sd7bnz5+XZ61du9bsFgEA
4H5I9wDwoMmTJ4/0+d99952ZyurWZpJorKar/G6V7iV5GR81pntlzpw56uxv
XalSpSTae+W3+zTLicyOLuZ26dKlqKgofbmSkdu2bXv48OFPPvnENtv26NFD
Jvbt29f54tS9AIYOHTpjxoyCBQuqOWfMmLFVq1aOfq7VOdqwVg4ePKj/vK7k
y5dvzJgxbrTWpS2gDoRw8ruzXeoW8/qXPJ64cuWKNE9v7SOPPCJb7O7dux06
dND+9wgN9du6o3TvZAvr6X7//v1OWpKSkjJu3Dj19YIiqVx2ysmTJ/U6e/bs
eeGFF1RLdOHh4WPHjnV02Xx5zYSFhTm5xQMAAK4i3QMA/Ozq1as7d+7cunWr
3XPkPSGBK3PmzD/99JOjCufPn1+3bp1kMYls3l10amrqH3/8sWPHjps3b3p3
zuLs2bMbN25cv379sWPHPGy577aAxNiKFSvKcGLatGnemuelS5dkrZ1cvsBv
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
FP3VV1/JlKFDh+7bt++ZZ57JkiWLmrN0WcuWLbPb4L59+0oFWa4MpVR/JZHQ
ttqaNWsaNmyor4t0rTIWHTx4sAxQrWrK09966y1jH5gjR47GjRvbvQS6+YFo
mmXsPWvWrPLly+tbTPpw6ZwlmBuryfA4tw35cLE7T5M9dkREhGzDQoUKqRM0
5F+r+a9du9a9BqSZexmIihUrynxu374dHR3dtGnTbNmyqfryGtuyZYtVZfP7
yw3O071L7RTz5s2z+hCUj0XNQbo3MxiQvCANkP1l9ek8cuRINf3atWsm11Qz
MPkUpH+O0r34z3/+ozoiYw8gg1JVX4aObdu2lT5KvVtbtGhhfO706dNlYsuW
LRs0aKDeyFWrVpXeTz1XXtXGyocOHSpcuLDeP0sPoJ/tpdmk+2PHjmmW/Csv
aekAVR3pNtVXAStXrtRrxsXF6e8maW3t2rVVdn7ooYc+//xz4zyTkpJq1qyp
erxevXq99NJLKlart6ownnRmvgHq6CalZMmS0gvJdlB/vvbaa3q1HTt2qPe7
9vcvZUJ9ka6PzDt06GB+nwIILFfTvcl+Vfqc8PBwVVO6U6lWuXJl6dDkT+my
jBdBmjZtmhpu6SfS3jfdT5kyRfv74PytW7fK///5z39KQtf+N92b7NaE6tVl
uKU+R2QYo64AIGRo5Pw4LgB+M3z4cPV2Nvkzcbdu3aS+5Hp1dLFmCVYy3JKM
U69ePWPNUaNG6f3Vk08+qQ/JKlWqdP36db3azz//rFkuQ2q7LNW/STbUp6jh
pfSEqnOT/+iDRmnG7NmzreYgsUj1PCp2lSpVSv4vAcqqmkRgldGkQ2vfvr3k
L+my1G83+fPntzpESiqoFZH1la3RrFkzNQIUH3zwgbGm+YFomuWnbZmhqixd
uoxLZdXUFpDRqfErXKtwrZ7y/PPP225A8z22xH/j3FxK904akGb6ZZD296fG
u+++K0uXD0GpoD5BRFhYmPFrYZf2lxucp3vz7RRvvvmmekh2fY0aNQoVKqTv
Edt0b3IwIEML9bNp06ZN9betvMLVq8X25e2EZmD+WUjnnKR7/bzLo0ePqinS
F6lOaebMmfrLKTo6WoVQ6er156ruV2TJkmXy5MnqQJQrV67I+1q9GY0LatKk
iWa5XL/+vevFixell1BzsJvu5T2ivtrq37+/DKTVl1onTpwwfhPYunVrtaxV
q1apKVevXpU3iEyUPuHIkSN6TXUJEXkvHz58WE2JiYmRrlXWdNeuXVabxXwD
1qxZI1tGujX9iH15tHfv3pplrHv8+HE1UaV7IR2UbCj1pYqQDiElJeWdd96R
/z/66KMOdyGAdEZP9zLSm/K/5MNd+990b75fFY0bN37qqaekb9G/yZckrn6U
6dWrl21Ldu7cqVpy3yPzV69eXbZsWXVw/uDBgzXLJYLVMMyY7k12a2l/j39E
37599aWPHz9eTfzss89c2qQAfERdaqlly5Ym66t0X7VqVflXBkLScakTKqXr
MP7ELFlDBZMuXbrodw9ZuHCh+qHnlVde0Wu6ke7VuEi6IzXx5MmT6pz6YsWK
WX1zKCNAmS7dkepd1a1AOnbsaLWgV199VbP8sGL8Wf/UqVMvv/zyrFmzjDXP
nj2rGjB37lx9oozWvvnmmzZt2ljlSvMDUSF9uOpIhw8frg8mZTwsO6hZs2ZO
7nui8qPdcG2+x9apTwSXjsx30gDzL4M0w6eGhIVDhw6piRKx1cSpU6fqNc3v
L/eYSfdm2rlhwwb1K7xsHD31y0tFfWpbpXuXBgPbtm1T32ZMnDgxzXI8ifo2
3u5IwAnSfUhyku71h9Tv0YmJierNOHbsWKua6lQmGXbqU1T3KxHY2CenWY6/
UvOMj49XU6TnUVO+/vprq9mq7wPtpnvF6qVupI+uFyxYYJwur/9HHnnEanSt
visbMGCAsabqZkeMGGE1Z5MNUGx/n5LOTa3X/Pnz1RSV7qX3U0cTxcXFyZ/S
SNW3ywbULF+iOl8QgPRD738c0fsfl/rVNHtdinjvvfekZvny5W0fMp/uZfCp
fmH59ddfJeaXLFlSHlKXzbc69s9Mt5b29/jHdr2eeeYZ21ENgECpXr261RBI
AssnBjKiM9ZX6V7UqlVLsqqj2T711FNSJyIiwiqWTpo0ST1d/z3FjXRfpEgR
fRipSIxSs7UaNEp+1Aw3IVVjquzZs1vdrlT9HF+7du37nhe/f/9+taDFixc7
r+nSQFRSsKo8evRo21k5P6zCSbhOM91j67yb7s2/DNL+/tRo3bq1VZvVL4PG
gw3M7y/3mEn3ZtoZGRkpUyR3W13OS13czPg56OpgQHz44YcqasXExLz11lua
5XhjV49bMI5MXHoi0jMn6f7UqVPqIfXt6LZt2zTLd322nfnu3bs1y1ej+hTV
/VaoUMGqpoquYt++fWqKenFKR2f7taTda+br4drqmCIrH330kdQpXry4bZeo
znYpV66cPqVDhw4y5cUXXzRWU2eh9u/f3+rpJhtgRT4rlyxZMm7cuD59+qhO
9f3331cPqXSv53fpdTXLxW3Un2rbymY3vywAgaUP6mRg2f9/qW/X9UGdS/2q
0c2bN2U0+8UXXwwePLhRo0aag+8AXUr3R44c0Sy3SpF/hw8fnuYg3eucdGtp
f49/rIa1QtqsWQ7WctQeAP6k0r1xtCNvW+OYPywszFhfpXuJP3Z/+dWpPuHL
L7+0mn7nzh118qMendxI97bDS1G0aFF5SHKTPuXu3bvqQHT90FCZoq7YbNU1
SRvUT8ylS5ceOXLkwYMHnaxa3bp1NctvrDJ6XLRokd2z+NNcHIiq0xwKFizo
0lWdFefpXue8x9Z5N92bfxmkOf7UUAcbtGvXTp/i0v5yg5l0f992yn5X87H6
fizN3jXz3RgMyPybN2+uWU5qlq0h7yAJFK6uKek+JDlJ9/oAVZ3OOXPmTPVn
Zhv6C0M/WNRR93vjxg1VUz/ivWfPnvJnkyZNbNvmPN2fOnXKyXq99NJLUqdZ
s2a2D33//fea5bdyvUNW36FlyZJF/yr4woUL6oiXr776yurpJhugnDhxol+/
fvqpskbSHak6pHsgxJg/796lflWZP39+VFSUfg1S5x/NLqV7+X+dOnVUfTVY
spvuzXRraY7HP7/++quqbP6yPwB8p2PHjvJ+bNWqlT5FBoSjLCQGag7SvYyy
nMxT/3lo06ZNto+qKwsNHTpU/emtdK9C9+uvv65P0Y8XlRAU9becOXNqlnMh
rZ4uo82SJUvqvVnFihXffvttq8vZKTKU7d69u36NuBw5cshspWe26qtdGoiq
rWq38n05T/cme2ydF9O9Sy+DNMefGmr+bdq0MU40v7/c4F66t2rnyZMnVdts
7ylpm+7dGAykWU7cUE0V48aNc2NNja8HN56O9MlJuv/00081yyEf6ltHdT6I
eNUB4xe/9033ElrVlK5du2oOTvhynu7j4uKcrJf60sBuPykz1CxXX9EPX7ly
5UqZMmVkYqFCheS9+cYbb6hrsJQvX/7mzZtWTzfZgDTLSQf58+fXLF+4yUfk
kiVLZCNLeG/cuLFGugdCl/l071K/mpiY2KVLFzUmjIyMlOGBjBnOnj2rn99k
2xJX073q9qtXr64esk33Jru1NMfjn8WLF2uWn7241yeQHqjL+9i9qp7qQOym
e/1Yd7v0XLN582bbR9XNOAYPHqz+9Fa6V3d6GjZsmD5F/ZZqV7Zs2WwHeMnJ
ycuWLZNn6VlYRl/SD9u905+MBj/88MOGDRuqRmqW35E3bNigV3BpIKpOETV+
x2Ke8/PuTfbYOi+me5deBmn3S82283dpf7nEk3Svt/Po0aOqVdu2bbOqaZvu
XRoM6FasWKFfXV/eyG6sqfFN4cbTkT45SvfyllHfiUnHpabIMFLVNHOrSvPp
XvphzRBmjTxJ9+raTdLTmnkoKSlJXdnPSN6edr8DNJ/u1Qbs2LGj1eldpHsg
tJlP9y71q//97381y5019As0KWvXrnX00bxv3z71kJP7QRvT/cWLF5s2bapf
UcQ23Zvs1tIcj3/GjRunWc5DvO/6AvAD/Th82xu6uZ3uU1JS1EnEtpcnkuSl
opP+0C+//KIaYPuNn/l0L6NW9aP8vHnz9Cnq2mUffPDBDoMtW7aoY5+++eYb
R+1PTU2Vau3atVMNe++995ys7NWrV6dMmaJ6POmf9b7RpYHo+++/L1OKFi3q
xg3unaR78z22Tq213SzpagNcehmkuZ7udS7tLzO8ku7l9awO8LC9RINtundp
MKDIR7O6Ar+6DrnEfHkrmXyuzhh8XH0u0i276V7eJuq7XKHfZvTmzZvqYHUz
55ubT/dqvCrkQ8RYMz4+Xt3twr10/9tvv9n9tJIgr/o64z3m1AUrBg4cKANg
GeLKKju5XabJBuhXGLA6MU06NHWOG+keCFXm071L/ar6Hcr2nsLqIE+7H83S
kaqH7N6EVzGmeytW6d58t5bmYPwjPXCJEiU0e9esBhAQ8v6V0Zq8K2vWrGn1
c7bb6V7Ur19fs1x5z2q6uvKGcdi5d+9eNUX+Y6z55Zdfqulm0r3+02dMTIya
or40sHsic6tWreShqKgofYqja5Gp69tb/f5ut7J+WTz9KHSXBqL6SQTGK67r
nF87zlH4danH1smHkWZzCzbnnKRv8y+DNFfSvUv7yw1eSfdpf3+7YnVOgRgy
ZIj2v+nepcFAmiWpqd8lGzduLP8fMGCAZrk7w31/ebSiGbj0RKRnVule+sD1
69c/++yzaqKx60v7+zcXzXJJT+NXrLGxsfKSNl5XxHy6l3eouk9o1apV9fs1
Sw+v7kmquZvu5aWuvpksWrSoPqyVZak7v8g7SL+sX9rf422rG3M4YrIBly9f
VtWM9+bYs2ePuh+WRroHQpdL97s336+qj++IiAh9YJOcnCzP0s/Ls9sYdXFm
GV0YZ2485918ujffraUZ7ne/fPlyNUU6txdffFGzHJZvNYwHEEA//vijegvL
SEwfHUnnM2jQIM3ddC+RXB0z3L9/f/3S4r/++qu6qF2nTp30mjIyVDesb9eu
naopfYW67pxim+5lzq+++qrej0mOVrM15mV1YPwzzzxj2zYVLbNmzaq6aPn3
8ccff+qpp7Zv326sdunSJTXbvn376hM///zzPHnySL9tdTG94cOHq9ZeuHBB
TXFpICqVJZNqllMGJk+erF9oWvrtUaNGSTOM15a34ihcu9Rj62bMmKFZzv8y
ni0unzVWv/6baUCaKy+DNNOp2aX95R5vpXv166FsAdmnasrdu3f/9a9/qe1v
de8Y84MBvXLu3LnVYcaJiYnqOgb16tWTRZhfU83A/LOQzunpPl++fOrcHEVe
igMHDrR6LUlvo77wFOHh4a1bt5Y3ZvXq1dWRJ/pLN82VdC++/vpr9d7Pnj17
gwYN1HfIWbJkUW9S99J9muWEF3X6vIwkpZFNmzZVMxQTJkww1tSPH5CN0LBh
wxYWsnbdu3eXmlbfeZpvwNNPP622pHTvMqQvV66c/F/Wq2zZshrpHghdLqV7
8/3qmjVr1EQZWnTp0qVJkyZqBKJuPO3oo1ldt1mzXFa3vUVERIR0tvrgwXy6
TzPdraUZ7gisWY7Dlyeqo2SFjG1c36gAfEjCgorYaiwkvYQ6flI8++yzxpom
033a32FHs1zUSIZVMrBRg73HHntMv/26ou5BrFludVenTh3pUjTLz8fqJ2a7
97vXLJeza9SokcxW7xj1yx1LkFR3Cbf7U7gEcPUUdc/6zZs3q+vtS/NKlizZ
smXLAQMGSC+tuiyZj/H35Z49e6q1yJkzZ61atWSg2K9fP/ULtXj55ZeNCzI/
EBVnz54tXry4elTWRSpLUlN7QYaIqqlOtrPdcG2+x9bJyF/13tJmSdDyWSMt
kc8au7fqu28D0lx5GZhMzS7tL/PkNZ/pb6rB8iLRp6xevdrVdqZZvpwpX768
mlvp0qVlL6hPbfWzplW6Nz8Y2LRpk2qk8VVx6NAhNXOXrpmgGZh/FtI56eKM
e1a6HYm3/fv3N76MrcyZM8d4mUpRqlQpedUZvwpQ1350ku73799vnP7jjz+q
H5jUu6l27dq7du1Sv/Lov/soJ06cUNX0b0edkH6ja9euxgtOSpOMHxOKjMCl
k9EckK7VeLVP8w24dOmSuq2eIm+6tm3bHj58WJ1uo3eqKr9bpXv9qlakeyDo
6CfQmUn3ipl+VVVTowJFhmoydpUhgbpKid3GyKMyblejZUVGRDVq1Dh58qSq
oLop/SQsI5XujfeVNtmtpf09/vn4449lOKdf9qdAgQKzZ882vSEB+M/GjRv1
ZK06CsmAkqatzgTv0aOHZvrn0cWLFxvHV1mzZpUgZns5uytXrkhPoleTAeGQ
IUPu3r2rblis7susqHRfpUoV+Y/+haGMGyUWGUdlq1atUqvg6CxmdWvyF154
Qf2ZmJg4adKkatWqWXWVMlv9Hk+6PXv2yBP1UasicWzs2LG213MzORBVZAQ4
YsQI9b2EIu1p1qzZH3/84WQjq8O8be8CkOZKj2108OBB/fd9RTb1mDFj3GiA
YvJloDapo9RsnL9L+8sk9Y2HI8ZdZr6daZbgIyHd+NXZ0KFD1SVxJOzYNuO+
gwF5X6iN2aVLF6vnzp8/Xz3F7tf1dhkXZPIpCGFXr17duXPn1q1b5XXrrXme
OnVq8+bN0sl7a4ZKcnKydMVr1661O2fpiqV/kI+GCRMmSHKXNL3LYvny5RMn
TlTvRzPfUTty/vx5GTZLA/TjrADALjP9alJS0v79+2WkYQzd9yXPkjmvX79e
ujjbs1BdZaZbU+l+4cKFaZYTAbZs2XLkyBEPlwvA19SQafv27bbhy22Su1ev
Xh0TE+P8YuYSRaWP0k+ct0ul+4oVK6ZZvro8cOCA9GxebKq08NChQ9HR0dLN
3ne2qseWynFxcc7HeM4HorbOnTu3Zs2avXv3unSUtSPuDUTPnj27ceNG2SPH
jh3zygjW5MvAJS7trwCSbC7bX3aoyS3pi5BlF+keIUld9iQyMtLuo+o7T9vL
WAEAnHB07CIAuM3JHfEAuIp0j5Ck7jpapkwZ42WmlG3btqkzpDiUFABcQroH
4HWke8CLSPcISVevXlWj0OLFi48YMeKbb75ZvHjxp59+2qZNG3VYfq9evdy4
/SgAPMhI9wC8jnQPeBHpHqEqNjY2KioqZ86cVtfQqFGjxqxZs4j2AOCqmjVr
FihQ4Icffgh0QwCEjgULFkjHUq9evUA3BAgFpHuEtjt37qxevXrevHnz58/f
vHmz8SZQAAAAABAySPcAAAAAAAQ70j0AAAAAAMGOdA8AAAAAQLAj3QMAAAAA
EOxI9wAAAAAABDvSPQAAAAAAwY50DwAAAABAsCPdAwAAAAAQ7Ej3AAAAAAAE
O9I9AAAAAADBjnQPAAAAAM4dP3589uzZS5cuDXRDYJ/soIULF/7555+Bbkgg
ke4BAACAUHX37t09e/YsX7583759KSkpgW6OvyUkJMiKy+ofOXIkNTXVk1lN
nz5dElOFChW81TY459K+O3bsWMaMGWUHVatWzT/NS59I9wAAAEDo2bVrV4MG
DbJmzaqP9osVKzZz5sxAt8tP4uPj//nPf2bOnFlf/Tx58rzwwgvnzp1zb4ak
e79xY98tW7ZM1cyUKdOtW7f82dp0hXQPAAAAhJhJkybp4ahgwYKVK1eW1KP+
fPvttwPdOp9LTEysUaOGWt+HH364atWqYWFh6k/5z6pVq9yYJ+neP9zbd0lJ
Se3bty9duvT48eP93OB0hXQPAAAAhJKVK1eq4b1E0T179qiJCQkJI0aMyJ49
e3R0dGCb57bt27f37t3bdvoPP/wwfPhw45QJEybI6mfOnHnu3Lk3b95UE2VT
1KtXr3DhwnFxcW4snXSvmN8L7vHFvntwkO4BAACAkJGSklKlShUZ21euXPnG
jRtWj165csX501NTU8+cObN169aDBw/eu3fPbp1bt27t3LlTqnmnxQZ37tyR
OV+6dMnuo7/++usTTzxhO33atGlt27Y1TmndurVsgU6dOlnVlI3jrSPzExMT
pamXL192/qzk5OQDBw7ExMTIf8wv6/bt2/v375cc7WT+J06c2L17tzTD/GzN
cL4L0lzZC+7xxb5zm7yDZC9cuHDBz8t1G+keAAAACBnfffedGtsvWbLETP0B
Awbkzp17+fLl8v85c+aULVvWeJ6+VeXff/+9SpUq6vJlokCBAsOGDZM8aKyz
YsUKmWH+/PltlxUWFiYPrVu3Tp/y1VdfyZShQ4fu27fvmWeeyZIli5pziRIl
li1bpldbv3797NmzBw0a9Oijj8620bVrV8mb8h9pvwrRzz77rMwkMjLS+bq7
1FSV7mX1Jao//fTT+okPJUuW/Omnn2znEB8f36dPn4cfflg/Hzy3Qbdu3fSa
p0+fzps3b6NGjeT/58+fl9XRnyWb+osvvjDO9s8//5RdlidPHn22devWlQTq
612Q5vpecI/JfSeKFCmS20bnzp1ta966dcu2ptHBgwetnrJo0aJy5cplyJBB
P71l3Lhxjr7vSj9I9wAAAEDIGD58uIqcJi8RLzFT6ksi++STT1QokERTvHjx
bNmy1atXz1hz1KhRqkKOHDmefPJJqaP+rFSp0vXr1/VqP//8szpj2nZZDz30
kDz0+++/61NUZA4PD1dhWf4j8VldIkCaIVFRVXvvvfeaN29erVo1WXRzG2XL
li1QoID6v7ohmtRXbevbt6+xbVbcaKpQFyp01FQlKSmpZs2a8lDOnDl79er1
0ksvZc+eXT29rIXx6gfHjh2T6aVLl5ZoX758eVVN8rukV/nPypUr9ZpxcXH6
Zi9Tpkzt2rVVY6S1n3/+uU93gRt7wRGJ0mPHjnX0qMl9l2aT7tWznn/+edua
iYmJEs+tEr3+FYo02+oYiX/84x/6Rm7btm3dunXVN1otWrRw0p70gHQPAAAA
hIwXXnhBBvYtW7Y0WV+l+6pVq8q/5cqVmzlzpjr+WfLpiRMn9GpbtmxRAadL
ly63b99WExcuXChBTya+8sorek33IvOjjz66Zs0aNfHkyZMVK1bULAcPSDP0
yuaPCZcWqjmIXLlyDRw48MiRI7ZP9F1TpUlq0YcPH1ZTYmJiJODLbHft2mW1
LJXuJaerH4v79++/bt069TOx7ALjoRHqqHVJo/rF5a5evSqRUyZmy5ZNX0ff
rVeaN47MX7t2razsm2++afdRk/vOlszQUbq3lZKS0r59e6kvO2Xz5s3Ghz7/
/HP1hYm8F/SvyKKjo/Pmzau+BzMz/0Ah3QMAAAAho3r16jKwHzBggD7l0KFD
nxhImjPWV+le1KpVS6Kio9k+9dRTUiciIkJikXH6pEmT1NP1GOtGtCxSpEh8
fLyx5oYNG9Rsly5dqk90KVdeu3ata9eu+kkEkprbtGmzZcsWYx3fNVX9+Gvc
C6JXr14yccSIEVbLUulecRIeJfKrOgsWLDBOT0hIeOSRR2S6LNTX65XmpfPu
ZSZZsmQZNGiQ3UfN7DtbLqX7f/7znyrCW519kJiYqL6wsj26YOLEiTK9cePG
ZuYfKKR7AAAAIGSodN+/f399ioRB45g/LCzMWF+l+1y5ch0/ftzJbNWRz19+
+aXV9Dt37qhjzr/99ls1xY1oafdC9EWLFpWHPv74Y32KG7ny0KFDsilUXlMk
UepfUHi3qR999JE+pUOHDjLlxRdfNFaLioqy2jWKnu5fe+01u2uhyPylTvHi
xW3PuRgzZoxmOfTCF+tl3AVp3ruq3vLlyyXgv/XWW44qON93tsyne3VZfjFj
xgyrh7Zt26ZZrmZg+03X7t275aHChQvfd/4BRLoHAAAAQkbHjh1lYN+qVSt9
yoEDB0ZZ9OnTx1G6f+mll5zM89SpUyovbNq0yfZRdYn+oUOHqj+9FS3r1q0r
D73++uv6FLdz5bVr1z744IMCBQqotZg8ebIvmjpw4EB9iiRimSLpVf9B/MKF
C+pE76+++srq6Xq6l+3sZC1kH0mdZs2a2T70/fffa5ZL8CUkJHh9vYy7IM30
XkgxYdmyZdLIwYMHO1lrR/vOlsl0P2/ePHWtPNuDKMTMmTPVgjLb0FNzer62
HukeAAAACBnvvPOO5uCqejt37nSU7u3ewVx38uRJlReszlBWJOvJQ3pG81a0
rFy5sjw0bNgwfYqHvxpL0K5UqZLMs3z58t5takREhDxkvNv7lStXypQpIxML
FSokqfONN94oWLCgWrR+D3ednu6d38y9Z8+ejtL90qVLNcsR7Ldu3fLietnu
gjRze2Hv3r2aK77//nsnK55mb9/ZMpPuZcVVTu/Vq5fdCuqke/GqA7aHXqQr
pHsAAAAgZOjH4dveps3tdJ+SkqIOkLY9K/zevXu5cuUyPvTLL7+oBljdKS/N
lWiZnJycM2dOeWjevHn6RM+PCZ8xY4ZmOdtaHeDtlaYmJSWpcxOMTZWJTZo0
scqwEjyNFyrUmUz348eP1yyX1r/vQ77bBWnm9sLdu3cPm/Dtt99qlssFODne
Xme172zdN93v3btXnWDSsmVLaaHdOtHR0WrTnTlz5r5NSodI9wAAAEDIkLgt
SU3G9jVr1rT6mdjtdC/q16+vWa68ZzX9iy++UFHiwIEDaor+u638x1jzyy+/
VNPNREv9J9SYmBj587vvvhs9erTEwEKFCo228eyzz5YrV07+M2bMmMTExDTL
BdAWLVpkuxZSR+b52GOPebGpn332mbGpiroC28CBAy9durRq1ap169ZdvHjR
0bY1me5/++03u9/bJCUllSxZUqZ36NDBi+tltQvSXN8Lzu3atStfvnydO3e2
OtDd5L6z5Tzdnzp1Sl17UF7D6ggHu+Qto06gcH4NhHSLdA8AAACEkh9//FEN
76tWrbpv3z41MSEhYdCgQW6ne8mD6mzl/v3767dI+/XXX2VuMrFTp056zRs3
bqi7pbdr107VvH37trrsm6NoKXN+9dVXr127piZKjFWz1ePqzJkz+/Tp07x5
c5nex8aTTz5ZvHhx9X9Z1sKFC9WCZNVk9dVPvefOnZNsq35kl2V50tRXXnlF
v+TaypUr1Y3SOnbsaNxcElq1/71RoBMm031qamrjxo2lWtGiRfULyEtQVfdA
lEyq72tf7AJX94LzVd69e7dEe2m5VbQ3v+9sOUn3sr/UXfZKly7t5GsWZdy4
caoNo0ePNh78EBsbK4tQVzZIt0j3AAAAQIiRhKLynZAYFRERkS1bNvXns88+
a6xpMt2n/Z2eNMu55C1atKhcubLK+4899tjly5eNNdWt3zTLfdbq1KmTJUsW
+b88RV3P3+7N1kWOHDkaNWoks1W3QitcuLDVVeZMHpkfHx/fqVMnfba5cuV6
/PHH9T/l/xJ+3W6qOrJdmtqgQQN9C9g29b///a++8Rs2bNjConXr1t27d58w
YYLV7QlMpntx9OhRdf6+NENa2LRpU5XBhczWD7vA/F5wYu/evfnz5+/QoYPt
4fEu7TsrTtL9008/rc+kmD2LFy/WK6ekpLRq1UpVDg8Pl70mTZLtpraJk8v6
pQekewAAACD0bNy4UY91muXH2bJly0qUs7raXo8ePeTRvn37mpmnhCDJ8np8
yJo164ABA2wvE3flyhUJenq1Rx55ZMiQIRLl1H3i1qxZo9dU0bJKlSryHwnC
qr7EKIlXFy5csJrtypUra9SoYdsqeW779u2tJn733XcSwNWZ40q2bNn+7//+
z+pOZ+abqq6mPnTo0BkzZqiI7aSpf/75p3FDWZGWGO8+cOLECTXddj62Ll++
3LVrV+Ml3CtUqGBM666ul0u7IM3FvWCXrPtLL73k6Mz3NNP7zoqsoNS024b8
+fM72heKNN7qKXPmzFHnO+hKlSol0Z7f7gEAAAAERHJy8p49e7Zv326bwd0m
oW/16tUxMTHObw126dKl9evXG89Gt6WiZcWKFdMsv5keOHBg586dXmyqzDM2
Nlbi5PHjx51cus1MU41SU1P/+OOPHTt22G2qbJZq1apJQJ4wYYIk9927d++y
WL58+cSJE9UxFWYOlnBC7da1a9dKindSLT3sAreZ3Hc+dfXqVdkaW7dudXLM
QLpCugcAAAAQEE5uxxa81OXvIiMj7T4aFRUlj3bu3Nm/jXIoJHfBA4t0DwAA
ACAgQjJaqrvPlylTRr9InW7btm3qTPnZs2cHpG22QnIXPLBI9wAAAAACIiSj
5dWrVwsXLizrVbx48REjRnzzzTeLFy/+9NNP27Rpow7L79Wrl9XVDwIoJHfB
A4t0DwAAACAgFixYUKBAgXr16gW6IV4WGxsbFRVlvC6cUqNGjVmzZqWfaJ8W
urvgwUS6BwAAAACvu3PnzurVq+fNmzd//vzNmzefP38+0C1CiCPdAwAAAAAQ
7Ej3AAAAAAAEO9I9AAAAAADBjnQPAAAAAECwI90DAAAAABDsSPcAAAAAAAQ7
0j0AAAAAAMGOdA8AAAAAQLAj3QMAAAAAEOxI9wAAAAAABDvSPQAAAAAAwY50
DwAAAABAsCPdAwAAAAAQ7Ej3AAAAAAAEO9I9AAAAAADBjnQPAAAAAECwI90D
AAAAABDsSPcAAAAAAAQ70j0AAAAAAMGOdA8AAAAAQLAj3QMAAAAAEOxI9wAA
AAAABDvSPQAAAAAAwY50DwAAAABAsCPdA25LTU29juD3559/3r1719evllcB
IH3zdTcIAPA10j3gnpSUlEuXLrVs2bJJkyZNEcxeeeWV7du3+/oFIyPnitpz
D2D5rr3mSXn3XY/K/giPyp6qHpU/KnhUPFnxif/nUVnwgkdlTlePioc7/cfW
HpXF7dwvO2p4VLbU8ahMHeBRId0DQAgg3SMkpfheUtKdEydi8ubNVaBAlkKF
KPcv+fNnCQtLj6VevRq///67r1+TpHvSPemedE+6BwD4FOkeoefevXvnfe/0
6X2//lq3Ro2HFizI8NtvlPuUFSsyzJiR4d13M4wYke7KlCm1jx496uuXJeme
dE+6J92T7gEAPkW6R4hJSblz7drR6OjozZt9W9at+276dK1BA+3ECe3OnfRe
rl3TLl/WLlwITDl/XjtzRlu6VPvqK+2LL9JdWby4blxcnK9fmQ9suv+lheZJ
8TDoba3tUdlc16OyNtKjMmWA++WDtz0q33T2qEweGMiyprFHZV0j90tMRY+K
h18OfPpPjwrpHgBCAOkeIebKlc1z5pQoVqxonTq+LbVrF6lYUata9a/cmpqa
3svq1dp//6t9+GFgyoQJf+Ws8HCtc2etW7d0V4YOrbFv3z5fvzJJ96R70j3p
nnQPAPAp0j1CzMWLa6dO1fLl0+rX92158kmtcmWtfHnt2DEtISFdlxs3tPnz
/0rZI0YEpgwfrr3xxl+dzHPPae3apbvyxhvVd+3a5etXJumedE+6J92T7gEA
PkW6R4g5eXLtyJHa0KFaXJxvy9Gj2uLFWqFC2oIF2tq16bp8/bXWsqXWpIk2
alRgiuyRt976q5Np1Up7/vl0VwYOJN37sHiYEz1M9ydLeFQ8vGiAh2HNk3Oo
R4/wqCxt41H5vI9H5b1hHhUPv1T54Xn3y5miHpVfm3tUJr3uUSHdA0AIIN3D
vOTk5KtXr8bFxfnhmnVu27bt+0GDtPHj5fXs25KUpG3dqhUtqn322V8BPz2X
99/X6tb96xIBkyYFpnzyifbee38dmd+x418H56e3Mnhw9b179/r67UO6J92T
7kn3pHsAgE+R7mFebGzssGHDqlSp0iwda9SoVrVq/kj3qana9et/xdU2bdJ7
adhQq1RJe/FF7dKlgJVz57RVq/4693/WrHRXfvih7pkzZ3z99iHdk+5J96R7
0j0AwKdI9zAvOnrpW2+92KBBeLduEem2tG1b8skn/ZTuExK00aO1IUO0wYPT
dXn5Za1Klb+OzP/114CV5cu1GTP+31H66a1Mm1aLO+L5rvzcUvOkeJjuPczX
S6I8Kh6e9e9Juv/3KI+Kh6eue3g/Pg+Lh+nek5dr3KMeld+aeFSm9/WokO4B
IASQ7mHelCkthgzJPHZsht9+eyjdljlzHurZ0x/pXpVbt4KgHDv215H52bJp
jz4ayBIerhUunB5LZGTlNWvW+PrtQ7on3ZPuSfekewCAT5HuYd4nn0T+61/a
5Mnavn3pt/zyi9av318/qZ89S/l/Zf9+LSpK+//Yew+wqM68f/+b9/3vf999
d9N8N6atm7KbmBh7w6hri8YYe4uxRE00YgcVjRUbKIjYe0PFhqKxl6iIolhQ
UCmKIqiIXRRFRMrs73mcLCEwHHG+58yZmfO5r/vKlRyGmTOcmZO555zzPKVL
y/n7YGHbtq0QHh6u9dsHdY+6R92j7lH3AAAANAV1D4rPjBl1xafl5cttdFjc
OhMTafhw6tuX5s6FsFiuXety9epVrd8+qHvUPeoedY+6BwAAoCmoezvn4sWL
R44c+cU+6Nu3/KBB9l73qalyorrevblRAI0jrrvXVOb4bMyNy+zrnU1YMr9b
4Mxd7j+Y5famLL1HsmTO2x5VkSXna40LH7FkfhU2ty9L1D0AADgBqHt7xmQy
7d6928/Pz8M+aNSoVM+e9l73ubl09ar4lCLPz4ewOE6cWDU2NlbrtzPqHnWP
ukfdo+4BAABoCurenklLmz56dOe+fRuNHVvTHvz661dENdt53ZtMlJZG27bR
9u22cMAAatOGWraUF7ZDB3XgwMpRUVFav51R96h71D3qHnUPAABAU1D39kxK
ynv16tHXX9OUKXZh69byjHc7r3sbO2gQ1apFLi5yUHrooHbqVPHYsWNav50N
W/cb2hFHZt2frsByXQeWx1xYcvKceQk282uNSSNY+vzEMvxzlgfrWC+z7plr
Pq8PS9Q9AAA4Aah7e0bUvUj7MWPkqeb24LhxNGKEhnUfFyePg3/xBTVu7DCW
KkU+PrRoES1ZAh3VDRuqJyYmav12Rt2j7lH3qHvUPQAAAE1B3dszou6bNyd/
f/2PUJudMYM8PWnZMsrK0sSwMPr73+m11+TE6I7iH/4g037rVhtdCAC1MCTE
JTk5Weu3M+oedY+6R92j7gEAAGgK6t6esbe6nzqVPDzIz48OHtTE4cOpWzd5
/3v2OIz16lGjRvTVV9SkCXRUe/euFBERofXb2bB1v6QHcWTW/dlyLJmDBuz5
kiWn7v08WDInlRs3luVIb5bMlefMSZf0Pkvmy3WBK0vUPQAAOAGoe3vG3up+
xgwaMoTGj6d16zSxY0caOpR27aL0dIexWzeqXJkqVLBs+fL0ySdUujS0a5s3
r3D48GGt386oe9Q96h51j7oHAACgKah7e8be6j4ujqZNo7ZtqUsXTaxYUX57
sH+/HPfeUbx9m1JS6No1y548SRMnyhMeoD07dWq1+Ph4rd/OqHvUPeoedY+6
BwAAoCmoe3vG3upe5GpAAP3wg5xNXgs//5xcXSk4WCazE3jjBkVG0qRJ3DyB
Wjt3brWEhASt386GrXt9r7s/X5ol8zroozVYcmY3W96N5b4vWDKv+p8whiUz
cjmTGDK/WGBO4LiwF0vUPQAAOAGoe3vG3uo+J4cePqRbt7TK4Zkz6b33qGZN
rb49sLHt2lHTpvKSfN3rFSqLukfdo+5R96h71D0AADgBqHt7xt7qXmvXr5cX
QdeoodWZ/za2cWOqVUs+Hd3PPIfK4sx81D3qHnWPukfdAwCAE4C6t2eMVveP
HtGqVbR0Ka1c6QxOmiTH3Pvzn6lcOWjXtm5d4ciRI1q/nQ1b93GfEkdm3Z+o
xnJ9e5Y7vmY5cbT1MufyC+zCctn3LAfOZPlzK5acFwwzz8+UZznDjSXqHgAA
nADUvT1jtLoXHj9Ohw5pNeOejQ0OpilT5OH71q3t11atqFkzatjQ0PbsiRnx
UPeoe9Q96h51DwAADg/q3p4xYN1nZTmPmZl0/z7FxNCZM/ZrZCSFhup/noO+
btnikpycrPXbGXWPukfdo+5R9wAAADQFdW/PGLDunUzR+DdvFjlfni2NjpbT
80VEFPTQIVq+nLy85FyHhnXFiuqJiYlav50NW/enKhNHZt0zH31FV5abWrP0
HG+9nNn0hMyvNXY3Zuk+nWVURZacuo8tw3JjG5bjPVmi7gEAwAlA3dszqHsn
0GSi3Fz93buXAgNpyZKCjhtHZctSqVL0r39R3boGtXv3iidOnND67Yy6R92j
7lH3qHsAAACagrq3Z1D3dmVmJj1+TOnpjufVqzRnDnl6kp9fQd3d6f335VQF
DRrof/27jtfdnzx5Uuu3M+oedY+6R92j7gEAAGgK6t6eQd3bjyaTbOSYGDp7
1vEULyGR8G+/LT68FbR1a7m8a1fq3Zv69DGoEydWjY2N1frtbNi6j6xEHJl1
zww95nR+zGnpmJdRc2SOGLCqM8sBs1jubMIyrLb13nyT5Z4vWY4byxJ1DwAA
TgDq3p5B3duJIu3v3KFBg+Thb2Zr6GK7duTiIofH37q1oKtW0fDhNGKE/iup
o3PnVktISND67Yy6R92j7lH3qHsAAACagrq3Z1D3dmJODp0/L98jpUvLq9Qd
znffpRYtaPJkC08tM5Pi4kTeGtq1a12uXr2q9dsZdY+6R92j7lH3AAAANAV1
b8+g7nUxN5dSU3/nnTsUHk6vv06TJtG8eY6nh4ccO65RI7n+BZwwgYYMkefn
G1k3t8pRUVFav50NW/cH6xBHZt0n/IPlrq/01Huk9QZ0Z8lc8+1NWc7px5L5
hRKnr4+5sFzck+XMgSxR9wAA4ASg7u0Z1L0uZmTIieCjo38zKorWr6cPPpBT
y73QXZlMlJ2tvydP0uef08sv05tvQgvWrVvuwIEDWr+dUfeoe9Q96h51DwAA
QFNQ9/YM6t72irQXIe/iIk9lb9nyV8W/169P77xDyckvdm9paXT4MIWF6eyu
XTR1qiydceOgBXHdPeoedY+6R92j7gEAwAlA3dszqHvb+/AhTZtG//M/9Nln
VK7cr5YtSx9/TG+9JYfNN5mK69On8tuAtWspKEh/AwNpxQpavhxacPPmGteu
XdP67WzYuo+oShyZdX/7DZbMSt3SgiXnic/vzXJrc5bM8QqYG535hdLehtZ7
oirL1Z1YMv9uqHsAAHACUPf2DOre9t6/LweQ79ePDh2iY8d+9fBhmcai7mNj
6cGD4rp3L02ZQlWqkKur/vbsCYvU07NKTEyM1m9n1D3qHnWPukfdAwAA0BTU
vT2Dure9qaly5rtp0+Rg8nkLs7Pp9Gl5gfaRI5SYWFwXL6Yff6QSJahjR/uy
TRs5O17edQdwwIBKkZGRWr+dUfeoe9Q96h51DwAAQFNQ9/YM6t5O6j43l5KS
6JVXqEwZKl++uP797/Kfnp5065YdefUqjRlDbdvKxodm3d0ro+61M/xz4sgM
lrhPWTKvXj9ZheUwX+tlzoh3uBbLfV+wZM6Ix5zOb2Mb62V+l7W7MUs/D5ao
ewAAcAJQ9/YM6t6iN2/Kses1MiZGfMIpWPcmk/yRSPsKFahixeL64YdUqZJM
ae3W1govXZIT5HXtCn9z5MgqZ8+e1frtjLpH3aPuUfeoewAAAJqCurdnUPcW
7dSJGjSgevU0sXZt+uSTgnX/72eH769ckQe+i29wMP30E5UsqdWqWue//kWv
vUZz59KyZfBXf/65RnJystZvZ9Q96h51j7pH3QMAANAU1L09g7q3qOjTWrVk
hmvh55/L4fEL170VHj9OM2bQe+9ptapWP8H/+i853N/s2TRnDpSuWeNy5coV
rd/Ohq37IzWJI7PuL33Ick1HlvsbsBzvab2bWrM8Xp1lcFuWoyey3NZMNw/9
i+WBeizHjmOJugcAACcAdW/PoO4tWqIE7dhBkZGaGBoqT9VWpe6zs+UI/KdO
abWq1hkWJv+Ar71Gr78Of7VmzXL79+/X+u2Mukfdo+5R96h7AAAAmmLkus/K
ysrMzHxix1y69PemTVH3BX31VQoPf7GT5Ivv2bMWrru3WnEnyclKD5eYKIv7
+HHbGRpK1apR2bL02Wfyn1DYqlWFI0eOaL3DQd2j7lH3qHvUPQAAAE0xct3f
vXv36tWrSXbMsWPvNmpEU6fqH9R2pah7EcW5uZp4546FMfM5Kj/c3bu0ZYut
LzOfNYtmzoS/uWoVzsxH3aPuUfeoe9Q9AAA4PEat+5ynT0P37Nm6adO6TZvW
2K1Llvy1Rg3y89M/qC168yYlJNDFi7b25Zfp8mWtnpR5RjwRBbGxtngu+/fL
7evlJc/QgHq5fHn1pKQkrXc6hq17Zi4x6545331gF5bMUfU4T3wcT+aXA0yZ
G505pt/2ptbLHMWROR4g8++GugcAACfAmHVvMj24efPVMmVe+ec/Xy5b1n79
5JOX3nqLfHz0D/nCmky0bh2NGkVDh9raP/5R27ofPJjat6chQ2zxXFxc6NNP
qXFjcnWFujlhQtXY2Fitdzuoe9Q96h51j7oHAACgKYate5GH5cqRu7sc1dxu
nTCBKle202P3T57ImelGjOB+nLBCTes+I4O2bpWBb5vnUr06lSkjZwFo3Rrq
pptb5cjISK13O6h71D3qHnWPugcAAKApxqz73NwH58/LpDp+XP9MVjAlhex2
zPy0NHn9+7hx8iJuG/unP2lY98JHj2z3XBo0oEqV5BH8OnWgbnbrVvH48eNa
73YMW/fMS7CZwfJLI5ahdVmG1WbJuYbaw4/lziYsl/Rg2WYjy59bsTxaw3rP
fcLybDmWg/1Zou4BAMAJQN3rnskK2nndlyxJmzfbdLx3s3/5i7Z1//Sp7Z7L
4sUyQEaNsiZbfvqJPDygCvr5VT1//rzWux3UPeoedY+6R90DAADQFNS97pms
oJ3X/d/+Rleu6PDQr76qbd3b0keP6ORJOUudFW7eTOvXU1AQ5LprV43r169r
vdtB3aPuUfeoe9Q9AAAATUHd6953CqLuLSrqPiSE4uOdwZgY2em//PJi7tlD
a9dS9+7SHj0gV0/PKtHR0Vrvdgxb95GViCOz7iOqsuRcgi1kPnfvkdY7w40l
cy6/vnP1dEsLlpyvg6LLstz1Fcv+s1mi7gEAwAlA3eueyQrqVfcmE2VlyRPU
izIzk27fpnff1afuS5ak+fMpONi4rl8vZ1J4/XW5Cf75T8i1SZPyhw4d0nq3
g7pH3aPuUfeoewAAAJqCutc94e2w7u/do337aONGJQMD6Y039Kl78wHrH380
ruLpf/WVHF2wVSvq2xdy9fKqGhcXp/VuB3WPukfdo+5R9wAAADQFda97wtth
3V+6RAEB8nGnTy/SyZOpRAl96n7CBOrcmb75xri2aydfva+8Ikt/4kTIdeHC
6pcuXdJ6t2PYuj9fmjgy6/50BZbLvme5tTnLkd7WO2YCS+a3IsN8WbbYwpI5
1ENIfeuNqshyb0OWA2eyRN0DAIATgLrXPeHtsO7d3KhZM+rWjYYOtayHh7zN
q6/qU/eJiRQdTWfPGtczZygiQo6ZP3w4jRkDuc6eXe3ixYta73ZQ96h71D3q
HnUPAABAU1D3uie8HdZ9kybyjyPq3tOzSEVXvvaaynV/86Z8yrA4XrtG06bJ
r1nc3SFXH5+q586d03q3g7pH3aPuUfeoewAAAJqCutc94e2w7r/5hmbMkDO1
3btn2bt3KSmJ3nlHzbrPzqZOnahhQ2rQABbL6tWpShWqXBlybd++Qnh4uNa7
HcPWPWd+MSGz7i98xHJ+b5bM6+6Xd7PedR1Yhn/O0msUy4mjWer43I/UZLnj
a5bu01mi7gEAwAlA3eue8HZY999+S8uWyRPgFW6j+ox4WVlyi9SuLf8J7dMa
NZzTTp0qHj16VOvdDuoedY+6R92j7gEAAGgK6l73hEfdm01Pl/O7rV9PBw9C
uzM0lPbupUWLnNMNG1yuXr2q9W4HdY+6R92j7lH3AAAANAV1r3vCO27dixiP
j6eMDBV8/Jhu36a//lVW5MWL8IUVr+eoKA09dYoOHKC5c2nxYic0OBh1r6EH
6hFHZt1ffo/l6k4smXXvOd56h09mydxq4z1ZThjD8kx5lkHfWC9znIcN7Vgy
p0FE3QMAgBOAutc94R237l99lVatkod0VXHbNln3SUmUmwtfzOxsunOHVqzQ
0Fmz5CyEL79MNWs6oV26VDx+/LjWux3UPeoedY+6R90DAADQFNS97gnvoHWf
nk6lS5Ofn2rHT2fPptdf12eKvRc1K0udMxbU8t49OnJETpAnXirTpmmiqKSm
Temtt/QfS1ALe/SoFBERofVuB3WPukfdo+5R9wAAADQFda97Kipoz3Wfk0N9
+lDr1tSihTo2aUJ//jNdvqz/n/25ipq+eJEuXLAX9++nLl3olVeoa1fq2VMT
O3SQQ/SLzd2/vxPq7V01NjZW692OYeveoa+7nzWAJXNeucH+1jtgFsstLVj6
DmPJeeLC0LosN7W23oR/sDxYh+XMgSxR9wAA4ASg7nVPRQXtvO5nz5az3g8d
qoIeHuTmJvvU/o/dP3hAR4/S6tW0YYO9OGcOffUVffopTZhAPj6a6OlJPXpI
f/rJCZ0+vdqFCxe03u2g7lH3qHvUPeoeAACApqDuda9FBe257lX30SN65x0H
qPtDh+SB7D/9iT7+2F78xz/kVRLz5tHTp1o9a5OJ7t4VFeycBga6XL58Wevd
DuoedY+6R92j7gEAAGgK6l73WlTwher+0iXaulWOar5wIdfateU/bVz3jx/T
G2+YU8uu/eknatuW2rSRA83ZiRMnUvv21KwZeXuTr68m+vjQuHHyzHyn1M2t
cmRkpNa7HcPWfco7xJFZ9+dLs2TOiHe8OsuffKyXeeX75pYsl/7AkvPEhXsb
stzYxnqPubDUd7gD1D0AADgBqHvdE16tut+3j378UZ6eXaUK11Kl5MneNq77
jAw5CH/dutS4sV1btiy1akVLluj/8sj/Opkwgf77v+WwhCVKwBe2Vq1yISEh
Wu92UPeoe9Q96h51DwAAQFNQ97qnmXK1Fb/u16yRZ9QPG8b9MCwUgb9gga3r
PjtbXoA/ZowK66+pIu2bNZMDDug+mF6ep07JSQfat6fvvoPWOHx45TNnzmi9
20Hdo+5R96h71D0AAABNQd3rnvBq1f3MmXLOskOHKCKC69dfy1q0cd0LRaju
20e7dtm1Q4bIIezataOdO+3I7dtp3TpopTt31khJSdF6t2PYug//nDgy6z7+
Y5bz+rCMqshSx68xw2qznDycJXPltzdlubW59TLrPuYzlsy/G+oeAACcANS9
7gmvVt3PmiWvII6Lo4cPubZvT0uX6lD3GRmUmirnm7NnIyNp5Ej54jGPIW8/
du8OrXTUqCrR0dFa73ZQ96h71D3qHnUPAABAU1D3uie8WnU/e7Yc7S0hQYXH
1WXMfEfx7l15mkT9+vKv7Vi2aSOvKWjSBBa0d+9Kp06d0nq3g7pH3aPuUfeo
ewAAAJqCute9FhVE3duhWVl09aq81P3sWQdz3z45LEP79rCggwdXPn36tNa7
HcPWPfPac2aw3H6D5aQRLKPLsvxxkfWOmcBy11csmTMJ6nvd/ZqO1htbhuXa
b1kOmcoSdQ8AAE4A6l73WlQQdW//mkz06JEKV0PYwLg48vSkrl1hQUeOxJn5
qHvUPeoedY+6BwAAhwd1r3seKoi6t39FNbu7U7du+l88/lxbtaKKFWnGDHll
AczvqlUuV65c0Xq3g7pH3aPuUfeoewAAAJqCutc9DxVE3b+QJhM9eCCvi7el
Fy9SnTr0+edUr569K9K+RAmaPl0GPsxvYKDL5cuXtd7tGLbuf25FHJl1f+Mt
lsxHP1KTJfPROTIzU8c1F56swnJbM+u9/jbL/Q1YMv9uqHsAAHACUPe6N6mC
qPsX8vFjWWqDBsnJ6G1mz55UrhwtWEAhIfbuzJn0l7/QG29QyZLwd9apU+7A
gQNa73ZQ96h71L1tRN1bJ+oeAACcANS97k2q4PXrcgr78ePp5s3nO3mynBFP
lbrv0IGWLJFHpbOyHMmUFBozRp6C3r+/7fzmGypdmlaulOPs2bkrVtDf/466
R92j7lH3zxd1j7oHAADgiKDudU94BW/flitZqVKxRgarWZO+/FKdum/dmubO
pfBwio93JH18qG9fcnOjWbNsp4eHPN3d05PWrLF3ly+X54FMnQoLGhBQPTEx
UevdDuoedY+6t42oe+tE3QMAgBOAutc94RV88IB++EEevu/R4/nWrq1a3Yt7
E/+jX7KEgoIcye+/px9/pNGjaetW27lokTwzf8gQeT07dFBx3b2mrvyOODKD
5dq7LGf3ZxlRlaWOgcwcVc/PgyVz5Te3ZMl54szX26nKLFH3AAAAUPe6J7yC
JhPFxNDevbR58/Pt3VtepK9K3c+fT40aUeXKVK2aI1mqlPxeYvFievrUdqal
yQP3vXoV6xsYaJ96elaJjY3VereDukfdo+5R96h7++H69es7d+5cvXr11q1b
k5OTi7pZRkbGsaJJTU215ToDAMBzQd3rnvDKXr9O0dFyPZ/r0KHUooU6db99
uzy//bvv5ERvDmTt2tS+PY0aRadP286TJ+XJ+Z07y8EKoIPq4VH5zJkzWu92
UPeoe9Q96h51byfs27evd+/evf6Dq6vrL7/8YvGWKSkpvYrm1KlTNl5zAABQ
BnWve78rm5tLOTmUnf18Z8ygNm3UqfvMTEpPlzO5O5aBgfTZZ/T22/JbDlva
uDE1bAgd2J49K0VERGi92zFs3R+oRxyZwXK0BkvO1OdC5gXgi3ta77w+LJl1
v6QHS+a87cz57jkv14v/ZMm87n5OP5bGqfuEhASR83379g0JCRHxvmfPHnPp
X7lypfCNHz58uL4Q3t7e4vYDBw68deuW7dcfAAAUQN3r3u9qqeKMeA5qaKgc
D7B2bXkBvnHs1k2eZQE5Dh+OY/eoe9Q96h51b5S6nzdvnniyu3fvzluya9cu
sWTFihXF+fW7d+8OGjTI1dU1MjJSs3UEAAArQd3r3qRqiboXnjwphykwlFu3
0vr1+g9p6NDu2lXj+vXrWu92UPeoe9Q96h51rzsmk8nNzU082fv37+ctTEtL
E7Xev3//nJyc597DtGnTiv9VAAAA2BjUve5Bqpaoe2FKCl26pJphYbRvH/3y
i/26Zo0cZ+Dbb6l7d2i9o0ZViY6O1nq3Y9i6P1iHODLrPrISy9WdWDJnxONc
us4cMWDPlywDurMcO45lSH2WoXWt99wnLA/XYjm/N0uD1P2tW7fEMx0yZEiB
5R4eHmL5zZs3lX/95MmT4maDBw9OT0/XbB0BAMB6UPe6B6laou5VV7w89u+n
3bvt15kzqUED+sMf6M03ofXWrVvuwIEDWu92UPeoe9Q96h51rzuJiYnimU6c
OLHAcrFELL948aLC7+bm5o4cOVLcLCQkRMt1BAAA60Hd656Qaom6V1fxl3R3
lzLjQlO7daOyZWWftmoFrXfgwMo2uHwSdY+6R92j7lH3unPu3DnxTCdPnlxg
ua+vr1geFxen8LsRERHiNh4eHk+fPtVyHQEAwHpQ97pXpFrOmkUtW1JMDD1+
DFVw2zZ65x05CH/r1vZrzZr03ntyJX19ofUuXVo9MTFR690O6l6Xuo/7lCVz
Or/j1VlOd7feFV1ZhtVmybwAfLwnS2bd72xivcwp7ZiDVCz6kaWh6t7Hx6fA
crFELD9//rzC75pvk384PgAAsDdQ97pXuVqKSClbloYNIy8vqIKdO8u50sRf
9cwZ+1W8gKdPl1eOjxgBrXfGjGoXLlzQereDukfdo+5R96h73UlKShLPdNy4
cQWWjx07Viy/evVqUb+Ymprq+oz8w/EBAIC9gbrXvcrV0t9fHsPt2FH/Odqc
w7p15ZUOGzYU/DtnZlJ6Oj18aBfev08//0xubpClj0/Vc+fOab3bQd2j7lH3
qHvUvYps3bo1oF49BS0+o4cPH4rlbm5uJpMp//KBAweK5eKnRT3cvn37xA38
/f3VfyYAAKAeqHvdq1wtY2Np1Sp5JHfmTKiCXbvKseiDgwv+ndetoyFDqEsX
/b9/EHbvLi8br1sXsuzeveKJEye03u0Ytu6Zncise+YMZczr7k9XYDl8svXO
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
tGPZczFL1wUsmcMdbGlhvcwtPqcfy4W9WDrcJ3lR92PHkYKoe7VA3RtKi9sd
OBCoe9tnMupeQdvXvclEWVkFTUujkiVVq/uMDOrbVz6vefNo6VIHc+FC+vhj
+stfqHJlp7V9+wrh4eFa73ZQ96h71D3qHnWvIqLuPceTgqh7tUDdG0qL2x04
EKh722cy6l5B29e9RdUdM//xY3kQfMoUef7/1q0O5s8/U/369NFH8v2S35o1
qUYNJ7FTp4pHjx7VereDukfdo+5R96h7FRF1P2YCKdinL+peHVD3htLidgcO
BOre9uWIulfQWeu+a1d5EDwpSf8h8l7U9HQ5O554pxw8+JsHDtDGjbR4sZMY
HOxy9epVrXc7hq37zD8SR2bdx3/MkjnF2MY2LHsssd5hviw5k/EJR3mxZK48
c6gHTp6H1Ge5vSlLPw+WDvdJXtT9qImkIOpeLVD3htLidgcOBOre9uWIulfQ
fuq+ZEk6e5YePFDB69epY0dZkTdv6r8dhVlZ9OjRC3jtGl28SFFRv3nkiKz7
BQtoyRJnEHWPukfdo+5R9w73SV7UvfL4iqh7tUDdG0qL2x04EKh727cV6l5B
+6n7116TI8bPmqWCU6dSrVry2L091H1uLsXGip79daaA4ig2/dq1tGrVb7q5
UZ069P778qR9J/CHHypFRERovdtB3aPuUfeoe9S9ioi6HzGJFOyNulcJ1L2h
tLjdgQOBurd9XqHuFbSTus/MlNeVDxtG48er4OjRVK2aCnVvMlF2tvzmgeOD
B/Jo9bRpLNu3p0qVUPcvBuoedY+6R92j7lVE1L3yxI6oe7VA3RtKi9sdOBCo
e9uXI+peQTupe+GWLTRhgjrTqQ8fTlWqqFD3Iu1Fm1+4wPLUKXr5ZerShXr0
oJ49rbR6dRnF335L/fs7g97eVWNjY7Xe7Ri27vUdVe/K31l6jWLJGZ9NyCnc
oVNYrv2W5YquLNsGs4yqyHJNR+s9WoOlcqs+13FjWTrcJ3lR98rvAtS9WqDu
DaXF7Q4cCNS97bMRda+g/dT9yZO0cqU6l3XPmyfPY+fX/Y0bdPgwBQbShg3W
u2KFfLOPGUOTJ5OPj5X++CN9/z317k0//eQMTp9e7cKFC1rvdlD3qHvUPeoe
da8iou6VX8a9+6Hu1QF1bygtbvfC5ObmxsTEBAQE+Pj4jBgxYtKkSStXrjx4
8GBOTk7hWx47dmzNmjVz585dtWqVuE12dnaB28THxwcFBfn7+4u7mjZtmvj3
6OhohUf/5ZdfZs+enZ6eXszXMAdbPpYqoO5tn42oewXtp+6zs+X5+U+eqOC9
e/JYOX9UPfHHb96cSpSQZ8Vbbfny9NJLdPWqHA/f6tP779yhvXvleAL+/s7g
ihUuly9f1nq3g7pH3aPuUfeoexURde/hRwqi7tUCdW8oLW73AqSmpoqo72UJ
Ly+vGzdu5N3y8ePHEyZMKHCb0aNH37t3z3wDk8m0ceNGi3cVHBycm5tb+NEj
IiLMN8i7E+2w5WOpBere9tmIulfQfupeRUVHi7qfP5/OnaO7d6132TJq3Fie
5C/uzWo7dJB1v2MHhYXJMwGs88AB+XTc3Z1EH5+q586d03q3Y9i6F/+b4cis
+63NWQZ9w3LmQJblz1gvs+6ZE693D2DZeRVL5lY7UtN6l3djucCV5TdBLB2x
7gdPJQVR92qBujeUFrd7fp48eTJ8+HBz8wYGBkZFRd28eVM04I4dO/r16ycW
/j/2zgMsimv/39/8b+69uTfemG7KTUw0zSQ2LBhj12iMiV2jJvaOCCiiIopY
UFTU2LvYjaCJvRcUFSlWxBZEEBRsKDaKQP7nZPPjEsQR9jszu7P7eZ/3ySPL
ws6W2fDuzDlHfDf3CP7ChQvFJW5ubiLhz58/v2nTpkGDBolLJk+ebLqCuND0
q8Q1z507l5SUJC5ZsmSJ6cLdu3fnvemcnJzg4GDTrWhd3Hrelrqg7vVvPdS9
grZa961b04QJcuZ58QCarbs7tW1LwcGsjblzR+7sL74ozwGAJr/8suzevXu1
fttB3aPuUfeoe9S9ioi6HzCFFOyNulcJ1L1dWeDznpcVK1aIbzk5OT1+ZCQx
MVFcLr4bGhoqvszMzDR9uWvXrtzrHD582NTLpnPdAwMDxb9HjRolajrvrzKd
GzBp0qTcS65fvy6+zHtwX7vi1vO2VAd1r3/roe4VtMm6T0+nqVOpf38aNozV
KW3aUNOm5te92Iz4eIqKkofvO3aE/9PTs9KpU6e0fttB3aPuUfeoe9S9ioi6
d5tKCqLu1QJ1b1cW+LznkpaWZjqcvWnTpgJfLStXruzbt6+oQvHvpKQkb2/v
AQMGpKam5l4hPT3d1Mvx8fHiy3nz5ol/z5gxI9/viY6OHjly5OTJk3NPzt+8
ebPpU4W9e/eKmzC7uEWuLl++vMBz/nNR67YsAupe/9ZD3Stok3WflUUREdSy
pRw1L/LcbB0d6auvzK/71FR5Nv6WLfTrr/LZhLlu3VrtypUrWr/t2G3dr+xA
HJl1z1wRz/UnlkGtWX69zXzr7GO5rw7L6f1ZVg1jeaI8y8VdzXdRN5bMlQQd
j7A0Yt0r74Coe7VA3duVBT7vuYSHhysfy077A4WX0+nTp8WP9+7dOyMjQ3wZ
HBxs+jIoKCjvgP3H2bdvn6jyGzduiH+bTgkwr7jHjRsnfjYgICDf2QJa3JZF
QN3r33qoewVtsu5zcujKFVqzRp6Zz7F3b6pfX07CLyK9qG7bRgEBcq578fB6
eclF+mCuU6dWOX/+vNZvO6h71D3qHnWPulcRUff9p5OCvZ1R9+qAurcrC3ze
czEd1HZzczPvtfTgwQNvb++8B+sfPnw4ceLE3BPghw4dunTp0vDw8Hv37in8
Hs7x9ISEBGdnZ/HjK1euLMz1cexerQ3TFNS9GaLuLe6CBXJWPVGj48cXWVdX
efT/X/+ixo1hfvv0qXj06FGt33ZQ96h71D3qHnWvIqLunWeQgqh7tUDd25UF
Pu+5iCIWl/v5+eW98MyZMwEBAYv/YNEfrFix4vGfTUtLM4W8i4tLSkpK7uWZ
mZlr1qxxc3PLO869T58+mzdvftLhdWZx556BEBQU9NQro+7V2jBNQd2bIere
4ooX7bJlNHiwPPheVLt3l2f1//vfcvA+zOfAgQ4nTpzQ+m3HbuueuTwZs+53
12f57SaWzE82ODfdZDPLwDYsmQPAm25geaAmS84ihjOcWXZcxvKD31gase77
zSQFUfdqgbq3Kwt83nNZu3atuNzDwyPvhXv37u31V0QR5/vBO3fujB071jSY
PTo6+vHfnJ2dHRMTI/brSZMmibQ3/Z65c+cW+Jp8anGLmwhTZNiwYaabELf4
pF9SyNuyNlD3+jca6l5B1L2Ct29TaCiNGEHe3kW2b1/69lt67TXq1Anmd9iw
SlFRUVq/7aDuUfeoe9Q96l5FxN/kTrNIQdS9WqDu7cd8kf74i2HPnj2mb92+
fTv3wuTk5IP/xy+//PJ43YsrmBbRc3V1zTcWUkT9gwcP8t3KnTt3RNebbsg0
+D0fTy1uHx+fXoVG+QRO1L1aG6YpqHszRN1b3EeP5Mx4Fy/+aUyM9LffCmV0
NO3fTxMn0rRpML8rVjiaJm7VFNQ96h51j7pH3auIqPs+c0jBXqh7lUDd25UF
Pu+5XLlyxVTEYWFhBb5aYmNj89V9QkKCu7t7rz/G1OebxFh82bt3b3Fl0+p4
ecnJyRk0aJD4qf379z9+K08t7s2bNy9TxPTLBRMmTEhPT3/S7ynMbVkbqHv9
G824de/sTIGBlJGhofv2yWPTqPunmpUlSz8lpQhevChn9ps3D+Y3MNBR/K9H
67cdu617zihmIbPuT5VlyVzZbU89lo22m2/rIJbze7L8/meWQ/xYxpVkubmJ
+TJvmjlfgfIg9KdqxLrvPZcURN2rBererizwec+Lr6+v+Fb//v0L7L6oqKi8
dZ+YmGgaUD927Ng7d+7ku3J2dvbAgQPFd3fv3v34twYMGCC+VeCaxczivnLl
ith+8RvEfXn48KHylVH3am2YpqDuzVDUfdWqcnFwsf3a6e1NP/4op4Cz+P21
ZrOz6eRJ+XSULEnvvVdY33mHSpSQJ+fDfNasWXbfvn1av+2g7lH3qHvUPepe
RUTd95pHSqLuVQJ1b1cW+LznJT4+3hS8IpBDQkKuX7/++x8xLpI5KCjI9C1T
3efk5Pj5+YkvR44cee/evay/YvptAQEBpmPo69evT01NNV0oUnrGjBniQmdn
58zMzMe3gVPcIueHDx8ufnzUqFGPnzOg7m1ZBNS9/mlm0LrfuJGqVaNWrWjG
DA11c6PWrcnFxfL3VwcfPaLMTHNMS5On2ZcuTW+/XYS6V8t336XXX7d8kqPu
jSLqHnWPukfda4Go+x7zScFe/VH36oC6tysLfN7zcfz4cVdX19xx6wMHDjSt
MWfC29vbNJ3R0aNHFUa7x8TEiOvcvXs374p4bm5upqP5po8IDh8+XOAGcIrb
NKJfbGTuhwnKoO7V2jBNQd2b4c2b8k/l7t2pXz8NbdFCLuku/mHx+6u1OTmU
mEgXLtD580X29Gm5yF2nTrR3L8XF6W1oqPwcxt/fdgwIqBobG6v1247d1v36
ZsSRWffRn7L0HsWSM4Jb2H6V+VY/xNLfnaXyKuRPdeBklszJFvbXMt/UF1jO
7suS+aGKEeu++0JSEHWvFqh7u7LA5/1xbt68KdIvt8QF/fr18/X13bVrV+5x
+U2bNinU/cWLF01Xe/To0Zo1a7y8vHK/5ezsPGHCBIWuNH2YkHdmv8KzZcsW
cVuF/1nObVkE1L3+WWfQuk9LkyOUhw6lIUM0tEMHuf64s7Pl768Oj6fI5OBg
OdVAUd21S85wKF5FovTNu/XUVDkDf5GG7ed65AjNnUuzZtGcOTbimjWOly9f
1vptB3WPukfdo+5R9yoi6r7bIlIQda8WqHu7ssDn/UlkZ2enpKSIP6KSkpLE
v5mvtIcPH166dEmVX6VMgWf72wyoe/2zzqB1L0xPp4cPtVV0q5eX7c+ql5kp
X3tvvUUVKlCVKkW2UiV5evz335N4GZtx61lZNHu2DJ9hw8yxVCn64gtq3lye
yGEbentXKnDpVXVB3aPuUfeoe9S9ioi677qYFOyJulcJ1L1dWeDzDgwE6l7/
sjNu3eugnayIl5FBISFy1HzbttS5c5Ht2JEcHeX69QcP0o0bRfP6dblAnulM
CU9PcyxRQn680KiR/HjBNhw0yOHkyZNav+3Ybd3v/Io4Mus+pAbLOvtYMucc
4Az5b/4rS+aKeI5HWDIXImR+pDPLyXyZ6z/6DWHZch1Lw/0lL+q+8xJSEHWv
Fqh7u7LA5x0YCNS9/mWHulfQTuo+PZ22baOvvpKhffdukRWRPnUqlS1LkyfT
hg1FU7zwxoyREyR6eNCkSeZYsqScrr92bWrQwEbs0aNiRESE1m87qHvUPeoe
dY+6VxFR952WkoKoe7VA3duVBT7vwECg7vUvO9S9gnZS92lpsu4bNaLkZHN+
PDOT1q2The7pKce/F8np0+WkhRUrkq8vLVtmjt99J9c16NBBnkJgGw4dimP3
qHvUPeoedW+wv+RF3XdcRgr2dEHdqwPq3q4s8HkHBgJ1r3/Zoe4VRN0Xxpwc
unaNfvhBLlBY1LPQ27ShWrWoXDnavJni481R7DXiNbx8ue24aVO1xMRErd92
UPcWqfuLpVh+HsVyxQ8sawebLzP01rVkWW8PywmDWe6rw9JlmvkyP8/pOZ9l
wx0sDfeXvKj7H5eTgqh7tUDd25UFPu/AQKDu9S871L2CqPtC+vChfAmtXk0/
/1w0xctvyhQ5KV/PnmbmkocHdetGXbrYjl5elUwLs2oK6h51j7pH3aPuVUTU
fYeVpCDqXi1Q93Zlgc87MBCoe/3LDnWvIOpea3NyKCGBXniBXn5Zzo8HhbVr
l923b5/Wbzuoe9Q96h51j7pXEVH3yitH9EDdqwTq3q4s8HkHBgJ1r3/Zoe4V
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
LT/hLy1YMj9U4XwcxFyBcawXy2G+LI1Y9889JAU7MOredJx9+/btuZds27ZN
XLJ06dICry8iXXxX/CWce0lcXJy4ZMCAATl/4O7uLr7MOwrsypUr4hInJ6dH
jx6ZvZ0AAJAP1L3+oO6tx4wMeUh6+vSn6OtLlSpZXd2LjV+3jiZMIB8fnRwx
gtq2lXXfsCE1a2Y7urig7lH3qHvUPereeHX/z3RS0Oy6FzHu6uoqHpDbt2/n
Xpiamtq7d29nZ+esrKx818/OznZxcRHfvXv3bt7LT506Zcp58XtGjhw5bNiw
fD9oOpP/xo0b5m0nAAA8Dupef1D3VmJWFt24IQ9JjxpFo0crOXgwVahgdXUv
PHSIli6ln37K79Spmjh5Mjk50VtvUfPm1L697ejh4XDy5Emtd3zUPeoedY+6
R92riKj7f2SQgmbX/bVr18Sj4e7unu/yQYMGicuTk5PzXZ6UlCQuHzNmTE5O
ztmzZ7du3bpnz56LFy8q30pCQoL4KWdn5+zsbPO2EwAAHgd1rz+oeyvx2jVa
vFguiCbiffhwJQcMkCPcrbDu09IKGFlw65acBjAxUX0TEig2lhYutDXXrnUs
zGTITOy27uvtIY7Muv/gN5ZvXWFZ/gTL6f3NlznuvsEuluM8WTI/mmB+tsBZ
CpB5010CWM7vydKIdf/3TFKwg6eZdR8bG2uq9XyXi0vE5Y//rRsVFSUunzx5
8pQpU/JOmrdw4cLMzMwCbyIrK2vSpEniOnPmzDFvIwEAoEBQ9/qDurcSr16V
Z90XK0Zjxsh15RQUjeDgYI11X6Ai7X/7jU6fpuhoTVy0iGbNopkzbcdVqxyf
NFGSiqDuUfeoe9Q96l5FRN3/LYsUNLvuz549Kx6N8ePH57t8woQJ4vIzZ87k
uzwiIiJ3Xv1ly5aJLzdt2uTs7CwuWbdu3eO/Pzs7e8GCBeK7bm5uOC0fAKAu
qHv9Qd1biaLuRaV27iwPdisvAxcXRw0aGKbunZ3pww/ppZfo7bc18fXXbc1a
tcru27dP6x0fdY+6R92j7lH3KiLq/v9lk4JPqvvz58+fewJXrlz5/f/q3s/P
L98PikvE5eJq+S4PCwsz1f2WLVtyLzx9+rS4pG/fvrmL4pnIyMiYNWuW+JaL
iwv+bAYAqA7qXn9Q91aiqPvZs6lnT3r48CnXTEqSdT9/vhznHhFh7TZvLscR
VK8uZ7Y320aNqFo1+XvKlbN9W7Ysf/jwYa13fLut+xa/EEdm3X+1k+WLt1m2
WsvSe5T5clbTEzK3fEEPlpyPNYTtV7F89Yb51t3LkjnuPqg1SyPW/TM5pGD7
guo+Ozu715OZPXu2uM6lS5fEv318fPL97MiRI8Xlly9fznf5iRMnTAfu09PT
814+fPhwcXlsbGzuJXfv3h0/frxpUH/eywEAQC1Q9/qDurcSC1/3yclyRbzP
PydHR/riC2v37bfJzU2emf/Ulf4UvHmTNm+WM+n5+9u+S5Y4xsXFab3jo+5R
96h71D3qXl2WPI0Cf2rZsmVLn4DpPC7R4OLRcHV1zcnJyfuDpinu802MLxC9
Ly7v06dPvun0TWfynzp1yvTltWvXTGvci+oX/1brQQAAgLyg7vUHda+ijx7R
hQsUHEyHDxfZjRvJw4O6d3963aekkIsLNW1KrVtTmzbW7rvvUo8e8jE5f95M
z52jqCg59/6kSTRxou27eHHVS5cuab3jo+5R96h71D3q3igMHTo032F6U8J7
eno+fuVHjx6ZRtnn/aBYlL5pjv3ExETxZUpKypAhQ8SXIvnv37+vw10AANgn
qHv9Qd2rqOjuAQPkGPMPP6SPPiqapUrJw9wdO9KDB0+5lexseXJ+aKgxdHCg
ypWpb195BN88+/enrl3p+efFH3tyFL/N6+tbOTo6Wusd327r/tNo4sis+4Y7
WL4bz7LDSpZeY813pA/L7zaybLSdpd8Qli3XsawaZr6VIll2XsLSeQZL1H1e
goKCxAMyY8YM0+F48d/p06fnnSXvwYMHMTExuZ8ML1q0yDRUP3eS/B07dohL
vLy8TCcA+Pv7m66QkZFhgfsDALAbUPf6g7pX0evXqWVL6tZNLltf1D/73d3l
4fguXZ5+7F6Yni7PzzeE/v40aBB5eZkfRCNGyMAXfPsttWhh+7q6Ohw7dkzr
HR91j7pH3aPuUfdG4e7du+7u7qaZ80XRjxs3Tvx78ODBuaflnzp1yjTpvenL
W7duma4/ZsyYjRs3zp071zQS/8SJE7//MY+faVy/s7PzwMdISkqy2P0EANgc
qHv9Qd2r6NWrVLOmnM0+MVH+u0geP05+fvIk9sLUvYFMSKDt22nOHPOdOVOu
EiioWtXy0wjo4A8/VDhy5IjWOz7qHnWPukfdo+4NxM2bN/38/EShm8JcZL5p
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
PZrefVf63nvmW7KkPGfgtdcsbM2aZfft26f1zmu3dd90A3Fk1j3zs4X+01nW
28OSs6gcc8tbB7Gc5sJy9HCW7v4s3403X+YsE/+5y3KWE0vUPQAA2ACoe2OB
urcNraTuvb2pQwe5YN/x4/Tii9SwITVvXljLlxdRTMeOyftitmIbIiLksH1/
f0saEFA1NjZW650XdY+6R92j7lH3AAAANAV1byxQ97ahCNtXXpET04myTk21
jKdOyfXsOnWSwwfElnzyCdWvT40bF9YyZahWLTmrXkqK+d68KT8fmDlTTu43
Z47FXLPG8fLly1rvvKh71D3qHnWPugcAAKApqHtjgbq3DUXd/+tfNHUqzZ9v
MceNk5PpdeggtycjQ06Yv20bbdlSWH/4QZ5a7+1NY8aYr/jxypXJ0VH+tt69
Lebo0ZWjo6O13nnttu6ZY6iZdc+89V0NWDJvfcxw8x3my9JrLEvxtwVH5uNm
tzJfrqh7AACwAVD3xgJ1bxtevizHm/v4yHntJkywjEOGyCn1THWfk0Px8XTy
pDySXkgHDaIKFeSU+x4e5uvqSv/9rzwNoFkzGfiWcujQSqdOndJ650Xdmyfq
HnUP9Xm5ou4BAMAGQN0bC9S9bXj/Pi1fToMHk7u7xezRg+rWpfbt/9yk7GzK
yiqCcXHyCP7EiXJGPrP19aWPPqKqVeWWfPWVxezZs2JERITWOy/q3jxR96h7
qM/LFXUPAAA2AOreWKDubcP0dNq/n+bOpVmzLObo0XJyPNOxezO8dUvOxffz
zwW4ejWtWEHLlj3dRYuoVStq3VoeQO/Y0WIOHepw8uRJrXde1L15ou5R91Cf
lyvqHgAAbADUvbFA3duMjx5RWpolPXOGvLyoc2cztz8nRx7BT08vwAcPKClJ
nur/VMUrOTJSnsZQmI8CtHPjxmqJiYla77x2W/eOR4gjs+57z2Xp786ySwDL
AzXNd3p/li1+YTnVjWVoNZY/rGBZJdx8mY+b7zCWD/7NEnUPAAA2AOreWKDu
oVrGxtKwYfLQOWfS+wKnwRfZvnEjbdr0dMXVVq+W5+dzpubjO29e1ZiYGK13
XtQ96h51j7pH3QMAANAU1L2xQN1DtRR17+RE5crRjh1qKoJ9wgT5fvL661Si
hDGsXbvsvn37tN55Ufeoe9Q96h51DwAAQFNQ98YCdQ/V8sYNGj9ehC23nvLp
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
Nzm57+QOedZLliyRv2fPnl2mTBnjLkWLFjWa6XRfqVIleaaPPfZYlixZdJuS
JUv++uuvDvM0uWBFhQoVihcvXqBAAT1D+dfhXmvWrPGht14tAQn+d999d/36
9eXvs2fPdunSJXPmzPout91225dffqmb1alTRx7a5QKPi4uTR5dbV69e7XJ1
eLBs2TK5Y968eZ1vypMnj9y0du1aY0r58uVlyrVr18LCwho3bpw9e3bdT1kO
mzZtsr/vxIkTnVeB2L17t8OjTJs2rXTp0kWKFDGOZJF3jf1dmjRpYt8+Njb2
jTfesF+wOXPmbNiwofPLQIuOjpYlP3PmTG+XDAAAHpDuASCj8Srd6w+Ip59+
2qHZtm3bZLrO9RLzdTPJufpwfv3f9u3b29/lueee09MlN7Vp06ZWrVp6n+em
TZv666l98sknEkLPnz/vfJPey91I3/Xq1cuXL5/+78svv+zQuGvXrjJdkrLM
ULfJlClTsWLFJDnaHzGt072xHAoVKiRL4I477tDtZ82aZT9PkwtWSEi0b3PL
dG+yt14tgWPHjqmUb2wk2pcrV043kxUtz0L+WL58uW722WefyX8LFCggWd5h
Dt9++63cVLx4cR9+of7tt9/kvrIqnW+6/fbb5aaVK1caUwoWLChT3nnnHVlQ
8op66KGHSpQooTucJ0+eS5cuGS0d0r1+I4idO3c6PMqUKVN0G+MbG8/pvl27
drqZLHBZHU8++aReUOLDDz90+Rxfe+01eSN4u2QAAPCAdA8AGY1Xe+ZLBvGQ
7oXkmoSEhK+//lr/V9pLmhs6dKj8fd999xntp06dKlMkmk2fPt3YaTksLEx/
FSDJ1C9PrU6dOhKsXN60evVqeaz33nvP2LH8+vXrPXv2VCknrnc4r5rOy5Ur
V5Z/y5YtK30+c+ZMcsrZ8I4fP240M9K9PFPjF+oTJ06UL19epfxuLu3dddXd
grX31FNPKRN75pvsrVdLQKf7bNmy6X0t+vXrt3btWr2XhczTOOwiNjZWn3Ru
xowZDr1q2LChTP/ggw88d94lH9K9ePTRRw8dOqQnystbT/zss8/cPYoEf3fp
3rB9+3bdxsOe+adPn9Ztvv32W2OivAu+++67Vq1aubsmwubNm+UuzrsNAADg
M9I9AGQ0fkz3t912m/6hPCIiQv5buHBhnfskfOkfnXXjuLi4nDlzypRRo0Y5
zGf8+PEyXZKg1WeVnCw9kf5I4nbXwDlrX7t2Tf9EPnfuXPvpOi+L6tWrx8TE
uJuhTvf33ntvVFSU/fR169bpu3s4c5rf0/0te5vszRLQ6V7z/N3L+++/L20q
VKhgP/Hw4cM6np89e9Zz513yId23bNnS4dlJ2Feudksw+Cvd7927V7dZsGDB
LZ6YnaSkJHm/yNIzfxcAADwj3QNARuPHdG/kdwmJ8t+KFSvq/0pc0r8I6/9u
2bJF/9c5e+qWEtB8fz7/WL16tcxKYuktWx46dGjhwoVjxozp3bu3zrajR4+2
b6Dzsiwoz9dK83DO/CJFishNEyZMcHdfv6f7W/bW3i2XgJHuPaRjTR9Crux2
1xeDBw9WTodmmOdDuv/hhx8cWurdEtq2bevuUfyV7kWtWrVUyq4p8pTnz58f
GxvrobFBGnfo0MFMSwAAzCDdA0BGk/rpfvr06fqDJosT4zPI+rn15syZI/HK
w9nyjx8/3rdv30KFCikn7777rn1LnZdfeOEFz4/oId3ruDdgwAB39/V7ur9l
b5O9WQJGuj958uQtZ6ufS7NmzfR/ExISChQoIFNWrFhxy/u65Jd0r3vVqlUr
d4/ix3Qvs+rWrZs+j4RKOaVe69at586d6/lVLS+POnXqeGgAAIBXSPcAkNGk
frrXB92LXm7069fP+vP69NNPPewDsHr16rx586qU/QR69+69cOHCffv2Sbf1
4eEu033Pnj09P6KHdF+hQgW5afjw4e7u6/d0f8veerUEjHQfERHhebbJKcdl
SBLPlCnTgQMH5L8LFixQKaesN3+5PQd+TPcelrAf070mC+2jjz6qV6+e7qRK
OS3hunXr3LUfOXLkQw89dMvZAgBgEukeADKa1E/3YWFh+oPm1KlTfnoSLsyc
OTN79uzubi1ZsqR0oEOHDtJV++mBSPfx8fH6soBz5sxxd18z6b5t27bS5pZf
fZjsrVdLwKt0L55//nmjq61atVIej0q4pd9//10/unH6PkMqp/s9e/boNpGR
keb7HxMTM3nyZN2x3LlzOyxww6BBg2rWrGl+tgAAeEa6B4CMJvXT/ZUrV/TV
0m95ELcVy5Ytk4ewvwKaQZ/0TzgcmX7z5s2qVav6Pd1//vnn+uHCw8Pd3ddM
upfFpUxcMdBMb71dAt6me3mmmTJlypUr15EjR2RdZ8uWLTo62swdXdq9e7d+
dIdTys+YMUNPT7V0HxUVpdts2rTJQ4ddnhhf7qLvu2HDBpf36t69e+vWrT3M
FgAAr5DuASCjSf10L8aMGaM/a95//337H2QPHjwoD2HyLGSeHT9+XOZvXJnO
3oULF/Sjz5w505i4a9euatWq6elW0r2k2pdeesk4YeDy5cv1Zf48nzDNTLqf
Nm2aSrkwQVhYmDExISHB4bdgM731dgl4m+6T//nJvmzZsvKvdMnkvVyS3C0v
HpVyTjx9Jnx5yiNHjjS2WFIt3YvChQurlOP37V+3Fy9eNP6eOnVq7ty55RXu
8DIePny4nv+5c+dczlkW/uDBgz08NAAAXiHdA0BGE5R0n5iY2KJFC/1xU6hQ
oZYtW3bq1Klq1ar6RGQTJ070xzNLfvDBBwcNGuTypscee0wn8YYNGz777LP6
Mu5Zs2YtU6aMxXSv9xXPmTNn3bp1ZQnIbFXKse2ez0dnJt1LWtTRVR6iUaNG
nTt3bty4saw+h8uomeytV0vAh3S/YcMGY4ti/fr1Ju/lTo8ePfSs7r333po1
a0o/VcpuDHpPg9RM9xMmTNDNihcv3i5FhQoVcuTIYYT9559/Xq/0XLlyVa9e
vVu3bn379q1Tp46+14svvuhytmfPnpV7rVmzxuwSAQDgVkj3AJDR5M6dW8b8
H3/80UxjfWkzSTQO03V+d0j3krzsb7VP99rs2bP10d+G+++/X6K9X367T045
kNndydwiIyNbt25tPK5k5DZt2hw+fPiTTz5xzrbdu3eXiX369PH8cPpaAEOG
DJk2bVr+/Pn1nG+77bYWLVq4+7nW4G7BOjhw4IDx87p2zz33jBw50ofeerUE
9I4QHn53dklfYt74kseK6Oho6Z7R28KFC8sSu3HjRvv27dW/99DQv627S/ce
lrCR7vfu3euhJ4mJiWPGjNFfL2iSymWlnDhxwmiza9eujh076p4YChUqNGrU
KHenzZfXTJ48eTxc4gEAAG+R7gEAqSwmJmb79u2bN292eYy8FRK4smTJ8uuv
v7prcPbs2bVr10oWk8jm34dOSkrav3//tm3brly54t85i9OnT69fv/6PP/44
duyYxZ4HbglIjC1fvrxsTkyZMsVf84yMjJRn7eH0BakmPj5eXrTSmZ07dxpH
YTjTr+2wsLCIiAgPS1heLQ8++OCwYcMC01kAQAZFugcAhJK+ffs2aNAg2L3I
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
FStWlLCm//vmm28Gu3dW9e/fXz+XO++8My4uLtjd8af4+Ph27dqVKlVq7Nix
fpnhlClTZEG9/vrrwepAsFStWvXufxhRyJgiH+t+fCzSPQLKSPf79u2T/169
enXr1q0dO3bUExs1ahTEvpHuAaRHaSfdJyYm6n0mzaT7bt26GRM3bNhgfOKT
7oHQtnz5cv1mf/DBB3ft2qUnxsbGjhgxIkeOHGFhYcHtnkU3b94sWLBgpkyZ
ypcvL8/xp59+CnaP0rR3333Xq3Qfku68805ZCN9//32A5k+6R0A5pHvDxx9/
rKf//PPPLu946dKlrVu3njt3zuQDHT9+fO/evQ57fjpISEjYuXOndEn/N0+e
PGbS/bVr12TO0pkLFy54eHSZ8y2/sJUOyHIIDw/36hCbW3ZAPlmkA5s3b/7r
r7+SkpI8zOrq1asyK/v/7tix4/r16+Y7AyDofE735sfVixcv7tmzR4Y1z3tC
yqDkricGne7vuece+53zZdNO79PlLt2bH9Y0aSYddnkuAgBBlJiYWKlSJXmn
V6xYUYYgh1tvuQ+nvP1PnTolQ8GBAwdkWHDZRoap7du3SzP/9NiObCDJnCMj
Iz20WbVqlTy7qlWrjh8/Xv7o1KmTh8axsbEHDx7ctm3bLc8RJ09cxmoZsY8d
O2ZmDDS5IapJs927dx85csTMnM0wP2Lr/RwCke69fRnIypUV4fkD0fz68opX
6d5MP5NTApe8AHS+mDhxoud0723I8hnpPiS5S/fy3pdxXqZXrlzZ4S7z588v
W7assQ9//vz5x4wZ4zCkz5o166677ho+fLhsKw4ePLhUqVK68R133PHaa685
Z/zz58+3bdvWONqrRIkS8+bNu/fee53TvYxLd999d/369eVv2ebs0qVL5syZ
9b1uu+22L7/80r6xvNllmNIbqPrRa9WqJe8X5+UQFRXVu3dvY1bS8i47Xbt2
9a0DW7Zs6datm2w2G++dXLlyjRo1yn4TV5a89LB79+5Dhw7VS0AWl/Rn2LBh
OXLkkP8WKlQoPDzc9foDkPb4kO7NjKviypUrkyZNqlatmtFS/pBhzf5bQTFt
2rTSpUsXKVLE2MNQtlXsx7QmTZoYjXW6b926tbLbOb948eLFihWTbQ/ndG9m
WBMPPPCAPJBEg5EjR8qsdEsZ4mTT2jlBAAiWH3/8Ub89Fy5caKa9bFbJW3vJ
kiXy9+zZs8uUKWMMBUWLFnVovHLlykqVKuk9iES+fPlk28bhN4tly5bJDPPm
zev8WHny5JGb7HeK/uqrr2TKkCFD9uzZ8/jjj2fNmlXPWYasxYsXu+xwnz59
pIE8rmxK6fFKIqFzs9WrV9erV894LjK0yrbooEGDZAPVoaXc/Y033rAfA3Pm
zNmwYUOXp0A3vyGanLLtPXPmzHLlyhlLTMZwGZwlmNs3k83ju5zIh4vLeZoc
sStUqCDLsECBAvoADfnXYf5r1qzxrQPJ5l4Gonz58jKfa9euhYWFNW7cOHv2
7Lq9vMY2bdrk0Nj8+vKB53TvVT/FnDlzHD4E5WNRuUn3ZjYGJC9IB2R9OXw6
v/vuu3r6xYsXTT5TZcfkXZD2uUv34uuvv9YDkf0IIBulur1sOrZp00bGKP1u
bdq0qf19v/jiC5nYvHnzunXr6jdy5cqVZfTT95VXtX3jQ4cOFSxY0BifZQQw
jvZSTun+2LFjKiX/yktaBkDdRoZN/VXA8uXLjZYRERHGu0l6W6NGDZ2db7/9
9qlTp9rPMz4+/pFHHtEjXo8ePV544QUdq/VbVdgfdGa+A3rvJq1kyZIyCsly
0P99+eWXjWbbtm3T73f1zy9lQn+RbmyZt2/f3vw6BRBc3qZ7k+OqjDmFChXS
LWU4lWYVK1aUAU3+K0OW/UmQpkyZoje3jANpb5nuJ0+erP7ZOX/z5s3y9yuv
vCIJXf073Zsc1oQe1WVzS3+OyGaMPgOAkE0jz/txAUg1w4cP129nkz8Td+3a
VdpLrtd7F6uUYCWbW5Jxateubd/yvffeM8arRx991Ngke+ihh/7++2+j2W+/
/aZSTkPq/Fh6fJNsaEzRm5cyEurBTf4wNhqlG7NmzXKYg8QiPfLo2HX//ffL
3xKgHJpJBNYZTQa0du3aSf6SIUv/dpM3b16HXaSkgX4i8nxlaTz55JN6C1B8
+OGH9i3Nb4gmp/y0LTPUjWVIl+1SeWp6CcjWqf1XuA7hWt/l6aefdl6A5kds
if/2c/Mq3XvoQLLpl0HyP58a77zzjjy6fAhKA/0JIvLkyWP/tbBX68sHntO9
+X6K1157Td8kq75atWoFChQw1ohzuje5MSCbFvpn08aNGxtvW3mF61eL88vb
A2XH/L2QxnlI98Zxl0ePHtVTZCzSg9L06dONl1NYWJgOoTLUG/fVw6/ImjXr
xIkT9Y4o0dHR8r7Wb0b7B3riiSdUyun6je9dz58/L6OEnoPLdC/vEf3VVr9+
/WRDWn+pdfz4cftvAlu2bKkfa8WKFXpKTEyMvEFkoowJR44cMVrqU4jIe/nw
4cN6Snh4uAyt8kx37NjhsFjMd2D16tWyZGRYM/bYl1t79uypUrZ1//zzTz1R
p3shA5QsKP2lipABITExcejQofL3fffd53YVAkhjjHQvW3qT/00+3NW/0735
cVU0bNiwUaNGMrYY3+RLEtc/yvTo0cO5J9u3b9c9ueWe+atWrSpTpozeOX/Q
oEEq5RTBejPMPt2bHNaS/9n+EX369DEefezYsXri559/7tUiBRAg+lRLzZs3
N9lep/vKlSvLv7IhJAOXPqBShg77n5gla+hg0rlzZ+PqIfPmzdM/9Lz00ktG
Sx/Svd4ukuFITzxx4oQ+pr5o0aIO3xzKFqBMl+FIj676UiAdOnRweKBevXqp
lB9W7H/WP3ny5Isvvjhz5kz7lqdPn9Yd+Pbbb42JsrX23XfftWrVyiFXmt8Q
FTKG64F0+PDhxsakbA/LCnryySc9XPdE50eX4dr8iG3Qnwhe7ZnvoQPmXwbJ
dp8aEhYOHTqkJ0rE1hM/++wzo6X59eUbM+neTD/XrVunf4WXhWOkfnmp6E9t
h3Tv1cbAli1b9LcZ48ePT07Zn0R/G+9yS8AD0n1I8pDujZv079FxcXH6zThq
1CiHlvpQJtnsNKbo4VcisP2YnJyy/5WeZ1RUlJ4iI4+e8t///tdhtvr7QJfp
XnN4qdsztq5/+OEH++ny+i9cuLDD1rX+rqx///72LfUwO2LECIc5m+yA5vz7
lAxu+nnNnTtXT9HpXkY/vTdRRESE/Fc6qcd2WYAq5UtUzw8EIO0wxh93jPHH
q3E12dWQIj744ANpWa5cOeebzKd72fjUv7AsXbpUYn7JkiXlJn3afId9/8wM
a8n/bP84P6/HH3/ceasGQLBUrVrVYRNIAssndmSLzr69TveievXqklXdzbZR
o0bSpkKFCg6x9NNPP9V3N35P8SHd33vvvcZmpCYxSs/WYaNR8qOyuwip3qbK
kSOHw+VK9c/xNWrUuOVx8Xv37tUPtGDBAs8tvdoQlRSsG7///vvOs/K8W4WH
cJ1sesQ2+Dfdm38ZJP/zqdGyZUuHPutfBu13NjC/vnxjJt2b6WeDBg1kiuRu
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
klOSmv5dsmHDhvJ3//79VcrVGW75y6MDZcerOyItc0j3Mgb+8ccfzZo10xPt
h77kf35zUSmn9LT/ivXgwYPykrY/r4j5dC/vUH2d0MqVKxvXa5YRXl+TVPma
7uWlrr+ZLFKkiLFZK4+lr/wi7yDjtH7J/2xvO1yYwx2THbhw4YJuZn9tjl27
dunrYSnSPRC6vLrevflxVX98V6hQwdiwSUhIkHsZx+W57Iw+ObNsXdjP3P6Y
d/Pp3vywlmx3vfslS5boKTK4PfPMMyplt3yHzXgAQfTLL7/ot7BsiRlbRzL4
vP7668rXdC+RXO8z3K9fP+PU4kuXLtUntevUqZPRUrYM9QXr27Ztq1vKWKHP
O6c5p3uZc69evYxxTHK0nq19XtY7xj/++OPOfdPRMlu2bHqIln8feOCBRo0a
bd261b5ZZGSknm2fPn2MiVOnTs2dO7eM2w4n0xs+fLju7blz5/QUrzZEpbFk
UpVyyMDEiRONE03LuP3ee+9JN+zPLe/AXbj2asQ2TJs2TaUc/2V/tLh81jj8
+m+mA8nevAySTadmr9aXb/yV7vWvh7IEZJ3qKTdu3Hjrrbf08ne4doz5jQGj
8V133aV3M46Li9PnMahdu7Y8hPlnquyYvxfSOCPd33PPPfrYHE1eigMGDHB4
Lcloo7/wFIUKFWrZsqW8MatWrar3PDFeusnepHvx3//+V7/3c+TIUbduXf0d
ctasWfWb1Ld0n5xywIs+fF62JKWTjRs31jMU48aNs29p7D8gC6FevXpNU8iz
69atm7R0+M7TfAcee+wxvSRleJdN+rJly8rf8rzKlCmjSPdA6PIq3ZsfV1ev
Xq0nyqZF586dn3jiCb0Foi887e6jWZ+3WaWcVrddigoVKshga2w8mE/3yaaH
tWS7KwKrlP3w5Y56L1kh2zbeL1QAASRhQUdsvS0ko4Tef1I0a9bMvqXJdJ/8
T9hRKSc1ks0q2bDRG3slSpQwLr+u6WsQq5RL3dWsWVOGFJXy87H+idnl9e5V
yuns6tevL7M1BkbjdMcSJPVVwl3+FC4BXN9FX7N+48aN+nz70r2SJUs2b968
f//+MkrrIUvmY//78vPPP6+fRa5cuapXry4bin379tW/UIsXX3zR/oHMb4iK
06dPFytWTN8qz0UaS1LTa0E2EXVXPSxnl+Ha/IhtkC1/PXpLnyVBy2eN9EQ+
a1xequ+WHUj25mVgMjV7tb7Mk9f8Hf/QHZYXiTFl1apV3vYzOeXLmXLlyum5
lSpVStaC/tTWP2s6pHvzGwMbNmzQnbR/VRw6dEjP3KtzJig75u+FNE6GOPs1
K8OOxNt+/frZv4wdzJ492/40leL++++XV539VwH63I8e0v3evXvtp//yyy/6
Byb9bqpRo8aOHTv0rzzG7z7a8ePHdTPj21EPZNzo0qWL/QknpUv2HxOabIHL
IKPckKHV/myf5jsQGRmpL6unyZuuTZs2hw8f1ofbGIOqzu8O6d44qxXpHkh3
jAPozKR7zcy4qpvprQJNNtVk21U2CfRZSlx2Rm6V7Xa9tazJFlG1atVOnDih
G+hhyjgIy55O9/bXlTY5rCX/s/3z8ccfy+accdqffPnyzZo1y/SCBJB61q9f
byRrPVBIBpQ07XAkePfu3ZXpn0cXLFhgv32VLVs2CWLOp7OLjo6WkcRoJhuE
gwcPvnHjhr5gsb4us6bTfaVKleQP4wtD2W6UWGS/VbZixQr9FNwdxawvTd6x
Y0f937i4uE8//bRKlSoOQ6XM1rjGk2HXrl1yR2OrVZM4NmrUKOfzuZncENVk
C3DEiBH6ewlN+vPkk0/u37/fw0LWu3k7XwUg2ZsR296BAweM3/c1WdQjR470
oQOayZeBXqTuUrP9/L1aXybpbzzcsV9l5vuZnBJ8JKTbf3U2ZMgQfUocCTvO
3bjlxoC8L/TC7Ny5s8N9586dq+/i8ut6l+wfyORdEMJiYmK2b9++efNmed36
a54nT57cuHGjDPL+mqGWkJAgQ/GaNWtczlmGYhkf5KNh3LhxktwlTe9IsWTJ
kvHjx+v3o5nvqN05e/asbDZLB4z9rADAJTPjanx8/N69e2VLwz5035LcS+b8
xx9/yBDnfBSqt8wMazrdz5s3LznlQIBNmzYdOXLE4uMCCDS9ybR161bn8OUz
yd2rVq0KDw/3fDJziaIyRhkHzruk03358uWTU7663Ldvn4xsfuyq9PDQoUNh
YWEyzN5ytnrElsYRERGet/E8b4g6O3PmzOrVq3fv3u3VXtbu+LYhevr06fXr
18saOXbsmF+2YE2+DLzi1foKIsnmsvxlhZpckoEIWS6R7hGS9GlPGjRo4PJW
/Z2n82msAAAeuNt3EQB85uGKeAC8RbpHSNJXHS1durT9aaa0LVu26COk2JUU
ALxCugfgd6R7wI9I9whJMTExeiu0WLFiI0aM+O677xYsWDBp0qRWrVrp3fJ7
9Ojhw+VHASAjI90D8DvSPeBHpHuEqoMHD7Zu3TpXrlwO59CoVq3azJkzifYA
4K1HHnkkX758P//8c7A7AiB0/PDDDzKw1K5dO9gdAUIB6R6h7fr166tWrZoz
Z87cuXM3btxofxEoAAAAAAgZpHsAAAAAANI70j0AAAAAAOkd6R4AAAAAgPSO
dA8AAAAAQHpHugcAAAAAIL0j3QMAAAAAkN6R7gEAAAAASO9I9wAAAAAApHek
ewAAAAAA0jvSPQAAAAAA6R3pHgAAAAA8+/PPP2fNmrVo0aJgdwSuyQqaN2/e
5cuXg92RYCLdAwAAAKHqxo0bu3btWrJkyZ49exITE4PdndQWGxsrT1ye/pEj
R5KSkqzM6osvvpDE9OCDD/qrb/DMq3V37Nix2267TVZQlSpVUqd7aRPpHgAA
AAg9O3bsqFu3brZs2Yyt/aJFi06fPj3Y/UolUVFRr7zySpYsWYynnzt37o4d
O545c8a3GZLuU40P627x4sW65R133HH16tXU7G2aQroHAAAAQsynn35qhKP8
+fNXrFhRUo/+75tvvhns3gVcXFxctWrV9PPNnDlz5cqV8+TJo/8rf6xYscKH
eZLuU4dv6y4+Pr5du3alSpUaO3ZsKnc4TSHdAwAAAKFk+fLlevNeouiuXbv0
xNjY2BEjRuTIkSMsLCy43fPZ1q1be/bs6Tz9559/Hj58uP2UcePGydPPkiXL
t99+e+XKFT1RFkXt2rULFiwYERHhw6OT7jXza8E3gVh3GQfpHgAAAAgZiYmJ
lSpVkm37ihUrXrp0yeHW6Ohoz3dPSko6derU5s2bDxw4cPPmTZdtrl69un37
dmnmnx7buX79usw5MjLS5a1Lly59+OGHnadPmTKlTZs29lNatmwpS6BTp04O
LWXh+GvP/Li4OOnqhQsXPN8rISFh37594eHh8of5x7p27drevXslR3uY//Hj
x3fu3CndMD9bMzyvgmRv1oJvArHufCbvIFkL586dS+XH9RnpHgAAAAgZP/74
o962X7hwoZn2/fv3v+uuu5YsWSJ/z549u0yZMvbH6Ts0XrlyZaVKlfTpy0S+
fPmGDRsmedC+zbJly2SGefPmdX6sPHnyyE1r1641pnz11VcyZciQIXv27Hn8
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
BQq876RZs2Zly5aVP0aOHBkXF5eccgK0+fPnOz8LaSPzLFGihB+7+vnnn9t3
VdNnYBswYEBkZOSKFSvWrl17/vx5d8vWZLr/3//+5/J7m/j4+JIlS8r09u3b
+/F5OayCZO/Xgmc7duy45557nn32WYcd3U2uO2ee0/3Jkyf1uQflNaz3cHBJ
3jL6AArP50BIs0j3AAAAQCj55Zdf9OZ95cqV9+zZoyfGxsa+/vrrPqd7yYP6
aOV+/foZl0hbunSpzE0mdurUyWh56dIlfbX0tm3b6pbXrl3Tp31zFy1lzr16
9bp48aKeKDFWz9aIq9OnT+/du3eTJk1kem8njz76aLFixfTf8ljz5s3TDyRP
TZ6+/qn3zJkzkm31j+zyWFa6+tJLLxmnXFu+fLm+UFqHDh3sF5eEVvXvCwV6
YDLdJyUlNWzYUJoVKVLEOIG8BFV9DUTJpMa6DsQq8HYteH7KO3fulGgvPXeI
9ubXnTMP6V7Wl77KXqlSpTx8zaKNGTNG9+H999+33/nh4MGD8hD6zAZpFuke
AAAACDGSUHS+ExKjKlSokD17dv3fZs2a2bc0me6T/0lPKuVY8qZNm1asWFHn
/RIlSly4cMG+pb70m0q5zlrNmjWzZs0qf8td9Pn8XV5sXeTMmbN+/foyW30p
tIIFCzqcZc7knvlRUVGdOnUyZnvnnXc+8MADxn/lbwm/PndV79kuXa1bt66x
BJy7+s033xgLv169ek1TtGzZslu3buPGjXO4PIHJdC+OHj2qj9+XbkgPGzdu
rDO4kNmmwiowvxY82L17d968edu3b++8e7xX686Bh3T/2GOPGTMp6sqCBQuM
xomJiS1atNCNCxUqJGtNuiTLTS8TD6f1SwtI9wAAAEDoWb9+vRHrVMqPs2XK
lJEo53C2ve7du8utffr0MTNPCUGS5Y34kC1btv79+zufJi46OlqCntGscOHC
gwcPliinrxO3evVqo6WOlpUqVZI/JAjr9hKjJF6dO3fOYbbLly+vVq2ac6/k
vu3atXOY+OOPP0oA10eOa9mzZ//Pf/7jcKUz813VZ1MfMmTItGnTdMT20NXL
ly/bLygH0hP7qw8cP35cT3eej7MLFy506dLF/hTuDz74oH1a9/Z5ebUKkr1c
Cy7Jc3/hhRfcHfmebHrdOZAnKC1d9iFv3rzu1oUmnXe4y+zZs/XxDob7779f
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
HnhA1aunmjULeDVsqGrU8Od1AGNjVVSU7XB+ivJ7nTtX7/r16/4aVN0h3fuK
dE+6J92T7gEAppDuA11pJ90PHqyKF7ed6a5164BXkya2q8P7Md1TJuvmTRUd
bbt+X2QkZbZiYurHx8f7a1B1h3TvK9I96Z50T7oHAJhCug90pZ1036eP7ef7
3bttXQp0bdliOw9e+/bBf9YZrc6csR0T0a2b6t2bMlvvvVctPDzcX4OqOxk4
3VuK55RvdaCcpbL46KeKWKp9D1mqoC98nyu4T5x0DwAhgHQf6Eo76b5XLzVt
mjp3LjUe68QJ2znzW7VSly5RqVq7d9viaps2qmtXymwNGVJtz549/hpU3SHd
U6lZpPv0WKR7AIBFpPtAV4ZN9xMnqvz51eefU6laHTvadtIYP17J+5EyWUuW
1Dpz5oy/BlV3SPdUahbpPj0W6R4AYBHpPtCVMdO9POtvv1WVKqkxY6hUraZN
Vb9+tpj/66+U2Vqz5tHIyEh/DarukO6p1CzSfXos0j0AwCLSfSrk3AyY7m/e
tL0Y3n1XvfYalapVr57q39/21cqWLZTZ2ru3zqVLl/w1qLpDuqdSs0j36bFI
9wAAi0j3ga6Mme4TE22nd5szR02eTKVqvfCCevFFNXq0beFTJuvXX9kzP4A1
TUYeC2UxsLw+wVINHWWp3vzQUm2u4XutbmipXppuqSxea2BLdUvVe6ql+ugN
38viCyY2u6X6rL+lIt0DQAgg3Qe6Mma6l0pKUnFxtuvUU6lZW7faLlXwyCOq
Th3KbHXtWmXz5s3+GlTdId2T7kn3pHvSPQAgoEj3ga4Mm+6poNT582ruXNtx
91OnUmbrhx9qRkRE+GtQdYd0T7on3ZPuSfcAgIAi3Qe6SPcUleargZ8GVE9I
96R70j3pnnQPAAgo0n2gi3QfkhUfrw4fVl98ob75Rs2aRaXvWry41unTp/01
qLqTYdP9O1ZZSvdLm1iqdj9aqv+Mt1Tr6vpe62tbqvdHWCqLi31jLUvV6XtL
ZeXF+nlfZaUsn1XPEtI9AIQA0n2gi3QfknX5svr9d1WlimrcWD35JJW+q1ev
h7dt2+avQdUd0r2vSPeke9I96R4AYArpPtAl6f7xx2116lSQq2tX2yHGpHu/
1OnT6tNPVZcuasQIq3sOU0GvKVOqHz161F+Dqjuke19ZWrmke9I96d4k0j0A
hADSfaBL0nTduqpaNbVmTZCrdWvbnuSBS/eJiervv20/ameE2r7dduG5Dz9U
y5apFSsCWP/7n+0hqIDW+vW1L1y44K9B1R3Sva9I96R70j3pHgBgCuk+0HX1
qurZU9Wrpzp3DnI99JDteugBSvc3bqi9e1WDBuqZZ9Szz4Z+PfWUqlFDffaZ
7Rz1MTGBqqgotX+/WrWKCmxt3lw7OjraX4OqO6R7X5HuSfeke9I9AMAU0n2g
6/p1NXSoatlSNWoU5CpVSk2aFKh0Hx+v1q5VWbPavkOoWDH0q1w5Vb687TwG
8sQD9+JJSFB79tgO8KcCWmFhtaOiovw1qLpDuveVpXQ/v72lenmypRo+0lKd
LOZ77a5kqcb/x1L93tRSLW9sqV6ZZKmsvFinv6Ss1I6HLZXFdxrpHgBCAOk+
0JWUpI4eVbt22fblDm61bx/APfMvX7Z9dfDMM7aLrS9YEPo1ebJq29Z2HoO4
ONshCQGq06dV7drquedU9+5UAGvYsGp79+7116DqDuneV6R70j3pnnQPADCF
dJ9xKqDnzP/7b/Xee+qNN9ShQ+rEidCvNWtsx92PGmV7vn/+Gahat05lzmw7
YULHjlQA6z//qbpz505/DarukO59Rbon3ZPuSfcAAFNI9xmnUiHdDxumrlyx
HYMf8nXypHr/fZU3rypeXJUoEai67z6VJ4/ty4SzZ6kAVlRU/evXr/trUHWH
dO8r0j3pnnRPugcAmEK6zziVCul++HDbnupBf6apUOfPqylTbNGedB8CRbon
3ZPuSfeke9I9AIQA0n3GKdK9H+vmTXXpUsD3/w8Ls+2Z36aNateOCmC99lrV
HTt2+GtQdSfDpnsrJ36Xspjue02zVB+9YalGDrdUo4f4XvLpbqW6z7RU/33e
Un3fyVJ1nmOprATkqb2VlfqpjaWy+OikewAIAaT7jFOk+3RXERG2fQNatLBd
c4EKXPXr9/D27dv9Nai6Q7on3ZPuSfekewBAQJHuM06R7tNdJSSovXvV8uVU
YGvDBq53T7on3ZPuSfekewBI90j3GadI9+muEhNtB/jv2ZN2a9cutX697QoC
6bq2bq0TExPjr0HVHdI96Z50T7on3QMAAop0n3GKdJ8eKynJdox/mq3YWLV5
s1qyJH3XunW1IyMj/TWoupNh0/3SJspKWUz3z35nqd4aY6maLLVUn/f1vQ4/
YKna/WipfmtuqTbXsFSDxlkqK+m+1SJlpRa1slQDJloq0j0AhADSfcYp0j3l
UElJlr49iI9XZ86oqVPV9Onpu+bPrxkREeGvQdUd0j3pnnRPuifdAwACinSf
cYp0TzmUJHRZX5cv+1hnz6qFC9Udd6hmzdJ39enDWfVI96R70j3pnnQPAOke
6T7jVM+eavJk21nazpzxfx08qAYNIt2ns1q1So0Yod5+28fcNHSo6tpVFSum
vv02fdcvv9Q6ffq0vwZVd0j3pHvSPemedA8ACCjSfcap559XEybYAt22bf6v
NWtU376k+3RWkn1uu03lzKly5fKl5I533qlq1gz+E7FcDfw0oHpCuifdk+5J
96R7AEBAke4zTo0fr158Ub31ltWtZZcls33iCdK9L/X337YT4wdih4pb1htv
qJIl1ciRavRoX+q992yvqKJF1RdfpO/64Yeaf/31l78GVXcybLqf9IqyUhaH
JouP/lUPS7WgraWa8Lrvte8hS/Xz05bqx3aWan1tSzVqqKX67lnfy+IaP1jW
Uk1/yVKR7gEgBJDuM079/ruqW1dVqaKqVvV/Va6sihdXw4aR7r2uv/6yHS6x
fXsQqndv1bCh7eh733oeG6tWrrT9+i9rP11Xu3aVN2zY4K9B1R3SPemedE+6
J90DAAKKdJ9xKjpa7dihtm4N4J75pHtv6/hx1b27atJEdeoUhKpY0VK6T0xU
UVHqu++UvPfTdS1ZUuvMmTP+GlTdId2T7kn3pHvSPQAgoEj3lF+Kc+b7Vvv2
qRo1VIkSql69IFTx4qp+fXX9ukpI8LFiY9WhQ8HZ8cCPFR5e59KlS/4aVN0h
3ZPuSfeke9I9ACCgSPeUX4p071tt2qSeeUa9+25Adqi4ZfXqZdsvfeVK27kW
fSu575IlavHi9F2rVz8aGRnpr0HVHdI96Z50T7on3QMAAop0T/ml0nK6T0xU
N26o+Pi0WKtX2/bMnzkzOEtm5EhVqZKaPTv416TjinghXP97Qlkpi+n+5cmW
ak5nS/XRG5ZqSj/f62gpSzX5ZUs1v72lsrjYu8y2VGF1fK+vX7BUeypaqk9e
tVSkewAIAaR7yi+VltN9ZKTtd+pFi9JijRmjWrVSX38dnCUjHXjpJdWvX0av
Dz54ZP/+/f4aVN0h3ZPuSfeke9I9ACCgSPeUXyrNpvukJHXggJo7V02cmBZr
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
GfT447RyJW3bpps//KB8ff/UUzRrlg6GhLROTU2VNKZqYti639qTRBSs+/d3
CfnmfiEHLRNypo/lXv2nkEMXCDlxkpDz3YV89pKQImv++UYhN34upAHnzK/+
Hbfuv0DdAwAMB+oeQn3dv5+WLqW5c2nePH3096e//Y0OHlS+xb58WR9jYuj7
7+nrr0VTzjKDg1slJyfLGlS1QN2j7lH3qHvUvURY3bOEr/y9pqh7AIABQd1D
qK8+PtSypfLt+VNP6SP70Q8/rKR9TY2ez0NsLC1fTn5+Ojh3bqvLly/LGlS1
QN2j7lH3qHvUvURY3XPSnumLugcAGA/UPYT62rcv9ehB48bp87U108uLHn2U
EhN1rvucHDp7lsLDdTAqqn1eXp6sQVUL1D3qHnWPukfdS0St+4q7NEXdAwAM
COoeQn196y3y9KSEBN32ij98mJ58Uv+619XOkgZUHoat+4iuJKK+dd9nvZDD
5wopMqve5aeFnOAv5JBFQn7nKaTgrHorBlhu39VCCj7wZheEdMS6L7+LOKLu
AQAGBHUPob6+8w75+tIvvyhz1+tibKyyf/6wYTRhgm77D+grjrtH3aPuUfeo
e0es+7I/EEfUPQDAgKDuoQGtqKCSErp50y586y2lQdj66PVs/PILNW9O999P
99xjUNu1eykiIkLWoKoF6h51j7pH3aPuJcLqvvSPxNH3S9Q9AMBwoO6hAd26
VfmeeuhQ5Qtr3X3iCRo/Xs+6r6ykEyfo0CFl2nxjGh3dPj8/X9agqgXqHnWP
ukfdo+4lwuq+5E/EEXUPADAgqHtoQGfPpk8+oa5dle/Ndfcvf1Gm1NOx7lVr
a81YXU3l5VRW5uRWVHQ2mUyyBlUtUPeoe9Q96h51LxFW98V/Jo6oewCAAUHd
QwPapw/160crVtDKlfrbvLnO391zjImh1atp2TInd8uWNhkZGbIGVS0MW/ex
L5KIgnU/bJ6QLc4K2XOrkHvfsVzBTpwyTsiPtwnpM1PIx1KFnDHacgXrftEQ
IccECOmIdV90N3EcjboHABgP1D00oG+/zd7G0LFjyh7putuhg3KYgH3WfVgY
+fvT2LFO7rx5rZKSkmQNqlqg7lH3qHvUPepeIqzuC+8hjqh7AIABQd1DA/r+
+8rO8Hl5yvR6uvvOOzrPqsfxuedo5EiaPJmmTHFmlyxpjTnzUfeoe9Q96t7a
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
LwkpOGf+8LmWK/jBgmDdx/1LyPd3CfnBj0KKnCVBcLr+7zyF7BEmpCPWfXg3
4jhiAOpeDqh7Q2l2u9envLzc19dXTdo1a9acO3cuOzs7KSlp9+7dQ4cOZQvZ
pQ2+wc/NzZ01a5Z6kwZ1n5iYqC5fvnz5pUuXsrKy2BJ2HXVheHh4/SvX1tYe
OnRI/SnWq/vr16+7ubmx+58/f35sbOzx48cnTJjA/jlnzhz1CuzR+fj4qB9l
nDp16vTp0wEBAeyfbGFVVZU1VumOQN07vah7WdbWUkYGJSZKnoigVy/q3Jlc
XWnxYpv6wQdK3S9dSqtXG90ff2ybmZkpa1DVAnWPukfdo+5R9xJhdX/gDeKI
upcF6t5Qmt3u9Vm7di27iPVv46+qr127pnZxVFRU3cKIiAh3d/e677gb1P2m
TZvUb8ZZuddfru4bEBQUVLeERTf7Z/2vy61U97t372Z3PmLEiMrKSnVJTEwM
W+Lq6lpeXs7+efXqVXUF2ONVr8DeRqpLrly5Yo1VuiNQ904v6l6WVVXK4epe
XuTuLtPWrZU/jx1Tzk9nS9esoYEDqVMn6trV6A4Y0Dw6OlrWoKoF6h51j7pH
3aPuJcLqfv+bxBF1LwvUvaE0u93rYHmrfnW+c+dOs6+WdevWsQresGFD3RIX
Fxd2fVbra9asaVz3S5YsUb8lb3A/cXFxEydOnD17dt3O+bt27VI/VYiMjFR3
m7es7pOSktiamN3nX+XSpUtbtmw5evRo3ZLi4uL6nyekpqaq/6zbV7+srExd
pfj4eAtWSS6oe6cXdS/LwkJlh3YPDxoxQqbt2il/njlj64dz6JByJoUhQ8jN
zehOndqS/Scia1DVAnWPukfdo+5R9xJhdc+fPsITdS8J1L2hNLvd64iOjuZ/
b15+i/pLWNefPHmS1fTevXsb1/2hQ4fYQhcXl82bN5s9YL+OgwcPsirPzc1l
f1f3ELCs7qdNm8ZuGxIS0mBvAS1Yua9atYrdZMKECeoS9li8vLzUAxNKSkrY
4w0NDWX/HDZsGPbMhzYQdS9Fk0k5pWDbtjRmjOQ95N95h3x8dKh79nooK1O2
BSwr68yZ4lUWqHvUPeoedY+6lwir+73vEEfUvSxQ94bS7HavQ/0C3dPT04IX
0p49exrXPWvnmTNn1u1s7+vry1I6Ojr65s2bnLsS+e4+IyNDPVJg3bp1/Guq
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
jDgORd1LAnVvKM1ud+BAoO45ou6dVTc3Gj1amVUvN9fuzMhQerNZM2rZEtrI
zz57GXWPukfdo+5R99YeBuXC6p4/AwPqXhaoe0NpdrsDBwJ1zxF176wOHEhv
vqnMuu/ubncOHkx//SstW6a89qBtjI3tUFRUJGtQ1QJ1j7pH3aPuUfcSYXX/
nSdxRN3LAnVvKM1ud+BAoO45ou6dVW9v+vBD6tNHOTWevfnll/S//0vr1lFi
IrSRV6++VlpaKmtQ1cKwde8+n0QUrPvNnwi57WMhBT9b8A6y3CGLhORPVnZb
By8Rcum3Qpb9QUiROfOPdhAyyFtIwZerw72TZ3XP/7wCdS8L1L2hNLvdgQOB
uueIundWr12jyEhauZJWrbI7Fy6k++8nHx/l63toG7dubZuRkSFrUNUCdY+6
R92j7lH3EmF1P8uLOA4dgrqXA+reUJrd7o0xmUwXL14MCQmZMWOGn5/ftGnT
Vq9effjw4ZqaGq2bFBQULFiwIDIysvFFiYmJoaGhs2fPZnc1Z84c9vfY2NjG
V7t+/Tr7xV++fPmSJUu2b9+enp7elBewIDdv3lyxYsXGjRvrlpw9e3afBkeO
HLHBKvFB3XNE3TurRUUUF0fh4fbojz8qx917eVFQELSRISGtU1NTJY2pmqDu
Ufeoe9Q96l4i7E0+/wlB3csCdW8ozW73BrBOZ1E/2BxTp07NyspqfJPKykp2
EbvCypUr6y+vra3dunWr2bvasmWLyWSqu+bhw4ddXV3rX8HFxWX37t0ir+2m
sHDhQvazRo0aVbdk7ty5ZleY4evra+31uS2oe46oe2e1tlbZuFVV9mhFBS1d
qhw7MHQotJEBAS3j4uJkDapaoO5R96h71D3qXiKs7mf6EEfUvSxQ94bS7Hav
T3l5OWtYNWbXrFlz7ty57OzspKQkFtpDhw5VC7fBN/i5ubmzZs1Sb9Kg7hMT
E9Xly5cvv3TpUlZWFlvCrqMuDA8PV6+WmZmppv3s2bNPnjx59uzZBQsWqNdh
15f1Um/MkSNH1J9Sv+7ZwtD/hD0PdY/CeivTRFD3HFH30PbW1tJPP1FwMM2e
DW3kypX47h51j7pH3aPuHa/u+XNLuqHuJYG6N5Rmt3t91q5dyy5yc3NLSEho
cNG1a9fYcnZp/VMRRUREuLu713273aDuN23axBb6+/vX1tbWX67uGxAUFKT+
k/2+s396eXnVfW5gMpnGjBnDFtbfZ14uOTk5dWtev+4bw9ZBfRQVFRVWWpmm
g7rniLqH0Bh2ljSg8jBs3fcIIxEF615w7vcVA4RcMlg3OxwVct4wIYcuEHLR
ECHPNRdy3ReWG9FVyEkThUx9TEhHrPvpo4kj6l4WqHtDaXa711FeXq5+Qb9z
506zr5Z169a5urpu2LChbomLiwu7Pqt19QvuBnW/ZMkStnD+/PkN7icuLm7i
xImzZ89Wd84PDQ1lfc3+rH+dzZs3s9suWLCgia9klaSkJLYm9ff5N0tNTc30
6dPVr+P5da/ufjBkyBAbTOLUFFD3HFH3trGkRJngzt+fZsyAUAeXL2+dkpIi
a1DVAnWPukfdo+5R9xJhdT/Njzii7mWBujeUZrd7HdHR0ep32fn5+WZfLeW3
qL+Edf3JkydZTe/du7dx3R86dEg9gp6lutkD9jmo3++HhYXd0a2mTZvGbhUS
EtJgb4EG7NixQz0QIDU1lVP3FRUV6i4EbP3vaDWsB+qeI+reNmZnU5cu9Nvf
0j330L33Qmhr27V7KSIiQtagqgXqHnWPukfdo+4lwuo+YAxxdHNF3csBdW8o
zW73Onbt2sWWe3p6WvBC2rNnT+O6LysrmzlzZv1Z6VatWhUdHX3z5k3+vdV9
LHCnX9BkZGSo+9uvW7dO6zrJycnsnocPH56fn3/16lVO3R84cIBdOmzYMPZA
7mg1rAfqniPq3jayp/fVV5WVnDBB9J08hBYYHNyKDeOyBlUtUPeoe9Q96h51
LxFW91PHEkfUvSxQ94bS7HavgxWxupt9/YXx8fEhISE/3GLFLdauXdv4tmbr
nlFVVRUaGurp6Vl/8vkhQ4bs2rVL6+v1M2fOqDv8N9hXv4nU7YFg9gv38vLy
sWPHsktPnDjB/smv+4kTJ/I/KLA9qHuOqHvbmJFBzz1HycmUn08FBRDa2qKi
Tux/FlmDqhaGrXuXxSSiYN0f6izkiTZCBrsJOWeE5Y6YI+TKfkKKTEzHFHng
zPjnhRw71XIPdxKSv5/5bb34gpCOWPeTxxNH1L0sUPeG0ux2r2PLli1suY+P
T/2FkZGRg/8TV1fXxrfVqnsVk8mUnJysnOkyKIilvXo/ixcvbnzNQ4cOqWk/
b9686upqs/cWFxd3kou6Oz2D/cQGt1Vn7F+yZIn6T07dsxVW7yQzM9PsaugC
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
X3rAElD3HFH3EN6R5eV04AA99hi99JIj2aPHy8ePH5c1qGoxGHWPukfdo+5R
9/JgdT9gBXFE3QMADAjqniPq3q6sqlL2x752jTIzoZ165QqtXEl33aXMae9A
9uqFukfdo+5R96h7x6v7/iHE8VvUPQDAeKDuOaLu7crEROrXj5o1o1atqHVr
aI+++io995yyjYqKHMmbNztVV1fLGlS1MGzdC04UJlj3gaOEfHO/kMFuQvrM
tNxOh4UUnFXvN7VCfhYq5JRxQvpPsNzVfYX84EchJ00U0hHrvt9K4oi6BwAY
ENQ9R9S9XRkTQ+++S927U69e9Mkn0B796CPq0IGef175KMaBTE3tWFJSImtQ
1QJ1j7pH3aPuUfcSYXXP33kGdQ8AMCCoe46oe7vy2DHlEGn2J9so0D49dIgC
A+nuu2n4cEdyxoyWCQkJsgZVLVD3qHvUPeoedS8RVvd9VxPHbz1Q9wAAw4G6
54i6t7ZlZcp+0dnZTfLHH+mFFygujlJToZ2akEAbN1LbtjRypCMZFNTy0qVL
sgZVLVD3qHvUPeoedS8RVvdfriGOqHsAgAFB3XNE3VvbK1foxAmlB5vi5Mn0
4ovK1G1su5hM0B5lm+b6ddq+nYKDHckNG9qkp6fLGlS1QN2j7lH3qHvUvURY
3X+xjjii7gEABgR1zxF1b1Vra2n2bBo2rKnv0gcNon/9i7KylBvaZg1ZrpaV
UWEhvAOzs+nMGQoPdySjotrn5+fLGlS1MGzdTxRFqO4XDRHymUQhBT/Z6L3B
cj/eJqTgyQI+2i6k4IcqgpEr8mL9fCOJ+FiqkIK/aY5Y933WE8dBqHsAgPFA
3XNE3VtV1s6dO9NDD9GXXzbJd95RpmuzZd1XV1N+Pl29Cp3czMzXysvLZQ2q
WqDuLQV1j7pH3aPuzcDqnv9bgLoHABgQe6h7Fmv2KYu7kydR99aypoa6dFF2
tt+6tUlOm6bMqpdlw7o/dIjmz1eOyxbsC2jnBge3Sk5OljWoaoG6txShjYu6
R92j7puII9Y9/xgN1L3umEymixcvhoSEzJgxw8/Pb9q0aatXrz58+HBNTY3e
q2YtysvL9+/fv3z5cvY7NWnSJPaXffv23bx5U+/1AgbCTupe9+OFzVpVpRwV
jrq3kqzuX39dsYnXP3aMWrSwad1PnUrt2tFdd9Gjj0Jn9s03mx06dEjWoKoF
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
ByMzz51TJjZH3TucrO4nT6YZM5RNaYdGRJCbm3Ku+bNn9ZE9P4MG0T33KH+O
GGFEAwNbsvdysgZVLVD3loK6R92j7lH3ZmB1/18m4qhV94mJiZc0yMzM/PXf
dT9jxowGN2RL2HJ2Nc5aqdepPx1fY1D3AADrgbpvuhacEa+kRJmjLDVVT3fu
pNatjV73U6Yoda/7mpj11CnloI+336Z16/Rx6VJlZr+nn6aAAJo/34iuX9/G
7EmO5IK6txShuvcOEtJ3upCCmSlS910jhJzuK+TdRUK+9ZOQ4ycLKfJi7beS
RHw+XkjB3zRHrPvf1BLHPubq3mQycc5Nv3DhQnad1NRU9vdJkyY1uK36LKWn
p2utUkFBgcst6k/H1xjUPQDAeqDum64FdX/xIn33nRJNOururpy+HHVvt3V/
/bqyVzzbRh076mO7dvTMMzR2LOXkKHvpG9DKys7s/Z6sQVUL1L2loO5R96h7
1L15Vt4Os7davXr1Kg0OHjz4663z17NnY/jw4bW1tfVv6OHhwZazS7XWJzw8
nF1h9uzZ/NVG3QMArAfqvulaUPfs0fn7Kwd966iLC/3rX6h7+637oiJau5a+
/lq3U/KxV3XXrsqv4Z49ynNlQM+c6VBQUCBrUNUCdW8pqHvUPeoedW9rfH19
G3xNz/7Olvj5+XFutWjRInadvf+fvfsAc6Jq//9/4EFARJDeRKRILwoKSC+C
BeRBQASkqKAI2AUUAb8UERUrRYqgPDQFRARRAZFepPfeOyzLIrCw7C67+7uz
5+/8Y7LJTmZSNsv7dd0XFzuZzJxMkpP5JDNnfv/d+8JJ9wACh3Rvviyk+wce
cFxNTyL2oEEhK9J9Gk/3iYmOUR2uXFFXr4amzp93HJyfO7fKn18VKHArVv36
lbwMbuwvpHurSPeke9I96T7YZs+eLRtk1KhR+ur28u/IkSNlypw5c/QM165d
O3TokMuIrH379pV5duzY4X3hpHsAgUO6N18W0n2FCmrsWLV4sVq+PGQlwa1q
VdJ92k33Ia+4OLVtm+MgE5sxKnxrzJiHZCfNX52qJ6R7q0j3pHvSPek+2K5c
ufL222/rkfMl0X/44YfyfwnvxmH5EuFlyhtvvGHc5caNG/rk/QsXLnhfOOke
QOCQ7s2XhXR///1q9Wp1/Xoom82Y+aR7MyWv0lu2btzgvPt0m+67j7NVw96z
VZ/0sVUdpluvijtt1eD3bVWBc7aq8RJb1f8DW2XnxfrOR8pOlTpoq2y+00j3
LiIjIz/66KPu3bvrzC4xX4+or+l0/+abbzrPL1NeffVVl7P13S1btox0DyBA
SPfmi3QftEpIcFxu4Nw5/9S8eeq990j3qVR8fCoVG6vOnlVLlqTDWreuluyV
+atT9YR0bxXpnnRPuifdh0x0dPSxY8eCMDYLAPgF6d58ke6DVpIlz59X27f7
p777Tr3+OuneD0/Kvn1qyJB0WOPGVefIfNI96Z50T7oPdDcIAAg00r35It0H
rbZuVQ0aqBYtVNu2fqhGjVT9+mr48NA/LmuVkKB27HBsk9DW0qWqaVPVurXj
2nkDB6arGjWK8+5J96R70j3pnnQPAGGPdG++SPdBqxUrVLZsqnJlR8vtV8WK
6sEHwzjdx8SohQvV77+HuKZOVfnyqebNHRdi+OCDdFXjx/PbfbpN9zbTVrdv
bFXfj23Vw2ut1z3HbZXN7VZ3pa16dKGten+wrbLzYm3+i7JTlbfbKpvvNNI9
AKQDpHvzRboPWq1apUqVUn/8oTZu9ENNmOC4LmGYHpkfF6d++knVqKHat1dd
uoSy2rZV996rpk9X+/erQ4fSVZ04Uff69ev+6lQ9Id1bRbon3ZPuSfcAAFP8
le6bNi02daoj/9644VvJvbp1I90HsMIx3ctGq1hRRUX5Z2m+jpmvR5BLI3Xl
ivr8c3XXXapxY9WsWSirSRNVpoxatEhFRKiLF9NV/f13vbi4OH91qp6Q7q0i
3ZPuSfekewCAKf5K9/ffX+ztt9X48eqHH3yr115THTo4gnPIE2WqRboPWoUw
3Uug3rhRLViQVuqnn1THjo7jW+RRhPa8+2XL1GOPqQcecAyJ0LBhuqrnn79/
w4YN/upUPSHdW0W6J92T7kn3AABT/JXu69Yt1r27GjzYkaF8qvbtHUf87t4d
+kSZapHug1ahSveJierSJTVtmho9Oq3UF1+oRx91tP/vv0P8pFy8qF5+WRUr
5jg+v3jxdFWPPlp5xYoV/upUPSHdW0W6J92T7kn3AABT/JXulywpJgGkd2/V
t69v1aKFatOGdB/AIt2bT/cxMY5T/u++W/XsmVaqe3fHkIBDhoQ+3SckqAsX
1LFj6bBOn+a8+3Sb7gfZK5tD7tus+7dar/rLbVXPMbaq+npb1WyBrbL51YSd
F2vbmcpOFTllq2y+00j3AJAO+Cvd79lTe+zYYh984HM980wGfrsPaJHuzaf7
a9fUn3+q7Nl9/pIqcPXWW46nb+BAdfy4Y4NQgajLlznvnnRPuifdk+5J9wAQ
9vyV7mNjT16+fCwqyueaODGHRGbOuw9cke7Np/voaLVkiapWTUVGppU6fVq9
8YZ67jnHz/fDh1MBqYkTqx8+fNhfnaonpHurSPeke9I96R4AYIq/0r1l33+f
kyviBbRI9z6l+z//VA8/HPotYFRsrOOKfi+/rN59V/XvTwWkRo586MCBA4Hu
60j3VpHuSfeke9I9AMAU0r35It0HrUj3Lq369NPQ/8CdjmvixOpHjhwJdF9H
ureKdE+6J92T7gEAppDuzRfpPmjl33S/Zo1jJ79HD7VrVyq1YYP69ltVvXro
t4BzyRMnr7rp01OuqVPVlCmUrZo/v+bp06cD3deR7q2yle5HvWKrXh1pq3qP
sFUVdlmv2qttVfsZtsrm2psstlUhHDO/x9fKThU7ZqtsvtNI9wCQDpDuzRfp
Pmjl33Qvj71vX5U7t+PC8d6rXTvH5eeqVAn9FnCpGzc81pUrjqHsIyIo6xUV
VS82NjbQfR3p3irSPemedE+6BwCYQro3X2Ga7iXbSrr/9lvHtd7Wrg2PGjdO
Vajgt3S/f7/66ivHWHk9eqRS3bqpli0dz1rIX2wm6+pVtWOH+v13tXAhZb1W
r6514cKFQPd1pHurSPeke9I96R4AYArp3nyFabrfulXVraty5VIFC4ZN5c2r
SpXyW7qXunBBzZ2rfvwxlZo2TQ0a5Li+fMhfbCZr0ybVubP6z3/UnXdS1qt6
9YpLliwJdF9HureKdE+6J92T7gEAppDuzVeYpvuzZx2Drg8YYGsPOcjVtasq
W9af6f7aNcdrbPfuVErC8nffqRo1LK4lMVGdP69GjFBff63Gjg1G9emjWrVS
Tz6pPvyQsl7ffMMV8dJtuv/0bVs1dICt+qSPrbIzqt5jv9uqFybZqnuP2qo2
s23Vx31tlZ0X64sTlJ0qesJW2Xynke4BIB0g3ZuvME33EjljYtSZM+FU8+b5
88h882VzzPybN9XOnSp/flWpkqpcORhVtKhq2tTxZUIIX2DpouoHoa8j3VtF
uifdk+5J9wAAU0j35itM031Scuq8ejWc6o8//Dmqnvmyme5jYhynwNeo4biE
enAOcnj6adWggWrfXv36K2W9Vq6sFREREei+jnRvFemedE+6J90DAEwh3Zuv
8E33YVf+HTPffNlM91evqvHj1TPPqL/+Utu2BaM++0zVrq0KF1a9elHWa9iw
B/fs2RPovo50bxXpnnRPuifdAwBMId2bL9J90CpU6f7GDbVuncqZ03G4u4Vq
3NhxtHzbto6LrEVHB6NOnlTff6/efVd9/DFlvSZNqn7kyJFA93Wke6tI96R7
0j3pHgBgCunefJHug1ahSvdxcY6B9e66y+JQ//nzqzx5HEfLS+5OTAxSbd6s
vvnGcQ1BynLNnFnj5MmTge7rSPdW2Ur3w96zVYPft1Uf9LdVuS9aL5vp/vlv
bVXLubaq8RJbNWCorbLzYrV5kYW7T9oqm+800j0ApAOke/NFug9ahSrdS1i+
fNlx1v/ixVZq3jz1+uuOEeyPH3dcgy84deSI2r49SCcCpNfat6/OlStXAt3X
ke6tIt2T7kn3pHsAgCmke/Ml6f7559XMmSo+3mxVqUK6t1KhSve6YmMdV9Cz
UBERaswYxyH6W7dKYKTCpo4cqRMdHR3ovo50bxXpnnRPuifdAwBMId2br127
HIOTf/21WrrUbJUpo1atIt37XKFN90lJFg+Sj411PN233+74VqdqVSps6umn
q6xbty7QfR3p3irSPemedE+6BwCYQro3X9LIbt3UJ5+oH34wW6VKke6tVMjT
vbWKj3ccJF+smKpWTT30EBU21a7d/aR70j3pnnRPug90NwgACDTSvfmKjFQz
Zqj//tcxKLrJKlhQrVxJuve5wjTdJyWPy3fsmGMoeyqM6ty5ujExMYHu60j3
VtlK91+8Yas+f9NWPTvNVjVdZL3qrLJVvUfYqgc32iqbGXnCi7bKzou15xhl
pzLF2yqb7zTSPQCkA6R783XlimO8tWefVV26mK1ChUj3VmrVKlWunDp0KHhj
01G3cl26VC82NjbQfR3p3irSPemedE+6BwCYQro3X4mJjpx+7pw6f95sVarE
qHpWavlyx0XnX3tNvf02RQW8Rox4cN++fYHu60j3VpHuSfeke9I9AMAU0n1A
iyviWavNm1WdOuqVVxwXmKOoQNdHHz24d+/eQPd1pHurSPeke9I96R4AYArp
PqBFurdWV644Ds7/5huKCkb9+GONkydPBrqvI91bZSvdd5lsq3qNtlU2R9Wz
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
hgAA4B+kewBI9+JMuHnzpvsdDx8+nDFjRvmAuP/++4Pf7LRv7NixsnHKlSvn
6x3ZsGlBly5d9P7Pzz//HOq2AADgB6R7AEjfjhw5okx455133O87f/58fWum
TJmio6OD33hrEhISFi1aJP8GekWW073JDRsZGblx48YTJ07YayZSVrVqVf0s
9OvXz8tsO3bskGfBjy+nXbt2HT9+3F9LAwDAQLoHgPTt2LFjd/2b0e07T/zk
k0/c7xsbG9u6deuSJUt+/PHHwW+5ZdOmTbvvvvtSPBrBvyyne5MbdsyYMbL8
t956y0Yb4dHcuXMrVqxYv379I0eOeJktX7588iz48RyKzz//vFatWv5aGgAA
BtI9ANxq7rzzTunzv//++1A3JCDi4uJKlCjx3XffBWFdltO9SYMGDSLdh1ZC
QoI+h8KP6T46OjpPnjzWhmsAAMAL0j0A3Gr8nu4lrezcudP5zy1btty4ccPT
/JcvX964ceO5c+f81QBno0ePLlKkSHx8vKcZbt68efTo0fXr1584cSIxMdHM
MmW2U6dOyV327t3rfEiAS7qPiYnZvHnzhQsXbD4EQ69evSyke0+tNVjYAuLa
tWvyLMsT58cHGAjywtu0aZO/Xl3yYPU+kpl0LxtT1iub6PDhw9437ODBgytU
qBCEk0cAALcU0j0A3Gq8p/uCBQvmcNO+fXuX2Xbt2pUzZ84uXbq89957WbNm
lQWWLFkyMjKyf//+2bJlkz8LFSq0e/dul3vNnj27TJkyGTJk0J87+fLlGz58
uB8PoY+Oji5QoMDQoUNTvHXDhg2dO3fOnTu38cGXPXv2YcOGuX8VILFaHvVv
v/0m/586dWrp0qWNuxQtWtSYTaf7ypUryyNt1KhR5syZ9TzFixdfsGCByzJN
blhRsWLFYsWK5c+fXy9Q/nW51/Llyy201qctIMH/rrvuqlevnvz/7NmzHTt2
vO222/RdMmbM+M033+jZateuLatOcYPHxMTI2uXWZcuWpfh0eLFo0SK5Y548
edxvypUrl9y0YsUKY0r58uVlyrVr11avXt2kSZPbb79dt1O2w19//eV836++
+sr9KRDbt293Wcv48eNLlSpVpEgR40wWedc43+XRRx91nv/69eu9e/d23rB3
3HFHgwYN3F8G2sWLF2XLT5482dctAwCAF6R7ALjV+JTu9QfEf//7X5fZNm3a
JNN1rpeYr2eTnKtP59d/tmnTxvkuzz77rJ4uuempp56qWbOmPub5scce89dD
++KLLySEnj9/3v0mfZS7kb7r1q2bN29e/ecrr7ziMnOnTp1kuiRlWaCeJ0OG
DPfcc48kR+czpnW6N7ZDoUKFZAtkypRJzz9lyhTnZZrcsEJCovM8qaZ7k631
aQscPnxYJX9jI9G+bNmyejZ5ouVRyH8WL16sZxs9erT8mT9/fsnyLkuYNm2a
3FSsWDELv1D/+uuvcl95Kt1v+s9//iM3/fnnn8aUAgUKyJT/+7//kw0lr6gK
FSrce++9usG5cuW6fPmyMadLutdvBLF161aXtYwZM0bPY3xj4z3dt27dWs8m
G1yejqZNm+oNJT766KMUH+Obb74pbwRftwwAAF6Q7gHgVuPTkfmSQbykeyG5
Ji4u7ttvv9V/yvyS5t577z35/913323MP27cOJki0WzChAnGQcurV6/WXwVI
MvXLQ6tdu7YEqxRvWrZsmaxr8ODBxoHlN27c6Nq1q0oeuN5lXDWdl6tUqSL/
lilTRtp85syZpOTR8I4ePWrMZqR7eaTGL9THjh0rX768Sv7dXOb31FRPG9bZ
k08+qUwcmW+ytT5tAZ3us2bNqo+16Nmz54oVK/RRFrJM47SL69ev60HnJk6c
6NKqBg0ayPQPPvjAe+NTZCHdi4cffnj//v16ory89cTRo0d7WosEf0/p3rB5
82Y9j5cj80+fPq3nmTZtmjFR3gUzZsxo0aKFp2sirF+/Xu7iftgAAACWke4B
4Fbjx3SfMWNG/UP5yZMn5c/ChQvr3CfhS//orGeOiYm54447ZMqwYcNclvPp
p5/KdEmCdh9VUpK0RNojidvTDO5Z+9q1a/on8h9++MF5us7L4qGHHoqKivK0
QJ3uCxYsGBkZ6Tx91apV+u5eRk7ze7pPtbVJvmwBne4179+9DBkyROapWLGi
88QDBw7oeH727FnvjU+RhXTfvHlzl0cnYV+ldFiCwV/pfufOnXqeOXPmpPLA
nCQmJsr7Rbae+bsAAOAd6R4AbjV+TPdGfpeQKH9WqlRJ/ylxSf8irP/csGGD
/tM9e+o5JaBZfzz/WLZsmSxKYmmqc+7fv3/u3LnDhw/v3r27zrYffvih8ww6
L8uG8n6tNC9j5hcpUkRu+uyzzzzd1+/pPtXWOkt1Cxjp3ks61vQp5MrpcH3R
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
r1u3rpc5J02aVKBAAWPmLFmyvP3225cvXw5aUwEAAAAAgF+cPn16yZIle/bs
iY+PD3VbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAASPAgAAAAAAAAAAAAAAaUCojyAAAAAAAABWkO4BAAAAAAh3pHsA
AAAAAMId6R4AAAAAgHBHugcAAAAAINyR7gEAAAAACHekewAAAAAAwh3pHgAA
AACAcEe6BwAAAAAg3JHuAQAAAAAId6R7AAAAAADCHekeAAAAAIBwR7pHkM2b
N2/KlCknT54MdUMAAACANOfIkSOzZs26cuXKLduAsHPs2DEJOAsWLAh1Q0j3
6Vack1C35V9y5swpLzbJ+KFuCAD4IDExUbrT+Ph495tu3rwpNyUkJAS/VZ5I
O1NsrTQyDX4uAAgo6Qq2bdv222+/7dixI031VDbp3iw9PSLt8OHDGTNmlL3l
+++//9ZsgL/EeeXfdX3xxReyxR544AH/LtYC0n26dObMGednNkeOHNWrV+/S
pcuvv/4a6qaR7gGEpRUrVkjfddttt127ds3lpvbt28tNXbt2DVpjZBd948aN
XvZpn3zySWmS9LexsbHO019//XX9uXD27NnANxNAiG3ZsqVOnTpZs2Y19gmL
Fi06YcKEULfLD3SfLDp06BDqtvjZ/Pnz9UPLlClTdHS0/QVGRkbKR8aJEydC
1YBQKVWqlPJszZo1flwX6R4BZaR72bUrVKhQhgwZjGe5Y8eOFy9eDGHbSPcA
wpGxJ+l+pKJO988++2zQGpMvX74UW2LQ6V788ssvxsTExMS7776bdA/cIr78
8svMmTPrt7x0GpUqVZKwpv985513Qt06u3r16qUfy5133hkTExPq5vhTbGxs
69atS5Ys+fHHH/tlgWPGjJEN9dZbb4WqAaFStWrVu/5hRCFjinys+3FdpHsE
lJHud+3aJX9GR0dv3Lixbdu2emLDhg1D2DbSPYBwlHbSfUJCgj5m0ky679y5
szFx7dq1xic+6R5I3xYvXqzf7OXKldu2bZueeP369YEDB2bLlm316tWhbZ5N
N2/eLFCgQIYMGcqXLy+P8aeffgp1i9K0QYMG+ZTu06U777xTNsL3338foOWT
7hFQLune8Pnnn+vpP//8c4p3vHz58saNG8+dO2dyRUePHt25c6fLkZ8u4uLi
tm7dKk3Sf+bKlctMur927ZosWRpz4cIFL2uXJaf6ha00QLbD7t27fTrFJtUG
yCeLNGD9+vUnTpxITEz0sqjo6GhZlPOfW7ZsuXHjhvnGAAg5y+nefL966dKl
HTt2SLfm/UhI6ZQ8tcSg033u3LmdD86XXTt9TJendG++W9NkNmlwimMRAAih
hISEypUryzu9UqVK0gW53JrqMZzy9j916pR0BXv37pVuIcV5pJvavHmzzOaf
FjuRHSRZckREhJd5li5dKo+uatWqn376qfynXbt2Xma+fv36vn37Nm3alOoY
cfLApa+WHvvw4cNm+kCTO6KazLZ9+/aDBw+aWbIZ5ntsfZxDINK9ry8DeXLl
ifD+gWj++fKJT+neTDuTkgOXvAB0vvjqq6+8p3tfQ5ZlpPt0yVO6l/e+9PMy
vUqVKi53mT17dpkyZYxj+PPlyzd8+HCXLn3KlCk5cuQYMGCA7Cv27du3ZMmS
euZMmTK9+eab7hn//PnzrVq1Ms72uvfee2fNmlWwYEH3dC/90l133VWvXj35
v+xzduzY8bbbbtP3ypgx4zfffOM8s7zZpZvSO6h67TVr1pT3i/t2iIyM7N69
u7EomTOHk06dOllrwIYNGzp37iy7zcZ7J3v27MOGDXPexZUtLy3s0qXLe++9
p7eAbC5pT//+/bNlyyZ/FipUaPfu3Sk/fwDSHgvp3ky/Kq5evTpy5Mhq1aoZ
c8p/pFtz/lZQjB8/vlSpUkWKFDGOMJR9Fec+7dFHHzVm1um+ZcuWyung/GLF
it1zzz2y7+Ge7s10a+K+++6TFUk0GDp0qCxKzyldnOxauycIAKHy448/6rfn
3Llzzcwvu1Xy1v7tt9/k/1OnTi1durTRFRQtWtRl5j///LNy5cr6CCKRN29e
2bdx+c1i0aJFssA8efK4rytXrlxyk/NB0ZMmTZIp/fr127FjR+PGjbNkyaKX
LF3W/PnzU2zwyy+/LDPIemVXSvdXEgndZ1u2bFndunWNxyJdq+yL9unTR3ZQ
XeaUu/fu3du5D7zjjjsaNGiQ4hDo5ndEk5L3vSdPnly2bFlji0kfLp2zBHPn
2WT3OIcb+XBJcZkme+yKFSvKNsyfP78+QUP+dVn+8uXLrTUgydzLQJQvX16W
c+3atdWrVzdp0uT222/X88tr7K+//nKZ2fzzZYH3dO9TO8X06dNdPgTlY1F5
SPdmdgYkL0gD5Ply+XQeNGiQnn7p0iWTj1Q5MXkXpH2e0r349ttvdUfk3API
TqmeX3Ydn3rqKemj9Lv1sccec77v2LFjZeITTzxRp04d/UauUqWK9H76vvKq
dp55//79BQoUMPpn6QGMs72UW7o/fPiwSs6/8pKWDlDPI92m/ipg8eLFxpwn
T5403k3S2urVq+vs/J///GfcuHHOy4yNjX3wwQd1j/fCCy88//zzOlbrt6pw
PunMfAP00U1a8eLFpReS7aD/fOWVV4zZNm3apN/v6p9fyoT+It3YM2/Tpo35
5xRAaPma7k32q9LnFCpUSM8p3anMVqlSJenQ5E/pspwHQRozZoze3TJOpE01
3Y8aNUr9c3D++vXr5f+vvvqqJHT173RvslsTuleX3S39OSK7MXoEACG7Rt6P
4wIQNAMGDNBvZ5M/E3fq1Enml1yvjy5WycFKdrck49SqVct5zsGDBxv91cMP
P2zsklWoUOHvv/82Zvv1119V8jCk7uvS/ZtkQ2OK3r2UnlB3bvIfY6dRmjFl
yhSXJUgs0j2Pjl0lSpSQ/0uAcplNIrDOaNKhtW7dWvKXdFn6t5s8efK4HCIl
M+gHIo9XtkbTpk31HqD46KOPnOc0vyOalPzTtixQzyxduuyXykPTW0D2Tp2/
wnUJ1/ou//3vf903oPkeW+K/89J8SvdeGpBk+mWQ9M+nxv/93//J2uVDUGbQ
nyAiV65czl8L+/R8WeA93Ztvp3jzzTf1TfLUV6tWLX/+/MYz4p7uTe4MyK6F
/tm0SZMmxttWXuH61eL+8vZCOTF/L6RxXtK9cd7loUOH9BTpi3SnNGHCBOPl
tHr1ah1Cpas37qu7X5ElS5avvvpKH4hy8eJFeV/rN6Pzih555BGVPFy/8b3r
+fPnpZfQS0gx3ct7RH+11bNnT9mR1l9qHT161PmbwObNm+t1LVmyRE+JioqS
N4hMlD7h4MGDxpx6CBF5Lx84cEBP2b17t3St8ki3bNnislnMN2DZsmWyZaRb
M47Yl1u7du2qkvd1jxw5oifqdC+kg5INpb9UEdIhJCQkvPfee/L/u+++2+NT
CCCNMdK97OmN+jf5cFf/Tvfm+1XRoEGDhg0bSt9ifJMvSVz/KPPCCy+4t2Tz
5s26Jakemb906dLSpUvrg/P79OmjkocI1rthzuneZLeW9M/+j3j55ZeNtX/8
8cd64tdff+3TJgUQIHqopSeeeMLk/DrdV6lSRf6VHSHpuPQJldJ1OP/ELFlD
B5MOHToYVw+ZNWuW/qHnxRdfNOa0kO71fpF0R3risWPH9Dn1RYsWdfnmUPYA
Zbp0R7p31ZcCefrpp11W9NJLL6nkH1acf9Y/fvx4t27dJk+e7Dzn6dOndQOm
TZtmTJS9tRkzZrRo0cIlV5rfERXSh+uOdMCAAcbOpOwPyxPUtGlTL9c90fkx
xXBtvsc26E8En47M99IA8y+DJKdPDQkL+/fv1xMlYuuJo0ePNuY0/3xZYybd
m2nnqlWr9K/wsnGM1C8vFf2p7ZLufdoZ2LBhg/4249NPP01KPp5Efxuf4p6A
F6T7dMlLujdu0r9Hx8TE6DfjsGHDXObUpzLJbqcxRXe/EoGd++Sk5OOv9DIj
IyP1FOl59JTvvvvOZbH6+8AU073m8lJ3Zuxdz5w503m6vP4LFy7ssnetvyvr
1auX85y6mx04cKDLkk02QHP/fUo6N/24fvjhBz1Fp3vp/fTRRCdPnpQ/pZG6
b5cNqJK/RPW+IgBph9H/eGL0Pz71q0kpdSnigw8+kDnLli3rfpP5dC87n/oX
loULF0rML168uNykh813OfbPTLeW9M/+j/vjaty4sfteDYBQqVq1qssukASW
L5zIHp3z/Drdi4ceekiyqqfFNmzYUOapWLGiSyz98ssv9d2N31MspPuCBQsa
u5GaxCi9WJedRsmPyukipHqfKlu2bC6XK9U/x1evXj3V8+J37typVzRnzhzv
c/q0IyopWM88ZMgQ90V5P6zCS7hOMt1jG/yb7s2/DJL++dRo3ry5S5v1L4PO
BxuYf76sMZPuzbSzfv36MkVyt8twXnpwM+fPQV93BsSIESN01Nq9e3fv3r1V
8vHGvh634Lxn4tMdkZZ5SffHjx/XN+lvRzds2KCSv+tz78y3bt2qkr8aNabo
7rdcuXIuc+roKnbs2KGn6BendHTuX0umOGa+Ea5djily8dlnn8k899xzj3uX
qM92KVOmjDGlTZs2MuWZZ55xnk2fhdqzZ0+Xu5tsgAv5rJw7d+7w4cO7d++u
O9UPP/xQ36TTvZHfpddVyYPb6D/1tpXNbn5dAELL2KmTHcue/6a/XTd26nzq
V51dvXpV9ma/+eabPn361KtXT3n4DtCndH/w4EGVfKkU+XfAgAFJHtK9wUu3
lvTP/o/Lbq2QNqvkg7U8tQdAMOl077y3I29b533+XLlyOc+v073EnxR/+TXo
PmHixIku02/cuKFPfjSik4V07757KYoUKSI3SW4ypsTHx+sD0Y1DQ2WKHrHZ
pWuSNuifmEuWLDlo0KC9e/d6eWg1a9ZUyb+xyt7j7NmzUzyLP8nHHVF9mkO+
fPl8GtVZ857uDd57bIN/0735l0GS508NfbBBq1atjCk+PV8WmEn3qbZTnne9
HJfvx5JSGjPfws6ALP/RRx9VySc1y9aQd5AECl8fKek+XfKS7o0dVH0654QJ
E/Sfmd0YLwzjYFFP3e/ly5f1nMYR788995z8+cgjj7i3zXu6P378uJfH9fzz
z8s8TZs2db/pp59+Usm/lRsdsv4OLUuWLMZXwefOndNHvEyaNMnl7iYboB09
erRHjx7GqbLOpDvS85DugXTG/Hn3PvWr2g8//NCyZUtjDFLvH80+pXv5f40a
NfT8emcpxXRvpltL8rz/s3DhQj2z+WF/AATO008/Le/HZs2aGVNkh3BwMomB
ykO6l70sL8s0fh5au3at+616ZKF+/frpP/2V7nXofv31140pxvGiEoJa/iN7
9uwq+VxIl7vL3mbx4sWN3qx8+fLvvPOOy3B2muzKdu7c2Rgj7o477pDFSs/s
0lf7tCOqt2qKM6fKe7o32WMb/JjufXoZJHn+1NDLb9GihfNE88+XBdbSvUs7
jx07ptvmfk1J93RvYWcgKfnEDd1UMXz4cAuP1Pn1YOHuSJu8pPuRI0eq5EM+
9LeO+nwQ8ZIHzl/8ppruJbTqKR07dlQeTvjynu5Pnjzp5XHpLw1S7CdlgSp5
9BXj8JWLFy+WKlVKJubPn1/em2+88YYeg6Vs2bJXr151ubvJBiQln3SQJ08e
lfyFm3xEzp07VzayhPcGDRoo0j2QfplP9z71qzExMR06dND7hPXr15fdA9ln
OH36tHF+k3tLfE33utuvWrWqvsk93Zvs1pI87//MmTNHJf/sxbU+gbRAD++T
4qh6ugNJMd0bx7qnyMg169atc79VX4yjT58++k9/pXt9paf+/fsbU/RvqSm6
/fbb3Xfw4uLi5s+fL/cysrDsfUk/nOKV/mRvcMSIEXXr1tWNVMm/I69atcqY
wacdUX2KqPN3LOZ5P+/eZI9t8GO69+llkJRaanZfvk/Pl0/spHujnYcOHdKt
2rBhg8uc7unep50Bw6JFi4zR9eWNbOGROr8pLNwdaZOndC9vGf2dmHRceors
Ruo5zVyq0ny6l35YOYVZZ3bSvR67SXpaMzfFxsbqkf2cydszxe8Azad7vQGf
fvppl9O7SPdA+mY+3fvUr/7vf/9TyVfWMAZo0pYvX+7po3nHjh36Ji/Xg3ZO
9+fPn2/SpIkxooh7ujfZrSV53v8ZPny4Sj4PMdXHCyAIjOPw3S/oZjndJyQk
6JOI3YcnkuSlo5Nx0++//64b4P6Nn/l0L3ut+kf56dOnG1P02GUfffTRJid/
/fWXPvZpxowZntqfmJgos7Vq1Uo37IMPPvDyYKOiokaNGqV7POmfjb7Rpx3R
Dz/8UKYUKVLEwgXuvaR78z22QT/qFLOkrw3w6WWQ5Hu6N/j0fJnhl3Qvr2d9
gIf7EA3u6d6nnQFNPpr1CPx6HHKJ+fJWMnlfg3Pw8fW+SLNSTPfyNtHf5Qrj
MqNXr17VB6ubOd/cfLrX+6tCPkSc54yMjNRXu7CW7v/4448UP60kyOu+zvka
c3rAitdee012gGUXVx6yl8tlmmyAMcKAy4lp0qHpc9xI90B6ZT7d+9Sv6t+h
3K8prA/yTPGjWTpSfVOKF+HVnNO9C5d0b75bS/Kw/yM9cLFixVRKY1YDCAl5
/8remrwrH3zwQZefsy2ne1G7dm2VPPKey3Q98obzbuf27dv1FPmP85wTJ07U
082ke+Onz927d+sp+kuDFE9kbtasmdzUsmVLY4qnscj0+PYuv7+nOLMxLJ5x
FLpPO6LGSQTOI64bvI8d5yn8+tRjG+TDSLldgs07L+nb/MsgyZd079PzZYFf
0n3SP9+uuJxTIPr27av+ne592hlISk5q+nfJBg0ayP979eqlkq/OkOovjy6U
E5/uiLTMJd1LH7hy5crHH39cT3Tu+pL++c1FJQ/p6fwV6759++Ql7TyuiPl0
L+9QfZ3QKlWqGNdrlh5eX5NUWU338lLX30wWKVLE2K2Vdekrv8g7yBjWL+mf
/W2XC3N4YrIBFy5c0LM5X5tj27Zt+npYinQPpF8+Xe/efL+qP74rVqxo7NjE
xcXJvYzz8lJsjB6cWfYunBfufM67+XRvvltLcrre/W+//aanSOf2zDPPqOTD
8l124wGE0C+//KLfwrInZuwdSefz1ltvKavpXiK5Pma4Z8+extDiCxcu1IPa
tWvXzphT9gz1BetbtWql55S+Qo87p7mne1nySy+9ZPRjkqP1Yp3zsj4wvnHj
xu5t09Eya9asuouWf++7776GDRtu3LjRebaIiAi92JdfftmYOG7cuJw5c0q/
7TKY3oABA3Rrz507p6f4tCMqM0smVcmnDHz11VfGQNPSbw8ePFia4Ty2vAtP
4dqnHtswfvx4lXz+l/PZ4vJZ4/Lrv5kGJPnyMkgynZp9er6s8Ve6178eyhaQ
51RPiY+Pf/fdd/X2d7l2jPmdAWPmHDly6MOMY2Ji9DgGtWrVklWYf6TKifl7
IY0z0n3u3Ln1uTmavBRfe+01l9eS9Db6C09RqFCh5s2byxuzatWq+sgT46Wb
5Eu6F999951+72fLlq1OnTr6O+QsWbLoN6m1dJ+UfMKLPn1e9iSlkU2aNNEL
FJ988onznMbxA7IR6tat+1gyeXSdO3eWOV2+8zTfgEaNGuktKd277NKXKVNG
/i+Pq3Tp0op0D6RfPqV78/3qsmXL9ETZtejQocMjjzyi90D0hac9fTTrcZtV
8rC6rZNVrFhROltj58F8uk8y3a0lOV0RWCUfhy931EfJCtm38X2jAgggCQs6
Yut9Iekl9PGT4vHHH3ee02S6T/on7KjkQY1kt0p2bPTO3r333mtcfl3T1yBW
yZe6q1GjhnQpKvnnY/0Tc4rXu1fJw9nVq1dPFmt0jMZwxxIk9VXCU/wpXAK4
vou+Zv26dev0ePvSvOLFiz/xxBO9evWSXlp3WbIc59+Xn3vuOf0osmfP/tBD
D8mOYo8ePfQv1KJbt27OKzK/IypOnz59zz336FvlscjMktT0syC7iLqpXrZz
iuHafI9tkD1/3XtLmyVBy2eNtEQ+a1K8VF+qDUjy5WVgMjX79HyZJ6/5TP/Q
DZYXiTFl6dKlvrYzKfnLmbJly+qllSxZUp4F/amtf9Z0SffmdwbWrl2rG+n8
qti/f79euE9jJign5u+FNE66OOdnVrodibc9e/Z0fhm7mDp1qvMwlaJEiRLy
qnP+KkCP/egl3e/cudN5+i+//KJ/YNLvpurVq2/ZskX/ymP87qMdPXpUz2Z8
O+qF9BsdO3Z0HnBSmuT8MaHJHrh0MsoD6VqdR/s034CIiAh9WT1N3nRPPfXU
gQMH9Ok2Rqeq87tLujdGtSLdA2HHOIHOTLrXzPSreja9V6DJrprsu8ougR6l
JMXGyK2y3673ljXZI6pWrdqxY8f0DLqbMk7CcqbTvfN1pU12a0n/7P98/vnn
sjtnDPuTN2/eKVOmmN6QAIJnzZo1RrLWHYVkQEnTLmeCd+nSRZn+eXTOnDnO
+1dZs2aVIOY+nN3FixelJzFmkx3Cvn37xsfH6wsW6+syazrdV65cWf5jfGEo
+40Si5z3ypYsWaIfgqezmPWlydu2bav/jImJ+fLLL++//36XrlIWa1zjybBt
2za5o7HXqkkcGzZsmPt4biZ3RDXZAxw4cKD+XkKT9jRt2nTPnj1eNrI+zNv9
KgBJvvTYzvbu3Wv8vq/Jph46dKiFBmgmXwZ6k3pKzc7L9+n5Mkl/4+GJ81Nm
vp1JycFHQrrzV2f9+vXTQ+JI2HFvRqo7A/K+0BuzQ4cOLvf94Ycf9F1S/Lo+
Rc4rMnkXpGNRUVGbN29ev369vG79tczjx4+vW7dOOnl/LVCLi4uTrnj58uUp
Llm6Yukf5KPhk08+keQuaXpLst9+++3TTz/V70cz31F7cvbsWdltlgYYx1kB
QIrM9KuxsbE7d+6UPQ3n0J0quZcseeXKldLFuZ+F6isz3ZpO97NmzUpKPhHg
r7/+OnjwoM31Agg0vcu0ceNG9/BlmeTupUuX7t692/tg5hJFpY8yTpxPkU73
5cuXT0r+6nLXrl3Ss/mxqdLC/fv3r169WrrZVBere2yZ+eTJk9738bzviLo7
c+bMsmXLtm/f7tNR1p5Y2xE9ffr0mjVr5Bk5fPiwX/ZgTb4MfOLT8xVCks1l
+8sTanJLBiJkpYh0j3RJD3tSv379FG/V33m6D2MFAPDC07GLAGCZlyviAfAV
6R7pkr7qaKlSpZyHmdI2bNigz5DiUFIA8AnpHoDfke4BPyLdI12KiorSe6H3
3HPPwIEDZ8yYMWfOnJEjR7Zo0UIflv/CCy9YuPwoANzKSPcA/I50D/gR6R7p
1b59+1q2bJk9e3aXMTSqVas2efJkoj0A+OrBBx/Mmzfvzz//HOqGAEg/Zs6c
KR1LrVq1Qt0QID0g3SN9u3HjxtKlS6dPn/7DDz+sW7fO+SJQAAAAAJBukO4B
AAAAAAh3pHsAAAAAAMId6R4AAAAAgHBHugcAAAAAINyR7gEAAAAACHekewAA
AAAAwh3pHgAAAACAcEe6BwAAAAAg3JHuAQAAAAAId6R7AAAAAADCHekeAAAA
ALw7cuTIlClT5s2bF+qGIGXyBM2aNevKlSuhbkgoke4BAACA9Co+Pn7btm2/
/fbbjh07EhISQt2cYLt+/bo8cHn4Bw8eTExMtLOosWPHSmIqV66cv9oG73x6
7g4fPpwxY0Z5gu6///7gNC9tIt0DAAAA6c+WLVvq1KmTNWtWY2+/aNGiEyZM
CHW7giQyMvLVV1/NnDmz8fBz5szZtm3bM2fOWFsg6T5oLDx38+fP13NmypQp
Ojo6mK1NU0j3AAAAQDrz5ZdfGuEoX758lSpVktSj/3znnXdC3bqAi4mJqVat
mn68t912W5UqVXLlyqX/lP8sWbLEwjJJ98Fh7bmLjY1t3bp1yZIlP/744yA3
OE0h3QMAAADpyeLFi/XuvUTRbdu26YnXr18fOHBgtmzZVq9eHdrmWbZx48au
Xbu6T//5558HDBjgPOWTTz6Rh585c+Zp06ZdvXpVT5RNUatWrQIFCpw8edLC
2kn3mvlnwZpAPHe3DtI9AAAAkG4kJCRUrlxZ9u0rVap0+fJll1svXrzo/e6J
iYmnTp1av3793r17b968meI80dHRmzdvltn802InN27ckCVHRESkeOvChQsf
eOAB9+ljxox56qmnnKc0b95ctkC7du1c5pSN468j82NiYqSpFy5c8H6vuLi4
Xbt27d69W/5jfl3Xrl3buXOn5Ggvyz969OjWrVulGeYXa4b3pyDJl2fBmkA8
d5bJO0iehXPnzgV5vZaR7gEAAIB048cff9T79nPnzjUzf69evXLkyPHbb7/J
/6dOnVq6dGnn8/RdZv7zzz8rV66shy8TefPm7d+/v+RB53kWLVokC8yTJ4/7
unLlyiU3rVixwpgyadIkmdKvX78dO3Y0btw4S5YsesnFihWbP3++MdvKlSun
TJny1ltv3X333VPcdOzYUfKm/Efar0P0448/LgupX7++98fuU1N1upeHL1G9
UaNGxokPxYsXX7BggfsSIiMju3fvfttttxnng+dw0qlTJ2POEydO3HXXXfXq
1ZP/nz17Vh6OcS/Z1N98843zYq9cuSJPWc6cOY3F1qxZUxJooJ+CJN+fBWtM
PneiYMGCOdy0b9/efc7o6Gj3OZ3t3bvX5S6zZ88uU6bM/2PvTOCbKPP//93f
/n/ruuqurq7nyrqrK16siqCAQL0QEA8UuVFBhRZaoIUCLZec5SggUG7BQilH
odxX5SggZ7kKtIUilXL1oC2l9530/wzz27xikg5JnpnMTObzfr1fvNrJNJnk
SR/6TiYzv/vd7ywfb5k0aVJdr3dpB9Q9AAAAAAAAXsPIkSPF5HTyEPEsM9n6
rMi+//57MQpY0dSrV+/uu+9u1qyZ9Zpjx44VV7jnnnuaNm3K1hG/ffHFFwsK
Ciyrbdu2TfzEtP1t/f73v2cX7dmzx7JETObHHntMjGX2Bctn8RABbDNYKoqr
TZgwoXXr1q+88gq76dZ2PPvssw899JD4tXhCNLa+uG1+fn7W22aDG5vKEA9U
WNemilRWVjZq1IhddO+993799de9evX605/+JP74s7exPvrBr7/+ypY//fTT
LO2fe+45cTXW76xe2Rc7d+60rHnt2jXLw/7MM8+8/vrr4sawrV2wYIGiQ+DG
KNQFS+mJEyfWdamTY1drV/fiT33yySf2a5aXl7M8tyl6y0sobLNt9pHo3r27
5UH+9NNPmzRpIr6i1aZNG4nt0QKoewAAAAAAALyGTp06sT/sP/jgAyfXF+v+
5ZdfZv/Wr19/0aJF4v7PrE/T09Mtqx09elQMnG7dupWWlooL16xZw0KPLezd
u7dlTfeS+e9///vevXvFhZcvX37hhRfo9s4DbDMsKzu/TzjbQvEaGPfdd9+A
AQMuXrxo/4PKbSrbJPGmf/nlF3FJSkoKC3x2tadOnbK5LbHuWaeLbxb369dv
//794tvEbAisd40Q91pnNWo5uFx+fj5LTrbw7rvvttxH5e5XrRx75u/bt4/d
2aCgIIeXOjl29rArrKvu7TGZTB06dGDrs0E5cuSI9UULFiwQXzBhvwuWl8gO
Hjx4//33i6+DOXP9aoG6BwAAAAAAwGto2LAh+8Pe39/fsuTChQvfW8Fqznp9
se4ZjRs3ZqlY19W+/fbbbJ2XXnqJZZH18pkzZ4o/bslYN9Ly0UcfzcvLs17z
wIED4tVu2rTJstClrrx161aPHj0sHyJg1fzxxx8fPXrUeh3lNlV889d6FBhf
f/01Wzhq1Cib2xLrXkQiHlnyi+vExMRYLy8rK3v88cfZcnajSt+vWpk+d8+u
5K677ho0aJDDS50ZO3tcqvv+/fuLCW/z6YPy8nLxBSv7vQumTZvGlr/11lvO
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
sxzqHnWPukfdo+5lhNX9rb+QhKh7AIABQd1DV2U1NG8e3XWXkJ/vvac5mzWj
hg31XfdlZdSiBf35z9SkibK+/DI1aEDdugmv2BjZykofk8mk9CyHukfdo+5R
96h7GWF1n/8ASYi6BwAYENQ9dNXCQgoLo549hV27T53SnGvW0Icf6rvui4qo
VSt68006dkxZY2KoXz96+mn64QdDGxv7xrVr15Se5Qxb968nEI+cdf99IJd9
FnIZGsblsi/dN/0pLseP5LLrSi45X1vY+AmXPHUf04l4nDyMS87XsvRY9zf/
ShIO64G6BwAYDtQ9dNVbt/7vz+bycvU3xl4vOGZ+YaFw6IAPPlD8hn75RTgd
3lNP0YgRhnb27MYXL15UepZD3aPuUfeoe9S9jLC6z3uQJETdAwAMCOoeuirq
Xmk9VvdVVcL57sPCaPx4Q7tw4es4Zj7qHnWPukfdKz0Nygur+5yHSELUPQDA
gKDuoaui7pXWY3XPvHGDli+niAhDu3LlG1euXFF6lkPdo+5R96h71L2MsLq/
8TBJOBR1DwAwHqh76Kqoe6X1ZN3X1FBxMRUUGNqiopbV1dVKz3Koe9Q96h51
j7qXEVb32Y+QhKh7AIABQd1DV0Xd81hdLZx0ICeHcnPr9NIleucdD9W9itbU
COf+04I4Zj7qHnWPukfd67Husx4lCVH3ctEHGBW1n3rAHVD30FVR9zyycl+1
SjjjgK9vnfbqJRzprnVr9bdWOVlTp6crflIAJ01KerOwsFDpWa6PUeu+Qyzx
yFn3nH09ahyXnGfEW/yN+966n8uhU7j8bB2XK7tyOWUolzx1H9uBeOR5PYfJ
+XzT3V/yrO4zHyMJUfdyobvnBpAFjLtOQd1DV0Xd83jiBE2bxv6IogED6tTP
j/75T2+ue5OJsrNp9WrhI/9acMuWJpmZmUrPcqh71D3qHnWPupcRVvfXnyAJ
h36BupcH3T03gCxg3HUK6h66KuqexyVLqH17mjmTFi+u0zlzqEEDatNG/a1V
yIoK2r2b/vY3eustTdiz5ysJCQlKz3Koe9Q96h51j7qXEVb31/5OEqLu5UJ3
zw0gCxh3nYK6h66Kuudx0SL65BPh/eK4uDrduJEaNXKn7svK6Ndf6eJFrZuS
QpGR9Je/UN++mnDcuNdSUlKUnuVQ96h71D3qHnUvI6zurz5JEqLu5cL6uaH6
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
NvbgwYOWJUVFRZ78sIA0qHstW1pK+/YJzagply+nLl1Q979RxbqvrqasLNq6
Fbrv/v3NcnJylJ7lUPeoe9Q96h51LyOs7k+9ShKi7uUCdW8oHY67hWPHjkln
bPltrJewrk9ISGA1vWPHDvu637dvH1vo6+u7du1ahx/Yt7B3715W5bm5uexr
cQ8B91I6LCyM/WxkZKTN3gI2bNq0ia02ffr09PR0+8/dW1NWVrZs2TK2zujR
o93YHtlB3WvZlBThCGlTpwr/asfwcPrwQ9T9b1Sx7nNz6cABCguj+fOhm8bE
vHHt2jWlZznUPeoedY+6R93LCKv7kw1JwsE9UffygLo3lA7H3YL4BnpgYKAb
T6Tt27fb1z1L46lTp1p2tg8JCWGlfOzYseLiYomr4nnvnv3JJ+5vv2LFirrW
SUtL8/X1HThwILuJy5cv11X34ocFxI0ZPHjwxYsX3dge2UHda1n2mNSvT40b
U7duGvLzz6lhQ9T9b1Sx7uPjqVcveugh4V5D9xw0qGFiYqLSsxzqHnWPukfd
o+5lhNX9iddIQtS9XKDuDaXDcbfAiljczd564blz5yIjI3+8zZLbREdH2/+s
w7pnVFVVxcTEBAYGWn+m3s/Pb+vWrXW9vc5T97VWeyCsXbvW/tLy8vIRI0aw
S48ePcq+laj706dPWzY4ODhY+ix+HgN1r2WHDKFmzahTJ96/b+V12DB6913t
1v3p09S+PW3ZQjdueM7QUBoxwqm6/+EH6tCB1q4VdsyQxcWLhddbXnmFhg+H
bjprVuNffvlF6VkOdY+6R92j7lH3MsLq/lhjkhB1Lxeoe0PpcNwtxMbGsuVD
hgyxXhgfH9/nt7D6tv/ZuupexGQypaWlsd/r8PBwlvbi9SxYsMDhynes+5SU
lARJhg8fLt4Eu0WbnxWP2L9w4ULxW4m6r6qqys3NZbfFtlO8tuTk5Lo2yWOg
7rXsoEH0/feUmKj+llir8WPmnzxJb70lnMR85UrP2bUrBQU5Vffz5gk7Y7Rr
J7xoI4vszr73nnAwBNUfeT3r44FZDnWPukfdo+5R9zLC/iZPeJ0kHIS6lwnU
vXG0iXT7J8OePXvEi27dumVZmJ2dffC/rF+/3qW6Z1FfWlpqs2ZBQYGll8UP
2ttwx7ofM2ZMH6c5efKk5QdZqosLd+3adfg24gfwBwwYwL4+e/ZsXbfI/gvo
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
3RtKh+MOdATqXsui7lW0ooJ+/ll4Bz8uDnq5Bw82y83N5ZkAnQF1j7pH3aPu
Ufcywupe+tiSqHu5QN0bSofjDnQE6l7Lou7V9ddfKSWFzpyBXu6FC82Liop4
JkBnQN2j7lH3qHvUvYywul/egyRE3csF6t5QOhx3e0wmU3JycmRk5OTJk0ND
Q8PCwqKiovbv319TU1PXj+Tn58+ZMyc+Pt7+ogsXLsTExEyfPp1d1YwZM9jX
SUlJ9qvl5OSwX/zFixcvXLhw48aNV69edeoZ7BZ3vK2SkpJt27YtWrSIPQjs
jhcXFyu3MS6ButeyqHt1NZmopgYaQR+z2cwzATqDYeue86RynHUvvePuHR0y
lUvO8/HxdGLWo1xynprtm8Vcco5abAcueeqe86ZnBHE5KYRLPdb9si9Iwv6o
e5lA3RtKh+NuA+t0FvV9HDFhwoSsrCz7H6msrGQXsRWWLl1qvZz9AbZu3TqH
VxUbG2symSxrsoLu27ev9Qq+vr6sr7me3HVwx9tiLT948GDrFUaMGOGBHUGd
AXWvZVH3xrG6mvLy6PJlqIIZGS3Kysp4JkBnQN2j7lH3qHvUvYywul/6FUmI
upcL1L2hdDju1pSXl4eEhIhJu3z58sTExOzsbNaALH79/f3ZQnapzTv4LHun
TZsm/ohN3V+4cEFcvnjx4tTU1KysLLaErSMu3L17t7haRkaGmNvTp09PSEg4
derUnDlzxHXY+rI9152+rR9++IF9O3HiRHbHz58/P2bMGPZtWFiYvFviHqh7
LYu6N443b9LWrTRpElTBxYtf//XXX3kmQGdA3aPuUfeoe9S9jLC6j+xJEqLu
5QJ1bygdjrs10dHR7KJ+/fqxqrW56Pr162w5u/TIkSOWhXv27AkICLC8x21T
92vWrGELx44da7MXpbhvQHh4uPgt+31n3w4aNMjyuoHJZBo+fDhbuHr1apef
05Lc8bZSU1PZ135+foWFheIK7AvxBYH09HR5N8YNUPdaFnVvEGtqKC2NwsJ4
Qwa659y5jdPS0ngmQGdA3aPuUfeoe9S9jLC/wH/sRRKi7uUCdW8oHY67hfLy
cvEN+i1btjh8tqxYsYJ1LqtCyxJfX1+2Pqv15cuX29f9woUL2cKIiAib60lJ
SWGT6vTp08Wd82NiYoYOHcr+tV5n7dq17GfnzJnj7FP5NixX2ZZY7/Nvwx1v
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
ONi+S7DtzMzMvH79ugf+jHQe1L2WRd1LyHI7Lk44a7xnnD6dXniB1q+Xp+6L
ioSR/de/qFEjYRd9qK7dur1ic9JSJUDdo+5R96h71L2MsLqXvkeoe7lA3RtK
h+MOdATqXsui7iU8eZJ+/JHGjKEJEzzh6NFUvz6tWydP3ZeW0tKl1KABNWwo
BD5U106dXkbdKyfqHnWPukfdKwGr+xlBJCHqXi5Q94bS4bgDHYG617Koewk7
dhR2le/enYYP94RDhtC//y1b3ZvNdOsWHT9Ox45B9U1KwjHzFRR1j7pH3aPu
lYDV/bRBJKG/H+peHlD3htLhuAMdgbrXsqh7CVu1Et517d1bOPK8Bxw/np57
TrY985kmE2VlUWYmVN/c3JYVFRU8E6AzoO5R96h71D3qXkZY3UufBQB1Lxeo
e0PpcNyBjkDda1nUvYRffCG8pX7mDJWXe8LcXGreXLaj6omazVAj+vDMfk5i
2LofMpV45Kz72f255Dyl3dKvuNzazn0L/8yl9A7Pd/S7MVzO9+OS50yCTJ66
X9WFeOR8NWnoFC5195c8q/upQ0hC1L1coO4NpcNxBzoCda9lvbvuCwspJ0d4
/9o9O3cWPgt/4YKHtra4mJo0oUWLhM/7//IL9CqvXGlRWlrKMwE6A+oedY+6
R92j7mWE1f2UoSRhP9S9TKDuDaXDcQc6AnWvZb277o8fp9hYio5207ffFt67
91jdFxUJx8zv3p0GDBDGBXqTU6c2On/+PM8E6Ayoe9Q96h51j7qXEVb3k4eR
hKh7uUDdG0qH4w50BOq+9vYnoEtL1T/ptr2+vsKJ2Lyy7isqhCPez5wpvHzh
ns2aUWio5+qePUO6dCE/PwoKouBg6FWGhzdKTU3lmQCdAXWPukfdo+5R9zLC
6j4slCRE3csF6t5QOhx3oCNQ98zyckpOFjpaa777LoWFeWfdX7lCf/87tWlD
PXu66Qsv0NChnqt7s5muX6fISJo7F3qbq1a9cfXqVZ4J0BlQ96h71D3qHnUv
I6zuJw4nCfv1Rd3LA+reUDocd6AjUPfMS5eETvT1FT7HzfmXpLy2bEkTJ3pn
3aenC3k+eTJt2OCm771HI0Z4ru5rbx8ogI3FMbVP3wZlNynpzYKCAp4J0BlQ
96h71D3qHnUvI6zupR8Q1L1coO4NpcNxBzoCdc88dIieeILeekv4SHVQkIZs
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
3YTbxc1ydfny5Q73+bcg122pAuq+FnVvZ0kJtWpFEycqeBO6OGZ+Sgrt30+b
NsnmgAHCbvNK1/2QIcJhDVR/9HSlD8/s5ySGrfsvlxGPnHXPmedLv+JyYR8u
t7Zz38RXuFzVhUvOM+LN9+Ny97tc8tT9T+8TjzznQGTOGsClHuvefw5JiLqX
C9S9oXQ47haOHTsm/V52+W0knk7Jycnsx319fSsrK9m3+/btE79du3at9Qf2
7dm7dy+r8tzcXPa1uEuAe8UdFhbGfjYyMlLibMhy3ZYqoO5rUfd2ou6ZxcUU
GkrBwbxx8f/Zuw/4psrF/+MPXn9evXJFVFRwoMAVEXCgLBlV1OvAgYpXQQW8
KrPsPcSyiyCOgiAiIEu4RcAre4+KtEwBWbaltJSW0dJSuknyfw7nb25t0pDm
OSej+bxf35cvSNMmTdsjnzZNiu6VV0SHDgbUvfwAyYqfPt3J5Nv/8EOxfLk3
bqLCQnH6tPb5Geg7cqRp0e8qm4S6p+6pe+qeujeQrPuuU4SLUfdGoe6Dak4/
7nb6D7V79erl2edSdnb28OHDi/6wPicn55NPPrHfAX7QoEHfffddTEyM6ztV
qvw8PSkpKTQ0VL76/Pnz3Tk/P7v37NWpe6ej7n042a1336099N9bbxm2hg3F
m2+q1r3VKlJStAdGaN7cyWrWFP/6l/jvf71xE2Vlieho7VsK33wT2Fu8uKE8
1KscAN1B3VP31D11T90bSNZ9l6+Ei3Wk7g1C3QfVnH7c7WQRy9PDw8OLnnjo
0KFZs2bNvOzby+bNm+f4urm5uXrI9+jRIz093X56QUHBokWLevXqVfT33Dt3
7rx8+fKSfryuWNz2eyBERkZe8czUvWevTt07HXXvwyUna4/+16+f9tzxRm3k
SO0NKta9/Cw9dEhUry4mTxbz5hVfJ+13J730s/s9e0TTptozyvXsGdgLD3/M
8ZFhDEfdU/fUPXVP3RtI1n2nacLFqHujUPdBNacfd7vFixfL0/v371/0xI0b
N3b8M1nExV4xIyNj9OjR+i+zO32iIovFEhsbK7+uJ0yYINNefzvTpk1z+jl5
xeKWFxHt0pAhQ/SLkJdY0htx87L8DXVvo+4dRt3LJSWJ+vXFpElGvk1DHjO/
sFD7lLjjDrFypfapW2xhYaJ7dy/V/ebNonx57dEXu3QJ7I0a9RjPiEfdU/fU
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
unWTJ8qXlr2f4E+cOFG+awMGDNi2bVviZVFRUfrt0KdPn7L3/sI/Ufc2P657
eX3OnBFJSd7e0aMiJIRH1Qu67d6t3Vdk9GjtsfWCajNmNIiLi1M5ALqDuqfu
qXvqnro3kKz7RtuFi3Wg7n1n3rx58jOqa9eujt88P3nypDxdvvSXX37xyXUz
ycWLFzt37izfr127dhU9/bffftO/y3HkyBFfXTcEFere5sd176vxmPnBucxM
7b4iU6YE3b7/vmFiYqLKAdAd1D11T91T99S9gWTdN9whXIy695Xc3Fz9B/Q/
/fST0zPMnz+/S5cuMhy8fMVMlZycrFe84+/6TZ48ecyYMdu3b/fJFUOwoe5t
1L3DqPvgXGGhOH3aB/cV8flSU5vl5eWpHADdEbR1r/gsXYp1P3yE0vp8qrS+
E5U29x3Pp1j3I4YrbcwQpSk+r5xiI6vUfWRrobLxA5T2aR+lBWLdN4gWLkbd
+0pMTIzeuWlpaU7PkHuZl6+V2axWa//+/eV7HRYWtnv3bi/8uwJwirq3UfcO
o+6Dc7Lu8/K0h+YLtuXnh1gsFpUDoDuoe+qeuqfuqXsDybqvHyNcrENf6t43
li9fLj+devXq5esr4m3R0dFdunTRv7Mh//Dpp5+uWLEiPj5ehr+vrxqCCHVv
o+4dRt0H506e1L4Wfv456LZ3b5Pz58+rHADdQd1T99Q9dU/dG0jW/aM7hYtR
974yf/58+ekUHh5e9MRDhw7NmjVr5mXfXjZv3jxfXUPzHD16dNy4ccUeMz8s
LKxMPkcA/BN1b6PuHUbdB+eio8VPP4klS4Ju69c3Pn36tMoB0B3UPXVP3VP3
1L2BZN3X2y1cjLr3lcWLF8tPp/79+xc9cePGjcWat0uXLr66hmbLzMzcvn37
rFmz9PvqSz169IiNjfX19UJQoO5t1L3DqPsgXGGhaNhQtGghWrUKuvXoUW/P
nj0qB0B3UPfUPXVP3VP3BpJ1/8ge4WLtqXsf2bBhg560Re8Xl5qaGvWHJUuW
lMm6z8/PLygoKHqK1WqNiYnp06ePfH9nzpzpqyuGoELd26h7h1H3ZW8Wi8jK
EkeOaE936HS//SaqVBGtW4tevYJu4eE83z11T91T99R94NX9w3uFi1H3vmJ/
9Pjo6GinZ4iPjy97dT99+nT5TkVGRjq+aPPmzfJF/fr18/61QhCi7m3UvcOo
+7K3nBzx66+iSxfRvbvzde0qbrxRrFqlffSDbTk5IZcuXVI5ALrDt3Xf9PXf
fLUlrwqVKdZ9RKjS5rdV2kcjlRYa4fl6fq60dt8p7UAdpYUPVJri0/m9vtjz
Kfb1L42UtuhfSgvEun9on3Ax6t6HxowZIz+junfv7jQNDhw4UPbqXr/HwsCB
Ax2fDmDdunXyRfI28ckVQ7Ch7m3UvcOo+7K3pCSxbp147z3Ru7eT9eolevYU
FSuKLVt8f1V9sRCVo5+bqHvqnrqn7ql7A8m6r7tfuFj7ftS9z5w4cUJ/9HgZ
+Nu2bTtz5ow80WKxJCcnR0ZG6i8qY3V/9uxZ/R4Lw4cPl0Gk/9RA/nfHjh09
e/aUp//000++vo4ICtS9jbp3GHVf9rZ0qRg7VrRvL6ZOdb6ICHHrrdS9iah7
6p66p+6pewPJuq9zQLgYde9be/fu1atW16dPn9DQUPtfZQIfOHDA19fRYNu3
b+/atav9MQP79+9vf4K88ePHZ2Vl+foKIihQ9zbq3mHUvXmzWrVPM+8/pfu8
eWL4cNG5s/ao+E63bJmoXFl8+aXYujXotnt3k/T0dJUDoDuoe+qeuqfuqXsD
ybqvfVC4GHXvc+fOnZN1oD+mnK5bt25jxoxZt26dF34hzidiY2M/+eST7t27
29/lwYMHL1y4sLCw0NdXDcGCurdR9w6j7s2b/BzLyhLx8d7e5Mli0CAxYoSr
K1a1qrjuOnH99UG3+vXryH9pqBwA3UHdU/fUPXVP3RtI1v0DvwkXo+79hMVi
SU9PT0xMTElJkX/29dXxBqvVmpqaevz4cX5eD++j7m3UvcOoe/N29KiYM0f7
VXfFZintWrfWnvpN/qGkK2axiIkTvX2t/GRTptT3wrPQUvfUPXVP3VP3BpJ1
f/9h4WLtqHsAwYe6t1H3DqPuzduqVVpoX321uOcer65SJVGzphg2zNV1y88X
2dnaXQuCbTxmvqlb9opQmWLdvz9DaclVlPZ5T6UNGuezvfW90r5rp7TPeimt
12dKU/nOwPMrlbbwTaUpPqFeINZ9zSPCxah7AEGIurdR9w6j7s3bsmWiXTvx
7rvi88+9ug4dxJtvuvrZve3ynfMLCrTGD7YVFIRYrVaVA6A7qHvqnrqn7ql7
A8m6v++ocDHqHkAQou5t1L3DDKx7/UHkmH0LF2pPOr98ubc/ppGR2mPmDxmi
/XSeFVtuLj+7p+6pe+qeug+8uv/HMeFi7fpT9wCCDnVvo+4dZlTdy7Q/f14c
OCB+/ZX9/02cqP0Y3ft1Ly9x2DBRq5b2wHqs2KZObcDv3VP31D11T92bfRg0
lqz76rHCxah7AEGIurdR9w4zqu7l7RkfL9auFatXizVrmDaZ2G3b+qDu163T
nhHvllu0XwpgxTZ48KNeeNZd6p66p+6pe+reQLLuq8UJF6PuAQQh6t5G3TvM
qLo/e1a8/bZ46imtZ31ecH6yFi3Ec8/5oO7T0sSePWLUKBERwYpvwYKGJ06c
UDkAuoO6p+6pe+qeujeQrPt744WLvUvdAwg+1L2NuneYUXWfnCzq1BHVq2uB
L5OWydWvL55+2gd1L3funPaYfpGRrPjWrm2ckpKicgB0B3VP3VP31D11byBZ
9/ccFy5G3QMIQtS9jbp3mIF136iRWLpUJCaKlBSmbfp08cEHvql7i0V7BDn5
wWXFxjPimbqPVSnVfdNtSpvaWWkrn1fa0+s8X59PlaZy0XLjBiktNEJpIz9S
mson60P7hMp8eM2lQKz7uxOEi1H3AIKQX9X9Aw/45mHMo6O1mKXu7TOq7k+d
Eo0bi59/1p50zOfvlJ9s4ULRqZP48UffJy2zj7qn7ql76p66D8S6vytRuNi7
A6h7AEHHf+p+8GBx113aT3u9v9WrtbuOU/f2XaTuTdvcudpjEUybpgU+85Nt
3Nj49OnTKgdAd1D3nqLuqXvqnrp3Qtb9nUnCxah7AEHIT+o+Oztk6FCt7qOj
fbA5c8QTT1D3/xt1b94iI7V75k+YIL79lvnLlixplJSUpHIAdAd17ynqnrqn
7ql7J2Td33FSuBh1DyAI+UndFxSETJokatTQHnPM+6tbVxt1bx91b95iY7Xv
JrVrJ957j/nLhg179ODBgyoHQHdQ956i7ql76p66d0LWfZVk4WLUPYAg5Cd1
f+lSz8WLQ95+O6R1ax/smWcefuQR6v5/o+7N29mzYssWERYmRoxg/rKpUxvE
xsaqHADdQd17irqn7ql76t4JWfe3pwgXe4e6BxB8/KTubbas/PyMCxcyMjN9
sC1blj/9NHX/v1H35s1iEQUF2mPXM/9Zbi6PqmfidjQUKlOs+w++UdoXPZQ2
/UOldfza89X4XWndJitt8etKGz1Uac+uVppKICs+GV9EqNI+Gqm0QKz721KF
i1H3AIKQ39S9L+3atZlnxCs66t6fZ7X65qklyvRCvHCcoe6pe+qeuqfuDSTr
/tbTwsWoewBBiLq3UfcOo+79djLt8/JEVhYzcjwjHnVP3VP31H0g1n2lM8LF
3hlI3QMIOtS9jbp3GHXvn5NpHx8vPvpItXdYsU2ZUp/fu6fuqXvqnro3+zBo
LFn3N58TLkbdAwhC1L2NuncYde+fs1jEhg2iXDlx/fXMyNWvX2fdunVmH2eo
e+qeuqfuqXsDybq/KU24GHUPIAhR9zbq3mHUvb+tsFDs3699ik6dKm66SfvQ
MAM3fXqDuLg4s48z1D11T91T99S9gWTdV0wXLvY2dQ8g+FD3NureYdS9vy03
V8yfL6ZNE336iOrVfX99ytxCvHCcCdq6V2mly5Tq/mBtpQ0Yr7QuXylt/ADP
9/KPSntyo9J6fKG0yNZK6/6l0lQ+WUM2C5XNfUdpil9pgVj3N54XLkbdAwhC
1L2NuncYde9vW7lSvPOO6NhRtGtH3ZuxEC8cZ6h7T1H31D11T907Iev+hkzh
YtQ9gCBE3duoe4dR9/62gQNFlSqiaVPRqpW4917tA8QMHI+ZT91T99Q9dR+I
df/3C8LF3h5E3QMIOtS9jbp3GHXvb+vXT/TsKebOFbNnixtuEL16MSMXHv7Y
4cOHzT7OUPeeou6pe+qeundC1n35LOFi6nV/6tSplStXzp8/X15WUlLSFc+f
kJCwevXqBQsWrFq1Sv7Z8QyZmZkbNmyQ/2BesmTJrl27rFar4jUEgGKoext1
7zC97ocPF5mZSjtyRDRqJKKi/L3uFd9NL6xHDzFpktixQ2zeLCpVEs89x4xc
p06PyH9lmX2coe49Rd1T99Q9de+ELO7rLwoXU6z79evXd+7cueMfOnXqtHbt
Whfnj4yMlOcpev7FixcXPcO+fft69OjRsYixY8fm5uaqXEkAKIa6t1H3DsvL
EyEh4v77xcsvK012U40aYts2v657+c62aaP6npq9WrXE2LEiOlqkpmoPrzdz
JjNyS5c2OnnypNnHGereU9Q9dU/dU/dOyLq/Lke4WFuFuo+NjZV53rVr140b
NyYnJ69Zs0Yv/RMnTjg9/549e+RLQ0NDo6Kizpw58/PPP8s/y1N2796tnyE1
NbVbt27ylMjISHmGQ4cOffTRR/Kv8+fP9/hKAoAj6t5G3TtMxvgbb4iaNcVD
DymtTh1Rtaq/1312tqhWTbuqiu+sqbvzTu0XJWJitO9FxMVpv+zADNzevU3O
nz9v9nGGuveUUt3PeF9pbRYoTTHWho/wfO1nK+2e40pTvPR5byvt+ZVKU/lk
VbzoT/orTfErLRDr/tpc4WIqdf/VV1/JG2T16tX2U1atWiVP+e6775yef9as
WfKly5cvt5+ycuVKecqMGTP0v86cOVP+Vf5T2X6GhIQEeUrv3r25fz4AA1H3
Nure2RISxIEDsnqUtm6deOwxv75nvtUqTp8W99wjVq9WfWdNXfv24tNPtbqX
V7igQHuCPGbg8vNDLBaL2ccZ6t5T1D11T91T907Iuv9rnnAxj+te5nbPnj3l
DVL0G7+ZmZmdOnUKDQ11+iiskydPluffsmWL/ZSYmBh5yqeffir/LP8X06NH
D/nqFy5cKPpa+/fvj42N9exKAoBT1L2Nunc2mTwZGeLcOaUdPOjvv3cvYzk1
Vav7X39VfWdNXdeu4pNPxJYtvn8EgDK5rKzmhYWFZh9nqHtPUffUPXVP3Tsh
6/6afOFiHtf96dOn5a3Rt2/fYqf369dPnp6amur4KvpP9keNGpWdnS3/mpeX
Fx4eLk9ZsmSJ/GtKSor+UqvVevjw4ZUrV27YsCEuLs6zqwcALlD3Nuq+hOyV
s1iUlpSkPWa+/9d99erafRUU31lTJ+u+f38xfryYMYMZvx9+aOTOgyErou49
Rd1T99Q9de+ErPurC4SLtR3sYd3Hx8frMV7sdHmKPN3pv3Xz8/O//PJL+dI+
ffp89tln+vcB5B/02D9w4ID+c/xJkyYVfVS9GTNmFBQUeHYlAcAp6t5G3Zs2
/39GPHvdJyb6/sq42JAhok8fLVUmTGDGb9asBsePHzf7OEPde4q6p+6pe+re
CVn3f7kkXMzjuj98+LC8NcaNG1fs9PHjx8vTDx065PgqeXl58p/BHf9swYIF
erzv3LnT/kD6c+bMkX/96aef9Ifd++GHHzy7kgDgFHVvo+5NG3Vv1JKTtSco
7N2bmbLx43m+e+qeuqfuqfvAq/urLMLFSqr7o0ePHilBcnKy7Y+6Dw8PL/aK
+p3t5dkc3+bUqVPli+TNKN94dna2/O+IESPkKfJ0+dLo6Gi97lesWGF/lYMH
D8pTunTpwpPiATAQdW+j7k0bdW/UMjLErFkiIoKZsgULGpb0JEcGou49pVT3
G59UWuepSvv+LaUpfm9BZY/uUtqbC5U2tbPSFD9qKp+sis+IN62T0hS/0gKx
7stZhYu1cVb3FoulY8m++uoreZ7jx4/LP4eFhRV7Xf1WSkxMLHb62bNnO3Xq
JDv9zJkz9hPT0tK6d+8uz5+SkrJv3z79B/d5eXlFX3HYsGHy9Pj4eGNuEQCw
Ufca6t6kUfcGXk+fP7B8GR6PmU/dU/fUPXUfcHUvzb4Sp681Z86c70qwadMm
eYYLFy7IW6Nnz57FnquuR48e8vRij3sv/fbbb06/GzBhwgR5+q5duxITE+Uf
OnfuXOzx9vW7+u/fv1/xdgAAO+reRt2bNr+q++xssXmz2Lr1T5OnLF0q7rrL
9LovLBQ5OcxPl5dH3VP31D11T90HXt2bZ9CgQcV+TK8X+uDBgx3PnJSU5PS7
ASNHjpSnHz58uLCwUP8t+4SEBPtLZenrD7538uRJ894RAMGGurdR96bNf+pe
fmQPHxY33ihuu634KlUSFSqIEydMvHSrVaSlifh4ERfH/HFJSc30hzU2FXXv
KeqeuqfuqXtvi4yMlDdIRESE/tN2+V/9IfHtD4In/68RGxurPyKrfGnv3r3l
S5cvX25/C/oj6cmo13+t/ttvv9V/l9/+IPlr1qyRpwwdOrTY9wQAQAV1b6Pu
TZv/1H1hodi3T9xyixg0qPg//vv21Rrf1J/dX7woBgxQKhRm6qZMqS//kWb2
cYa695TSB5e6p+6pezdR90VduHChb9+++iPny6IfO3as/POAAQPsd8vfv3+/
PKVXr176X2NiYvTf3J80adKyZcumT5/eqVMn+dfNmzfrZ0hLS9Pf4KhRo/77
3/9OmzZN/038ffv2+eY9BFBGUfc26t60+U/dyyuwa5e47z7tt+yL3iVbdvfx
4+Lee82t+9Onta8veSnVqzN/3PPPP7h161azjzPUvaeoe+qeuqfufeDcuXPh
4eF6pOuZrz+ivk6v+969e9tPkZ0+ePBg+wP0DRgwQCZ/0TeYmpo6ceJE+xsc
OHDgrl27vPf+AAgO1L2Nujdt/lb3NWtq95AvLPzfCgpEUpKoVu3KdW+1ioQE
ERWl/ap+qbZpk/ar/VdfLcLDxRdfMH/cvHk8Zj51T91T99Q9de/ExYsXExIS
0tPT3Tx/ZmamPH9GRkZJZ5AvOn78+KlTp4o9wh4AGIK6t1H3ps0P6z4z80+n
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
119/vWLFivbDr/xzixYtIiMjL126ZPalb9u27YUXXtCf715XtWrVrl275uTk
mH3RAAAAMA91DwC+cvLkyZ07dxa9k7zX5ObmHjt2TF76+fPnvX/pAAAAMBx1
DwAAAABAoKPuAQAAAAAIdNQ9AAAAAACBjroHAAAAACDQUfcAAAAAAAQ66h4A
AAAAgEBH3QMAAAAAEOioewAAAAAAAh11DwAAAABAoKPuAQAAAAAIdNQ9AAAA
AACBjroHAAAAACDQUfcAAAAAAAQ66h4AAAAAgEBH3QMAAAAAEOioewAAAAAA
Ah11DwAAAABAoKPuAQAAAAAIdNQ9AAAAAACBjroHAAAAACDQUfcAAAAAAAQ6
6h4AAAAAgEBH3QMAAAAAEOioewAAAAAAAh11DwBwIT4+/j//+c+FCxd8fUX8
kbxx5syZ8+OPP3r2utywvlVQULB8+fJdu3b5+ooAAGAM6h4AyrwCN1y6dMnx
FePi4q666ir5P4iHH37Y+1fb/02dOlXeOLVq1SrtK3LD+oP27dvr//5ZtmyZ
r68LAAAGoO4BoGyLj48Xbhg4cKDj6/73v//VX3r11VdfvHjR+1feMxaLZc2a
NfK/Zl+Qx3Xv5g177ty5nTt3JiYmql1NOFevXj39ozB48GAXZ9u/f7/8KBj4
6XTw4METJ04Y9dYAALCj7gGgbEtISLjxz+yH/aInfvLJJ46vm5+f//rrr1ev
Xn38+PHev+Yemzdv3j/+8Q+n90Ywlsd17+YNO2XKFPn2+/Tpo3AdUaKlS5fW
qVMnJCQkPj7exdkqVaokPwoG/g7FpEmTHn/8caPeGgAAdtQ9AASbv//97/KY
//333/v6ipiioKCgWrVqs2bN8sJleVz3bgoLC6Pufctisei/Q2Fg3V+8ePHm
m2/27OEaAABwgboHgGBjeN3LWjlw4EDRv+7ZsycvL6+k82dmZu7cuTM1NdWo
K1DU5MmT77jjjsLCwpLOcOnSpePHj0dHRycmJlqtVnfepjzbyZMn5ascPny4
6F0CitV9bm7u7t27z549q/gu2HXr1s2Dui/p2tp5cAtI2dnZ8qMsP3AGvoNm
kJ94u3btMuqzS76z+r+R3Kl7eWPKy5U3UVxcnOsbdsSIEbVr1/bCL48AAIIK
dQ8AwcZ13d9+++03OGjTpk2xsx08eLBChQrt27cfMmTItddeK99g9erVz507
N3To0L/97W/yr5UrV/7tt9+KvVZkZGTNmjXLlSun/3+nUqVK48aNM/Au9Bcv
XrzttttGjRrl9KUxMTHt2rW76aab7P/jK1++/JgxYxy/FSCzWr7XK1eulH+e
O3fufffdZ3+Vu+66y342ve4ffPBB+Z62aNHimmuu0c9z7733Ll++vNjbdPOG
lerUqVO1atVbb71Vf4Pyv8Vea/PmzR5c21LdAjL8b7zxxubNm8s/p6SkvPPO
O//3f/+nv8pVV131zTff6Gdr0qSJvGinN3hubq68dPnSTZs2Of1wuLBmzRr5
ijfffLPjiypWrChftGXLFvspDzzwgDwlOzs7KirqmWeeue666/TrKW+HHTt2
FH3dL774wvFDIP3666/FLuXrr7+uUaPGHXfcYf9NFvlVU/RVnn322aLnz8nJ
6devX9Eb9vrrr3/iiSccPw10aWlp8pafPXt2aW8ZAABcoO4BINiUqu71/0G8
8sorxc62a9cuebre9TLz9bPJztV/nV//a+vWrYu+yttvv62fLrvp1VdfbdSo
kX6f5+eee86od+2zzz6TEXr69GnHF+n3crfXd7NmzW655Rb9r6GhocXO/O67
78rTZSnLN6ifp1y5cnfffbcsx6K/Ma3Xvf12qFy5srwFrr76av38c+bMKfo2
3bxhJRmJRc9zxbp389qW6haIi4sTl79jI9P+/vvv188mP9DyvZB/WLt2rX62
yZMny7/eeuutsuWLvYV58+bJF1WtWtWDn1CvWLFCvq78UDq+6C9/+Yt80YYN
G+yn3HbbbfKUjz/+WN5Q8jOqdu3a99xzj36FK1asmJmZaT9nsbrXvxCkvXv3
FruUKVOm6Oexf8fGdd2//vrr+tnkDS4/HP/85z/1G0oKDw93+j727t1bfiGU
9pYBAMAF6h4Agk2p7pkvG8RF3UuyawoKCmbOnKn/VZ5f1tyQIUPkn++88077
+adNmyZPkWk2ffp0+52Wo6Ki9G8FyDI15F1r0qSJDCunL9q0aZO8rBEjRtjv
WJ6Xl/f++++Lyw9cX+xx1fRefuihh+R/a9asKa/zqVOnbJcfDe/48eP2s9nr
Xr6n9p9QJyQkPPDAA+Lyz83l+Uu6qiXdsEW99NJLwo175rt5bUt1C+h1f+21
1+r3tejateuWLVv0e1nIt2n/tYucnBz9QedmzJhR7Fo98cQT8vTRo0e7vvJO
eVD3UuPGjY8ePaqfKD+99RMnT55c0qXI8C+p7u12796tn8fFPfOTk5P188yb
N89+ovwqWLBgwcsvv1zScyJER0fLV3G82wAAAB6j7gEg2BhY91dddZX+g/Kk
pCT51ypVqujdJ+NL/6Gzfubc3Nzrr79enjJmzJhib2fixInydFmCqu+VzSav
ibw+srhLOoNja2dnZ+s/Il+4cGHR0/VelurXr5+enl7SG9Tr/vbbbz937lzR
07dt26a/uotHTjO87q94bW2luQX0ute5/t7LyJEj5Xnq1KlT9MRjx47peZ6S
kuL6yjvlQd2/+OKLxd47GfvC2d0S7Iyq+wMHDujn+eGHH67wjhVhtVrl14u8
9dx/FQAAXKPuASDYGFj39n6XkSj/WrduXf2vMpf0nwjrf42JidH/6tie+jll
oHn+/vxh06ZN8k3JLL3iOY8ePbp06dJx48Z16tRJb9uxY8cWPYPey/KGcv1c
aS4eM/+OO+6QL/r0009Lel3D6/6K17aoK94C9rp3Ucc6/VfIRZG760sDBgwQ
Dr+a4T4P6n7RokXFzqnfLeG1114r6VKMqnupUaNG4vJdU+S7HBkZmZOT4+LM
dvLMb7zxhjvnBADAHdQ9AAQb79f99OnT9f/RXOPA/v8g9cfWmz9/vswrF4+W
f/z48S5dulSuXFk4CAsLK3pOvZffe+8915foou713OvRo0dJr2t43V/x2tpK
cwvY6/7EiRNXfLP6+/L888/rfy0oKLj11lvlKevXr7/i6zplSN3r1+rll18u
6VIMrHv5ptq1a6c/joS4/JB6rVq1WrhwoevPavnp0aRJExdnAACgVKh7AAg2
3q97/ZfupY4l6Nq1q/r79fnnn7u4D8CmTZtuvvlmcfl+Ap06dVq6dOnBgwfl
1dZ/Pdxp3b///vuuL9FF3depU0e+aNiwYSW9ruF1f8VrW6pbwF73SUlJrt+s
7fLvZcgSL1eu3OHDh+Vff/jhB3H5Ievdf7q9Ygysexe3sIF1r5M32oQJE5o1
a6ZfSXH5YQm3bdtW0vlHjRpVu3btK75ZAADcRN0DQLDxft1HRUXp/6M5efKk
Qe+EE7Nnz77uuutKeum9994rr8Abb7whr2rR082o+/z8fP1pAefPn1/S67pT
96+99po8zxW/9eHmtS3VLVCqupc6dOhgv6ovv/yycPlbCVe0atUq/dLtD99n
5+W6379/v36eM2fOuH/909PTIyIi9CtWoUKFYje4Xf/+/Rs2bOj+mwUAwDXq
HgCCjffrPisrS3+29Cv+EreKNWvWyIso+gxodvqD/knFfjP90qVL9erVM7zu
v/rqK/3ifvvtt5Je1526lzeXcOMZA925tqW9BUpb9/I9LVeuXPny5X///Xf5
sb722mvT0tLceUWnfv31V/3Siz2k/IwZM/TTvVb3586d08+zY8cOF1fY6QPj
y1fRX3f79u1OX6t9+/atWrVy8WYBACgV6h4Ago33614aN26c/v+akSNHFv2B
7JEjR+RFuPkoZK4dP35cvn37M9MVdfbsWf3SZ8+ebT9x3759jz76qH66St3L
qv3www/tDxi4du1a/Wn+XD9gmjt1//XXX4vLT0wQFRVlP7GgoKDYz4Ldubal
vQVKW/e2P35kX7NmTflfeZXcfC2nZHfLTx5x+THx9EfCl+/yqFGj7P9i8Vrd
S1WqVBGXf3+/6Oft+fPn7X+eNm1ahQoV5Gd4sU/jYcOG6W8/NTXV6VuWN/6A
AQNcXDQAAKVC3QNAsPFJ3VsslpYtW+r/u6lcufKLL7741ltv1atXT38gsi++
+MKI98xWq1at/v37O31RixYt9BJ/4okn2rRpoz+N+1//+tf77rtPse71+4pf
f/31TZs2lbeAfLPi8u+2u348OnfqXtainq7yIp588sm2bds+88wz8sNX7GnU
3Ly2pboFPKj77du32/9F8fPPP7v5WiX597//rb+p22+/vWHDhvJ6ist3Y9Dv
aeDNuv/000/1s1WtWvX1y+rUqfO3v/3NHvsdOnTQP+jly5evX79+u3btunTp
0qRJE/21PvjgA6dvNiUlRb7W5s2b3b1FAAC4EuoeAIJNhQoV5DF/8eLF7pxZ
f2ozWTTFTtf7vVjdy/Iq+tKida+bO3eu/tvfdtWqVZNpb8jP7m2Xf5G5pAdz
O3PmTKtWreyXKxv51VdfPXbs2GeffebYtu3bt5cndu7c2fXF6c8FMHjw4K+/
/rpSpUr6W77qqqtatmxZ0o9r7Uq6YYs5fPiw/cfruptuumnUqFEeXNtS3QL6
HSFc/NzZKf0p5u3f5FGRlpYmr5792lapUkXeYoWFha1btxZ/voeG/rP1kure
xS1sr/sDBw64uCYWi2XcuHH6txd0ssrlByUhIcF+nn379v3rX//Sr4ld5cqV
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
bk3HY5MmTeQp1CCclAlpIDNh99TKMrNM+fKQr6+v4at8ZCEvLy/+X2vZPZfu
gQMHylPk/qIkQc3+I3v27CzzXki9t1Nrs3DhwnJtVrJkyZEjR+oNZ8ehpmyn
Tp3kMeLeffddWizVzHp1tUUNUf6tGp35lZi3e4U1towV7d6i3SDD9K8GX/6P
P/6oO1H59lKBOrvXK+fdu3d52QyfKWlo9yoaAxmZN27wohLTpk1Tsaa6+4OK
twPHxIzdL1y4kGV2+eBnHfn9IEQvE+ie+H2l3ZO08ikdOnRgJm74Mm/3YWFh
ZtaLnzQwWk/SAlnm6Cty95WYmJiiRYvSxLx589KxOWjQID4GS4kSJZ4/f673
doUFyMi86SB37tws84Qb/UTu2rWLvmSS99q1azPYPQCui3K7t6heTUxMbN++
PW8T1qpVi5oH1GYIDw+X728yLImlds+r/QoVKvCXDO1eYbWWYbr94+PjwzIv
e+FZnwA4Anx4H6Oj6vEKxKjdy33djSJ7zdmzZw1f5Q/jGD58OP+vteyeP+lp
zJgx8hR+LdUoWbNmNWzgJScn79mzh94luzC1vqgeNvqkP2oNzpo1q0aNGryQ
LPM68qlTp+QZLGqI8ltEdc+xKMf8ffcKa2wZK9q9RbtBxqus2XD5Fm0vixCx
e7mct27d4qXy8/PTm9PQ7i1qDMgcOHBAHl2fDmQVa6p7UKh4O3BMTNk9HTL8
nBhVXHwKNSP5nEoeVanc7qkeZjoyq4uI3fOxm6imVfJSUlISH9lPFzo8jZ4D
VG73/Ats3bq13u1dsHsAXBvldm9Rvbpu3TqW+WQNeYAmzvHjx039NAcFBfGX
zDwPWtfuHz9+XL9+fXlEEUO7V1itZZhu/0ybNo1l3of4yvUFANgAuR++4QPd
VNt9Wloav4nYcHgiMi+uTvJL//zzDy+A4Rk/5XZPrVZ+UX7jxo3yFD522fTp
0y/ocO7cOd73adOmTabKn56eTrO1aNGCF+zXX381s7KxsbGLFi3iNR7Vz3Ld
aFFD9LfffqMp+fPnV/GAezN2r7zGluFrbdQlLS2ARbtBhuV2L2PR9lKCVeye
9mfewcNwiAZDu7eoMcChn2Y+Aj8fh5w0nw4lhe+V0RUfS98LHBajdk+HCT+X
S8iPGX3+/DnvrK7kfnPlds/bqwT9iOjOGR0dzZ92oc7uDx06ZPTXikSe13W6
z5jjA1YMGDCAGsDUxKVVNvO4TIUFkEcY0LsxjSo0fo8b7B4AV0W53VtUr/Lr
UIbPFOadPI3+NFNFyl8y+hBejq7d66Fn98qrtQwT7R+qgT/77DNmbMxqAIBd
oOOXWmt0VFaqVEnvcrZquye+/fZbljnynt50PvKGbrPz8uXLfAr9oTvnqlWr
+HQldi9f+gwODuZT+EkDozcyN2nShF5q1qyZPMXUWGR8fHu96+9GZ5aHxZN7
oVvUEJVvItAdcV3G/NhxpuTXohpbhn6MmMEj2Mxjxr6V7wYZlti9RdtLBVax
+4z/zq7o3VNAjBgxgv2v3VvUGMjINDV+XbJ27dr0t6enJ8t8OsMrrzzqwXSw
6I3AkdGze6oDT5482ahRIz5Rt+rL+O+aC8sc0lP3FOv169dpl9YdV0S53dMR
yp8TWrZsWfl5zVTD82eSMrV2T7s6PzOZP39+uVlLn8Wf/EJHkDysX8Z/7W29
B3OYQmEBoqKi+Gy6z+a4dOkSfx4Wg90D4LpY9Lx75fUq//kuVaqU3LBJTk6m
d8n35RktDB+cmVoXugvXveddud0rr9YydJ53v2/fPj6FKre2bduyzG75es14
AIAd+euvv/ghTC0xuXVElc+QIUOYWrsnJed9hj08POShxffv388Htfv555/l
OallyB9Y36JFCz4n1RV83DmOod3Tknv16iXXY+TRfLG6vsw7xtetW9ewbFwt
33nnHV5F079ffPFFnTp1/P39dWeLjIzki+3Tp488cfny5e+99x7V23qD6Y0d
O5aX9tGjR3yKRQ1RmpmclGXeMrBgwQJ5oGmqtydNmkTF0B1bXg9Tcm1RjS2z
YsUKlnn/l+7d4vRbo3f1X0kBMizZDTIUW7NF20sd1rJ7fvWQvgHapnxKSkrK
qFGj+Pev9+wY5Y0BeeacOXPybsaJiYl8HINq1arRRyhfU6aD8ncBB0e2+w8+
+IDfm8OhXXHAgAF6+xLVNvyEJ5EvX76mTZvSgVmhQgXe80TedTMssXtizZo1
/NjPli1b9erV+TnkLFmy8INUnd1nZN7wwm+fp5YkFbJ+/fp8gcTMmTN155T7
D9CXUKNGje8zobXr1KkTzal3zlN5Ab777jv+TVL1Tk364sWL09+0XsWKFWOw
ewBcF4vsXnm9euzYMT6Rmhbt27evV68eb4HwB0+b+mnm4zazzGF1W2ZSqlQp
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
27kPsHsAAAAAAABchrS0tDJlylDbvnTp0s+ePdN7NSYmxvzb09PTHzx4cP78
+WvXrqWmphqdJz4+/uLFizSbdUqsw8uXL2nJkZGRRl/dv39/+fLlDacvWbKk
efPmulOaNm1K38DPP/+sNyd9OdbqmZ+YmEhFjYqKMv+u5OTkq1evBgcH0x/K
P+vFixdXrlwhjzaz/NDQ0MDAQCqG8sUqwfwmyLBkK6hDi22nGjqCaCs8evTI
xp+rGtg9AAAAAAAALsOOHTt4237Xrl1K5vf09MyZM+e+ffvo7w0bNhQrVkz3
Pn29mY8cOVKmTBk+fBmRJ0+eMWPGkA/qznPgwAFaYO7cuQ0/K1euXPTSiRMn
5CmrV6+mKV5eXkFBQXXr1s2SJQtf8meffbZnzx55tpMnT65fv37IkCEFChRY
b0CHDh3IN+kPKj+X6EaNGtFCatWqZX7dLSoqt3tafVL17777Tr7xoXDhwnv3
7jVcQnR0dO/evd966y35fvCcOnTs2FGe8/79+++//37NmjXp74cPH9LqyO+i
r3rlypW6i42Li6NN9t5778mLrVq1Khmo1psgw/KtoA6F2474+OOPcxrQrl07
wznj4+MN59Tl2rVrem/Zvn178eLFX3vtNfn2lmnTppk63+U4wO4BAAAAAABw
GcaOHcuVU+EQ8aSZND8Z2bx587gUkNEULFgwa9as1apV051z0qRJfIZ33333
m2++oXn4f7/66qunT5/Ks/3999/8jmnDz3rjjTfopSNHjshTuDLny5ePyzL9
QfrMhwigYpAq8tl+/fXXhg0blitXjj66oQHFihXLkycP/5s/EI3m52Xr06eP
btn0UFFUgg9UaKqonKSkpEqVKtFL2bNn79atW9euXbNly8bfXiwT3dEPbt++
TdOLFClCal+iRAk+G/k72Sv9cfDgQXnOsLAw+WsvWrRolSpVeGGotMuXL9d0
E6jYCqYglZ46daqpVxVuuwwDu+fv+umnnwznTExMJD3XM3r5FAoVW6+PxC+/
/CJ/yc2bN69atSo/o/X999+bKY8jALsHAAAAAADAZWjTpg017Bs3bqxwfm73
ZcuWpX+LFy/u7e3N+z+Tn4aGhsqznTt3jgtO+/btX7x4wSdu27aNRI8m9uzZ
U55TnTIXKFDg2LFjfOLdu3dLlizJMjsPUDHkmZX3CacS8iUQOXLkGDBgQEhI
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
7H+LPe67t30miCK0700dLRTBG+c/vy2UVtvVR/C8xG9eQlniIZSWO4Qi8r1R
RHbWuoeZSFZ3E4rgkQa7BwAAFwB274bA7p0xt2+zf/6RrqpbscO80fTvL6n9
3LnWHFWPSv7FF+yrr1jZstJ1fEdLy5Zlz549q/VxB7tXC+wedg+7h90DAABQ
BOzeDYHdO2P69WPNmpGHskGDtE3z5tI98qT5cXFWS1SU1AF++3a2Y4cj5uDB
bx49eqT1cQe7VwvsHnYPu4fdAwAAUATs3g2B3ds3aWksMVHqaR8fb0Fq15Yu
fNerxzw8tM1PP7HGjdmSJdLwetZKbKx0W4HdH8xnKlevfvvs2TOtjzvYvVpg
97B72D3sHgAAgCJg924I7N6+iYhgixZJHeAHDrTgknqJEqxjR+bjw65f1zbb
t7O+fVnx4qxuXWumVi1WrZqDpkOHcuiZ76p2P3uoUMb8KpT3ngpFZFy7PsuE
MmSOUH4dIxRBPRcczFBkZxUcQ1JwVD3BIw12DwAALgDs3lq8fPkyNjY22hkI
Cto9aRLs3m65eZP16sV++EG6St6smdIUKSI5flAQS03VNoGBjHaPAgVYoULu
kgYNyhw/flzrKgJ2rxbYPewedg+7BwAAoAjYvVVITU319/enH8dRo0Z5OTye
nr80bCiNi253z3XP+Pqy0qWloel37rQgVatKI8+fP88ePdI29++zf/9lp0+7
UQICvn369KnWtQTsXi2we9g97B52DwAAQBGwe6uQnJy8d+/OgQO7eHq269+/
vYOnS5d6deqw4cPt77kulvR09uyZdIO5+WzfLl2IP3ZM8sozZ5SmXj2pM//u
3ba4D93Pj50960a5fBl277J2v6q7UEZOF8rHD4UiYrittwllYX+hjJghlMFz
hWLH++5/+YOJRPCB9YJHGuweAABcANi9VYiPf/bDD8XGjcs5d272BQscPZMm
ZW3VCtfurZ/4eLZyJfvsM1a4MPv8c5MpUECy+/BwlpAgDa+nMGPHskaNWMmS
rEIFW6R8eTdKq1Z4Ih7sHnYPu4fdw+4BAMDpgd1bhefPn1av/t7UqWzNGvbH
H46eBQuk8dlGjrS/DrtY4uLYjBksd+5X2H3+/JLdR0RIzv7ypdLMpSZrK8nu
y5RBrJwWLcr6+vpqXUvA7tUCu4fdw+5h9wAAABQBu7cKZPd16763e7f0XO+k
JEfP7dts2jSMqmf9REezPn3YwoXs4UPpb1Oh/eTjj9nJk+zcOQty4gQ7coQd
PIhYP76+1aKjo7WuJWD3aoHdw+5h97B7AAAAioDdWwVu93//Ld12bXfHfGXC
whieiPfKJCezq1fZ5cvsyhWlOXWKtW3LVq2SutybGZSeZvvqK6mbx7p1bP16
xP7Zs6dqeHi41rUE7F4tQnY/abxQapwUSpXzQhEZVa/3cqGMnyQUwVH16h0S
yowRQhHZWSv7MZF4/SYUwSMNdg8AAC4A7N4qwO5dL1FRrEMH6aF1JOwK06IF
K1dOsvukJHNLvnmTde/O6tRh332HOES6dSvn5+endS0Bu1cL7B52D7uH3QMA
AFAE7N4qwO5dL1evsjZtWOvWrGdPpenUiVWu/Gq7f/CAzZnD+vZlHh42Srt2
0j37iKkMHlwhMDBQ61oCdq8W2D3sHnYPuwcAAKAI2L1VgN27XpYsYT16sOnT
2Z49SrNxI/vhh1fbve1z4ADbvFkqHmI0e/dWjYiI0LqWgN2rRcjusz8Xyp8/
CaXdJqHMG6Q+4yYLZdoooSwYIJSe3kJZ3U0oIjur4Bb37ikUwSMNdg8AAC4A
7N4qwO5dL2T3/fpJd8dfv640vr6sZUvpu6U//PwcJXv2SDcCjBghpEiunSVL
Kt+6dUvrWgJ2rxbYPewedg+7BwAAoAjYvVWA3bteyO6HDmX791vwlshI9vPP
bMwYadj8xYsdJT17suzZWd26Uv98xGiGD69w+fJlrWsJ2L1aYPewe9g97B4A
AIAiYPdWAXbvCImPlx429/vvUi908XTrJl27/+cfCwrw/DlbuZINHmz/i9G6
admSZcsm/TtgAGI806ZVunbtmta1BOxeLbB72D3sHnYPAABAEbB7qwC7d4RE
RrJevVjt2qxZMyukbFnpvvt9+ywoQGoqCwmRHnlvs+HylOS779g770id83/9
FTGeFSuq3L59W+tawm3tvoUPE4mg3dc8IRTBx75XOyMUkQfWH6wvlH6LhNJ5
rVDabBXKhIliEUBwxQXHAxw6WyiwewAAcAFg91YBdu8I2bSJ9e8vXXBftswK
aduWeXpadu2ekpAgPfDOoXLpknSLwciRbNw4xHgWLaocEhKidS0Bu4fdw+5h
97B7AAAAmgK7twqwe0fIvHlSr3iStb/+skJ695b6bFtq969Maqo0on5Cgu3y
4gXZKxs7lnl5IcYzf37lGzduaF1LwO5h97B72D3sHgAAgKbA7q0C7N4RQnY/
Zow0Gl5UlBUyYwYbMsT6dh8aKg1iTwufOdN2GTRI6qLfty9iPFOmVAoODta6
lnBbuy92g4lE0O5FHhlP6btUKD/uFsqwWepztqpQ+iwVStffhSI4aICg5IrY
veDpoC1thfLrGKHA7gEAwAWA3VsF2L3RpKWxuDhprDnbZPp06cL9779bp/BL
l0rX7nftkq59WzF+fmzBAmkc+969EUfJ5Mmwe9g97B52D7uH3QMAgNMDu7cK
sHvDJCezGzdYp07SVWNPT1ukRg3ppntr2f2GDaxUKfbDD2z8eGvm559ZgwbS
iYg5cxBHydq1VUJDQ7WuJWD3sHvYPewedg8AAEBTYPdWAXZvmMRE5usrjTzf
qBFr0sQW+eorabx6a9n9nj2sRAlWrRrr3NmaqVhRWizZ/bx5iKNkw4av7969
q3UtAbuH3cPuYfewewAAAJoCu7cKsHvDPH7MVq1irVuzHTusM8zdK9OjBxs+
3Gp2Hx/PNm5kq1ezNWusmRYtWN68rHFj9tNPiKNkwIAKAQEBWtcSbmv3Dfcz
kQja/S9/CEXw+ePf/yOU0VPVZ3sroQycL5RtrYXiuVgogkMCHqqnPoID+ol8
NGVtZ6HA7gEAwAWA3VsF2L1hHj6UBrjr0IGdPs38/W2RoUOllbKW3VNOnJCe
d793rzXj4SH1MWjWjLVsiThKBg+uEBgYqHUtAbuH3cPuYfewewAAAJoCu7cK
sHujdr90qdRVPjaWvXxpi8yeLd3YbkW754+Ts27u3GHHj7Nt29j27Yij5ODB
bx49eqR1LQG7h93D7mH3sHsAAACaAru3CrB7o3a/bJn0uDFyZNus14oV0pXx
0aPZ+fOOm6NHpVsVlixBHCibN399//59rWsJt7X7/guZSATtfqJYNrUTytgp
QvFpoT6H6wpF0BNX9BKK4KcLPjV+Rwv1mTNEKEGlhSJ4Sgd2DwAALgDs3irA
7h3B7vftY+XLsw8+kP512JQrJ400WLo04kBp3rzsmTNntK4lYPewe9g97B52
7zhERETs27dv48aNe/bsCQsLe+X8ISEhNP+mTZsOHjwYGxtrOMPNmzf3799P
C/z777+vXr2qQZEBAODVwO6tAuzeEez+/HnWrp30XLzmzRHEggwciPvuYfew
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
Rd0LU1PlfHfbtunrunUUGipn1dP2lIAhQ+j776lOHfGXIfXpY0rHjq0YFxen
9ziDukfdo+5R96h7DRF1r3ypQp8OqHsAgOVA3dtQ98VX17oXf5D/7W/UqJGc
Rt5AX32VNm92Ud27RrF779snf9P//GeN/dOfZCMfPEiJiab0+vWajx490nuc
sWzd9xlPHJl1//1iI/1hEcvlzdQb1ZzlmAEsme/b9G4s20SyPPWBev1HsdzU
gOU0b5ZmrPs9NUhB1D0AwIKg7m0a1f1nn8ljo6mp8t8eb3q6PFCrU92fOiUP
3M+YQRERRvree647du8a8/Lkp087d8rL5DVUPGF4OFWvTnXr0pdfmtIePcod
O3ZM73EGdY+6R92j7lH3GiLqXnmSQ9Q9AMCCoO5tGtV9rVq0dCmdPWv8gUgX
eO6cnH194kRd6j4jg06fpk2bDPajj9y67nNzKSfHLczKko1frhy9/Ta9844p
bdy47J49e/QeZ1D3qHvUPeoeda8hou6VL1XwQ90DAKwH6t6mRd1nZlLHjvTx
x/L8/Hr1PN+6demtt2jcOF3qPjubHjygmzcNtnp12rrVTes+L0+u2KlTcjo+
wz1+nHbtolmz5MSAM2aY0qioKsnJyXqPM6h71D3qHnWPutcQUfc7PyUFUfcA
AAuCurdpUfcPH8rbjb3xBr3yCr32miV84QU5RZsede8m1qghr7tPTqZff3U7
xY568iRt3y7PLoB89+6tfvPmTb3HGcvW/aDRxJFZ98x57UYPYtlxDstV36qX
c9N24cTeLFsuZTmnI8veE1lyPlTpF8ryaHmW6xuzNGPd7/iMFETdAwAsCOre
pkXd5+XJ+4IlJRl/zrwHnJnvJpYpIw9G//ST7lPZF9etW2nlSvk5Uv369NVX
UAN9fHDdPeoedY+6R92br+5japGCfh1R9wAAy4G6t2lR91ZT1znz3cSqVeXJ
CXPn0qJFbue0afIX9vPPqWFDqIHe3uWOHj2q9ziDukfdo+5R96h7DRF1H12b
FETdAwAsCOrehrovvlao++nTqW1batlS3szdrWzVipo0kb+ww4bR1KlQA5cs
qZKUlKT3OGPZujf2unvmJdjt57GsHc1yY0P1rvuS5QQ/ls2Ws5zci2VQMMu+
49T741CWW79g+fNnLM1Y99vrkIKoewCABUHd21D3xdcKdb9uHXXvLidL7NTJ
7fzhB3r+eRo92vj56DxDzKqHukfdo+5R92as+211SUHUPQDAgqDubaj74muF
un/wgNLTKS3NHU1MJH9/8pZTHEMNHDq0QmxsrN7jDOoedY+6R92j7jVE1P2W
eqRgb9Q9AMB6oO5tqPvia4W6N/wdvn2brlxx4OXLdOEChYTITWB4F3uGqHvU
PeoedY+6N2Pdb65PCqLuAQAWBHVvQ92rak/Uva4mJNDPP8uEd2ZwsCyXoCCo
gVOnVkpISNB7nLFs3bdeSByZdc+c0893EsueU1iO7a9e5fuAF+q4vizLnGE5
MIQlM3J/ZLD4ezLQBW1ZmrHuNzUgBVH3AAALgrq3oe6LL+r+aXNzKTtbM9ev
p7AwGjyYhg6FuhsejrpH3aPuUfeoe/PVvfIZLL07oe4BAJYDdW9D3Rdf1H0B
Rdrbr9PXytq16Y03yMvL+OPaVnDq1Erx8fF6jzOoe9Q96h51j7rXEFH3yvf4
Q90DACwI6t6Gui++qPsCnjhBs2bRgAHcEsn3rbfogw9o8WLascNkrl9PoaHU
qxf5+prGkJCKcXFxeo8zlq17ZnEwf5WCg1gy75zuP4rl+D7qPVSJ5fBAlm8m
sGTWPfO275y6X9GUOE7yZTm3A0sz1r3y9BGoe63oCjwRo3croBeoexvqvvii
7gu4cKE82v4f/0H/+Ic2Pvssff45Xb9u/EsrrqmpFBFB7dpR+/bUoYM5DAys
cObMGb3Hma6oe9Q96h51j7rXDhH3P31FCvqi7jXCdPsGKBRsUw8GdW9D3Rdf
1H0Bw8NlzLZoQWPHauO771KZMjRzJi1bZjKnTKGWLUUva3YagwvEdfeoe9Q9
6h51b7q/9kXdr/2aFETda4Xp9g1QKNimHgzq3oa6L76o+wKOHi07YsUKzZ7w
88/phReocWNq0sRkfvIJvfQSzZhBc+aYxtWrqyYnJ+s9zqDuUfeoe9Q96l5D
RN2v/oYURN1rhen2DVAo2KYeDOrehrovvuKNGjmSvvySAgJo2DBIDRpQ9+5a
1v3UqST2SXMdAbfbvj0995z88Mfwq+lx3b2bOGwIcWTukJxAFg4eyTJkIMt+
oeo9WJnl0B9Zvn+apfc0ljG1WHLqPqIrcWR+OLC8GUvT/bUv6n7Vt6Sgb2fU
vTY8uW8Y/v8pkKPDbQo8DNS9DXVffLOz5YRvJUrQ3/8uDzFDYatWWtZ9airF
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
aPcAkL+dOnVK2GH8+PE57/vjjz/qtz744IM3btxw/co7Jj09fcuWLfJPZy/I
4XZv54ZNTEzct2/fmTNn1FYTuWvQoIH+KkyYMMHGbIcOHZKvgoFvpyNHjvz5
559GPRoAABa0ewDI32JjYx/5X5bdftaJ06dPz3nflJSU7t27V69efdq0aa5f
c4ctW7bsySefzPVoBGM53O7t3LAhISHy8d99912FdYRV69at8/Lyat269alT
p2zMVrZsWfkqGHgOxWeffda8eXOjHg0AAAvaPQAUNH//+9/lPv+f//ynu1fE
KVJTU6tVq/btt9+6YFkOt3s7+fv70+7dKz09XT+HwsB2f+PGjTJlyjg2XAMA
ADbQ7gGgoDG83cu2cvjw4aw/7t+///bt29bmv3r16r59+y5cuGDUCmQ1d+7c
ypUr37lzx9oMaWlpp0+fDg8PP3PmTEZGhj2PKWeLi4uTd4mKisp6SEC2dp+c
nBwZGfnXX38pPgWL4cOHO9Dura2thQNbQLp586Z8leULZ+ATdAb5xouIiDDq
3SWfrP5/JHvavdyYcrlyE8XExNjesFOmTKlTp44LTh4BABQotHsAKGhst/sK
FSo8nMObb76ZbbYjR46ULFmyX79+H3zwQZEiReQDVq9ePTExceLEicWKFZM/
VqxY8ejRo9nutWbNmqeeesrDw0P/d6ds2bJBQUEGHkJ/48aN8uXLT506Nddb
9+7d6+vrW7p0acs/fCVKlAgMDMz5qwBZq+Wz3rx5s/z70qVLa9asabnL448/
bplNb/f16tWTz7Rt27aFCxfW56laterGjRuzPaadG1by8vLy9PQsV66c/oDy
z2z32rFjhwNrm6ctIIv/I4880qpVK/n3+Pj4Pn36/O1vf9PvUqhQoa+//lqf
zdvbWy461w2enJwsly5v3b59e64vhw1btmyRdyxTpkzOm0qVKiVvCg0NtUyp
Xbu2nHLz5s2wsLAXX3yxaNGi+nrK7fDbb79lve+cOXNyvgTSwYMHsy1lwYIF
NWrUqFy5suVMFvmpyXqX9u3bZ53/1q1b77//ftYNW7x48TZt2uR8G+guXbok
t/zixYvzumUAALCBdg8ABU2e2r3+D0SXLl2yzRYRESGn671e1nx9Ntlz9dP5
9R979OiR9S69e/fWp8ve1LVr12bNmunHPL/88stGPbXZs2fLEnrx4sWcN+lH
uVvad8uWLR999FH9xxEjRmSbuW/fvnK6bMryAfV5PDw8nnjiCdkcs54xrbd7
y3aoWLGi3AIPPvigPv+SJUuyPqadG1aSJTHrPPds93aubZ62QExMjMj8jY2s
9k8//bQ+m3yh5bOQf9m6das+29y5c+WP5cqVk10+2yMsW7ZM3uTp6enAN9Sb
Nm2S95UvZc6bHnjgAXnTtm3bLFPKly8vp3z00UdyQ8l3VJ06dapUqaKvcKlS
pa5evWqZM1u71z8I0oEDB7ItJSQkRJ/H8hsb2+2+e/fu+mxyg8uX46WXXtI3
lPTpp5/m+hzHjBkjPwh53TIAANhAuweAgiZPR+bLDmKj3Uuy16Smpi5atEj/
Uc4v29wHH3wg//7YY49Z5p8/f76cIqvZV199ZTloOSwsTP9VgGymhjw1b29v
WaxyvWn79u1yWVOmTLEcWH779u0BAwaIzIHrs42rpvfl+vXryz+feuopuc7n
z5+/mzka3unTpy2zWdq9fKaWb6hjY2Nr164tMr83l/NbW1VrGzarV199Vdhx
ZL6da5unLaC3+yJFiujHWvj5+YWGhupHWcjHtJx2cevWLX3QuYULF2ZbqzZt
2sjpH3/8se2Vz5UD7V567rnnTpw4oU+Ub2994ty5c60tRRZ/a+3eIjIyUp/H
xpH5586d0+dZtmyZZaL8FKxYsaJz587WrokQHh4u75LzsAEAABxGuweAgsbA
dl+oUCH9i/KzZ8/KHytVqqT3Plm+9C+d9ZmTk5OLFy8upwQGBmZ7nJkzZ8rp
sgmqPqu7d+WayPWRjdvaDDm79s2bN/WvyFeuXJl1ut6XpcaNGyclJVl7QL3d
V6hQITExMev0Xbt26Xe3MXKa4e3+nmt7Ny9bQG/3Otu/ewkICJDzeHl5ZZ0Y
HR2t1/P4+HjbK58rB9p9p06dsj07WfZFboclWBjV7g8fPqzPs3bt2ns8sSwy
MjLk50VuPfvvAgCAbbR7AChoDGz3lv4uS6L8sW7duvqPsi7p3wjrP+7du1f/
MWf31OeUBc3x5/Mf27dvlw8la+k95zxx4sS6deuCgoKGDBmid9tPPvkk6wx6
X5Ybyva10myMmV+5cmV506xZs6zd1/B2f8+1zeqeW8DS7m20Y51+CrnIcri+
NG7cOJHj1Az7OdDuV61alW1O/bCEbt26WVuKUe1eatasmcg8NEU+5TVr1ty6
dcvGzBZy5p49e9ozJwAA9qDdA0BB4/p2/9VXX+n/0BTOwfJvkPrYesuXL5f1
ysZo+adPnx42bFjFihVFDv7+/lnn1PvyW2+9ZXuJNtq9XvdGjhxp7b6Gt/t7
ru3dvGwBS7v/888/7/mw+nPp0KGD/mNqamq5cuXklJ9//vme982VIe1eX6vO
nTtbW4qB7V4+lK+vrz6OhMgcUs/Hx2flypW239Xy7eHt7W1jBgAA8oR2DwAF
jevbvX7SvTTYCj8/P/Xn9fnnn9s4BmD79u1lypQRmccJDBkyZN26dUeOHJGr
rZ8enmu7HzBggO0l2mj3Xl5e8qZJkyZZu6/h7f6ea5unLWBp92fPnrX9sHcz
z8uQTdzDwyMqKkr+uHbtWpE5ZL39l9vLxsB2b2MLG9judXKjzZgxo2XLlvpK
isxhCXft2mVt/qlTp9apU+eeDwsAgJ1o9wBQ0Li+3YeFhen/0MTFxRn0JHKx
ePHiokWLWru1atWqcgV69uwpVzXrdGe0+5SUFP2ygMuXL7d2X3vafbdu3eQ8
9/zVh51rm6ctkKd2L/Xv39+yqp07dxY2z0q4p3/961/60i3D91m4uN0fOnRI
nychIcH+9U9KSgoODtZXrGTJktk2uMXYsWObNm1q/8MCAGAb7R4AChrXt/vr
16/rV0u/50ncKrZs2SIXkfUKaBb6oH9StjPT09LSGjRoYHi7//LLL/XFHT16
1Np97Wn3cnMJO64YaM/a5nUL5LXdy2fq4eFRokSJP/74Q77WRYoUuXTpkj13
zNXBgwf1pWcbUn7hwoX6dJe1+8TERH2e3377zcYK5zowvryLft89e/bkeq9+
/fr5+PjYeFgAAPKEdg8ABY3r270UFBSk/1sTEBCQ9QvZ48ePy0XYOQqZbadP
n5aPb7kyXVZ//fWXvvTFixdbJv7+++8NGzbUp6u0e9lqBw0aZBkwcOvWrfpl
/mwPmGZPu1+wYIHIvDBBWFiYZWJqamq274LtWdu8boG8tvu7//nK/qmnnpJ/
ylWy8165kr1bvnlE5ph4+kj48ilPnTrV8j8Wl7V7qVKlSiLz/P2s79vLly9b
/j5//vySJUvKd3i2t/GkSZP0x79w4UKujyw3/rhx42wsGgCAPKHdA0BB45Z2
n56e3rFjR/2fm4oVK3bq1OmNN95o0KCBPhDZnDlzjHhmd2vVqjV27Nhcb2rb
tq3exNu0afPmm2/ql3F/6KGHatasqdju9WPFixcv3qJFC7kF5MOKzHPbbY9H
Z0+7l21Rr65yEc8//3yvXr1efPFF+fJlu4yanWubpy3gQLvfs2eP5X8Uu3fv
tvNe1rz99tv6Q1WoUKFp06ZyPUXmYQz6kQaubPezZs3SZ/P09OyeycvLq1ix
Ypay379/f/1FL1GiROPGjX19fYcNG+bt7a3fa+DAgbk+bHx8vLzXjh077N0i
AADcC+0eAAqakiVLyn3+999/b8/M+qXNZKPJNl3v79navWxeWW/N2u51S5cu
1c/+tqhWrZqs9oZ8d38380Rma4O5JSQk+Pj4WJYrO3LXrl2jo6Nnz56ds9v2
69dPThw6dKjtxenXApgwYcKCBQvKli2rP3KhQoU6duxo7etaC2sbNpuoqCjL
1+u60qVLT5061YG1zdMW0A+EsPG9c670S8xbfsmj4tKlS3L1LGtbqVIlucXu
3LnTo0cP8b9HaOjfrVtr9za2sKXdHz582MaapKenBwUF6b9e0MlWLl+U2NhY
yzy///77a6+9pq+JRcWKFQMDA60Nmy/fM6VKlbJxiQcAAPKKdg8AcLGkpKTI
yMjw8PBcz5FXIQtX4cKFN27caG2G+Pj40NBQ2cVkZTN20RkZGceOHYuIiLh+
/bqxjyydO3du9+7dO3fujImJUVxz520BWWNr164t/zsREhJi1GMmJCTIZ21j
+AKXSUlJkW9auTIHDhywnIWRk/7eDgsLO3v2rI0tLN8ttWrVmjhxonNWFgBQ
QNHuAQD5ybBhw1q3bu3utSiIPvnkE/l/iTJlyuQ6xByy2rBhQ8mSJW38lgAA
AAfQ7gEA+UlcXFyRIkX27t3r7hUpENLT0+/cuSO3+YwZM/Rj16dNm+bulTKB
5s2bZzsVAgAAdbR7AEA+M2rUKNvj1cMoW7dulaVeH1NOZA4sn+ugB8hq165d
pUqVMvy0FAAAaPcAgHzm4sWLCxYscPdaFAhyOz/yyCNFihRp0KBBcHCw4efy
50vh4eFbtmxx91oAAPIh2j0AAFDB9/UAANwPaPcAAAAAAJgd7R4AAAAAALOj
3QMAAAAAYHa0ewAAAAAAzE4AAAAAAAAAAAAAAID7gLuPIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAwJ3+Py7mUfU=
    "], {{0, 3048.}, {677., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{677., 3048.},
  PlotRange->{{0, 677.}, {0, 3048.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[287]=",
 CellID->664801128]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Annotation and Enrichment", "Section",
 CellID->2035743524],

Cell["\<\
Having carried out the classification and clustering of data base on its \
temporal pattern, we would like to perform annotation of these data for gene \
ontology (GO) and pathways from KEGG: Kyoto Encyclopedia of Genes and Genomes.\
\>", "Text",
 CellID->1722961908],

Cell[CellGroupData[{

Cell["Gene Ontology Analysis", "Subsection",
 CellID->2013711891],

Cell[TextData[{
 "MathIOmica provides a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function using annotations (default is for human data) obtained from the \
Gene Ontology consortium, and by default uses human data annotated with \
UniProt IDs. The ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function performs an over-representation (ORA) analysis, providing a \
\"significance\" cutoff based on a p-value assessed by a hypergeometric \
function. "
}], "Text",
 CellID->1112357573],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["GOAnalysis",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/GOAnalysis"], "[", 
     StyleBox["data", "TI"], "]"}], Cell["\<\
calculates input data over-representation analysis (ORA) for Gene Ontology \
(GO) categories. We note that the function utilizes ontologies obtained from \
the GO Consortium, and by default uses human data annotated with UniProt IDs.\
\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->329777640],

Cell["\<\
Performing an over representation analysis for Gene Ontology (GO) terms, \
using clustered data in MathIOmica.\
\>", "Caption",
 CellID->2064986220],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AdditionalFilter", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
AdditionalFilter provides additional filtering that may be applied to the \
standard output structure to be returned. \
\>", "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BackgroundSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
BackgroundSet provides a list of IDs (e.g. gene accessions) that should be \
considered as the background for the calculation.\
\>", "TableText"]},
   {"FilterSignificant", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "FilterSignificant can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " to filter data based on whether the enrichment analysis is \
statistically significant, or if set to ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " to return all membership computations."
    }], "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. If set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used."
    }], "TableText"]},
   {"GetGeneDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GetGeneDictionary"]], 
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"GOAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GOAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GOAnalysisAssigner"]], 
        "paclet:MathIOmica/ref/GOAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"HypothesisFunction", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Query", "[", "\"\<Results\>\"", "]"}], "[", 
        RowBox[{"BenjaminiHochbergFDR", "[", 
         RowBox[{"#1", ",", " ", 
          RowBox[{"SignificanceLevel", " ", "->", " ", "#2"}]}], "]"}], "]"}],
        " ", "&"}], ")"}], " "}], Cell[TextData[{
     "The HypothesisFunction option allows us to chose a function to \
implement multiple hypothesis testing.  The default is  using the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["BenjaminiHochbergFDR"]], 
        "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function.\nThe user can use any function f with three inputs, of the \
form f[#1,#2,#3] where the inputs refer to:\n#1 is the p-value list, \n#2 is \
a significance cutoff, \n#3 is the number of GO associations overall being \
tested. \nThe function f must output a list of 3 values: {original p-value, \
adjusted p-value, ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " based on whether this value is considered statistically significant or \
not respectively}."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input.\
\>", "TableText"]},
   {"MultipleList", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
MultipleList option specifies whether the input accessions list constituted a \
multi-omics list input that is annotated so. If this is the case, \
MultipleList is set to True and each input list ID should have the form \
{ID,\"Omics Type Label\"}, e.g. {\"NFKB1\",\"Protein\"}, and the different \
omics type are treated as different for each ID. If MultipleList is set to \
False, and labeled IDs are provided, labels corresponding to the same ID are \
treated as equivalent to avoid overcounting.\
\>", "TableText"]},
   {"MultipleListCorrection", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "MultipleListCorrection is an option whether or not to correct for \
multi-omics analysis. The choices are ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     ButtonBox["Automatic",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Automatic"],
     ", or a custom number. This essentially enlarges the population by this \
factor to account for additional IDs being considered as the result of a \
multi-omics cluster analysis. If the value is set to Automatic the number of \
unique ID labels is used to make the correction."
    }], "TableText"]},
   {"OBOGODictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "OBOGODictionaryOptions specifies a list of options to be passed to the \
internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["OBOGODictionary"]], 
        "paclet:MathIOmica/ref/OBOGODictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function that provides the GO annotations."
    }], "TableText"]},
   {"OBODictionaryVariable", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "OBODictionaryVariable can provide a GO annotation variable. If set to ",
     
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["OBOGODictionary"]], 
        "paclet:MathIOmica/ref/OBOGODictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used internally to automatically generate the default GO \
annotation."
    }], "TableText"]},
   {"OntologyLengthFilter", "2", Cell[TextData[{
     "OntologyLengthFilter can be used to set the value for which terms to \
consider in the computation, by excluding GO terms that have fewer items \
compared to the OntologyLengthFilter value. It is used by the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GOAnalysisAssigner"]], 
        "paclet:MathIOmica/ref/GOAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"OutputID", "\"\<UniProt ID\>\"", Cell["\<\
The OutputID option takes a string value that specifies what kind of \
IDs/accessions to convert the input IDs to compute the GO enrichment.\
\>", "TableText"]},
   {"pValueCutoff", "0.05", Cell["\<\
pValueCutoff provides a cutoff p-value for adjusted p-values to assess \
statistical significance.\
\>", "TableText"]},
   {"ReportFilter", "1", Cell["\<\
ReportFilter provides a cutoff for membership in ontologies in selecting \
which terms/categories to return. It is used in conjunction with \
ReportFilterFunction.\
\>", "TableText"]},
   {"ReportFilterFunction", 
    ButtonBox["GreaterEqualThan",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqualThan"], Cell["\<\
ReportFilterFunction specifies what operator form will be used to compare \
against ReportFilter option value in selecting which terms/categories to \
return. The default is to use GreaterEqualThan. \
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"TestFunction", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", " ", "-", 
        RowBox[{"N", "[", " ", 
         RowBox[{"CDF", "[", 
          RowBox[{
           RowBox[{"HypergeometricDistribution", "[", 
            RowBox[{"#1", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
           RowBox[{"#4", " ", "-", " ", "1"}]}], "]"}], "]"}]}], " ", ")"}], 
      "&"}], " "}], Cell[TextData[{
     "The TestFunction option provides a function used to calculate the \
p-values for the enrichment of each term. It can be a function of four \
inputs, f[#1,#2,#3,#4] (e.g. the default is using a hypergeometric \
distribution CDF, 1-N[CDF[",
     ButtonBox["HypergeometricDistribution",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/HypergeometricDistribution"],
     "[#1,#2,#3],#4-1]]]. The four inputs refer to:\n#1 is number of draws \
(members in group being tested),\n#2 is number of successes for category in \
population,\n#3 is total number of members in population,\n#4 is number of \
successes (or more) in current group being tested for specific category.\nThe \
output is a p-value (real positive number \[LessEqual] 1)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->740180373],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1986245587],

Cell[TextData[{
 "The input data for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " be a single list of ",
 Cell[BoxData["n"], "InlineFormula"],
 " genes in the form:\n",
 Cell[BoxData[
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["ID", "1"], ",", 
     RowBox[{
      SubscriptBox["ID", 
       RowBox[{"2", ","}]], "..."}], ",", 
     SubscriptBox["ID", "n"]}], "}"}]}]], "InlineFormula"],
 "\nThe IDs may be provided as ID strings, or as labeled strings in the case \
of multiple omics being considered. Labeled IDs are provided as ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "1"], ",", 
       SubscriptBox["label", "1"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "2"], ",", 
       SubscriptBox["label", "2"]}], "}"}], ",", 
     RowBox[{"...", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "3"], ",", 
        SubscriptBox["label", "2"]}], "}"}]}]}], "}"}], "."}]], 
  "InlineFormula"],
 " The labels are typically a string, e.g. typically \"RNA\" or \"Protein\".\n\
The default output contains each GO:term that was considered and found to be \
statistically significant. For each GO term we schematically have an \
association with keys ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"GO", ":", "Term"}], "\[Rule]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"testing", " ", "outcomes"}], "}"}], ",", 
     RowBox[{"{", "statistics", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"GO", " ", "term"}], "}"}], ",", 
       RowBox[{"{", "Membership", "}"}]}], "}"}]}]}]}]], "InlineFormula"],
 ". The output has the following structures: for a single list input:"
}], "Text",
 CellID->296707676],

Cell[TextData[Cell[BoxData[
 RowBox[{"listOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "1"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "1"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "1"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "1"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "1"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["Term", "1"]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
    ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "2"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "2"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "2"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "2"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "2"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["Term", "2"]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
    ",", " ", "...", ",", 
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "n"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "n"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "n"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "n"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "n"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["term", "n"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], " ", "\[IndentingNewLine]", 
   "|>"}]}]], "InlineFormula"]], "Text",
 CellID->308882198],

Cell[TextData[{
 Cell[BoxData["GOAnalysis"], "InlineFormula"],
 " can also take as input the output of clustering of time series \
classification data, e.g. ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " or ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesSingleClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesSingleClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " association of associations. The groups for each class will then have keys \
labeled ",
 Cell[BoxData["\"\<GroupAssociations\>\""], "InlineFormula"],
 ", that include the labels used in the clustering. The labels must \
correspond to protein or gene accessions/IDs. For each class and group the \
corresponding GOAnalysis enrichment is computed and returned. "
}], "Text",
 CellID->915126987],

Cell[TextData[{
 "We also note that GOAnalysis provides a multiple-hypothesis adjusted \
p-value. By default, it utilizes a Benjamini-Hochberg false discovery rate \
(FDR) using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["BenjaminiHochbergFDR"]], 
    "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->875538647],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["BenjaminiHochbergFDR",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/BenjaminiHochbergFDR"], "[", 
     StyleBox["pValues", "TI"], "]"}], Cell[TextData[{
     "calculates for a list of ",
     Cell[BoxData[
      StyleBox["pValues", "TI"]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["p", 
          RowBox[{"1", ","}]], 
         SubscriptBox["p", "2"]}], ",", 
        RowBox[{"...", 
         SubscriptBox["p", "N"]}]}], "}"}]], "InlineFormula"],
     ", the Benjamini Hochberg approach false discovery rates (FDR). "
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1158915490],

Cell["Calculating a false discovery rate (FDR).", "Caption",
 CellID->215962140],

Cell["\<\
We carry out our GOAnalysis for all the classes and groups/subgroups. We only \
report terms for which there are at least 3 members, and additionally correct \
for multiple omics (2 sets of GO terms, one each for proteomics and \
transcriptomics).  Please note that this is a time consuming computation.\
\>", "MathCaption",
 CellID->54495101],

Cell[BoxData[
 RowBox[{
  RowBox[{"goAnalysisCombined", "=", 
   RowBox[{"GOAnalysis", "[", 
    RowBox[{"combinedClusters", ",", 
     RowBox[{"OntologyLengthFilter", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"ReportFilter", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"MultipleList", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"MultipleListCorrection", "\[Rule]", "2"}]}], " ", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[288]:=",
 CellID->1071128885],

Cell["We see that the classification is maintained:", "MathCaption",
 CellID->618975626],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[289]:=",
 CellID->712560114],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[289]=",
 CellID->1709177902]
}, Open  ]],

Cell["\<\
Let us extract the top 3 results from all the \"SpikeMax\" data:\
\>", "MathCaption",
 CellID->2051853087],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<SpikeMax\>\"", ",", "All", ",", 
    RowBox[{"1", ";;", "3"}]}], "]"}], "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[290]:=",
 CellID->1202429683],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "7.013519380713489`*^-9", ",", "0.000011067333582765886`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "2480", ",", "39544", ",", "41"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"mitochondrion\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PDP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IBA57\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1683\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GK5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPATA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PPARGC1B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GDAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CXorf23\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NSE4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75323\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06576\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SYNJ2BP\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10809\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99798\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P38646\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9H9B4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55084\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NUJ1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P49411\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13804\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P17568\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22033\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16822\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P83111\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95571\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N4H5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O96008\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10515\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96I99\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P42126\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P51970\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22695\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P40939\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75947\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22307\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10606\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FOXO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P28288\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005759\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.568056155078778`*^-7", ",", "0.00012371963063571558`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "728", ",", "39544", ",", "19"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"mitochondrial matrix\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MMAA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PDP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IBA57\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NSE4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06576\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10809\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99798\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P38646\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NUJ1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13804\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22033\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16822\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95571\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10515\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96I99\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P42126\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FOXO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005814\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.00006891724327877277`", ",", "0.03625046996463448`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "282", ",", "39544", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"centriole\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AHI1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1731\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SASS6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SCLT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP128\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP152\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCDC146\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CNTLN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP135\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S4\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S5\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "6.39793691308638`*^-10", ",", "5.745347347951569`*^-7", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"76", ",", "19258", ",", "39544", ",", "63"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"protein binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13612\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8IUZ5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13861\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94979\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14933\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7L2H7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P01732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13439\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q15819\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19784\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14745\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q07812\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q86UP2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N1G4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UEU0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N8A2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13043\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7Z4H3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60826\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UBE0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30520\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54136\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13596\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25098\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P41227\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P61457\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3L3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P85037\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O00487\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54725\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q2TAY7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P52756\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94776\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13148\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06127\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02818\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P07766\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF624\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BLM\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF772\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25788\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P35998\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3D0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43813\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y2V2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13347\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q5JSL3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BRMS1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43402\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99623\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005829\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "2.038192020994288`*^-9", ",", "9.151482174264353`*^-7", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"76", ",", "10070", ",", "39544", ",", "44"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"cytosol\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43252\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13861\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94979\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14933\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7L2H7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13439\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19784\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q07812\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P56192\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UEU0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13043\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60826\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30520\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54136\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13596\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25098\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P41227\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P61457\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3L3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P63220\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O00487\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54725\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BLM\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLEKHA8\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25788\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P35998\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3D0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y2V2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13347\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q5JSL3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43402\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0003723\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.8522421153683706`*^-7", ",", "0.000055443780653359885`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"76", ",", "2774", ",", "39544", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"RNA binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9BSD7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q86UP2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N1G4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P63220\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P52756\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13148\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43818\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}],
    ",", 
   RowBox[{"\<\"G1S6\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0051301\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "6.931887033069759`*^-9", ",", "0.000012311031370731892`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "690", ",", "39544", ",", "17"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"cell division\"\>", 
             ",", "\<\"biological_process\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BUB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDC20\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HMGA2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BIRC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FSD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TPX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FAM64A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"USP44\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"UBE2C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TIPIN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0062023\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "4.733950597024732`*^-7", ",", "0.0004203748130157962`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "720", ",", "39544", ",", "15"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"collagen-containing extracellular matrix\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CXCL12\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FBLN1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SFRP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PXDN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPC4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"COL26A1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"COL4A2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDH2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MFAP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RARRES2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SFRP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"APOE\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MDK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005876\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "7.572169357708226`*^-7", ",", "0.0004482724259763269`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "74", ",", "39544", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"spindle microtubule\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BIRC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NUSAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[290]=",
 CellID->1411736642]
}, Open  ]],

Cell[TextData[{
 "Let us extract the names of the top 10 ontology group results from all the \
\"f1\" Group1 subgroup 1 data (G1S1). These are in the 3rd list, first \
component for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " outputs (see above and documentation:"
}], "MathCaption",
 CellID->430804357],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{
   "\"\<f1\>\"", ",", "\"\<G1S1\>\"", ",", "All", ",", "3", ",", "1"}], "]"}],
   "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[291]:=",
 CellID->1361454062],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"GO:0016020\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"membrane\"\>", ",", "\<\"cellular_component\"\>"}], "}"}]}],
    ",", 
   RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"protein binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0043312\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"neutrophil degranulation\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0070062\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"extracellular exosome\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0010501\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"RNA secondary structure unwinding\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0035196\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"production of miRNAs involved in gene silencing by \
miRNA\"\>", ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0006986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"response to unfolded protein\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0051787\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"misfolded protein binding\"\>", 
      ",", "\<\"molecular_function\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005783\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"endoplasmic reticulum\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005925\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"focal adhesion\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0035198\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"miRNA binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"mitochondrion\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0009986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cell surface\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005524\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"ATP binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[291]=",
 CellID->500244026]
}, Open  ]],

Cell[TextData[{
 "Let us extract the corresponding p-values/test results of the top 10 \
ontology group results from all the \"SpikeMin\" Group1 subgroup 1 data \
(G1S1). These are in the 1st list for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " outputs (see above and documentation:"
}], "MathCaption",
 CellID->170022261],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "\"\<G1S1\>\"", ",", "All", ",", "1"}], "]"}], 
  "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[292]:=",
 CellID->1410890117],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"GO:0016020\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1.2119400579352567`*^-8", ",", "0.000015658265548523517`", ",", 
      "True"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "2.6750076470946446`*^-6", ",", "0.0017280549400231404`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0043312\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "4.344497815751073`*^-6", ",", "0.0018605718870358173`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0070062\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "5.760284479987051`*^-6", ",", "0.0018605718870358173`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0010501\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000012714222794490848`", ",", "0.0032853551700964354`", ",", "True"}],
      "}"}]}], ",", 
   RowBox[{"\<\"GO:0035196\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0000895042174695781`", ",", "0.019273241495115816`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0006986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00020754919749131162`", ",", "0.03683335126456907`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0051787\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0004652266830912129`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005783\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0006061341815932293`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005925\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0006232231925990837`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0035198\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0007083971952717376`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000751938927678804`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0009986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000808237870607684`", ",", "0.04351013870104699`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005524\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0009399209877797305`", ",", "0.04784404807503774`", ",", "True"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[292]=",
 CellID->948909842]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pathway Analysis", "Subsection",
 CellID->113475317],

Cell[CellGroupData[{

Cell["\<\
Enrichment of Genomic KEGG Pathways (KEGG: Kyoto Encyclopedia of Genes and \
Genomes)\
\>", "Subsubsection",
 CellID->794541302],

Cell[TextData[{
 "MathIOmica provides a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGAnalysis"]], "paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function using annotations (default is for human data) obtained from KEGG: \
Kyoto Encyclopedia of Genes and Genomes, and by default uses human data \
annotated with KEGG Gene IDs. The ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGAnalysis"]], "paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function performs an over-representation (ORA) analysis, providing a \
\"significance\" cutoff based on a p-value assessed by a hypergeometric \
function. "
}], "Text",
 CellID->1511547068],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["KEGGAnalysis",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/KEGGAnalysis"], "[", 
     StyleBox["data", "TI"], "]"}], Cell["\<\
calculates input data over-representation analysis for KEGG: Kyoto \
Encyclopedia of Genes and Genomes pathways. We note that the function \
utilizes data obtained from the KEGG databases, and by default uses human \
data annotated by \"KEGG Gene ID\".\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1987511513],

Cell["\<\
Performing an over representation analysis for KEGG:Kyoto Encyclopedia of \
Genes and Genomes pathways, using clustered data in MathIOmica.\
\>", "Caption",
 CellID->2145353553],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AdditionalFilter", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
AdditionalFilter provides additional filtering that may be applied to the \
standard output structure to be returned. \
\>", "TableText"]},
   {"AnalysisType", "\"\<Genomic\>\"", Cell[TextData[{
     "AnalysisType provides a selection for the type of analysis to perform. \
\"Genomic\" analysis (default) uses gene identifier based analysis. \
\"Molecular\" analysis uses molecular analysis. Setting the option to ",
     ButtonBox["All",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/All"],
     " carries out all possible analysis types for the input data."
    }], "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BacgroundSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
BackgroundSet provides a list of IDs (e.g. gene accessions) that should be \
considered as the background for the calculation.\
\>", "TableText"]},
   {"FilterSignificant", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "FilterSignificant can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " to filter data based on whether the enrichment analysis is \
statistically significant, or if set to ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " to return all membership computations."
    }], "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. If set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used."
    }], "TableText"]},
   {"GetGeneDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GetGeneDictionary"]], 
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"HypothesisFunction", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Query", "[", "\"\<Results\>\"", "]"}], "[", 
         RowBox[{"BenjaminiHochbergFDR", "[", 
          RowBox[{"#1", ",", " ", 
           RowBox[{"SignificanceLevel", " ", "->", " ", "#2"}]}], "]"}], 
         "]"}], " ", "&"}], ")"}], " ", "&"}], " "}], Cell[TextData[{
     "The HypothesisFunction option allows us to chose a function to \
implement multiple hypothesis testing.  The default is  using the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["BenjaminiHochbergFDR"]], 
        "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function.\nThe user can use any function f with three inputs, of the \
form f[#1,#2,#3] where the inputs refer to:\n#1 is the p-value list, \n#2 is \
a significance cutoff, \n#3 is the number of GO associations overall being \
tested. \nThe function f must output a list of 3 values: {original p-value, \
adjusted p-value, ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " based on whether this value is considered statistically significant or \
not respectively}."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input.\
\>", "TableText"]},
   {"KEGGAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The KEGGAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGAnalysisAssigner"]], 
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"KEGGDatabase", "\"\<pathway\>\"", Cell["\<\
KEGGDatabase value indicates which KEGG database to use as the target \
database.\
\>", "TableText"]},
   {"KEGGDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "KEGGDictionaryOptions specifies a list of options to be passed to the \
internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGDictionary"]], "paclet:MathIOmica/ref/KEGGDictionary"},
       
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function that provides the KEGG annotations."
    }], "TableText"]},
   {"KEGGDictionaryVariable", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "KEGGDictionaryVariable can provide a KEGG annotation variable. If set \
to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGDictionary"]], "paclet:MathIOmica/ref/KEGGDictionary"},
       
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used internally to automatically generate the default KEGG \
annotation."
    }], "TableText"]},
   {"KEGGMolecular", "\"\<cpd\>\"", Cell["\<\
KEGGMolecular specifies which database to use for molecular analysis. The \
default is the compound database (\"cpd\").\
\>", "TableText"]},
   {"KEGGOrganism", "\"\<hsa\>\"", Cell["\<\
KEGGOrganism indicates which organism (org) to use for \"Genomic\" type of \
analysis. The default is human analysis org=\"hsa\".\
\>", "TableText"]},
   {"MathIOmicaDataDirectory", 
    ButtonBox["ConstantMathIOmicaDataDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaDataDirectory"], 
    Cell[TextData[StyleBox[
    "MathIOmicaDataDirectory option specifies the directory where the default \
MathIOmica package data are stored. By default the option is set to create \
the standard directory if it does not exist already. ", "ExampleText"]], 
     "TableText"]},
   {"MolecularInputID", 
    RowBox[{"{", "\"\<cpd\>\"", "}"}], Cell["\<\
MolecularInputID is a string list to indicate the kind of ID to use for the \
input molecule entries.\
\>", "TableText"]},
   {"MolecularOutputID", "\"\<cpd\>\"", Cell["\<\
MolecularOutputID is a string to indicate the kind of ID to convert input \
molecule entries. The default is \"cpd\" consistently with use of the \"cpd\" \
database as the default molecular analysis.\
\>", "TableText"]},
   {"MolecularSpecies", "\"\<compound\>\"", Cell[
    "MolecularSpecies specifies the kind of molecular input.", "TableText"]},
   {"MultipleList", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "MultipleList option specifies whether the input accessions list \
constituted a multi-omics list input that is annotated so. Each ID ",
     Cell[BoxData["j"], "InlineFormula"],
     "  input must be a list form, i.e. enclosed as ",
     Cell[BoxData[
      RowBox[{"{", 
       SubscriptBox["ID", "j"]}]], "InlineFormula"],
     "}.  If this is the case, MultipleList is set to True and each input \
list ID should have the form {ID,\"Omics Type Label\"}, e.g. \
{\"NFKB1\",\"Protein\"}, and the different omics type are treated as \
different for each ID. If MultipleList is set to False, and labeled IDs are \
provided, labels corresponding to the same ID are treated as equivalent to \
avoid overcounting."
    }], "TableText"]},
   {"MultipleListCorrection", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "MultipleListCorrection is an option whether or not to correct for \
multi-omics analysis. The choices are ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     ButtonBox["Automatic",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Automatic"],
     ", or a custom number. This essentially enlarges the population by this \
factor to account for additional IDs being considered as the result of a \
multi-omics cluster analysis. If the value is set to Automatic the number of \
unique ID labels is used to make the correction."
    }], "TableText"]},
   {"NonUCSC", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
NonUCSC option set to False assumes UCSC browser was used in determining an \
internal GeneDictionary used in ID translations where the KEGG identifiers \
for genes are number strings (e.g. 4790). 
The NonUCSC option can be set to True if standard KEGG accessions are used in \
a user provided GeneDictionary variable, in the form \
OptionValue[KEGGOrganism] <>\":\"<>\"number string\", e.g. \"hsa:4790\"\
\>", "TableText"]},
   {"OutputID", "\"\<KEGG Gene ID\>\"", Cell["\<\
OutputID is a string to indicate the kind of ID to convert input genomic \
analysis entries. The default is \"KEGG Gene ID\" consistently with use of \
the \"pathway\" database as the default genomic analysis.\
\>", "TableText"]},
   {"PathwayLengthFilter", "2", Cell[TextData[{
     "PathwayLengthFilter can be used to set the value for which terms to \
consider in the computation, by excluding KEGG pathways that have fewer items \
compared to the PathwayLengthFilter value. It is used by the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGAnalysisAssigner"]], 
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"pValueCutoff", "0.05", Cell["\<\
pValueCutoff provides a cutoff p-value for adjusted p-values to assess \
statistical significance.\
\>", "TableText"]},
   {"ReportFilter", "1", Cell["\<\
ReportFilter provides a cutoff for membership in pathways in selecting which \
terms/pathways to return. It is used in conjunction with ReportFilterFunction.\
\>", "TableText"]},
   {"ReportFilterFunction", 
    ButtonBox["GreaterEqualThan",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqualThan"], Cell["\<\
ReportFilterFunction specifies what operator form will be used to compare \
against ReportFilter option value in selecting which terms/pathways to \
return. The default is to use GreaterEqualThan \
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"TestFunction", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", " ", "-", 
          RowBox[{"N", " ", 
           RowBox[{"CDF", "[", 
            RowBox[{
             RowBox[{"HypergeometricDistribution", "[", 
              RowBox[{"#1", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
             RowBox[{"#4", " ", "-", " ", "1"}]}], "]"}]}]}]}], "]"}], " ", 
       ")"}], "&"}], " "}], Cell[TextData[{
     "The TestFunction option calculates the p-values for the enrichment of \
each term. It can be a function of four inputs, f[#1,#2,#3,#4] (e.g. the \
default is using a hypergeometric distribution CDF, 1-N[CDF[",
     ButtonBox["HypergeometricDistribution",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/HypergeometricDistribution"],
     "[#1,#2,#3],#4-1]]]. The four inputs refer to:\n#1 is number of draws \
(members in group being tested),\n#2 is number of successes for category in \
population,\n#3 is total number of members in population,\n#4 is number of \
successes (or more) in current group being tested for specific category.\nThe \
output is a p-value (real positive number \[LessEqual] 1)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->706732141],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGAnalysis"]], "paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->315042230],

Cell[TextData[{
 "The input data can be a single list of ",
 Cell[BoxData["n"], "InlineFormula"],
 " genes in the form:"
}], "Text",
 CellID->1844849291],

Cell[TextData[Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["ID", "1"], ",", 
    RowBox[{
     SubscriptBox["ID", 
      RowBox[{"2", ","}]], "..."}], ",", 
    SubscriptBox["ID", "n"]}], "}"}]}]], "InlineFormula"]], "Text",
 CellID->420108894],

Cell[TextData[{
 "The IDs may be provided as ID strings, ",
 Cell[BoxData[
  SubscriptBox["ID", "j"]], "InlineFormula"],
 " (e.g. \"NFKB1\") as strings enclosed in list brackets ",
 Cell[BoxData[
  RowBox[{"{", 
   SubscriptBox["ID", "j"], "}"}]], "InlineFormula"],
 ", (e.g. {\"NFKB1\"}  or as labeled strings in the case of multiple omics \
being considered. Labeled IDs are typically provided as:"
}], "Text",
 CellID->1991433769],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["ID", "1"], ",", 
      RowBox[{"...", " ", "optional", " ", "label", " ", 
       SubscriptBox["items", "1"]}], ",", 
      SubscriptBox["label", "1"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["ID", "2"], ",", 
      RowBox[{"...", " ", "optional", " ", "label", " ", 
       SubscriptBox["items", "2"]}], ",", "...", ",", 
      SubscriptBox["label", "2"]}], "}"}], ",", 
    RowBox[{"...", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "n"], ",", "...", ",", " ", 
       RowBox[{"optional", " ", "label", " ", 
        SubscriptBox["items", "n"]}], ",", "...", ",", 
       SubscriptBox["label", "n"]}], "}"}]}]}], "}"}], "."}]]]], "Text",
 CellID->446395410],

Cell[TextData[{
 "The ID labels are typically a string, e.g. typically \"RNA\" or \
\"Protein\", (e.g. {\"NFKB1\",\"Protein\"}) or for a molecular ID obtained \
from metabolomics experiments, can also contain other optional label items \
such as mass and retention time ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
   "\"\<cpd:C00449\>\"", ",", "276.133", ",", "11.0041", ",", 
    "\"\<Meta\>\""}], "}"}]], "InlineFormula"],
 ". The main label must always be the last element in the list."
}], "Text",
 CellID->1407276899],

Cell["\<\
The output has the following structures: for a single list input:\
\>", "Text",
 CellID->1865437082],

Cell[TextData[Cell[BoxData[
 RowBox[{"listOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "1"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "1"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "1"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "1"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "1"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "2"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "2"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "2"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "1"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "2"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}], ",", " ", "...", ",", 
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "n"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "n"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "n"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "n"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "n"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], " ", "\[IndentingNewLine]", 
   "|>"}]}]], "InlineFormula"]], "Text",
 CellID->1474295269],

Cell[TextData[{
 "The input data can also be an association of multiple ",
 Cell[BoxData["L"], "InlineFormula"],
 " groups to be tested:"
}], "Text",
 CellID->814266997],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{
     RowBox[{
      SubscriptBox["Group", "1"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "11"], ",", 
        RowBox[{
         SubscriptBox["ID", 
          RowBox[{"12", ","}]], "..."}], ",", 
        SubscriptBox["ID", 
         RowBox[{"1", 
          SubscriptBox["n", "1"]}]]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Group", "2"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "21"], ",", 
        SubscriptBox["ID", "22"], ",", "...", ",", 
        SubscriptBox[
         SubscriptBox["ID", 
          RowBox[{"2", "n"}]], "2"]}], "}"}]}], ",", "...", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Group", "L"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "11"], ",", 
        RowBox[{
         SubscriptBox["ID", 
          RowBox[{"12", ","}]], "..."}], ",", 
        SubscriptBox["ID", 
         RowBox[{"1", 
          SubscriptBox["n", "L"]}]]}], "}"}]}]}], "|>"}], "."}]}]], "Text",
 CellID->1619619895],

Cell[TextData[{
 "In this case the output for each group has the ",
 Cell[BoxData["listOutput"], "InlineFormula"],
 " format described above:"
}], "Text",
 CellID->1596349540],

Cell[BoxData[
 RowBox[{"associationOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     SubscriptBox["Group", "1"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "1"]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Group", "2"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "2"]}], ",", "...", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Group", "L"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "L"]}]}], "|>"}]}]], "Text",
 CellID->1333516809],

Cell[TextData[{
 Cell[BoxData["KEGGAnalysis"], "InlineFormula"],
 " can also take as input the output of clustering of time series \
classification data, e.g. ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " or ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesSingleClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesSingleClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " association of associations. The groups for each class will then have keys \
labeled ",
 Cell[BoxData["\"\<GroupAssociations\>\""], "InlineFormula"],
 ", that include the labels used in the clustering. The labels must \
correspond to protein or gene accessions/IDs. For each class and group the \
corresponding KEGGAnalysis enrichment is computed and returned. "
}], "Text",
 CellID->1277668771],

Cell[TextData[{
 "There are two types of analyses that are carried out, which can be set by \
the AnalysisType option value. The default \"Genomic\" analysis is based on \
input gene symbols. The \"Molecular\" analysis is based on molecular input \
accessions (e.g. compounds \"cpd\" databases). For multi-omic input the user \
may select to do ",
 ButtonBox["All",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/All"],
 " analyses. In this case an additional outer association is created with \
labels indicating each of \"Genomic\" or \"Molecular\" analysis carried out."
}], "Text",
 CellID->1090047844],

Cell["\<\
The enrichment analysis is an over-representation calculation, using a \
hypergeometric test. For a given a given group (e.g. members of a cluster \
after classification), we try to identify which KEGG pathway terms are \
over-represented by membership of IDs to that cluster. The KEGGAnalysis \
function allows us to select the background, and hence address selection \
bias. Additionally a Benjamini-Hochberg procedure false discovery rate (FDR) \
may be calculated for each representation.\
\>", "Text",
 CellID->251121551],

Cell["\<\
We carry out our KEGGAnalysis for all the classes and groups/subgroups. We \
only report terms for which there are at least 2 members, and additionally \
correct for multiple omics (2 sets of KEGG terms, one each for proteomics and \
transcriptomics).  Please note that this is a time consuming computation.\
\>", "MathCaption",
 CellID->1339044942],

Cell[BoxData[
 RowBox[{
  RowBox[{"keggAnalysisCombined", "=", 
   RowBox[{"KEGGAnalysis", "[", 
    RowBox[{"combinedClusters", ",", 
     RowBox[{"ReportFilter", "\[Rule]", " ", "2"}], ",", 
     RowBox[{"MultipleList", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"MultipleListCorrection", "\[Rule]", "2"}], " ", ",", 
     RowBox[{"AnalysisType", "\[Rule]", " ", "All"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[293]:=",
 CellID->1847203281],

Cell["\<\
We see that both \"Molecular\" and \"Genomic\" analysis is performed:\
\>", "MathCaption",
 CellID->1921942735],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "keggAnalysisCombined"}]], "Input",
 CellLabel->"In[294]:=",
 CellID->1790012618],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Molecular\"\>", ",", "\<\"Genomic\"\>"}], "}"}]], "Output",
 CellLabel->"Out[294]=",
 CellID->921808109]
}, Open  ]],

Cell["We can extract both Genomic and molecular analysis:", "MathCaption",
 CellID->1116859782],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]], "Input",
 CellLabel->"In[295]:=",
 CellID->1866845763],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
               RowBox[{"\[LeftAssociation]", 
                RowBox[{
                 RowBox[{"\<\"path:hsa05016\"\>", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "5.341026271859465`*^-7", ",", "0.00009167154489243451`", 
                    ",", "True"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"66", ",", "386", ",", "15746", ",", "11"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"Huntington disease - Homo sapiens \
(human)\"\>", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\<\"DNAL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                    "}"}], ",", 
                    TemplateBox[{"9"},
                    "OutputSizeLimit`Skeleton"], ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}],
                     "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
                 TemplateBox[{"9"},
                  "OutputSizeLimit`Skeleton"], ",", 
                 RowBox[{"\<\"path:hsa00640\"\>", "\[Rule]", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}],
               ",", 
              TemplateBox[{"12"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}], ",", 
           
           TemplateBox[{"8"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 295, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 295, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 295, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[295], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[295]=",
 CellID->881858505]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keggAnalysisCombined", "[", "\"\<Molecular\>\"", "]"}]], "Input",
 CellLabel->"In[297]:=",
 CellID->1218496248],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S4\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S5\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S6\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S7\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S8\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S9\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S10\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S11\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S12\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S13\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S14\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"path:map01100\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.024813798850886176`", ",", "0.04135633141814362`", ",", 
             "True"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "1654", ",", "5841", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Metabolic pathways\"\>", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C06124\"\>", ",", "379.2488`", ",", 
                  "12.687057`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C20199\"\>", ",", "238.1201`", ",", 
                  "9.702206`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C19614\"\>", ",", "270.2196`", ",", 
                  "12.719786`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C05446\"\>", ",", "436.355`", ",", 
                  "14.301529`", ",", "\<\"Meta\"\>"}], "}"}], "}"}]}], 
              "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"path:map04976\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.0008268610310414034`", ",", "0.004961166186248421`", ",", 
             "True"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "98", ",", "5841", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Bile secretion\"\>", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"cpd:C04555\"\>", ",", "368.1654`", ",", 
                   "12.082582`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"cpd:C04555\"\>", ",", "368.1659`", ",", 
                   "12.371832`", ",", "\<\"Meta\"\>"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C01921\"\>", ",", "465.3086`", ",", 
                  "11.805584`", ",", "\<\"Meta\"\>"}], "}"}], "}"}]}], 
              "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G5S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G5S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[297]=",
 CellID->1408890497]
}, Open  ]],

Cell["\<\
Let us extract the names of the pathways found for the \"SpikeMin\" data:\
\>", "MathCaption",
 CellID->1431426074],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<SpikeMin\>\"", ",", "All", ",", "All", ",", "3", ",", "1"}], 
   "]"}], "@", 
  RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}]], "Input",
 CellLabel->"In[298]:=",
 CellID->1866212024],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa03030\"\>", 
       "\[Rule]", "\<\"DNA replication - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00280\"\>", 
       "\[Rule]", "\<\"Valine, leucine and isoleucine degradation - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03010\"\>", 
       "\[Rule]", "\<\"Ribosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03430\"\>", 
       "\[Rule]", "\<\"Mismatch repair - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01212\"\>", 
       "\[Rule]", "\<\"Fatty acid metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04640\"\>", 
       "\[Rule]", "\<\"Hematopoietic cell lineage - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05340\"\>", 
       "\[Rule]", "\<\"Primary immunodeficiency - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa00471\"\>", 
       "\[Rule]", "\<\"D-Glutamine and D-glutamate metabolism - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa00250\"\>", 
       "\[Rule]", "\<\"Alanine, aspartate and glutamate metabolism - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00533\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - keratan sulfate - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00220\"\>", 
       "\[Rule]", "\<\"Arginine biosynthesis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04964\"\>", 
       "\[Rule]", "\<\"Proximal tubule bicarbonate reclamation - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04142\"\>", 
       "\[Rule]", "\<\"Lysosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05152\"\>", 
       "\[Rule]", "\<\"Tuberculosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04145\"\>", 
       "\[Rule]", "\<\"Phagosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05140\"\>", 
       "\[Rule]", "\<\"Leishmaniasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04210\"\>", 
       "\[Rule]", "\<\"Apoptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05142\"\>", 
       "\[Rule]", "\<\"Chagas disease (American trypanosomiasis) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05134\"\>", 
       "\[Rule]", "\<\"Legionellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05167\"\>", 
       "\[Rule]", "\<\"Kaposi sarcoma-associated herpesvirus infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04380\"\>", 
       "\[Rule]", "\<\"Osteoclast differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05133\"\>", 
       "\[Rule]", "\<\"Pertussis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04722\"\>", 
       "\[Rule]", "\<\"Neurotrophin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04650\"\>", 
       "\[Rule]", "\<\"Natural killer cell mediated cytotoxicity - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05323\"\>", 
       "\[Rule]", "\<\"Rheumatoid arthritis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04620\"\>", 
       "\[Rule]", "\<\"Toll-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05169\"\>", 
       "\[Rule]", "\<\"Epstein-Barr virus infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01200\"\>", 
       "\[Rule]", "\<\"Carbon metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04062\"\>", 
       "\[Rule]", "\<\"Chemokine signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04640\"\>", 
       "\[Rule]", "\<\"Hematopoietic cell lineage - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05164\"\>", 
       "\[Rule]", "\<\"Influenza A - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05150\"\>", 
       "\[Rule]", "\<\"Staphylococcus aureus infection - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04668\"\>", 
       "\[Rule]", "\<\"TNF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04670\"\>", 
       "\[Rule]", "\<\"Leukocyte transendothelial migration - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05120\"\>", 
       "\[Rule]", "\<\"Epithelial cell signaling in Helicobacter pylori \
infection - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04010\"\>", 
       "\[Rule]", "\<\"MAPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00531\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan degradation - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa05166\"\>", 
       "\[Rule]", "\<\"Human T-cell leukemia virus 1 infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05200\"\>", 
       "\[Rule]", "\<\"Pathways in cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa05221\"\>", 
       "\[Rule]", "\<\"Acute myeloid leukemia - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04064\"\>", 
       "\[Rule]", "\<\"NF-kappa B signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04920\"\>", 
       "\[Rule]", "\<\"Adipocytokine signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05110\"\>", 
       "\[Rule]", "\<\"Vibrio cholerae infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05132\"\>", 
       "\[Rule]", "\<\"Salmonella infection - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04931\"\>", 
       "\[Rule]", "\<\"Insulin resistance - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa00051\"\>", 
       "\[Rule]", "\<\"Fructose and mannose metabolism - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04130\"\>", 
       "\[Rule]", "\<\"SNARE interactions in vesicular transport - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00071\"\>", 
       "\[Rule]", "\<\"Fatty acid degradation - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05145\"\>", 
       "\[Rule]", "\<\"Toxoplasmosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04621\"\>", 
       "\[Rule]", "\<\"NOD-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04140\"\>", 
       "\[Rule]", "\<\"Autophagy - animal - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04664\"\>", 
       "\[Rule]", "\<\"Fc epsilon RI signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04625\"\>", 
       "\[Rule]", "\<\"C-type lectin receptor signaling pathway - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05163\"\>", 
       "\[Rule]", "\<\"Human cytomegalovirus infection - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05170\"\>", 
       "\[Rule]", "\<\"Human immunodeficiency virus 1 infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04330\"\>", 
       "\[Rule]", "\<\"Notch signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04662\"\>", 
       "\[Rule]", "\<\"B cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00532\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - chondroitin sulfate / \
dermatan sulfate - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05144\"\>", 
       "\[Rule]", "\<\"Malaria - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05146\"\>", 
       "\[Rule]", "\<\"Amoebiasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04144\"\>", 
       "\[Rule]", "\<\"Endocytosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05135\"\>", 
       "\[Rule]", "\<\"Yersinia infection - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04115\"\>", 
       "\[Rule]", "\<\"p53 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00380\"\>", 
       "\[Rule]", "\<\"Tryptophan metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05235\"\>", 
       "\[Rule]", "\<\"PD-L1 expression and PD-1 checkpoint pathway in cancer \
- Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05321\"\>", 
       "\[Rule]", "\<\"Inflammatory bowel disease (IBD) - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05160\"\>", 
       "\[Rule]", "\<\"Hepatitis C - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00410\"\>", 
       "\[Rule]", "\<\"beta-Alanine metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04926\"\>", 
       "\[Rule]", "\<\"Relaxin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00010\"\>", 
       "\[Rule]", "\<\"Glycolysis / Gluconeogenesis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04071\"\>", 
       "\[Rule]", "\<\"Sphingolipid signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04666\"\>", 
       "\[Rule]", "\<\"Fc gamma R-mediated phagocytosis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04659\"\>", 
       "\[Rule]", "\<\"Th17 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04217\"\>", 
       "\[Rule]", "\<\"Necroptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00450\"\>", 
       "\[Rule]", "\<\"Selenocompound metabolism - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04066\"\>", 
       "\[Rule]", "\<\"HIF-1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa03010\"\>", 
       "\[Rule]", "\<\"Ribosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05235\"\>", 
       "\[Rule]", "\<\"PD-L1 expression and PD-1 checkpoint pathway in cancer \
- Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04660\"\>", 
       "\[Rule]", "\<\"T cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04659\"\>", 
       "\[Rule]", "\<\"Th17 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04152\"\>", 
       "\[Rule]", "\<\"AMPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05170\"\>", 
       "\[Rule]", "\<\"Human immunodeficiency virus 1 infection - Homo \
sapiens (human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04120\"\>", 
       "\[Rule]", "\<\"Ubiquitin mediated proteolysis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05235\"\>", 
       "\[Rule]", "\<\"PD-L1 expression and PD-1 checkpoint pathway in cancer \
- Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04662\"\>", 
       "\[Rule]", "\<\"B cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05163\"\>", 
       "\[Rule]", "\<\"Human cytomegalovirus infection - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04660\"\>", 
       "\[Rule]", "\<\"T cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05220\"\>", 
       "\[Rule]", "\<\"Chronic myeloid leukemia - Homo sapiens (human)\"\>"}],
       ",", 
      RowBox[{"\<\"path:hsa05135\"\>", 
       "\[Rule]", "\<\"Yersinia infection - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04722\"\>", 
       "\[Rule]", "\<\"Neurotrophin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05170\"\>", 
       "\[Rule]", "\<\"Human immunodeficiency virus 1 infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04810\"\>", 
       "\[Rule]", "\<\"Regulation of actin cytoskeleton - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04910\"\>", 
       "\[Rule]", "\<\"Insulin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04625\"\>", 
       "\[Rule]", "\<\"C-type lectin receptor signaling pathway - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04012\"\>", 
       "\[Rule]", "\<\"ErbB signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04062\"\>", 
       "\[Rule]", "\<\"Chemokine signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05205\"\>", 
       "\[Rule]", "\<\"Proteoglycans in cancer - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05167\"\>", 
       "\[Rule]", "\<\"Kaposi sarcoma-associated herpesvirus infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04218\"\>", 
       "\[Rule]", "\<\"Cellular senescence - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04144\"\>", 
       "\[Rule]", "\<\"Endocytosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05166\"\>", 
       "\[Rule]", "\<\"Human T-cell leukemia virus 1 infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01521\"\>", 
       "\[Rule]", "\<\"EGFR tyrosine kinase inhibitor resistance - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05016\"\>", 
       "\[Rule]", "\<\"Huntington disease - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa01522\"\>", 
       "\[Rule]", "\<\"Endocrine resistance - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04380\"\>", 
       "\[Rule]", "\<\"Osteoclast differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01200\"\>", 
       "\[Rule]", "\<\"Carbon metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04919\"\>", 
       "\[Rule]", "\<\"Thyroid hormone signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04650\"\>", 
       "\[Rule]", "\<\"Natural killer cell mediated cytotoxicity - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04010\"\>", 
       "\[Rule]", "\<\"MAPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04620\"\>", 
       "\[Rule]", "\<\"Toll-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04070\"\>", 
       "\[Rule]", "\<\"Phosphatidylinositol signaling system - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04510\"\>", 
       "\[Rule]", "\<\"Focal adhesion - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04210\"\>", 
       "\[Rule]", "\<\"Apoptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04211\"\>", 
       "\[Rule]", "\<\"Longevity regulating pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04071\"\>", 
       "\[Rule]", "\<\"Sphingolipid signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04664\"\>", 
       "\[Rule]", "\<\"Fc epsilon RI signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00562\"\>", 
       "\[Rule]", "\<\"Inositol phosphate metabolism - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa05211\"\>", 
       "\[Rule]", "\<\"Renal cell carcinoma - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05212\"\>", 
       "\[Rule]", "\<\"Pancreatic cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05214\"\>", 
       "\[Rule]", "\<\"Glioma - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04370\"\>", 
       "\[Rule]", "\<\"VEGF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04912\"\>", 
       "\[Rule]", "\<\"GnRH signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04216\"\>", 
       "\[Rule]", "\<\"Ferroptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04666\"\>", 
       "\[Rule]", "\<\"Fc gamma R-mediated phagocytosis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05221\"\>", 
       "\[Rule]", "\<\"Acute myeloid leukemia - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04611\"\>", 
       "\[Rule]", "\<\"Platelet activation - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04064\"\>", 
       "\[Rule]", "\<\"NF-kappa B signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04520\"\>", 
       "\[Rule]", "\<\"Adherens junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04213\"\>", 
       "\[Rule]", "\<\"Longevity regulating pathway - multiple species - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05215\"\>", 
       "\[Rule]", "\<\"Prostate cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04066\"\>", 
       "\[Rule]", "\<\"HIF-1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04150\"\>", 
       "\[Rule]", "\<\"mTOR signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05213\"\>", 
       "\[Rule]", "\<\"Endometrial cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa03040\"\>", 
       "\[Rule]", "\<\"Spliceosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05120\"\>", 
       "\[Rule]", "\<\"Epithelial cell signaling in Helicobacter pylori \
infection - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04371\"\>", 
       "\[Rule]", "\<\"Apelin signaling pathway - Homo sapiens (human)\"\>"}],
       ",", 
      RowBox[{"\<\"path:hsa04962\"\>", 
       "\[Rule]", "\<\"Vasopressin-regulated water reabsorption - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04933\"\>", 
       "\[Rule]", "\<\"AGE-RAGE signaling pathway in diabetic complications - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00630\"\>", 
       "\[Rule]", "\<\"Glyoxylate and dicarboxylate metabolism - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05162\"\>", 
       "\[Rule]", "\<\"Measles - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04068\"\>", 
       "\[Rule]", "\<\"FoxO signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05223\"\>", 
       "\[Rule]", "\<\"Non-small cell lung cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04720\"\>", 
       "\[Rule]", "\<\"Long-term potentiation - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05169\"\>", 
       "\[Rule]", "\<\"Epstein-Barr virus infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04114\"\>", 
       "\[Rule]", "\<\"Oocyte meiosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04140\"\>", 
       "\[Rule]", "\<\"Autophagy - animal - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04072\"\>", 
       "\[Rule]", "\<\"Phospholipase D signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05131\"\>", 
       "\[Rule]", "\<\"Shigellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05200\"\>", 
       "\[Rule]", "\<\"Pathways in cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04142\"\>", 
       "\[Rule]", "\<\"Lysosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04926\"\>", 
       "\[Rule]", "\<\"Relaxin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05230\"\>", 
       "\[Rule]", "\<\"Central carbon metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04110\"\>", 
       "\[Rule]", "\<\"Cell cycle - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04668\"\>", 
       "\[Rule]", "\<\"TNF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04670\"\>", 
       "\[Rule]", "\<\"Leukocyte transendothelial migration - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04917\"\>", 
       "\[Rule]", "\<\"Prolactin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04658\"\>", 
       "\[Rule]", "\<\"Th1 and Th2 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05010\"\>", 
       "\[Rule]", "\<\"Alzheimer disease - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04914\"\>", 
       "\[Rule]", "\<\"Progesterone-mediated oocyte maturation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04725\"\>", 
       "\[Rule]", "\<\"Cholinergic synapse - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04922\"\>", 
       "\[Rule]", "\<\"Glucagon signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04730\"\>", 
       "\[Rule]", "\<\"Long-term depression - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05152\"\>", 
       "\[Rule]", "\<\"Tuberculosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05110\"\>", 
       "\[Rule]", "\<\"Vibrio cholerae infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05231\"\>", 
       "\[Rule]", "\<\"Choline metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04714\"\>", 
       "\[Rule]", "\<\"Thermogenesis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05140\"\>", 
       "\[Rule]", "\<\"Leishmaniasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05225\"\>", 
       "\[Rule]", "\<\"Hepatocellular carcinoma - Homo sapiens (human)\"\>"}],
       ",", 
      RowBox[{"\<\"path:hsa04659\"\>", 
       "\[Rule]", "\<\"Th17 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04623\"\>", 
       "\[Rule]", "\<\"Cytosolic DNA-sensing pathway - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa04540\"\>", 
       "\[Rule]", "\<\"Gap junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05020\"\>", 
       "\[Rule]", "\<\"Prion diseases - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00020\"\>", 
       "\[Rule]", "\<\"Citrate cycle (TCA cycle) - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03020\"\>", 
       "\[Rule]", "\<\"RNA polymerase - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00280\"\>", 
       "\[Rule]", "\<\"Valine, leucine and isoleucine degradation - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04921\"\>", 
       "\[Rule]", "\<\"Oxytocin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05160\"\>", 
       "\[Rule]", "\<\"Hepatitis C - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04750\"\>", 
       "\[Rule]", "\<\"Inflammatory mediator regulation of TRP channels - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05100\"\>", 
       "\[Rule]", "\<\"Bacterial invasion of epithelial cells - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04350\"\>", 
       "\[Rule]", "\<\"TGF-beta signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05165\"\>", 
       "\[Rule]", "\<\"Human papillomavirus infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03060\"\>", 
       "\[Rule]", "\<\"Protein export - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00640\"\>", 
       "\[Rule]", "\<\"Propanoate metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04146\"\>", 
       "\[Rule]", "\<\"Peroxisome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04360\"\>", 
       "\[Rule]", "\<\"Axon guidance - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04915\"\>", 
       "\[Rule]", "\<\"Estrogen signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05164\"\>", 
       "\[Rule]", "\<\"Influenza A - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00030\"\>", 
       "\[Rule]", "\<\"Pentose phosphate pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04015\"\>", 
       "\[Rule]", "\<\"Rap1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05130\"\>", 
       "\[Rule]", "\<\"Pathogenic Escherichia coli infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04960\"\>", 
       "\[Rule]", "\<\"Aldosterone-regulated sodium reabsorption - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00010\"\>", 
       "\[Rule]", "\<\"Glycolysis / Gluconeogenesis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05142\"\>", 
       "\[Rule]", "\<\"Chagas disease (American trypanosomiasis) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04961\"\>", 
       "\[Rule]", "\<\"Endocrine and other factor-regulated calcium \
reabsorption - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05224\"\>", 
       "\[Rule]", "\<\"Breast cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04622\"\>", 
       "\[Rule]", "\<\"RIG-I-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03410\"\>", 
       "\[Rule]", "\<\"Base excision repair - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00620\"\>", 
       "\[Rule]", "\<\"Pyruvate metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04014\"\>", 
       "\[Rule]", "\<\"Ras signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04932\"\>", 
       "\[Rule]", "\<\"Non-alcoholic fatty liver disease (NAFLD) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05012\"\>", 
       "\[Rule]", "\<\"Parkinson disease - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04928\"\>", 
       "\[Rule]", "\<\"Parathyroid hormone synthesis, secretion and action - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00310\"\>", 
       "\[Rule]", "\<\"Lysine degradation - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04931\"\>", 
       "\[Rule]", "\<\"Insulin resistance - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04022\"\>", 
       "\[Rule]", "\<\"cGMP-PKG signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00230\"\>", 
       "\[Rule]", "\<\"Purine metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05418\"\>", 
       "\[Rule]", "\<\"Fluid shear stress and atherosclerosis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00534\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - heparan sulfate / \
heparin - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04217\"\>", 
       "\[Rule]", "\<\"Necroptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01230\"\>", 
       "\[Rule]", "\<\"Biosynthesis of amino acids - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00500\"\>", 
       "\[Rule]", "\<\"Starch and sucrose metabolism - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa03030\"\>", 
       "\[Rule]", "\<\"DNA replication - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04530\"\>", 
       "\[Rule]", "\<\"Tight junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05203\"\>", 
       "\[Rule]", "\<\"Viral carcinogenesis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04920\"\>", 
       "\[Rule]", "\<\"Adipocytokine signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00052\"\>", 
       "\[Rule]", "\<\"Galactose metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa01523\"\>", 
       "\[Rule]", "\<\"Antifolate resistance - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04152\"\>", 
       "\[Rule]", "\<\"AMPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05145\"\>", 
       "\[Rule]", "\<\"Toxoplasmosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04024\"\>", 
       "\[Rule]", "\<\"cAMP signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05218\"\>", 
       "\[Rule]", "\<\"Melanoma - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa02010\"\>", 
       "\[Rule]", "\<\"ABC transporters - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04630\"\>", 
       "\[Rule]", "\<\"JAK-STAT signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04621\"\>", 
       "\[Rule]", "\<\"NOD-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04930\"\>", 
       "\[Rule]", "\<\"Type II diabetes mellitus - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04510\"\>", 
       "\[Rule]", "\<\"Focal adhesion - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04622\"\>", 
       "\[Rule]", "\<\"RIG-I-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05135\"\>", 
       "\[Rule]", "\<\"Yersinia infection - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04110\"\>", 
       "\[Rule]", "\<\"Cell cycle - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05231\"\>", 
       "\[Rule]", "\<\"Choline metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04114\"\>", 
       "\[Rule]", "\<\"Oocyte meiosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04810\"\>", 
       "\[Rule]", "\<\"Regulation of actin cytoskeleton - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04120\"\>", 
       "\[Rule]", "\<\"Ubiquitin mediated proteolysis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05131\"\>", 
       "\[Rule]", "\<\"Shigellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04657\"\>", 
       "\[Rule]", "\<\"IL-17 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00020\"\>", 
       "\[Rule]", "\<\"Citrate cycle (TCA cycle) - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04390\"\>", 
       "\[Rule]", "\<\"Hippo signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04070\"\>", 
       "\[Rule]", "\<\"Phosphatidylinositol signaling system - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[298]=",
 CellID->1982568702]
}, Closed]],

Cell[TextData[{
 "The results from a MathIOmica time series clustering enrichment analysis \
can be exported to spreadsheets using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["EnrichmentReportExport"]], 
    "paclet:MathIOmica/ref/EnrichmentReportExport"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->488726451],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["EnrichmentReportExport",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnrichmentReportExport"], "[", 
     StyleBox["results", "TI"], "]"}], Cell[TextData[{
     "exports results from enrichment analyses to Excel spreadsheets, \
particularly suited for exporting multi-omics ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesClusters"]], 
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " enrichment analysis results (via ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGAnalysis"]], "paclet:MathIOmica/ref/KEGGAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "). ",
     "An excel spreadsheet is generated for each Class, named after the Class \
key, with sheets created for and named after each Group in that Class \
containing the enrichment output for that Group."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->2038566199],

Cell["Exporting the enrichment analysis results to spreadsheets.", "Caption",
 CellID->1228002355],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AppendString", "\"\<\>\"", Cell[TextData[{
     "String that will be appended to the file name after the class name. If \
a string is not provided the current ",
     ButtonBox["Date",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Date"],
     " is appended."
    }], "TableText"]},
   {"OutputDirectory", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     Cell[BoxData["OutputDirectory"], "InlineFormula"],
     " specifies the location of a directory to output the Excel spreadsheets \
generated by the function. If it is set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the ",
     Cell[BoxData[
      RowBox[{"NotebookDirectory", "[", "]"}]], "InlineFormula"],
     " will be used as a default output directory."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1076877467],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["EnrichmentReportExport"]], 
    "paclet:MathIOmica/ref/EnrichmentReportExport"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->87410953],

Cell[TextData[{
 "We can export the reports, for example to the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$UserDocumentDirectory"]], 
    "paclet:MathIOmica/ref/$UserDocumentDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1660367008],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnrichmentReportExport", "[", 
   RowBox[{
    RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}], ",", 
    RowBox[{
    "OutputDirectory", " ", "\[Rule]", " ", "$UserDocumentsDirectory"}], ",", 
    
    RowBox[{
    "AppendString", "\[Rule]", " ", "\"\<KEGGAnalysisCombined\>\""}]}], "]"}],
   ";"}]], "Input",
 CellLabel->"In[205]:=",
 CellID->1385794338],

Cell[TextData[{
 "We can export the GO analysis results as well, for example to the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$UserDocumentDirectory"]], 
    "paclet:MathIOmica/ref/$UserDocumentDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1754716454],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnrichmentReportExport", "[", 
   RowBox[{"goAnalysisCombined", ",", 
    RowBox[{
    "OutputDirectory", " ", "\[Rule]", " ", "$UserDocumentsDirectory"}], ",", 
    
    RowBox[{"AppendString", "\[Rule]", " ", "\"\<GOAnalysisCombined\>\""}]}], 
   "]"}], ";"}]], "Input",
 CellLabel->"In[206]:=",
 CellID->126518127]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization of Pathways from KEGG", "Subsubsection",
 CellID->36506248],

Cell[TextData[{
 "MathIOmica allows visualization and coloring of KEGG pathways using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGPathwayVisual"]], 
    "paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1912770077],

Cell[BoxData[GridBox[{
   {
    RowBox[{"KEGGPathwayVisual", "[", 
     StyleBox["pathway", "TI"], "]"}], Cell[TextData[{
     "generates a visual representation for a KEGG: Kyoto Encyclopedia of \
Genes and Genomes ",
     Cell[BoxData[
      StyleBox["pathway", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->672020044],

Cell["Visualizing KEGG pathways.", "Caption",
 CellID->1024379935],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AnalysisType", "\"\<Genomic\>\"", Cell["\<\
AnalysisType provides a selection for the type of analysis to perform. \
\"Genomic\" analysis (default) uses gene identifier based pathway \
visualization. \"Molecular\" analysis uses molecular analysis map \
visualization.\
\>", "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BlendColors", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}]}], "}"}], Cell["\<\
BlendColors provides a list of colors to be used in coloring intensities \
provided and is used by the IntensityFunction as its first argument. The \
colors must be provided as RGBColor[] specification.\
\>", "TableText"]},
   {"ColorSelection", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<RNA\>\"", " ", "\[Rule]", "  ", "\"\<bg\>\""}], ",", " ", 
      RowBox[{"\"\<Protein\>\"", " ", "\[Rule]", "  ", "\"\<fg\>\""}]}], 
     "|>"}], Cell["\<\
ColorSelection assigns foreground and background colors in the KEGG pathway \
through an association. The Keys point to labels for multi-omics data, and \
the values \"bg\" and \"fg\" can point to background and foreground \
representations respectively for each key.\
\>", "TableText"]},
   {"DefaultColors", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<fg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"\"\<bg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "]"}]}]}], "}"}], 
    Cell["\<\
DefaultColors provides a list of rules for setting the colors to be used as \
default values for the foreground \"fg\" and background \"bg\" respectively \
in the generated pathways. The colors must be provided as RGBColor[] \
specification.\
\>", "TableText"]},
   {"ExportMovieOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<VideoEncoding\>\"", "\[Rule]", "\"\<MPEG-4 Video\>\""}], 
      ",", 
      RowBox[{"\"\<FrameRate\>\"", "\[Rule]", "1"}]}], "}"}], Cell[TextData[{
     "ExportMovieOptions provides options for the ",
     ButtonBox["Export",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Export"],
     " function used internally to export the pathway list when Intensities \
have been provided for a time series representation of data."
    }], "TableText"]},
   {"FileExtend", "\"\<.mov\>\"", Cell["\<\
FileExtend provides a string to be appended to the file name if the \
ResultsFormat is set to \"Movie\".\
\>", "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. The gene dictionary is used to convert MemberSet \
identities provided to corresponding KEGG identifiers. If  GeneDictionary is \
set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be created or augmented through the use of ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GetGeneDictionary"]], 
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]},
   {"GetGeneDicitonaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GetGeneDictionary"]], 
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input \
when identifiers are provided through setting the MemberSet values.\
\>", "TableText"]},
   {"Intensities", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "Intensities may be used to provide a set of intensities that will be \
used for coloring components of the pathway. The intensities are provided as \
an association for each ID as single values, or as a list of values in the \
case of series data:\n",
     Cell[BoxData[
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{
          SubscriptBox["ID", "1"], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "1"]}], "}"}]}], ",", 
         RowBox[{
          SubscriptBox["ID", 
           RowBox[{"2", " "}]], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "2"]}], "}"}]}], ",", "...", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          SubscriptBox["ID", "N"], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "N"]}], "}"}]}]}], "|>"}], "."}]], 
      "InlineFormula"],
     "\nIntensities must be scaled from -1 to 1, or selected such that the \
IntensityFunction can convert them to a number between 0 to 1."
    }], "TableText"]},
   {"IntensityFunction", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Blend", "[", 
       RowBox[{"#1", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#2", "+", "1"}], ")"}], "/", "2"}]}], "]"}], "&"}], ")"}], 
    Cell["\<\
IntensityFunction is a function of two arguments that allows customization of \
the coloring for the intensities. The IntensityFunction value can be any \
function which outputs a color, I(#1,#2), (*where#1 is the BlendColors option \
value, and #2 is an intensity vector, that has values typically ranging from \
[-1,1].\
\>", "TableText"]},
   {"KEGGAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The KEGGAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGAnalysisAssigner"]], 
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"KEGGDatabase", "\"\<pathway\>\"", Cell["\<\
KEGGDatabase value indicates which KEGG database to use as the target \
database.\
\>", "TableText"]},
   {"KEGGMolecular", "\"\<cpd\>\"", Cell["\<\
KEGGMolecular specifies which database to use for molecular analysis. The \
default is the compound database (\"cpd\").\
\>", "TableText"]},
   {"KEGGOrganism", "\"\<hsa\>\"", Cell["\<\
KEGGOrganism indicates which organism (org) to use for \"Genomic\" type of \
analysis. The default is human analysis org=\"hsa\".\
\>", "TableText"]},
   {"MathIOmicaDataDirectory", 
    ButtonBox["ConstantMathIOmicaDataDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaDataDirectory"], 
    Cell[TextData[StyleBox[
    "MathIOmicaDataDirectory option specifies the directory where the default \
MathIOmica package data are stored. By default the option is set to create \
the standard directory if it does not exist already. ", "ExampleText"]], 
     "TableText"]},
   {"MemberSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell[TextData[{
     "MemberSet selects which members of the pathway are to be considered. \
The choices are:\nAll: return the pathway only.\n{list of identifiers}: a \
list of identifiers that will be highlighted. If ORA is set to True the list \
must be the output from an over representation analysis, and the identifiers \
will be selected from the last list, second sublist.\nOnly IDs that are found \
to match in the pathway are colored.\nAn internal gene dictionary (see ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GetGeneDictionary"]], 
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ") is used to convert IDs to KEGG IDs."
    }], "TableText"]},
   {"MissingValueColor", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0.4", ",", " ", "0.4", ",", " ", "0.4"}], "]"}], Cell["\<\
MissingValueColor provides a color to be used when Intensities are provided \
to represent values that are tagged as Missing[]. The color must be provided \
as RGBColor[] specification.\
\>", "TableText"]},
   {"MolecularInputID", 
    RowBox[{"{", "\"\<cpd\>\"", "}"}], Cell["\<\
MolecularInputID is a string list to indicate the kind of ID to use for the \
input molecule entries.\
\>", "TableText"]},
   {"MolecularOutputID", "\"\<cpd\>\"", Cell["\<\
MolecularOutputID is a string to indicate the kind of ID to convert input \
molecule entries. The default is \"cpd\" consistently with use of the \"cpd\" \
database as the default molecular analysis.\
\>", "TableText"]},
   {"MolecularSpecies", "\"\<compound\>\"", Cell[
    "MolecularSpecies specifies the kind of molecular input.", "TableText"]},
   {"MovieFilePath", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
MovieFilePath indicates the path (including file name) where if ResultsFormat \
is set to \"Movie\"  the movie generated will be saved. The default value \
None will generate a file named after the pathway with extension set by the \
FileExtend option in the current directory.\
\>", "TableText"]},
   {"NonUCSC", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
NonUCSC option set to False assumes UCSC browser was used in determining an \
internal GeneDictionary used in ID translations where the KEGG identifiers \
for genes are number strings (e.g. 4790). 
The NonUCSC option can be set to True if standard KEGG accessions are used in \
a user provided GeneDictionary variable, in the form \
OptionValue[KEGGOrganism] <>\":\"<>\"number string\", e.g. \"hsa:4790\"\
\>", "TableText"]},
   {"ORA", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "ORA can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " depending on whether the input is from an over representation analysis \
(e.g. output from ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGAnalysis"]], "paclet:MathIOmica/ref/KEGGAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "), or not respectively."
    }], "TableText"]},
   {"OutputID", "\"\<KEGG Gene ID\>\"", Cell["\<\
OutputID is a string to indicate the kind of ID to convert input genomic \
analysis entries. The default is \"KEGG Gene ID\" consistently with use of \
the \"pathway\" database as the default genomic analysis.\
\>", "TableText"]},
   {"ResultsFormat", "\"\<URL\>\"", Cell[TextData[Cell[BoxData[Cell["\<\
ResultsFormat provides a choice of output format, the choices are:
\"URL\": returns a URL of the pathway,
\"Figure\": returns figure output(s) for the pathway,
\"Movie\": in the case of series data returns a movie/animation of the series \
pathway snapshots.\
\>", "TableText"]]]], "TableText"]},
   {"SingleColorPlace", "\"\<bg\>\"", Cell["\<\
SingleColorPlace selects in the case of a single identifier input whether to \
place the color to the foreground, (\"fg\") or background (\"bg\" set by \
default).\
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"StandardHighlight", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<fg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"\"\<bg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", " ", "0.7", ",", " ", "1"}], "]"}]}]}], "}"}], 
    Cell["\<\
StandardHighlight provides a list of rules for setting the highlight colors \
for the IDs represented in the pathway (when no intensities are provided). \
The list specifies color rules for foregroung, \"fg\", and background, \
\"bg\", respectively. The colors must be provided as RGBColor[] specification.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->812822320],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGPathwayVisual"]], 
    "paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->961253673],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{"ResultsFormat", " ", "option", " ", "setting"}], "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox[
    "\"Results\" value for returned data",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<URL\>\"", Cell["\<\
Browser URL pointing to pathway on KEGG database, or if a list of Intensities \
was provided a series of URLs corresponding to each time point or sequential \
data in the series.\
\>", "TableText"]},
   {"\"\<Figure\>\"", Cell["\<\
Pathway figure downloaded from the KEGG database, or if a list of Intensities \
was provided a series of figures corresponding to each time point or \
sequential data in the series.\
\>", "TableText"]},
   {"\"\<Movie\>\"", Cell["\<\
Name of the output file that contains the generated movie/animation that is \
based on the list of Intensities provided.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->746904677],

Cell[TextData[{
 Cell[BoxData["ResultsFormat"], "InlineFormula"],
 " option output for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGPathwayVisual"]], 
    "paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"]
}], "Caption",
 CellID->1184989624],

Cell["For example, we can look at the B-cell receptor pathway:", "MathCaption",
 CellID->1676459694],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptor", "=", 
  RowBox[{"KEGGPathwayVisual", "[", "\"\<path:hsa04662\>\"", "]"}]}]], "Input",\

 CellLabel->"In[299]:=",
 CellID->1272628418],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Pathway\"\>", "\[Rule]", "\<\"path:hsa04662\"\>"}], ",", 
   RowBox[{"\<\"Results\"\>", "\[Rule]", 
    RowBox[{
    "{", "\<\"https://www.kegg.jp/kegg-bin/show_pathway?map=hsa04662\"\>", 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[299]=",
 CellID->545314925]
}, Open  ]],

Cell["We can open this in a browser:", "MathCaption",
 CellID->1218512518],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{
   RowBox[{"exampleBCellReceptor", "[", "\"\<Results\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[208]:=",
 CellID->1135832234],

Cell["We can import directly the pathway:", "MathCaption",
 CellID->64193474],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigure", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[300]:=",
 CellID->862926724],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Pathway\"\>", "\[Rule]", "\<\"path:hsa04662\"\>"}], ",", 
   RowBox[{"\<\"Results\"\>", "\[Rule]", 
    RowBox[{"{", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs3U3O48qCJuaC3QMPvQXvwtMeetqGF9AFlxuelIFqA4ZnuadawFmXR+2b
SAhHyWT8Mv75PN/VPZ8kigxGMEKM96OU/9M//1//6f/47/7pn/7pv/4P//i/
//Sf/5//+G//9p//3//1f/zHnf/tX//r//lf/vVf/vf/5V//73/5L//yb//z
P//3/3jw//vHsv/8H/7pn/7xv5/+m5ubm5ubm5ubm5ubm5ubm5vbmNtPn/8C
AAAA0N41iwEAAACgDxkMAAAAwBhyGAAAAIAx5DAAAAAAY8hhAAAAAMaQwwAA
AACMIYcBAAAAGEMOAwAAADCGHAYAAABgDDkMAAAAwBhyGAAAAIAx5DAAAAAA
Y8hhAAAAAMaQwwAAAACMIYcBAAAAGEMOAwAAADCGHAYAAABgDDkMAAAAwBhy
GAAAAIAx5DAAAAAAY8hhAAAAAMaQwwAAAACMIYcBAAAAGEMOAwAAADCGHAYA
AABgDDkMAAAAwBhyGAAAAIAx5DAAAAAAY8hhAAAAAMaQwwAAAACMIYcBAAAA
GEMOAwAAADCGHAYAAABgDDkMAAAAwBhyGAAAAIAx5DAAAAAAY8hhAAAAAMaQ
wwAAAACMIYcBAAAAGEMOAwAAADCGHAYAAABgDDkMAAAAwBhyGAAAAIAxdshh
PmV0c3NzO/EGAAC8xw7zgNlzJDc3N7eeNwAA4D12mAfsUEaAUsY2AAB4nx3m
ATuUEaCUsQ0AAN5nh3nADmUEKGVsAwCA99lhHrBDGQFKGdsAAOB9dpgH7FBG
gFLGNgAAeJ8d5gE7lBGglLENAADeZ4d5wA5lBChlbAMAgPfZYR6QW8bPct+3
p9v8rOP7v6Hb3etS660tU2g9qfK13sfW5chdT43Q/t49V/q6nO1dnytZPlaW
0u3H9ielpD1Kj4naY6Dksdj+xB7rZdR2AACAdewwDygp490crmZ7se2n5tWp
bT6p75w5fc0yLfYx9Hzsda32JyW1vyVlKTnGcjOKnHXFylS7bE3/L8mVQvdz
j4/cZWqPo5L19bDD+AsAALS1wzxgZA5TOw8s2eaMHCbn+af72DJzqJl3x9Rm
UznrKrkm5Pux2v2q3f6T7Ce1fKjuWh0TT3OYkjofOR7uMP4CAABt7TAPWCGH
CS1TM5cemcO0mOvXXn9Q+3jt9mNaX2dyt1xpPbXMYXLW16qf75DDPCmPHAYA
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
0mb2tdG5yGi9cpiceVgqL2m5vh7ztFOPiZjWOcx3rva0bUe1+85y898ROUxp
Pqud87KEnGWvz8fyhdg2YuspyW9Cy5e8vuS1qWXkMGPJYYASJ8/LGEsOkza7
r52cxZTs03W+1mIeFnttyetz522t2/DEYyJm5xzGrez2pL7v6rzkGKjdfsn+
XY/rXV4X65vfr4kte/f89/2730PrK3ld6PfYdnJfX/La1DKlZc7dVuq5t5LD
ACXu3h+hhhwmbZW+tko5Wso5Vw/NB3LmRLVz65y52d0yLedpbu3m56G2at2+
se0Tn/9fl2tR56G2vfZF7Zznbv9C56OpLCDU7p/HYs/HHr87rmKP3a33bjux
16fKGCp3qPyp/Y/tc6xsn+f4nRwGKBEbY6GEHCatV1+bPZ99cmtZB7F6ib0u
Z050vYXmaTlzuLvXl87deh5Lb1Ba37ltGDs+arc5ot13kzuWtKrzu99Dz2nn
tFhOEVq29bZ7rf8t1Nuf5DBACTkMrchh0nrOnZ+e98/46XF+XZrx5OYwscda
5DCp9fSuu2udnK5lDpN7fJift5Pbx1vnMLG2zz02tHPZuaccZk3q7U9yGKCE
HIZW5DBpcpg+c40n19eMzGE+93PndSPqLlQnp3vSZ3Kuhyq5Zqp02+R7Wu+x
a5y+c5frcjXXuGnnez3q4sl7Rqttt152tFXLNZMcBiix8hjPXuQwaXKYdnON
u/PolXKY2DUQqTl6bpl6Ov19oVUOczdPDz1Wu72R7X6aN46Np1m1Lp6+f9Us
u1JdrFSWVchhgBJyGFqRw6TJYZ7NNVJ/w+yRw1z/1h2bc4f+Jp66/iVnHj9j
nnbye8Nb+szbaef9rVoXcph1yrIKOQxQQg5DK3KYtBVymFimEHo+lS3k5Aa1
c42S68d7XQ+z4s+ocfvU9wft/g7aeX8jx7rv95rY/dD1mHfvVbFrN0PruL4+
tp7YOnrWnWMU4Bk5DK3IYdJWyGE+5/ih+6W/391/OtcoyV6ur+tdd6v8jBy3
T3yPiOWNq9/IN7uttPNzI+rimmOEtl26XGr5nPXVlu1uGy05RgGe8X5PK3KY
tJ7nQ6Vz+Nj9ksef5Bh3541P6qjmtbPnWjvM07xHALOMzmFCj+dmMt/3Q2P1
3eOh8b11RtSC9wSA5+QwtCKHSTsth3mSwXxe33IMWmUsi5Vj1zF3xzIDZ+g9
/qTG7LtlcjORz/2S62FytiOHWY/vhwFK7DonYD1ymLSVcpjrrTSHeZrBfK+n
ZT2sIlWWHcfe3coLnGFkDhO7tuXJa1K/l14DI4dZjxwGKLHjXIA1yWHSVsph
ah/7frzF9TCf8reom5XGstyy7DYG71RW4AyjPpuUc01KaPnQZ4pSj4V+Ty1b
s/5WvA/ck8MAJXabA7AuOUzaaTnM0ywmdO12bT2tNJaVlmWnsXiXcgLnmDnu
GPP+pi7C5DBAiZ3O/VmbHCbtxBzmSRYTq4+aTGa1saymPLuMyTuUETjLjHHH
WPc3dREnhwFK7HLOz/rkMGkr5DDf+cb3LbZc6vHYempzmOv+5Sy72lj2pDyr
j80rlw0408hxcfUxeDR1kSaHAUp4n6EVOUzaCjnMSj+1n90p+Qz/TK2+82a1
/fpYtVzA2Yw9Y6nvPHIYoMTK5/jsRQ6TJod5lsNc9/nu+2VW0rI8q47VK5YJ
ON/ddZ20oV7ryGGAEsZYWpHDpMlh2uUw3/u+8vlij3+nYrX9XK08wDuFPnfr
VnajjhwGKGHMpRU5TFrPHGbXW496WEnvNl/FSmUBgNHkMECJ1c7l2ZccJk1f
6+tTvyv9Xa93Gd6ynwCwMjkMUGKVc3j2J4dJ09f6uqvfFTKZEdte4dhaoQwA
MIMcBigxe37COeQwafpaX6n6nTXejdrmCuP57O0DwAxyGKDECuftnEEOk6av
9ZVbv6OvkRnd7rPHdcc5AG8jhwFKzD5f5xxymDR9ra+a+h01Bs66DmfWMedY
B+BN5DBACTkMrchh0vS1vp7Ub+9rZGZfn3Ly57EAYDY5DFBCDkMrcpg0fa2v
VvXbI5NZoe1Hj/cr7DMAjCCHAUrIYWhFDpOmr/XVo35bjpGrtP8u342zSn0B
AEBLchhakcOk6Wt99azfFtfIrNb+q383zmr1BQAALchhaEUOk6av9bX6vw+9
avuPeB9oUV/f5fTeBQDArpzL0oocJk1f62vWvw9d8u9lr6z3+0HOur/r9Hq7
K+PqdQrAO/h+GKCEHIZW5DBp+lpfO/ybRDscA6v8u1F3y95dIwMAs8lhgBJy
GFqRw6Tpa/3NruPUNTKzy1eix/uDHAaAE8lhgBJyGFqRw6Tpa/2tVMd3mcxK
5cs169/wDuUwu9cnAOeRwwAl5DC0IodJ09f6W7WOr99xsqMZWUzodd67AFiJ
HAYo4VyWVuQwafpaf6vXcYt//3qmlmXP+dxR6fMAMIMcBiix83yAtchh0vS1
/nao4xOu6WhV9utnjOQwAOxIDgOU2HkewFrkMGn6Wn+71PFd/rBL2b89Lfc1
k4qta+d6AuBschighHNaWpHDpOlr/e1Sx7F/T2mXffj2pNzf+cqu+w/Au8lh
gBLOeWlFDpOmr/W3Sx3nfP5mx/G5tMx3Gcxu+wwAchighHNeWpHDpOlr/e1U
xyX/fvNuY3XJZ4zkMADsTg4DlHDOSytymDR9rb+d6rimrLuN2bHyymIAOIUc
Zg055xSxx2r+LUeo4XyXVuQwafpafzvV8dPvt91p/K7JYwBgF3KYdeRkKSV5
i3MSenC+SytymDR9rb+d6rhVWXcax0vyGADYhRxmHTl5SuiamNBrnJfQmvNd
WpHDpOlr/e1Wxy3Lu1OGkZvHAPDL97hojFyPHGYduTlM6LG71+hvtGYcpxU5
TJq+1t9uddyrvLtkGak8BoC/XcfMknEy9Z1cK992IIdZR0kO8/176rNKuxyL
7GGn8Y21yWHS9LX+dqvjEeXtNc7PPi8//ZweVjW7/76571/3oWSffi7714Y/
u7SbHGYdrXOYk8YQ1uGYohU5TJq+1t+OdTyqzKXnEanlnNPDO+n7Y9yN2XIY
SCvNYT73c/qX45FW5DC0IodJ09f627GOZ5Q5Z+xPLeOcHt5J358nlcukXju7
Dd7aboyVk5+0WgZqyWFoRQ6Tpq/1t2Mdzyxz6BqZnOtwndPDO+n783x/fqJ0
f7Qbb5DzmcTY47FlfD6JlhxLtCKHSdPX+tu1jlco9/f7Qc73Kjinn6d2DuZz
7r+ovz+VfmZxdj9+c9+/eyxn31Lt9lnP3WOfx0Nz3OtrQutOvXbndvP9MECJ
E88lmEMOk6av9bdrHa9U7tj58nW52fOqmp+V6rpWaSYQ+3vgG6m/P5XUSW3f
v5vTp5aNvf6tff/usZy2y808Uo+V3r8+Fvp993aTw4xx2tjLezmWaUUOk6av
9bdrHa9U7lgO813O3L95lsyhSuZpOa/f+Zw+Jjcr+142tp63UX9/Kq2Tkn4Z
mqun1pOTCZSWYWexTDyn7XIzj5qc5fpczjKntZscZozaHD13eRjF8Ugrcpg0
fa2/net4lbKncphPOUPn0rFz9pJz85x5Ws1cYZV6fiK3jT7Lptb1NurvT6V1
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
MP7QghyGVuQwafpantA8ouTcfVZd516Dcv1bcOi52GtC64g9J4eBMq2uh0nl
H6H1Pvn9WobQdmqzldqyyWE4kRzmPYw/tCCHoRU5TJq+Vu/u7745y4+Wm8Os
9rP6sbl6+ThXTQ6Tm2+MymG+n8u5biW3zK2u56lhTGA1cph3MQbxlByGVuQw
afpavdK6k8PIYaCF0mvvWlwX0uN6mNxypF7Xomwt+rMxgdXIYd7FGMRTchha
kcOk6Wv1dsphdr2tbPXyca7c6+9C/SjV5+6uUYk9llrHXTlS6yy5nypPaTlr
+7YxgdXIYd7HOMQTO5x/swc5TJq+VqfmfP0tdW0/oa83HHt3uc3q23tDu7AX
Ocz7GId4Qg5DK3KYNH2tj92v9Xjq9P376Q37yJrecOzJYeA5Ocw7GYuo9YY5
CmPIYdL0tX7kMGd7wz6ypt2Ovdoxb/R46XNJnEYOA5R4wxyFMeQwafpaP2/N
YD5O38/T94917XDsjb6eZQVv2Ef2IocBSrxpnkJfcpg0fa2vN+cwP52+r6fv
H2va4biTw8B8chigxNvmKfQjh0nT1/p6cwbzcfI+n7xvrGv0cRf694Xunv++
f33s+7+h9cb+HaPQ+lcZX2dvH67kMO9lPKLGCu+lnEEOk6av9SeHOXefT943
1jXjuMvNVe5+v74+5zU1659thTLANznMuxmTKPXWuQrtyWHS9LX+3p7D/HTq
fp+6X6xtVg4Tuh+7/iW0fOz3UIaTm8nMsko54EMO827GJEq9ea5CW3KYNH1t
DOPamcfaifvE+lbKYWquVwllL7XrXKUfrlIO+JDDYFyihPkKrchh0vS1MYxr
v5xWB6ftD3vY9XNJvZ5boR+uUAa4ksNgbKKE+QqtyGHS9LVx1PV5dXDa/rCP
0cde6Dtzvx+7++7c6/N360h9xij22c5V+uAq5YBvchh+Mj6RSw5DK3KYtLf3
tev5/U63Xe1c9quT9oW9zMphVrNKuVYpB3yTw/CT8Ylcu88xWIccJu3tfe3n
/v+14c/u7bZ7+T9O2Q/2I4dZq0wrlQXgyhhFDjkMrchh0t7e1+Qw89gHeGbU
8bfadXgrleWnlcoCcMc4RY7V3l/Zlxwm7e19TQ4zzwn78NMp+8GeHH9zqX9g
F8YrUuQwtCKHSXt7X5PDzHXCfpywD+zLOdM86p3V+X4YvhmzSHFOQStymLS3
9zU5zHy778vu5ecMjsOx1Dc7kMMAJeQwtCKHSXt7X0vlMHf/TlFquc/9u2We
bOPUHOannfdn57JzlpP+XbXVqFd2JIcBSniPoxU5TNrb+1pu5lF6vySHyVmn
HGZdO5ed84X+3Xu3shvsSA4DlPCeRytymLS397WnOUzsGpe7+6XLvyWH+WnX
fdq13ACcTQ7DHecthMhhaEUOk/b2vtYrhwmtQw4Tt+N+7VhmAM4nhyHEuQt3
5DC0IodJe3tfy81hrrfaHCb0mtD635bD/LTbvu1WXgDeQQ5DiHMX7shhaEUO
k/b2vlZzPUzO9S2lOUvueuQw69mtvAC8gxyGGOcvXMlhaEUOk/b2vtYrh8m5
/mXXHGb292Wu9l2bb+9DAKxJDkOM8xeu5DC0IodJe3tfe5rD5GQqJ+YwJWVd
5adnnb29HwGwHjkMKc5f+CaHoRU5TNrb+1rO9+HGvh/mbrnU49fHSr4XZkSm
8LTOVv2RwwDwJnIYUpy/8E0OQytymLS39zWZgjprVScAsBI5DDmcw/Ahh6EV
OUza2/uaTEGdtaoTAFiJHIYczmH4kMPQihwm7e19bfb3xq72nbO5dTY7U5HD
AECcHIZczmP4afYcg3PIYdL0tbFOqO/aHCb2HTsl37/zZPs96wQAViKHIZfz
GH6Sw9CKHCZNXxvrhPquyUHucpfQc6nn5TAAkCaHYYYe13B/r0dW0I+6pRU5
TJq+NtYJ9d0ih8nJVD7PtfoclBwGgDeRwzDL9byoVRbTcn0t13MKOQytyGHS
9LWxTqjvJ9ej1OQwrbKYnu8tJ7QrAEALcpg9yWFoRQ6Tpq+Nt3udP8lErt/v
kpvD3L22Ztuf8rf+vuPd2xQAoNd5UWy9d+dkd+doOTlMal13j6ceuz4e+nxU
7nZan4O2tGq52I8cJk1fG2/3Om91bUppDpOT3eTkMHf70+J9Z/d2BQBo+X0u
qXOsu2wllLekcphUblOy/lR5YutILRMq/wrkMLQih0nT18bbvc5Py2Gu+1b7
HrR7uwJwFt8PQ43WnyGqeSx0rUrJukrznNIcpqSMOdfyrEAOQytymDR9bbzd
67wmB7m+5vv+3fpiz/fMYa77WZLL7N6uAJxFDkOtHtcIP3ns+vjIHObze06W
UprrrEYOQytymDR9bbzd67w2h/m+lTyfem2vHOZuv3OvrQWA2eQw1Hr6OZqa
zKX355JK1xnLTVqvbxVyGFqRw6Tpa+PtXuctPpc046dlvaeuRQWA2eQwPFF6
XXDodanX3z1/d46Vs87Q+dn3Y6HfQ69PrTdnO9/LrEwOQytymDR9bbzd61wO
82d91JynAEBPchhqleQop2uZpaxej29va9qRw6Tpa+PtXuehv0nscOtdL9f6
AYBZ5DCUmnUOtbJWOcwOdfj2tqYdOUyavjaeOj9T7vWxADCCHGYNOblG7mdh
vp8bWda3n8c8qYed6m+nsrI2OUyavjaHej9Pqk2dz8Be9NN76qWtnvUph1lH
TpZSkrf0PG5a5jC9yznbCmVoyTkqrchh0vS1OdT7eUrbVCYDa9M376mXtuQw
75CTp4SuiQm9ZnQWU7ueEa9Zwa7l/ua8lFbkMGn62hzq/UxPzlNK3/u8V0Jf
sc8NvLn/qZe2etanHGYduTlM6LG71/Tua0+zmNpy7jqG7Frub8ZwWpHDpOlr
c6j3M7Vo19xzHp9zgvZS341w7W9v6Xvqpa1R9SmHWUdJDvP9e+qzSqOzmNLX
fv/3br2h3++uEwpdO3T9/br92mVy1h8qd+r+qnYoI3uQw6Tpa3Oo9zP1aNfQ
e/fTv1MBcan5T2iZ06mXtnrWpxxmHa1zmJHv/U9zmOvvqedjr6vJUEqXyVl/
aVnv7q/I+SStyGHS9LU51PuZRv9dKieLyXnNqreRZu+relqvnu5ec30stN7Z
+9qznp7Uy5vqKVfL+rwamcPMbo8V2jJVP6nH79o951iYvQ+x5WP1HNr3VJ3s
8HvquVWN7BOcTQ6Tpq/Nod7PNPJcKPec8uf9vzb8Gd1H1JN6utvXu8dyzq1P
rqcn9fKmesrVsj6vRucws9tldlum6if1WKtlVlC6LyfmMN+PrdhGd+QwtCKH
SdPX5lDvZ1olh7meF8w+z1353Fg9qafS/f/8N7bOt9VTbr28vZ5K6uXz3yfb
ksPMb8tP3eT8zST0eGyZ0Otmk8P8/thq7ROy4rHEnuQwafraHOr9DLlZyOjt
fm/fuXF+nc7eZ/W0fj3lrudt9fTkdbP3eWQ9ldRLC3KY+W35RiV5Uei8pSR/
ir2+ZJnUukvWed3HXchhaEUOk6avzaPu9zcjhyldt3Nj9aSe5DC960kO05Yc
5py2hJ2OMTkMrchh0vS1edT9GWZcD1PizefGJe1QW0937a6e1vtpWU8563pT
PeX+Tfjt9VRbnzNpyz519b387PZe5Vg71W5163igFTlMmr42j7o/w4wMpmRb
n3PjVnnB9fXf64ltI7X9u/W2rqfYOp/MIe72Zac5xKh6yjkOcl+7Uz2lyn13
7IfqKdW3rusNbS+2rln11Op4StXzk+21rKcdjG7L3DbOfe3Itiytq+vzs+a/
o89f3mLXuty13KxHDpOmr82j7s8x+jwmNPe4K8N1jvXk3DWUnaSWST0XWm/P
erpbttX8odVcL3fbu9TTk/qKHUc71FNpPlDTj1psb3Y91fyUHE9ymDIj27Kk
3a79YdUcpjRvmTEHLmnj2vWzDzkMrchh0vS1edT9Od6Qw8TmdCXny7nr7D0f
vG6jZw4Tmvc+nT981rNLPZUeB6XLrFxP3zlHyeOpuijNHFL9eHY91bZtj2VT
69nB0++HGT2GtnifmdWWJe/JqfWMVNLGtetnHyPOYXkHOUyavjaPuj9Lq3OW
0m2lzplyc5BUVpB7npvaRurc+ft8fNTtWk815/Gherrb/9x5dM22V66n3OPg
Wo+lx+CK9XTX9jmPl7wmVc+x1+zY71J19X3M3P13l+Nph1uLMTTn+My9v3pb
Pnl/D62n9+tqz1W+/8v6nrQ3fJPDpOlr86j7szw9X6nZTs650vf56XXZ2Dzm
7nWx89fUNlLPXbfToh5r66l2DhGaD1z3ObT/tdvepZ5yj5Hcet2pnnL6WEkd
5dRH6FiMLTu7nnocT6m6n3U8jdDzepi7ZZ/UZ+q4Tb13zG7L3LpKbW/0sVXS
xjXr/v7v3Xbvnr9u/27ZVLlb7sebqDNakcOk6WvzqPvz9Hj/Cp0X5Z4v5c5r
r+e4oflL6vw3tY3c8+Je88Gcemo5h8ip89rttppDjKqnnDr5rpec42+Xekpl
ATX9KFUnufPV67Zm1lNt2+bU4+d+q23uoEcOE1v2SX3e9fvYcVvy/Ii2zK2r
2ud6KWnjmnXf/X7d9vfzodfcLZvaxi79dCVyGFqRw6Tpa/Oo+zM9adfSc96c
98ucHKYkn0md/66Yw+Qu++Q8PqcOcubfM+YQo+qp9Bg5qZ6e5DAl9ZdaR05O
MbOeats297ncDCtnmztolcPkLtuq/UrfO1bKYWqXnTX/7bnd1PnMXYYSes2T
38knh6EVOUyavjaX+j9Hzd+UnvwNqubcOGdOkvtY7vlyzVx6xnnAkznEXU71
/djdsRHLtmbMIXrXU80xsloO86Sent7/fix3jlrTN2fXU23b1tTVCnP33p7m
MCXensPU1NeTc4DVpXKX6/3vHCZnfals57T6HOXEY5E55DBp+tpc6v8MOX/b
mnXOdZcFXM9BU7fY8qHncl8Ten7H+eCMn93qaVZuNbOe7sofez6276F15T52
9/zO/a6krkL3dzieaq2ew+Qcu6n+/3R82KUtd9Mih8n5PbQN7VpHDkMrcpg0
fW0u9b+/2HvW6MwlVIYn85xZP7vNB9XT2j/qST3tXE+1Vs9hVvjZpS13cnfu
c30sdP/6e+76rtunzuxzVs4hh0nT1+ZS//tLteHsNnZurJ7Uk3pST3vXUy05
zDltyd9i19Xc3SefHIZW5DBp+tpc6n9/O+Qwu97Uk3pST+pp1dsORucwu97Y
y7XNvu9rz2f0CVqRw6Tpa3Op//2l2lAbAzDDyByGd5l9bnPN0eQHbahHWpHD
pOlrc6n//cXes7yfATCLHIbWSq4jcs3RfrQXrchh0vS1udT/Ge7et7yXATCT
HIaWaj7P5TxoL85daUUOk6avzaX+z+Ez5wCsRA5DK7XnN86F9uL8lVbkMGn6
2nza4CzaE4AVyGF46ul3G1+/Q/f7+1xaLRP6PbQfsf38fm3sWufU9mPbLS3n
yGxEDkMrcpg0fW0+bXAW7QnACuQwPNHi35iKfWY7lrnkLBP6/S5PiZUp9trQ
emI5Sc52U+VMbbMXOQytyGHS9LX5tMFZtCcAK5DDUCuWwTzNYUb/XpLDfP8e
u/Yltr7cHOZu+dj1MXIYdiKHSdPX5tMG59GmAMDO3p7DhISufynZbur1oXX0
JoehFTlMmr42nzboo/TcIdUOd38XqV0XAMAO3p7DpD4jFMplaq6Hyd1mL3IY
WpHDpOlr82mDfnKuH009fvfc00wHAGAnpTlM6HM9d5/DCWU9od9Dr8lZf+6+
xbZ3fe3d8qn1pvY9VI6e5DC0IodJ09fm0wb95GYusWtcWuQ2ADCa74ehNec3
fzqpTuQw6ym5Hj+2jpxt5Gy/Zv29yWGopQ366ZnD1GwXAEaRw/CU85m0k+pI
DrOWkddG5WQ1LdbTgxyGWtqgn9IcJvXc92Op7BjYT+w6d7e6G/PIYXhKH447
baw7aV92N3qOIYcZT19bg3booySHCb2X1oyD2hP2cdp59GrU7zxyGJ6o7bOz
+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
2V2+1/qxlebTMTX9YNU8U37Xrg5XadM7OdlITq4Ses3dMnfXy8Db6QdyGKDM
6udY9BW6RuXumEjNVXKubcm9/mV0DsO6Wh6jJcdd7LjNfW63Y7Q0Uwldk7DC
/vTK71b6aV3PK+ZpKSNzmNz1wxvpB3IYoMxO51u0F5vj3v3NLzUnyJk35Dwu
h+Gj5TFactzF1pWb1+x2jJZmXqFyr/C+0jO/S7X397ZCj8XKN/K42Tl3ud4v
yUlyHqvZ1kpyxk63shth6kcOA5Tx3rKHFc49fv63Zk6SO295cj+1TbfzbznH
aMlxF1pX6DWl276uYwW59fz/t3c3uo3qWhhAX72PflUdRTdDsb23MdjAWiM0
KQFjzE/gi2k/07bKmim7Lr3brWffqu1rmbr0tHGpDe6iVf/I9v5MV5qvNE2m
/FlWq8/TaN8ybSKHAXJ8nrxb5pqydX8QuX/I3ttux30P2XsV+/o9jdxHM/tU
bR9sjcv+G51JnT182rp3u6009Ow33/tH5Jw24txZmi97DPFctu+1tPe/tIcc
BshxbfZukXvb72l77iUi9yORe+Dee5btOtnf72XkPprZl6Lvte7He/bRWVp5
xXbaVlkzZdelZ5vVtntmvxidw0SPF57Bdp5H2/+fdpDDADk+Q94ts/177ici
+Up0XO/9Sum+y35/D6P30ej+lM1hevfP0j46QzbzauUAM52Z30W2+2eZR/fD
6H4jd3kv23wu7f8f7SCHAXJctxGVuafYuwcpfTcdmT9zT1O7V9lbJ55jdg7T
mq9nH71S9vNgb/pVPlPOzO+256lalnx2f5hV2ps5bPs12A78ksMAGa7hiOq9
V5j9L/L8hGPgGTL7aCYLLN1zR8cd3UdXlul3sqoR+V0tj2uVfzSH4Z1s+7XY
HshhgAzXcUQ9NYf5Xj/u7en7KOc4O4cpzRN5L7Lf2H/eyXZfi+2BHAbIkMMQ
VXqu6A5Ddh25JzkMPY72o6r1n6rNVxuf3W/sQ+8T2eZ7n2nbz8ajn5ulZR4p
a9T+vF3+mcfJ24/Bt6//LzkMkOG+k1F+fn7+Ge68LMfEPclh6PGU/cZ+9B7Z
7xda40bvSyvtm1ct++3H39vX/5ccBsiQwzDKk3KYX46N+5nd7+qKPluM95Qc
5rMuPN/Rfp5n5yRymPd5+/r/ksMAGe4BiJp9nzrrHtfxAc82+/w0+tzmc/35
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
        "], {{0, 761}, {
        1122, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{1122, 761},
      PlotRange->{{0, 1122}, {0, 761}}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[300]=",
 CellID->810394010]
}, Open  ]],

Cell["We can zoom in:", "MathCaption",
 CellID->1377198042],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"exampleBCellReceptorFigure", "[", "\"\<Results\>\"", "]"}], "[", 
    
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]], "Input",
 CellLabel->"In[301]:=",
 CellID->988744528],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
vazqrftmixwmtIzUNHKYPdRkI6G2rcnvav922UfkMECJNx6rUKf0uKr0GC12
nHfKMd5KZSHPm9qs9P3gTXXDnt50rczTHCY2f2qaU96jd1Syb7fKYXIzFzmM
HAYIe8OxCW3UHuPdPZ+aRg7DKt7SZjXb+Za64RwnZzJPcpjUvKlpTnmP3tHd
9cWxaXPbpXR/kcPIYYAypx6P0N7THCZnmrus5ul7+0r790plIc/pbfbkPeAz
n/cRdnTatTIrXA+Tk+ms/B69o7scJrRPP81hvts3lM9830rXtfs+IocBSpxy
/EF/o3OYkul2ef9eqSzkObnNnm7b9f3j5LrifLtnMk9zmNz33JzPRkrfo936
30r2kZL9JZbLlK4rVoYdyGGAEjsfczDW6Bwm9N5e+v6+0v69UlnIc2Kb1Yz7
d+eo12WcWFe809057Opq36Nzzp9L59n1PXpFqf0wN4P5TJvbLqVtKYeRwwBl
djrGYK6nOcxdxhKa5tRjvJXKQtqJ7dVym+QwvMUOmUzuZyDXaxi+H9dOE3pu
t/foVcXqKCd/+Z62pG1KjrfkMHIYoMzqxxWsozT7uD5O5TCx10PXwe72/r1S
WUg7qb16jPWp62PgRKteK9PyvHfk30p1uKrSHCY2bWnb5Bxz3ZXhjfuIHAYo
sdpxBOt6+v5999la7D079dqO798rlYW0U9qrx3Z8v3d4H+HNVslk5DDnio21
JfuefaQvOQxQYoVjB/bg/fu5lcpC2gntdcI2wC5mXivjPfoMoe8Ttbj20D4C
sA45DLm8fz+3UllI27m9jO0w38hMxnv0GUI5TGqa3GXPbm/7CMAvjtXJ5f37
uZXKQtqu7bVruWFlTzOV3tfKeI8+gxzGPgK8gxyGXN6/n1upLKTt1l7Gc+ir
Zf/KzWRy+3Xot9d2uL1dqm5afi9p19sO/D4MUGKn8Y255DDPrVQW0nZqr53K
Crvq1c9i55wlec3s99rd36NXEGr/6/2VrFimGeQwQIlVx3TWM/uzkBM+R1mp
LKTt0F6r7eNwslHnwzXvaXKYM+xYHzuWuQc5DFDCMTyt/Pjx44/bKetqSV/b
xw5ttUMZYVd3/et6zNS7D5ZkMTk5yPf8d49rp3mSxRjH/rRjfexY5h7kMEAJ
OQytyGHS9LV9rNxWxm3oL5R1pKZpXYbcLCY3A0llJ3fLyc1b5DDvpA1/kcMA
JRzPk2v2d4ue3FaxUlmIW7WtVi0XnGaHHOb7Pa5FDpOTr6SmKc1ijGn704a/
yGGAEqudp7Kums+5VvgbsX/nZj762j5WaytjNfSXk3V898OTcpjY/K2mmfUe
TV/a8Bc5zBg5n7nGno9Ns+JnuJzLvkYuOUy6flpMwxpWaquVygJvETquv97v
uf6S9TzJYVLz5k5zt/xV3qN5bvdrknuTw4xTe71izTTQy9vGSOrlHqddb6nX
QvPHlp87jxyGWqu01SrlgLfZre/NvB7m7r1ZDvMe2vAXOcw4oX0udr1i6vqY
1LKhNTkMuXKOq0L5yZPXUs/lzDOqfj7/zXl/YG2z28rYDHPt0P9yPotIvU/m
5Ce1GUtuedibNvxFDjNOaQ7zfYx+N88br99iPvscuWpzmNrXVs5hYuN4ahr2
MLOt7CfATyXf+2iRw+S+97bMYox3+9OGv8hhxmmdw6SWCz3IYcjVMoepOe7L
OfabncOUTsO6ZrSV8Zhd5eYFK95W1zKH+Z7n7nHtNHKYd9OGv8hhxinJYXI/
I7UfM9ouxyHM1yKHCR27Pc1hYseDchhKzcpgYFctzsdn/O3Q73JzJG3ALNrw
FznMOLk5TMmxuf2Y0eQw5GqRw4Sme5rDxF5rtX/nfBaZm7mztpHtZAzmBDKA
vnKu5dEGpLS8jmz0bQdymHFafx66yz7GWXYa35irZQ6T81ppDhObp0ddXB+H
8pjYfKxpVDvZHzjFXbb+ud2Nz9fXQ9OHpsmZPlWeHTKAkvNSOQwp9pG+5DBj
5ObSoedK8hnoSQ5DrtY5TOj4PDZ9bBmx5fSoi5HzMVbvdjLucprcMbxm/C6Z
pibvX1HpOcTn9dR79Ip/q7bBiewjfclhgBLOB8iVcy1KzmeRNZ+Dfj9fst5e
799ymLP1bCf7ACfKzUdimUltDpP7+i45TCxnkcPwRO1xXO51Z7FpQ8eAJ+0j
chighByGXI7xnlupLIT1yu60P6dqkcN8nktl+qnxvuS1lfpkzhgRez11zrvy
jTFyjuOe5qF3fT13uTscxwG04j2QXHKY51YqC2Gt20m7c7qWOUzu66HxvuS1
Ffpmq+Mw79Gk1OQwqetj7ubP7btyGODN5DDkcoz33EplIaxlO2lz3iB2jhU6
hyuZ5/p6bLwveW1m/2x9/OU9mpTSHCbn2pac3OZuutBz9hFiSsdN19+xMvsk
uRzjPbdSWQhr9dm09uYt5DBlddVjvbnn2N/nydfHtdN8P3e9v9N79Ola5jA5
+0BsnpJjyl32Eb8P019JrnL3umMzVmJ/JJcc5rmVysK9VhkMvEko44jlKTVZ
S+oz9dj92TlM7+Otktyj5HHpPKksbeX36NOV5DCpa15yX8u5puaUfUQO099d
DlOatzj3ZRX2RXLFxr7Vb6tYqSzce9JGq+1vMErss+/QeVUsGymZJzb2p5Y7
qr+OWE+LHCYnGyvJwk46xz5Bbg5Tk9U92e9yy+TmVnJL9QWYLWdfhRw/fvz4
43bKulrS19ZX20baljf7uf+Xnpet8Ne73448xsptg+t0n8ex+VPTfD9fui8Y
O8fJaZu7aUL7TEmb18yz2z7iepj+cvMXOQw7kMPQihwmTV9bX2kbGUNBDnNX
H6PHhSc5TGre1DTXHObEc+wT1LTz9/nt9fH1tdRyc6ffdR+Rw/SXe/2LHIYd
OIegFTlMmr62vpI20p7wixzmdz3MGhdmXg/zeS1nut5tQJh+2pccpr/c7x/V
vgYj2RdpRQ6Tpq+tL6eNjJvwp7ef360wJjzNYe5eK5lmdhuQ9vZ+2pscpr+S
sTZ0ncwu+xPnsz/SihwmTV9bn2tZodxbz+9qjqFyPsutLUvuNpc8zp1mVhuQ
7639dBQ5zHpyr5+BGeyTtCKHSdPX1uc6VigX+87+6rcn25uaJvZc6/Ek5xz7
e7vvHtdO84Zz7BPIYfqSwwAlnFvQihwmTV9bX+rcCfjbm87vSq6Jjz03I4dZ
8c/4Oo59pC85zB522Z84nxyGVuQwafra2nyPGOq84fyudDyQw7RvA56Zfe3Z
6OvWRpPD7GOXfYqz7TS+vUXsfSfnPSk0zfdzsfe50P3YfKHlppZRsl3f5DD0
0PMcCU52zQBC7xN35+B3r+XOX7Kc2gyg5L0p5z3ye9qWYvWz8p+xllPIYfZh
3GEFcpi13GUnOa/lzJO77Nr7pfOlXouRw9DD3b4MpIUylthzd5lJyfyp13KX
F9umJ2NBzmchLclhYC45zF6MPcwmh1lHKlcJZRg517/E5m91Xw6Tpq+tzXgI
dUpzmNj1KbH5P8+Hrn0peRzKAFqNA6PHEjkMzCWH2Y/xh5mcd6wj1Q4l18OE
ji1Dj1vej+U/chh9bVXGQqjXKodJzV8yfWkO03oMmJHD7HqDE8hh9mP8YSbv
getomcOk7t+99n1dS801LqWZTawMKXIYWgnt70C+UMZxvZVkLKNyGMdBQAty
mD0Z/5nF8cc6ctoh95jxOl3o8d39u/KEpo9NFypv7LncepDD0EJutgnEhTKO
0OOVchiAFuQwe/I+wCxymHXkXN/SY/m9l9tjvXIYngiNe9oH6rTKYUqzGjkM
AE95L2AGOcxa7j6fl8P8TQ5DrVgbaB+oU5rDhB7X5jDXeeUwAJTwfsBocpj1
3H2HqNd6Wixjxv4jh6FUal/VNlAvlKnc/TZMaLrvrCQ1X871MDnL0e8B+Mn7
AaPJYWhlZDYih6FE7m8vAXVKv0O0yp9+D7Ti92GAEnIYWpHDpOlrY5WMb9oG
6slhgLeTwwAl5DC0IodJ09fGKa1rbQP15DDA28lhgBJyGFqRw6Tpa2PU1LO2
gXpyGODt5DDn8N7ACHIYWpHDpOlrfT0Zz7QN1JPDAG8nhzmH9wZGkMPQihwm
TV/r52ndapvx7v5NnV1u/Gl2e2hLYDY5zFm8P9Cb4xBakcOk6WvttRrDtM14
K1xDUVMG+8rfVmjL2vYHaEEOcxbvD/Qmh6EVOUyavtZWy/rUNuOtcO4uh2lj
hbasbX+AFuQw5/EeQU9yGFqRw6Tpa220Hre0yxw55+7f3x/JeS00fc7zuVmC
/eVvOfWd81zO94i+5w21Y8l6AFqQw5zJ+wS9OA6hFTlMmr72XI861C5zlOQe
ua+F8prQ45z55TBpuXVa2j7XHKW2XUPTa0ugFTnMmbxP0IvjEFqRw6Tpa/V6
jlXaZY7WOUzOuff1eTlMWEmfC9Vnqr5L2uCurWPXx8hhgJHkMOfyXkEPjkNo
RQ6Tpq/V6V1v2mWOljlMzrl7zutymN/uvucTm7ak/mLfBWuRw+Su5y1tCfQn
hzmX9wp6cBxCK3KYNH2tzKjxSbvMUZLDhM6nQ+fYcpjnQr+5crf9pTlMrL5b
5jCp9bylLYH+5DBn835Ba45DaEUOk6av5RtZV9pljtrrYVLn4zU5TCrPuTt/
d/t9/FCTw5S2WWi+0uflMEAPcpjzec+gJcchtCKHSdPX8oyuJ+0yR8scJnS+
XXtOnyrPrPoa+Z6dm8F8ps3NVuQwwInkMEAJxyG0IodJ09fiZo1H2mWO1jlM
bhbz2c92y2E+dTZyXan85XvanPrOqedUblLyWmp6fR9oRQ4DlHAcQitymDR9
Lewt57b8lpt5XG93r8Weu3s+Zx45TDp/+Z42t75z85Gc53PmS+1bAC3IYYAS
jkNoRQ6Tpq/9bfYYpE3myc09VvtbYX8d0W9K1qEtAXgL7x20MPsciHPIYdL0
tT+tUB8rlOGtnLun6+fuuevvsqxAWwLwFt47aEEOQytymDR97ZeVxp1VyvFG
zt3T9ZN6bpX9V1vyROy3iNzyb8A4+hxPGbvJNfv44oRjk9XKsuutdT0wx8+6
n30evvK5+916rs+tsv9qS3Kt/B69O/U6l9+HeR/9jCeM1eR6epx9nX/UcftK
+/dqZRlR/6u350pt8jb2wfs6ieWP1/fsVfZfbUkO9T2W+h5LDvM++hhPyGHI
JYd5brWyjKj/1dtzpTZ5m9nXVa1yTVasfu7q63p/BbPbY/W2fDt1PY96H0cO
8076GLW8N5LrLkf53ELny6l5Qsu4O1ZOzR9b1ipWK8vsTEUOQw+ntOkp2wH2
5bnU/xhymHfSv6glh3m3kva/O2+PZTDX+znTtnh8t/5VrFaWVN5xl23lPJeb
t8lhaO2k97RTtoN3G7Ufr3aN00pl+WmlspxKDvNe+hc1VnufYKySa7Rrc5i7
c/tUZiOH6S8nh+ndTjV/chhCVjsPg7cb3RdX7PsrlWmlspxIDvNu+helHLO+
W+h7PXf7RE7eUZKNyGHmKs1F5DCsTg4Da5HD/LJKuVYpx6nkMO+mf1HKMese
YnnJiNunDHfnxHffObm7H3v9bhkl5/exZcyuu5Vvb89hWi6LuULjFjDP6H74
fbxyXXfouOZ6P7SM0P3Y8mPTz7BKOU4lh0Efo4Tj1XfLOVf/nrbk3PzufP8u
Byg9f695vIrVypKbe8TaNpTrpOaRw9CSHAbWMqMPhrKT3Dyl52srjEkrlOFk
chighOPVd8vJX76njeUwT86r5TDj5bRdaJoW18PU7jtyGK5yxzBgnFk5zN3j
pzlM6PqZkmWuMiatUo4TyWGAEo5X363k3KXm3Dv3vLr341WsVpaSdkm9Jodh
hliWrH1hnpVymM/90PUyoelj9+/mjS1/lfFolXKcSA4DlHCs+m4l7X93Hn13
Kz2njs1/fT72OLT+lfbv1cpSksN8P5bDsAo5DKxpVg6TykxSOUzJPE+ut5ll
hTKcSg7Dh35GDseq5Ko9b579t9L+vVpZcuoulYXdPVeTl81oz5Xag3pyGFjP
6P53zVBiGcv345xc5brcu/Wklr/KuDR7/SeTw/BNXyNlhfcE9iCHeW61ssxu
m9ntuVJ70IY2hTXs0BdXvF6ltzds4yxyGL7NyqJj5/Y5eXAooy7NmlP3c14v
Xfdudi034zlvf261ssxum9ntuVJ70IY2hTXs0BflMLQkh+FqVH+7W09qfEtl
MTnz5b4WutYwtZzS5e9GDkMu5+3PrVaW2W0zuz1Xag/a0Kawht36Yunx8Ojv
GbVa327tshM5DHd697nYtS8l0+TOK4dpRw5DLuftz61WltltM7M9V2oL2tCm
sI6T++Po62haru/kdplNDsOdlXOYnGW2zGE+9+++Z3S3HDkM/HL9Pt9Ot1Ws
VpZdb622n7NoU1jHyf1RDgOU6Nnv7pZ9PWbumcOEHt+tPzdHCZU7tq4drXae
yr5+/Pjxx+2UdbWkr61DW5xHm8I6Yv3xLle/O76+Hs+XTpNa35Ppcx9fXyv5
vCF3+0oYJ2G80TnMk/Xnjpep8S+07tyxtWTdu5LD0IocJk1fW4e2OI82hXWk
+mPqGo+ca0BKrhOpnfbufmje1LS191uObcZJmKNX3ysZj2rmHeGt45Ichlbk
MGn62jq0xXm0KayjJIfJ/Qw1tY6abCVVxlhGElt/yxwmtL4axsl+/D4MMSOv
iUmNT6Fp7qYdMWa8dVySw9CKHCZNX1uHtjiPNoV1tM5hPs/Fvp+Tk8PkXsMf
W35thtLiepin45xxsh85DCm9s5jU93VypglNO9Jbxik5DK3IYdL0tXVoi/No
U1hHrxwm9Xro3KHkeLc2F7k7v3ly3YscZi9yGFaRyqud/69BO9CKHCZNX1uH
tjiPNoV15OYwoWvnc69Hia0zlaGkynfNRELXuKQ+Y459RyC0jtAynh63Gyf7
kcOwgtg4GHuO8eQwtCKHSdPX1qEtzqI9YS2r5jA5ZRvBtf7nkcOwAjnMPuQw
tCKHSdPX1qAdzqNNYS05OUwsT8nNWmKvxbKX2WOGHOY8chhyteyLd9fJpa6d
y7nOL7Ws0PWAd6/drev6XGj6WFl2zzF2Lz/rkMOk6Wtr0A7n0aawnlTOUvN6
zjxPzi1qtqfUXVlGME72JYehROsspmS5sTEoJ78uvfaw9/J3JYdZT+r4I9Vm
d8cid9li6fOhMvQ63omRw/CEdjiPNoX16Jdr0R59yWEo1TLbvT5OnSuGHvfO
YXLKIYdhhtz97u5xznwl92v6QEn5n5DD8IR2OI82hfXol2vRHn3JYSjVI4fJ
OfeSw6xBDrOO1D4a21fvrj95el8O056+tgbtcB5tCmvSN9egHfqTw1CjRd+s
yWFi8+Sce+Yuq6R8ueegqXxnF3KYdaTawfUwv8lheEI7tPedB99lw9dpYs/d
LS9n/cCa9M+51P8YchhqtM5hPo9Tx1fX+3evXZcVW07uskPLzTk+PCmD+UkO
s46eOUwqvwzlME/ynNj6npLD8IR26OOuXnPGrZppSl8H5nGsOY+6H0cOQ62n
fXR2H69d/+xyz2Z8XkfuZ76pNgtli6FzndwcNLb80fmlHIYntEMfoXqNZbU5
r8eeT70GrENfHUt9jyWH4Ykn/XV2X5fD1JHDrKPm/KPH+krXO2P/kcPwhHbo
I3cM+85qc6/zk8PAGXI+T6Ke+p1HDsMTT7KMmX2+5brfNm4Zq9cSOl8Zsa7S
10una0kOQy1t0E9JDpPz2vdzsbFQm8Kerpms2/Mb88hheEofjjttrDtpW05x
3cdq2icnY4md06T2i9n7jByGWtqgn9IcJpS5tFovAIwih+EpxzNpJ9WRHIZW
RmYjchhqaYN+euYwK+fCACCHoTXHN387qU7kMLQih0nT1+bTBv30ylVWvz4P
AKCl0u/g3H2f4u7x9bXUNHfLz5235LsXsfVd572bPrXc1LaHytGTHIZW5DBp
+tp82qCP0t8qyP3uZM73M7UpAHCCJ7/7FMosRt6PlaGkbLHXS9ebu/zQPL3I
YWhFDpOmr82nDc6jTQGAnaWuN8ldRujxLjnM3XSxaWtzmLvljz6elMPQihwm
TV+bTxucRXsCsAK/D0OtWAbzlhwm9P2h2Hy56w2VM5TJjMpH5DC0IodJ09fm
0wZn0Z4ArEAOwxO9cpi73CH0PZ/YNKH71+lLcpia7wiFro9J5TCxcqbW2Ysc
hlbkMGn62nza4CzaE4AVyGF4qmUOk5uplE6Tymyu2xHbzu95U9enxNYfW29p
OUdmI3IYWpHDpOlrc6n/czw5TgGA1uQwtNLqehjW5viVVuQwafraXOr/DLHP
QABgBjkMLdVkMY6D9uLYlVbkMGn62lzqf3+517kCwEhyGForyWFcH7wf7UUr
cpg0fW0u9b+/VBtqYwBmkMPQy+xjm9jvtFBPPdKKHCZNX5tL/e9v9Rwm9Bt7
O9zUk3pST+pp1dsORuYws9vj9Lbkt2ubfT/Wns/oE7Qih0nT1+ZS//tLteHs
Nv65/n9s+DfjfHD2Nqsn9TT7Tz2tWU+1Rucws9vl5Lbkt1gOc/eYfHIYWpHD
pOlrc6n//cXes1b4vM2xsXpST+pJPe1dT7XkMOe05U7ujn2uz4UeX+/nLu+6
furMPmblHHKYNH1tLvV/hrv3rdgxw8j3uc+x8fd6r8egqVts+tBrufOEXnc+
uOY5xNN6Su0jd/tDbN/ZoZ7uyh97PbbtoWXlPnf3+s79rqSuQo932J9qrZ7D
5Oy7qf7/dHzYpS13k5OPXI+RQs/F7ofWoV3ryGFoRQ6Tpq/Npf7PUZOzPMll
cqcPnYd9P76bJvVcapl3j3OPk2ccBzw5hp+RK8w6h2hV5px9pGbfWbWenj7+
fi5n2tJ17JrDPKmrJ+ve5b179Rwm1X65bbVjW9YcM+ykRQ6Tmje2jtPqc5QT
90XmkMOk6WvzqPszPWnXkuOy3GO30nPcUJ5Qc65Xeix9XedTJct5ehyfUwex
jGvmOcSoeirdR06qp9L9ILa9ufVSm5vOrKfats19LZTP1KxzB09zmBFteUoO
U1pXublCbz3XmzqeCeUwd/M8uU8+OQytyGHS9LV51P15erx/xY5JcvOau2PV
VN5yzV52zmFK66nmOL62PlY4HxxVTzl18l0vq+YwNfX0JIepzRJyzm/v1jWz
nmrbNqceP49brXMHrXKYEWPoXb+P7bclr49oy9y6qn2tl5I2rln23f3rur9f
j+UqOdOE1k8eOQytyGHS9LV51P1ZehzDpNaTc/x0PUdJneOGzhFLzpdDx9M5
x9rf6+9ZV7F6qjmOj50PXLe51bngbvWUu4/k1utO9ZTTx0rqKKc+Ss5nd+x3
NXV1V/ez9qcReuQws8fQkv16ZFvm1lVqfaP3rZI2rln293/v1nv3+nX9d9Om
yt1yO95EndGKHCZNX5tH3Z9l5Ht+7Pjj7ngmdKx6fa3kXDDneDp1fB07nk5t
Y8vbtZ5qjuNj54F329bi/GG3esrdD671WLoPrlhPd22f83zJPKl6js2zY79L
1dX3PnP33132px1uLcbQnP0z9/Hqbfnk/T20nN7z1R6rfP+X9T1pb/gmh0nT
1+ZR9+dodczyZH05x8ZPjl1bHB/nrr9VHZYcW7Y4h4g9Dj33ZL2f5exST6X7
Qek0K9fT53Hp86m6yJ0uNf13OWbWU23b9pg2tZwd9LwepscY2uJ9ZlZblrwn
p5YzUkkb1y6ffYw4huUd5DBp+to86v4crY9batYXO+Zrdeyamy+EHpecg/Y+
H7yb9slxfKtzgpp171JPT+orN3tYtZ7u+krstZp+1GJ9s+up5q9kf3pbDvPU
yLYsabdrf1g9h7mbLraMkXrlL9/LZx9yGFqRw6Tpa/Oo+zP0PH7JXWdq2u9j
1e9b7THr9/x3x8N360it/265resptkw5TP96ytkPcufdqZ5S5b7b90P1lOpb
1+WG1hdb1qx6arU/per5yfpa1tMORrdlbhvnzjuyLUvr6vr6rPPf0ccvb7Fr
Xe5abtYjh0nT1+ZR92cInQes0r4jM4GWfy3PB3vW05Nc4U31NPuvdb6gnsL1
Yn96ZqX3EG3Zp66+p5/d3qvsa6farW7tD7Qih0nT1+ZR9/uLZTC92rfmWG/2
ce7MY2P1pJ5a1pNz0mf18vZ6KqmXFp7+PkwJbQn3dtrH5DC0IodJ09fmUO9n
mJHD5Kz3+tn07OPcHY6N1ZN6yt1+9VRfL2+vp5J6aUEOM78t3+juOCh0bBQ6
bknNmzruud7PmSa17JJlXrdxF3IYWpHDpOlrc6j3M41q19wM5jPt7OPcHY6N
1ZN6yt3+z39jy3xbPeXWy9vrqaRePv99si45zPy2/NRN6rOa2POxaUZ89lMj
J4+4bkfqfs08s+5fn1utfUJW3JfYkxwmTV+bQ72faZUc5jrt7OPcVY+N1ZN6
Sm3r3XOp4+7T6+lJvbypnnK1rM8rOczYtkzVT+q5VtOsQA7z53MrttEdOQyt
yGHS9LU51PuZRnxGWpLB5M6z6m2k2duqntarp7t5rs+Fljt7W3vW05N6eVM9
5WpZn1ejc5hdbyOE1vP9/F275+wLs7chNn2snkPbnqqTHe6nXlvVyD7B2eQw
afraHOr9TD3aNXQMM+tYEt6i5/nxztRLW6fkMMSV5jCf+6H9Y+R7f+26UjlE
6xzmu87u6i93mpzll5b17vGKHE/SihwmTV+bQ72fqUW75h5fyWCgvdRn5tf+
9pa+p17aGlWfcph1tM5hUstt5cmxRk6WFLp/l4E8zVRKp6nJdXIfr2qHMrIH
OUyavjaHej9TbbvWvD97r4S+7j7LDJ0nv4l6aatnfcph1lGSw6Rylli+0VIo
JyyZ//u/pfPtZtdyfzOG04ocJk1fm0O9n6fmOMP7HaxL37ynXtrqWZ9ymHXk
5jB3uVxonp77ztMM5ns5I+ZZwa7l/ua4lFbkMGn62hzq/TypNm1xPAOMo5/e
Uy9tyWHeIfX9otxpUs+3cJfBjMxhVlj2TmVoyTEqrchh0vS18dT5mULHT97T
AJhBDrOGnFwj9lxJPtOrrG8/jnlSDzvV305lZW1ymDR9bbzd6zz2Hr36rXe9
XOsHAGaRw1BKDvO3nOuWapazore3Ne3IYdL0tfF2r/Of5f/Hhn+jPjsCgBXI
Yaglh/mtVQ7zdN4R3t7WtCOHSdPXxtu9zuUw4X9DEQBWIYfhidocpvR6mpzv
aeUuM3R89v1c6H5o/tRyc9bzPc3K5DC0IodJ09fG273Oa3KY6/tmyeupeUfl
MKljid3bFYCzyGGo9TQ/CGUksee+84vY67nLL11OaP7ccj9Z3irkMLQih0nT
18bbvc5rc5jQ41AukzNvzxym9HOg3dsVgLPIYajV4rOrls9dnx+Zw3zu51wD
LYeBX+QwafraeLvX+ZNrUq5ZSmxZodd65jAlucvdvACwCjkMNVoczzzNYULf
AypZVo/rYa7fOcotY06GswI5DK3IYdL0tfF2r/PTcpgn2ct1OQAAO2uVw+Rc
Vzzye0kly0+VJ7aM1DSh8q9ADkMrcpg0fW283ev8SQ7zGd9zMpW77yM9Xfen
/K2yl+86AQDYWa/jothyQ9eV5F7fUrKsu+dTz12fvx5Plq6n9TFoS6uWi/3I
YdL0tbFOqO8n16PkPHf3WqtrcHrV/wntCgDQQo/rP3p8t8fx25/kMLQih0nT
18Y6ob5rMpGa7xjlfHeptAw96wQAVuL3YZhFDrMnOQytyGHS9LWxTqjvFjlM
6lqX2OtPrsfpWScAsBI5DDPk/jZMzTKv92lL3dKKHCZNXxvrhPp+koN833Jf
y3ldDgMAf5LDkMtxDD/JYWhFDpP29r52l9nvcptZZzU5yOw/OQwAbyKHIZfj
GH6afY7BOeQwaW/vazIFddaqTgBgJXIYcjiG4UMOQytymLS39zWZgjprVScA
sBI5DDkcw/Ahh6EVOUza2/taKlMIfScoNl3q+etzNb97Iocp/5PDAPAmchhS
HL/wTQ5DK3KYtLf3tZxMIZS7hF5PPc6dZlam0KLOVvyTwwDwJnIYUhy/8E0O
QytymLS397WnOUxo/lhOc/fcbjnMrrde9QEAq5HDEOP4hSs5DK3IYdLe3td6
5TB306e+17RLDtPbbtu2W3kBeAc5DDGOX7iSw9CKHCbt7X0tN4cJ5SglOUwq
1yn5nZiT2223bdutvAC8gxyGEMcu3JHD0IocJu3tfa3mepgnOUzO95hylntq
u+24XTuWGYDzyWEIcezCHTkMrchh0t7e13rlMKF55DBhu27TruUG4GxyGO44
biFEDkMrcpi0t/e1pzlM6HHpb8C8PYfZeXt2Ljvnm/3b2KfcYEdyGKCE9zxa
kcOkvb2v5eQd11tqulCOkjNvbB1ymDXtXHbOIj/oR72yIzkMUMJ7HK3IYdLe
3tdyMo8V/05qt923Zffycwb74Vjqmx3IYYASchhakcOkvb2vyWHmOmE7TtgG
9uWYaR71zurkMHwzZpHimIJW5DBpb+9rcph5TtiGn07ZDvZk/5tL/QO7MF6R
IoehFTlM2tv7mhxmHtsAz4za/1b7XZSVyvLTSmUBuGOcIsdq76/sSw6T9va+
JoeZY/fyf5yyHexn9L634r6+UplWKgvAlTGKHHIYWpHDpL29r83+t1Cf3Ha1
c9mvTtoW9iKH+WWVcq1SDvjm92H4yfhErt3PMViHHCZNXxtHXZ9XB6dtD/uY
lcPcHaPdZcR390PLCN2PLT82/QyrlAO+yWH4yfhELjkMrchh0vS1MYxrv5xW
B6dtD3uYsd+FspPcPKXnayv0wxXKAFdyGIxNlHC+QitymDR9bQzj2pn72onb
xPpm5TB3j5/mMKHrZ0qWuUo/XKUc8CGHwbhECecrtCKHSdPX+jvld12eOHW7
T90u1rZSDvO5H/uu0d30sfux7z2lljHTKuWADznMuxmTKPXmcxXaksOk6Wv9
vT2HOXmbT9421rXr95JK5nlyvc0sK5QBvslh3s2YRKm3nqvQnhwmTV/r65rB
vLG+T97mk7eNdY3e764ZSixj+X6ck6tclxv6nlJs+auMr7PXD1dymPcyHlFj
hfdSziCHSdPX+rrLYd5U56dv6+nbx5p22O9WvF6ltzdsI3uRwwAl3naeQj9y
mDR9rZ9QBvOWOj99O0/fPta1w74nh4H55DBAiTedp9CXHCZNX+snlsOcXu+n
b99Pb9hG1rTbvlc75o0eL5+ub7d24XxyGKDEG85RGEMOk6av9ZHKYE6v99O3
76c3bCNresO+N/p6mhbre0O7sBc5zDsZi6j1hnMUxpDDpOlrdWrylLfUte2E
vt6w78lh4Dk5zPsYh3hCDkMrcpg0fa1ead3Nquuca3NWva1s9fJxrpx9L9aP
Un3uOt/dskqWcVeO1DJLHqfKU1rO2r5tTGA1cpj3MQ7xxA7H3+xBDpOmr9Xb
KYf5x4Z/q++bq5ePc6X2vdi1Han7JdPW3K8pR2q+FmVr0Z+NCaxGDvMuxiCe
ksPQihwmTV+rF/usNzb9aHKYPlYvH+eK7Xup/KJl/lFz/265sflyMqWWedGT
fm1MYDVymHcxBvGUHIZW5DBp+lqe0Oe5uecaOa/3kpvDXK/ZD70Wmye0jNhr
chgoU5PDXKcJjV+jcpjQsd6TbCWV6cTul4zlIcYEViOHeQ/jDy3IYWhFDpOm
r+VJXVcfmibntd5yM4/Uc6WPr8+F7sthoMyTsaY2jyi9nuR6v2U5rtM8LWds
2hLGBFYjh3kP4w8tyGFoRQ6Tpq/lOTmHCb0ey1lycpvcrEYOA2VaXQ8Tmu96
bUnN/dyyhpZxff1u2txtys2H7tZTwpgAzGDsoRU5DK3IYdL0tbDQOUDsnCG2
rFlWymFKspiV982Vy8b5asaakutkTjFym06sP2APxh9akcPQihwmTV/LE/vs
NWfM2i2H+c6c7p5LzROapiSLWXnfXLlsnK90vFl9jOpFDgOczthDS3IYWpHD
pOlreZ7W0245TM50pY/lMNBOTq4S+w7O3bRP1tdKq/WUXK/Yan2wGr8Pcz5j
Dy3JYWhFDpOmr+V5Yw7zNHeRw0A/9sG1aA9WJIcBSshhaEUOk6avjbFyDhPK
UFrmMCUZjRwG0uyDa9EerEgOA5SQw9CKHCZNXxtj9RzmO3v5TB/7bZhQbpP7
+zG55VnVymXjPeyHa9AOrEoOA5SQw9CKHCZNXxtjhxxmtb+V982Vy8a72Bfn
Uv+sTA5zLmMPPchhaEUOk6avjSGHkcNAD46Z5lH3rE4OcybjDr14X6MVOUya
vjaGHEYOAz3ZJ8dS3+xADnMm4w+9yGFoRQ6Tpq+NIYeRw0Bv13+rmrbUL7uR
w5zH+ENP3uNoRQ6Tpq+NIYc5J4dZtVzw7e63s92e3WA3cpjzGIvoyfsdrchh
0vS1MWbnMLveVrRquQDgmxzmLI4/6G3l42/2IodJ09fGOLGeT9ymHG/dbgD2
Ioc5i+MPepPD0IocJk1fG+O0ej5te0q8eduZJ3ad2A7XkQHjyWHOYWxnBMcR
tCKHSdPXxjitnk/bnhJv3nbmuO5z349D9wHkMOcwvjOCHIZW5DBp+toYp9Xz
adtT4s3bznih/e3zvBwGCJHDnMHYzihyGFqRw6Tpa2OcVM8nbUuNt2//U9fv
z+R+3+atcrZdPQF35DBnMLYzimMJWpHDpOlrY5xUzydtS423b38Lse/Z5M7z
Fqntdj0MECKHAUrIYWhFDpOmr41xUj2ftC013r79Lchh8pVcDwPwTQ4DlHA8
QStymDR9bYyT6vmkbanx9u1voSSHefsxQer3YQAAWnj7MRftyGHS9LUxTqnn
U7aj1tu3v5W7HCb1OzFvFqovAM5lnGc0xxe0IodJ09fGOKWeT9mOWm/f/lZS
18PIYv529/vGqeneXmcAuzJ+M4NjB1qRw6Tpa2OcUs+nbEett29/K7k5jDyh
TiirUY/wLn4fZl/Ga2ZwzEUrcpg0fW2ME+r5hG14Sh20UXM9DGVcUwTIYfZk
rGYWOQytyGHS9LUxTqjnEduw+vUPq5ZrJ3ffr/Fdmj7UMbybHGZPxmhmcYxA
K3KYNH1tjBPqedQ2PFnP3fnmLjdo7U3XGc3uv/o+K5LD7MeYwEzel2hFDpOm
r42xez2PLP/THOYfE/9q17/7/sE6vvelt+UwM/v+kzHjzWZnYKfnZ3KY/eyy
b3GmncY31iaHSdPX+juhjmfkMDXvBbPPxeQwrOCNx1Gz+/6TMePNtFtfcpi9
7LJfca43Hj/QhxwmTV/r74Q67rUNd8u9vgeUrPvumP7788vYa6HpYvOHjs9j
y9/5mB5W5Xx+T9qtLznMmkLXV+2yX3EuOQytyGHS9LX+dq/jnuUP5TC164/l
HLHj6dBzd5lMzvF56LEcBvp4ci1aaU5bMy7E1v9mcpi+5DDruTvPde7LKuyL
tCKHSdPX+tu9jt+Yw+Q8f3dOVpvf7L6P1Nr1NxdWof5+qzmfz81MU1mqHKZe
ztiYyr5KrmXMfe6UdpPDjJE7/same/sYzhrsh7Qih0nT1/rbvY5blz/2GfP3
6zXrH5HDpI7NQ/OmyrC70vdunwn+Sf39rWR7SvtrTs56N23oXL90rDip798p
OS+taavcrDt3LK7Zf3YghxkjNxNP7Te77Fec67TjCOaRw6Tpa/3tXscjr4eJ
5TG5ywsdM+d8rvrkuPx7ntJl7r6P/FRybYbPBP+m/v5WWic1fTU1zd21E7n9
PbccJyo5Ly1tq6fjuBxGDtNa6vOl7+lSy4GZTjqGYC45TJq+1t/Oddy77K2X
n3ssHvt8+8lxeWq5b8thQu/njkX/pv7+Vlonpf0193U5TLmS89KStgrVeWzs
jeXwuftDbHlubiW3VL+BmXL2U8ghh0nT1/rbuY57lz1n+aXHODnH2N+Pc+ep
OV4vWeZbbjnt/j1dzbHtifN9z5tTf2+6fba5RV+865d3830/X7rut/b90K2k
re7q/64eU/PX7A/X6XfgepgxSsap0L4Tew1GsR/SihwmTV/rb+c6XqXsT8/F
ao7LY8f6JcfqOcf6q9TzE7lt9Jk2tay3UX9/K62T0vPomvPx1Hl+6d8pbXX1
dMy+q9/YuJ3zWslYf0q7yWHGyBmjrtOmnoMZ7Iu0IodJ09f627WOVyr3k3Ox
u+nvXkudd+Ucy+fMv/MxfczT49Cc106m/v5WWicl/TJ0vp6Twzw9hz+p74fa
JLftcnOYVPaVk7HIYeQwveSMUU+mh1Hsj7Qih0nT1/rbtY5XKnfLY/oV/1aq
61q1x6Gp595C/f2tpE5q+35JzhrKA3Lym9P7/t1zOW2Xm8OknqvJab6fC93f
vd3kMGOcNvbyXvZlWpHDpOlr/e1axyuU+/v9oNdn4iv8rVDXT9W8d/tM8Df1
97eSbdL354nlMDnzpuonlX2FMvrrPKFlp+bdud3kMECJE48lmEMOk6av9bdj
Hc8sc+xalxafra74t+M+AivR9+e5ZuWl885ug7e2G+OE8r7QNNfnY9OcmsMz
h32JVuQwafpafzvW8Ywy54z9qWkc08M76fvz3J0Xlsw7uw3e2m6MFbpurMc0
UEsOQytymDR9rb8d63hUmUs/x8nJaWYfnzumh/H0/TFCn8dfpylZ3uw2eEO7
MV/sOt7QNKnrY1LLhlJyGFqRw6Tpa/3tVscjyttrnI9933/1G1Bvdv99c9+X
w6zL78OsozSH+dwP5S4njSGswz5FK3KYNH2tv93quFd5dzlmiJVx9bIDjHYd
M0tzmF1vO5DDrKN1DpNaLtTYaXxjbXKYNH2tv93quGV5dzpmTeUvu2wHwCjf
46Ixcj1ymHWU5DCpnCWW0cATxnFakcOk6Wv97VTHrcq60ziem7/ssj0A8JMc
Zh25OUzO9/zkMPTieJdW5DBp+lp/O9Xxk7LulleU5C87bRcA/CSHWUfq+0W5
06Sehycc79KKHCZNX+tvpzquKetuY3ZN/rLbNgKAHGYNOccUsedK8hl4wvEu
rchh0vS1/naq49yy7phNpMorgwHgJHIYoIRjXlqRw6Tpa/3tUsepcu6aSZSW
WQ4DwAnkMEAJx7y0IodJ09f626WOU9/V2c2TcsthANidHAYo4ZiXVuQwafpa
f7vU8d1v9u9S9m9Py/397xCUfJcJAFYihwFKOKalFTlMmr7W3w51fM0edtSq
7Hd5VO70ALAKOQxQYufzANYih0nT1/pbvY53v6ajZdlr/k2CXesNgLPJYYAS
O58PsBY5TJq+1t+qdfw91q5axpSW5X7yWzKf/+5ajwCcRw4DlHAsSytymDR9
rb+V6vju2peVyper9ftEyb/XnSrLjvUJwHnkMEAJOQytyGHS9LX+Ztdx6ntH
s8tXosf7Q+m/aZ16bqf6BOBcchighByGVuQwafpaXzPrN3cs3WEf6Pm+IIcB
4ERyGKCEHIZW5DBp+lpfo+u39Dd3V2//3u8HuTlV6HZXxtXrFIB3kMMAJeQw
tCKHSdPX+hpVv7Xj5qrtP+J9oEV9xfIYAADYhWNZWpHDpOlrffW+luPpeLla
+48a/5/+20gAAHASOQytyGHS9LW+etRvyzFylfYfOe6flFsBAEALchhakcOk
6Wt9tcxLZv1bzT2NHu9X2GYAGMHvwwAl5DC0IodJ09f6enrtxSr/TlCPdc9Y
v/0dgLeQwwAl5DC0IodJ09f6qv0t2JV/I+XpOmftc/Z1AN5EDgOUkMPQihwm
TV/rq+Tfj97lN1Jq1zf7+hsAeBM5DFBi9vE655DDpOlrfaXq9/Tv56wwns9e
PwDMIIcBSqxw3M4Z5DBp+lpfd/U7+tqXO6d+72nFMgDADHIYoMTs8xPOIYdJ
09f6+tTvCtnLR+8yvGU7AWBlchigxCrH8OxPDpPW89/i2fXWox5W0rvNV7FS
WQBgNDkMUGK1Y3n2JYdJ63lO/o8N/1rUR89cpwVZE8AYsz9XOOVGHTkMUMKY
SytymDQ5TLsc5m7sWm0sa1meVcfqFcsEnE9+0I96rSOHAUoYY2lFDpMmh3mW
w6SOC1cby1pe77OiVcsFnM3YM5b6ziOHAUqsfIzPXuQwaSvkMKHrkGPTpZ6P
LadFDpM7Tq02lrW+3mclK5cNONPIcXH1MXg0dZEmhwFKeJ+hFTlM2go5zCf/
qH3u7vna63Fi9VFzTfRqY1lNeXYZk3coI3CWGeOOse43dREnhwFK7HLMz/rk
MGkn5jBPvhN19/suT8aklcay2u9c7WCXcgLnmDnuGPN+UxdhchigxE7H/qxN
DpN2Wg7z9HdpPvXRahxaaSxr/Z2rVexUVuAMI8ad0t8eu05/9zlCznOh+6lp
a5bfiveBe3IYoMRu5wCsSw6TtlIOk/p9mFQO8zSD+V5Oy3pYRaosO469u5UX
OEPvseeaY9y9Fno+d57U/ZJpS8rTo+68F9yTwwAldjwXYE1ymLSVcpjcvCX2
fIvrYVqOQauMZbFy7Drm7lhm4Awjc5jQazU5zPfjkuwlZz1ymPXIYYASu54T
sB45TNppOczTLCZ1fXVNPdTMs+ttFO8RwCwjxp/SDCT3tdBYffd8aHyXwwCc
SQ5DK3KYtB1ymNL7T7KY2LFvzdhUm8PU5kgz/+Qwz8zO0HbI304wu62083Mj
6qJ11vF5nJo+Z3m1ZbtbR0v2UYBnvN/TihwmrefxUMn5+/WWev17urv5Qstq
kSWUnJfU1G9pmVf5GzVun/r+oN3fQTvvb+RYd80vQo/v3pdC71Whab9fu057
nT+2nNgyetadfRTgGTkMrchh0lbIYVb6K62PVCbTI4eJZVKp12NZ1938sedm
nKed/N7wlj7zdtp5f6vWxZNylcwbuwZmppXKsgq/DwOUkMPQihwmTQ7T7lwj
9hlj67q7m+aam4ReT82b87h13eXWy8me9JmaHK1VHz29XVp749h4mlXrQg6z
TllWIYcBSshhaEUOkyaH6XOukbpO5mnd1eQwoddyro8ZWXehOjldqxwmZ/8o
adeZ7X6ip/Ueu6bt7rq363Pa+bkedfHkPaPVultPO9qq5ZpJDgOUWHmMZy9y
mDQ5TN9zjev5UKu6a5XDhK6RiV07M6rurnVyuto+c9dWuftHi376hrbJkdvH
W9V5qm1L9g3tXJ5FtF53z+W/hXr7mxwGKCGHoRU5TFrPHGbXW8s6iNVLbL6c
c6K7z7xzzrVyc5jS87We+9IbtMxh7vaRnHlq18/9mBearkWd390Pvaad0z7b
lztG91h3r+W/hXr7mxwGKCGHoRU5TNoqfW2VcrSU2qbQ8X5uDlPy+O61nHO5
kvO32fnZCbfa8+PUPiCH6S/WrtfpWtR5qG2vfVE757nbvtDxaCqjCbX757nY
67Hn7/ar2HN3y71bT2z+VBlD5Q6VP7X9sW2Ole3zGn+SwwAlYmMslJDDpM3u
a6ljuJ2VbFPp+XjsnDt13nW3jpJz+FHnaSfuEzE158o57fZkX8ktg1vZ7Ul9
39V5yT5Qu/6S7bvu17vMF+ub3/PEpr17/fvx3f3Q8krmC92PrSd3/pJ5U9OU
ljl3XanX3koOA5S4e3+EGnKYtJl9LXQ8fIra7co5T4qde6XOte5ee7K872lm
193Oas6PS8/Ba9t2VLvvLPe8v1UOk3oceu5JDnOynBwmZ9rr67l5TyobOjGH
qVm+HKaMHAYocfJ5GWPJYdJm9bXY55JPllPzOWgvvXKYu+3JPd/Kmf5u/pxz
uFb1+tbxv3UOc/c4dxrn5+Vyx5sROUyPv9Pb+a6dQu8XT3OYu2wuNW/sfion
mpXD3JVPDjOWHAYoIYehFTlM2ui+NjIXmT2O9MphVv2TwzxT2u65+VnpPLPa
fXe545ocZk3fOUFJzhJ6PZbD3a0z9vqT+ULT380Ty0pqcpgWZc4pW6ocbyaH
AUrIYWhFDpM2sq/lfl7ccn0zyWHG1VkrM9f/5nY/Qe5Y9rSd78ZP7fxcyXtR
aU5z9zj03N1743X6UEZxXU7O69dpUjlHzvJKtjVV5tyy5bz+RnIYoIQchlbk
MGmj+losg5HD/D3fmDPotc7TZrfXbG9t97fRzvt7msOMXn9vq2Tw9tG/yWGA
EnIYWpHDpLkeph85TP+6as31MGPb/Y208/7kMOH1PXnfa1kOfpHDACXkMLQi
h0mb0dfkMOn5Zp9zjTxPm91O3+Qw49r9rbTz/nK/u9Pj/a1mmSParvX2rriN
O5LDACXkMLQih0mblcN8/turv5d+x72HJ7nErreR9dTLrPI4P38H7bw/dbEe
bXJPDgOUkMPQihwmbeb1yz3LsMJ126uMY6uU486qZVvlOrFdbuSb3VbauQ31
sRbtcU8OA5Twfk8rcpi0FXKYGet5Sw6z8ni6Wrm+y7Na2eCbjGQ+db4W7XFP
DgOUcExBK3KYtJF9baV1fV7vOd7MHsdWPkdbvUwrlo/3cZ3KutT7WrQHwHOO
K2hFDpO2UjYycl3XcaZH2WaOYyufp61Wnm8r1hfvJodZl7pfg3YAaMNxBa3I
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
lRwGKOFchVbkMGfZZVzYpZwAwLnkMEAJOQytyGHOssO4sEMZAYDzyWGAEnIY
WpHDnGX1cWH18gEA7yGHAUrIYWhFDnOWlceFlcsGALyPHAYoIYehFTnMWVYd
F1YtFwDwXnIYoIQchlbkMGdZcVxYsUwAAHIYoIQchlbkMGdZbVxYrTwAAB9y
GKCEHIZW5DBnWWlcWKksAABXchighByGVuQwZ1llXFilHAAAAC3IYWhFDnOW
FcaFnDJ8xrAVygsAAJDi/IVW5DBnmT0ulKx/dlkBAAByyWFoRQ5zjtljQun6
Z5cXAAAglxyGVuQw55g5JtSs+zOP8QwAAFid8xZakcOcY9aYULve6zhmTAMA
AFYlh6EVOcw5ZowJueu8+13e67zGNAAAYFVyGFqRw5xj9JjwdH1yGAAAYBdy
GFqRw5xj5JjQYl2+lwQAAOxCDkMrcphzjBoTWmcwxjMAAGB1zltoRQ5zjhFj
gnEHAAB4IzkMrchhztF7TDDmAAAAbyWHoRU5zDl6jgnGGwDg/2/vDnAc1ZUo
gG69dzZb+xo9RUPng+2yC4PhnJY13cQB4wBS3SEJwJvJYcgih3kGGQwAAMB5
5DBkkcM8w1nXA9cZAAAAOQx55DDPcMb1wDUGAADgP3IYIj7Hy4qNNtlzZe4B
AAD+UaMS8fdY+bPgj2O8XeZcmXcAAIDf5DBEyGGeL2uuzDkAAMD/k8MQEclh
tu8JOlp+1Gfbt/ZcOUyujLky3wAAAPvkMESOgUjuEfm7d5kcJt/oXJlrAACA
Y3IYIp9p25J7tNzb0nr/S2SZHCbHyFyZZwAAgDI5DJHvGBrJYaJZTU9fOcy4
3rkyxwAAAHVymHXc4Xuf75TDRLIYx3i7nrkyvwAAAG3kMLRmMJ++q+YwjvM6
GQwAAMC51KfMel9S7+fD9Czf67fdV/ZF58ZcAgAAxKhLyf6c3r185LPeUn5S
evzz99Hy1hzme5/5LTIn5g8AACBOPUrkGIh+Nu42f9n+u9dKz//OaI6e05rD
9Oz7G0SOAwAAAOLUoUREso87/dSOcefBf1rmwDwBAAD0U38S8dQcZrt/bz4f
WvIqAAAA+r297iTm6TnMdj/feF7UPhsIAACAMW+tN+nzlhxmu79vOj9Kn6MD
AADAuLfVmYx5Ww6z3e83nCdH31UOAABAjrfUl+Q4+q6jFVrm/j/V3vd7AwAA
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
   "], {{0, 0}, {
   1122, 761}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->500,
  PlotRange->{{0, 1122}, {0, 761}}]], "Output",
 CellLabel->"Out[301]=",
 CellID->2006014202]
}, Open  ]],

Cell["We can highlight the components:", "MathCaption",
 CellID->632012813],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigureHighlight", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}], ",", 
    RowBox[{"MemberSet", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"Query", "[", 
       RowBox[{
       "\"\<SpikeMin\>\"", ",", "\"\<G2S2\>\"", ",", 
        "\"\<path:hsa04662\>\""}], "]"}], "@", 
      RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}]}], ",", 
    
    RowBox[{"ORA", "\[Rule]", " ", "True"}]}], "]"}]}]], "Input",
 CellLabel->"In[302]:=",
 CellID->785230029],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Pathway\"\>", "\[Rule]", "\<\"path:hsa04662\"\>"}], ",", 
   RowBox[{"\<\"Results\"\>", "\[Rule]", 
    RowBox[{"{", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
tSNw+YYu+SbYyRr4BF8rjRZIHYrR1/VH8uZ1sUJ7HN5JSoIiKalzu2ZKTXOH
lPSGlHRVJS+3xGwKtEhJ+auBlAR8SUlQJCV1Tkq64WealHRy3atqIJqS1hfb
vSlp/Zj4+3q9pDIQSUnADykJiqSkzh1OSeuJWXRm1X9KWrc/umQz/8ysWLkh
uEHm4N+U3JzXSywoLcF5vV63JiUtbgHwPlISFLlFdi41m8qnpM2LcHI1REqK
zus2S8IuZyaEJ7t225lyckOXtNNl4YxUOFoXqDngl+ADgfyZXlNV9OB3I4C3
kZKgyM2xc5enpGMRKRMljh0/lXkt/5F45vNzKenxZrxZJh99C9SnpJpwlE9J
mdNh3Ty3A3gPKQmK3BY7dywlbVJDu5S06/jZzBtPpqTK+aSU1ElVr1I8L+5M
SfmTImynmwK8gZQERW6InTv5LCm6/FhWSs2misdPqliLlHSsj5OlpEtqaFEV
X6kDeyPz1vc4X78I101VWDz43RpgblISFLkVdq5+tp+aHa1/Xb84k5I2U69o
szPv1nctVSZcvkhJl9bQoiq+jp2DLX7y+9feh1lJSVAkJXXucKIpBo3Ds6nI
h9qrPwCvP6IapaTf+5PgfCnpqkour4ofo6QkYFZSEhRJSZ3rLSVFI9Kxo+hA
Sto8MKopKSVdwlXiWpnz6H5729x0ZIB7SElQ5K7XueXEP9z948LPnM9PtHZ1
LdxKqmvRJZenpM9dYeGSrVzeVBcKfrhrwASkJChyv+tc3YfBzzvWtasS3PkA
WN/mAz3d66qtXN7ae7rPEA6f+EAPpCQocqfrXOdRIhWUag6qzruWanNlyTO6
TUmN6mRc7iAwKCkJitzjOjdilPhUp6R+XNiv8y7cyuUNvmcEGMuukwjogZQE
Re5unVvGT0nfY6zyYDu8oRtISY3qBOBOUhIUSUmdGyslpR7TrA+zYj1SUucp
qV21zMHhAcAEpKTO1aekbyo58G7TZ0mf4NHSrnX3bqup4VJSpraTW3HdIGPv
d1kBoDduZJ3blWsyEalYRkrqZ1tDpKRLamB6bjEADMotrHPTpKRG37g7vMox
I6akVIWb6Bp+N/JYtRByo4He+LskKHLz6tzhlLT546Dvknu+cRf24tPmX284
vMoxE6SkJeazM8m2ayoTc7uBfkhJUOS21bljKWnz4v5nSWEvGhU+uVafG7r/
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
mEs2tix1aWi9MPNWz9+4k5LWcqfenjJMxr4elJT0Bl0NxT2NiU5vvpepJQgs
6yXLKihFc80m/hQjUvT1WClpfYXP3PpvbOZlJutvsTs1QSYsk0lJmzw1bkoK
FS8j+WdJS+wxUGZhtMLMVqSkDuVOvVWB1K/Myo4elJT0Bl0NxVWNydSTmdt8
HUtJNUsqE1P0MVb/MiP/fbdYQ+Vuerbkt/CS7u9w/t6f3SkpH4u+S/ampNEV
v3G3BPEnuvqS/lpdZitSUocyR8snMVWOLmQy9vKgpKQ36GoormrMmXqW61JS
6vt10fLRCi8ZjQul7u/rAqkVb2ngxSbrb7E7Z1JSmIY2L/ampIcGqVZ+MJej
KSn6LOlrb0qKNpJupY60uw5qnpHZ+/RMSnqD3obikvYsf05XlvQnddF1M890
zj85WhJ/shRdcn4orlW8p0eXj3sLmKy/5SnZcsGzpHempPDdYkr6pphM6tks
yf/qWVLnlpj1u6m17mogz+j2lkGelPQGvQ3Fmfak7kHrS1Cx/qUu/lQWq0xJ
qU0cHopGai7m4a2/w45Umqy/5bYdSkmbEBS+WIIv402TkjLv1qSk1LMkKWlK
qXz0fTe1Vvum8aSe7xpkSElv0NtQXNKeTSU1n9etC1yVkr6B6EcqJaXiVW+7
pl5+MjCfefpbF2Q28af4ovgQasSUlJfKL9+DJPotu/Ct9ZL8r1JS/4rJOhqd
xr6kUMFeHpSU9Aa9DcWgKak++6SKRbd7fihgh+og830ZXbj+kZKe/ZGSBrKZ
LZs8v4QdPSgp6Q06HIrzTQpT0nfJ3pT0/cA2ujB8N1o+lZJSlUhJPGNPkGn6
IyVJSe+0uSl8urxHcy0paVBS0ht0OBSXN+l7r6mpOR9wzv/U19/hrqHSqHc9
KekiUtIPKem8Ia8k7DHq/eL1pKSX6G00GqWk+sJSEmdEH1yOsTelpIuEj5sf
9OA4SEmXeHYn0trj5ynHSEkv0eFoXNukXbU9NpWJuXAQuN96D46xN5+PR6sf
xiclXWKMqwdHud0PSkp6iQ5H48ImPZU4OhzV1tZDLe59/vyq58uHgneSkq7i
0jExt4ZBSUkv0eFodNikvSbowgGppycvHI1Nl184AiAlXcUFZGJS0qCkpJfo
czT6bFW90dt/TD4lved5yre/myXwKlLShVxDZvWS2+J8pKSX6HM0+mxVvdHb
f0zls6TRB2fz3cLUu6N3E+iH68ms3CwGJSW9RJ+j0Wer6o3e/mM2ySgaFkYf
mbCPDzYGeA9Xmym5jwxKSnqJbkej24ZVGr39BxS/Yzb67SD65OiRlgAwgdFv
i68lJb1Et6PRbcMqjd7+Ayr/Emfckcl3atx+QQv+LgmK3DsGJSW9RLej0W3D
Ko3e/gNem5K+y8ftGlxOSoIiKWlQUtJLdDsa3Tas0ujt32vzbxpE/yJp9NtB
8VnS0L2Da0lJLbjITMaNY1BS0kv0PBo9t61o6MYTlfq7JM+SICQlteAiMxkp
aVBS0kv0PBo9t61o6MaTEv1WoZQEISmpEdeZmUhJg5KSXqLn0ei5bUVDN56M
/PcJ7Xf4ISU14iIzE3eNQUlJL9H5aHTevIxxWw5wnpTUjvvLNKSkQUlJL9F0
NJaetOtmqu83bxGgH1JSO+4v03hkfsJ5UtJLNB2Nvyr//fndw4+UxJ0e+iSg
F08PP12Qkppyos3BNXNQUtJLNB2N5cUp6eNIex8x4Ydx4CMlNeb8moNL5aCk
pJeQkpp2//6N8hS7O2RM3kxKas35NQEpaVBS0ktISU27f/9GuZ/bXIbBeS0p
qTVn1gRcIQclJb2ElNS0+/dvlPvZ0XnG552kpBs4uUYnJQ1KSnqJB1PS948X
fl5vFn7fyi/f1CMlcTN7uYZReiEpCYqkpEFJSS/xVEoKE1DqrfzrVAEpiRvY
xfWM1dtISVAkJQ1KShrU3t49kpLC5YdTUr5aKYmm7OJ6xuptpCQokpIGJSUN
atCUdCYxSUk8JbWLv98CTZXJ3BmvPWyO1bZu3lXtcTq8jZR0GyfXuKSkQUlJ
g1r3bj1Pu2dKFlZek5I2f1hU/Puj8C0pifvVnFNPnXrnXd68zvsL43JyjUtK
GpSUNJYl5lPxmXAPKSn1nChMSfW/Skm0VnlCSUmNKgS+nF+DkpIGJSUNatO7
zcfaxfKXN+aelJSPSE+lpM/sB9vL7T2hNnfD9ccX4cca+Rf5BqQ+JIl+ipJv
XmbrmzrT41Q1OMAZTq5BSUmDkpIGNURKqo88mSgUhqn85tp1Mz8Cj2yXG+w6
ocJok4o8+ReZzLJ3K+u39m49WqDI6fAq/i7pZs6vEUlJg5KSBhXOmoqTmXYD
koktvxN/f5RZshF9V0riNns/dvgepeuSYfm9uSncRFhbfQiq36iURJ6UdDPn
14ikpEFJSXP4zmfyk7d2W89/Ee62HymJy1WmpHxOuTYlfRemQlBqK8c2uvf+
7nR4FSnpfk6x4UhJg5KS5lDTWSmpnVcdbG+T2rmZMBK+OBxPom04nMUObPTA
se10eBUp6X5OseFISYOSkubweErqR6M+Fkfgke1yg8zOjR51qcNyXXKzYnGV
zVZSqxdfp7ZVs/Wl+iCvL8kEpKRHOMvGsusSSj+kpAlUzmHGGhCtpRMD7dxN
knqqzoFGjPOkpEc4y8YiJQ1KSppY/oPi/o3Szs9QTWWvgXaulMT9pKSnONEG
MtDUizUpaW5S0j0Gaip79bBz60/bFue4b9yRISVB0UBTL9akpLmNG5F+jNLa
UdrJAQ/u3BbPhm4wUFM5T0qCouFmX/yQkqY3dEr6jLMfR2kne0lJew3UVM6T
kqBoxNkXHynpBYaOSD+GaPYQjeSAFnv2ezJuzsr1r5tz9ls+WsOmtlQ991wH
nAuvIiU9yLk2inEnYC8nJb2BlHSDIRrJAY32bD4BhZteJ51Uscp6Lu/LhnPh
VaSkZzndhjDuBOzlpKQ3GD0lfUbYm/23kGPapaTwdfT5UVgm+iKMVPm41I5z
4VWkpGc53YYw9ATszaSkl5jgDO28/Z03j8NuS0mVz4DCcFS/upTE5aSkxznj
+jfBHOydpKSXmOMM7bkLPbeNM/r5xt35hb5ux+WkpMc56fo3xxzshaSk95hg
QHruQs9t46QWO3fzJOi7cP1luc2LcJXUV+k29bTrRciJ8DZSUg+cd52TkgYl
JXVr6cnTg/HvumrMWrcN47wWO/f+A+aeLToR3kZK6oHzrnO9TaWoJCV166/2
//787uGnt5HsrT0/+mwVl5ggJd22OScCPMKp1zMpaVBSUrekpAxN4mbX7t87
n9LeeXd2FsBTnH09k5IGJSV1S0rK6LBJn15bxVXs3zzjA89yDnZLShqUlNQt
KSmvw1Z12CQu5DaXYWRey98l9cNp2C23j0FJSd2Skop6a1hv7aEFezlkTN5M
SoIiKWlQUlK3Uilp86/Ppd79eb15a1dV/aekT2d7uavG0M7mxHm6Oc8wAvyQ
kqDIpXJQUlK38rGl5nUxJWVWl5IO6Kox3GZ5padHnV5ISVDksjkoKalby86U
FJYPi9WUGSslfXra0f20BOAeUlJv3Ik6JCUNSkrq1vmUFK4yZUr6dLOvO2kG
wG2kpA65GfVGShqUlNStfEpaq09JYbGwnhFT0qeP3d1DGwDuJCV1yM2oN1LS
oKSkblU+S8o8J6pJQ/m1pKTh2gBwJympT+5HXZGSBiUldet8Sso8P+onJUX/
MPwp5/tyyZgAjEJK6pP7UVcumWNwPympW8vOlJSJP6nynaSkX3/79PBzSTdH
P+oAdpGSuuV+1A8paVBSUrdS+SV8AhJ9N7Vk/Wu0BinpZHfOVwIwCimpW+5H
/ZCSBiUldavmKc89P1LSru6crwRgFFJSz9ySOiElDUpK6paUJCUBdE5K6plb
UiekpEFJSd3K/SsDt2vazcfzkZQEcIyU1Dl3pR60nkrRiJT0Kh2OSX1KWqe2
/MLMcikJ4EJSUufclXogJQ1KSnqVDsekMsVsklG4MLVcSgJoR0qa1cmvlHzX
EhA+BmFYUtKrdDgmB1JSJv78LDz2LT4pCWAvKWli6zvasaB0eN3Da/VJShqU
lPQqHY7Jrmc9lSnpWFC65CLW4QgDwAFS0lWkpEFJSW/T27DsijPrvzPKp6RN
4fpnSWe+YPDpb3gB4PwdLVrD5na5uXVmUlJqxc2S1K+f4GZdX9uZW/xhUtKg
pKS36W1Yjj30qUlJex8qFS/j9T26bngA4ALHHgZlPjnchKAwE6VSUipJFetJ
bSu6SuqtsD03kJIGJSW9TW/D0nNKWjey/hLX2wgDtOPvkkZxLCXt+nVzr9yb
koovPumUVNx0qjH3kJIGJSW9TW/DUplilj7+jbvMp2rrMpeOEEC/pKSBnPxq
xK5fPy1T0if4il3NpjcJ605S0qCkpLfpbVjqU9JXcXmq8PmUtGl59LrX2wgD
tCMlDSQaNyrLZ36NPt+Jvsg049izpPPr3kNKGpSU9Da9DcuuINP05/DIbOJS
byMM0I6UNJaab0SEJVPlN8s3t8LM6uF98/tr+CIsn6ohU9v3rdIINSElDUpK
epvehmWClLTuS+XdB2AOUtJAiqlnFIeDj5TELlLS2/Q2LOHHTQ+6qkef2Adf
APORkobQ7pb3iOVQSnqwy6MP+GtJSW9jWFrbjPAE9yOAFCmpRiahRH8N7yOX
N2D0u9KuXjze38cbwDFS0gsZmaZSwzvNvYk3m+/ona9H9S7pu5RUKRN8ipno
kj11OCVdtfXzlTy+icPc+gclJb2QkWmqZnjFJQY130E7X4/qSUl3ymSf8HFS
WKxFUKpf68JiN+inJV/u+IOSkl7IyLS26+5Tc/F0gaUTm7ncd/427vE5X4/q
XdJ3KalSPiWFv26KXXVA7g1K9Vvv55TppyVfL7mkzEdKeiEj09qBEc7ftg58
+gcXWmI+f976xzo45+tRvWv7LiVVKqakTyKSXH5Ank9J4TGzqTD66+bFplOV
b2XqCVuSen2/BzfNGVLSCxmZ1k6OcHgxD+cz8IjU/C18axTz9ajeJX2XkiqF
QxqNA2HJFhf/+grDRqaWR0tWRp6atzL11DQg7MKd3LsHJSW9kJFp7aoRXtIq
i93vko7r3SMqG5z6Nazh4f786ZIeDde7vOVo39cuT0kPD+WfTvZl06/UkuXP
kV/SO6J1k6JloqMRNj7VnQdfpBbe7/LDiXtISS9kZFq7/EaWv33/9fr353cP
Py0OrWWi/+9wtHeP77Vd+y6cKWUmIUPsu109Gq53eYf7vtYiJT0+pCcHNtWv
1K/H3rpBTcM6T0nfX6UkDpCSXsjItHZPSlrfER6fY0tJh3v3+F47s+++04/o
6iPuu3yPRu/dVX1fk5IqOxW9eq/fWi+JvhWWbE1KuoqUNCgp6YWMTAv5INOi
5m/9y+Az7WL3H58sXT5lWvfu8b12PiVl3n18r+3dd7tKPt6va4/MY/VISbMq
ZrTwTpQqnLpzrV9k3kpVUlx93dR2A1UjbBJDkJLeyeBcLnoBPz/ONZUsg8+0
i717fLLUbso0+r7LrzXivttV8vF+XXtkHqtHSqJ/j+9KKWlQUtI7GZwWWqSk
yu0+Psc+PNMujlL9lGkz8j1MmWp69/heO7nvMisON93Nfxw9eu/q+97U9ANb
+dHWDbcJM/MfPQyCfTEoKemdDE4LjSJSscKfmfZm0/Vz42/571rRqlL1b2o4
07vo6rumTOvCl8+1GvVub5ap38u7Doam++5bJhzS7/IlEK4Y1hOtM7piu97V
Hz9hB8MCt03mn9JiYPNDnS98+cDWdHC9PFXsvGJLptdPx/tpCbtISe9kcBpp
cVcKJ1ebTSyrILOe9NZMjDcz6tRbqYVhDZf0blPg2Hxp14qNpkw1vTvw0Kdm
L0f3WtOUlN93P+/mc0H0dWaf1tf5+JFZeXweO2gP9O5Blw9scSSXP1N264HN
dzDsb2rhecWhrq/n8ra9TaNdTGtS0jsZnEbO34+KdYabWA6lpLBAavXK+o91
Od+1z0Up6afCza+7ar5wpr3pXeuUVF9t0323/D2tFJek9mn+3VSZ5dKUdPjI
zHRhV4ELJ/NX2ft3SdcObHgUFS8FrQc238FUnS12YnGo6+u5vG1vc2DY6YGU
9E4Gp51jt6GaClO3uSWbYn4Kb7LMZmHlVDy6cP1r5qZ8zGf/lOkrNc1esrPu
ysov7N1VKemnzs1e3lVti95lZrOpJcVimVgRFvuu3rR3u6b0mxfrDq5b++CR
+aADp3xmv+dfPzWwu67z4VpXlay/AX3MGU7bNeb0Q0p6J4PTzt57UGVtmRvc
EvvToWjAWRLRKZxXh1VlEtZ3yYFe1/TuzCx0M9s5MAVdV9KidwdSUnTXZCJt
ZbVN991m10T31LqezcLiHk/Ngb+ba9q7A7PuaAeXxJz/8iPzQpc8S9oUuPCU
Lx4hlw9svoOpOlvsxOJQV1YSNu9b1RKEsmiBVEsOt2o4L+nmfKSkdzI4TZ28
HoZ3tPw9bsnOkL8rho8bTj4/is7ez3Q21buTU6bUwl01XzLTzuy7XXEmujvW
O/qRlJTfd0tdSkotTO2sJTsHXlfYtHeXHJ/HDsvDk/mrnExJ0QK7+v6VORKK
yy8c2HwH6xeeVxzqyko2L9aVf1Y5KCyfeSusf26NdjGtSUnvZHBa2zXCNdOG
zDV2Saek8EU4ne4hJeULHJiFRmeky+lv3LXo3SUpKb/Hm6akfIHU7ojuhege
ye+vJT033rxu2rsDx2emzTccmRc6lpLyBY6NZ/FY2ju2xwa2poObmNBoD15S
c+retPwZecJiu15Mr91epikp6bWMTyPLn2qK1dSZfzc1bd68lfo1H4gqJ96N
7gK7pkw/NkvWb60dmOK26N3hlFSfixulpJre1eSX/KQ3U6Cmqm8lTXt3Zlaf
afaDR2a9B/+vstHxzA9gJwNbeZt43JJIRp9YSsqsG3YztdasOt/RpEhJr2V8
WthcCde/trstfiPPj01siYqWCRfmi4XLWxxUu2Y1TX8a9W5vlonumtTu7iQl
fdsTZoHv8rDx0RXzv26Wr+tp17v64yffwfD145P5Gk+lpMzBsHkrtUrnA9uD
ZX9KyrwIq3rPCP8ceE+3gt2kpNcyPpeLXga/9+Wm2937PKLRTw9z0blTkn3X
1b57vF/telfvwWdJcw/s4zY3r/Wv4evPn3fAzLrr+m/ry+OkpEFJSa9lfC6X
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
FZbMNDJ/LmQurd8CZ4bo8XwkJZEhJZ3kzHqD4n2EPl0eaqSk0S2xMA4tRKPN
Iz/F47zmXFiCD76iy/cO0eP5SEqKiqbjpzw4DlLSSc/uPu7x+HnKMVISoSUx
2YNrLeOkpG+D699dpKSp2TU/pKQznFYvISUNSkoiFA6dE5wWbvmUvdauNqfe
iv5aX3m0zszc+Mfmdf1bA03FO3RgDKUkeKdddxn6ISURqpwEwknjzjMrb3kH
UtiuIVq/m3qdf2uUqXiHxj16ryUl7XLswxlGZ3cPSkoilBk6ZzoXGn2eecPp
cCAlhatk3hplKt6h0Y/eq0hJX8ULwqaA++l72NeDkpIIFYfO2HKJOeaZTW9/
e1NStHz+rcy7/UzFOzTH0XuelPSVf05Uv5D52NGDkpII1X+V6IbGMLGZ5pmN
zohdKSlVOPXW+hmTlLRX5Wh/58zr1+uFqRryZfrZNVLSV7h/lz+fHKXWuquB
PMaUaVBSEqH6oTPInDFTSvr26NqTYldK+rXzWdKy55t4TvaNzKBt3gp3U3HY
K4v1sGukpK9oSvpeE6SkN5OSOpc5ee93W5fv2dB8dg3dnfuUySyJj9w3M8Bw
eU2x6MUnM4+9tl8XVrUrJe1KQ5lVepuKdygzaJmDrWaoD6QkhpA6kG4+dLlf
5gCgB8t0n9nWdPmeDc3nwNAZbQ5Ygkl7eKVKLcxPLKMRYP0iLHx51y6pM3/p
Xuqm4sViS8WfJjnHNzLDtRnPzJinjszM3uxt13iW9JVPRtFrgsnzS9jRnZOS
2OVYUDLm7BKdzIfzw2Kx/GSyMlI16uDJmvNT8fWkeh39Kt/aTMulpF2KKSl1
SGd2QbRY8fb97K6Rkr5S+WhTIPUrE7OvOyclscvh0TPs1Js+JX27eeaEevyi
3cNUvEOHU1J4BIZRKP+rXdOnmjO9mKSYkt3duRfeah2QZ5wZPSNPpdRUcDO3
zBcrziQfT0nfzh7Yygsv3aOoSUm/sn+jlCpTf2zbNTAEKalzL7zVOiDPODl6
LgjUOJySvmpmkp2kpG+XU9uKLl960nhsBrPUpaQwNKXKZ4pltiUlQf9cQjuX
usZ+b3+pScj33U3JcMVUJddez+tXd0Ceccno2QXkpaaCSzol7Z1/9paSvh0P
l0Rvo38t+f353cOP03mj/q6auW+mCoS34G5Tkr9LgiIpqXOZy2xxChGdq4Rl
UtOVa2cjUtI9rho9VwYyKiPPsZSUunD1kJI+ib/jlpIGUgwvt/1ISdA5c6HO
nUlJNfOT1CpNU9L3qEvNLs5s6OWuHT37gqjwk5Yw2qyXh2XCtzJlUtt6cJ4Z
NnvTEimpW1LSDylpLXM6R38Nz/f72sqNotNU+pG5nkffCucqx1JSuPDYcZKa
S6wPPFebC10+ei4RhMwzv+OQmVk9no+kpKjoXekpD46DlLSxpKcimbdSS5jD
4+cpecv+lPR1OCVtVr9kNnLm+kO9RqNnp7CWuS69JyXl572LlDSvOYZUStrI
ZJ/NVDk6aZnjqGBDSurcgZQUvrs3JaWKnexI6lcp6VrtgpJdw4+qT8nv0uEg
fLIp6Vts87r+LSnpWXMMqZS0Ee7WZZWSwl83xeY4Kth49i5D0TLj3yV9fOOu
paYDaO/Ap5QTP6VnSet3U6/zb0lJD5pjSKWkjWJK+iQCUWoywwSkpM7Vp6Ql
+B835BfenJLCfn386w1ttB5AFw069+Dxuc5Ke1NSuErmLSnpQXMMqZS0cSYl
rT8hYSZ2a+cyEWYjtTAsH60nX6xRStr7FjXuGUC7iW71cHDuTUnR8qm31ims
GKB6GI3JzDGkUtJGTUr61P2NEtOQkjqXSkn3/0hJo7htAO0p+hSd0lx4s6v5
3HhXSkoVzr9V+YzJeXpS+PFjytMt3UdK2sjknWNvMYERT+1XmTIl5e8pDsiT
7hxAFxD6kZq4ro/Sy4NSZqPtniVJSc+aY0ilpLVM5o0uib41aF4mww7tXP5e
fLPbunzPhmZ1/wDaZXRlqf7g98wm8pfKpfHfJS1S0nPmGFIpCYrunP1yoV8r
fVZ4mAPypEcG0JWEfjyYktYF9qakMPVk3qqMSFJSC3MMqZQEReY2g5KSSHlw
AO07ehCmpGX1lZirNpF/2p6JMN/ym9f1b702JXXSl06acZKUBEVSUudSn1g+
4rYu37OhiT04hnceKlBjufRfb6i8PC4n/u3uyuxTX/J8rzvRSV86acZJUhIU
mdJ0rvWtdtdN+bYu37OhiT0+ho83AL7OH43RNJT/+EhKaiEc/88T05g5hlRK
giIpqXNSEgf0MIauLXTi8HFYzEGZmnNP5W93rPv9SHVq3bv6bt437hVaDVkF
KQmKHj9PyVukJPbrZwz7aQnvtHc6etUMdpnxf+LwuE1flj8fLdVX8vj99Oa7
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
Yd9cHtcX1b1X2rDaXSseOzbW9V9ydI1+iI7e/o+UBBXMbAf1a6WrCh1OV5GS
RtHnnrLXblbzOVLq1zM77radfm3lox+fo7f/IyVBBSlpUN2mpI+D6iLhJ8wP
enowurZ0mZI+U0zkBlIc7c2plHp9ZrtN9/i1lY9+cI7e/o+UBBVMgTp382Q4
b2/LG40JdOXp8/IP0bY9MixvUxzn5c+/Glti6SZVybrAks7C0dXXx8Z69ejB
s6ktrDysKlyl8qgb+sgcuvE/pCQocg/t3NLrx9SVjXd0weOchjeoTEmfIC59
SuEimkei60Zjcn7rYf7KFNi7St7Qh+XQjf8hJUGReWznhk5J3y5cOybAXk7D
1k6mpHwlmTv1Znn4a7RAfQiqLFnTi3zLxzJ0439ISVAkJXVugpT0cZiRFv0k
fP1r/qNy6hm9pupT0if7N0rrAuFTm+J2o8VSYSeT1OrDUabOvKEPyKEbD1Qy
8ejcHCnp25dLxoTJFD9Uz88nqWf02tmVkj47j+pNcqms9pNONNFcFi1w4FlS
paGPxqEbD1SSkp5VHP+ZUlJNf3mhAynJo6XDDFojxSt55tlNzY1gXTisNlXJ
Zvn61/zraOVR0VUqBmzsQ3HoxgOVzDSetbnFRAvkk8uPn9frJeu3ouXXC29L
Setew49lf0pK/UoNg9bCWKOaOaduq3OsEdsYuvE//F0SFElJz1pinwpuCmRi
yyb+RFNPdPl64f0p6ePAY2XzufR3Yb7AZ4qJylMM3eXGGlIp6aShG/9DSoIi
k9VnRQd/vVNSESZcnkpJxSWPpKRM93mb1FlQLOD4OcPoXau38SyeINFPHi7Z
aGWdvY3Y20hJUPSSmcbyp9Ty0A0lM6397ElJlZmoq5SUGQTeI3UW5AsU36LI
6F2ok8GsPHF60HnzpiclQdH0c9TOO7hpW9ja6VNSdBx4FSnpQQbwKp2MpJRE
JSkJijoPEWcM0bXvA6PMc6XLU1L+10dS0mf//io+s7tTu2GZXnQM1wuLBTjJ
MF6i9TBuzohw+Sc4L77lozVsakvV0+5cG/rAG7rxP6QkKJp1pjFKp4rjv1z9
d0n5dx9MSd/+hkuim65s9g0/oxxskOIYPu+GMcwnoLAZ66STKlZZz+V9aVft
PYZu/A8pCYqmTEkz9SiTBVLZZ0k/Koomqa5S0if7SWnlyEhJsNeU94I73ZOS
wtfR50dhmeiL8Eqbj0vXGvp4G7rxP6QkKHJn7Fw+C3zva+GS4lupGjrJAt+b
+ObeXTkyUhIc4GA+7JGUVPkMKAxH9atLSVFDN/6HlARFUlLn3pwFwsRnZKA1
x/Mx96Sk1MOgypR0YGGjfo1+mI3e/o+UBBWkpM69OQucSUnrZ2Th47OaYj2P
DDTlkD6m9bhtngR9F66vkJsX4SrRQBTW07pHox9jo7f/IyVBhclS0kx9+REm
hQf10PF1gWJ4Kb7OvyUl8VqO6gNaD9r9O6XdFkc/wEZv/0dKggr3z36bmqkv
eb9W+qzwjJqwdiwlLX9/bCQlQZ4De6/JUlLTzY14dPXw+eGFpCQoGvocD83U
l7y5U9KalARPcWzv1fThy23369YbGvS4ijZ70L58pCSoICUN6j0paeN7xNYk
mkwmChcei0hSEnNzeO9lxPKGHp9N44fui5QERVLSoF6bkr4Op6QvKQlqOMJ3
meyueq3RR0ZKgleZ7Ho+U1/ypKQDKWmzSuZreFISrDnI9zJioTnGZN2LoXsk
JUGRlMSgKkNN5s+Ozv9F0ttSUvg3Yq/y9PA/zAjs5fj5ZP/P4IP6dmSaHgEp
M127Pn1ftdZ3iu9/87fRJXi4n9lf0XfvGZBHjqJlZ0r6jk/qVykpZbJJzmHG
YW/f42nzIY3GZNDRuM3To369RUqC15jsOtZtX5Y/n9GnLrOpYuFb+fqjNTR1
/8gvL/7/7d5p7t4d8+Yx2dX3vwr//vzu4efNu4zLTTZxAlImO9n77Esm1FTm
nczr/OakJCnpsMkuDtd68+Ck+h69mj2ej6QkLjfH6e/vkqBojpP9q8++ZFr1
VErafB0i+usnlubWbxUfYKUKX0JKam3Wfl3l5eOTv3Z9lzyej6QkWpjgiJKS
oGiylNSn3lLSJvvkw040MUXTU/hrdBNXWXpyee8eN2WnLjfrKFX2a1MsXGuR
krjFgxf/Z50ZNCkJis6faBRlRjh8a0lnnJprY7jKrjJLIuZEX4QLoy10gA3H
Lqs35VjVdyp/pi+xlPS9RPy8Dpd/3/q+Lv4aXSIlTe+SsDC0MyMgJUHRy68w
98hEoV0pKVy3mEfuT0nFzdG/a3fZ8qfNwgO/1jT4tivblIf35hz/nt3FK1L4
VphWNrkmujyzMPo69a6UNDH7dO3AaEhJUDRZSuq2L6kskwks4a/RJeFbu3JW
qnz+Rerd4nKGcPn+qjzGigtr6s8sbHEcznRsLzGfxCm/WTH61iawZEJTKtpk
3pWSXmuyectV9g6LlARFk11teu7LetaxWRK+FZbP76loPdFqo7VlVoy++AQT
p9SEKlxI51rsqc3BltlQ+G6xPUt6il5cct6UB3Z4LUq9tV4eHfB8SqrJUJm1
lj9j1E8bfONuevZmyq6RkZKgaLLp60x96ZZBntuDKSksVtOYfEraRPXLezfl
6XAgJUXfyqek7x6Jfgcvn3pqvrAnJU3JrsyrHx8pCYqkpEH9Wrm5wvcM8js1
SklhSAmn4pt3K1uSil1hemp06M53RmR2zYUpqfKLdjVPoKSkl7Afa1SOkpQE
RVLSoJ5KSY0+kKcfrZ8lVS7c9SwpelhGl9S3ud70p8PmqVy+2GbJ+ZRU86U7
Kekl7McaUhJcZbIZ70x9yXvwWRJz6yolhcU2gSiTgzxLusreh3rrJflYFM1B
+YVS0pvZjzWkJLiKlDQoKYlGektJ+SYVU1KqzgtNf9m5MCV9/57oR2Zh5tdM
4UyYajAw3Gpzdm8+LVnLr7trQ8dqqN/Q+atT2GUpCa4iJQ1KSqKRy0+i6NRl
vTCc3uR/TdUcrfOzuso1utzNfdnJzDzDkuGSzJ8UXfhT3NDc++gl8lngfNwo
brGF4iYOnHpSElxFShqUlEQj7zmJrmLEfkhJNCUl1ZepWUtKgiIpaVBSEo28
5yS6ihFLWXry9GBw1rInJa13evT1pljqRebdsHmbt9ZlNgdhqhnR19G3io2J
D+KKlARFZ24f1Xent7t2l/2Qkmik8og9dmCvz4hGp0Z0W603dMNW4OU2J1rq
1+hFZgnyS6pM9EV03fDEX7+1LlPfjPpWRStJDU6UlARFByYSTSf/U2oxYlIS
jdwQXm6rX0qCadSnpNTCzFv5F8V382U2n5oWq02FuGIlmSUhKQmK9s7ezQfO
uHD0pCQakZLObBFoZOiUlGr5gWdJmUoyS4AD6lOS50eXuGoYpSQaSR2fm48x
o59wpj7nDG/oYVXhKuGK4dZTjdlsK1pDqiXRApnT1oURbpCJCZ8/T/PUwvBS
EF2xpqqwAZkyqV+LJWvqzLcEOCN/99+UbN2Yl7hkJKUkGoken5V3/0+Qeipv
+vlV1s2on1SENe/tSH5MKt8FLpG6IITTmM3C8EOPT+xCsbEpnHk3v5V84VS1
0RXzleTHCjggPLlSxW5ozHucH08piUaiB2fqLrykw8USm6LUrBIuj7atWP+u
bdW0M8XlEW5w7Yk292lb0zt/lwRFNSlp7ovJU06OqpREI5kjMxUiMsGkPhxl
6oy2rVh/5t3157TF1V0hoQdSUj0pCS4hJT1FSqJP+XiSeRaTL3DgWVK0GfX1
X7XQFRJ6cOGJtnlwfEltu8pfst2Tm5CSoKhpSlpfiJ66HN3gWJOkJPqUSkmb
hLI+tTOv1wvzoqtE27Z5q6aSTeOjPd3UkxmN4nABl7v5XNu1ud6uAzXtkZKg
KDoV2RQ4XHP9Vg7X3EmdB1Y/uUUpiXbqD85dgeJ8nfdPRaQk6ISUVE9Kgks0
SkmpD4EvISV9pCRakpLqN9fb7AhmdeYz2+gz5e/C76+bd8PC0XejleRfp+q5
ipQEl7gtJW22mLpSbV6EV5VogXw9NSWj45BfK7Ww3plro5REO7uOzBY3+mid
7WYUqQZUlmzdGOBz7lzb3M03C1MTjOiLysJh+VQ9UhJ06+aUlA87qfwSlg9/
zdRTc22MRqT8WtFG7iIl0S2T/xpGCW5zMiWFrzPR5hPc4o9Fqk9shrCZqLQg
JcElOklJxRfhws2FK7N6fcmwtTUxLdPfPCmJnokAecYH7vRgSqqv6hObIXwS
H/lull+lskIpCYpuS0mHP4RJlU9t4kzJyjJSEm/Q9KPO0RkZuN/h867+Y9Jj
t/5MSirWIyVBtxqlpE/1laT4ov4Kc75ktP1SEm8mDoSMCTzi5IRkM6PI/Bot
vHkrv26xcLjWVaQkuEq7lPSJXTrChetfoy8+6SvbrnoqS0aburmgbV4cvtad
GVspiducPM7nYATgcYfPvptP22evEpVbl5KgqHjTH+JkH5SUxIiinx5M7+lR
B/7FsZPxzlP42ctF/dalJCgqTgBGOd9HdKZ3UhIAL7T31nnbZx2Pf6Kya+tS
EhT1nJL2fpbbSaSqv05KSQCwy+NhpE97x0RKgqKeU9JaqhmdNG9DSgKAdvq8
+z/lwGhISVAkJbUgJQFAUy//48GTfZeSoKhRStqcueGJHP11c8pvaghXzBQO
f031JVW4piOpTqUKhJtOvVUkJQHAVziRmNvT4w3zK55rB87E5c9os/yZIzIF
ii8yBTKb+6SDUr7+w7+mWpsaqAOkJAAAaKRpSgp/3USJvSlps2K08tTmim2L
NixaW6pw2JL8Zz5SEgAAdOiRlJTKPuEqFz5LKrYtU+2u51DRJVFSEgAAdKhp
SirGh1SauD8l5Ru269dMa6ObPkZKAgCARoop6XM0KIWPY6JLNl9OixaIllz/
uqlhU1u0fLGpmw0VC4frRje3XnfnoP5BSgIAgEYy0/h1mdZtuG1b/ZCSAACg
T1LSU6QkAPj/27uD7TZhIICi/f+fdhc57VGQZhAyQ63m3lUCQghn43fADsBn
mqmk1yOhNLmS/8P7V6qSAACgyHyb/JyEqXbLK6mSAACgyKVKEkrvu+s1VEkA
AFDkavsIpXfc+OqpJAAAKLJwhyj6lmyGil4rlQQAAEXef/fe/XMhvrnrL3Wg
kgAAoEjpO3nqqCQAACiikjalkgAAoIhK2pRKAgCAIippUyoJAACKqKRNqSQA
ACiikjalkgAAoIhK2pRKAgCAIippUyoJAACKqKRNqSQAACiikjalkgAAoIhK
2pRKAgCAIippUyoJAACKqKRNqSQAACiikjalkgAAoIhK2pRKAgCAIippUyoJ
AACKqKRNqSQAACiikjalkgAAoIhK2pRKAgCAIippUyoJAACKqKRNqSQAACii
kjYlagAAoIhK2pRKAgCAIioJAACgpZIAAABaKgkAAKClkgAAAFoqCQAAoKWS
AAAAWioJAACgtVZJv/4Y7srnb7ck8wwP//p5eFQ75+RSAQAAegsF0WdLNFs/
c7R3Jrjy+duAmj8FAADAQV0l5Yl0uuvSlpkyUkkAAMCMGyvp792c1+jOzvBe
z3CeaHD0iN3CzwAAAJG7KimpoWhLNGc0+HBelQQAAFS4pZLWtkS/RoMXnrh7
Nd/eoJIAAIAZd1VSrx+TzHB6iuHImUpKNgIAAPRu/FxSu2WykqICyg/Pd50+
zgcAAJBYexQteYatDZ/+ptLhA0fJ43D94P6ow67oFFevDgAA+Ml0BAAAQEsl
AQAAtJYraf5LEqIH7dZO+ubHjk7P/nA2SlQAAPg0y59LurSr/zaGZe9nxekM
D5wCAAD4WA9X0icEiEoCAAASC5V0GN8/wxY9FJc8j3f4uf/aumiq5Fm+6NJm
ljE8b7LU02UMD0xW27+qAADAM96spOFNomElTd5j6usjHxCNHC7sdMsweZJL
ThbZnysqu0uLBwAAqt1VSdGAdks0uK+G1/dgSQa8RmkznPl0zX31DFceFVC+
yHzj4TIX/igAAMBdnqykftdM+5xO1ddKcsaZOa9W0sK9pGT+/loAAIAn3VVJ
eTpFe+cr6erI+Urq7wH9w0o6XTwAAFBt7YbF8PZNv6sd0L7zH/7aaqeNjh0e
2C8s2Rgto1/kpatI1hxdQn4IAADwpLV348kh3tsDAABbW75nMTxKIgEAALvz
ZBcAAEBLJQEAALRUEgAAQKv/zjcAAIAf7jczysiq
        "], {{0, 761}, {1122, 0}}, {
        0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{1122, 761},
      PlotRange->{{0, 1122}, {0, 761}}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[302]=",
 CellID->475821867]
}, Open  ]],

Cell["We can zoom in:", "MathCaption",
 CellID->983872788],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
    "exampleBCellReceptorFigureHighlight", "[", "\"\<Results\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]], "Input",
 CellLabel->"In[303]:=",
 CellID->325866016],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzs3U+u7DyDH2Yh8SDDbCG7yNTDTG14AW64Y2TSAdoBDM/umr4s4K7Lo/Lb
fdzVuuJfSaRESs+Dixd1VBRFUaLEX6nOef+Pv/t//93//b8sy/Jf/re//vPv
/uN//bf/+I//8b/9+//9rx/+wz/8l//nP//D3/+n/+sf/r+//89//4//59/9
r38t/O9/lf27f7Ms//QaAACAjQ8AAAD/TEoCAABYk5IAAADWDqek6FoCFwAA
MLtjKSmziqAEAABM7XxK2tQQ1rb5GxGpHzd/TSJ8sVm3+JcoigtTzQgbuWsv
Mm1O7UJ+FQAA4EoHZuNLLBNFF+ZXia6+eVEskCoZbVh0ySaeRFu4q82prWcW
1jceAADorVVKShXYLAkTSv5FTVXhE5/MFmvqvDElbVolJQEAwPWuTEmZLJBJ
SfkCm5KZmottDhNWtOWZdHYmJW0aIB8BAMBdWqWkfHRKbSUaK9bBpFggVTLa
sOKSMKTkU1KmkeG2whUPNB4AAOjtZEr61lBMSdHlnyAyRFNJ5uFOuHr0rUz7
o/VEt5tparEZ0RUzrQ17FQAAuMaxqXhmlXwwOT/tv6CGERoJAADc5eKUlF/3
5KZb1SAlAQDAmx3+WtfeL7OlvoG2d6PhiruqKm794u+5yVMAADAav/wCAACw
JiUBAACsHf69pNSKmW/Wpb56l/oe3aZwuNbmrdQm9u4dAADwZgdyRP5PMSyH
/sesm3ryq+ffOvmLSwAAwMs1SUlLTFgmU0NxE9GSqcdJ+QoBAAAyWqWkA0tS
P6YKH0tJmS/1AQAAhFp9427zIvy9odRvEkWXRAuHv3+Ub1LmNQAAQErD30ta
PzOqyUqpOlOFM0+gpCQAAKCVhinps/OBUf6tXUukJAAAoJV+KSl8N7Nu5Z9c
KH7RrvKbeAAAACnH/qxB5u8h5HPTJ3jelG9ANPVE10o9wypuAgAAYE2CAAAA
WJOSAAAA1qQkAACANSkJAABgTUoCAABYk5IAAADWpCQAAIA1KWlSv1bubgsA
ADyKlDQpKQkAADqRkibVPCWJXQAA8ENKmpSUBAAAnUhJk5KSAACgEylpUlIS
AAB0IiVNSkoCAIBOpKRJSUkAANCJlDQpKQkAADqRkiYlJQEAQCdS0qSkJAAA
6ERKmpSUBAAAnUhJk5KSAACgEylpUlISAAB0IiVNSkoCAIBOpKRJSUkAANCJ
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
/pGS4FWkpEm9JyWlfj2kGGoy4Sj61uGg9J6zjrdxbu/Vr8eu/O2e3hua9LyK
NnvSfflISVBBSprUs1NSmIykJLiYE3uv3j128RERlDbyt6TpSElQNPUYDz1p
X37k88LFRtjxdYEDKSmMQpm3pCRey1l9QO9Ou/6g9Nvi7CfY7O3/SElQ4frZ
L7scm7f3+HfLDToT0/I9811l8zqMRaliI/cMdOWUPuaalBR+XrS+Qm5ehKuE
L6L19N6j2c+x2dv/kZKggpQ0OCnpWEp6ds9AP87nYy7otzDs5LNPk4Wd9mv2
02z29n+kJKggJQ2u/onJZknxrVQNg2SBzceh4dalJGjOyXzYNSlp83pvSlpf
VytX9zgpaurG/5CSoOiRKelJe5TJAsuJ37vJlL89C2zOydQpKiVBQ4+8F1zp
lpT0Cf72XU1K+sQSUKoeKSlq6sb/kJKg6Kl3xll2qtj/qSwQLo8moJpMNFRK
ij4zkpKgK+fwedekpFTMSaWkYrFdz6Tamvqsm7rxP6QkKHpqSvpMsmvr7z/s
ygKVz5iiS/I/3pUF9h6vZST9uuXxon24XlgswEm6sYne3bgZEeHyTzAuliAB
hWMqWm1xALbao+Z1Xmbqxv+QkqDo8TONwXcwOvfbLGmekn6N9427kY8RvUWP
/mYeuGtd6unAVgbpycqBM4LBm/d4UhIUDR4iWln+lFoeuqBkprWfF6Skl5yB
ZKRGQb5A8S2K9F5Dg3Rm5cAZweDNezwpCYrMUe+VSUnf13uj0EQpybnH52hK
cu06Se+1NVp/FgdI+MFdq41W1jlaj72NlARFZhr3ij6E2hSoeWb0s2I09USX
rxfekpKceHylnrTmC3zMsk7Qdc3N1aU9HjntrXOuHtuYuvE/pCQoMlm91xL7
bdxNgXxy+cac7383UuVvfJbklGMtOrnKJKbUulTSaT3M1atS0klTN/6HlARF
UtK9iv1fGWEu+NfkPHG+ETqQkqKPlqih0zopXslTT0trTuZN4bDaVCWb5esf
86+jlUdFV6nosLlPxakbD1Qy0xjc8qCU5EwjKjV1zBfgAL3XT7FvNwV2ndXf
DLKr2k9sQKWqShWof7H37Jr6bJy68UAlKWlwz0hJTjNSws+l1wtTBThA73W1
KyVtTuZoZglHRM12U0kqGm0yH1AcSEn5dhZbPpepGw9UMvEY3ANSkhMMbmcY
9lafksInL9FHqJt1j6WkcMVdISgVr/J7VHmyTX1OTt34H34vCYqkpMFNnZKc
XTACw/ACJ1NS5mnpd3nm3dTq9Ylms5VdT46kpBlJSVBkHju4ZSR7W96pT2Ao
d4/LP0Tbdku3vE2xn5d0lIgujFYeHtBoPZsC37XWq0dPnk1tYeVhVeEqlWfd
1Gfm1I3/ISVBkXvopH6tjFahk6qJAzPkfu7ujKEtoz7wdeCuVOztzVBKvT6z
3a5HvG3ls5+cs7f/IyVBBVOgSQ2bkpxOrQw792ZjzCPlqF2sJiWlfjxz4KSk
W8ze/o+UBBWkpMF1fDywX01Tr+mWN1iGnHsTKh6p7wgKf8y8lVpSc6Qcsltk
un1zeVxfVPdeacNqd6147NxY19/k7Jr9FJ29/R8pCSqY2Q7ur6Pz+/N7hH/5
88RZ1JyUNIuaI7Ups8lBqWKZhZkj5XjdRc/X01e3k5KgSEoa3PgpySnUyd4n
FJnnFKlHFZXPKYY6voc/de+nVUpK1bMrJQ3SJ++k8+vpq9tJSVDkrjq4fEr6
zhXDJeFbYfmwwN6U5OTp58Dcu2Zh8cnFXSmp5lq0KXPN5au4lfpujMbSb6Td
dZTzm+jdJ6To/Bp6aQRSEhS5pd6rZgKWiS3F18Ufo0tqUpIz56Qmc+8zKWnX
3PuyDsnM86PLLzgPaxpW2Y3Rng9z05mUtGlz154hSrfnPaN/HrAXUhIUuZPe
q2YCVoxImyX5HBStsCYoLX9+hn9hJz1Tk7n34ZRUP/G+KyWF3ZJqxsUpKdqw
+pQUFi4ekQMpKdr4rr3El97OeEznPGAvpCQoeswla1I1E7DKlFT5tGhJfAev
GJSW4H9KyBlN5t7rdVOT6vDd+ll3uJW7fLIp6faGnU9JmTRUWX8xz67bTG/6
OfSkPnnAvkhJUOSmecY1E7B+KSn1OlUtl/nsf5a0pCfbYbGayivn3heMpm+B
1Iq3N6y+JysPYvSAFjdU2RXhLtwr1Z5Mn3+C/09Q5lTJ19PPUJ18o0f2wwN2
R0qCouddu+ZSMwEbJyXd21cPU3PoW6WkY1PuEVJSWCC61u0NO5ySvhWGP0a3
2/xIRffoYkss+2ReFH+srPAy8XH+Ghf39jUesF9SEhQ9+CI2heI9Zen5e0mp
11LSBWoO/cmUlH+3Pihdc+hrZlabt665fBUbVtmNF/w70xuDTGuXupS0BF/C
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
LpWSNsLDuiTC0RKbtDzjrGDj3rsMRcv+lPR1OCVtVpeSJtKp9xwU1jLXpYv/
DZiSvu8e/o5c238Gb3PP6FIpaSOfkoqTlmecFWxISYM7kJKaPEtqlZJSs4jN
dGKzyvl+e63mvecSQUhK+vZDNCJ9pKSBpeLtLW7sBylpYznxWe69h5J+bh+n
5C1P/L2k71kXPf2ckGe07T3Hgqjlzw9hfoQf1HyXh2XCtzJlUtu6MSUVZ7yL
lDSqzF31VRlfSlrLDOfoj+F4v66tXCg6TWUcmet59K0l9ggpnGlsZh351Zun
pFYlCbXqPVcGMvKXlMrrSfGt4iXulnlmzZTpIyUNTEr6ISVBkbnQ4FLX8/wH
ret3NyXDFVOVtL2eS0nXaNJ7DgF5+VwTjTn1KSm//N6UFE1DUtJc6u+qmftm
qkB4C5aSYF5S0uBe+KmXE/KM82FW/1N0ICVtZpLFNDRaSsoMjejy1LT5Fp37
ZjLLzv8LYfFszBTLbOv2lAQUuYQOLn+NlZLYONN7ep5KqangUkpJu2aSmXnp
ldelY3fJF166Z1GZkn6Oe/FszJ/MUhJMTUoa3AtvtU7IMw73nm6nXnQqGE4p
i8XyM8nbU9KZ++MLL92zqElJmYdEmSSVOucdmsHVjHTPZ9/J4R7cC2+1Tsgz
jn3orc/Z5fEp6fygyE/Fv7Pr9ev6t9bz83CibiqedzglZQ5BtFjx9n3vofF7
SV/FBLRZ7qb5Ho714KQk6h2LSD1awrOFUSWafSoDUVhb5kVYuPmuNamzmFyK
r2uKhbP00abiAyqmpPDEq1kYTUyD3FWjpKSvJWbzbnSVa5vJDRzowUUH710u
2+VrNvQ8u7ruymPKwyyxD8+jKWlJT/tTxaIXn0yOaLtfDavam5KinZNPT/mt
jDAVH1Cm0zInW01XH0hJTCF1Il186nK9zAnAyH6tjFnhYU7Iw+q7TidzxvK4
Z9zNb4X5LlqCuXS0fOqtRUo6IdNpSzrUp16fTEk39oNnSV/5fCQlvZmUNCkp
iVBN1xnynPeklNRpROxKSanCqbfWKWnwqfiAKnv7O0/+FXvok6khX2acQyMl
faXy0ffd1FpXNZDbmDJNSkoiVOw6fUsTz0hJXW9/u1LSr53PktZTeilpr2ec
vedJSV+pfLR+t2Yhz+NAT0pKIpTpOiOdhmafZ14wHPampGjeybw1y1R8QLOf
va1ISV/FC0L4dMmwegnHelJSEiFfDOAa884zK295mQ+Wm3RRNCWFaSjz1ixT
8QHNe/a2JSXtkn/exFM53JOSkgj5VgDXWEayq82pt6I/1lcerTMzN/6xeV3/
1kRT8QEd6EMpCd5p112GcUhJhFKTPWjrr1Pr9+f3CP8qT/J8sYtT0qum4gNy
aH5ISWcYVi8hJU1KSmJj3W/GNV1NlJJqxoKU9Cq7nlT2dmM/SEkn3Xv4uMbt
43Qu0Stb5nIXvvX9MXq1DF9ES4Y1pFYptvBLSprd0mJqBzWWVUoKr06bFLNZ
mC9fXKs+JRUveplL67fAmS66PR9JSWRISScZWW9QvI/wtfwZdjILM8XyldS/
qCmZWhglJc1uc2JAP2EUiv64iTnF8qmF+XWjzds1EDbXzO9QkpJ4MCnpPIPr
8aSkSqkEFEaS9WeS3+VSUj0n5DHGMpepSUnR5z6pWPS9bJ5MScdGQY+BIyUx
OCmpCePr2cysKqV6qfgsKbyJh68Pv4jmLynphQxkrnQsJeUfHp18lnRmCHRK
SeNovnc8gJTUhPH1bC6hlVK9tJRSUurFJ8g7mxf5GooFUptIkZImFZ4z0NuS
+OWjH8UolHnrQEpyF4MDpKRWXH8ezP2lUqaX8rfp9bvh608pGW3KRN8N2xD9
Mb8XUtKMookYegujSs3X6ro+SwJ2kZJacRV6MCmpUthLx/rtfG9n4tiZaqWk
uYQjV79xmWMpqSZASUnAdFyInkpKqrf53F5K6sQJWRTtIv3GZWpSUvi6PiWt
C0tJwPhcix5JStpl85W587Uda8DJ7UZJSVNInQA6jSuF8ecrmneW1d9zSJXM
fysvU//dnQHgLvxMUtKkmocaKWl8mZ7RaVyp5itz1/xz5sMxfi8JiqSkSUlJ
r1IcpzqNK0lJMDspCYqkpElJSe9R0yE6jStJSTA7KQmKpKRJSUkvUdkbOo0r
SUkwOympExelJ5GSJiUlPd6usanTuJKUBLOTkjpxUXoSKWlSUtKz7e0EnRa1
jOTuzmjp7r78w92dAVOSkvpxXXoMd5lJSUlPdWxIvrzTUv7qll9/+3T9V7mJ
hx2gCzq2vv/v7gyYkpTUj+vSY0hJk5KSHunwvr+50zKkpE6kJJidlNSVS9Mz
SEmTkpIe5sxIfGeP1chM5r/f18osDMtkluSDw8OOUaZPMj9mvjW3iZyZAmFt
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
tedJSZOSkt5MF/Wjb4E3kJKmczgl5eNPzVupGLVuVbS1n1WESa0VvojWXLP1
5qFGSpqUlPRa+qeTXXcfgKlJSZM6kJI4zHxgUlLSa+mfHqIfYd3YHoCupKR5
VQYld7HzTAYmJSW9lv5pLv9tAYDnkZKmVkxJvhfRhD6clJT0WvqnuVSX6mrg
qaSkB+h9k1pHrXfmhXfu9QNISa+lf5q7KyUtI7F39s7eXa/53tVrnpLu7ss/
NOmil1v+/BZ6uPANnE6TkpJeS/80l+rS3l39V/2/P79H+NdjT/+q89ffPiP8
67R3tx81x87endEjJd3epSN07GNEU9LnZZMQKWlSUtJr6Z/mopfBCz6TNNOe
d8rk2E197G7fr357V09KeqrNzWv9Y/j68+cdMLPuuv7L9uV2UtKkpKTX0j89
bK6E0dtE86vlz0z7W/N63psSLRMuzBcLl/c4qZZHT5mWnSkpdWhSh3uQlPRt
z/fHcHnY+OiK+R83y9f19Nu7+vMnv4Ph6ykm83elpMzJsHkrtcrgHTuCJZ1r
ltWtLfwx+iKs6j09/HPi3d0KdpOSXkv/dLKZCNUUq6kz/+53orue9K6X5H9M
rb55vWRn3Z3uArumNJspUDhrWpsxJRUPTeXBuv5Z0t7X3x8zBWqqWoZJSbt2
cFfl917Mb3yWFO3PfAcO0rGVt4nbLftTUqpwtKqR972twQ80KVLSO+mc3nb1
cPGOmb+Z1kyVl+yjospklJ94H7sLFNfaO6vJTDg3k9K9s9xOe3c4JVXGpX4p
adexqzkK0SOSP16V8+Tbz8zKXViC3HTvZL7G3pTUsGMrj37xELTt2JodzCeI
VprUnLo3LUFK2hTb9eLx+h1lupKS3knndHXyehi93UTvU993KzPR90V0Fr3c
l5Lye3dgFhqdL20W7qr5zEy75tidTElh+N1bc+9jt+xJSeHC1MFa0vPkTYVd
967J+XnstDw8mW/lWEpqOOS/MmdCcXnDjs3vYP3C84pdXVnJ5sW68s8qJYXl
M2+F9T9bp0NMb1LSO+mcfk7eklK1Ze53y2pi/BWdUW9K5ufYmyWphevaDux1
zd6dnIWup1KHJ6JNZtqZY7crzkQPTT5DXZCS8sduqUtJ6yNVExzCAx0tcPuZ
WbmDSzYStp3Mt3IyJZ3s2OiJlOrqvX17rGPzO5iqs8dBLHZ1ZSVh875VbXZt
SUSkVEsOt2o6L9nN55GS3knn9NP8sh+9v2zuTfmHQUtF0kk9sEhNvJcgKG0q
b+LT4oPlpWJ+vrfyhnt3ICWlXi9ByD0WvhruXZhWikuKxTKT3rDYd/Wue3d4
Sv9T22Y3vwvvOjNvdGDIZ457/vVdHbvrOh+u1apk/Q3oY85w2q4+ZxxS0jvp
nE6O3YZ21RluYtn/7bhogdTqlfUf2+XiTXw5/XtJ4bTzu4m9U9wee9cqJRWP
b7Harsdu2ZOS8skidcQzs+Xbz8zKKfqBOo/tXUNNniUd7tjwLCpeCnp3bH4H
U3X2OIjFrq6vp3nb3uZAtzMCKemddE4nZ+5ElXVGb7sHUlLmSUR9SgpraLJ3
mwLHZqG7Vuw0ZarZu94pqXITvY/dz7thl6YO2RILR0uQiSrrvP3MrDw/j520
B/buRs07ttiT63Np7/Wk+Q6G+5taeF6xq+vrad62t+l0iOlNSnonndNDk/tR
vtpUgd/BN6bqp9zf8stqXh1Wlap/U8OZvYuuvjwoJaWO3a6IVH+Ud50MXY/d
t0zYpd/lSyBcMawnWmd0xX57V3/+hDsYFrjmzLxRj47Nd3W+cPOOrdnBpZSb
mii25PHG2fFxWsIuUtI76ZwewlnQNf287H8e0enfgf0t9lL9rCY/BT3/r9Pe
3X7UzqekTIHmR6HrsVvvUcMzc5C9q9/3rh7fsTXdeM1twsz8xwid4FhMSkp6
J53TXDQine/nyhvu7XPswzPtmh64fbLUcC4a7t3tR+3MsXvedHdXydv3q+2Z
eayeG/+vsrN0LLe7/VBKSZOSkl5Iz/TQKSVlav7WP/tMu7j7t0+W+k2ZZj92
UtII/6SkwTt2Upu7WHhTC+9EqcKpO9f6ReatVCXF1ddN7ddRNcImMQUp6YX0
TG9tezh6a9jcO26fY0tJh/fu9qN2PiWlJgAzHrv8Hs2+d632fU1Kqtyp6NX7
k0gf0bfCkr1lssa6VakXlcX6vVj/eO/MR0qalJT0Qnqmt2tS0rrA7XNsKenw
3t1+1HYdu3D6kZqZfCY5drv2aLq9yzu872tSUv1+pX489tYFpKRWpKRJSUkv
pGd6a9XDqXwUndsMosmO27tbVDY49WNYw83786cmezTd3uUtR/d9rUdKGsfJ
fdnsV2rJ8mfPL+kD0btJ0TLR3ggbn9qdG1+kFl6v+enENaSkF9IzvZ3s4fCW
1O/GDbtk5myTnpnP26N6Tfa9eUp6qpqUtMSeevS4+NdXmEoZZ1LSdzc3+5t/
K1NPTQPCXbiSe/ekpKQX0jO9Hejh/H1QROJeS8znz1v/XCfn8/aoXtt9l5Iq
hV2amt5vSjY/IXfdUFJN2pwzmwqjP25ebHaq8q1MPWFLUq+vd+OmOUNKeiE9
01t9D1det11gGcT6PIzOrqfzvD2q12TfpaRKYa9u4kCYDqLvnm/GWk35yq2P
M2TGacnXSy4pzyMlvZCe6arybuKayYyed9I+b4/qNdl3KalSPiVtEmtYrMnB
2huRou05WewC47Tkyx1/UlLSC+mZrlLde+DeBKN53tn7vD2qJyVdKZp9im+l
lhxrQNeUdEElt2/iMLf+SUlJb6Nbegvvdy6PwFNJSTUyCSX6YzE3nW/A7Hel
XXtx+/7e3gCOkZLeZrRuiV6679Jqjz7CEfAOUtIU+t3ybrGkn8RVrnWx2Tv8
taSktxmtW5YH/Q8En3H3AagnJU3k5Slpb+GGZu/w15KS3ma0bnlAStrccUbr
YYB+pKS51KekmmdPm+WbW2Fm9fC++f0xfBGWT9WQqe37VqmHupCSJiUlvc1o
3VKZktZX2uLyVOG2KSl14xithwH6kZImsjcvhNEm+uM3j0SX5+upWSssn2/J
rnWvISVNSkp6m9G6pT4lha/DxJQp3CQlrfNXpkzTHgIYl5Q0kQMfBh7+8dMz
JX2Ch0c1m5aS2EtKepvRumXX45518ImuGC5skpKKyWhTuF33AAxNSprFgXvT
3pS0uVde8Czp+2Nx05lIdQEpaVJS0tuM1i0jp6Rd4Wi9VrvuAYAGjqWkzDco
wqgSXR5uOv9s6FhKqq8tbM8FpKRJSUlvM1q37EpJP9eZTPxZgt9O2lX5p+47
dfndad1DAHDK+TtatIbwCU7+OVFxxc2S1I+f4GZdX9uZW/xhUtKkpKRXGbBP
6oPMkvgtpOjCXflonarO706TbgGAe518/pJJSXu3PjspaVJS0qsM2CeVcSYs
lklJByJS9Bt3x3bnfCUAs/B7SQ8mJbUiJU1KSnqVAfvkQEpKPTCKLt/1rKrJ
7pyvBGAWUtJTLX86tvpHQPhnOmFSUtKrDNgnu1LMV35hZrmUBNCQlDQ4d6UR
SEmTkpKGtYyk624e+HZcj39NdrNrXwGMRkoanLvSCHpPpehEShrWX+3//fk9
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
SUkvMXJvjNy2oqkbT1R4TH+WSEkQkpJ6cJF5GClpUlLSSwzbG8M2rNLs7d9r
/X2z/HfSbmpgA5nGP2DvoC0pqQcXmYdx45iUlPQSw/bGsA2rNHv7D4h+Gy1f
bC6plnuWBCEpCYqkpElJSS8xbG8M27BKs7f/gNempI87HQSkJChy75iUlPQS
w/bGsA2rNHv7DyimpNlvB6nfSwKAA2a/Lb6WlPQSY/bGmK2qN3v7j9mkpNRv
J13erpbCfbyxMcB7uNo8kvvIpKSklxizN8ZsVb3Z239M6lnS84LS+u9UpN6d
fTeBcbiePJWbxaSkpJcYszfGbFW92dt/TD4lvSc7hAHqDXsNG34vqSHXkKd6
yW3xeaSklxiwNwZs0l4P2IUDKp8lvcHDHp/BAVJSKy4gDyYlTUpKeokBe6Nh
k+56fjFgr/a2+R6aL57pCl5OSmrFpePB3BomJSW9xIC90bZJu2pbRtKwE7je
Mt3TtL8aOc4/5iclNTHH1YOj3O4nJSW9xGi90bw9uyr8q/Dvz+9+/+rrH+24
UOl74GZMSXdHo//5b/aUdPXnKVk39oOU1MS9B5Hebh+nHCMlvcGAXdG8Scvq
i081haUkTpr1rrfcn48ek5J+/e0zwj8paXZTXknYY9b7xetJSW8wYFecb9Km
hvUlqFj5JsV8P4+NLgzfjZZPBaVUJVIS95CSGpGSfkhJe4XPAd0IHk9KmpSU
9AajdUWT9oQpqb7+aFopPhL6+XETl2oeJ60Tk5TEzapT0vdldOH63/pdKUlK
urEx49vMlk2eX8KBnpSU9AajdcWkKSmzZPOoqD5PjXZo6oUfhz7bc/a3LshE
s0/mhZS0ziw/1ksyb62X5H+UksaXvz5E353+kkIFR3lSUtIbjNYVZ9qzxHz+
vAQV66+JP5UpKfMgaYk9iho/JdVczDdlpr7+P2x/y22rCDJhmZ8l+ZT0CR48
zZ6SijPeTGxJ/RiulSkcLS8ljSy8N23eTa3Vv2ncaeS7BhlS0huM1hVN2hOd
tVZeiKLx56tTSprlG3f5u/zncR+HPmx/i7tzLCVtolAqLj0yJWVmvDUp6Wdd
Kekllpj1u6m1rmog9xj2lkGelPQGQ3VFq8acqSefX5bsrxHVRKRUDTOmpPDa
/rAb/cP2t7g7Z1JSKhy9JCWFM95iSvp5sSS+fRd+7y6sM7OVcF3GlzrTrjqp
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
3pQMG1xZT6rCcOG8pCQoCq+cTEFK2ltnavZ1uMImDTtffzSw3PJPSorOqH+E
zyyWxOOMTbEnzdvz8iP0QMxZpKTsLT6zPDwKm/hQn5LyASSfkqIBpzIlHWhG
ZqOprUxNSoIiKWlSUtKuCqWkMVPSON14rPJWE++XzNvz8gNzb29vxvsLe7t4
oatJT5vX4Y+bi+q6TBg91mtlln8q0kpm3WKDU83IbzSzfFJSEhQVL6SMSUqq
ry3qfLVNmne+/mXalDT7lWeRki6kt5uryQJndvbKrHGgzmtWGZmUBEVS0qSk
pF0VSkmjpaRrLjtdt2LefiW93dwjU9KuK+fhrTyDlARFUtKkpKQD1UpJg6Sk
y645UtJj6O3mojvS6jpZuXrDzjzT5oubOggpCYqkpElJSceqbZKS8rOLMzXn
N5EqOY7me3dev20t5u0X0tvNPWZHrvG87pKSoGjX3IZxSEln6jy5idTqDVt+
zai8Zexfv9FOW7w0f5b02MGh3N3Bf7i7M5p50r709ry+kpKg6GHX/PeQkm6s
M1Vbw61cMCpvGftXbvG7LZe4d3pqtGlIt9R7Xl9JSVDk9jEpKWnACpfgz9s2
30Qrt0wd79qcS9wbvOTpT1t6pp6+ghdyB5mUlDRghevRdHKjXUflLbPHW64z
rm+vIiUdoHNq6CV4J3eQSUlJt9S2qXMzB1tva9iUdMvs0UWGC4hIx+iiPP0D
r+UmMikp6Zba8nWOn5LumkC6yHANEekAHZXx4M7xe0lQ9OArwLNJSYerOj99
yqSk6HOlhps4Wectc0hXGHpbgse7bm176a7Qs/tESoIit5JJSUlnquoRYb5D
qcmYaj4qoxHpgrHv8kJX4WksIh2m6368pB+kJCh6w6XgkaSkM/UM+KDnmk1c
nJJcW+gkcwK7qZ2X+lDlJe7u/otISVD0qmvCk0hJZypZTjz0uWa89NvKZfMB
FxZ6cM+CJqQkKHLHmZSUtKuS8Mfvkr2be0BKungr0IS7FTQkJUGR+87g2n2J
oIHLdrl5DUs6NO3d3DX90G8rs7efd3JGQVtSEhRdOfvlgL+Ozu/P7wP/vtHm
5/WxSjYVXrbLzWuQkrpWe8tWADhMSoIiKWlwxwLOeq1vVnpJStokoOgTsfVp
LyV9mv5NJ9cTmnBvgq6kJChyJxqclNRk9TA6fY6e/POmpHydIhKDcFeCC0hJ
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
7cvshQAAANzCdyIJJQAAgEf8LwkAAIBPH+V+yKo=
   "], {{0, 0}, {1122, 761}}, {0, 
   255},
   ColorFunction->RGBColor],
  ImageSize->500,
  PlotRange->{{0, 1122}, {0, 761}}]], "Output",
 CellLabel->"Out[303]=",
 CellID->2019329860]
}, Open  ]],

Cell["We can also create snapshots and an animation of this data.", "Text",
 CellID->973016157],

Cell["\<\
First, let's extract the members of the pathway in the analysis:\
\>", "MathCaption",
 CellID->499168171],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"membersBCellReceptor", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
      "\"\<SpikeMin\>\"", ",", "\"\<G2S2\>\"", ",", "\"\<path:hsa04662\>\"", 
       ",", "3", ",", "2"}], "]"}], "@", 
     RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}], ")"}], 
   "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[306]:=",
 CellID->1448324815],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"PTPN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IKBKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPPL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NFATC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q08209\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JUN\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PPP3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CARD11\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"VAV1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAPK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AKT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPP5D\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RELA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IFITM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P29350\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NFATC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKCB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CHUK\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SOS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RAC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PPP3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAP2K1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CD\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SOS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MALT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BTK\"\>", ",", "\<\"RNA\"\>"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[306]=",
 CellID->863400676]
}, Open  ]],

Cell["\<\
First, let's extract the members of the pathway in the analysis:\
\>", "MathCaption",
 CellID->401232237],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"intensitiesRNABCellReceptor", "=", 
   RowBox[{"DeleteMissing", "[", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", "membersBCellReceptor"}],
       "]"}], "@", "rnaFinalTimeSeries"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intensitiesproteinBCellReceptor", "=", 
   RowBox[{"DeleteMissing", "[", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", "membersBCellReceptor"}],
       "]"}], "@", "proteinFinalTimeSeries"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"intensitiesAll", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
   "intensitiesRNABCellReceptor", ",", "intensitiesproteinBCellReceptor"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[307]:=",
 CellID->411555679],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PTPN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.038778745126709355`", ",", "0.`", ",", "0.3308909839321027`", ",", 
      "0.2206704394223557`", ",", "0.2874901450208439`", ",", 
      RowBox[{"-", "0.04372751379598624`"}], ",", 
      RowBox[{"-", "0.0980776066271067`"}], ",", "0.12251107438865769`", ",", 
      
      RowBox[{"-", "0.3241506774095029`"}], ",", 
      RowBox[{"-", "0.33317776309605013`"}], ",", 
      RowBox[{"-", "0.37502722437199104`"}], ",", 
      RowBox[{"-", "0.21910186659265724`"}], ",", "0.39717063159367816`", ",",
       "0.04620549589280256`", ",", 
      RowBox[{"-", "0.40805572502422266`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"IKBKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.41824938578802684`", ",", "0.`", ",", "0.4346283454510505`", ",", 
      RowBox[{"-", "0.09710561003766262`"}], ",", "0.15912542561628146`", ",", 
      RowBox[{"-", "0.1626590038855592`"}], ",", 
      RowBox[{"-", "0.19573472345395784`"}], ",", "0.10553716044254315`", ",", 
      RowBox[{"-", "0.2071194529277627`"}], ",", 
      RowBox[{"-", "0.28202825579531565`"}], ",", 
      RowBox[{"-", "0.10536321562270572`"}], ",", 
      RowBox[{"-", "0.17518129203252875`"}], ",", "0.12695507826666746`", ",", 
      RowBox[{"-", "0.25526064190720155`"}], ",", 
      RowBox[{"-", "0.5291533255664163`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"INPPL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.10615989393495232`", ",", "0.`", ",", "0.18840596303037413`", ",", 
      "0.048047135096177244`", ",", "0.16619626570031684`", ",", 
      RowBox[{"-", "0.21175531708410275`"}], ",", 
      RowBox[{"-", "0.12432399739780184`"}], ",", "0.03841171024699074`", ",", 
      RowBox[{"-", "0.5024806637593322`"}], ",", 
      RowBox[{"-", "0.16603574538014687`"}], ",", 
      RowBox[{"-", "0.19614635461512267`"}], ",", 
      RowBox[{"-", "0.307538378078446`"}], ",", 
      RowBox[{"-", "0.017124915407234483`"}], ",", 
      RowBox[{"-", "0.3080918215676708`"}], ",", 
      RowBox[{"-", "0.5943143512516815`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NFATC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.05041220188957137`", ",", "0.`", ",", 
      RowBox[{"-", "0.15159602607738404`"}], ",", 
      RowBox[{"-", "0.3418182940818629`"}], ",", 
      RowBox[{"-", "0.10165562085013555`"}], ",", 
      RowBox[{"-", "0.13035895850832396`"}], ",", "0.26759080168486116`", ",", 
      RowBox[{"-", "0.0967033158357252`"}], ",", "0.7683894970650806`", ",", 
      "0.0553952007923425`", ",", "0.1603313546397198`", ",", 
      "0.15817945741016387`", ",", "0.0784527804797115`", ",", 
      "0.20758000806705793`", ",", "0.23641401575061569`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"JUN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.47668369234111063`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.21499367785632137`"}], ",", "0.17941260040124263`", ",",
       "0.21054955024730262`", ",", 
      RowBox[{"-", "0.043220651159810164`"}], ",", 
      RowBox[{"-", "0.272109969536928`"}], ",", 
      RowBox[{"-", "0.19091017669392285`"}], ",", "0.2568869926746049`", ",", 
      
      RowBox[{"-", "0.08590868949633254`"}], ",", "0.20594997280838284`", ",", 
      RowBox[{"-", "0.3944573995520664`"}], ",", 
      RowBox[{"-", "0.30324047113994684`"}], ",", 
      RowBox[{"-", "0.2250957883007071`"}], ",", 
      RowBox[{"-", "0.35166129631647564`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PPP3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.016629257206749837`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.46936479241186474`"}], ",", 
      RowBox[{"-", "0.1347145588576748`"}], ",", 
      RowBox[{"-", "0.26808358766824847`"}], ",", "0.04078121233113895`", ",",
       "0.2734643155740791`", ",", 
      RowBox[{"-", "0.14573410310223814`"}], ",", 
      RowBox[{"-", "0.1347145588576748`"}], ",", "0.26356252374763406`", ",", 
      
      RowBox[{"-", "0.48081353732225546`"}], ",", 
      RowBox[{"-", "0.08746382927257018`"}], ",", 
      RowBox[{"-", "0.5055941746797294`"}], ",", "0.03411635754083646`", ",", 
      "0.09211339971620953`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CARD11\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.11121721141851255`"}], ",", "0.`", ",", 
      "0.21626391246224105`", ",", 
      RowBox[{"-", "0.38169948822881583`"}], ",", "0.12294951236820212`", ",", 
      RowBox[{"-", "0.11267241876505982`"}], ",", 
      RowBox[{"-", "0.24187539695241472`"}], ",", "0.09026581699905412`", ",", 
      RowBox[{"-", "0.6816227833021119`"}], ",", 
      RowBox[{"-", "0.19950063694707412`"}], ",", 
      RowBox[{"-", "0.005313630005752559`"}], ",", 
      RowBox[{"-", "0.07275149486016533`"}], ",", 
      RowBox[{"-", "0.026962565586229257`"}], ",", 
      RowBox[{"-", "0.24773153848263935`"}], ",", 
      RowBox[{"-", "0.3589900252045054`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"VAV1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.16786761644547143`"}], ",", "0.`", ",", 
      "0.08511549101992526`", ",", 
      RowBox[{"-", "0.09588517585046787`"}], ",", "0.05464155304336848`", ",", 
      RowBox[{"-", "0.07928233004292208`"}], ",", 
      RowBox[{"-", "0.19251986600408416`"}], ",", 
      RowBox[{"-", "0.009326149016929316`"}], ",", 
      RowBox[{"-", "0.6419092268717677`"}], ",", 
      RowBox[{"-", "0.20359394490186375`"}], ",", 
      RowBox[{"-", "0.20013072508875882`"}], ",", 
      RowBox[{"-", "0.30835064547338437`"}], ",", 
      RowBox[{"-", "0.07671201247995124`"}], ",", 
      RowBox[{"-", "0.3658060131969946`"}], ",", 
      RowBox[{"-", "0.42500639615153174`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MAPK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18138248999321507`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.08977285477189995`"}], ",", 
      RowBox[{"-", "0.169229556455112`"}], ",", 
      RowBox[{"-", "0.08681793038600419`"}], ",", 
      RowBox[{"-", "0.1816373745988602`"}], ",", 
      RowBox[{"-", "0.21979066981068787`"}], ",", 
      RowBox[{"-", "0.16471189634013272`"}], ",", 
      RowBox[{"-", "0.6859762549997955`"}], ",", 
      RowBox[{"-", "0.11192443485740455`"}], ",", 
      RowBox[{"-", "0.053510227687117516`"}], ",", 
      RowBox[{"-", "0.32349878752971556`"}], ",", 
      RowBox[{"-", "0.18604523095988545`"}], ",", 
      RowBox[{"-", "0.3282300261180281`"}], ",", 
      RowBox[{"-", "0.28545062326456044`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"AKT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18166493911072917`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.030819659285723028`"}], ",", 
      RowBox[{"-", "0.2729441269266965`"}], ",", 
      RowBox[{"-", "0.11342959819258822`"}], ",", 
      RowBox[{"-", "0.19522720479585642`"}], ",", 
      RowBox[{"-", "0.2887644913340973`"}], ",", 
      RowBox[{"-", "0.0677041487423092`"}], ",", 
      RowBox[{"-", "0.52735465330263`"}], ",", 
      RowBox[{"-", "0.1568865238867638`"}], ",", 
      RowBox[{"-", "0.0753421617956879`"}], ",", 
      RowBox[{"-", "0.26016912239448475`"}], ",", 
      RowBox[{"-", "0.20377938610793608`"}], ",", 
      RowBox[{"-", "0.4247794469533678`"}], ",", 
      RowBox[{"-", "0.39313667030617344`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"INPP5D\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.0946381024990129`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.049984151316888624`"}], ",", 
      RowBox[{"-", "0.2095209987368932`"}], ",", 
      RowBox[{"-", "0.0834030741831631`"}], ",", 
      RowBox[{"-", "0.2060534090399563`"}], ",", 
      RowBox[{"-", "0.19423460952173655`"}], ",", 
      RowBox[{"-", "0.13857663323255798`"}], ",", 
      RowBox[{"-", "0.4455559038634096`"}], ",", 
      RowBox[{"-", "0.18885978233256123`"}], ",", 
      RowBox[{"-", "0.19184147400734922`"}], ",", 
      RowBox[{"-", "0.2648788290396264`"}], ",", 
      RowBox[{"-", "0.21162241201560938`"}], ",", 
      RowBox[{"-", "0.44345153067800686`"}], ",", 
      RowBox[{"-", "0.50568388038928`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"RELA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18218411686836491`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.10283215314268605`"}], ",", 
      RowBox[{"-", "0.1920873392381627`"}], ",", 
      RowBox[{"-", "0.10709101837664896`"}], ",", 
      RowBox[{"-", "0.10788619319749143`"}], ",", 
      RowBox[{"-", "0.20980765573945362`"}], ",", 
      RowBox[{"-", "0.16111518044662473`"}], ",", 
      RowBox[{"-", "0.7322285320440992`"}], ",", 
      RowBox[{"-", "0.12830505287795277`"}], ",", 
      RowBox[{"-", "0.17930374405806218`"}], ",", 
      RowBox[{"-", "0.09545359444054347`"}], ",", 
      RowBox[{"-", "0.1867661108641838`"}], ",", 
      RowBox[{"-", "0.32184454851160965`"}], ",", 
      RowBox[{"-", "0.3064378479173295`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"IFITM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.07629081318852289`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.07629081318852289`"}], ",", 
      RowBox[{"-", "0.32878631152146626`"}], ",", 
      RowBox[{"-", "0.10386155158442957`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}], ",", 
      RowBox[{"-", "0.4365214579425223`"}], ",", 
      RowBox[{"-", "0.03143304260487128`"}], ",", 
      RowBox[{"-", "0.5947599533539297`"}], ",", 
      RowBox[{"-", "0.3587043950845741`"}], ",", 
      RowBox[{"-", "0.16703826387813744`"}], ",", 
      RowBox[{"-", "0.15371768783658935`"}], ",", 
      RowBox[{"-", "0.29091194672606924`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NFATC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.20739212171844623`"}], ",", "0.`", ",", 
      "0.024329303972880016`", ",", 
      RowBox[{"-", "0.20679162695780465`"}], ",", 
      RowBox[{"-", "0.04541867681895519`"}], ",", 
      RowBox[{"-", "0.21049641191594368`"}], ",", 
      RowBox[{"-", "0.16460612265663285`"}], ",", "0.029870991732781956`", 
      ",", 
      RowBox[{"-", "0.7339397004527469`"}], ",", 
      RowBox[{"-", "0.23686986404231467`"}], ",", 
      RowBox[{"-", "0.02764694400425035`"}], ",", 
      RowBox[{"-", "0.13681417005109897`"}], ",", 
      RowBox[{"-", "0.22953820969994437`"}], ",", 
      RowBox[{"-", "0.21280867785729338`"}], ",", 
      RowBox[{"-", "0.35642973827330393`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"KRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.295758816890077`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.27052189163675444`"}], ",", 
      RowBox[{"-", "0.1974399735658353`"}], ",", 
      RowBox[{"-", "0.19504468595725166`"}], ",", 
      RowBox[{"-", "0.027428112771337044`"}], ",", "0.06476880377705634`", 
      ",", 
      RowBox[{"-", "0.15653009856345715`"}], ",", 
      RowBox[{"-", "0.337895550763809`"}], ",", "0.06968633132184608`", ",", 
      RowBox[{"-", "0.41527764850834437`"}], ",", 
      RowBox[{"-", "0.37286394963599834`"}], ",", 
      RowBox[{"-", "0.3713356020907587`"}], ",", 
      RowBox[{"-", "0.31580056712389853`"}], ",", 
      RowBox[{"-", "0.25443647294027055`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PRKCB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13479893500866622`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.20256396195516896`"}], ",", 
      RowBox[{"-", "0.3610197671146908`"}], ",", 
      RowBox[{"-", "0.19426929181946417`"}], ",", 
      RowBox[{"-", "0.36800638206399594`"}], ",", 
      RowBox[{"-", "0.23440823093535876`"}], ",", 
      RowBox[{"-", "0.27803373202732246`"}], ",", "0.012962179524894387`", 
      ",", 
      RowBox[{"-", "0.22718003626881278`"}], ",", 
      RowBox[{"-", "0.30994005350769777`"}], ",", 
      RowBox[{"-", "0.3360468790676116`"}], ",", 
      RowBox[{"-", "0.40015637638006324`"}], ",", 
      RowBox[{"-", "0.13208386643695547`"}], ",", 
      RowBox[{"-", "0.25826766023589887`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CHUK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.221425773380745`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.243571757903387`"}], ",", 
      RowBox[{"-", "0.11039225752290059`"}], ",", 
      RowBox[{"-", "0.16365139325744832`"}], ",", 
      RowBox[{"-", "0.016607048325296567`"}], ",", 
      RowBox[{"-", "0.026500877616898285`"}], ",", 
      RowBox[{"-", "0.14315269682400197`"}], ",", 
      RowBox[{"-", "0.0850637578773461`"}], ",", "0.0363063162929521`", ",", 
      RowBox[{"-", "0.4105726758454418`"}], ",", 
      RowBox[{"-", "0.4435978247897623`"}], ",", 
      RowBox[{"-", "0.35068581293552653`"}], ",", 
      RowBox[{"-", "0.48387468310257825`"}], ",", 
      RowBox[{"-", "0.31652206757825097`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SOS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.10961168351076114`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.21094976529594717`"}], ",", 
      RowBox[{"-", "0.1809635103255571`"}], ",", 
      RowBox[{"-", "0.21846939773037327`"}], ",", 
      RowBox[{"-", "0.22268432131751967`"}], ",", 
      RowBox[{"-", "0.13436623870338474`"}], ",", 
      RowBox[{"-", "0.21481163653785168`"}], ",", 
      RowBox[{"-", "0.14265099815527352`"}], ",", 
      RowBox[{"-", "0.1196553373738772`"}], ",", 
      RowBox[{"-", "0.334893616086209`"}], ",", 
      RowBox[{"-", "0.511375697391697`"}], ",", 
      RowBox[{"-", "0.3366464866173687`"}], ",", 
      RowBox[{"-", "0.3632234465426997`"}], ",", 
      RowBox[{"-", "0.3092482808431163`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.295624122684205`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.3275732750314186`"}], ",", 
      RowBox[{"-", "0.2460544962162692`"}], ",", 
      RowBox[{"-", "0.2669404747070069`"}], ",", "0.006903975694237867`", ",",
       "0.07898322273499543`", ",", 
      RowBox[{"-", "0.28317273365747764`"}], ",", 
      RowBox[{"-", "0.20431057830799113`"}], ",", "0.13048602424656103`", ",", 
      RowBox[{"-", "0.27170966624312526`"}], ",", 
      RowBox[{"-", "0.3712295648446653`"}], ",", 
      RowBox[{"-", "0.3389559939504886`"}], ",", 
      RowBox[{"-", "0.3547789024245206`"}], ",", 
      RowBox[{"-", "0.275432570820624`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"RAC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.2705696810595979`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.20025780756710837`"}], ",", 
      RowBox[{"-", "0.2534677964673615`"}], ",", 
      RowBox[{"-", "0.2068992066988645`"}], ",", 
      RowBox[{"-", "0.20025780756710837`"}], ",", 
      RowBox[{"-", "0.18838552003780887`"}], ",", 
      RowBox[{"-", "0.24035913476428952`"}], ",", 
      RowBox[{"-", "0.4929615140796191`"}], ",", 
      RowBox[{"-", "0.1548251192956156`"}], ",", 
      RowBox[{"-", "0.19438304192338338`"}], ",", 
      RowBox[{"-", "0.2705696810595979`"}], ",", 
      RowBox[{"-", "0.24035913476428952`"}], ",", 
      RowBox[{"-", "0.29196024516290325`"}], ",", 
      RowBox[{"-", "0.35395332412631997`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1341251261847756`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.22184935747682982`"}], ",", 
      RowBox[{"-", "0.399220401629133`"}], ",", 
      RowBox[{"-", "0.20673779815922316`"}], ",", 
      RowBox[{"-", "0.1426194015624961`"}], ",", 
      RowBox[{"-", "0.09852130467542528`"}], ",", 
      RowBox[{"-", "0.19422939570954087`"}], ",", 
      RowBox[{"-", "0.35359264817812963`"}], ",", 
      RowBox[{"-", "0.0867094984306964`"}], ",", 
      RowBox[{"-", "0.31664425672943974`"}], ",", 
      RowBox[{"-", "0.2814255432205854`"}], ",", 
      RowBox[{"-", "0.38325435746914155`"}], ",", 
      RowBox[{"-", "0.3156410477634368`"}], ",", 
      RowBox[{"-", "0.32307998127545584`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PPP3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13430780661217814`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.32419203478149977`"}], ",", 
      RowBox[{"-", "0.23668378749500305`"}], ",", 
      RowBox[{"-", "0.22721176999258677`"}], ",", 
      RowBox[{"-", "0.03923614817812529`"}], ",", "0.0005982652764247334`", 
      ",", 
      RowBox[{"-", "0.25444684932444966`"}], ",", 
      RowBox[{"-", "0.3890983856520298`"}], ",", "0.07045515766801566`", ",", 
      
      RowBox[{"-", "0.23298106167244387`"}], ",", 
      RowBox[{"-", "0.28937072607727043`"}], ",", 
      RowBox[{"-", "0.2964728885394952`"}], ",", 
      RowBox[{"-", "0.4343597132050111`"}], ",", 
      RowBox[{"-", "0.36330688452428045`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MAP2K1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.29060174811021067`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.26341817204080253`"}], ",", 
      RowBox[{"-", "0.09721299602844978`"}], ",", 
      RowBox[{"-", "0.16207559355446263`"}], ",", "0.011300368006674008`", 
      ",", "0.05844643404406884`", ",", 
      RowBox[{"-", "0.16383822112003374`"}], ",", 
      RowBox[{"-", "0.5516878912619715`"}], ",", "0.09898848695764009`", ",", 
      
      RowBox[{"-", "0.21599395317462206`"}], ",", 
      RowBox[{"-", "0.3371591747633452`"}], ",", 
      RowBox[{"-", "0.3238673959517276`"}], ",", 
      RowBox[{"-", "0.34842378244085476`"}], ",", 
      RowBox[{"-", "0.2815649306296724`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.05780273280375747`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.3187547588750017`"}], ",", 
      RowBox[{"-", "0.10176932897826184`"}], ",", 
      RowBox[{"-", "0.14223545799051943`"}], ",", 
      RowBox[{"-", "0.028628367984999917`"}], ",", 
      RowBox[{"-", "0.08888635849585656`"}], ",", 
      RowBox[{"-", "0.24565143729098476`"}], ",", 
      RowBox[{"-", "0.3377629421284371`"}], ",", 
      RowBox[{"-", "0.014764011480735292`"}], ",", 
      RowBox[{"-", "0.49459800646072816`"}], ",", 
      RowBox[{"-", "0.24891046199384032`"}], ",", 
      RowBox[{"-", "0.524683600432957`"}], ",", 
      RowBox[{"-", "0.13215080026032225`"}], ",", 
      RowBox[{"-", "0.28593570492914033`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CD\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.042558634300996406`", ",", "0.`", ",", "0.08198978697165296`", ",", 
      RowBox[{"-", "0.24595210487045965`"}], ",", "0.054631747891002745`", 
      ",", 
      RowBox[{"-", "0.12223621407006559`"}], ",", 
      RowBox[{"-", "0.02075468445961393`"}], ",", "0.10630718071476095`", ",", 
      RowBox[{"-", "0.5044872256907823`"}], ",", 
      RowBox[{"-", "0.27312245331401525`"}], ",", 
      RowBox[{"-", "0.293283851979613`"}], ",", 
      RowBox[{"-", "0.12097875547569602`"}], ",", 
      RowBox[{"-", "0.16025169453032473`"}], ",", 
      RowBox[{"-", "0.3127861494923794`"}], ",", 
      RowBox[{"-", "0.589953737737302`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SOS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.08439118564169859`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.14065722814083692`"}], ",", 
      RowBox[{"-", "0.19975840111640467`"}], ",", 
      RowBox[{"-", "0.1550361905508878`"}], ",", 
      RowBox[{"-", "0.22514123129829777`"}], ",", 
      RowBox[{"-", "0.11811067040877182`"}], ",", 
      RowBox[{"-", "0.17988904253126553`"}], ",", 
      RowBox[{"-", "0.38704904435955473`"}], ",", 
      RowBox[{"-", "0.11278738394610092`"}], ",", 
      RowBox[{"-", "0.2943193759037332`"}], ",", 
      RowBox[{"-", "0.3831074318615434`"}], ",", 
      RowBox[{"-", "0.38532091442119687`"}], ",", 
      RowBox[{"-", "0.33817412019803783`"}], ",", 
      RowBox[{"-", "0.39166077399173954`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1093931281135468`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.16150511710402168`"}], ",", 
      RowBox[{"-", "0.217788835823636`"}], ",", 
      RowBox[{"-", "0.14151209402131568`"}], ",", 
      RowBox[{"-", "0.02187515159569934`"}], ",", 
      RowBox[{"-", "0.005107192548820926`"}], ",", 
      RowBox[{"-", "0.11509486383751792`"}], ",", 
      RowBox[{"-", "0.34416740603812057`"}], ",", 
      RowBox[{"-", "0.06847667951758128`"}], ",", 
      RowBox[{"-", "0.3673865412674147`"}], ",", 
      RowBox[{"-", "0.26329300004781453`"}], ",", 
      RowBox[{"-", "0.3704355806623292`"}], ",", 
      RowBox[{"-", "0.40242068482847`"}], ",", 
      RowBox[{"-", "0.5041219068423514`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MALT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.17655612267617768`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.11521393610234593`"}], ",", 
      RowBox[{"-", "0.27020814693938333`"}], ",", 
      RowBox[{"-", "0.1534255449761702`"}], ",", 
      RowBox[{"-", "0.15262993678398293`"}], ",", 
      RowBox[{"-", "0.14313180484622515`"}], ",", 
      RowBox[{"-", "0.13596341915181728`"}], ",", 
      RowBox[{"-", "0.436426134637418`"}], ",", 
      RowBox[{"-", "0.03370529303435752`"}], ",", 
      RowBox[{"-", "0.23597089951911646`"}], ",", 
      RowBox[{"-", "0.37278194555901395`"}], ",", 
      RowBox[{"-", "0.40824824711322666`"}], ",", 
      RowBox[{"-", "0.3316737833629997`"}], ",", 
      RowBox[{"-", "0.3657958303097142`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13768718576799685`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.0350415471099589`"}], ",", 
      RowBox[{"-", "0.23329032760889032`"}], ",", 
      RowBox[{"-", "0.30507233309062876`"}], ",", 
      RowBox[{"-", "0.061472837011514486`"}], ",", "0.0061646627801911725`", 
      ",", "0.088498660325098`", ",", 
      RowBox[{"-", "0.701171314093717`"}], ",", 
      RowBox[{"-", "0.10976830408444116`"}], ",", 
      RowBox[{"-", "0.22873495834860416`"}], ",", 
      RowBox[{"-", "0.4042465754624842`"}], ",", 
      RowBox[{"-", "0.30008380000288404`"}], ",", "0.10574589498282079`", ",", 
      RowBox[{"-", "0.003761552628280958`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"BTK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.0774534869145951`", ",", "0.`", ",", 
      RowBox[{"-", "0.1576362287901149`"}], ",", 
      RowBox[{"-", "0.06526105131879513`"}], ",", 
      RowBox[{"-", "0.1309914632199784`"}], ",", 
      RowBox[{"-", "0.16306774666450977`"}], ",", 
      RowBox[{"-", "0.12646989712224893`"}], ",", 
      RowBox[{"-", "0.25672840278318193`"}], ",", 
      RowBox[{"-", "0.35420591012501973`"}], ",", 
      RowBox[{"-", "0.16918919314037137`"}], ",", 
      RowBox[{"-", "0.4403921634493964`"}], ",", 
      RowBox[{"-", "0.4247697049765375`"}], ",", 
      RowBox[{"-", "0.3772944648027281`"}], ",", 
      RowBox[{"-", "0.26321964735090364`"}], ",", 
      RowBox[{"-", "0.3148678217079514`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Q08209\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.02168638832940146`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.266154607197602`"}], ",", "0.06610177744422054`", ",", 
      RowBox[{"-", "0.05373241640194315`"}], ",", 
      RowBox[{"-", "0.18256867810695832`"}], ",", 
      RowBox[{"-", "0.8257260055841014`"}], ",", 
      RowBox[{"-", "0.03140438984890247`"}], ",", 
      RowBox[{"-", "0.42971666907446715`"}], ",", 
      RowBox[{"-", "0.09984301541494858`"}], ",", "0.0013423131090658262`", 
      ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"-", "0.06591568501104547`"}], ",", "0.0159995291855583`", ",", 
      
      RowBox[{"-", "0.07788521151629395`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"P29350\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.10114460966671077`", ",", "0.`", ",", 
      RowBox[{"-", "0.046451459039807026`"}], ",", 
      RowBox[{"-", "0.021365981724342998`"}], ",", "0.021192705232220825`", 
      ",", 
      RowBox[{"-", "0.08577537228510858`"}], ",", 
      RowBox[{"-", "0.33997196450847056`"}], ",", 
      RowBox[{"-", "0.1535604201471789`"}], ",", 
      RowBox[{"-", "0.8763840010256423`"}], ",", 
      RowBox[{"-", "0.1077819799473775`"}], ",", 
      RowBox[{"-", "0.1663252205448133`"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"-", "0.16293749015093129`"}], ",", 
      RowBox[{"-", "0.0754141410705864`"}], ",", 
      RowBox[{"-", "0.02492730161271568`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[309]=",
 CellID->778663946]
}, Closed]],

Cell["We can now extract and plot the sequence of figures:", "MathCaption",
 CellID->1111199700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigureTimeSet", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}], ",", 
    RowBox[{"MemberSet", "\[Rule]", " ", "membersBCellReceptor"}], ",", 
    RowBox[{"Intensities", "\[Rule]", " ", "intensitiesAll"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[310]:=",
 CellID->1553382050],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd4FcXax4OoV++1gKhXvddyRa/1IqJXUQRRrogiSBMRVIp0qaF3QiCV
NNJI7xDST3rvPZH0TgiQkJBGGunlfH/O6H7Hk5PDSSHZE97fM895ZmdnZ2d3
57zvf3ZnZ/+1Zvui9fcpKSntegg/i1bv+0xZefWBxeOw8N22XZs2bFu39qtt
u9dtWKc8dc1YJG5BtrOI3I4LCYIgCIIgCOJeoqmp6fr16yNdC4IgCIIgCILo
H5qamk899dRI14IgCIIgCIIg+gfpWIIgCIIgCEIRIR1LEARBEARBKCKkYwmC
IAiCIAhFhHQsQRAEQRAEoYiQjiUIgiAIgiAUEdKxBEEQBEEQhCJCOpYgCIIg
CILgMw0NDVLTSccSBEEQBEEQvCUvL2/t2rVSV5GOJQiCIAiCIHjLwYMHn3zy
Samr+K9jPT097e3tr1y5MtIVIX7nLl0RutAEQRAEQUjQ09PzwgsvfPnll1LX
3lHHdnZ2dojR1dV1d6rZJ3//+9+VlJQuXLgwzPsl+uIuXRG60ARBEARBSBAZ
GQl54OjoKHXtHXXst99+qyTGmDFjnn766SlTppw6daqqqmqQdaupqUlJSbl2
7ZqMPCRvhpMRvCI8udBZWVl79+6dMWPGW2+9tWrVKgcHB3m2ysnJ2SgiNTW1
rzz4J27fvn369Omvv/76kiVL1NTUqqurB5PT399///79n376KbLNmzdPQ0Oj
paVFzsMkCIIgCIVgzZo1jzzySHNzs9S1curYxx577GUREyZMgJRlmhYbDvIp
sLGxMcpRVlaWkYcn8uYeYQSvCB8uNJQh/ixKf2b16tUdHR0ytmpoaHjttddY
Zmdn594ZsDm0MffH4XjyyScFAsEActbX1y9atEipF88//3xxcfFQnQ2CIAiC
GFlaWlogQX/++ee+MsipY3/99VfxMh0cHMaNG4f0GTNmDKZ6x48fJx3LK0bw
ioz4hS4qKho7dizqMG/evLS0tOvXrxsZGd1///1IOXDgQF9b9fT0LFy4kFOS
UnXs1q1b2dp169ZFRERcunQJohT/nQceeCAkJGQAOd955x3kwRnT09PLzs4u
KyvDX5KdwGnTpg3hOSEIgiCIEQReFa4tODi4rwwD0LEM+E2kw722t7dLrOrq
6iopKUlKSrp27Rq8vIzCUWx/VVNbW1tqauqNGzdkbNIv5K8tP0G1MzMzOzs7
ZeThwxW5deuWqanprl27cnNzh6pYdKny8/ORrbGxUfbeQV1dHU4UBCpqIjXD
li1bUIHp06eL3321trZG4vjx4/vaSl1dHRleeOGFKVOmSNWxxcXF+JtglaWl
pXg6LkRhYeHAckLizpkzB0pbPDE8PJxpYNnDQgiCIAhCUZg7d+5zzz3X3d3d
V4YB61j4XOY0MzIyuMTk5OSff/75iSee4G5PPfLII6dOnZJQWW+//faLL774
9NNPP/jgg8iD38f+TGRkJJeZyRuBQBAbG/vFF188/PDDrOR///vfiYmJLI+L
iwu2+te//sVt1dDQgELE6wZBgjyffvppv2o7bdo0bKWqqtr7zLS2tj7//PNY
C1Eh4wQOOa+++ip2Wltbi1pBPrGaP/TQQ8uWLes9S/BIXZHe7N27l2VDe5P6
mL5fxeKcQ3ByBzVmzJiXXnppz549lZWVEjmbmprOnDnz3nvvcQ/rEZk6dWpW
VpZ4tubm5r/97W9Y6+7uLp6OE/XMM88g3cLConedQ0JCxo4de9999+H8fPjh
h1J1LM4/0j/66KO+zswAcvYFrhRK8Pf3H3AJBEEQBMET4NPvv//+3bt3y8gz
YB2bkpLCVEF5eTlLYY+kGZCUkBlPPvkkW9yyZYv4tpBVTB2xtfKopqVLlyIb
BMNbb70FxcI2HD9+PFNu6enpLOXy5ctsKysrKyz+85//5MpZu3YtUjZs2NCv
2hoZGSEFAg+qVeIMODo6YhXkn4xugmzy8vIgKfu7FTsh7CTg+r777ru4gqzm
b775pvjt8RG8Ir1hj8IZMTExfR2XPMVCnDOVi8NZvHgxBDxOAruTOWHCBPEb
pxUVFc8++ywrBDIV8vU///kPGzzw17/+Vfy+ZU5ODkvsrbHZPert27dLpF+9
epWdz5MnT2IRdZCqY3Hmke7l5SX1tAwsp1Tq6upw3lBCWlrawEogCIIgCP6g
r6+v9Of7pb0ZsI5duXIl0p955hkuJSIiYty4cSoqKty71W1tbb/88guTW5zC
FGfevHlK8j3FZvepCgoKWOL58+dZInSmUPTcnL2eg3SWYdWqVSwD99oL01E2
Njb9qm1LSwtTiRKPesHMmTM5DTMwIA4feuihnTt39msr7oRs3LiRe56O68gS
TUxMuJwjeEV6s23bNpYBVZL6Wr38xa5fvx4pkyZNEi8HqhJdFVtbW4licZk+
++wznApuyrikpCR2g3rNmjVctuDgYKS88sorQlFzOnLkyPLly7Ozs7GopaWF
VRDM4sXiTP73v/9F+oIFC9hQDak6trOzk8nmK1euQGdCo6JfuWnTJgMDA4kX
suTP2RdsENHjjz8+4I4VQRAEQfCH9957D75edh45deyKFSsKRCQmJsJdzp49
m6kLXV1d8cy9x8o2Nzezu3xS33+RXzV98803EoVD7YjfV5w1axYWOU04ceLE
559/HinW1tasGkwkiA/OlLO2J06cQMrbb78tnrOwsFBJNDy4oqJCRuXvSGBg
4F/+8hfZZ0ACdkJ638hlZwBqSjxxBK+IBLW1terq6pCakJGDLBaSEikffPBB
75vkvel9BgB6Hyjh9ddf51LYONhPPvkEcT8/P9a80fixaG9vj/jUqVPFS1i3
bh0rgetKSNWxly5dYu3Ezc1twoQJSmLguuPfN4CcUoH0ZYNM9uzZc8dzQhAE
QRA8hz0n1dLSkp2tv/PHcsDhyriRCMXr6ekJ3bJhwwammtTU1Hpnk1819X6N
nd1XXLRoEVs8fPgwFj/++GPEy8vLEUfKmDFjVq1ahZSYmBh2q0rqW06yawsB
xm72ir8ux0Z7LlmyREbN5cTf3x9CRfbwD3H6OiEWFhZKohnSpG41/Fekv8hf
LHQme4CO3srx48fz8vLkKb+pqQnNAGcJSm/GjBlKouET3FpTU1OkfP7550LR
FWGNHKIai6gS4pMnT+YyW1paIuXRRx8V37VUHRsaGsr9ZV555ZXTp0/Hx8ej
ITEpjvYZFhbW35xSWbp0KTshNIUsQRAEMQrYv38/fH1ZWZnsbHLq2GeffXa6
iFmzZkEZqqqqSp05tqSkZNOmTdyIRHGgN3rnH4xqgopG+vz589kiu4f20EMP
dXR0MOEREhICPcBe/tLR0UHK//73v4HVlu3rq6++YovYxdNPP40UaA8ZNWd0
y4G3tzf6BXLeSevrhAQGBrLK19XVDeAYGUN4RfpLv4oVCARsNCnjzTff3Ldv
Hw5WasnQlgsWLEDb6H0SxAvE4n/+8x/hH+MKVq5cycYVGBoaYtXcuXNZzpSU
FPQ7kGJmZlYpBurAJXJjdJOSktiOvv766/r6evFasVONivU3Z2/QCWKNPy4u
rq88BEEQBKFATJo06bXXXrtjtgGPj+1NREQEex4KQbJhwwZPT0/IgObmZjaO
9C6pJvbkVyi6a8peSP/tt9+2bNmCOOTc8uXLlUTTEC1btkxJdId2YLUtLS2F
zkSZ7P6bu7u7kug9+jvO05WRkdFbO8nAw8NDdoEyTgir1dixY9va2gZwjIwh
vCL9pb/FojcB/f/LL79wKv3+++9fv369+KeTW1tbWRtAn+7TTz/V09OLjY29
fv06zoyEjkWzURLNpdC7YuxWP0pmi309oRBnzpw5LDOaJUvpPTOYm5ub0h8j
cvuVUwL0WNl1l/ikAkEQBEEoLkzL9XWHimMIdSy7P/bdd99JfDtMhmpi3yTa
vHmzjGLllzevv/46UszNzadMmcKGs5qYmCiJHvW+8cYbiPj4+Ay4tuzFMVbV
+fPnI66joyOj2ozOzs5COWBvM61YsUKeN3T6OiFsItNXX311wMcoHOor0hsZ
89wOuFj0JhITE7nvW4m/eWdnZ6ckGk8iceecfaxZXMdWV1ezflB6erpE+R98
8IGS2DCM3bt3fyQNNm0Xzj/i4kNu2BdDxCd8YAQEBCiJpsIYQE6Offv2KYlG
HfR+wY0gCIIgFJfU1FQlOd6mHyodW1payoSBxFvwXV1dbH54qaqJzTzP3byS
ivzyZs2aNUiB4GT35ZCSmZnJKs++ylRVVTXg2ubk5EAtPPLII0VFRQ888MBD
Dz1UW1sr+5zIycWLF5944okffvhB/EaiDKSekPb29hdffJGpVpbChysiTkJC
wqRJkyAppe63X8X29UkCVBs5Z8+ezaWwsbU4txI5PTw8JHQst7nEe2qsCd13
331Sp3cQp695t9izgN6jAg4dOiRxquXPKRRdR9bg0bYdHR1l140jPz//008/
nTBhwtKlS6W+AUcQBEEQPOGtt9564403ZOcZKh1bXV3NhIH4faH09PT33nuP
pUtVL2ZmZkwkxMbGcokdHR3i9w/llzfsRScmWe3s7ISiO3Xjx49nc42KfyVh
YLVlt2Ffe+01/P7000+yT4icpKWlQcRCVMgpYoVi88dy093jdH3//ffs4TI3
zRofrog47OyxSkodti1nsY2Nja+++upnn32WkpIing2dFFxrJdF0ZFwim/r1
7bff5qQvjuXEiRPscw8SOpbd9kT1OFlYXl7OLvfChQulHpQ4felY1vHBqtOn
T3MDUaKioth4XVNT0wHkbGlpYSNAsKpfwwnQbpX+QJ7R3QRBEAQxUmhra8Nb
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
o4wrK37/pk9ubq5Uv8BRVlYmMUpNKLot4+Hh0dsmIwXWBpsM3emRRWBooNZ5
LQMPg9PnT+u66BoKDE87n9a5oKPnpqfjoqPlKFrlfFrfTV/fQ9/6/O8PRmtr
aysrK318fGTMwU70BXmTUaNjyfIMGLI8ww9ZHj4YDYKH8KFh2F2wO+5+XCtA
SzNAUytQ60z0mWMXjh2wP2AQaQC/oBmoiXQW4BRWblmpp6e3efNmTU3Nrq6u
y5cvt7e3NzU1FV8qPmJ7xDzB3DjGWN1L/aDNQQ1vDZULKjohOvg1ijEyjDQ8
m3DWNMEUeQ5bHK6pqmF7b2hoEJ9gvDdSvQlISEjgXtkQB44mMDBw2B6idbZ1
drR2dLR13P5lkbZeEdEqoZjrQyXhUyIiImAY7zjlJiEOTpqnpyd5Ez4UMkjI
8gwGsjzDDFkePhgNgofwoWG4+rsGtAawd11vv9x60RyRZGGyba6tf5M/4rHC
WBbCheEOfv8/ebiLi8vRo0cNDQ0tLS2zs7NLLpfAp5gYm+Tl5qG/f3uxuPis
ydmioqLLxZcvX7qMtSxcu3qNu6Eh8aGc3vTlTeAvAgIChKIZ2iVsS11dXVhY
2ICnAxpOcPjwp8nJyWlpaez7noRsqqqq0CTu5a+CjhodS5ZnBCHL01/I8vDB
aBA8hA8NQ/xti7DusH3W+5wvO++12rvVYKt2kLbUty0YMNo5OTmRkZGmpqa5
ubksUSAQdLT/v1XMFiFj77Clfn5+MkZtlZaWoiMsdRW8CWyLo6OjsbGxtbW1
l5dXY2MjW9WXD+In8CkXL1708PDA+RzpuvCdwsLC9PT0tv7Mtz/KGDU6lizP
iEOWR37I8vDBaBA8hA8NQ+KtYRV3lUOOh1arrL79OM9Xnb0iIdWbMC5cuJCY
mMgtenp6is/KiN6rr68vS5E6yyL8CDaRYRxu3rwZGBgodRUMS3JycmpqanR0
tJOTk42NjfjzvoKCAqyV7xzwApyrkpKSysrKtLQ0hbilMyJAvdDTPZ4UMkjI
8vAEsjzyQJaHD0aD4CF8aBgX/C74tfrBa8QJ4+AyVL1UD58/vFZ97YbTG1yu
urCJtdlvqDDU0tNSYvOmpibxx1IS3kQo+iwOrH1NTY2ZmVl8fHxAQIDEXOKy
vQlwd3eXms7euWBxCwsLFC4xSXVsbGxxcfGdTgC/gM/NyMhwc3OLioribvIQ
HPS2xajRsWR5eAVZHtmQ5eGD0SB4CB8ahqefp7aHtqGf4TH7Y1ruWmeDz25X
277gpwVHzY+aBpqe8Tuj46Vz1O6oga+Bno+etbP02cj/v7Re3kQoegxXWFio
o6MTFBSkp6cn4R3gEWR/EIdzGb1JT08vKCiAR8vOzu5dCJxLeHh4eXm57Drz
E3hhuGAcF038KA55k1GjY8ny8BOyPFIhy8MHo0HwED40jK6urluNtxpuNpw4
diI6IvpWw63W5tb2tvaWWy2II2RczDi0/1BleSXinR13GOUu1ZuUlZXFxsY2
NzdXVlZqa2vn5eWJrw0NDa2qqhKKnsdJnbimL2/S2dlpa2s7ceLE48eP91Uf
OJqQkBDFNT44IX5+frCfFRUV+fn5OFd3e49FRUXw/l5DCqot8YH4ARMZGYkC
FfeCDp5Ro2PJ8vAZsjwSkOXhg9EgeAh/GkZ3d/fp06elTqhYXFx86tQpOb/H
J9WbgPDw8Bs3bjC3IrEqNTU1ISEhNzdXV1fX0dGxtrZWIoMMb3LkyBElJaUd
O3bIqBKbYEee72Lzdgz/zZs34Wp/+OGHBx54oK8xe0MCCo+JicGVujWklJaW
BgcHx8XFDb6GmZmZ8fHx9/IovlGjYxlkeYRkecjyKAL8MRrEyHL9+vW9e/d+
+eWXn376qZBPDaOrqwve5Lfffuu96tKlS/Amt+Trh/blTerr69lkNb1JSkqC
F4OjMTU1FQgEvTeX8XQPHNh3QHmHsuxawSHCYcn+lg0stq2tbUlJSV8Zbt1q
rK+vkSc0NNzE+ZRdJTlpbm5qaKhuaqq9fDn/888/mTjx+QkTHsvPz0SiRGhs
rBnknDBwWENi8PsiJCSkoqJikIWgIdXU1AzV6VVERpmOJctzR8vT1NR0Uz7q
6uqG6q+B044CcfaKiorgrV566aVx48bl5ORI3SlZnnsB/hgNYgSBVXz44Ydh
E8zNzaOjo4V8ahh325sAPz+/jRs3wl9IpGdnZ2dkZHR3d1tbW0udyVDcm1y5
csXAzsDSw9LCw+J28LQw9zDfp73v90WxgDzmTubcVDy5ubmyXyJua2sLCgrq
a0hbd3fnmjVHFyxQX7hQDWHRInWEhQvVJeKiRY0vv9yTkiLlTPaf7nXrtGbM
MP3sM5OZM41nz7aYMcPk1VePfvihDlL+HEw/+kgtPDxmMDvz9/dvaGiorKyM
iIjAr8Ra+Bp2dXCl+noNBE1F/NEt3Hd7ezt3BwOta/Df7qSne6RjpTJaLQ8k
4o4dO7b8wVYRveNs8eeff05NTZWxL/nZt2/f5s2bUeyvv/66c+dOxBctWrRm
zZotfwY7XblyJf6Vg9kXWR6FgD9Ggxgp0Ot/7LHHjhw5Ip7In4Zxt70JerJv
vvmmkpKSnZ2deDpMU1VVlbe3t4x+rrg3SU9PN0szC+8OD+kJCekOCRWGIoQL
w8OEYaE9oUjEL1KCu4IjuiN0vHWa6pu4bRMSEiReWBYHFUhLS+trbWdn24oV
mosXe333nceSJW7z5tnMn2+zaNF5xOfPt0V84UInrPruO/elSwX/+59BYuLA
J96B54qNjW1qul3zH34wff/9pI8/vh2mTUuZPNlp0iTzjz6KmTbtIhbxy616
+233oCDJz8HfETYXOrtkuHaw/7jcenp6cP1FRUXw3ahJYGDgxYsX3dzcYmJi
4CxMTU2TkpJwIeCg4+PjS0tLcepSUlJycnLU1NSKi4sRuX79Oja0tbUNCQnB
VliLg6qursbigE8Lg962IB0rldFqeaDHlJWVT4g4fvz43r17oTDhR1RUVPaJ
OHToEFt78uRJaE78N/sq6o6IW579+/cfO3aMlayqqoqS161bd/ToUVwRLOKX
2ymkbFhYWH/3RZZH4eCP0SBGivPnzz/33HMSY6X40zCG4a5Idk7Ox9OmmZia
cintHR0BgYECb297BwdEavt4PZbzJs3NzT4+PtZZ1gnCBE1/zf22++3z7Q/Y
H4jojDjhfsKh0OGw0+GjzkdPh5w+E3MmXhhv4Gdws/pmxx/AI6BDffPmTVi2
jl5gLcrvnc5oaWlasUJ98WK3775zWbz4/Hvvbfjww20ffaT8+ecnP/hgK+Kz
Zp36/nvoWJelS91nz9Z3dXUvGigw3ePHj3/hhRc0NE4tXKgzdWrCtGmxCNOn
J7/xhubEibveecfy3Xft3n/f/e23z0ybBk0b+8kn8e+842ptfY6VUFdXV1tb
y+IlJSU4NBh5tsiejrE4nAW8w4ULF3x9fV1dXV1cXNA+0eGCt4JjgpMyNDTU
19d3cnKCB7GxsYHrhNtydna2srKytLSEf9HS0kI6ysHm9va4jA4oQVNTc+fO
nREREcgJr2RgYICtsCP4x8EPsSNvQjpWKrIsT3b2tGnTTMUsD/7RaIpoSGi0
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
qwSBQICeICLXbpQ9VjWOOYsnq556sfjlf1594b3ED2cGf/Fazptvpb/zWP3j
nDdZUvC9nKPUOCoqKtAGamtrb92q//JL/XnzIqdN0586VeOjj7Tef//4p5+e
/eCDExC077yz++OP9T78UG3+/FCR1tXNyclqkoOgoCBcQZwHeTLLSWlp6cqV
K+3t7aurq/X19eFNzM3NFcubQGN8+umnEyZMWLp0qTyfHCLLIw9keYbQ8pRW
lj5e/bttearqqZdKXnq+9Pn/pvx3VtisN/Le+E/mf8R17NKipQO2PI2NjdA2
6urq69evX7Vq1Zo1a1asWIGUH3/8EYJ20aJFkLL4v+O6oHVB3OL0kuWRhyGx
PHdE6rxbW7duVRINhS0qKuIScYmZJjxx4oT47VNUaefOneLW4OzZs48//jjy
S5iIw4cPsxK4aRAaGhqYZkY7YYfT3NyMLgb3IL4vHXvw4EEl0YAEXFOWgqsp
9W7nc889h5zz588Xr3NdXR2LoPWi6/fZZ5/hjyy+FfqY48ePx4ZosX2dOnlI
S0uDiMXFGtgrhP/5z39699bJm8gDDFRfjUcqyMy9WMFRWVmJZmNiYsKeiyGl
sa5R3UXdKsvqhPcJtxtuO8x2HL5w2DDR8Kjr0XNXz7ldd8OiToTOr4a/Wmdb
68Xo9WuUmgRD+NppT08PDGBERAQsdu83B+9IcWnJo1ceV2pWuh1alB4rGze2
7oEHax6acPmpR8of+33cLFt7S2lBxhLhQC1TTU3lrFn7PvvMcOZMXYTPPz/D
In8EHRb57DP9zz83nD5937VrV+Upls0kf5fetgBwIvDdNjY2BQUFd2kXg0Sq
0fjpp584SxsaGjqwQkYEsjz3iOW5XHb5sWuPcZbn8euP319//19q//LklScf
rXh0zO1R+mN+X9ustDhr8YAtDzw+/g6bN2/eKAKRDRs2IML9MjZt2oRVy5cv
v3qVLI9cDInluSNSdSyaHFNx8+bN4xKhEufOnct2/eyzz37zzTfLli2bMmUK
e5kL3S4uJ7oz7INfjzzyyH//+9+ff/4ZV3/atGlsW/RuxPeFjg9Lf+aZZz78
8EM2b+2cOXNQsgwdy900Hjt27PTp019++WXE8WfpnVNHR4eV/+KLLy4W8fbb
b//1r39lsjYhIeEf//iHkugbXv/617++/vrrX3/9FR0x9iWycePG9atXK0FG
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
31/Jx1exf3/N119Htrd3rPgBPngw6eAQaG0dZm0d+rKAdfzu3LnNSbar8LcF
qn1lZSXZfrJggvw+lmIeMoP4PhZm1SrFKqozyr/e/2TVSd86X/MEc8RzR3Nd
ClwizkY45znHXoj1q/V7JebBJYBHJcb2NTc3t7CwsLGxMTMzIyJIIUb+dXBw
cHJy0tLSQvVY8QOE1fRkwONlwDqurq63b1PMwxEoH0uBLUhVMUBKbIduAVO5
ublxeHOtgprcvXu3oqJicnKyrKysvb19Hb2ZYsWDyfv8QrqC4p5CEu78h50F
xNwExFwExFwxi/gBIUfBI+6HRF0Fxd0Oibp9t1erp+eff1tAU6AjBQUF/f39
OBVTU1PBwcFzLhx8rKioLx9f5f79hZ99ZrB5s+k//mG7fbvb558bbd1q99VX
3ry8eby8uQcOlB48WPHNN+EdHWz+Fl8mxsZu7NvnxM+fzc+fzs+fwQjpL0La
iwgS0w4dyt6922V4eJCTbBsbGwsLC1eW6q9fv87sXCg1NTUyMpJ4G05OkN/H
vioo5llNTExMyCrK6hjpaBtrq+upaxpoahhoYKplpIWpmraatpH281lDLU19
TXEpcWZ/BZwwDy6BgYEBbCpcq7CwsKioKGqagoKCiIiIlJSUiooK2izE2GRw
s/CxbPupWCZu3rypqqpK7IgJYqA0YspMwTooEvM/vsVBMQ+pSIMCeUCGigFa
Hh4eunp1AHd2UVHB0NDgnHDqVJ2JiTF8FJwG6Gvx3FZBTdB8Li0tJeIggaKi
ImK8xfWFycm7oodPCgqkHBbJEhfLEzgUh6noYRoRFz2czX8w+uDBSBGRDFHR
nP18fkwfS+DBgwd1dXU4drbjdb7wsRUHDpTBvn75pcPnn5sICjZt2XICcdhX
wtzy81dyz8eOj48KCHiIixft3eu1d6/3zp1mO3ee2LZNd98+P0nJ0n37fL/8
UgtxMbE8MbF8Pj5PVLN+DgC2Dw8P7+rq4mRlDgE5fuONN/bs2RMQEJCbm/v0
6dOQkJA5/yiRBxvGx4J5YCEGBsA8lnAIQ/OAGm5iYtLT04M4xTwrhfv37+vp
6VlaPB+I1tHB8YTpCUzt7eydHJ0Qt7OzMzYyNjIysrG2cbB/PgzunH63Fmce
po8FYF9lZGRgZT09PcXExKSlpWFfYW4Rd3Jy4p6PxUVBzi4uLsePH9fQ0DjK
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
+OsfmZGiv32Y9fvf5f35A9qf/jf/w//1//1/n15G30G3bt3y9vbGdff09ExN
TWX2Ez52c8w6wjqsLiy4LjikPiSiJQKRoNqgkIaQ8Obw4FPBmCUC1rGOtuZQ
9O/evTs2NkbarmlWARvGx1LMs77ACfPMzMwoH1M+rnUcQcdIR8dQR1NPU9tQ
+58RA22VYyrq2upqmmqYHjl6ZDn9blHMs8ogA2lQICHIUDEyijLyJ/IhGSUT
JR4lHhbxFsYRxtbJ1uEd4e7F7t6V3r61vpkjmVih7HFZdE704rmtjpqAT8rL
yzlf/+rVq8XFxaxPEh4/fnzt2rWgoCDmIJjrAlNTU5cvX4aS5ubmVlRUdHd3
s+0KZvLxY9r27Q/f+dXd3/y2+913L77762u//k0XIzL869/0vPvr/l//ZuTX
v5n8zW+nfvPblnfeuXDu3HJKBfHCNDAwsL29PSEhwcXFpb+/f2x0DCLSQm9p
pDeWPiwNqA8g4t5V3pHnIuvp9Q30BkwRkB7RFtF/ZbHXtUzgkCGdpB26cRWw
YXwsxTwbj3lwCYwMjZydnB0cHEwYf5JZWVkZGxkTEVMTU3Nzc2sraycnJxdn
Fx0dHcL9LhkU86wmyEAaFEgIMlQMQk1wawc0BKQNppXeKXUrcCubLnMrcrNO
sfat8QUPJF9JPkU/RR41efToUV5e3is96CBGk2xtbSW2unjxIuJQk6ysLJI3
sVHgoaGhlpYWHDKNRgNjj4+PL37s8LEZO3bcf/fdG++95/fLXwa//Xbk22+X
/upXiMe9807Or37l+8tfxr/zzp333rv73nv1774b6OdXvAyUlpamp6cfO3YM
En/48OFNmzb94Q9/CA8Nj2iMgFjU0GuKJops02xjzsXAomj5aBkEG9BGafAn
WISAdUKbQjlUk9raWigp9XaPDJksExTzbDzmYY7nZWtrKyIiIioqKiEhAWZA
HFVOSUlJWFhYSkqKGEtLS0srICCAYp71AjKQBgUSggwVI6M4o/hhcRO9KWM4
w/+Uf0xnjE2qTVBj0MnKk7YZtp5lnl7lXrHdsc305ip6VUxuzOK5rY6a0Bkd
OS7hhR1EpKioiHg8cuvWLR8fH2Y31GQD5K+3txdcDb2rqKjo6uri/MQSPvbe
u+/eeu+9jHfeSXrnncBf/nLmv/8bhhbxwd/+Nv7ttxPeeecW4WN/9av62tqJ
5QGlnZ6eRgSnVE9P78yZM4MDg0E1Qf9Uk8ki51xnWUtZ1CWjMCO7DLvQtlBi
0auqCTf+tlhf2Dg+lmIeUmI5zMP0sfb29vLy8tLS0rCy7u7umMrIyFhZWcHE
IhErED4WtzPFPOsFZCANCiQEGSpGel56SFNIfGd8VEeUW65bYG2gV5GXXbJd
RGuEf6W/f5W/V7GXV6lX/Ln4qDNR4akv+UoNJL9qarK0pxkgIjTeL1y4MDU1
NTw8vOIFWw5AyChSXV1ddnZ2QUFBa2vr+Pj4Eg5z4vHj9C++ePBf/zX6y18G
vvlm+H/8R9Z//mfKf/xH2Jtv0v7zPyPefNPu9deLfv7ze2+/PfH22w0///np
trYVP5Yb124E1AQ00Bvq6HUFkwUnq0+mDKYEtwY75DggXjhZiPRaei0C1glp
Drly+Qon2VJqsmF8LMU85MFKMQ8ugY6Ojp2dHSyrkJDQ4cOHYV9R2RCRlZWF
m+Xh4VFUVMQKMLrq6urcGEmQYh4ugQykQYGEIEPFOHfuXHRMdGR0pJSMlKOz
Y0xcTGxCbHxS/PNIfCyCp7enpJRkSFgIVmtsbKQzyAqN9PlZ3b59G0S9Oh99
NTScGh+/+fL1FsDp06fJ0zfOvXv32tvbi4qKIJEVFRXXrl1b5gvH2SdPwtTV
0wQEkoWEEhEEBVOEhBIEBRFPFRKKEBR0O3QoXUgIiWlCQiECApf6+lbqWJi4
d/eeR6RHSE5IUE5QcG5weFF4aH5oWGFYdFk04khBOhGwjluE281Rjq4m9dfw
hvGx65R56uvrx8bGlrz5xmaeR48ewaBaWlpaWFiYM4C4mZkZETE2NtbQ0IDF
tWTAwMDg0qVLK3UsTFDMwyWQgTQokBBkqBjJOclRXVFpg2mZI5nZo9lZN7Ky
b2ZnXs9MG0rLGMlIv5aeNZqVPpyOFZIGknyifTzcPT766KMvv/xyZGTkOgug
L1lZWXfu3FnxEra3n7a09LS397Oz87O39yeCpqaliYkLc5ZYamvrGxWVwEme
MzMzKK2trW1JSQka2py844NK1tU1lJRUcRKKiyuIbi0XKcDw8HBDQ0N2djZ0
BJrOFMfOzs7U1NQ5v1FMTEwwfzEAl0J0XlrgRcZUeMYyy8W/qZ/Snz56OieM
DI88efRkTiLnhejp6eno6CD+7/j3xIbxseRnHtQ0R0dHdwY8XsDIyMjGxoY5
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
uXr16tDQEGpLWFgYlJf4aO3hw4c5OTlLLh4UbTn91WPzysrKRXor2vAglY9d
BvMUolKZmJjY2dkpKSlJSkoKCQmJiIgoKioeP34cxVNWVpaTk4PDgZuFjz15
8uT8vVPMszgo5mEFxTzLBOVjKbDF8isGyKG9vR2NWRAjSKOzs7OGAUQwW/MC
9+7dO3v2LBG/cOFCT09PeHg4qDUzM8PTM0RMLFxCIpSHx1RZOVNQ0E1AwFVM
zP/QISdG3JmX11xBIXURH0sArWbm4xHiZr96dTArq5BGK144FBEhO7uosbFl
maeCEyQlJYEewZ+JiYkgTzpjWPZV+HOEEBSC5LkNppqwBWoCxBQnoa+vr6Gh
ITU1Fb5iYGDgzJkzqA+oHqgbpxlAhLnV/fv3mYN+LlNNrl+/vhw1QeHz8vKo
t3trnskymScjI8PPz+8EA7Kysm5ubsRnqEZGRurq6tra2pgqKCgQvQEs5GMJ
sGOeqzA/+RwAdWmZf8FzCIp5KOZZ76B8LAW2WH7FQGsXNP6qt+fs7Oy5c+eI
H1rDw1NERMJkZZP377fdt8+Sl9d65041THl5bf7xD2l+fpdvv9VWVMyUk0th
+10BK9Carq6uLiwsFBERefhwKj09/+uvnQ8cCN2/P5iP73nYvx/x0BdxhBAi
7NkTdPy487JOBGcAK+LYwYeQWhw+ztudO3dWZzhLnBycmcHBQW7vCHvBvhZa
Oj4+DksQFxdnZWXl4+NTVlYWEBAQExODqY2NDcTF1NQUHsPX13ehISOROQzA
kou3nDeDdOpvC9L42OUzDyoh0RWqioqKoqKisrKysLCwkpISIry8vBoaGuLi
4q6ursRXB/O/K2DFT5nnYXZ2Njywvr6+3gsQowbozQMM8yv9n7VkUMxDMc96
B+VjKbDFMivGzMwMmrfLLENiYoa4uJWMjNPBgwbCwsbS0vbi4ickJa2lpGzF
xc2OHrU5fNj04EFDKSkHCQlbb++wxXObnp7eu3fvpk2brKws8vMrDhwIO3qU
Jiwc9dVXujt36u/Z4yAgELxzp97/Z+89oNu4zvRvZVN2N2c3X8pJdjf/XWc3
sTe7WSd2HMexrS5ZlizJsi3bsiRbkm11yeqyOimREnvvHeydBAiSINgJ9ir2
TpEUe+9iL/geYmwEIUEKJEFwQL0/3jPnzp07dwoun+cdYOYO0q5dtli0b18g
0vvv+1+4YL7EA2E/k5OTKSkptbW1y7qVrKysed5aDg81NDTMzMyE6fj7+8fF
xQUFBWGK6AIrwmtcXFwePnzo4+Mzl8mWlZUt7qlhHH51dTUzrvsiVmcgN2FD
HKsU5UHocvLkSYSXn332GcLXc+fOHT9+/PTp04gtkTlz5szRo0cPHTqEcuTR
beZvTao8t27dioiIYMbLunbt2t69exEPIzZGyYcSLl26xNx2y7y/4KnjZa0C
SHlIeZYOxbGEXJbYMXBpv5TnNxmmpiaHh58g3bunkZwskgxz8mRkZHBoaIBJ
hYV5N2583d7egvz4+FPG0x4YGEhMTIQ1nDlzWk/PbOdOp337gj76yO/11y+t
X3/zlVeOIYLdsEHj9dcv7N3rhQj2448DkN57z+/CBbMlHohaAIlebkPBR8Dl
cuf6YqSzs/Opb0gvLCyca3V0DljP4oamRPBjb2+P1b28vBaxOkNCQgKOTvEx
i1YfbIhjlaQ8U0NDQ4ODg5qamggSmK8rp9XnyRMUYlpQUHD9+vW2tjbknzqS
v1R5EAkbGRkxT5Ch5X379n366ae7du1CBHv48GFM79y5wzxEBpB/FuJYMSkP
Kc+SoTiWkMsSOwb+qYVC4YJW6evrKyoqgprl5uZiyvy8BdcoLy/PyMioq6sr
LS2FocgOGY3/XCya0Y4iv1L5+vK2b7dHHLt/P2/DhjtvvHHlz38++9prX735
5pW1a6+h8OOPA5n03nv+yopjHz16FBkZOf+LdRZKdHS0EvUf5zw1NXVGg+UV
5Q9zHyqUHj5kXv4+D/X19WFhYcHBwdnZ2bl/S35+fnFxce68wE1QbXZ5RERE
SEjIUoYTz8rKwqcje//bQmlsbFT8/USrEjbEsSxXnsDAwIsXL2praz948ACx
K0LZDyTgqA8cOIBCrW9R4vexpDxiUp5VDcWxhFyW2DGgKvO/EWYGuKSF+yQm
Jrq5ufn6+kLT0tPT/f39cZkcFBTU1taGa+HY2Fj8vzPXrbCegoKCmpqalpYW
uExDQ0NrayukBhkfH5+qqiqoFmbnkhfEsa+/rrdjh+P27Y5vv223ebPphg36
Gzcabt5svG2bLQq3b3dg0ubN9idO6CzlVDBERUUlJSVhJwf/lomJCeaV5TBK
ZgrGx8eZr4NwWpDBNTsymGUKZWlqasK1PM7b0vdQ+pNZWloaTj4yMPfJsckH
zg/cStzcy909Kz09yj08Kv6aUPjXfKm7QbRBnCjuqRting5GkKD4AJhPpb29
ff4Hw9FhOucF+4MAAz1t/moMcp8ZQRiDRpiBm55N2BDHslx5EMd+/vnnly9f
vnTp0oULF06dOnX06FHmnQXnz5+/JMO5c+euXbu2lFPBQMojhZRntUJxLCGX
JXYMKMY899XPBu6Di2WsBQWDmsELEhISoMCYvX//PvJwDVy34qqZuZ1eIBDg
yhq+A68xNDQ0MjJyd3c3Njbm8XjOzs5nz57FNbKpqWnntyOrzKCyssrdPdDT
k+vhEYyppyfPyysECRmm0MOD+20Kjo0VLeVUiCUvkUlOTp5dDgHPzMwslYA6
OFj4ICzy4cOHzNPNOC04J83NzfP/aAVDWcrtVWLJw9Q4Yzi92dnZcCioIgxl
enTusUlrvnWSOMkm3eYB/4FXlZdOqI5uuK5VipVBpIFLgYtJrInDQwfDSMOE
8QT/Rv+E5ISl7MZy0NHRES4hal4Q/HC53PnrSGEaRMuyG0IvRfeju9RWthGW
Kw/+wRHu+knwlxAggcn7/S3x8fFLORViUp4VhZRHZVAcS8hliR0Dl40i0QLC
v8nJydzcXPyH5uTkODk5xcbGwj68vb1xwZufnw9zycvLMzExQR0vLy+IcGFh
IfQZnoJVUAIdgOzDVqCrLi4ucAqoNIfDmf9FNipDKBTK/X4GB2JnZ+fp6eng
4AAZ5/P58EeUQMmZQa09PDzgLBUVFTi6iIiIpKQkue0zv3ktZQ9hRg8ePIB9
wJfhpyjBRq2tracmpmzDbV3LXDlFHJNoE/0IfdiH40PH43rHg5uCYwdj7wXe
u2B94YbbDX4b37fOl21ugpAGQcKCAhvFW8aJkv16hJ62YEMcS8ojCynPSkHK
o0oojiXksvS71KB+ytoZCGxRUdHs8rq6OgsLC+Yl1wMDA3AfZW1RucDsRkZG
5C5ydHSEXzDuCf+F9JmamnZ3d0PMy8rKrKys7O3tS0tLb9++DeucazxJWFVk
ZOQSd7Kzs3NwcNDY2Bg2zXgZdntybBJuEtgUaJNuoyfQs06zNo03veV567LD
Zfss+4iOCH2B/mmT07qhurxWXkBTANvcJD4+vqqqCuezVQJKxsbGZF98w3wu
4+Pjc70NBxWYt3bOKIePNDY2St/PLiY3YUccS8ojCynPSkHKo0oojiXkIrdj
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
0+XLl5X0znrlQHGsXEh5WM7Qk4HsssTMim9TpUz+b2czKkRlj/IWrTz9/X1X
rhifP28jSdYXLtgyiZmVlkjyKDHs6CDlUQj2iAbBKtjTMVaHm0xNTYWEhMgd
GqW6upp5KKO0tPTWrVu+vr5T41P3ve+HtIWE9IQEdwSH9oZyO7hIwiEhr5MX
0BKAFNQWxOvi8Vp5hrGGubm5iu8z1HV8/Jt3neOElJeXL1oAcVBdXV3SWejb
Im6fk7aQX9r1nfxfr+n8h+nU/fdr2n84Pe3C7D9OZzCdTv/ApHXR58SKjSPe
3NyMY7SyssKJZWy3s6vr9JEjOtev3zp37u7ly1+fOnX11KkLx47dOn8es/cu
X75w9CiSxsWLqHPq8OF5Bo2XBf0Q53aZfnHLzs6GiWRkZKAXIQhBbwkMDIR5
2dvbs+c3Popj5ULKw8Ba5amvq/r5o3/6bt8apL8bWPP93u/8Xf+a7/av+V7f
dAZTJGYp0qc5e8SKDXA1W3l6ejo2bTLYtk24aZPv1q3c9evdkN5802HTJj/M
bt3Ke/NNe6QtW4Leflu4dq1Rba2cIdFmQ8rDHtEgWAV7OsbqcBOQnp4+j9hi
30Qi0RoJDrYOjgmOoZ2hOqE6bqVuJrEmIrGI28Y1EBq4l7uniFPSxGmCfgHK
Y0di3UrccD0+pDCGhoavvPKKiYlJbW2tpaVleHi4ubl5T08Ps3RkZATqJK2M
PErmWjQ8PLx+/fr33nsPbojLc2tra29vb8id4jsD9uzZ8/bbbwcHB2XmNf19
4/9bI16D9L2+H/007Y1fRLyzZuo7P+j66U8y/vLj7Fd/WPNfzFKkjaknhroU
ah8O3tbWhmNMSEj47W9/e/HiRZzniydPGmtqIpo9+MEH+/bsOfD+++9t337m
88+Rv33hwt5du/Zs346MoYbG+ePHGxsbFfl88SlERUUpd/QbGP3p06dhHPiA
EDN4eXnFxsYy77JEt8ehDQwMsGdIT4pj5ULKw8BS5QkKrqws/lnHjxhh+eHg
P/yu5D9fy/zdd6a+88/9P/zf0l/9tvy5f2v+mVR59hfvGepRqP3ZypOUFL9j
h+m778auXWvyyis3Xn756h//eP3FF8+sXWuG/LZt3n/4w4UXXzyNzO7d0Vu3
WjQ1NSjy+ZLysEc0CFbBno6xatykvb19xg98YsnRwWXKyspwLGjq5s2b169f
v3HthgHXgN/NP2N65m7AXQ1fjbjxuAf8B4F1gS4FLokTiebx5pwCjkOOg2Ou
o0eFh5mZGU9hDh48CMP64x//6OTk5OPjg33AlMvlMktxxd3Z2SmtjH1OS0tj
8shgVroI1VD55z//+d/93d8dP348KCiovLwcFoNDUHxnwAsvvID9+XDvB37c
lB82/YoxCwSu3+v/5x90/uwXkdt/kvXnfw1991/5e/6+/edSN3lFeDDEP1TB
TQQHB/v6+urr62ND//Iv/3Lt2rWzX36JOPbq6dMfv/vurrfeOn348NsbN577
8stNb76JaPbGV1+dO3oUQazBnTuH9+3jcDjhCmBgYKChoYFtKVJZQfz8/JgA
Y//+/ffv30dE7eLiouD3w6qH4li58Eh5JLBTefZ+sDcqKuxfun7KCMv/lP3n
Pw79/Y/6fvhq9v/8T9mv3kh78c3U3/+455+kyrMrbXNoIF/BTcxQnuvXr27d
aoA4dvNm55deuvy73514802T3/728Pr1Vs8/vw/R7Nat7hs2WO3ZE/3uu1Gv
v36bw3Eh5VEE9ogGwSrY0zHY7Ca1tbVQVMXrQ7RnlECTdXV1ESlB6/z9/Zlr
6onRCdto25CukIu2FyN6I+543wluDdbw0QjtCHXOd3bIcLjqdNU42hj+wm3m
upe5FxcXK74P2dnZ8fHxzIZwle3s7Ozp6an46jPABTvzFElra6uFhYW1tXVJ
ScmCWuDz+YWF06+PL6nq+379L7/5VqT2P/+/3D/+qOjFf+N+8CuHEz9L3PDz
6G1/3/YLqZtsyTgtHl/Yrra0tKAPdHV19fX3XzxxwvTevbOff378009PHjp0
ZN8+lHyxf//pI0f2vfvumSNHjh44gEDXSEPjq6NHcXoHFCAqKgqfIM6DIpUV
pKGh4ciRIx4eHh0dHebm5nATR0dHNXITBBgbN2782c9+tm/fPgXfN0TKowik
PEpUnubmxz9t+yZS/ZfWnz5f9e//VfNv65L/sCv8zT8U/OZPOb/9Sfc/S5Xn
09IPxAv8OV2qPE+e9G7fbv7uu6K1a81ff13/jTcMX3313saN9q+9po2A9qWX
rr75ptlf/qK7Z0+sJNY1LSkpIuVRBKUoD7H6IDdRBAhUXFyc4vVRWfpghZS2
traRkRFbW1vmdzGU9Pf06wXouRS5aIdqB7UGXXS4eMf/jlWGlWagpk+dT1BT
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
SkpwOBz0iLds2dLY0BgSF+KX7OeL96Vhyf+N++H9XCJc6hvqaR6op+eZurqL
unqAuro/xQIvXw56G59lgdra7n/+SbujXV5Z7h7jDseiWYdZFo2PRv4LxDE6
Ohqoz83NDSjx9etpD4/Iixf95qnAX+zcOY/S0kpoPGVlZbm5uZGRkWFhYffv
3ye/mTJ9yMTE1sjI0cjI4V3mqK9v3df334++gKKhtNLS0oCAABCUmbMmzjcb
eUdHh7q6g6amt6am18J29aq3iYnH5CSNwbzA9kQisba2NioqCuTA09MTeN7P
zy88PHyuyEIdAgMDkdYOvoeXl5eHhweog7u7Owgr/Fd6ejpcDX9/f1tbWxcX
F5AnGxsbuMiQCLmwGzQkkBL4r8LCQkiHQ9P8WWcB82NpAmOepTGPpqbDtWte
1655gmlpeWlpeSPxOealr4+jM/O89vUN0dd3MDR0fKfp6t4oK6uYj3n09Z20
tT20td0Q09FxB6NuzkiHfeyXzzy2GhpQkPu7zENLy83MbILWs/2/D/NgWHtA
T8NAv5oAjUOPkh4lzwWw2YULF5iZme3t7efmxsbGKioqwg6ebp4ueJf86fw8
ct5MyyXn5pPzc6Zz3sRf58JmEbko9EFoUWnRzHKoI09bW+8zMPgyMZUzMRUz
M5fs3Zu6e3ccE1MRM3MpbDIzl0E6YoyMFQcOeAwM/Hel8unpaWo5KRkpcT1x
cGhqNaAO1E2IQGWQeA45xzPBc2Yh0J0HQuvr64NNJSVPBoZCFpZiikE1CpmZ
85mZiyjxAhaWEko6VKx427bEqKh0ajnAjUD10JYg3tvbIyeno6rqpaLi/tbc
zp51VVV9E1dV9aCmq6l5ycjotLXRGKMNTFtTUzOTyaurq0FoqG2Meu6ghszM
bocOkfj50yiWfugQkRJJpcQhPR3J4uMjiYjYv3w5e6YaCOH0oZkBtxcUFHR3
d4P3AsVCBA5KXdwcInNfhj558gS0AP4R9odbANQZZAj8HxBEb29vaDCQC8oI
Yp2SkgK7xcXFQTpcK9AdSOzs7IyJiVnMJ2pkzI+dBxjzLIl5HnBwOAoLpwkJ
JQsLp/DyhnFy+goJ4YWFCbApLJwK6W8t7dAh2/5++jKPpqbVmTPAEl5gysqe
ysoeSkruEIFNJSWPs2e9kSwwaWnLuDg8tZyZzNPX90xIyFJCIlFCIvatxYiL
R0tKvolLSsZR0yUlE/n4rB49Wi7zOHBxJYmLx4uJgSWIiydS4nGwKS6eJCGR
8DYr6fBhawmJ4b+20r8b82BYe0BPw0C/mjQ3N8NNTY+S5wLoy8TE5JNPPoHO
7NxcIAopKSnoBYcGh1r4W1zzueac61zwqqCEXJI7nutW7GYYbuhT5aPppemU
46Ttr22Ft/Is9byIu5iZlTk2AxcvXuTi4oqIiKiru3XgQDAHRyUHRykXV/WO
HXZbtujs2xdy8GAWGxs4kEmQjhg7exUXl3d3dye1EKBBVlbWkydPAkelZKYk
9SUVkgsLyAWgXzHtMVA3jzKPYnJx0esiS7wlLg8HlYRcEBSvBC9qIdCph39f
t27d9evX799vunQpZNMmqEAAE1PUb79d3bbN6I8/LCDcvdtl5047SnoME1P0
tm0mv/xiHBGRSi0HmF9XV5eNjQ1Isrm5SV7e6NIlv4sXvSnmw8d3hp9fUUXF
+cQJ06NHr6ur+yJZ6up+J04YwP5jfwU0pIqKCmh4MxOB4YHzR0dHkc1Tp04J
CAgAIVdWVsKVOXw4S1SUdPhwJh8fKLIX6O/OnRdZWW0PHLAHjYZ0yBURyZKU
dBoY6JlZrIKCAj8/Px6Ph+sQHh4eFBRUXl4+MTEB9wWiZdQ9h4eHWVhY4Lig
ODPXD4VaLfmdY1tbW3097Sdmc4H5sTSBMc8SmOfOnVsCAm6SkiQJiVQpqQxW
VuM9ey5yc7uKioIXliQgEATpb40kKurw9CkdmaelpdnICMfGdkJGxuD4cQsO
juN8fEoCAqoQiotriohcgvQTJyzB+PmVubgUY2OTaDJPS0ujlJS9rGyyrGwC
xRKZmS+ysFyWkgoTEnLh57eVk0tCsuTkkkVE7Fpalss8LoKCKUePJsnIJB89
6icq6nzoULSUlMrevRZcXJbc3JCSTMlNkZa2PXq0d2Dg78w8GNYe0NMw0K8m
jY2NtbW19CiZJvr7+xkZGWc+h0G+nIdquLq6gtBs2LAhJioGF4+77H7ZONrY
OMr4BuHGCb0TjtmOofdCbdNtL7teNk8w1w/RN4o0SulNOWt91tLKMnkGODk5
oRw+Pt6IiFB29jCqH7tnj+/Gjcr794f/8sv5zZuvbt6swc5exMFRRnFlq1lZ
XWB/aiHx8fFffPHF//zP/5xTOxcQEZDcn4yoCYSpA6lqtmr2JHsQNajeJedL
+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
e8cO/d27Lfftc/rjDz0GBitGRjceHhI3N5GPL5+fv4iFJbi2duWniOzp6T5y
REdBwUdBwWuGeUIoL++JRBQUvClxHwkJ3c7O9sUUW1ZWlp6evrJU/+TJE+qS
ozExMQEBAcjbcHQC/X7s+wJjntXEyMggr8B1rkP+3EI+7HwenIe8OQ95ch7y
4haCiPdBbjcuQV8Ofm8uAW8OPp99zHrvxTzgxyopgR8brKzsx8mpyMOjIiCg
LiqqzcWlLCioLi5+XVHRW1HRS0UlUE0tRFragj7M85SPz1pYOFlYOEFYOPGt
JVAs/m0EUuJFRJK5uGww5lkkUEUaGNADNDQMoOXOzo5Hj9oMDQ2IxLSOjvZZ
VlxcpKOjTVmrsR3oa+HSVkFNnj9/npmZicSBBIhEIrLe4seFoaHB06ctTp/2
UVIKVDkbeuqkG4TKysEqKmEQV1YKOnEcd/yYs6KC/9mzITIyVrNmvxkZGSkq
KoJzp7le51s/toiPrwDc1z17bMCVFRKq3bnTkIHhBiT+8YfOjh0Ghw4V08+P
7e19duKE0YULodLSRjIyxoKCF8F4eJRkZc3U1SOOHjXl4lKA+PnzgefOBcnK
GkEza10EgO39/Pzq6+sXs/MiAXL82Wef8fLyuru7p6SkTE9Pe3t7zxqjhB6s
GT8WmKer61F7+0NjY30SKbWrq22WlZYW6Olda2lpgN0GBzHmWRmMjPTz8/uz
MOexHSzhYK9iYSZByM5WhsTZ2EqZmVKZmFIOHixiO1jByBj5XsxD9WNVVIJE
RLSFhDS4uc+qq8fy8KgKCl6BRMS5VVMLpZ8f29vbLSrqIC2dycPjzMuLY2XV
Z2W9vn+/Bh+fu6xsNh+f27596hAeOZJ25Ei6gIAjxjyLBBpIAwMKgYaGERgY
Li195dSp68ePa584oXvmjIG8vCGEZ87oQ3j6tP7Jk3pycloQgdDGxnnh0lZB
Tf7880/oF1NHPQ8ODiKPR+h60BUH+LHy8lbc3Gq8vOePHDHfv1/y9Gl3Xt5z
KirB7Ozyp065cXGdPXjwlJSUGT//JVlZa5qzOA4NDeVQ0N/fPzN9YmJEXNyL
m6uch6tg2+/6f2w33b3Lfg8D7o9txgy7HBl2O+78w3LbVj0uzhw+3gpmpnC6
+rHHjllzcJzk4VGWlNRjZZWRkNDl41MVFr7Mxnacl1cZ/Njz54NlZAySkhLK
FoGQkBAg//z8/MXsvEjcuHHju+++O3bsWEREhKura3l5uaen5zJnN6If1owf
6+UVt3Vr4O7d0du3R+zcGcHAEMvAEEcJYyCE9F27IrdvD929O+b338MMDPwX
Lg1jnkUC/FgBgcAtW8y2bzffty9040blAwdI27aZc3KWb9mizcpK/P13o99+
09y7N3j79hvMzLP9WATzMQ/Fj7VQORuurBTIxXGWl/ucoICmiLAOD5eakOA1
MH7eS5zsSkoKvudUI6SPWNPTj804dMh7z55zjIxXOTltd+6Uh5CJSevAAWMG
BlVGRs0jR1LBj+Xnt8eYZ5FAA2lgQCHQ0DACAyOUlOyvXPFSUrK6fNnz7Fmb
M2dMIa6qaq+sbH3hAu7iRdcLF5zPnr1x7pyLra3b3BJm9h9XQU2Qo8waN9rQ
0ACasjqT+60IKH6spYSEKQeHIgeHgpDQNWlpSwYGkWPHHISENFVVQ48fd5KQ
MDl7NlhQ8OrRo7Ofx85EV1cXkUgsKCiAa/L06VPo5r+enpI8qsMv7sAvbst7
2AyMT9yaR9QEibwJxSA05xe3EZBwOMBzrbZ25b9SAz/25EmTS5ciZWRMRESu
cnEpQigqevXUKYf9+8XExLTBsxUUvKii4nvhQtixY6ZPny5qiO44KOXo6MpW
FRwS6hePcDErKytXeRX198Ka8WNdXZN++aVm167mbdtyd+1q2L69eOtW4rZt
edu3l23blr9jx82dO+/s3Fm7fXvh5s33dHQi55aAMc8SQPFjA3bvDt66VW/L
Ft2dO53374/4179OMTMn7tzpxMlZycyM37MnkIOjbMcOJ2bmiPdinunpqRMK
F+UUr8sp6kif1gCTVdA6cuoyRI4qaL0J5bVkzlyF3OPK14WklOnDPODHOsnI
5PDyurCxme3bd/ngQVOICAkFbdt2jJ3dev/+q6ys+pKSSeDrCgm5YMyzSKCB
NDCgEGhoGODHKiraXLniyct7XF3dTVRUlZ//pLCwsozMVWFhpWPHdMXE1BQV
LQQF5RUUrO3s3Gf+L/Qc8/LyoKMKbAZ9c7gHU1JSVuFOxOPxc6eC6enpSU9P
b2z8OGbtHhoaOHnSnI/v6qFDmkJC2pycqhwcKocPG0F48KACP7+GgMA1yDp9
2oed/ayUlHlj4zvWpW1vb8/MzDx69Cg/P//IixG3dFzeREb2RHo+OQssbzoj
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
2nrXtau367Vvee29kuVVYKbFnCVZshgkk5REigSYQYoZIAESOec8yBmYAGAw
g5wziJxBAEQmciKIjHkfp63xCBgMEQaDHuD/w6mu06dPnw5z8H3/nuk+PTZm
b2/P5XIZWR4dHW1tbUU5ZhnTgY/weLzq6mrmEQ8chexZDxTmL+M9tikpKfSt
yHLQ9DhWBpTHO9zNO9xd+845Czdjf4FXYLRPQKSXH98zMNrbX8Cx87I8e/20
R7CzD9c9MXUVlCciQvjuu0+2bXPeutVx82abrVsdtmyx3bzZetMmy61b7bds
sUPhli32WLpxo8PZs0YLb3lRyjM+Prxjh/lvfxv/9ttxv/qV+7/9m+W//qvp
W2/p/+IXtv/yL49++9vwf/7nB//5n4K33xa/8078r37lEhYWUVJSTMozC1Ke
ZcIG0SBYCBs6Rng496L29zrX7p88cfbCeZ0b1x/c0NHFVAcZ6fSi9s0Tx765
duXulUu3XV09ZCsODg7Gx8fn5OSs9K3v2JD0965yaar4YTqX1xWam5uUNDUy
MjI0NDQxMQE56u/vX5TUQwNDQsK8vX29vHx9fPx9fQN+SK/z3t5+fn6BWMok
Dw8OLv8bGxtFIpGapS86OpqxyL6+PicnJxcXl6dPn+rp6ZWWluJMwkTgLzgP
np6e0lvv2mENjo6O/v7+HA7H3Nzc2toaFVxdXbHnvr6+zI187u7uYWFhTPto
BJtY8u4hvF+Om2RkZCCMITdhQyPLJDgo6pOjtl987rx926PDh6y++JPLsT+5
YirLfHzEdtsWvc//6PjpJw52tn6yFdWrPOVvUp7ylVeeKX9/vqNjhKNjuJMT
19mZL00CZurkFMFMpUsjHBwCe3v7SHnmQsqzTNggGgQLWa2OgevfsrIyZgxD
T08fLa37d+6Y3bljeu2a/o0bT65c0dPReXz7tsm1a49QfuuWyb17Frdvm169
qm9iMvuZXHV+PbJ8QkJCvBFl+voi4+DgwOfzCwsLV1SaoL2JiYnqVD98HNgo
Mg0NDThMuADcAdOenp68vDwcdVRUFOzGxsYmIiKirq4uPT0dhXCNJ0+eREZG
2tnZGRsbw31Mf8DKysrAwACGzbQ/OjrK5XKXvHvLfGoYZxJHt5wWNB2NjmPl
lcfBIeT99wU7d6bs2pW0fXvUjh3irVt5O3bE7NyJ2cidO5N37kzcvTsVmY0b
xffuuc9qipRHOaQ8syDlWSYUxxIKUVXHYH6dGRsbg2K0SkEGs60/gHx3d7ds
0fPnzz08PCAyuLx1cnK9ePHBrVvGJ05898knX+7b9+mBA58fP37u9OlLn376
1cmTF/70p6+lcazJ1auPzMys5m4d/91xcXE5OTnq/yVrsYjFYrhJamrq06dP
IaHJycm4SC8uLl7RjarZUGRuMjIy0tnZOTMz09fXhw+dWTo1NQUrwSfV0dHR
3NyMfEFBAaboGD4+PnCfrq6uoaEhTFHS2NjY1NSE3uLi4gLnZW5ae/XqFY/H
W/LuwdGWM149Vk9ISFAyWtGah1Vx7JKVRyiMsrT03bSJt2tX3H/9l8Xbb+v+
x39c+81vbvz+92YffOD49tsP33vP6t13DffuTdm9O37LFuGDBx5zt07KoxxS
HnlIeZYJxbGEQpbfMSAO+fn5uJiFMEI0SkpKkqUgg9nkH+jv7y8qKmLyZWVl
VVVVrq6ukNbQ0FArK9vLl/WuXNFDvKqra/3tt9e//vqatvbdM2euII/p8eNn
lcexDLhqln09wvyzP29sjORyo/n8N6YoHi9b+r6elcbf3x/yCP308/ODeEqk
r2VXw5MjjKEwIr/SyNxEIegJMFOchJqamoyMjKCgIMQVDQ0NhYWF6A/oHugb
T6UgI1trYGBA9tLPZbpJW1vbctwEOy8QCOjXvVVvZJnKExYWYmTktnmzYMeO
iHffNdq/P2PTJveNG123bg384APnjRvdP/zQGTGt8jiWYa7yNDY+53Ijebzo
haTMzOxlnoqFQMpDyqPpUBxLKGT5HQNXu5Dxxf57jo+PFxcXMw+0enn5ams/
uH3b9KuvtI4fP3fy5PkDBz4/ceI7ZHbsOHDmzNUjR048eGB9547Z1av6pqbK
xvrG1XRSUlJ0dPTHH388As0JC7t+8ODjL780OHFCX5oenzyJxORRaHDyJJMe
/ulPuleuLOtELAyoIo4degirxeHjvPX29qrndZY4OTgzz58/X+kNYSvY1nxL
u7q6LCwsvL2979+/b2VlFRsba2dnx+FwMNXV1YW5fP/997i6sba2rq1V/MpI
NI7oZcm7t5xfBiX0tAVr4tjlK4+jY+gHHwh27kz6r/+yffddi3fftf71r7/H
9N13bX7xi+/ef9/tN7+5v3dv5q5dyZs2ie/dmzeOlfxYeV69GgkL4+/ff/P4
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
hcg6Rm1tbW5urvwiXNSXlJR0dHTMXQuX9q2trQvfCvMmRNksjEP+31NWuAbc
BEdRUFCAy20Yga6uLqwBYoULbeQxhV5hEQRKT08P1++jo6NY6ufnh6NDOSrj
8hwS5+/vj/Ls7OybN2+mpaUhz4x93dnZCUta7aNkHehIzAsfcT6ZsXFkPyLD
X5qamvChoMcyb+FkKqC3l5eXy1oYGRmBQUxKQU3mDjfm+6hXr14x7cu6Kz4R
uAz7e+PKodo4lpRn+ZDyrAqkPGqG4lhCIbKOERsbK/+TDf53cLUOQcM/TllZ
GbyjoqKira0NmaKiIlxU4mq9sbGxvr4e/5jM7UD4t8V/aHNzMy4qJdLxqFta
WrAWruXDw8NxrSq/3cjIyFm/j6wBN8HpamhogPLjROHwPT09cdFdWVmJWZQz
o99UVVXhRLm7u8MycDLhLNAxWDZOJqphivxLKVCzuro6tAnfYdrPz8/H+Vzd
Y2QhzK9vswrR3/h8PpQ/ODhYKBQig1ONTo5ziNm8vDwXFxdkAgMD0TmZ+waV
jKsv/+sePW2h2jiWlGf5kPKsCqQ8aobiWEIhso6BS3L5wUMgZWFhYRLpfyX+
lXDlbmRkZG1tzeFwcOWO/1Mo/61bt5gregcHBx0dHTc3NzMzM0go6uC60tjY
GJfzKLG0tIRyznKT1NTUWa/FWQNugj3ESZO9cQbX5vO9QxDX78zhzDf+pAzZ
uCvd3d3JycmypzkIGdB5gUAw60GehIQEWDZ6o7m5OcQfwQ+CnMePH1tZWcFE
PDw8uFwulsJr0LHRje/cuYP6Ct+rjv8L+R9VyU1UG8eS8iwfUp5VgZRHzVAc
SyhE1jHw/zLrHSLQcPzH4TIc3pGYmIj/OMz6+PjY2dmlp6c7OjoyYzsHBQWF
hobiHzMnJweuATnF/xqsAf/guA7FVae3tzf+kZOSkuQbh5s0NTXJl6wBN5FI
f4DDmcSFNpQ/TUqKIphFOAk4kworyNfElMfjicVispL5yM/Pr6yslC8RiUTo
mSgsLCzMy8trbW0tKyurqqpqb2/Pzs5Gr87MzEQXRSfMysoqKSlBNFVXV6ew
cTSC9mWz5CaqjWNJeVQCKc+qQMqjTiiOJRSixE0U0tDQYGtry7wkuq2tDRf1
8z0GOxdsgnlAVbJ23YQBx4KT06I6yEeUMz09DQcvLS1tbm5mbjYrKiqSfwPR
3K87YCuoPKt88sd0d3cXFxfDbuSfrYC5I77SoN6oclY6jlUIKc9CIOVRM6Q8
6oTiWEIh8/26Nzw8HBoaikLmK5Hg4GBcmEPtcaWJ682AgICQkBBra2tmQBvY
BGZRB6IXGxuLa0Z/f38UMk9fxsTEYDY+Pt7S0tLZ2ZnxC1xarr1f94jVBZ0n
KSmJGWcJXRf9UMlATAKBQHkF5pso+e9DGPr6+jo7O2Vx0TpkRe8rIOUhNA5S
HvVAcSyhEPmnLeTvmMI1Iy4z4QX4p7Ozs7t69Sr0HBbg6upqZWVlYGBw//59
Hx8f/Mc9ePAAfuHk5GRmZlZfXw8PwmXj3bt3b9++bWpqikbQ8sWLF9EI3EdH
R4d5ZQz+T2eNBEhuQhAagcqf8yLlIQjijVAcSyhEyeg3z58/7+/vr66uHhoa
ys7Ohh0woy8WFBTU1NSUl5c3NDQggwrIoDLyqIkLRrgS8qjW3d3d0tKCRsrK
yurq6goLC1GTGaKEGa5EHnITgtAIVnrcLVIegiDmQnEsoZBZo5FD9uWHW5Sn
q6trvkWLAl6TkpLCvIpaHnITgtAIVuI9CKQ8BEEoh+JYQiGz3g6Zl5fH3Jk2
946dyMhI2I3yu3reCFoWCoWdnZ1z94TchCA0gpV4Ly0pD0EQyqE4llCIwo4x
OTk5vjIouUed3IQgNAKVx7EySHkIgpgPimMJhbCnY5CbEIRGsHJx7KpAykMQ
GgF7RINgFezpGOQmBKERUBxLEIT6YY9oEKyCPR2D3IQgNAKKYwmCUD/sEQ2C
VbCnY5CbEIRGQHEsQRDqhz2iQbAK9nQMuIm5ublCN6mtrX348OHw8LD694og
iFmsvTiWlIcg2A97RINgFezpGHATKyurwsLCuYv6+/uzsrImJibUv1cEQcxi
7cWxpDwEwX7YIxoEq2BVx+jr6xsbG1vtvSAIQhlrLI6VkPIQhCbAKtEg2AN1
DIIgFsXai2MJgmA/JBqEQmZ1jJKSkoiIiLGxsfj4+Obm5oyMjJ6envT09KSk
pJSUFFRobGwsLS3Nz88PDg6uqKgoLCwUiUStra2hoaGYrtJBEAShPlYijiXl
IQhCORTHEgqZ1TEiIyNTU1NhJUZGRnp6euHh4VZWVgKBYHR0FIt6e3sNDQ0z
MzP5fD58BFOxWIylKIG5YK3VOgqCINTGSsSxpDwEQSiH4lhCIbM6hlAohEd4
eHjATXR1dUNDQ11dXeEjXC4X+a6uroCAAC8vL5hIcXGxi4tLbm6un59fa2ur
paVlc3Pzah0FQRBqYyXiWFIegiCUQ3EsoZBZHaO3txcGgUxHR0dLS0t+fn5h
YWFiYmJOTk5lZaVEOqBiW1sbppmZmU1NTYODgzU1NXCZvr6+gYEB2Q987e3t
b9z06OjoChwQQRAry0rEsaQ8BEEoh+JYQiGzOkZRUVFtbW1FRUVSUhI8oqys
zMPDIyEhAS4Dv6ivr3/16hXK8/LyYDGwm+fPnzc3N3d2dk5NTZWWlgoEAjQC
T3F3d0c7/f39DQ0NqNbY2Ig6PB4PBoRG4DXFxcWwpE4pqLBKR08QxKJZiTiW
lIcgCOVQHEsoZO5dajk5OWFhYVVVVRkZGdB5Q0PDsbGx2NhYAwMDGxsba2tr
HR0dVLOwsAgMDDQyMkKhvr4+zKWjowMu093dfffu3QcPHoSGhtrZ2UVFRWHq
4ODw6NEjV1dXHx8frGtvb+/t7X3v3j2siHYiIiJW6/AJglgsK3R/LCkPQRBK
oDiWUMisjpEuJS4uLjMz89mzZ0VFRQKBIDw8PCUlxcTExMnJydPTEyYSHx8P
X4CPGBsbc7ncgIAAHo9XW1vr5uYGs3B0dIR9wEdEIhGmQUFBaNDW1jY4OFgs
FqMCjIbxI5gUbAXbWq3DJwhisaxEHEvKQxCEciiOJRRy8uTJWSVDQ0OYdnd3
r8buEATBduaKhkoaIeUhCEIJKlEeYu3x1ltvHZPj+PHj6CrIYIr8MYIgiB8D
0SDlIQhCzahEeQiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCWBv83d/93f79
+48RBEEsjLfeeouUhyAINaMS5SHWHrCS1d4FgiA0iZMnTy6/EVIegiAWhUqU
h1h7nDhxYrV3gSAITeLYsWPLb4SUhyCIRaES5SHWHtQxCIJYFCoRDVIegiAW
BYkGoRDqGARBLAqKYwmCUD8kGoRCqGMQBLEoKI4lCEL9kGgQCqGOQRDEoqA4
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
P38/5POf5ucV5MkSj8+7ePliWnoa8sUlxbO8hiAIdaIpcewbIeUhCA2CDaJB
sBA2dIzS0lIDnoFflZ9frV9gQyCm/s/8/ev9A+oDvKu8kQIaApCQQZ2HXg8H
+gZWe5cJYv2yZuJYUh6C0CDYIBoEC1nFjlFWVtbT04NMZWUlp4yTI8kRDgnt
M+3DWsM8Szzdi9zdCt2SJclpkjTnPGefSh9ksiRZjgmOLwfpdjWCWDU0PY4l
5SEITYTiWEIh6ukYXV1dTXPYt2/fP/3TP+no6MSKY73KvDIlmaGtodpW2rpB
ug8CHzwIeHDD7YZ/rX+uJPe68/XrTtfD28LhJiZck5TEFPmxcQiCUCcaFMeS
8hDEmoHiWEIh6ukYZWVlqXPYvn37z3/+8zt37vB5fO9y7wxJBq+bd8nmUkRr
hInQxFBgeN7svP8zf88Cz+89v4e5OOU45UhybGNsM9My+Xx+QUEBeQpBqB8N
imNJeQhizUBxLKGQVewY1dXV/f39yFRUVNjn2CeOJQY0BDyJehLzKua23+17
Qffcy9xNYk1CWkJu+dzS5+r7NfihjpnAbHhgeGpqCg7F4/HIUwhCzWhQHKsQ
Uh6C0EQojiUUwoaO0dHR4Rrg6s3zvqJ7xZJj6cP3CRAG+Av9/aL8kHwFvo4B
jpd0L3EiOL58X59Qn/GxcWbF6enp0tJSeEp+fj55CkGoB02PY2WQ8hCEBsEG
0SBYCEs6xvT49Ojw6GO9x9lp2ZOvJmelypLKB7cf9Hf1T7yakEzNWfcHT8nL
y5vlKTMSyeSCEw2pQxALYc3EsZIVUx7p0oWmmRk1HSxBaDQsEQ2CbbChY9TW
1j7yeOQgdHjo+9Cca24fY+8gckCyF9ojj2TJt9Tz0bONsnUUOj5xffJyWMFT
wzMzM/AUPp+fm5s7Pv6Xr00aysrEWlrJFy8mX7qUoq39Ol28+DpJ86/LpYuS
Ll1K+O677MBA9R43QWgkayaOXTnlKStrfPyYY2rqK00+c5LvD1NfQ0NOeHiq
eo+bIDQSNogGwUJWsWNMTPzlLTlwAU45J0uSlS3JjpuIi5uMix2PjRqISpOk
xU/GJ0oSUZgqSU2XpKOOfZz9YO+gkmYrKioiIyPz8/MnJyefP32a8vbb+e+8
k/vuuwnbtiVu25ayeXPKpk1JW7fG/eEPme+/n/7hh1iU97vf5fz61+kmJmo5
boLQbDQ9jlWD8hQV1WtrP7l+3QTp6lWza9f+mq5eNb9+3fTaNVNm6aVLT9zc
BGo5boLQbCiOJRSyih3j8uXLX3/9dVZWVnFxsWeJZ6Ykk9fBMxWZ3vG6c9nu
sgHXwCbFxj7T/mHoQ6skK0OBYcpMCgzFWmhdVV7VNj+dnZ0tLS3x8fGeXl7e
VlYZGzfmv/de2rZtgqNHY/fu5X/8ceSRI9GHDoV9/nnMgQOYzdq0KfeDD7Lf
fjvD3Hy1TgVBaBCaHseutPJ4eXFsbDjXr5vfvGl+44bF9etWOjqWmDLp2jVr
ZopFqHD1qrGHR9RqnQqC0CAojiUUop6OAcvgzuF3v/vdhg0bNm7c6Onp6Vvp
myPJsUmzCW0JTR5NNhObJU4lGguNhUNC81jz+PF4lCTPJGdIMkx5ppH8yKT5
SUlJSUtLCwsLu3Pv3hMdnewtW/Lefz/nww/j9uxB+Mr99FMk5CP++MfMzZuF
Bw9SHEsQi0KD4thVUZ579+7cvKl/86YVwlQkJohF4IqEPBPBooTiWIJYFBTH
EgpZxY7h4eEBTxkbG6uoqOCUc3IlucJ+oXm8uUuBi26wrlG0kXO+s26I7v2A
+3d87jzmP86UZGZLsh0SHEaGRpQ029/fz3jKwOBgU2Ehc19B+saNkfv3x+7c
Kd61K+6jj4T79sXv3Pn07bej9u/P+OAD5r6CDLqvgCAWgAbFsQpZceUZGCgp
adTWxmW06fXrZleuWFy9av5DQgRroaNjgkIsQoXLlw3d3CLVduwEoblQHEso
hA0do6am5qHnQweRg2GooYG/gVWklVmE2WPfx7YxtsYhxsbBxvq++rddb2PW
Uexo4GLwckjx2yFfvHghEoliY2M7OjqYkvqSEtE33ySdPZt07hymychIU9zp
0zFffZV8/nyydFHiuXPxp09n+vqq8aAJQlPR9DhWxsopT0lJw8OHboaGnFnp
0SPXBw8cjYy85ErcQkKS1HjQBKGpsEE0CBbCko4x8Wri5cBLA12DzNTMseGx
sZdj4yPjTAapoqTi/u37PR09o8OjU+Nzhr+R8xFk5MtnZmbGJZK5qfb5cws7
u56hoUm5wika/oYgFsCaiWMlK6k8k5PTc9OzZw1WVjZ9fQPT0xJZ4dQUjflH
EG+GJaJBsA02dIzOzk5OMMef53/xzkVzF3N/gf+sZO9tf+HmBa8wrwBBQGBE
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
YUPHgJtEDkZC7iD7SEaRRhbxFt88/uYW55ZVkhXzvDCTYidjPXmeEuk3A2Ny
N8JNTEzkZOU4ZTmlS9JR30Ro4lniaSY2s0m1uWx7WS9YzyHTAXmmKUzNhebe
Xt48KVZWVra2trz58fDwMDAwmFWor6/v7e0tXwJ/cXJyYp6kVtLakkH7TCYw
MPBv//Zvf/rTn2pf0Hbzc4sajIodjb1sd/mu7+vBgi5aX9Sy1NK21LZMsPSp
9rFNsw1tCXUtcIWHPrB5kJqcKv+oCLEE0tLS6C41ljSyTEh5FgIpD0sg5WGD
aBAshA0dA24SNRTF/AKVOJ140+PmXZ+7t71u33C7cT/gfurM63ImxU3F+Qv9
e3p6zp49W1BQMDQ0VFpaGhcXFxERwfHguOa6Mm7inOcc0hwiGhbBSrgvuDqu
OkjeFd7MkOaY2ifa93b3MlsvKSlRPpbOixcv5O9SY6irqyssLJxbuaKiYqVf
HAnr9PHxYX6d5Iq5kcORgj7BddfrpnGmjwWPvzP7Dnm9UL2bnJsmYhOzeLML
lhc8yjxwet14bq0trZGRkTk5OTMzKn7P5vqBnhpeS3EsKc/CIeVZXUh52CAa
BAthQ8cIjgwObAqM6ouK7IvkdfFc8lyuOV3TstByzXN1L3QX9ApQziR+D/+W
0a1f/uKXGzZs0NLSio+PhxdA7dFIY0OjR6FHtiQ7T5JnlWhlLDT2qfS5xbkV
OxYLS8Ksd6U3lsJKMHVMdezs+Ms7fSorKxX6gozW1tZZd6lJpF/LcLncuZqM
EqgNVlHd6VGGOEFsFmRmy7W1CLKwCrWyF9hbBFtYhlhah1tbhlqa+UsXBVvY
hNvYcG04QX/5YbS3t7ezszMqKkrJGOzEfJCbrJk4lpRnyZDyqB9SHjaIBsFC
2NAxfEJ8HkU8MhOZmYpMzcRmdml2D0Me3vW9a5tiC18wFZuinEkwhdOXTltb
W2tra5uamk5NTTU0NIyPjw8PD9c/q9f11nXLdnNMdzTmG9/zumcSaaIfom8Z
b4mpQ7qDfYq9S7aLc7Yz6jxwf9DT1cNsfXBwUH6A8bkodBOQnZ0te2RDHhiN
WCxW249ok2OTE6MTE2MTr6dMZmxORrpIImd92El4SnJyMoTxjUNuEvLgpPF4
PHITNjSyTEh5lgMpj5oh5WGDaBAshA0dIywmTDQqYp51ff1wa6EbMnmSPO9K
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
9cunpqYGsUdDQ4OPj4+3t7ebm1tbW5uOjo6K3lmvGiiOVQgpD8sZGByLLSyL
LS15YxKXlORUNCxZeYaGBm/csLhyxfGH5IR09arzD7MOyEtnHaSzZt3dpDwL
gj2iQbAK9nSMteEmMzMzfD5f4dAo9fX1zEMZlZWV9+7dCwoKmpmceRzwmN/J
5/fzI7ojIgciud1cJNErEa+HF9oRihTeGc7r5fFe8MwSzAoLCxe+z1DXycm/
vOscJ6S6unrJAoiD6u3tlc1C35Zw+5yshWdNzf/z2f+zYeinr9Pw3/zNwH/b
MPQ3yP9k8L9hFtPXGWbp4E8/eXpCsrBhZtrb23GM9vb2OLGM7fb29nz11SUd
HbMLFx5evvzk7Nm733579/Tpm1par2cvXzZE/tSpGxcvPtbRMT958pKSQePl
QT/EuV2hX9zy8/NhIjk5OehFCELQW8LCwmBeLi4u7PmNj+JYhZDyMLBWecpr
X/ys4p839P3t6zTwsw29//31tB+z/9frDKav098yaXfqWcnC3sE1V3n6+7t3
7DDdvVu8Y0fwzp28rVt9tm713rTJbceOEMzu3MnftMkV6aOPIvbsEW/ebNHY
qGBItLmQ8rBHNAhWwZ6OsTbcBGRnZysRW+xbSkrKBimuTq5uyW6RPZGGkYbe
ld6WCZYpkhRuJ9dUZOpT7ZMhyciSZAmHhChPGEvwrvDG9firBWNmZvb73//e
0tKysbHRzs4uOjraxsamv7+fWTo2NgZ1klVGHiXzLRodHd22bdvHH38MN8Tl
uYODQ0BAAORu4TsDjh49unfv3ojwiPLa2r/r/r83SDYg/feR//Fvlf/x27z3
fzLzk/8x9D//terX/1/N//7Hjv+XWYr0ccX/z957gMVxpOvCvnt2z7l79+ye
Dfba62v77v/7nOtjr2VbASFyzjkHiQxCJJFzjkPOOefMkIecs0ASCBAgCUQS
CBAgQAiEhOZ+TNuzYxjQCBjUwv0+39NTXVVTnarf96vuriqF58s0lQ8KPjc3
B8fY0NDw1VdfmZiYwHnW1ja3tQ25fNlIXFxFRERZTOwyL6/0lSvXIayv7yIg
IM/LK6Wv72xtHayhYTY9PU3L9YWrUFVVdbyj34DQ6+npgXDABQKfIT09vba2
FpnLEqo9HNra2hp6hvTE/FiqwJgHAUqZpyD/Zv/4/5r5GCGWf1379096zn9R
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
a2tHGxsIQ8AZiSeZoa4u0kkfASXzLCw85uX1EBYuFBbO+8lyhYRyRER2wiIi
+eR4EZFCDg7cw4dHZR4lJUNTUx9jYxxiJibe1697gUGYMt7Y2EdDw2RXW+CX
xjwYTh/QUzHQrybDw8NwU9Oj5L0A+nJ0dPzggw+gMbs3FYhCQkICWsHJicmu
sa6mUaYBtQENrxpaiC21m7UhzSF2qXZRXVEmESb+Nf7msebuePfw1nC9QL3K
qsoNCujp6bGxsaWlpfX23uLjC5aQKBcXL5aUJDAyOnz3nR4HR5CwcLaoaD4f
XzzE/2TlQkI+MzOT5EKABi9evKikpAQcVVRZVLBQ0EhsbCA2gH5ljWfBvoW1
hTUTm5teN7nh3QLrAmEnIRUEJSIvglwINOrh75988om1tfXIyLCFRcR332nz
8noJCQWdPat+8aI+E5MxLDk4HFlZrSBeWDhESCiYkdHw7FmDzMxCcjnA/JaW
lkxMTECSw8NDKir2+voxenqRJIvi4rrCza2mpRWgqOgkI2NtYBCNJBkYxCgq
2kL+jZ8DKlJHRwdUPMpIYHjg/PX1dWRVWVmZl5cXCLmzszOSnb1SRKRcWLhC
RCSZmzucjQ38/mvffINjZPS+dCmZi6uClFopJOQvLj63tERZrKqqKjc3Nx6P
h/OQmpqakJDQ3t7+4sULuC8QLSPnXF1dZWBggO2C4lDOHwp7deh3jmNjYwMD
1J+Y7QXmx1IFxjyHYp7bOjrG9vbetrZeDg6+srIqgoISmpqGZmbO4NYaGFhB
PGKQR0fn+qNH0/RknhFPd3cRuGe1ta/r6wsLCEhLSMhLS8NS/cqVywoKulpa
xgYGYDKSkpKionDXU2WekZG7YmJ+UlIlUlJ4khWeO2dw/vx1UdF0Xt5QTk5f
aeliJElauoSf329k5KjMo65ubmUVYGHhZ2kZoKtrr6ZmZmzsycMjqaBwDQxi
LC39IdXCIuDqVQtoC/ySmQfD6QN6Kgb61eTu3bs9PT30KJkqFhcXz507R/kc
BvlyHnYjODgYhObTTz/NysgKzA00DDV0yHRwyHDwLPZUtFL0q/ZL7k/GleEM
gw1d8lxskmzs0+2L5os0PTTd3N0KKcDKygrlcHFxpqWlCAqGkf1YNjafr75S
4OQM/fprlW+/1QYTE8OLi5dAqoQEgZvbLS0tmVxIbm7u7373u3/5l3+5qnM1
Li2ucLEQURNYliyV6OB0fAg+IGqwe/oB+vUv6yEJSXUMc6TcGbjEsDMfffRR
UJC/iUkIE5MNA4MuAwPonS0jo9GlS8YcHA4XLlxVUgLf0F9AwI+V1VpaOvXs
WV1ra2dyIWVlZaCzUA7wbWpqirq6E9mPNTSM5eJS5eXVEBbW5+EB31hMQ8NX
Xz+a5MfGyslZxcREF+5BeXl5UVERZQwOhwOhz87ORla/++472JywsPDOezRu
bsSPrREV9bh4UfX//t8iQUGdr792Y2DwuXQploMDSa0WFnbl4cnMyaEsFq41
Uo65uTlcZZAGe3t7JKmvr29iYgIJFxcXz83N/eUvf/n1r3+tra09OztLrh6g
QQQC4dGjR7AERW5tbQWvo6mpKSsrq6CgoLa29rie6WF+LFVgzPO2zMPJyQmV
Vk/PnOzHqqrqsrJya2sbc3Ly8/KKgllbeyB+rIODD6TCTU0/5gkMDHRzcQF/
FXxUKXFxFWVlWSkpOWlpcGIlRES8XF0NdHXBLisqOtrYiAkLk+/QXcwD9Cgp
GUj2Y2VkSs+fN7pwwYSJyQ6W33yjJCycLC1dhCTx8HjHxh6VebS1rRE/1sYm
WE5Oh5VV0NTUm4tLXEZGW1FRT0vLCkm1sgq8fFkvOzvrl8w8GE4f0FMx0K8m
cOfW1dXRo2SqANKwsLAAigAmuX37dmlpKRwaLKHhPzQ05OLigrwI80r2Mo83
9yZ4a7hpKNsow9KzxNO/1j+0JdQsxiykOcQozKjyeWXJoxItnFZ1VTXlJqqq
qtradoZYn5wc5+EJlpSsAldWSqqakdGZhQU8L9czZ6599dXl8+ctJSSApctJ
ViUi4r+y8s9eJ9BmB76CawTh8rrywuXCVmJrC7GljdiWP5NvGm0a0hJiEW+h
5qxml2bXTmyHJLAmYlNccRzlzkxPTwPpIQdlZhZ+4YIZExOYKSwvXLjGzm5/
/vxVCPPx+fDyenNwOHFyujAzW3zzjRoeX0lZTnNzM/K4YHl56fJlO0PDeAOD
GDBDwzh2dmVRUSMOjstCQtcYGESUlFyMjHZSYamkZD81te+c9ZSAMwYSQ56q
BrkiRFJHiWg2tlpRUThBFcLCJmfO2J0963L+vPGZM/ViYriLF8NZWetIqbXC
wnCu13/+fSzoIPLMbXR0NCQkBByG/eYG3dzczMzM3DVSPQhQZGRkREREZ2en
t7e3mZlZaGhoLAhkdHRycjIUHh4efly9qjE/liow5jkE88AmtLWvOzr6gSvr
5OQvL6+uoqKroKAhICDOzs4nKakE8Yg5Ovrq6po+ffrPQfjpwTye7u5yUlIK
MjJgirKykmJiqpcvi4uIQFhPR+eatjb4tJqqqkpycvw8PLu+IiYzz9OniyIi
ftLSBGnpEjAZmbIffrjGzOx09qz+pUt2//3finx8ERBJSiIICAROTx+VedTV
LcCDBTfV0hLa+PLgg0tJafLzy9nahsjL66qpmdra7qRaWQVfu2a9ublBWewv
jXkwnD6gp2KgX03gLsbj8fQomSri4+NBv5AR9gYGBhYXF8nfKZHxauuVQ4iD
e557SGOIXbKdbbItrgQXUB3gmO4Y1hTmlucW2hgK8VEdUZ4Fnsbhxi3A5dQw
NjbKymrJwxPCwxMIxsXlB0tu7gAuLn8uLl9SZBCSBHn4+CyXlhaollNMKPat
9o29ERtzIwaWQXVBnoWeQbVBsCd2KXZOmU4xXTGQBBZ1IyogMWC/Y79+3YuZ
2YyHx4mX15md3YyNzYSV1ZiNzZSHx5GNzYyLy46T05qPzxXiz53Tzs8voVrI
/Py8lNQ1RUUHBQU7ktkKCekICGgJCV0VEdEFExc3VFS0hyQlJQcxsasTEzQ9
NNiv1/CdO3dswVnl5Azl5Azk4LC7eNGLhQVi7C9eDOPkdL50yYOZGQIhnJzh
kCoisraxQbV8IukbRcrXdm8ECDr4Hu3t7bAP4PDUkAB1pr6+PiMjIy4urrGx
EcK0F3gwMD+WKjDmOQTzgFMkK3tFR8dYS8sIHFpNTQMIaGkZQkBDQx+JJMUY
QR5lZY39xm04Luaxs7UFl1VTTU1bXV1ZXl5RTk5BVha8Vg3wXeXl1a5cUVFW
1tHQgHgxYeHCfcb1XViY4+Oz4OML4uPzRwxa3NAGZ2a2ZGGxBmNnd+DnD4B4
fv4gDg6LozOPpKSqhoa5urqpqqqxlJSaouI1SUk1KSl1DQ0zWVktBQVddXUz
SFVXN1dRufb8+b5e5S+BeTCcPqCnYqBfTTY2NvYjLnoAGrN9fX15eXkHfxo3
PT0N5+f+vfujJJDD9+7d+2d4ZCc8+mB0v3YxcBfpr/dosYcPx/bqGoLVlVXY
1r3hHRsZHoGtI/uws3USkCTEKN9M7cLs7AxyKGCjFCCtPvgJPybtN9YN7CTs
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
ZW5u7tB/P93M8/LllpWVD/AKcI+uLnAPhP2uXvVGAtrabioqFnp6ARCGPBoa
ziMj947rWMjAmIdOQANpYEAh0FAxMgoz4gfis8ez86bzCmYL8mfyCx4X5D3K
y57Izp3OzZnKyZ/Nz5nMgQzpY+mBCYE+3j5ffvnluXPnpqenH1EA9CU/P39x
cfHY97C7+6aNTYCjYxjJwhG7etXR1NSbvApJDg5h9vahcXFptJS5ubkJe+vk
5FRRUQENbVre8YFKNjW1VFbWVlbWvMlqKyqqkWEtD9iBycnJ1tbWgoIC0BHQ
dLI49vX1ZWVl7epGsbKyQu5iAFwKovPmHd7HdqXSEdvE7a3tXTY9Of1q69Wu
SCLN72mHhoZ6enqQ/h2/TJwaPxb9zAM1zcXFw8vL18vLB4fzw+F8wUxMzO3t
nZAwGJLq6emdmJhES5mHZZ5WAqGOFisvr3nnzPPuuQdjHjoADaSBAYV4VxVj
a2sLeAxpWuZV5JU9K2sjtuHn8GFtYXG34wLrA1OGUupe1YG+lCyVxPTEINOv
1BHrorKjPNw9/v73v//jH/9oampqpgBw4N6Zx4+CtrY2hJCBbnl4fGVlk2Vk
kkREgkVFQ8TFI6SkosXEQiUkoiAMMVJSsbKySeLiCXp6XgcXu7a2hgRmZmb6
+/vhKIDVqfa9RfD8+XPkOc+LFxuysiZSUt7S0l5gMjI7AVlZH5LB7vnKyfnB
Eonk5jai+spsaWkJyBDko7i4uL6+fnx8fO/8ODdv3oRjr6ysxOPxGRkZUVFR
cLHCwsJCQkJaWloSExPhj+icuJAW5OXlHWUkoidPnszOzqK8gwxd8V77se8X
8xQXl2hoGFpYuJibO1+7Zq6nZ2FoaG1sbKevb2lkZANhPT1zExN7CwtnY2MH
S0vbg4s9NPNsbW0ICdmzscVzcMSAcXLGcXDEcnLGc3ImcHGBJXJxJUGAlBR/
7pwjxjxUgTHPEYH5sRio4gQqBtx3Y2NjD34OILQ//OEPIArBQcFp+DRQk4q1
Cu9y7+Q7yS65Lshc2CFNIS55Lr6Vvq75rpmjmaAm1S+rg1KCHj16BMIBnAAk
PEWBiYmJ0dHRB8eE4eHhL7744m9/+5urq0tKSha4rFeuZFy5knXxoiYLix4s
eXhsODjMWFgMmJh02dlNFBQSLl/OkJdPvX7dd+tAKCoqSktLA1fDDgM/Z2dn
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
1lIdPkEQ82Ux4lhSHoIgZENxLCGV/fv3TysZGBjAtLOzcyl2hyAItjNTNBak
EVIegiBksCDKQyw/3njjjb0SqKiooKsggynyewmCIP4ZiAYpD0EQCmZBlIcg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgiOXBv/3bv/344497CYIg5sYbb7xB
ykMQhIJZEOUhlh+wkqXeBYIglIn9+/fL3wgpD0EQ82JBlIdYfuzbt2+pd4Eg
CGVi79698jdCykMQxLxYEOUhlh/UMQiCmBcLIhqkPARBzAsSDUIq1DEIgpgX
FMcSBKF4SDQIqVDHIAhiXlAcSxCE4iHRIKRCHYMgiHlBcSxBEIqHRIOQCnUM
giDmBcWxBEEoHhINQirUMQiCmBcUxxIEoXhINAipUMcgCGJeUBxLEITiIdEg
pEIdgyCIeUFxLEEQiodEg5AKdQyCIOYFxbEEQSgeEg1CKtQxCIKYFxTHEgSh
eEg0CKlQxyAIYl5QHEsQhOIh0SCkMseOkZaWFkrMAT6f39LSstj/NYJYQhQZ
x5LyzBFSHmLZQ3EsIZW5dIyxsbFNmzZxOBwn4vc4d+6cnZ2dAv5xBLFUKCyO
JeWZO6Q8xLKH4lhCKnPpGMPDw2fOnFHAziwDYmNj7e3tl3ovCGIRUVgcS8oz
d0h5iGUPxbGEVOboJqdOnZqcnEQ+Ly8vLi5uaGiIWTQ1NVVYWJiSkpKcnJyQ
kJAiAuWlpaWPHj0St5CVlYW1nj59mpqaGh8f//jx4+bmZtTPyMiA/GJdLI2J
iWlra4uOjg4NDW1tba2pqUlKSuro6BAIBDk5OWNjY0xTXV1dWLG8vBxNPX/+
/OHDh8hUVlZilRcvXmAV1ES+vb0dG0X9uro6tI8KyGMpyjHFWkxr/f39fD4f
uzExMYFdamhowNaxJ4mJiYODg1gxIiICLaA+DhxHNDAwgE0jg0XikyBJeHg4
uQmxvFFkHEvKQ8pDEAwUxxJSma+bQF2tra0ZoQYVFRW5Itzd3TkcTklJibe3
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
hnA9wzw9Aj1GR0aZFScnJ0tLS+Ep+fn55CkEoRiUPY4VQ8pDEEoEG0SDYCEs
6RiTo5PDg8M6GjrZadnjL8anpcqSyvu37/d29I69GBNOzFj3N0/Jy8ub5ilT
U8Lx8TmlsTEhjalDEHNh2cSxwkVVnknh2NzS5JTijpcglBeWiAbBNtjQMWpq
ah64PLAV2Gp6apqEmthE2dhG2yLZCGyQRzILM9Pw0LCKsLIT2OlydJ8PSnlq
eGpqCp4SFhaWm5s7Ovrr1yapqb2nTiVcvvwyqarGI1258mtSVY1jMszSc+fi
rKxqFXvcBKGULJs4dvGUp/hho811c+e7Fkgud80lk+vdX8tFydLhhkmoR7JC
D5sglBM2iAbBQpawY4yN/fqWHLgAt5ybJczKFmbHjcXFjcfFjsZG9EWkCdPi
x+MThYkoTBWmpgvTUccmzqa/u19GsxUVFeHh4fn5+ePj4wkJfSoqDqdO2Z04
Yb9vnwfSgQPcgwe5+/e779njffQo5/Bh55Mn7U+etDtyxEpLK08hx00Qyo2y
x7EKUJ6inDqb3QfcD+3nHjpodeAsku3BU3YHT9kcOGN+4ILTwSOOB49jkduh
Ay57d/ua+SjkuAlCuaE4lpDKEnaMS5cuHTt2LCsrq7i42LXENVOYyWvjGUUb
3XG7c8n6knaotmWKpU2mjWagpnmSuR5fL2UqBYZiIbCoKq9qnZ329vbm5ub4
+Hh3dxcNjbDDh7lnzzocOeK+Y0eoiorf9u08ZHbuDN68OWL37kDMnjjhcvo0
59gxOx2dgqU6FQShRCh7HLvYyuPmxrU05joeOulx9LDDkbP6h+6aH76qd0jN
4NAdo0O3tA5pmBy+gVnnoyfdjh512b/fz8J/qU4FQSgRFMcSUlFMx4BlhM5g
1apVK1as+OKLL1xdXT0rPXOEOZZploHNgcnDycYxxokTiQYCA8GAwCTWJH40
HiXJU8kZwgwjnlF4WHjS7KSkpKSlpQUFBd27d/vYMdujRz0Qpp465bRvn++u
XUFbtoQjIaDFFBEsSiiOJYh5oURx7JIoj5raneuXtJ2PnHE/eoR79JjlkSvG
h2/qHLqvfUjd4rCq9kF1lyMnUEJxLEHMC4pjCaksYcdwcXGBp4yMjFRUVHDL
ubnCXEGvwCTexLHAUd1fXT9S3yHfQT1A/Z7PvTsed3TCdDKFmdnCbNsE26GB
IRnN9vb2Mp7S349Mv4qKw+nTtkeOuGzfHrR7t8/u3b579nj/8kvg3r0+Z87Y
bN8eePSo86lTdkeP0n0FBDEnlCiOlcpiK09ff19xboPNngMeh/Y7Hjquf+CG
2YFLpgcumx+4aHTgmsWhy56HVAwOXOccOub+630Fvgo7doJQXiiOJaTCho5R
XV2t6appG22rF6in7a1tHm5uHGKs46ljFWVlEGBg4G+g5al1m3Mbs3YxdtqO
2s8HpL8d8tmzZ9HR0bGxsW1tbUxJcnLPsWOx58/HXLiAFC1Op09HnDjBu3Ah
DnksRTp1KsrcvEaBB00Qyoqyx7FiFk95CvMbLC8bcW4gGWPqdIPJG9ld0bW6
qOV001RUYux4w9juin4wN0GBB00QygobRINgISzpGGMvxp73PddW185MzRwZ
HBl5PjI6NMpkkCpKKu7dvtfV1jU8ODwxOmP4GwkfQUayfHJSODwsJT161GRs
bNvRMTg6+o/C3x7+IAhCFssmjhUupvKMjAlHxqen6seNxmY2Hd2DaIwpGR4T
jktpmCCI6bBENAi2wYaO0d7ezvXnevO8L9y5YOJo4s33npZs3G3O3jjrFuTm
w/fxDfEdG/1HxNnW1hYVFTXTR2TT19cbHs5PT09jXutDEMTcWTZxLCkPQSgR
bBANgoWwoWOUlJRYZVrFDMW8HPdmPDZmLAYpejQ6euRlQj52LDZxKlEwJIh5
HmMYatjf83L0m6dPn8aIgBnNd4uTk5NhYWHDw8OJiYk9PT2LcEwEsWxZNnEs
KQ9BKBFsEA2ChSxhx/D29o6Ojh4fH3/06JFLsUuGMCNhJME8yVwrREvdX10j
QMOr2ss+1x4Zs0Qzh1wHZiBH2zjbmqqauLg4+EhHR8erbXpiYiIkJASZFy9e
kKEQxLxQ9jiWlIcglBGKYwmpKKZjlJWVpc7g888/X7FixTfffANb8ajwyBHm
2OXYwUGCG4K1grX43Xz9cH3/J/4Pgh7EDcbphOokTSbBcQyCDUKDQl/hmxBJ
Jicn+Xw+8/IdMhSCmBdKFMeS8hDEsoHiWEIqiukYHR0djTM4cuSIiooKlDwr
M8u93D1XmOtZ5WmfY+9T7aMRoMEt45rGm/o3+ttm2lqnWetH6MNKmLfqDPYN
yr9LsbGx4i9VyFAIYu4oURxLykMQywaKYwmpLGHHGBkZYTJlZWW64bq+tb5+
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
YTr3/e6fNDh5xvRMYGMgM7A2M00QJrjwXKatPjg4KPmz1DQ3EYpeiwO17+rq
4nA4WVlZ0dHR08YSl+0mICQkRGo588wFk3d2dkbj0wapzsjIqKur+70TwC7g
uSUlJcHBwampqeIveQgx9LTFsoljSXlYBSmPbEh52CAaBAthQ8fgCXgmoSY2
AhtNT03jEGPHOMcr+le2H9qu4aThEONgLbA2CzPT8NCwirSyiLDg+ksfjfwf
rc1wE6HoZ7iamhozM7PY2FgLC4tp7gBHkP1CHLFlzKS4uLi6uhqOVl5ePrMR
mEtSUtLTp09l7zM7gQvDgnFcNPCjJOQmyyaOJeVhJ6Q8UiHlYYNoECyEDR1j
YmLi+cDz/p5+bU3ttOS05/3Ph4eGR0dGXzx/gTxSSWHJvTv32p+2Iz8+9jt3
uUt1k5aWloyMjKGhofb2dhMTk6qqKsmlCQkJHR0dQtHvcVIHrpnNTcbHx93d
3d96660HDx7Mtj8wmvj4eOUVH5wQgUAA/Wxra3v06BHO1WJvsba2Fu4ftqBg
t6e9IP6VSUlJQYPK+w+Vn2UTx5LysBlSnmmQ8rBBNAgWwp6OMTk5aWpqKnVA
xbq6Oj09vTm+j0+qm4CkpKRnz54xtjJtUUFBQXZ2dmVlpbm5ube3d3d397QK
MtxEXV19xYoVqqqqMnaJGWBnLu/FZu09/D09PbDaffv2/fGPf5ztnr0FAY2n
p6fjP/V8QWlubo6Li8vMzJR/D0tLS7Oysl7nu/iWTRzLQMojJOUh5VEG2CMa
BKtgT8eYmJiAmzx8+HDmosePH8NNns/tOnQ2N+nr62MGq5lJbm4uXAxG4+Dg
wOfzZ64u49c9cPf23Wuq12TvFQwRhiX7XTZQbHd394aGhtkqPH8+0NfXNZfU
39+N8yl7l+bI0NBgf3/XwEBPXV31unXfvvnmG//rf/1bVVWZ1I3KOSYMDGtB
BH824uPj29ra5GwEHamrq2uhTq8yssziWFKe31WewcHBnrnR29u70MrTXV//
aP36b9588/8TKU8pCmckUp7XAvaIBsEq2NMxFttNgEAgOHv2LPxiWnl5eXlJ
Scnk5CSXy5U6kqGkmzx58sTKw8ol1MU51Pll4jk7hTrdNrn966xEQh0nHyfx
UDyVlZWyHyIeGRmJjY2d7Za2ycmxo0cf/Pyz6ZYtxqJkKkomoiTO/7pow4a7
+flSzuT8mTp/Xvfnn182u3mz0S+/mG/aZPTxx1e/++7Bb9v6NW3davLdd/eS
ktLk2VhUVFR/f397e3tycjKm05bCa5j/Dv5Tsz0Ggq4i+dMt7Ht0dFT8DQZ6
l/zv7qRf9yiOlcpyVZ6JifErV1TPn7/EpAsXLjNpWp6ZPXToSEFBgYxtzZnJ
06cN16+3/v576+++s9q0yWH9eqv33rv79ddGKJFMGzfafPONNinP6wB7RINg
FezpGIvtJriSff/991esWOHh4SFZDmnq6OgIDw+XcZ0r6SbFxcWcIk7SZFL8
VHz8ZHyCMAEpSZiUKExMmEpAIaYoiZuIS55MNgs3G+wbFK+bnZ097YFlSbAD
RUVFsy8dVlEx27w5eutWwZYtET/84IO0aVOoKO8nygdv3RqFpdu2xaxe7ZiT
8+oD74yPj2dkZAwOvtzz48cRu0Zu2/Yybd8etW6d7erVCFx5O3bEYBZT8aI1
a5zj4lLmuy1mLHTmX4b/HfQf/24LCwtYf21tLbwbexITE1NYWBgcHJyeng6z
cHBwyM3NxT8CBp2VldXc3IxTl5+fX1FRoa+vX1dXh0xraytWdHd3j4+Px1pY
ioPq7OzE7CufFgZ62oLiWKksV+UZGxu9evW6pqYukrq6zo0bd5DU1DQ1NHRu
3rx748bdO3fUmaVaWvrnzl3CZ3O2pn4XSeU5eND2m2/S1q1LRVq/PuPzz90+
/dRu7dqEDRuyMIvpb4vSP/7YLzaWlGf5wx7RIFgFezqGAr4Vqago//rrrxwc
7MUlkOiYmOjwcL6XlycyPT3T709jELvJ0NBQREQEt4ybLcw2ijK6437H85Hn
Xc+7yePJ2iHaXjVe933ua/hrmMabWqdbZwmzrARWPZ09Y7+BK3RcUPf09EDZ
xmaApWh/ZjnD8PCAiorJ5s0RW7fyt2wJXbny4scfX/v001vffPPyC9JPPrn2
7bcm27YJsBRR5dq19kFBIbWvCqT7P/7jP9544w1DQ739+3U3bw7fti0MaceO
qC++uP/hh2fWrDFdt85y40bnr7/WZRZt3x6+bh3Hzc2HaaG3t7e7u5vJNzQ0
4NAg8sws8+sYk4dZwB0CAgIiIyODgoICAwNh7i0tLRoaGomJidra2jY2NpaW
lj4+PnAQNzc3LS0tXV1df39/V1dXFxcX+IuxsTHK0Q5W9/T09PLyQgtGRkZX
r15NTk5GTbiSlZUV1sKG4I/y32JHbkJxrFRkKE9lZdk333zl6GgnLhkfH42N
jY6IgPJ4xMZG9fR0SV2RDcozNPRcVfWauro20r17DzZv3rZjx66dO/ceO3Zq
+/ZdyB8/fvrBAz0sRSiLOBafygVRnl27jNesSVm/PhHpu+/SV67Ue+edK59+
6vD5585ffeX70Udm69cnYNGGDcmffebD5ZLyLH/YIxoEq2BPx1hUNyksLHZz
8/f1DTM1tTtw4KS7e6CHx6/JyyvYyyvEx4eHDGbd3AIyM7OnrQ65KykpiQKC
KA8PD245N0eYY5FicdnmsmGUIWwlX5ivGah50/WmSZzJdc51i2QL5nWWegF6
ft5+PAkgjDgW6B5vnoSEBGzapL5168tIdft2wZdfan/yyQ3Ese+/f+Sbbww/
+ODszz8Hbt0aLo5jnZ1ds1+VuLi4P/3pT19++SWX67Jnz4MtW8RxrOCrr7Te
f//QmjVm77yz8513dn/7rdHWrTwmjl2/3snS0p5p4enTp83NzUy+oKAALpmX
l8fMPnv2rLGxkcnj3w2RxymNjo7G2fXz84MXVFdXJyUlFRcXw3nT09PhJqjp
7e0NQ4FlwCBgNMEiMjIyYPTwCzgUpqjG5/PRQnx8PLwmKyurtLQU9uHo6BgS
EoL8wMAAuYn8UBwrFanK8/BhiZNTiKdnpIGB054951xcQl1ceEzicvlubnwP
jwhkXF15qJaenjNtdTYoDz50x4+fFH0Zq4149eDBI7/8shtx7IYNG48dO/nT
T5vv3FFnolwmjsVHT37lcXNz2b5dXzKO/egjk7feOvnZZw7//d/7/9//O/jJ
J9br1sUzceznn/taWJDyLH/YIxoEq2BPx1hUN7Gyct24UW/HDqtdu2x377bZ
vt18xw7LrVtNt21DeplHBkuRfvzRSEPDglkLGlhRUREbG4tr6oSEBFzpC0W3
tHlUeRQICwwEBjo8Ha0QrRvON7wqvK47XbdMsdQJ07njfgeLAp4E5ApzbWNt
XwxO35mOjo6UlHn/CiYUju3ZY/rTT4Kff47YvFmwbp3LZ59pfvjh1c8/1/n4
Y7XPP9fdsiUKi0RLo77+2i43V6671MSvBzp61PTHH8M3b36ZEEV/8YXu2rUO
X35p8PHHtz/66Oa331pu2YIthm/ZEvnNN47x8anz3RD+WTU1NcyNZLCPaXcJ
YmlERERT0z/eSo8dGx0dZWZHRkbE9xxWVlbCRLq7u2W8q138Ynp5IDehOFYq
UpXHxMTr7bd9Pvoo/NNPIz//PHzVqtCPPgpbuTJo5crgVatCRPngjz7iI/3l
L4G3bjkya7FKeSYnJ65cuXb/vjaShobupUtXVVQObt36y4EDh3fvVjlw4AjC
V/HS06fP5+fnz3cTkoiVZ/9+my+/TFmzJhlp7dr0Dz80/+wzr5Urrd57T+vd
dzU+/th5zZpU0aLUVat84uJIeZY/7BENglWwp2Msqps4OHjt3Gl39KjH4cNu
X3xxeMOGq5s2qX/6qcrq1We/+ur499/f2Ljx1rFjXkeOeOzdy9HWtqmtrWWG
LsQVPa64U1NTmWEeQVFRkVaQlluhmx5f7677XdM4UzVPNTUvNU0/Tas0K7NE
M/0wfZMYE51QHfdCd00XzaEBKYP2NDQ0QJTmdX6mpsYvXzbYt89k/35jJu3b
Z6Sioqeioq+iYrB//z/Kkf/ll/slJaXzan+2zd6+baqiYrR//6/p4EHTAwdM
MT140BwJeab8wAHjnTvVMzOnf6E0L/C/k+oFGRkZQUFBLi4unp6e9+/fR7XQ
0FB/f3/xVyVWVlbJyclmZmaurq5YCgNCX6qurp7WztOnT+V/9fzg4CDiirmM
ZbRcoThWKrNcQQd8/HHUmjXp336b/Oc/X/3b3ww/+sjhzTfPv/uu+jvv3Prg
A5MPP7RYsyZj9eq0zz6Lv3vXpba2hm3KgzhWTU1NVfU6k65exfTapUtXLl9W
vXz5KmZFJcyiG6dPny0pKZlX+7MwdeOGxY4dlrt2WTBp926b3butRVPb3bvt
kP9tES6ldTIySHmWP+wRDYJVsKdjLH4ca3vkiPvRo15ff338738/uHu35Q8/
3Dl0yAVxLMLakyf9sBTp4EG3jRv3BgT4tba2ileHBIlncf1eUV5RXl5e9aiq
uqa6sqoSqhUYFJiYmAiDMDAw8PH1KS0txT5XVFQ8rn0snIXc3Nyampq5HJEE
E5OTI5OTo79NpyVx4cjU1KzfDMyfSWnbkrJ1+Teanp7e2Ng4s5zP58Mcccbg
IHB2Ly+vsLAwY2NjZ2dnTG1tbY2MjPB/t7Ozg91gkY+Pj7m5OTLT2snOzp5p
MfMFXTQlJWW2OyFfByiOlcrscawAYeqaNZnvvHP7z3++8sUXIR9+aPnttwmY
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
j1l8fFwRDfDy8rKzs4Nj0bIxjcjMzEQcDBUVFRcXF9C1uLg4Gt/S7D0wP5Yq
8jHmIQOdzCMvJ19UXvrn2b8hxPLVwDfgyn48f+CHa8f+b+CbH9tOHG07ceDx
ZxTmEWgVJeQQaDzEBua5Ym5uoKUFfuwVXV0lSUlJQUFwaIW5uS+dPcvLxgbe
rJWBAYTBifWxsdFUUoqPj8eYhxaghzQwoAroqRhoVpPh4WFgVNq3B9LeEAOc
7O7uDnwFXJeVlYW0qV+svAgvD8dP443CjYiPibZptnkP8+zS7QqmCmI7Y6Na
o8xizHzLfUFfcA9wSX1J3d3dtJeho6OjuroaORC0smNjY1NSUmjffQOgwY70
Inn48GFQUFBoaGhPT88b5UAgEG7cuAGBtuurDP1f/awXvd8zVPMxNLMxhOsx
2Dsx4OQY0lUZRv9JUZOjRGvS8psVdXx8HOrA9PT0wsJjGRkPVdUiQUEPXl4H
Pj5nTk5LERF/bm4bcGhPnLgoIODOw2OnqkpQUSGIibn39NxcoAFlZWVwB+E6
0LIxjRgbG9PU1ExOTp6amgoMDAQ1iY6Ofo/UBBwMHh6eP//5z8rKyjTON4Qx
Dy3AmGcXmWdk/P6nk58jxPKXib/9752v/t+R/z3WzMZdKvJN9w8HO3/8dJ0f
q9CvQuP/sRRQmGduft74/PkABwdDTc3zamq6p06dUVIy1tE5q6wMDu1JKSlY
nlNRAUfXz9b24tmzcHkx5qEFu8I8GPYfMDWhBUBQVVVVtG8PG1M6VlAwMTGx
vLwcHh6OfBeDmPnZeY9sj7ibcc4FzrkPc42ijGyzbENaQ+xz7NNH0nPv58Kq
X42fQYhBfHd8QEPAG/2ltgG72O305cuXQIA1NTXA2I8fP37T3etbVxgaDzFM
/X7Npv+LoeN7hpE/Mwz+PwyNRxmufcPw4NM1Q1Knfv9NugNpp8N+T01NiIoa
i4n5iIq6g4mLe8ES/NVXSzckXkzMU1zcR0DAeHR0hJZskZHk6dTbAgAiAtqd
kJAwMDBAp0O8JTaThoaGBsMrVFZW7iyTdwWMeX4lzHN75O4ndz9neMKwZosM
B8b++OHsb3839d9/Gvrbx/c/Y5j/YM2Q1CcMMp1KpJ26RZOTk1qqqkbnzoGP
CgYBQy2ttTB5CeG1VS2tS9rakHRaWXlkBGMemrArzINh/wFTE1oA/Ln5Rcc2
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
3/ixe8w8BAJRUNBTWTlJVjZCXNxXSipQVjYclohJSPgpKSUoKcWDycnF6ei4
rt8XY55dBMY8O8C+YR4M+w/vqmIA4ZuYmEBNBjbAleOSbiUZhxt7FHrUrNaA
ptSt1tln2oPF34y3SbOxy7BzyHawSLRIHU5NLk7ePmfIc/sWa0lJNQ9PtIxM
IROTBSurw5EjutzcfseOXTp+3PjYMeMjR/T5+EJlZYukpQliYgQdHf/1fiyJ
TFB7piYgJX/84x8PHDjQ0tKyN0fcS2w1aCegq6vL398/MzPTw8MDmvOlpaXQ
2Adi9PPz8/T0hLY8rAIHAj1uPxgRPdTkHfa2AO9im07r8/Pzs7OzJPK/lIjI
QmBpaQk0F0oLYQggn/NAqZGN5+bmILCwsACBzW9atsJ77ce+Q+YpLa2SlPTT
0Ejj5r7Iz3/lxAlNMTFnNrbzHBwXwFhYtKSkPE+fTj91KkVFJdnAwGvD7hjz
7BYw5nlT7CfmwbD/sAcVA1r0FRUVJb8EMAMDGZqnNWMzYvMm8865nfMu8XbF
u7oXuhuFGF0KuXQx6GJSb5J/tT+YX6UfxHiWerpGuJZsCzs7Ozwev80Gzs5e
/PxxMjJFQkJxHBxux45dPnr0EguLHSenJyurI6yKiaXJyBRs5ceCWiHP7B4A
qEBISOh//ud/9ky/9hJXr17t6emhmjQ6OhoYGAj3ETQlMjIS2Bs0BU8GgUAA
rXF0dAReBUHZJn/gzLKysl0v9jtUk9u3b+/9QTfjffFj0cY8Li6eMjKB4KnK
yQUJCdmws+uCE8vHZyosbCsgYM7Ofl5ZOVJDI3UrPxZjnt0Cxjxviv3EPBj2
H/agYqyurkJzbPaXGB4eVlJSCg8Pf/jwYXZxdvpoulmMWe69XFeCq1+Vn3mC
uW2arTPOObgheO2VSI6DU66Ta76rS4FLVG7U7LZITU2FtvY2G2Rm5vPyxsvK
EllYHFhY7MGJ5eMLP37clJHxCiyFhOLl5MrAy5WRKRYXL9bRCdjgxwKJbRgs
fVev1fMXL54+f/6zvXixVFlZYmCgsz6SkrShYBQgo3Ajsxe97nArkPNrjXy4
3f+8iAw8uKH3K4LOzk6ko8TyK4Cwrt8SGvI1NTXb90NB5pfZ9WK/KzW5e/du
bW3tXv4huRXeFz8WbcyTlYWTkgI/NpOP7wofnxkrq46UlDcHhz4npwEs5eWD
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
0traCqeMw+GAsScnJ7c/d/BjlZR8JCWLpKRwR49ePH7ciInpCheXD4SZmS3Z
2V2PHjVkZraWkSkC4+UNDQoKJr4FSktLs7Kyzp07BxIvKyvLwMDwz3/+Myoi
KropGsSihlRTPFdsn2kf3xkPLoq+v75RmBFuHAf+CSSBwTYRzRE0qkltbS0o
KfZ1Dw2ZvCUw5tl/zAN+rL2WVuy5c5Ha2prc3Gd5ec8LCFjJyEBYT0jIVFLy
NDe3vpBQrK5unK6uo6JicFAQxjzvC9BAGhhQCDRUjGxiNvEpsZnUnD2aHVQf
FN8Vb5dhF9oU6lvpa59t713m7VPuk9CT0EJqqSJVxePjt89tb9SERB7IcQcf
7P5/9t47Ko4rT/vHnrP7z++8s7vve87ueGYsj+3xeC17POMwlrPlNJYs27Kc
lKxo5YhyQIBA5JwzDU3OTQNNk3POOQqQiCInkUH9e9Rl97Sh1QIammr0/XBP
nVu3bt0K3H6eb2WYiEAgYE6PdHd3W1hYSF5DzTZgfzU1NdBq+F18fHxFRcX8
d6wkjv3qq4g339RZt+7aK6+of/ttwquvnkF+06bAN9648sYbGpgqjmNtU1PT
BhUDazs2NoYMdumpU6eKiopuNd6yS7b72U2GBHrhejuv7kRfOut0VjtI2zHP
kZm0UDdZjqctVIvVE8eS8rASRZRHEse6HDyovnHjic8+27d+vc+JE/s//BB5
2337jv3zn0iuhw4hjtX+9tu01FRSHlWBDaJBsBA2dIxAfqBDlgO3lOtW4GYY
bmibYmsqMNX21XbJdbFOsLZOtDaNNjWNMeWWcN2K3Jz9H3KXGkReaW6yuLMZ
ECIcvJeXl4+MjDQ3Ny/5iikCBBmrlJqaGhoaGhkZmZub29XVtYjNRBz79dfG
GzZEbdgQ+uKLJ19++ezrr19/9dVrL7985vXXdTD63HO7160z/PzzyM8/j3rn
HZv8/KX/qk57S7tNsk2GKCNVlBo5FGmWZOZ3y88+116Hp4N81FAUylNEKUio
45DtcLP+5nyaJTdZNXEsKQ97WCrlQRyrsWuX67599nv27H7nnf3vv3/6n/88
/vHH+997T/2zzzC65dVXz3/+uetPPyHW1dy8uWAZvupLyrNMsEE0CBbCho5R
UlLiznF3dXfdtmObrp4ux5Pj4eXB9eHez3A9kEzMTX7Y9oODkwOqZWZmiu6/
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
OM7Yv9n/qv9VhwIHz1rPxKlEOE7YYJhrqOvE+P3v1ODQfrnXsL6+npGdqKio
kyfPIFJFHPvVV19fu6a9a9feH3/c8+OPu7//HrtwO4ZXrlxDBU3N61pa1+U3
6+fnx+jhwMCAlZWVs7NznNwXm8OLIYDi64yTn33m9NprRevW5b/6asJTT6k/
/fS1F1/0WLNG/e9/j1q3rujPf9Zbty5XHMcWrV3re/z4SZhCf3//Eu6T+QDZ
R7Qg8Rrsw+np6YmJiVlXxGBt0qo+15vuiZnbfkJCQktLy6JXT8H7GMlNVCWO
fRAqpDwREcJvvzVFEHvwoNe77+7fu9dlw4bzGzac++yzcx99dOzjj0989NHx
3bsdDxzg7t7NOXvWRH6zi1aee/emDx26cuqU7enTtocPG73//pZPPtm+deu5
997b8tNPumfO2G/YsEcc5SKOtdu+/eKJEydIeeZCyqMgFMcSMmFDx8gtyHUP
dHcPcj9y4YixozGXx/Xme3vxvDxDPZHhhnEt3S33ndrv7OfMCeYkpCQwczGv
Q2Q+U7jc8Pn87dt/PHLk+OHDxw4cOHT48NGDBw//9NOh/fsPHDqE/BEUHjp0
5MiRY8ifP39x/i1DTiU3rT2UiYnh994zf/755LVrk555hrNmjdWTT5r94Q96
Tz1l9/vf6z7/fPgTT2j/7/8K1q5NePHF5GeecQ0ODi0tLVnaO/fmA/SWUfuG
hobIyMjo6OjAwEBHR8fk5ORfNmRifHzc1tY2LCyMkeWxsbHW1laUY5QxHfgI
j8erqalhHvHAVkie9UBhvgJvy0lJSaGzIoqg6nGshNyCPLcgjlsw5/DFo0ZO
Jp7hXl4RPtxwb48wLjKePC8LjtXe0z85+bu4h3gkpCQycylTeXi8yE8+Uf/m
G50tW65/9dW1r7/W3rxZ86uvNL788uoveRRqbdmi8+WX2idOaM2/5QUpz9jY
yM6dp/bt09+/32DLltOff37ws8/2f/zxj5s2Hf7oo507d15bv37b7t3a+/bp
/fSTwddfnwwJCVnye4bnAynP6oYNokGwEDZ0DBzynzl1+tL5C3t37T51/MTl
C5euXLh0+X66yAzPnDy9e+ePF86eP6d+1sXZRTLj4OBgfHx8Tk7Oct/6jgVV
zhv5L2YcGRkZGhqanJyEHPX39y9I6mdmpr29+XZ2ofb2oQ4OPAcH/i8pHEN7
+zAHhwhMYpKtrX9vb19TU5NQKFSy9EVFRTEW2dfX5+Dg4OTkVFhYqKWlVVZW
hj0JE4G/YD+4u7uLb/pthzXY29v7+PhwOBxTU1NLS0tUcHZ2xpp7eXkxN/K5
uiIsD2baRyNYxKJXDyariJtkZGQgjCE3YUMjCsILDr62/8CNI8eOb/n26p59
ekeP6x07juENcQbDa/t/OrZ5i87hI9cPHuI4OkpmVLryVIiTHO5XaG6+Lacp
xZRnJiAghMPBL9THw8PX09P/l+TH5fqjkBkyydXVo7e3l5RnLqQ8CsIG0SBY
yEp1DBz/lpeXM+8w5Hh4nD9zRldbG+nqpUuaV69eOn/+2pUrOlpaVy5eRCEy
ejo6yGDU1Nh4VlPKPD2iOIGBgZ6enhBJZOzs7MLDw4uKipZVmqC9iYmJylQ/
/DuwUGQaGxuxmXABuAOGPT09eXl52OrIyEjYjZWVFQ5h6uvr09PTUQjX0NPT
i4iIsLGxMTQ0hPsY/4KFhYWuri7cmml/bGwsLCxs0aun4FPD2JPYOkVaUHVU
Oo6VVh5vFxeTnTudjh5FsvzpJ5uDB8327rU+cMDxyBGL/ftR6HDkiMvx48hY
oVxPb1ZTpDzyIeWZBSmPglAcS8hkqToGc3VmfHwcitEqBhmMtv4C8t3d3ZJJ
t27dcnNzg8jg8NbJ0fHC2bPXNTX37d79w3fffblp0+avvtqza9fhgwe3/fDD
/r17f9yxQ19HhwlrzUxN5y4dv+64uLicnBzlX8laKDExMXCT1NTUwsJCSGhy
cjIO0ktKSpZ1oUo2FImbjIyMdHZ23rt3r6+vD/90Zur09DSsBP+pjo6O5uZm
5AsKCjBEx+ByuXCfrq6uoaEhDFHS1NR0+/Zt9BYnJyc4L3PT2ujoKI/HW/Tq
wdEUeV89Zk9ISJDztqJVD6vi2EUrT2RUlKudncmuXfZHj6pv3nzgn//c8cEH
uz788PRXX1367rtDn3129uuvj2/a5HLihAOi3H37bAwM5i6dlEc+pDzSkPIo
CMWxhEwU7xgQh/z8fBzMQhghGqWlpclikMFo8i/09/cXFxcz+fLy8urqamdn
Z0hrUFAQjo4vnT+PhHjVSF//+NGjxw4fPquufuTQIeQxREyrJzeOZcBRs+T0
CPNjb2q6FRISFRoaPZ+UmZmj4K6YDz4+PpBH6Ke3tzfEUyT+LLsSnhxhDIUR
+eVG4iYyQU+AmWIn1NbWZmRk+Pv7I65obGwsKipCf0D3QN8oFIOMZK6BgQHJ
Rz8VdJO2tjZF3AQrz+fz6ereijeiuPLYmZmZ7dljum/f8S++4Jw6dW3rVo0f
fjDYvfvK998jjyFiWvlxLINM5UHww+dHzCPxFXwKfp6Q8pDyqDoUxxIyUbxj
4GgXMr7Qn+fExERJSQnzQKunp+eFM2cQph7Yt2/vrl379uzZ/OWX+3bv3r9n
z6cff3z00KHvvvnGUE+PuevA1ETeM7k4mk5KSoqKitq8efPo6EhAQMQrr5is
X+/+wQduTFq/niM9Kklvv+1y4MADfWoJgSpi26GHsFpsPvZbb2+vcj5niZ2D
PXPr1q3lXhCWgmU9aGpXVxfCB/zTNTQ0LCwsYmNjbWxsOBwOhpqamjCXCxcu
IMawtLSsq5P9sVo0juhl0aunyJVBET1twZo4VnHl8XFzM9m50/Ho0fNbtqh/
+eXZr77atX49hmc3b96ybt3V777b/8kniG+djh613rfPWl9fTrO/Vp7R0NCw
nTv3njhx5vhxdSYh/+vRnzNHjpxY0JOhi4aUh5RH1aE4lpCJgh1jfHwch7cK
rgME5PChQ6dPnty1cyeC2JMnThw8cOAY9P3YsUMHDhw/evTA/v27fvwR5ceO
HrW1sZHf2tjY2IcffqimpqahcYXPj1+/3uPrrwUbNni/+uqZ11479847Bp98
4vrqq2eR//RTt82bBZs3RyJt3Mg/efIhLa8CZmZmMjIympqalnUpeXl5DzIC
kfisiImJSW5uLkwnMDAwMTExJCQEQ0QXmBFe4+7uXlhY6Ofn9yCTra6uXtxT
w9j8hoYG8XvdF//yHHITNsSxS6I8gT4+53bs0Ni378jmzSe+++7K3r3q27df
2LXr0p49Z3bsuLh79+mtW49u3ozyS7t2OVhaym9NojxXr16NjhaePHn2+nX9
c+cuf/31t1u2fLdnz08oQQbp1KlzmKSldQPp6lXth76pbxVAykPKozgUxxIy
UbBj4NBekec3GSAao6OjIyMjWlpa+KkyJw1Gx8bwg0UhhqWlpZcuXers7ET+
oe/THh4eTk1N1dbWPnbsqIGB1ccfcxGmfvll2OuvX3zzTa2XXz6CCPatt3Rf
e+38pk3BX30V8dVXfKQNG3gnT1oruCEqAfb2chsK/gVhYWEPOjHS09Pz0C+k
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
V7gXN4g7MT7BzDgzM1NWVgZPyc/PJ08hCOWg6nGsBFIeglAh2CAaBAthSceY
mZgZGx67oXUjOy17anRqVqoqrbp26Vp/V//k6KRoes68v3hKXl7eLE+5d080
PS2amppXonfqEMR8WDVxrGjZlAfaI7o/w3zSlLgyQRAPgSWiQbANNnSMurq6
627X7QR22l7apmGmttG2dkI7JFuBLfJI5uHmWlwt60hre4G9nrPe3WEZTw3f
u3cPnhIeHp6bmzsx8fNpk6io6ffeu/PJJx1In37ajvTJJz+nTz9t+yV/f+r6
9e2XLo0qd7sJQiVZNXHs8ilPYWHrjz9m7d2bv2dP/u7dBUzas0eSyZek7dtz
3dxKlbvdBKGSsEE0CBaygh1jcvLnr+TABTgVnCxRVrYoO24yLm4qLnYiNnIg
Mk2UFj8VnyhKRGGqKDVdlI46tnG2g72DcpqtrKyMiIjIz8+fmpoKCRH98Y9l
a9eWvPBC6dNP1z79dM2zz1b9+c9VzzxT89RTdc8/X/7ccxUvvFCCCs88U7R7
d69StpsgVBtVj2OVoDxZWe3PPFP43HOVf/lLxd//nvv3v+f99a8Ff/1r4d/+
lv/qq9mQoxdfLMYk6M+TT1ZoahYpZbsJQrWhOJaQyQp2jJMnT+7bty8rK6uk
pMS91D1TlMnr4BkLjS97XD5pc1I3TNcqxco201Y7SNsiyUKfr59yLwWGYimw
rK6obnswnZ2dLS0t8fHxXl6uJ0+m/PnPNS+/XPq//1v95JPNzz57E8M1a24/
9dSt3/++7U9/asLoiy9W/PWvZX/5S8m+fX0rtSsIQoVQ9Th2uZXH09Pd0ND/
pZdKX3ih6pVXij74IOXNN7PXr09G5r330j75JP6ddzIwCl2C+Dz7bPn168Ur
tSsIQoWgOJaQiXI6BiwjbA5///vf1dTU3nzzTXd3d68qrxxRjlWaVVBLUPJY
skmMSeJ0oqHAUDAkMI01jZ+IR0nyveQMUYYxzzgiPCLpwaSkpKSlpQUHB2tq
Xtiyxef55+sRpr70UjmCWASuf/hDK9IzzzQgjoWJoITiWIJYECoUx66I8ly9
eun4cZOXXy6HtkB51q3Leffd9I8+SkRCQPvxxwmIYFFCcSxBLAiKYwmZrGDH
cHNzg6eMj49XVlZyKji5olxBv8A03tSpwEkzQNMgysAx31EzUFPDV+My9/KN
8BuZosxsUbZdgt3I0IicZvv7+xlPGRrqDw0VPflkGXMJ7w9/uPXUU/VPPYVo
tu7JJ5uefvrmSy8V/eEPTc8/X/HiiyXPPlu0Zw/dV0AQD0eF4liZLLfyDA4O
ZGd3iO8rqHrppeK33kp9/fWsf/wj87XXst96K/0f/8h59tlqFK5dW/Lcc5Vr
1lRoalIcSxAPh+JYQiZs6Bi1tbXa7tp2Qjv9IH1dH12LCAuTUJMbXjeso60N
Aw0NAwx1vHQuOV/CqH2Mva6T7t0h2V+HvHPnjlAojI2N7ejoYEoiIqbfeKP9
/ffbxKlVkt56q+mNN25+8EG7ePT+1Lffbj17Vp5JEQTBoOpxrITlU578/Jbv
v8/cti1PnPK3bs3HEOnbb7M2b07bsYMpuT/1m29ynJxKlLjRBKGqsEE0CBbC
ko4xOTp5d+CurqZuZmrm+PD4+N3xiZEJJoNUWVqpcUmjp6NnbHhsemLO62+k
fAQZ6fLpadHYmIxUU9NsbGzX2YnW/1X4y8MfBEHIY9XEsaJlU5579+7NzEze
uzc7NTXVW1ubDw72QpwkhTMzMlomCGIWLBENgm2woWN0dnZyAjg+PJ/jl4+b
Opn68H1mJVtP2yPnj3gEe/jyff1C/SYn/hVxdnR0REdHz/UR+QwM9EdE8NPT
0wYG6J5YglgYqyaOXRHl4fPvKw/zQTGCIOYPG0SDYCFs6BilpaXWmdYxIzH3
33szFRszGYMknBAKx+8n5GMnYxPvJQpGBDF3Y4zCjAb77r/9pr29PUYMzGih
S5yZmQkPDx8bG0tMTOzro1CWIBbAqoljSXkIQoVgg2gQLGQFO4aPj49QKJya
mqqpqXErccsQZSSMJ1gkWeiE6mgGaGoFannXejvkOiBjnmjumOvIvMjRLs6u
rrouLi4OPtLV1bW4RU9PT4eGhiIzOjpKhkIQC0LV41hSHoJQRSiOJWSinI5R
Xl6eOoc33nhDTU3t3Xffha1wK7k5ohz7HHs4SEhTiE6IDr+XbxBhEHAr4Hrw
9bjhuBthN5JmkuA4hiGGYcFhizgTIs3MzAyfz2c+vkOGQhALQoXiWFIeglg1
UBxLyEQ5HaOrq+v2HPbs2bNt2zYoeVZmlmeFZ64o16vayyHHwbfWVytQi1PO
MYs3C7gdYJdpZ5NmYxBpACthvqozPDCs+CrFxsZKTqqQoRDE/FGhOJaUhyBW
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
/GF+iiglXZSeJEqKm4pLE6Uhk3AvQTKKScmi5Nh7sa6hroqvsATYRGZmJmMl
t27dkllH4iaTk5N8Pp95shjDmJiYwcHBJVwZQiXo6OhAV3mU71RkTxxLykM8
OpDyUBxLyGQRHaOxsTEvLw8KDBMZGxtjHlWYFCOS5SyoOTw8PPRr8Ht87rnn
Nm/eHB8fDzeJHIqEm2SIMvT4eudc7n+W0TrV+gr3ynnX8+ecz7mXucNQ4CZw
FsdAx6XZcjEjIyMRERHYnAdZiUjKTYC06XR3dyclJT3KqvJokpycHBYWhi69
0iuyYqxUHEvKw+RJeR5NSHkojiVksoiOIRQK9fT0oKXGxsbh4eF2dnZBQUHu
7u6amprOzs7I+Pv7S3vK+Ph4bGys4Negzr/927/953/+5zWNa65+rlHDUXCT
TFGmVYqVuoP6KZtTLkUu6ZPpdpl2+3X3uxS6wGjgJgnTCVpWWlERUXV1dUuy
+XBDQ0PDtrY2OXWk3WRgYCA6Oloy6c6dO3DDJVkTQlWgpy1WKo4l5ZFMIuV5
BCHloTiWkMlCO8bExISjo2NwcHBISIi1tbWLiwsMBRlTU1MOh+Pl5eXp6YlR
eI38diYnJyMjI5kLfCHCkOixaPhFnijPUGCox9fTCdGxSrVyznc2iTXRDtK2
z7FPvZeKComiRG4UFz/kzMxMLJc5QcG8SHwR2z4zMxMXF+ft7S2/mrSb3Lt3
D27S19cnmVpWVlZaWrqIpc+fnp4ebOno6OjcJ0EI5UNusiJxLCkPKc8jDikP
xbGETBbaMaanp9va2oaGhlpbW5HpFFNVVeXg4AB5HxgYuHPnTkdHx/j4+Pzb
DI4Mtkux4+RybJNtjcONb/jfcM5wtom3sYi2sI6ztk2wNReYm8eYu+e6O2c7
uwW4MXMNDw9D55OTkz///HM7O7sFbYVIbCUZGRnNzc0wNflfSElPT29qapKM
1tbWznr7DdZBYjdLztjYGOzb0NDQwsICxjfrBM742HhnR+ed9jsPTZ3tncND
j+4FqSUEvY6+cq78Rkh5SHkecUh5KI4lZLJUHaOvrw+6t7h5i4qLXD1cXTgu
O3bt0NHX8fD2cPd0d+e6c7gcDJGMzY1/2PGDg7ODm4dbWnqa9LxBQUFqamq/
+c1vwsLC7o/PzCvNTN+3EsYCeDye/LMNqAYBkYxOTU1hFumb05Bn3li+uM1/
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
OkagIFAwJoBrZIoyYRk3wm9c8792wPDAYbPDQbeDmBdrM8MEUYIbz23W7MPD
w9KXpWa5iUj8WRyofU9Pj7Ozc1ZWllAonPUucfluAkJDQ2WWM89cMHlXV1c0
Pusl1RkZGQ0NDQ/bAewCnltaWhoSEpKamio5yUNIoKctVk0cS8rDKkh55EPK
wwbRIFgIGzoGT8AzDTO1Fdhqe2mbhJo4xTmdNjj99a6vtVy0HGMcbQQ25uHm
Wlwt6yhry0hLToDst5H/q7U5biISX4arq6szNzePjY21tLSc5Q5wBPkfxJFY
xlxKSkpqa2vhaBUVFXMbgbkkJSW1t7fLX2d2AheGBWO76MWP0pCbrJo4lpSH
nZDyyISUhw2iQbAQNnSM6enpu0N3B/sGdbV105LT7g7eHRsZmxifGL07ijxS
aVGpxmWNzvZO5KcmH3KXu0w3aW1tzcjIGBkZ6ezsNDU1ra6ulp6akJDQ1dUl
El+Pk/nimge5ydTUlKen57PPPnv9+vUHrQ+MJj4+XnXFBztEIBBAPzs6Ompq
arCvlnuJ9fX1cP/wJQWrPesD8YsmJSUFDaruP1RxVk0cS8rDZkh5ZkHKwwbR
IFgIezrGzMyMmZmZzBcqNjQ06Ovrz/N7fDLdBCQlJd25c4exlVmTCgoKsrOz
q6qqLCwsfHx8ent7Z1WQ4yaamppqamrq6upyVol5wc58vovN2nv4+/r6YLXb
t2//t3/7twfds7ckoPH09HT8p+4uKS0tLXFxcZmZmYqvYVlZWVZW1qN8F9+q
iWMZSHlEpDykPKoAe0SDYBXs6RjT09Nwk8LCwrmTbt68CTe5O7/j0Ae5ycDA
APOymrnk5ubCxWA0jo6OfD5/7uxyru6BK5eunFU/K3+tYIgwLPnfsoFie3p6
NjU1PajC6OjA3bud80td2J/yV2mejI4OocGRke5bt6o++eTt5577/X//9/9X
V1f8gIUq9E4YGNaSCP6DiI+P7+joULARdKSenp6l2r2qyCqLY0l5Hqo8d+8O
DQ72oOM/NA0O9i7VT2NkZHhgoHdoqK+hofbDD997+uk1//f//kdVVTkKf52w
0D4F30ZFyqMSsEc0CFbBno6x3G4CBALBkSNH4BezyisqKkpLS2dmZjgcjsw3
GUq7ya1bt6y51m5hbq5hrvcTz9UlzOWS6aWfR6US6rj4ukhexVNVVSX/IeLx
8fHY2NgH39I2/tlnzn/8Y/wvKVGcEubkmeSdlyfvU0HzZuqHH+4v9Mkn4/74
x9hnnkl+4ok4NTXv//f/+Cj5dcJC/eLjFfKC6OjowcHBzs7O5ORkDGdNhdcw
/x38px70GAi6ivSlW9j3xMSE5AwGepfi3+6kq3sUx8pktSrPzMzk3r06Gzea
b9pkummT2RdfmIuTmTj9nJdM+uijK/n5Mvbkwrl38qTu11/rffut3jff3Ni2
zfjrr2+sW3d840YNlPw66W/ceDEpKU2RhZHyqATsEQ2CVbCnYyy3m+BIdu3a
tWpqalwuV7oc0tTV1RURESHnOFfaTUpKSpyLnZNmkuLvxcfPxCeIEpCSREmJ
osSEewkoxBAlcdNxyTPJ5hHmwwPDknmzs7NnPbAsDVaguLj4wVt2969/Faqp
iX5JA+I0Lc4PifMTUlMbMjMLHtzUQ5iamsrIyBgevr/m69fzpZpFqnr88exf
ljsrtURFzb5y+lCYd6Ez/zL876D/+HdbWlrC+uvr6+HdWJOYmJiioqKQkJD0
9HSYhaOjY25uLv4RMOisrKyWlhbsuvz8/MrKSgMDg4aGBmTa2towo6enZ3x8
PObCVGxUd3c3Rhe9WxjoaQuKY2WyWpVnenps61aLDRtiv/hCuGmT4NNP/ZE2
bAgX5wPE+bAvvojB1C+/jHv3Xefs7MW/8ktaeQ4dMv7uu6Bt2+6n7dtDEUh/
+qneDz/47tgRhtEdO3i/TAr57DObuLjkhS6LlEflYI9oEKyCPR1DCWdFqqrK
3333LScne0nJ1NR4bGx0ZGS4jw8Xmf7+HpkzStxkZGQkMjKSU87JFmUbRxtf
9rzsVeN1xetK8lSybqiud533Nd9rWgFaZvFmNuk2WaIsa4F1X3ff5C/gCB0H
1H1996+CTc4BU9H+3PJf6P/b3yJ/iRgn1dRc1dR81dSC1NSy1NS8xfkcqZCy
NiCAV79YIN3/9V//tWbNGhOTG2++iZZFjz8+I07IRDz+uN3jj+c+/njh4483
PfZY4uOPTzOT1NSaXFwCmRb6+/t7e3uZfFNTEzYNIs+MMlfHmDzMAu4QGBgY
FRUVHBwcFBQEc29tbdXS0kpMTNTV1bW1tbWysvL19YWDeHh46Ojo6OnpBQQE
uLu7u7m5wV9MTExQjnYwu5eXl7e3N1owNjY+c+ZMcnIyasKVrK2tMRcWBH9U
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
9GOea9eurF9vDH7s33+7//rrtQULZMCh/emnUytX2s6dexC82bVrfVassBUW
Tti8OX7p0ltOTgTzcAT8kAYBXAE/FQPPalJeXg6Myvn2QNr9YoCT79y54+Tk
BFzn6+uLtal7u3utoqzITWQFKwVqC1XNUy2wLlDdSz24Mdgh28E2zfaK/RWD
KAPQF9ITkmuha15eHudlyMzMjI2NxQ4ErWwHBwd3d3fOd+8HaLBjvUjq6upM
TU0tLCzy8/PfKwcKhfLgwevp4+/mdiOlP2Bi8XnRwi8S147NWM7neIpfS/XL
UNEvA8TG1PyPqSYraFc5/LrHRG1tLdQBtNtF09SpiWhGdxEkHkGSEYSKIEUI
EoU6sZ4IkokgsdiR+PlTCgtz2jlAZGQk3EG4DpxszCGqq6uPHz/u5ubW2Nho
YmICamJnZ/cJqQk4GBs2bPj222/379/P4XxDBPNwAoJ5uMg8ZTV1E2q/xYhl
ypOZs4oWTn/0469xG5aTd82799fP6SsmsvixO3OPMN7zczqTeZ4/b9640VJI
KH3ZMqslS4yWLDFdvPjOqlXOf/6pu2yZxa+/qixbZvnXX/rg6G7enPT333BG
Dwjm4QRcYR4Cow+EmnACIKiYmBjOt4eNmR0rmKivr+/q6rKyssK+i0FMW3Ob
tp+2Y66jRrBGQF2Agq2Cmq+aeZr5df/rXpVeAY8DYNWQbihrLuuU52ScaPxe
f6n1Axe7nb569QoIkE6nA2O3tLS87+6pWR1I2kLkKd9re/Ylcm8+Uj0FeTQd
Sf4DefDjP3/GYqlP+X4PUGYMt3tuU1PtnDmO/Pxp4KPy8yfz82eiyxSWJWaw
Qdq337rU1JRzki02kjyPelsAQERAu52dnYuLi3l0iA/EQNI4evQo8gbR0dHD
y+RjgWCe/wjzFJVVj3s4FWn/7LU9R8ZXTP2sie/z+gmTi2eNq/rmnz9jsdT2
z7ZlHGZ0DbOcT5/WrV+vumaNLfioYGvX2mCBN2aOBdassYJtVq1Sraqq4CRb
gnm4wjwERh8INeEEwJ8DX3QMgfLy8qSkpIHx0GB0dHRk/uAEp0ylUUNpoVQ6
NTgqODw+HAKhMaHWrta2rraUKIovyRdWIxIiQqNDA0MC+83CwyGqqqoCAgI8
PT1pNBpoHLMLxocAMomNjXV3d1dRURl6QsyBaGjoc4ood44tRa3EKb7QmV7s
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
PPgHwTz4IQ0CuAJ+KgbO1eTly5cUCoXztnBRUam1NcXWNhQ1qq1tFLqMQC0c
XQ3DUq2tQyMiEvrt/urVKyAB4IoQFGlpaU+fPuX2OeEIQ/zvxyHg1nR0dHCl
MBi6UAyM52lvi9zcXKD0jIwM7OUYeBRwILbD3YBMIAgiJSWFrUKFaWpqGlgq
eKwGE74HDx74+fnV1tZip1lWVgZVjpNCEn4sW+CEeYqLS1xcfNzc/MDc3QM8
PYNg6eERiJmnJ8nd3R9LBYuOpvfbnWCe9wXBPJ8W8xAYfcBPxcC5mgDCw8P7
/eLOU8Azjs2TCO3cvLw8ODqQGFBZVVVVa2urjo4ONIRHrDA8RU1NDZwO3Dho
pwORDqM/bHd3N7Tuse9WIPptbW0fWCQQJkdHRycnJxcXF7jyrDWKp2qSn58P
j0BBQYEjCjidhoYGJSWlJ0/6Dzvc3Ny8ffv2P/74g+nh+Pv7Q9nA67h37x6V
SoViZ2dnP3r0KCUlBWJAmyAMgYqKCnig7qMoLCwE/YLLHhsbexcFJ4Uk/Fi2
IJjnkwPBPEz8d5iHwOgDfioG/tUEnlAgdl7kPBhCQkJYVzs7O4ETEhMTjYyM
oEX8008/FeQXOPs62wbZ2pBs2FjQv2Fbkq2xu3Fefh7bA9XX1509ayEl5SYl
5YIaBNylpFzfrP5rkpJuCgpWHR3s6TolLcXM2wyOxbYM/cyL5IXtBeLo5eUF
1GdqagqU+OpVn75+gIQE6W0LGhCDmVdCQiZUnuTk5OjoaA8PD1dX15KSEsbr
H7daJCWdOczn2DGnp0///ekLKBpyS0pKsre3B0FhHTVxsNHIKysrDc+ds5OT
s32X2cnKWqqqdrMbah7YPiwsLCsry9PTE+TAwsICeN7W1tbNzW2gyEIZHBwc
sNoOvoelpaW5uTmog5mZGQgr7BUaGgpXw87OTltb29jYGOTpzp07cJEhElJh
M6hIICWwV1xcHMTDodne1n4g/Fi2IJhnGMxTV1+voaSkp66uo6YGBgH969d1
36yyGiRp37jRPsi94BLzvHK2sdFTUtJXURnaDFRUbl+5kpqczJZ52tpaVVV1
lJUNlZUN3mWG167dbmz8UOa5evWWmpq+qqreu0xfS8ugp4fNMAL/HeYhMPqA
n4qBfzUBGocWJS9yHghgs3Pnzi1btkxXV3dgqo+Pz/Hjx2EDC1MLY5JxbF9s
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
VAOTeG2LZH01r8uWaQZhTwN0w2865VrqUG94FNlbJBqWlpSCuMPdgRsHV4CB
zi+jpaXl4+NjYmJSXl7Omnln5wtwVmVkbKWlrU6fNgQ7e9b81CkDNGB2+rSB
rKyNjAyYtZyc3f79apmZ3B/U6/nz1osX3SQlgzgxWVnXpqannGQ7Ar0toNpH
R0fjrZMFE/j3YwnmwTOAeQyCDQyi9FW9VB0e2JsmmhjE6JvEGyu5KZkmmVDq
yLdDtOzu22oFa7rkOZvEmbwX87zo7AQfVf/aNV1FxVsXLoDduXz5pry8Bhq4
JS8PSWB6iooGysoXT56E6sH1E2xvb9PUNLl50+LmTfN3mcWNG4YE83AIwo8l
wBa4qhhASmynpQam0tbW5vDhGgE1efbsGY1Ga2tri4yMzMzM/IS+TLGi4/mz
P5Zq/7Ag/MdfQ36YHzR3YfDcheS5Cyk//hr8w4Lg2T8FzvslFALzfgn+/ueQ
Wd8bMHsNg6aAjoSEhDx69AguRUdHh6WlZb8bB36spCT4sdbnzpkJCBzetOnY
1q1ndu6UFxQ8um3b2T17Lp05YywlZSQjYyknZyMhoZqVxaa3+Afi6dPqCROi
0LnJsInJXqEBzHrfBLDJy3o/+yyhpoajX8KSk5NDQ0O5S/WPHz9mTjnq7e1t
b2+PfQ3HJ/Dvx74vCOYZSbS2th44clxK7qLUeYWT5+ROy144LSMPJiWnAMvj
UjJYQBLipeV3iUlA6wPbkRPmAT/2qowMuKl3rlwR27pVQlT02J49UhIS4tu2
Hdu7V/rQIc2LF8HAy9VXUgI/lu04FR+I+von27crHTjgKCFhf+CAw4EDsLSX
kLCD1TfL1/EQhm22bVOuqqrgJFuCeXBFGgTwAzxUjPb2VnAhqqpK1dUVIyLI
NTWP+llycuy1awolJbkQbm5uGjq3EVCTp0+fRkREYGEggbCwMGy+xU8LHR2N
CxeGjeevmzzp2eRJHZMmlsFy8qTWyZNeTJpYPnlSy8QJxRMnFE2a9HTSxOdf
TU4tLHxLL9rb2+Pj4+Hc2c7XyfRjZWSsdu48LyoqLSh47NIll82bT4iInIPI
jRsPb958/Px5W975sU1NNdOm0VFPNQtB7iEICR0R1wVBctHIHASxfxNmjB+f
nJREf8QBgO1tbW3z8vI42ZhDgBx/8cUXAgICZmZmZDK5r6/PysqqXx8l/GDU
+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
MSTyNEasR6DA62fHUy4hN1hC7zmJGmn/k903UCdAQI0T63jOSxvjuAlYCZy3
3rMaSEFcXBwJBWF5zMzMgNAlJiaCm3R1dWnKQVorKiqSk5MtLS3/8z//E6Zj
o+P2kba8TnZkS+h19lUr7jVPuasV1+IG75qHzNVOYH01/FJIPSumM4rbyXZN
dzLETcbGxjgcTnZ2NugwiLBmUE3IdHZ0tja3alJHW0dpcWlEaERne2d7a/uc
WYu0pPT0dOhjqzoaOckxmzhWIkuj86kB8T5n7b91DroZKPAlUsDdqUeE44+2
J/35VGa8d5z4HldaUXlWjyUrT1d0ZGuIZcyVGzwLauYd5bHmgQS52CXcsIi4
GFofyOmKhDquEkdUHhOCDKKBkBAydIzw2HDuEDdFlSJVSVNVqZAgnzidmKZK
gwwkiUoCsyCTMJ1AY9P0t2YcN4GzV7FYvJiaU1NTEjWLFCvyIxQKiUtOzc3N
WVlZHDW5ublQCBpbWlqqunOaP3HgnZ9f3+H4xlsOO/e7QXpzj8u/M/tcX3vd
5h87Hf/3Lfs3djq9tO2MIeNu9fb2Ojs7w//dwcEhPDxcM054d1f3Fb8rvhJf
L4mXd4a3X7YfZKjpVG+ZNy2L5iX1go9EgjpXGFcWafoDAwPd3d2kHZrGCJhN
HIvKY1osRnmmp8d37rmy5WXa1m0+r7zOhPTXV/1f2c4gMtu2M17YQn3pFd8X
t3lv3Ub78/MGjfiHymNkyCAaCAkhQ8eIEkTFDseCZQiHhfZC+4usiz/5/XQl
9Aotn2aXYOec7Oya7hrdFg0VxNNiBpehvzXjuAnoSWJi4uLrNzU1JSQkaP+S
MD093draSqVSNS/BNAnGxsbq6urASXk8XlJSUkVFhc6hYKambv/zn6579yTv
2yvc8Y+QHTtCdu3i7PhHEJF5c0fozp1Ru3dx9+9PPLA/eftrtJKSUkO2anJy
Eqaenp55eXlBQUE3b95saGjo7uwGE8lWZctVctG4yCPDg8g7pzj7F/tnqDJk
KhlMIUG5X65fQ/2ixiuAXQbrJO2rG42A2cSxqDzmpzwKxeiePX4vvVSy7a+5
WzYLtmxOeGmrZPPmeHUmfctm4datyS+9JN22reCVV4qffz6ypKTMkK1C5TEm
ZBANhISQoWMQbgJfbQ+ZR8StCFG/yDbOVjwhthXYXgm74prmCjoQWh8qVUnJ
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
wEceCXj4YcaDD7o/9JDXgw96PvlkMVR4/PG6jz66x11qYWFhhB4ODQ25ubnR
aLREvQObgxeDAKqvM04880zC3SC2n0JxpVDoFEquOtOiLgzXRLn/5/+Unjr1
XUVF+eDg4Aoek8UAsg/RgsZr4BjOzMxMTU3NuSIG1qat6vO9aVbN/PaTk5Nb
W1uXvXkG3seIbmIqcexCmJDyxMUlfPLJdQhiIb311tFvv3V9991TkN555+Te
vV/s338cpidPOsHcb791O3/eRn+zBijP9JEjNh98EH34cNS77zI3b/7kpZe+
fuutm5B5+22fI0fYr7zyPQSxkCC/c6fDqVPfQjiKyjMHVB4DwTgW0QkZOkZe
QXYQxyeY5/P95S9cGTfC4/0jhcwIAT0szi9SyICPXkEOX5/9KIDtGcLzTZX+
cpM/MRwi8ZrC1SY6WvinP9E3bOBt2MBZvz5y/fqY9eujHn88/PHHw9T56PXr
I9avZ2/YwH3kEe7Ro26Lf3wA5FRz09o9mZkZevTRaAplSJ3yKZRECkVAoUBJ
GoUSqb4nNkR9swFRITs6OqakpHhl79xbDKC3hNo3NDTEgRMnJERGRvr4+KSl
pREVwFkmJyc9PT05HA4hyxMTE21tbVAOHwnTAR/hcrnV1dXEIx6wF5pnPaCQ
+DVpeaSnp+OvIoZg6nGshtz8HGYUPSCafuLcV46+dsG8wNC4oGA+i8UJCIkN
CuIGujNdjv3wmX+4bwCbkZKeTCxlTOXh8WIPHPjmo48ufPjh+cOHfzp69Nzh
w2cPHTrzwQc/Hj3685Ejd/JHjvysnnv29OnLi295ScozOXn74MHLe/bQ9+1j
bN9utW3buZdf/unFF7995ZVLW7ac2rnTfdOmb3bt8tq3zx8qvPbadTabveL3
DC8GVB7zhgyigZAQMnQMFku8eVPCpheS//TH0Cc3xm9+IXXzC2nqaQoxfebp
hD/+IfiF55M2v5Bka8vRLDg8PJyUlJSdnb3at77Diioqyu+mirvTil/nf6nQ
0tKsp6mxsbGRkRGFQgFyNDg4uCSpn52dCQhIcHIiktjJKeluSnRySnZyEqqn
mgqc/v6BpqZGoVBoZOmLj48nLHJgYMDb29vX17egoMDCwqK0tBSOJJgI+Asc
BwaDAXmIB8AavLy8QkJCmEymo6Ojq6srVKDRaLDlQUFBxI18/v7+0dHRRPvQ
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
6Sa1tbXXrl0bHR01/lYhCDIH84tjUXkQhPyQRzQQUkGejgFu4uLiUlhYOH/W
4OBgZmamQqEw/lYhCDIH84tjUXkQhPyQRzQQUkGqjjEwMDA5ObnWW4EgiD7M
LI5VofIgiClAKtFAyAN2DARBloT5xbEIgpAfFA1EJ3M6RklJSUxMzOTkZFJS
UktLi0wm6+vry8jISE1NTU9PhwpNTU2lpaV5eXkREREVFRWFhYVCobCtrS0q
Kgqma7QTCIIYj9WIY1F5EATRD8axiE7mdIzY2FiJRAJWYmNjY2FhwWazXVxc
+Hz+xMQEzOrv779586ZcLufxeOAjMBWJRDAXSsBcYKm12gsEQYzGasSxqDwI
gugH41hEJ3M6hkAgAI+g0+ngJlevXo2KiqLRaOAjHA4H8j09PaGhoQEBAWAi
xcXFvr6+OTk5wcHBbW1tzs7OLS0ta7UXCIIYjdWIY1F5EATRD8axiE7mdIz+
/n4wCMh0dna2trbm5eUVFhampKRkZ2dXVlaq1AMqtre3w1Qulzc3Nw8PD9fU
1IDLDAwMDA0NaS7wdXR03HPVExMTq7BDCIKsLqsRx6LyIAiiH4xjEZ3M6RhF
RUW1tbUVFRWpqangEWVlZXQ6PTk5GVwG/KKhoWF8fBzKc3NzwWLAbm7dutXS
0tLd3T0zM1NaWsrn86ER8BR/f39oZ3BwsLGxEao1NTVBHS6XCwYEjYDXFBcX
gyV1q4EKa7T3CIIsmdWIY1F5EATRD8axiE7m36WWnZ0dHR1dVVUlk8lA52/e
vDk5OSkWi62srNzc3FxdXc+cOQPVnJycwsLCbGxsoNDS0hLMpbOzE1ymt7f3
4sWLV65ciYqK8vDwiIuLgymVSr1+/TqNRmOxWLCsp6dnYGDgpUuXYEFoJyYm
Zq12H0GQpbJK98ei8iAIogeMYxGdzOkYGWoSExPlcnl9fX1RURGfz2ez2enp
6XZ2dt7e3gwGA0wkKSkJfAF8xNbWlsPhhIaGcrnc2tpaPz8/MAsvLy+wD/AR
oVAI0/DwcGjQ3d09IiJCJBJBBTAawo/ApMBWYF1rtfsIgiyV1YhjUXkQBNEP
xrGITo4ePTqnZGRkBKa9vb1rsTkIgpCd+aKxIo2g8iAIoocVUR7E/Fi3bt0h
LQ4fPgxdBTIwhfwhBEGQXwOigcqDIIiRWRHlQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRDEPPj973+/e/fuQwiCIItj3bp1qDwIghiZFVEexPwAK1nrTUAQ
xJQ4evSo4Y2g8iAIsiRWRHkQ8+PIkSNrvQkIgpgShw4dMrwRVB4EQZbEiigP
Yn5gx0AQZEmsiGig8iAIsiRQNBCdYMdAEGRJYByLIIjxQdFAdIIdA0GQJYFx
LIIgxgdFA9EJdgwEQZYExrEIghgfFA1EJ9gxEARZEhjHIghifFA0EJ1gx0AQ
ZElgHIsgiPFB0UB0gh0DQZAlgXEsgiDGB0UD0Ql2DARBlgTGsQiCGB8UDUQn
2DEQBFkSGMciCGJ8UDQQnWDHQBBkSWAciyCI8UHRQHSCHQNBkCWBcSyCIMYH
RQPRySI7hlQq5SCLgM/nt7W1rfZ/DUHWEGPGsag8iwSVBzF7MI5FdLKYjqFQ
KPbu3Uuj0fyQe3HixAkvLy8j/OMQZK0wWhyLyrN4UHkQswfjWEQni+kYExMT
X3/9tRE2xgwQi8Xe3t5rvRUIsooYLY5F5Vk8qDyI2YNxLKKTRbrJl19+qVQq
IZ+bm5uYmDg2NkbMmp2dLSwsTE9PT0tLS05OTlcD5aWlpdXV1ZoWMjMzYamO
jg6JRJKUlFRfX9/a2gr1ZTIZyC8sC3NFIlFnZ6dQKORwOO3t7bW1tampqT09
PQKBIDs7W6FQEE319fXBguXl5dDU7du3CwoKIFNZWQmLjI+PwyJQE/Ld3d2w
Uqjf0NAA7UMFyMNcKIcpLEW0Njw8zOfzYTNmZmZgk5qammDtsCUpKSmjo6Ow
YFxcHLQA9WHHYY9GRkZg1ZCBWZqDoE1sbCy6CWLeGDOOReVB5UEQAoxjEZ0s
1U1AXT08PAihBioqKnLUBAYG0mi0kpKSkJAQKJfL5fn5+ZoWItWAZQQEBISG
hlZVVYGJwLJcLtfFxQVqslisrKwsaBzyUVFRINeg+SDvkAdxhmUhTzQF5eA4
4C/R0dGwGaDz4F+QcXV1BaOBmjU1NUwmEywAbALqg/jHx8fb2dl1dXXBXDab
3djYCI4GPghzh4aGgoODwZ5gF/z8/MDCwsPDYS+gBbAPT09P2K+ioiLYTmgE
Nga2ENqHVYNrTE9Pzz9W6CaI2bMmcSwqDyoPcp+DcSyik6W6CQivSCTi8XjE
LOK3AoVCAU4RFhY2OjpKaHhaWlpdXd34+PjU1JRKfc0LlLm+vh7EHPKdnZ0w
hfLKykrQ3v7+/qCgIFgcynt7e2UyWVtbG2FYUE6n00HSibUDMAu8AEwHpikp
KeAyCWrAU2AbIiIiQPPd3NxgA8DRYKni4uKMjAyBQAC+A+uCCuACYBzEzyyw
a46OjtAU7BS4pEQigcpjY2Owg7ABsF5oxNfX193dHXzE398f6sA+Enuq81ih
myBmz5rEsag8qDzIfQ7GsYhOluomMTExoKUgucSs4eFhkFn4GK0GRBjEGRSb
SqWCFEPNyclJqBYaGtrQ0JCamurs7Ax6C0INlgEKDxbAYDAg4+TkNDIyAjWr
qqrADkDqQeG5XG5OTg60duvWLVB1Yo1gEyEhIVAeEBDQ3NwMy8JKobX4+Hhw
ASgEAwLbunHjBqh6eHg4GA2sHTYGloU6RPvQCNFad3c3LAIZsAwwJnAu+NjS
0gKNgMdBHurD1oJ5wW7CuqRSKSwLrQ0ODuo8VugmiNmzJnEsKg8qD3Kfg3Es
ohN82mJlEYlE6CaIeYPPeZEQVB7E7ME4FtHJYjrG1NTU/v37o6Oj2Wx2jBq2
LmJ0oZmlXUe7cE7NOZW1P86poL24zqW0Z+ls/56t6dlTneXAzz//TKVSjfCP
Q5C1wmhxLCqPzg3QCSoPYvZgHIvoZJEdg8/n+yOLgMlk1tXVrfZ/DUHWEGO+
BwGVZ5Gg8iBmD8axiE6wYyAIsiTwvbQIghgfFA1EJ9gxEARZEhjHIghifFA0
EJ2Qp2MolcqIiIiampr5s9rb24ODgycmJoy/VQiCzMHM4lhUHgQxCcgjGgip
IE/HmJmZsbe31x7DXENdXZ2lpeXt27eNv1UIgszBzOJYVB4EMQnIIxoIqSBP
xwA3cXJy0ry3UZv6+vqbN2+imyAIGTC/OBaVB0HID3lEAyEV5OkY6CYIYhJg
HIsgiPEhj2ggpII8HUOpVKKbIAj5MbM4FpUHQUwC8ogGQiqM0DE6OjrGxsY0
H4n3RYJ3EK+D7Ovrm56ehsz4+Di6CYKQH1OJY1F5EMScwDgW0clqd4ycnByB
QBAREdHZ2alQKKCkurq6u7sbrITFYoFBhIeHp6SkDA8P5+fnBwQEgHFAvqen
hzAdAnQTBCEPJhHHovIgiJmBcSyik9XuGJGRkTAtLS0FQ4mNjW1paQH7sLe3
j4mJ8fb2hkIbGxtfX9/o6Gg6ne7j48Pn82GWg4PDwMCAphF0EwQhDyYRx6Ly
IIiZgXEsopPV7hjgI2AQMpkM/EIkElVVVYF3uLi4wNTV1ZVGo1lYWIDjQB2w
kqioKB6PB6bj7++vVCo1jaCbIAh5MIk4FpUHQcwMjGMRnRihY4yOjqrUN6ER
HyEzNjY2OTkJ04m7QLlCoQgKCqqoqFCp72HTbqG5udnO1k4xpVjtTUUQ5J6Y
RByrQuVBEPMC41hEJ2ToGOAvefl5Obk535/+PjgkGPJ5BXm5+bmaxOVxT313
SpohhXxxSfEcr0EQxJiYShx7T1B5EMSEIINoICSEDB2jtLTUimsVXBUcXBsc
1hgG05D6kJCGkNCG0MCqQEihjaGQIAN1rgVcGxoYWutNRpD7F7OJY1F5EMSE
IINoICRkDTtGWVlZX18fZCorK5llzGxVtmBE4Cn3jG6LZpQw/Iv8/Qr90lRp
UpXUJ9eHVcmCTKYq0yvZ6/Yw3q6GIGuGqcexqDwIYopgHIvoxDgdo6enp3ke
u3bt+sMf/nDmzBmxSBxQFiBXyaPaok66nLwafvVK2JUroVd+8vsppDYkR5Xz
o8+PP3r/yG5ng5vYcezSU9K1x8ZBEMSYmFAci8qDIGYDxrGITozTMcrKyiTz
2L59+4MPPnjhwgUelxdYHihTybi93G/dvo1pi7ET2N3k3/za4euQ+hBGPuNn
xs9gLt7Z3tmqbPcEd7lUzuPx8vPz0VMQxPiYUByLyoMgZgPGsYhO1rBjVFdX
Dw4OQqaiosIz2zNlMiW0MdQ6zjphPOF88PlL4Zf8y/ztxHaRrZHnWOcsOZbB
jcFQx4HvMDo0OjMzAw7F5XLRUxDEyJhQHKsTVB4EMUUwjkV0QoaO0dnZSQul
BXIDv7/6vTPTmcVjhQpCQwQhwXHBkIL4QV6hXt9e/ZYZwwziBbGiWFOTU8SC
SqWytLQUPCUvLw89BUGMg6nHsRpQeRDEhCCDaCAkhCQdQzmlnBiduGFxI0ua
NT0+PSdVllReOX9lsGdQMa5Qzcxb9q6n5Obm6vKUmUWnWaPsK4KYNmYTx6pW
UXlATBSLTjicF4LcG5KIBkI2yNAxamtrr9OvUwXUa0HXHDmOngmeVCEVkqfA
E/KQnHnOFiwL9zh3L4GXNc369qiOp4ZnZ2fBU3g8Xk5OztTULz+b5OR0vftu
yb/+VQHp/fcrf52q1OWVxNyDB8up1Brj7jeCmCRmE8eunvIUFVWcOhVy+jQb
0g8/cH74IUYrcdSFMcTckycjg4JExt1vBDFJyCAaCAlZw46hUPzylhxwAWY5
M1OVmaXKSlQkJk4niqfEcUNxUpU0aTopRZUChRKVJEOVAXU8Ez2H+4f1NFtR
UREbG5uXlzc9PS2R9P7hDzUPPnjroYeannii4oknKtevr3788eoNG6qefLLs
kUfqH320DmZBhf/+76azZ6uNst8IYtqYehxrBOXJyancvp29Y4f4zTcT9uyJ
gLR7d/SuXew9eyL37g19663YnTt5MGvHDuGrrybY2cUZZb8RxLTBOBbRyRp2
jO++++7zzz/PzMwsLi5mlDDkKjm3k2svtL8QcOE7j++sOFZu6W6ecs9rUddc
Ul1u8m+mz6aDobgKXKvKq9oXpru7u7W1NSkpKTCQYWXFfuyxhkcfvfXkkzUv
vpj/3HNlMN2ypWDTpqK//jX7hReK4eOGDfWPPdb0wAON589jHIsg98bU49jV
Vp6AAKajo/euXbxdu8T79nHee8//4MGQf/6TBpl33w3417+o774b+M9/+u3d
G7d7t/CNNwSOjvFrdSgQxITAOBbRiXE6BlgGZx6bNm2iUCjbtm1jMBhBlUHZ
qmw3qVtUa1TaRJqDyCFlJsVWYCsYETiKHZOmkqAkbTZNppLZc+1jebGpC5Oe
ni6VSqOjoy9fPv/VV67r1zdBmPr4440QxEL4+tJLuZAg//LLOevXN0Aoi3Es
giwJE4pj10R5Ll26+P33l9Rhqmj37oSDB0MhfH3/fR9IkP/Xv7xhFpRgHIsg
SwLjWEQna9gx6HQ6eMrk5GRFRQWznJmjyhEMChyTHH3zfa9GXLWJt/HJ87ka
efVy6OULrAs3eDfkKnmWKouaTB0bGdPT7ODgIOEpw8ODUmmf+r6C5sceq33+
+cKnny575pnSp54qe+65omeeKX/ggZbnnit89NE6vK8AQRaPCcWxOll95RnK
y6t6/fU79xXs2sU7eJC+b1/I/v1B+/aFvv12wP79YTt2JL39NmPnTv6bb4pe
ey3B3h7vK0CQe4NxLKITMnSMmpqaa4xrVCH1ZtRNqxArl1gXhxiHG0E33BPc
bSNtbSNsLYMsz9POw0cvkZeVr9XtEd1vh+zq6hIKhWKxuLOzkyjJyurcu7f4
7bcrDhz4Vdq9u+SttwoOHqyEPMyFtGtXmasrxrEIcm9MPY7VsHrKU1BQ/uWX
QSdPRkM6cQISWz2N/vLL8M8/Dz51Cj6y1XOjjh8PZzITjLjTCGKqkEE0EBJC
ko6hGFfcHrptddVKLpFPjk5O3p6cGpsiMpAqSioun7/c19k3MToxMzVv+Bst
H4GMdvns7KxSOT0/NTbWu7k5Dw31q1QzdwsVSiWOfoMg98Zs4ljVKiqPcmZm
Uqmcmxoba1xdHQYHe2Znp+4WToD+GGt3EcSEIYloIGSDDB2ju7ubGcEM4Yac
unDK0dcxhB8yJ3kGen5z9puA6IBQfmhYTJhiSqFZtrOzMyEhYb6P6GdoaDA2
lp+RISVe64MgyOIxmzh2LZRniM8H5clA5UGQpUIG0UBICBk6RklJibvcXTQm
ujPuzbRYpBBBEk4JhZN3EuTFCnHKbIpgTCC6LbLj2A0P3Bn9pqOjQ6QGzGip
a1QqlTweb2JiIiUlZWBgYBX2CUHMFrOJY1F5EMSEIINoICRkDTtGSEiIUCic
np6urq6mF9NlKlnyZLJLqotljOXViKsWkRbBNcHeOd6QcU5x9snxIQZypCZS
a6tqExMTwUd6enqWt+qZmZmYmBjIjI+Po6EgyJIw9TgWlQdBTBGMYxGdGKdj
lJWVSebx8ssvUyiUV199FWyFVcHKVmV7ZXuBg7Cb2JZsS34/3ybWJuJWxPXo
64mjiTc4N1KVqeA4tmxbTjRnGb+EaKNUKvl8PvHyHTQUBFkSJhTHovIgiNmA
cSyiE+N0jJ6enuZ5fPrpp4cPHwYlz5RnBpYH5qhygqqCvLO9Q2tCLSItmGVM
pySniOYIqpzqIfWwibMBKyHeqjM6NGr4JonFYs2PKmgoCLJ4TCiOReVBELMB
41hEJ2vYMSYnJ4lMWVmZdax1WF1YeGO4FdfKJd0FpmcZZ71zvWlFNFoh7Xzg
ecsYy5C6EKhznXV9qH/I8LWDm/T29mo+oqEgyCIxoThWJ6g8CGKKYByL6IQM
HeP27dsZ8gypXPrDmR+Cw4MzczOz87NzCnMyczLl2XJI3Dju92e+T05LlmXJ
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
UwyCm/01Q1TtciyfEVRcCu1NEgxelr4EcYe7AzcOrgCJPL+Murq6l5eXkZFR
RUUFdeb9/Z3grLKydrOzv2ZjKwdjZ29gY3vFxlZBDpSxs7eTrY2dvYuFJTkj
g0Yvm29Ed3eXioqJoqKVoqLllwy2MWptfU1PtmPQ2wKqfVRUFNo6WVCAfj8W
Yx40A5jHgKBtFKP1xOe+Y4GVWaq+UbyWabKuovtd81R9QgtOO1TFIc9CM+Sp
a5GtaaL+VzHP+/cd4Kz+738fmJl7Jk9uIFvH5Ml1kyc3kgP1zMx9zMy9zMxv
mZn7J07MYgzzdGtoGKiqGquqGg1vamrGKiq6GPPQCcyPxUATqKoYQEo0p24B
ptLU1KTz4RoDNWlra4uMjOzq6goPD8/MzPyBvkxRo7u7fcuOO5t3mm2RMdm0
3UBqp7HUTkOpnUZbZCBgvH6r3hZpk007jDZLG0vtMBaTuF1U9HdvC9AU0JHg
4OCysjK4FD09Pebm5gNuXH9/16pV3uCmcnDUsLDos7CYTp/uOGOGLwuL0fTp
TjNm4Dk4Kjg4ymbPbpw9Gxzd+MzM56N+gk1N9Vu2qEpL46SlvWRkvKWlwbw+
mycSIMd7ysjgNm5Ur66upCfb5ORkAoEwulRfV1dHGdbM09PT1tYW+RqOTqDf
j/1aYMwzlnjzpn3VWpUlK/yWiXkvWeG+VMRrqYgH2DIxCHgtFHIRXAnxnoIr
vZYs9/51kfpXMc/7952iov6TJ/eysLyePNlk8mRrZmZ3ZuagyZMtmJk9pkwJ
mzatcdq0ehaWThaWHmbmNMYwT8O+fXdOnTI/dcrk1CnTz/YpLC9vQg78HT59
2lxO7g7GPHQCVaSBAT1AQ8UAWoYHuaKi7PHjhyEhwRAeYImJcffu3SbP1VjZ
3t42fG5joCavX78OCwtDwkACISEhyHyLPxa6u1t37jBfty5EalPkls1x69f5
w3KzVPSWzfEQlpKKklzrI7nWe9Om8M1SsRISdhQ1+bx7d3x8PJw7zfk6P/ux
rbNnN82Y4TN9uisrq8mcOe9YWc0hDJHg3LKymnFytjLOj21ubpCR0Tp4kCAl
pbN5s96aNQpr1txbufLq1q1GR46EbtliICp6aetWwwMHAg8cwG/frp2QEF9G
B4Dtra2t8/Pz6dmYToAc/+9//9u0aZOJiUlgYOCHDx8sLCwG9FFCD8aNH4sx
z3fBmzevRUR853CW8Mwr5+Wp4577ApY886qQMM+8yrlcGXO50nnmveKZV8vN
HVFU9C9PdXjm+ezHvmVh6WJmxjMz+0yebMXKSpo82ZaZ2Rvc18mTTSdPtmFh
ecs4P7a5ufHYsUeXLzvs3//owIHH27f/sX37xU2b5A8dUr52zfnQIaWNG09A
+NIlm0uXbA8deogxD51AA2lgQCHQUDFsbNykpJSlpbW2b1ffuVNDRkZHRkaX
vNSGJcTv2qW5bZuatLT2li2qKiomw+c2Bmry5s0baBdTej23t7cjr0cYetBR
B/ixu3ZZLlnySFDw8erV1vPnn9iwwV9Q8NHWrTGLF9/YsMFv6VKFRYuurlpl
JST0RFLSfoAfi6CzszOSjNbWVur4/v5OMTG/6axvZrI1T2E2m8psM22qF8tU
/6nMVtOm+rBM9Zk6xXEKszE7W91M9jfTWVMZ6sdu3266fPm5lSuvbdyoLij4
OyzFxW+uXftIWPiMmNj1AwcCwI/dulXTz883mQ44OjoC+cfExNCzMZ3Q0NBg
Y2M7fPiwq6urkZFRSkqKmZnZN45uxDiMGz8WmGfLFkVZ2Wc7d6pKS6vt3q0p
J6e1ezeYJnn5TEZGfceOp7C6bdtTVVWMeUYH4MeuXOk3Y4bxrFkmXFzE6dNv
8PC8mDXLmI+vip1dfd685zNn6rGxPeXiIsyaZcnDEz7Aj0UwFPO8f9+xYkXQ
/34mMU/u/t/PNhN/dpr0v4BJE0Mm/uww6X94sIn/c//fz5bMk9umTP44aeJz
hvqxR4+qSkoelZKS37Pn7qpVe2G5ZcvZXbuuSEoekZI6TfZj7Q4efIAxD51A
A2lgQCHQUDGsrDx27XI6dMhfRsbq0CHc7t12O3eaQFhOzkFW1nr/fvcDBzz3
7XOTlbXdvdvz6VPLwTlQtx/HQE2QowzoN1pQUACaMjaD+40KyH6sxcqVlosX
31q8+OaKFZpr1tjx8h6WlHSH8NatcZKSnqtWmW/ZEr18ucbatQPfx1KjpqYm
JCQkNjYWrkl9fT0080kf30ntUFm60kVQ3GGpuBmYoLjtUjETcsBmqRh5KW4h
KG6/bJXLgmXqmZmj/5ca+LGysjqHDoVt3qwvKakkKnp57VolCOzaZbto0aH1
61XAs12zRmHvXh/wdXfu1K+vp6uLbi95qM3RLSo4JJQ/HuFipqWljfEs6l+F
cePHAvPs3m1/9KivnJz50aNee/day8gYQnjfPls5OYuDB10OH3Y7eNB5zx6r
vXvdVFQw5hkdkP1YHAdHyMyZmuzsGrNnO82dG87KeoGbOwnC8+fXzpuXwsWF
5+Or5OBw5OEJo+nHIqDBPKS+jVvV+IW9Foq4/j977wEX1bWu/+d+zr33d+7/
3muaMXrO1STG9CZojA1NNGqiJuaYojHJMZqYxF4TG0WQXoY2DAwwQ+/DNBhm
6AwwdJAivUmvUqWX+b/OTuYQGBEYGPbg+3V9tmvWXnvtwprnedfs9vJquiy5
v7zaUZZx+2Pq8rKG5ysafs+9Yjo3ytN46JD2qVOeX3yhvXv3ma1bv9u9+zRk
vv3WVFNz9yefXPjgg+937frl2DHayZNuBw5oo/JMETKIBkJCyNAxZHEs48sv
gzQ1f/zii4ANGy6uXfvL+vXn3n9f/733znz4ocmmTb/t2eOwbt2pjz5y0dd3
GrssjByjo6NhoApqBmNz+A5yuVwVfBPZbPbER8E0NTWFhoaqy9tnurtbd+xw
eO01kzfeMHnrLctXXrn6yitXVq+mvvzylVWrLrzxhtGbb5q++abJ5s1hL710
+d13nQsKHugmBHfu3BGJRJ9//vm2bdu6O7rtBVaxQ4KoIX6cVAgpVhoW+69M
GJRHDYXAFOq45NhnZs2+m7S0NG7bdmnHDrvNm3U3bdL+4APTjRuvaGnd2L7d
assWg3ffPbN27elNm67v2GG9Y4etltbFqqrKqTRLXKE3u3dbjIyMQI8SCoXV
1dXZ2dnFxcUQnDQ0NIDLzOJaZouFFMfu3esMEezatT8cOOC7efP5d9/9aePG
M9u26W7YcHrnTiMtrUuffGK/fv0JGFYbGKDyzA737rW8/TZr0SLPJ5/0eOop
v8cft338cZunn+YtWmSzaJHZk0+6PfWU15NPei5bVrxokfXSpcKCgoc8UkCR
8oRGDcuVRxAnDSMyfygPX6Y8oa5zpTxNn3zyy4EDN/bsOQMR7D/+cfmjj058
8sl5CGs//fTCtm1Htm37Hsq/+kr3wAG9jz/+CZVnipBBNBASQoaOQcSxX30V
vGnTrwcOsLW0rmloHN2+3XjXLsqWLTp79zppaV3/+mvue++d3bXLeWIcC4Nx
X19fT09PJpNZWFgItqICNwHnam5unlgOspCWlhYeHt7V1TXX26AkfX33fvzR
+KuvKAcPWh88aHPggKUsUWD61VcWX31lJstbwVzIfPmlPpjFQ9usqKhYvHjx
v//7v3/2yWcOIodEaWLkYKQh19BEYOKc6WwmMjMVmNIz6JQYSpI0KV4aHyeN
S5AmuOW7zYWbQN8oLCzIy8u7fTsfEvxfXFySnJwCsUdJSWlRUUl+fqGs/D6g
3lN8MONc3DU8Ojrq4+PT1tYWFBREoVD8/f2Lioq8vLx4PN4srmW2WGBx7Ndf
B8Io5tChoK1br6xZc2TnTsOPP7Z4//3rn37qsHXr1W+/ZUNMu3u348Q4FpVn
ZvT1dR86ZLNzp9tHH0Hy2LXLBdJHHzGJzK5dTrK8K8zdtYv50UdWd+5UPrRN
sikPjClkynObUJ6SErnylIAK5ecXoPLMADKIBkJCyNAxHBy8tm93+eyzAA2N
X95779e33jq6Zs25zZv11669sH79tZ07HdauPbdjh/W7716AatraDhNbGBoa
CggI4HA4/f39qvlVJDk5mXgCjEIaGxvDwsLGPRCGlIxIpYNTS/evmIJdhpE7
CC/Ir0LtTUhIiImJgXG9uYm5oZ8huEmsNNaQY2gQbHDF40pUZxRMDdgGYe1h
xiHGbrfdwE3uv77nNnMu3GQisOWRkRE0mkNGRkZ1ddXMGpkjNwGPq6mpATcB
K3F0dExKSnJ2drazs6uvr5/FFc0KCyaOBeXZudPp889916w5tmHDxXfe+X7d
ujNbt+q99965TZsuf/yxHXyEOAo+QjUdHerEFlB5ZgroSb9UOvDHVGHql6X7
OrMAlCci4nflkb9leLqg8pBBNBASQoaOIRBEnjxueeaUzUc7j3/3jc6507Zn
TlHOnbE7e8oa8udO2/x4xHDH9mOnjluePmHt6RmksJHExMSOjg6pqq5Sk0gk
5ZO+WGdkZARkRywWk/bez+kCewSDdAsLC9A6V1fXrCwF90fAiP6ZZ55Zvnz5
1d+uOkY6SqQS8Au9AL0bQTe0fbSDq4IJN+E18q56XLWX2EMFcBz3Ancl3WTc
m0YfRG1tbXp6upeXV0VFRWvrlJ7ZOJG5cBOwZgg/wIibm5uhfejJxcXFYHk5
OTlT+RlcxSyYOBaU5/QJi3OnKbt3/fLPb7XPn7E5e9rywlnbc2co589YQzp2
9ObOD3+AOmdOUrxQeeYJVB4CVB4yiAZCQsjQMeIS45w5NAaffsHkjIW7CSPE
mRnizBiTbHytzhqdonNornwnvugh5ztU4yZgJTBufWg1kIKQkBASCsLMGB4e
BqGLiIgAN2lsbJSXg7Tm5+dHRUXp6+s//vjjMO3p7jUNMOXUB/tX+d4I0jVg
37BLtNFn6xlwbtgm2JiEGmn7Xfcq9WTVB7LrWZRYS2XcpKenh81mp6SkgA6D
CMsfqgmZhvqGmqoaeaqvrc/NzvX38W+oa6irqRs3a4qWFBcXB31sTp9GTnIW
TBwLyiNTlfvKYy5THgYqDymZlvKYBZhwGlj+1T43WDoGHD17CSiP7k0OSJC1
icBQx++ad5lHcEMg1KHEofKoE2QQDYSEkKFj+PH9OB2caGl0vDQ+RhoDCfIR
QxGx0ljIQBJLxTALMmFDYXQWffLWVOMmMHoNDw+fSs2BgQGxjCmKFfkRCoXE
Kaeqqqrk5GS2jLS0NCgEjc3NzZXe3+u+A1+f3P/V1c8PXvn6sO7X/9T96pvr
B/8py3x7/eB3Ovv2X/ri4NX9By5/cfDahx8dzciYuZu0tLRYWVnB393c3NzP
z0/+nPCmxiZtZ20nsZOD2IGWQHNOcYYMNY5KS6TRk+kO8Q7wkUhQR5uhPUXT
b2tra2pqIu2jaVTAgoljUXnUi6koz+Bg32f7L+zcbbxrj+He/RaQdu8z3fsP
cyKz5x/m23bo79prvHO34a49xhu1TqPyqBFkEA2EhJChYwQKAvmdfLAMYafQ
TGh21ePqReeL2j7a9Ay6aZipVZSVdZx1UG0QVAgfCmdwGJO3pho3AT2JiIiY
ev3KysqwsLCxvyQMDQ3V1NRQqVT5SzDVgp6entLSUnBSLpcbGRmZn5+v8FEw
/f09R4/e+OmY+0/HXL85ZPnNN5ZHvnc4dMhClqF++43V4X/aHjni8PPPbsd/
8fjiC4OcnFxltqq/vx+m9vb26enpnp6eRkZG5eXlTQ1NYCIp0hSJVCLqFdkl
2BF5q2grl2yXBGlCojQRppCg3DnNubxsstO1cmCXwTpJ++pGFbBg4lhUnoWn
PAMD9w4eMP/889DPP2fv3u26Zzdj3z7f3R+7EJk9e5iffuL52T6/L7/gffll
yI4P7VF51AgyiAZCQsjQMQg3ga+2XaKd/x1/0V2RSYhJeF+4icBE21fbOtYa
dMCnzCdeGk8eNxkcHOTxeNP6oYN4m2RqaiqxVEFBAeTBTVgsFsmH2LDBVVVV
KSkpsMtsNhsUu7m5efJ9hzj2yBHdH390/eEHpy1bDr///tHt23/at+8q5Hfs
OL5378UtW/65Y8eJn392/flnxhdf3LC1tQtTApFIFBAQ8OOPP4LFf/bZZ489
9tjy5cvpjnRniTOYRaw0VtAp0PXXZWYzIUQ5QTlxzuEcu4EN8QnMggR1HJMc
p+gmcXFx4KR4do8MjSgJKs/CUx6IYw8cMN2/n7N/f8CaNcfffffMe+9d+OAD
kzVrTmzY8NuWLfpQCJkvvuBA2rHDGpVHjSCDaCAkhAwdIzAsMKw3LEmaFFgd
aBtvy8xh6vjpUCVUyyhL3UBd83BziwgLt3y3ZGlytDSayWVO3ppq3EQqe5Dj
DE7YgYkIBALi55GWlhYKhSJ/DDXZAPsrKioCrQa/i4yMvH379tQPrDyOPXbM
+eOPz+3ader994+cOuX9wQdHIX/kiP3OnScg/fSTC8Sxn3+uJxbHdyoHbG1f
Xx9k4JCeOXMmKyvrTsUdaiz1dzfpEhhyDb+59g30pQtOF/QC9RzTHIlZ03WT
ubjbQr1YOHEsKg8pUUZ55HHs558Hb96ss3HjlbVrTx88KISAduPGq/v2eUMQ
u2HDZZgLceyHH1qj8qgRZBANhISQoWME8AJoSTSPHA/XDFcTrol9nL2FwELP
R8851dk2ytY22tYizMJCZOGR7eGa5Ur3e8hVaiDyKnOTmf2aAUIEg/e8vLye
np7q6upZ3zBlAEGGTRKLxcHBwSEhIampqc3NzTPYTYhjv/vu+pEjLocPO2za
9M8tW47u3Hl2+/aTWloQx56Dj5qa/9i9+9IPP7hArLtvn056esas70t9Tb1d
rF2iNFEsFYd0hVjGWPre8XVIddDn6EM+tCsUyuOkcZCgDi2ZVlZaNpVm0U0W
TByLykMeZkt5II7dv9/o0085n3zi/847JzQ0zq5fr7Nu3RUNjTPr1+vCx1df
/XbTppuffcb+7DPO1q1WqDxqBBlEAyEhZOgY2dnZDCbDheFy8NBBA0MDpjvT
zdPNw9vjfsbDDZK5lflXB7+iOdGgmkQigUXAL2CQPrGp1tZWEGrVXPSVlBTX
2jrzJ+xlZmaS59k47e3t6enpAoEALDIyMrKmpkbJE45DQ4PXrhmfOWN05ozh
6dM3IUHm1CkDyJw9a3T8uPaRI+fOnTOBCmfPGv/889Xi4pLZ2hc57W3tZi5m
NA6NyqE6cB3oAroj39Ep1IkRzoA8lEA5kaCOibNJY0PjwxvFu4YXUByrpsoj
kYhbWhpmvPjCVp7h4YHffjP/6Sern3+2/OknyJhD5tgxMyJz9OjNb7/99Zdf
rCH/889W339/A5VHjSCDaCAkhAwdw4fj43rb1f+Of1BtUHBDMKueFdwYHFQX
5F/lH1gbGFATwGpgBVQHQAXvCm8Kg2Jmavbiiy9qamrW1tbWjQH8hcVi3b17
d9a3MDU165dfGCdP+pw86X3ypC+RvvzS+vBhZ1khUXJ/7vHj3lRq4FTa7O/v
h63V1dUVCoUw0J7KOT5wyfj4BJEocipJKAwnHms5yQZUV1cnJiYGBweDj4Cn
NzU1EbNycnL8/PzG3UbR2dkpv8UAtBRMZyq7Oc+MSEcGR8al2ura4cHhcYXS
KZ+nLSwszMjIIO7veDRZMHEs+ZUnLS3r7FmHixcZFy+6XrrEhHTxIvO772Do
ZycrJEruzz1/3tXR0W8qbc5MeeLiJAJBzNRSFAmUZ/QBadzcOQOVZw4gg2gg
JGS+Osbg4CDoGDG0DBIGhd4LlUgl7Ca2vcTe5ZYLJYbiUegRPRwN/sJv49Mz
6MTrV6Kl0Y7+joY3DZ9//vk33nhDLBbHjwE0cOKbx5VBIpEQguzvH/E//yNe
tqxs6dKSZ55JWrIk+dlnM5ctu/XssynPPntryZJMKFm6NG/ZspInnyzdv991
coXs7u4mMvX19Xl5ebAXoOoK770l6O3tJX7nGRjo+/rrU4cO3Th0SBfSN9/c
z3z77Y1vv9X/7rv76Z//vAlTWaH+xx//pPCUWVtbG4gh2AePx4uJiblz587E
9+NkZmbCvotEIjab7ePj4+joCH8se3t7W1vbhIQEJpMJC5LzxYVTISgoSJkn
EbW2tjY0NJD8Bpk5Ra3jWPVSnsBA4Usv+a9dK16zJvbtt4PffpuzenWIpmbY
O+9ARgD5t99ma2qGr10b+9Zbsd9+azd5szNWnqGh3g8+MHzrLdY77wRAWr06
SDZlQdLQCNbQYGtocCBDFL70kgUqj0JQeZQE41hEISroGPC9q6ioKPszIGiL
Fi0CU7CxtvFie4GbCLuFpgJT91z3G4E3iHdh24ptbwTdMBeZ67P0fct9wU0i
hiKsPazr6urAOEATQIRrxlBVVVVeXl42SxQVFa1YsWLZsmX6+jdcXVlLlyav
XFn54otVixcbLllivXix0bJlnkuX0pcssXnmGYtnn3V84YW8lSsr/v73ioMH
3QcHBwYfzMGDB/fv3w9aDRsM+uzv7w/7Aj74oPoMBmPjxo0g5rW11T//rHP6
tOPp0w5nztCOHjU+dcr+u+8goNX+4ouLn39+Ye/eX7788hLMOnvW6dCha1lZ
t4g/ATQCRwYMl8Vi8fn8W7duKXxFu5z8/HzibZvW1tampqawIDgIbLCrqyvx
QvkrV65AyeRnUWEVycnJEbMKeNzYJwjNjJndJiMHz+6pSxy7AJSHyQxcvZqj
pSXR0kpaterSK6/orlr165tvWr/2mskrr+i9/PL1114z3rAhcvPmxHXrEo4e
pU0iO8ooT339nU8+cdy8OWXLlsStW5PWr+dpacWvXeu3Zo33O+84vvMO7Y03
zFavpm/ZkrR1a7Kmphcqj0JQeZQE41hEISroGCBlqampSX9GKBQ+++yzIJJe
Xl5ugW6CHkFoRyiYiKhD5JTuZBtv61HoYZ9gbxxi7FngeVjvMK+VJ5aKo0ej
r1leMzQw5HK5YCggVklzBgz/iXOITvcJ+COOrV2yxOrZZ12WLfN57rnUv/0t
cOlSl6ee+vWFF4ogxF25snzFiqoPPjDjcNicB/PKK6889thjH3/8sbOzc3p6
OhwiXV1dkLgH1T927BjUf+GFF1xdnX/5RffUKQcIXyFY3br1y4MHr3z99VUt
rc8hlP3+e4Nt2w59953eqVNUmAtxrESSlJubGxYWxuPxxGIxGIrCV5NPJF9G
X18fcRyI23Jh8crKyu7ubrAJUHXY8kncJC0tTSAQgCM3/5mmMYwrGTd3YgWg
pKQETG0q7zOahODgYGXcBO+2UJc4dgEoj7OzLxHHbtmS+vLLOq+/bvbWW3br
1vHffpsG+eef/3njxhgtreTNmxM2bEjas0dvEtlRRnmYTKdPP3XatCkJwtct
WySrVp3X1GRqarq/+OKZtWu9161jvfTSb2vX+mtpJcDcNWs8UXkUgsqjJBjH
IgqZx45RVvb7TZq+PF+/Bj9Rj8glx+Um/6ZDmsM553NmEWZ+1X7X/K7RMmju
xe7RQ9HgOOxOtkuwy0D//ffUwNB+rrewtLSUkB0WK/qZZ1JXrqyFtHix+fPP
lyxd6r10qdfSpZ5Lljg8+yx9yRLa88/nr1xZ8/e/Vx865DV5s76+voQednR0
2NjY0On0iEkfbA5eDAIIlUdHh48du3bqFO30aYdjx8whfIXA9csvf928ef+R
I4Znzzru2nUEglhZHOt44MCVU6dOgSm0t7fP4jGZCiD7EC3IvQaO4fDw8MDA
wLgzYmBtY1V9ojeNypjYflRUVE1NzYw3T8nrGNFN1CWOfRBqpDxsdsTbb3Mh
iNXSSl216trGjeI337R54w3rN96gvPqq4Wuvmbz6qtGGDVFaWinr1iX/+OND
nqgwY+WBL+uePdRNm5K3bEncsCFs5crTL798WUPDeeXKU++9x966NfnVV29A
iCuLY5NWr3Y7efI0Ks9EUHmUBONYRCFk6BhpGanuLGd3lsuJK8csnU28eW6+
oR4+fDcvDsM31N2Lx7Rzs/rx/GFXf0ePYJdocRSxFPE4ROI1hXNNYKBo8WL3
FSsEK1aELF8evGIFf/lyzvLlrOXLA1es4C1fzoXC5ct5K1aELl0aevCg3dTv
IAA5lV+09lD6+noOHTp7+LDp99+bfvbZuY8++mnnzh+2bftu9+7jH3zw7ddf
627deujbb/UPHzY+csRs374zLBZr1q/cmwqgt4Tal5eXh4SEhIWFBQQEODo6
xsbGEhXAWfr7++3t7dlsNiHLfX19tbW1UA4fCdMBH+FwOEVFRcQtHrAX8ns9
oJD4NWlmxMXF4a8iyqDucawcUB5PtpMnm3762g8UV0PfEFf/MDe/UIYP38U/
jAkfqR4WP138jhlI9eLSY8S/316kSuVhscJefdVq7Vr3NWuYGhp0TU2GpqaL
hobT6tW0P/JQ6Lpmjdvbb7t9/7351FuelvIMDHR/8IHZO++INDSEr77q9OKL
Fi++aPL883ovvUR57jmdt94KWLHi2jvvsDU0BJqawldeoQUFBaPyTASVR0nI
IBoICSFDx/D3C/lsn81XXzpu1dL7ZA/lwJdOB75yuj/90lGWcfzsUxutzTpf
fO6w/zOqne2/fu3s7OyMjIxMSUmZ60vfYUX5+bf/SPl/TPP/nP+9QnV11SRN
9fT0dHV1DQ4Oghy1t7dPS+pBA/39WUymNyQ3N193d7+xicn0cXf3J+ZC3tnZ
HYb/lZWVQqFQxdIXGhpKWGRbWxuNRnNycsrMzNTV1c3NzYUjCSYC/gLHgcFg
yC69qwdrcHBw8PaGzWZaWFhYW1tDBTqdDlvu6elJXMjn4uISFBREtA+NwCpm
vHkQ3ivjJomJiRDGoJuQoREl8fYSrl8XoLWZ+/Iqp7Waflu0eL+nzVxi+t67
AatepG3eGLz+vWALi389h4QcypOvQuUZ9vbm0mgsGi3I0ZHt6MhxdOTK0v0M
lDs58WRz7ycq1ffu3TZUnomg8igJGUQDISHz1TFg/JuXl0c8w5BKDVi3jrt9
e+yHH0Zv3cp//32hlhb7/fcF27dHbdnC3749BjI7dsRt3x69YYPw2jWXcU2p
8ucR5QkICHB3dweRhAyVSuVyuVlZWXMqTaC90dHRqlQ/+HPASiFTUVEBuwku
AO4A09bW1rS0NNjrkJAQsBsbG5vg4ODS0tKEhAQoBNcwNDTk8/l2dnYmJibg
PmZ/QKFQDAwMwLCJ9vv6+ths9ow3T8m7huFIwt4p04K6o9Zx7FjlsbLi/b//
V7l4cfuSJS1PP13x9NO1Tz1V8vTT1YsXtzz1VMXixW2LFzcvWdK+ePHdv/61
4fRp/3FNofJMDirPOFB5lATjWEQhs9UxiLMz/f39oBi1MiADH2v/APItLS3y
WXfu3HF1dQWREQhCKBTPjRvZH34Yvnatxdtva7/22tnXX7+4Zo3Ze+9R33lH
d+1aioaG4a5dsTt2RGzeHKqt7Tpx7fDtjoiISElJUf2ZrOkiEonATcRicWZm
JkhobGwsDNKzs7PndKUqNhS5m/T09DQ1NY2Ojra1tcEfnZg7PDwMVgJ/qYaG
hurqashnZGTAFDqGh4cHuE9zc3NXVxdMoaSysrKqqgp6i5OTEzgvcdFab28v
h8OZ8eaBoynzvHpYPCoqapKnFS14SBXHKqE8fGPjgP/939KlS+ufeir4iSdc
Fi0yf/xxylNPBT79tOiJJxhPPcV98kmfZcvali5t+N//rT53bnwcK0XleRio
PGNB5VESjGMRhSjfMUAc0tPTYTALwgiikZOTEysDMvAx9g/a29tv3bpF5PPy
8goLC+l0OkhrUFCAsbHzpk3c999naWoaffxxwoYNzhs2OGlp+bz3Hg3yMIWY
dvI4lgBGzfKfR4gve2XlHRYrNDg47KGJxQpLTExR8lBMBW9vb5BH0E8vLy8Q
T6nstewquHOEMBRC5OcauZsoBHoCmCkchOLi4sTERD8/P4grKioqsrKyoD9A
94C+kSkDMvKlOjo65C/9VNJN6urqlHET2Hgej4dn9+a9ESWVh8UK0NX1WLSo
fMmSgief9F22rHvx4tjFi6OfeSZz8eKIxYvjnn46AmLaZcvuThLHEihUnoAA
YWBg+FRSYmKqkodiKqDyoPKoOxjHIgpRvmPAaBdkfLpfz4GBgezsbOKGVgeH
wPfe427fHr12rY2GhoWmpvWrr17S1KRA5sUXj61bR3/jjWu7diV++GHMxo3C
a9ceGMcCMJqOiYkJDQ3dt29fb2+Pvz9/9WqLLVvctLSYWloMSFu2uMs+MmSJ
KU/r17v+8IOJUgdiaoAqwr6DHoLVwu7Dcbt7965qXmcJBweOzJ07d+Z6RbAW
WNeD5jY3N1taWrq7u1+/fp1CoYSHh9vZ2TGZTJjq6OiAufz666+BgYHW1tYl
JYpfGQmNQ/Qy481T5sygFO+2IE0cq7zyUCghf/1r5eLFrU8+Gfr44+xFi/j/
/d+2ixbxFi0K+a//0nviidj/+R/60qX3nnnm7n/9V8OZMw+MY6UTlMfXV7B0
qfeqVRGrVgn/SOGyJP8oItLy5cJDh2yVOhBTA5UHlUfdwTgWUYiSHaO/vx+G
t0pug4cHa+dO0717bTdt0t62TXfvXquPPjLYvdtszx6Ljz66uXu3+YcfGmza
pLtnD2XXLktz88niWKnsPOMHH3zw2GOPXb9+lceL2rrV49NPhTt3+mhoXNDU
vLRxo+n27QwNjUuQtm9nfvKJ8JNPBJB27Qo5dcpeyR0hPyMjI4mJiZWVlXO6
lrS0tAcZgVT2q4i5uXlqaiqYTkBAQHR0NIvFgilEF7AgeA2DwcjMzPT19X2Q
yRYWFs7srmHY/fLycnt7e2UenoNuQoY4dlaUh8Hgvfmm55o1QStX0l5/nbZm
ja+GhpOmpoemprfsOQCeb71Ff+EFJw0N/7fe8r158yHP0xurPBxOzEsvRa5Z
k/fWWzHPPWf4/PPGL73k+sYbguefN4L0xhthmpq5GhrZkF5//dbRowwld4T8
oPKg8igPxrGIQpTsGDC0V+b+TYLR0ZGBge7+/m59fe3ExNjh4V7IDwzc6+vr
IlJeXtbVq5daWuohPzT0kOdpd3d3i8ViPT29EyeOGxvbbNvmBWHqnj3cNWsu
r1un9+abxyGCXb/+pqbmrx9/HLx3b+jevSGQdu7knTr1kLc6LgxAoufaUOBP
wGazH/TDSGtr60PfkJ6bm/ugxSFaAOuZ2aMpIfhxcnKCxb29vWewOEFsbCzs
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
+IhQKISpn58fNGhra+vv7y8SiaACGA3hR2BSYCuwrvnafQRBpstcxLGoPAiC
TA7GsYhCDh06NK6kq6sLpi0tLfOxOQiCkJ2JojErjaDyIAgyCbOiPMjCY8WK
FQfGcPDgQegqkIEp5A8gCIL8GRANVB4EQVTMrCgPgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiALg0WLFn300UcHEARBpsaKFStQeRAEUTGzojzIwgOsZL43
AUEQdeLQoUPKN4LKgyDItJgV5UEWHl9//fV8bwKCIOrEgQMHlG8ElQdBkGkx
K8qDLDywYyAIMi1mRTRQeRAEmRYoGohCsGMgCDItMI5FEET1oGggCsGOgSDI
tMA4FkEQ1YOigSgEOwaCINMC41gEQVQPigaiEOwYCIJMC4xjEQRRPSgaiEKw
YyAIMi0wjkUQRPWgaCAKwY6BIMi0wDgWQRDVg6KBKAQ7BoIg0wLjWARBVA+K
BqIQ7BgIgkwLjGMRBFE9KBqIQrBjIAgyLTCORRBE9aBoIArBjoEgyLTAOBZB
ENWDooEoZIodIz4+no1MAR6PV1tbO9d/NQSZR1QZx6LyTBFUHmTBg3EsopCp
dIzBwcHdu3fT6XRn5GEcP37cwcFBBX84BJkvVBbHovJMHVQeZMGDcSyikKl0
jL6+vp9//lkFG7MACA8Pp9Fo870VCDKHqCyOReWZOqg8yIIH41hEIVN0k2PH
jo2MjEA+LS0tIiKip6eHmDU6OpqVlRUXFxcbGxsVFRUnA8pzc3OLiorkLSQl
JcFS9fX1YrE4MjKyrKyspqYG6icmJoL8wrIwVyQSNTQ0CIVCNptdV1dXUlIS
ExPT3NwsEAhSUlIGBweJplpbW2HB27dvQ1P37t3LzMyETEFBASzS29sLi0BN
yDc1NcFKoX55eTm0DxUgD3OhHKawFNFaZ2cnj8eDzRgeHoZNqqyshLXDlkRH
R3d3d8OCISEh0ALUhx2HPerq6oJVQwZmyQ/CWPh8ProJsrBRZRyLyoPKgyAE
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
YxGFkKFjNDQ00H3o7hz3MzpnrJhWHlwPH4GPt8DbK8QLkifP08HH4ZTOKWYw
05Pr6RHoMdA/QCw4MjKSm5sLnpKeno6egiCqQd3jWDmoPAiiRpBBNBASQpKO
MTIw0tfdd1P3ZnJ88lDv0LhUkFOgfVm7vbl9sHdQOjxh2T88JS0tbZynjEql
fVNOExpGEEQBCyaOlc6l8oyMSIdHp5BGpKOjqttfBFFfSCIaCNkgQ8coKSm5
4XqDKqDqeepZsC3sw+ypQioke4E95CFZca10PXRtQ2wdBA6GdMN73QruGh4d
HQVP4XK5qampAwO//2xyO7U87NOT4v0n4vafSPjHz7L0S/w/foFM4j9+Eu8/
Hr//eJxsbszeY5H2PNXuN4KoJQsmjp075cnPK7cxtKOZOcgSdWxy/Ff+/lw7
I1t+cKRq9xtB1BIyiAZCQuaxYwwO/v6WHHAB5m1mkjQpWZocMRgRMRQRPhAe
0hESL42PHIqMlkZDoVgqTpAmQB37CPvOu52TNJufn8/n89PT04eGhgrEBcWP
L2l6+on6xU9nPvcWpLz/eyX//166teL15JVrKpf+vWTZczCrcfFTjf/fX+Mu
WKhkvxFEvVH3OFYFypN7q0T/5Gmz8+fMzp+/ee43SEbnfoVkeO5Xg7NXTM5f
MD53EWZBBaNTJ71d/FSy3wii3mAciyhkHjvG6dOnjxw5kpSUlJ2dzchhSKQS
TgPHTGh2xe3KabvTBmwDmzgbe4m9XqAeJYZixDOKG40DQ7EWWBfeLqx7ME1N
TTU1NZGRkUx3Js3AqeRvKxuXPpv/wush7+xNeHUzd/W+0Lf3hL+502/twag3
tvNWf1q5/Pm6v/2t7skn4361nq9DgSBqhLrHsXOtPG5uTHtbF5Pzv1peumh6
8fKN83o3L2jrnb+hf17X4LyOznkDgws6UGh26TeLS5dMzp71ZQTM16FAEDUC
41hEIarpGGAZ7AmsXr36scceW79+PYPB8CzwTJGm2MTbBNYExvbFmovMo4ej
TQQmgi6BRbhF5EAklMSOxiZKE804ZnwuP+bBxMXFxcfHBwUFXb1+9dpP18uX
r6r/27Kav/9f0isbIt7cwdL8HFLiK5sCNb+sWP5C5Jsfli9fiXEsgkwdNYpj
50d5rl29fEnP/NIVCFMhGV68DoErxLGQDC9c1z2nb37xVyjBOBZBpgXGsYhC
5rFjuLq6gqf09/fn5+czbzNTpamCdoFFpIVThpOOv45xqLFjuqNOgM51n+tX
PK7c5N6USCXJ0mRqFLWnq2eSZtvb2wlP6ejsKIwvKnliScvTj5f8/QXhax9K
XlwXv2p98sq1Ua++n7xqXftT/yN6bVvZshVNi59s/O//irtgqbJ9RxD1RY3i
WIXMufJ0dNzOKdM/edr8wjmT85f0zmobnLsK6ea5K/rnrt88f9Xiwlm9s9dh
FlQwPn3KB68rQJApgHEsohAydIzi4mI9hh5VSDUKNDLwNqDwKebB5jc9b9qG
2ZoEmJj4m+h76l+mX4aPDiIHAyeDe12K3w7Z2NgoFArDw8MbGhqIktzkUuHO
H8R7joh3H0nY/T2keFmK2fFNxLaD8Xt/TNh9GGaJ9xyN/fDbCEqwCncaQdQV
dY9j5cyd8uTllFnesLIzsrH/PVkTGcoNC3MdE6qJLVECFaz1LTmBIhXuNIKo
K2QQDYSEkKRjDPYO3uu4Z6BjIBFL+rv7++/1D/QMEBlI+Tn51y9fb21o7evu
Gx5Q8HwsuY9AZmz5yKi0Z0R6b3R8KqisM7GhNXT09kr/VTg4oqq9RRB1ZsHE
sdI5U57R0dHBIQWptKzSimJ7t61jeEQqLxwexgdvIcjDIYloIGSDDB2jqamJ
6c/05nifvHLSwsnCm+c9Ltm72/9y6Re3IDcfno9vsO/gwKB82YaGhrCwsIk+
MjkdHe18Pi8hIZ54rQ+CIFNnwcSx86I8PB4qD4LMBDKIBkJCyNAxcnJybCW2
oh7R/efeDIWLBkWQhANCYf/9BPnwwfDo0WhBj0B0T2TKNu1su//0m/r6epEM
MKPprnFkZITL5fb19UVHR7e1tc3BPiHIgmXBxLGoPAiiRpBBNBASMo8dw9vb
WygUDg0NFRUVuWa7JkoTo/qjKDEU/WB9HX8d3QBdr2IvWioNMlbRVo6pjsSD
HKkR1JLCkoiICPCR5ubmma16eHg4OPj+1bC9vb1oKAgyLdQ9jkXlQRB1BONY
RCGq6Rh5eXniCaxbt+6xxx7bvHkz2IpHvkeKNMUhxQEchFXJ0mfp8+7yjPnG
/nf8bwTdiOiOuMm+GTMSA45jwjJhB7Fn8EvIWEZGRng8HvHyHTQUBJkWahTH
ovIgyIIB41hEIarpGM3NzVUTOHz48MGDB0HJkyRJ7rfdU6WpnoWetBSaT7GP
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
TU2zuCWIulBeXp6fnz8wMDDfGzJvLJg4FpUHUSNQecggGggJmZWO8aAHyEzC
0NCQXI39Q/x53bw4aVyCNCFGGhMxFBEvjYdM1GiU/CPMipXGho+GuwS7KL/B
csAmJBIJYSV37txRWEfuJoODgzwej7izGKYikaizs3MWNwZRCxoaGqCrPMpX
KpInjkXlQR4dUHkwjkUUMoOOUVFRkZaWBgoMJtLX10fcqjAoQ6rIWaBmd3d3
15+B7+NLL720b9++yMhIcJOQrhBwk0RpoiHP8KLz/dcy2optr3pcveRy6SL9
IiOXAYYCbgLO4hjgODt7LqOnp4fP58PuPMhKpGPcBBhrOi0tLTExMY+yqjya
xMbGstls6NLzvSHzxnzFsag8RB6V59EElQfjWEQhM+gYQqHQ0NAQtNTMzIzL
5VKp1MDAQAaDoaOjQ6fTIePn5zfWU/r7+8PDwwV/Bur8x3/8xxNPPKF9XdvF
1yW0OxTcRCKV2MTZnKOdO2N3xjnLOWEwgSqhHjU46pzpDEYDbhI1HKVroxvK
Dy0pKZmV3Qc3NDExqaurm6TOWDfp6OgICwuTz2psbAQ3nJUtQdQFvNtivuJY
VB75LFSeRxBUHoxjEYVMt2MMDAw4OjoGBQWxWCxbW1tnZ2cwFMhYWFgwmUxP
T093d3f4CF4zeTuDg4MhISHECT6WkBXWFwZ+kSZNMxGYGPIM9Vn6NmIbejrd
PNxcL1DPIcVBPCqGCtHSaI9QD/giSyQSWC/xAwXxIPEZ7PvIyEhERISXl9fk
1ca6yejoKLhJW1ubfG5ubm5OTs4M1j51WltbYU97e3sn3gmCqB50k3mJY1F5
UHkecVB5MI5FFDLdjjE8PFxXV9fV1VVbWwuZJhkFBQU0Gg3kvaOjo7GxsaGh
ob+/f+ptBoUEUeOozFSmfay9Gdfspt9NeiLdLtKOEkaxjbC1j7K3ElhZiawY
qQx6Mt3V35VYqru7G3Q+NjZ29+7dVCp1WnshlVlJYmJidXU1mNrkb0hJSEio
rKyUfywuLh739BvYBrndzDp9fX1g3yYmJhQKBYxv3A84/X39TQ1NjfWND01N
9U3dXY/uCalZBHodvuVc9Y2g8qDyPOKg8mAciyhktjpGW1sb6N7Mls26leXi
5uLMdD703SF9I303LzeGO4PhwWB6MGEKyczK7KtDX9HoNFc31/iE+LHLBgYG
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
xQwGg8SCq6vrFP4NhcAVePi6x2TN9HT8+HHgf2z10aNHNjY2oaGh2LzziYmJ
UEgqlQoykZOTk5aWBjLh5eXl5ubm4eEB8ZDq4uIC6gMiQqPR7OzsQJ4gtaGh
4bWHRn4sV+CEeVj/x5LFxFLExVPnz4fms5aoaKiQkJWQkI2wMHHOHN2FC+ni
4sliYknCwon79tlgeyHmwT8Q8+CHNBBwBfxUDJyrSX9/P5lM5r0tXFxcZmtL
trcPYxnV3j6KtYxgWThrlYKl2tqGRUTED9l9cHAQSAC4IpSF1NTUp0+fTvQ5
4Qij/O/HI+DWdHV1TUhhMPSwMDyer70t8vLygNLT09Oxl2PgUcCBuA53AzIx
Y8aMX3/9FVuFCtPc3Dy8VPBYjSR8ubm5fn5+9fX12GlWVFRAleOlkMiP5Qr8
MI+dXZCDQwiYo2OYo2MEaxnu6EhlWYSDQyiWam8fEhkZN2R3xDxvCsQ8bxfz
IEw/4Kdi4FxNAOHh4UN+cecr4BnH5kmEdm5+fj4cHUgMqKympqa9vV1PTw8a
wpNWGL6irq4OTgduHLTTgUjH0B+2t7cXWvfYdysQ/Y6OjnEWCYTJ2dmZQCC4
urrCleesUXxVk4KCAngECgsLnVmA02lsbLx8+fLjx0MH/2xtbd29e7eSkhLb
w/H394eygdfx4MEDKpUKxc7Ozi4vL09OToYY0CYIQ6CqqgoeqCwWioqKQL/g
ssfExNxngZdCIj+WKxDzvHVAzMPGP4d5EKYf8FMx8K8m8IQCsfMj55EQGhrK
udrd3Q2ckJCQYGJiAi1iGRmZwoJCF18X+yB7u0A7Lhb0V9g+0N7U3TS/IJ/r
gRoanhw+bHPwoOfBg+4sg4DXq/Df7MABz5Mn7bq6uNN1cmqyhbcFHItrGYaY
V6AXtheIo5eXF1Cfubk5UOLg4IC5udfhwy6//fZacz140C4hIQ0qT1JSUnR0
tIeHB5FILC0tZb4cMr390iWjs2etzp61fJ3BNgZNTX/99AUUDbklJiY6OjqC
oHCOmjjSaOTV1dW//mp29KjL0aPOo9uRIy5Xrtj293N55QJsT6FQMjMzPT09
QQ6srKyA5+3t7d3c3IaLLJTByckJq+3ge1hbW1taWoI6WFhYgLDCXmFhYXA1
HBwcdHV1TU1NQZ7u3bsHFxkiIRU2g4oEUgJ7xcbGQjwcmuttHQLkx3IFYp6x
Mc/RoxZHjrgeOUJgGQSIr8J/M3jYz5yx5j/zeB84QDx8+LXm9ssv9iMxT2dn
28mT1r/+SuSBwYjHjlmOn3n++MPw1CnbU6dsRjeg7hs3rPr6uAwj8M9hHoTp
B/xUDPyrCdA4tCj5kfNwAJsdPXp09erV+vr6w1N9fHz2798PG1iZW5kGmsYM
xNCZdE6LZkbHMGNoA7SX4cFoWI1jxrmWucYl/u0zIrvnaUVF6fz5AfPm1cyf
Xy4qWiEikjF3btz8+Q9FRSthVVS0CuIxExGpXbLEo7W1np3JwMAAO5/g8GDf
Bl84NLsYUAb2KgSgMFiYxqRZ+VtxZgLNeSC0pqYmWP3hBwcJiewlS3JZlrNk
SdbixQ+WLMlmhR+8in9p8+fTPDz+4kDgRqB6qEsQbmp6snWrziefBH/yCemV
+e/c6YeFP/00gB3/6afBmpq6lZVc+mgD02ZkZHAyeXp6OggNu46xzx3UUFra
U14+S14+g2WZCgr3WYF0VvgBLLEkObksNTWb7u6/fdDE8oHTh2oG3M5gMOrr
68F7gWwhAAdlT24OgeEfQx89egRaADvC9vAIgDqDDIH/A4JoY2MDFQZSQRlB
rIODg2EzX19fiIdrBboDkTU1Nd7e3rz8osZEfuwIQMwzBuYpLy9dvJgoK5sn
K/tAVjZLRiZGWjpMVva+rGwOrMrJ5bDiX9rSpXmKig78Zp59+5xERIokJYtZ
BoECCYl8SclCCEtIFEhKlrxKKhYQiHN3p7Lz4WSe5ubH8vLOMjJFixfnsE1G
BkgslxXO5YgvkpFxr6p6OPxSvxHzKCtbbdoUpalJZVn4pk0RENi4kcIKR8IS
S9LQoG3fbvj8+dAxspj/JOZBmH7AT8XAv5oUFxfDQ82PnIcD6OvGjRszZsyA
xuzwVCCKzz//HFrBrgTXOw53ztieMY42ZrxgJDATonuizePNr7pdtU2zPW19
2ohmdM7hnHagtlWi1TGTYxGREd0cOHbsmIaGhru7e07OAxmZECmpWmnpikWL
Hs2b5ygkpLNwYZikZK6UVJG4eKK0dDkkgUlK1i1f7vXkSTU7E6DBtWvX7tu3
DzgqOCI4oCkglhnLYDJAv7yrvKFslkmW8cz4uME4rUAtE7oJFBJSQVCs/a3Z
mUCjHnafP3/+pUuXSkuLDh/2nDv35uLF3kuXhixYcFlMTEdCwgCW0tIOkpKW
rPiwpUtDxcV1hYV13dxC2fkA81+4cEFVVRVIsqSkcPduwy++CP3iiyCWBa9a
9YeKyqlduzy3brXU1DTYuzcES9q7NxTovaSkqPvvgIqUkpICFY8zEhgeOL+r
qwtb/f7777dt20Yi+aekpMrL+yor5ygr31dRyV6+nLpsmffKlUni4heXLLFf
utRh+XKKikoWpK5cmbN5s31r6xPObH/++ectW7YEBgbCdXBzc3N2dk5OTu7t
7YXnAtMy9pYdHR1r1qyB44LicM4fCqUa8zfHioqK/Hzub8yGA/mxXIGYZ2zM
o6joraRUoKSUvXJlobS0uZjYtaVLfZYvT1JUhAZghJJSFiSBKSoWrFnjzG/m
OXjQe84cLUlJkrR0uIjINVFRvQULTObP1xMXd1m40JYVHyktHSEqaiggYEgk
hnFlnrKy/NWr3RUUipcvz2NZ/sKFWmJid+Xlk5csCZaR8V6xovBVUrGCgldp
aeGYmQdcwdTUVDU1+x07ordvj9yxg7ZxoweUYutWspzc76tXG6xZY7hxozvE
Q+q2bfTdu01aWhr+ycyDMP2An4qBfzUpLCzMzMzkR85c0dzcrKyszPkeBvtz
HophZmYGQrNgwQJvT28TP5PjFseve12/7nn9Lvnudxe/M4wydM1z1Q3TPW52
/Lb/7csul695XAtuDD6oc1BLWyuIA+rq6pDP5s2bPDxcly6lsP1YUVHSnDkn
Fy4MFxS8ICR0A0xaulRauhJSpaQeLVni4uHhws7Ez8/vgw8+eOedd3779TdH
d8eg5iBMTWAZ0hLyq+6v+lR9EDUo3u/Gv8f0x0ASlnrD8gZnYeAWQ2GEhYXN
zAx/+cVNVNRWTOyOmJi2lJQN+Kvgx4ITu3DhTUXFkiVLAsCkpCwVFNJFRLTO
n9dmZxIWFgY6C/kA37q7u37+uQnbj/3yyzBl5ROrV59Zv/6aisqZZcu+/+QT
4t69ZCxp61Y9Bwe7oGGgUCjBwcGcMbq6uiD0Pj4+2KqioiIc7tNPP3V1JSoq
BrzyY/MXL7ZesOD3VatSxcTOLV5suXSpk4JCIPi3kLpqVd7ataZ+fp6c2cK9
xvI5d+4c3GWQhmvXrmFJOTk51dXVWJhMJjc0NAgJCb377ruHDx+ur//r9RRo
EJVKffToESxLSkoSExPB64iLi/P29g4ICIiOjp6od3rIj+UKxDxjYB54SFet
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
+/YLH3zw361bz33yyY0tW3754gvV7dv/OHhQf9OmswcOGN+5Y9pzXVSeFwZG
0P/+NwyNLWbOpM2caa2goKWgoDlrlitMp01TnTHDbOZMS1i0cGHStGka8+Yx
B6s8VD+9sC7f4C42X8Tli0B2OGEiP8iEPclwgrq8xYkd2uVrlWo0EspTW1v5
3nuaixd7z59vPm+e6cKFju++azh/vuWiRe4LFtDnzLk7e7bavHkmixd7Ll7M
WrJEq7h4QA9rReUhg2ggJIQMHYPwsRs2JIJf3bAhafFiwzlzLi9fbgsD1SVL
TN57z3fxYqONG9MWLLizdKl/Xx8Lg3FnZ2d7e3tra+vs7GwIKzKIJhC5qqur
+5aDLMTFxfn7+zc1NY30PgyRtrbmI0eou3Y5fPQRJKfdu20gffSRPZHZvdtK
nLeDpbt323/8sWFR0f3ntllYWDh16tRXXnnly31fmvBMIkWRgcJANZaaBkfD
ItFCi6elydGkJdAoIZQoUVS4KDxMFBYhirDJtBmJaAJ9Izs7Kz09LSMjE1J6
ekZubl50dAx4j7y8/JycvMzMbHH5E0C9B/hgxpG4a/jx48dOTk51dXUMBoNC
obi6uubk5Dg4OLDZ7GHcynAxznzsiRPOO3b8cfKky65df/773yc//1xl3z6N
3buvHjpktGvXX6dPu4Gn3b+f2tfHovK8GKA8J07o7dljsW8fJMu9e8327jXd
t49GZPbsoYrz5rB0717IaI1d5QFdESdQnvweypOfkZEtLk9D5RkUZBANhISQ
oWPo67vNnx/83ntxs2fffPdd3enT/5o9WwNGr+JLiYyWLvWZPfvu8uWMOXO0
588PunTJum8LnZ2dbm5uXl5e7e3tsvlWJDo6mngCjFQePHjg5+fX64EwpKRL
JGofWHqitHDIMHIH4QX5laq9ERERISEhMK7X1tBWc1GDaBIqClXzUlP1VL1q
dzWoMQimqkxVv3q/uz53bTJsIJo8eX1PhvVIRJO+wJ4HBgaYmpokJCSUlBS/
WCMjFE0gxpWWlkI0gVBiZmYWFRVlYWFhZGRUUVExjBsaFsaNjzU1td+zx/jI
EfsNG/67Zcvv779/8sMPz+3adfPDD3/btu3yvn0UmAUftWnTb1BNSYnatwVU
nhcFlKdjYOnJl8+oPCJUHnKIBkJCyNAxfHyCT50w/89pqy2b/jx4QOu/39P/
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
8LFKx47ZHztm+e23/9m48ccPP7wExnXbtjMffnh5166zmzYdfu+9ax9/bPfd
d/bffaf6+ecJI/BuzYrSCqNQo0hRJF/E92ny0Q3RdS5yNok1UfFSgbxvky+U
h4nCIEEd02jTe/n3BtIsRpNx42NRecjDcCmPUNj06aeGGzdGbdwYPG/e1QUL
bi1dqrd4scaCBTeXLqXA7DvvnF2+3PjDDyM3bRKsXGkTH//iV+Y/C1SeEYIM
ooGQEDJ0jJSUFLo13ZJuefTYUVU1VWtbaxt7GztHuycZOxtI2nra3xz9xtTc
FKoJBAJYBeIFDNL7NlVbWwtCLZuLvqKiwmprX/wJe4mJieR5Nk59fX18fDyH
w4EQGRgYWFpaOsQfHIWdnRrXrmmeO6fx66/q586pizNqv/xCZJTPnr146pTW
b79BXvPXX2+cOZOXmztcxyKhvq5ey1LL1MvU2MvYhGVC49DMvM3Mfc3p/nTI
QwmUEwnqaFhoPKh88PxG8a7hceRjx6jyREeHPnxY/sKrj2/l6erq+OMP/RMn
TE+eND5xgnrihNHJkyYnThhCHjLHj+t8882NU6fMIH/ypOm332rk5uYN17FI
QOUZIcggGggJIUPHcPJyssqwci1yZZQxPCs9PSo8PB94MsoZrsWu7mXubqVu
HpUebiVuUMGx0JFCp2hpai1YsGDt2rVlZWXlPYD44uHh8fDhw2Hfw9jYpLNn
6efOOZ0753junMu5c86Qvv5a/9QpCyIvTk+W/vyzk7Gx+0DabG9vh71VUlLi
crkw0B7Ib3wQJfn8SD+/4IEkDieQeKxlPztQUlISGRnp6ekJcQRielVVFbEo
NTXVxcWl120UjY2NklsMQEsh6Dx/h8Wpb2HPpSMb+LtF3cLuXqmspKxL2NWr
UDTg32mzs7MTEhKI+zteTsaNjx0TynPmjO1PP7lA+vlnN3FyPXTI8Lvv6JAR
Jzdi6Y8/ulCpjIF8nl5IebpDQ6O8vfk+Ps9P3t4h9fWjrDxPPvnS0+O/Lx0x
+UHlGQHIIBoICRmtjiEUCkHHiKElg8vwfeQrEAmYVUyqgGqZbEkJodhl2wV3
BUN88a7zpiXQiNevBIuCzVzN1O6ovfvuuytWrODz+eE9AA3s++bxoSAQCAgr
6Ooa8MYb4YqKBYqK+dOmRU+bFjNtWuL06SkKCrEKCjBNghIFhYzp0/Pl5e8d
PEjvXx6bm5uJTEVFRXp6OhwFqLrUe28JWltbie95hMK2zz67uXmz9datlpC2
baNv3Wq1bZs1pO3bbcTJDqbiRdZr1ihL/cmsrq4OxBDCB5vNDgkJKSoq6vt+
nMTERDh2Ho/HZDKdnJzMzMzgn0WlUg0NDSMiIqytrWFFcr64cCAwGIyhPImo
tra2srKS5DfIjChj2seOLeVxcQmYODFOTq5cTq70rbeS3norZdKkTHn5nEmT
UidNyp40KUtcck9OruzVV8v277cT9euKXlh5ursfrVxJ++c/M197LVmc0l57
LeW119Jfey3jtdegMPP117PFGViU/sorjLg4KQ+zQuVB5Rki6GMRqcigY8Dn
rrCw8N7fAUGbNGkSBAUDfQMHpgNEE24zV5OjaZtme9v9NvEubEO+4W3GbW2e
toqHinOBM0STgM4AfTv98vJyCBygCSDCpT0oLi4uKCi4N0zk5OTMmTNnxowZ
Kiq3raw8FBVj5s0rmj+/ZMoUNQUFg6lT1adPt1dUtFBQMJw2TVdBwfzddzPm
zbs/c+b9I0fshMIO4bM5evTooUOHQKthh0GfXV1d4VggDj6rPp1O37RpE4h5
eXnR4cP6e/bw9u3j7N/P/fhjh717fXbutNixw2zzZt3Nm7U3bFDaskUPFu3f
z9u+3TQpKZn4F0AjcGYg4Hp4eHh7eycnJ0t9RbuEzMxM4m2b+vr6mpqasCJE
ENhhKysr4oXyV69ehZL+f0WFTURHRwcMKxDjej5B6MV4sdtkJOCve2PFx44D
5bG09JSTS5kx48HMmdVyclry8iZyctpvv+06ebKNvLypvLzh5MnW06ffmzGj
cvLkyq+/dhQK20dCeSorCzdsYMrJtUyZUj91auPkydlTptTKy8fLy0fLyfHk
5PzeestZTi5gypTGKVOaJ02KSkxMIf4FqDw9QeUZIuhjEanIoGOAlMXGxkb9
HS6Xq6ioCCLp4OBg427DaeH4NvhCEOE18MzjzQ3DDe2y7agR1Ls+d+2z7E8p
n2LXsvkifvDj4Ou619VU1VgsFgQUEKuoEQOG/8RviOZPcHvqY8unTaMoKlrO
mOE8Z07czJkMRUWryZP/evfdHLC48+YVzp5dsmOHtpcX0+vZLFmyZMKECZ9/
/rmFhUW8+P4mJSUlkLhn1T9z5gzUnzdvHp1OO3LE4Isv/MC+7tvnt3Llz9u2
GW3bRl2x4gxY2d27bVav/m3nTsu9e31h6fbtJgJBVFpamp+fH5vN5vP5EFCk
vpq8L5li2traiPNA3JYLq9+/f7+5uRnCBKg67Hk/0SQuLo7D4UBErv47VT3o
VdJrad8KQF5eHgS1gbzPqB88PT2HEk3wboux4mPHvvKYmZm5P/WxD+XlqW+/
bTdlCoypU6dMYb/9tv1bb12fPr0ILO6MGRVTp1Zv3arn5eU5Espja2u6caOX
nFwT2NcpUxreeENLTo4vLx/+xht35eVjJk9OffNN/cmTE6ZMeQhL5eQEkZHR
qDx9QeUZIuhjEamMYse4d+9/N2k6s51dKl14LTzLVMs73ndM4kx+t/hdK0DL
pcTlust10wRT21zb4M5giDjMRqalp2VH+5P31MDQfqT3MD8/n5AdD4/gqVPj
5s0rhzR1qs7cufnTpztNn+6oqGivoGCqoGChoGA2d27WvHllM2eWffutU//N
Ojs7E3rY0NBgYGBAo9EC+n2wOcRiEEDx74ydX32l+8UX3H37OJ9+6rp8+Q/v
vXd+yxYKZD76yHb/ft7atX+CxQUfu38/d8sW6rlzv0JQqK+vH8ZzMhBA9sEt
SGINnMOurq6Ojo5ev4hBaOup6n1j02MxfdsPCgoqLS194d0b4nWMGE3Gio99
FmNIeRiM4DffTJsx4yEkOTn96dNLJ092f/tt98mTXeXlreTlbeTl6YqKhbBU
Xr72m29c+292CMrTvn49Q06uecqU+rffLnjjDbU33zSUkwuEzOTJ6VOmNL35
pqXYxEJqfOut8HPnfsvMzEDl6QUqzxBBH4tIhQwdIy4h1taTZudpce7aD3oW
d528rV04ts4+1o4sKxdfW0c2nWqre+biSbqbqT3TIpj/v4v8icchEq8pHGnc
3XlTp9rNnu03e7bvrFnM2bN9Zs1izZrlOWsWY/Zs79mzWeJC9uzZnOnTOUeP
Ugd++wDIqeSitefS3v7o889Vtm513bnTdf163ffeU169+saKFZfXrFFdvvzS
5s2Wy5b9vnWr7Y4dzjt2QAUtDw/PYb9ybyCA3hJqX1BQ4OPj4+fn5+bmZmZm
FhoaSlSAyNLe3k6lUplMJiHLbW1tZWVlUA6zRNCBOOLl5ZWTk0Pc4gFHIbnX
Awrjh/CcrrCwMPxWZCiMdR8rITYhzsrd2ophc/avnzXNtW1Z9vY+TnZsBxum
nb23o62XPcXa8PSF/5q7WNA9bILCgom1ZKw8b73loqgYpKgYoKDgq6jor6Dg
p6Dgo6DAFue5UKigwFNUDJSXDzx82KT/62N7Mijl6exsXL7cduLEsldfLX7l
lcCJExkTJ7r84x/0iRO9/vEPy3/9K/X//s/sX//KevXV+6++WvLPf/IYDFCe
FFSeXqDyDBEyiAZCQsjQMZydfT/92GLvHrt/r9PavdN83177/6U9dsT0k48s
1q3V2PO5zaefWOtTnCUrNjY2BgYGxsTEjPSl77ChzMyMpynz6TTz7/n/VSgp
Ke6nqZaWlqamJqFQCHJUX18/KKnv7u5ycvIyN3c3N3ej0RgWFp5PkwdMaTR3
CwsmTMVL3U1NHR8+rLt//z6Xy5Wx9Pn6+hIhsq6uztTU1NzcPDExUUlJKS0t
Dc4kBBGIL3Ae6HQ65MEPQGgwMTFxdHS0trbW0dHR19eHCjQaDfbc3t6euJDP
0tKSwWAQ7UMjsIkX3j0PD4+hRJPIyEiwMRhNyNDIEGExGMqnv1f/8afzB768
eeLk3bM/a5z9+e6T9BNM1c/+pHT6+1/3Hbjzw4+q//nB2tRMsuKoKk/GqCiP
ra2vvj4kb319joEBV5x4xFRf38fAwB+m4qU+FIoHKo9UUHmGCBlEAyEho9Ux
YPybnp5OPMPQ0NBjwYLwNWvS1q5NXr06cvXq2JUrw1avjl6zJnnVqog1a1LX
rElaty59zZqUxYvj/vzTtldTsvx6ZOi4ubnZ2tqCSELG2NiYxWIlJSWNqDSB
9gYHB8tS/eDfARuFTGFhIRwmRAGIDjCtra2Ni4uDo/bx8YFwY2Bg4OnpmZ+f
HxERAYUQNdTU1Ly9vY2MjDQ0NCD6aD2FQqGoqqpCwCbab2trYzKZL7x7Q7xr
GM4kHN1QWhjrjGkf21N5HC0sKEeOWJ85Y3XmDPXUKdPvv9f/7juT06ctf/jB
6ORJ+pkzkLE+exaWGn/3ndGdO72aQuXpH1SeXqDyDBH0sYhUhqtjEL/OtLe3
g2KUiYEMzJY9BfI1NTWSRUVFRVZWViAyHI6Pjo7T0qVh69bFL15Mmz9fc+7c
63Pn3lq0yGzZMocFC3SWLLFctMho/fq0desSli2LunLFru/W4dMdEBAQExMj
+1+yBguPx4NowufzExMTQUJDQ0NhkJ6SkjKiG5VxQJFEk5aWlqqqqsePH9fV
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
3BSYvv562ptvevb2/vi92/j4OJgSHCOIc/iciK6IZGmyWCpOkaYwGhlnvc46
i50vkC4cv3X8Gu2aRCqBLAgiqciH7aNYmfr6etAtbKO++oqqrW1lZGRpZHTH
yMhKT+/61q3OenpXIL5zp9/OndRt29y2b/c0MrJRVz8bFvaT4U2TkpKwF5W9
ve2HDpEOHMg/eDDr4MG7hw7l6Ope2bLFWVf3mpGRvYbGl7t3hx06lCvLzX/5
Zb+GhhlHGVYE9hjIrXyQLOyISGWfaOnocDZvrtu8uWrz5gp1dauNG102bfJe
v/7Oli31Ghr+2tqRW7ZM5BoY3H/11YCxsZ+cz2Dg2Nv+yspKZ2dneFSZaVTi
wcHBwMDASWNkgPp6eHi4u7unpaVZW1ufO3fOxcXF29vby8uLSqVC4W5ubqrq
zwE/Fw0EAoFALHPwc0vCv8eCPzCZzIUoeVpIJBKYM9a3Z2FhYUdHh7yFpJzR
4dEbzjfMw8ydE52vUa9dpV61irRyiHcwCTBxFbmahZm5JLpAumeq553wO9+5
fScGi5yOqqrK/ftvHjzoe/CgN4QDBzwPHiQePOgFkQMH3LHEh1m+r79u0tXV
Nm05bC7bNt7WO8ObmEGEqSPf8U7EHUeeI9Tkmt+1m4E3ielEyILgmeHpQHaY
adu//JKwebOlsbGrsbH7jh13tm8337bNdPt2i927nWF21y6CzLQ9IV1P72JI
yPRfJ7W3Nx88aLpnT8DevVRZoEAJsnKgQGsIO3cS9u71k2UF7NljVldXrcxx
mam/gvz8fF1dR0NDlqFhuKFhiI6Os74+RUfHSUfHxdCQqavrqadHggjk6uuz
X3vNdmhoxh5oh4eHFRsMPBJ4lICnHolEAnWAR60EGXDOCAQCOp3u4+OTmJgI
ceULnB38XDQQCAQCsczBzy0J/x47MDDwWEMhzBMqlZqXlxcWFjZ7o9z6+nrY
PxXlFZUy5PHy8vIf42UT8cp7lTO9kQNrqqysuHev7N698keFsurqqqlGjdHb
0wvrKi+dCGWlZbB2rA4Ta5eBZWFB8X/ik2hqasQ2BQJEKit/3DjZbMXD+AQz
9bIFlayurpRt1A9BXs7DUCHPqqq6p6Q6zuSxQ0ND2P55uK4f6imratmk1dXV
1Tx+72LTUFBQ8N1332Evh5OTk0tLSyctAH4rFouV7FBLSfBz0UAgEAjEMgc/
tyT8eyzUMCoqaoEKn0pfX5+trS1szkzSiFgSEhMT4aAs+ThrcFaQyeRNmzYd
P34cS0lLS4uPj/fz84OpUCgMCAjg8/lQWw6Hw2Qy4dQFoY2NjYXTGOpPo9Hk
TX8hLpFIYBYUHX6emZkZFBTEZrPht9OuGj8XDQQCgUAsc/BzS4L7spWVFdbU
cBI48VgA7vXzH3lKEdhqgUAAvgF17u/vx8ZZKCwsBOWAlOrq6tzcXBWuDjF/
4Bg1NzdjXXstIcPDw+fPn3/qqadOnz6NpcBZBPJpY2ODNa+Fp0Ksq1h3d3c7
Ozt4JoJpeHh4b28viCvWkSz8WYWGhnp7exMIBHBdf39/+KGZmRnkmpiYhISE
TLtq/Fw0EAgEArHMWdBbEkgaeCl4mvw/tuBm2PBD+fn5EGlqasrOzpbKOs8E
TeXxeFPHLZLiyWOjo6PnP1aUIuPj476+vlVVVQkJCSKRiE6n19TUSCQSBoNR
VlbW0tKiwmaNuKW9vb1CpdTV1S3cS2ys24pph6xdZFpbW4VCIZw2UtmJVFpa
Cn9Nd+/eLSoqgkSIw18ZPAplZGTAWQRxSCkpKYEl4eHo/v37cNbBwhB3cXEB
M8/Ly4OFISUlJSUnJwf+Emdq+IE8FoFAIBA4YUFvSXBPhBuiWCxOTU1NT0+X
yr7pjo2NTUtLi4yMjI+PT0xMBEGF22tSUhKBQCgsLITF4DY6qStL/HgsaPnU
JojzJCgoqKenh81mg8Q6ODhwudyCggLYS7D3Ojo6FrOHhMUHnl+4MlJVCtgd
i8Wa9EW/qsBJuwJ4DIRtlA/QAF460+tTDPiLwyJg+HBegaZig9O1tbVhw58p
D/JYBAKBQOCEBb0lgZSCktXU1IChhYaGgriCnoGqOTo6+vj4ODs7g7taWVmB
FWDDaGKjDtnZ2eXl5SmWgx+PBcHGXiCritHRUfBYJpMJewlMIz8/HzQe9huo
3eDgIFjKYvaQsMiAicEmNzQ0LFDhcCa0trY+etHHZKbvvBYZqIZif7Dd3d3R
0dE0Gg3kFh61XF1d4+Li4E8Mzi6oLewKe3v7ABnwlwh/a35+foGBgVgHuW5u
booD7z4S5LEIBAKBwAkLeksClxCJREVFRaBnycnJfX19IIFwJxUIBNi4mXDb
hbttRkYGTBMSEuC2GxISwufzJ91V8eOxoOU5OTkLVPhUwGPDw8MXbXWLTHl5
ORx60HUymQyz2ItoOPRwnsARhzMkMzMTTgyhUFhSUoL9pKura1KDASihsrJy
2lYEYMjwW5VXGw8e297ezuPxFFMaGxu9vb3d3d1BYmHDXVxc4KkQ/qDYbLav
ry88SIKswh/XhQsX4IzCvuq6fPky5FKpVFBceMZUfu3IYxEIBAKBE3B1S7Kz
s5v2syb8eCx4VGxs7AIVPi1gdz09PYu5xkUDHmTAuEBBTU1NQQ7hEIORUiiU
mJgYsFkCgQCH0sbGJisrCx6IWltbQ0NDIQt+5ePjA09DxcXFMAs6B3EGgwHK
Cs9KYL/y8sGHwdZUXm08tCvo7u6e1EsYnPOg/SCucMKkp6eDtXZ0dNTV1cHD
Apy0LS0tEOns7IQp7HOoPHgv1gcZJFZXV2PDTygJri4aCAQCgVjO4OiWNCa1
s7bLzprmv/ZV96rMTc0H+geUKWZBPba/vz86OnqBCp8WPp+/QP95X3Iwjx0c
HKRSqeBdNBpNLBZ7e3t7enqC1kJib2+vlZWVSCSC3Z6dnW1hYeHr63v79u3w
8HAHBwdbW9vLly97eHi4urrayzAzM5v0lnIh3mYXFRVlZGQMDCh1Ni4EIPBl
ZWWTEsFaExISrK2tQebDwsJgXw0NDWG9b8FzEDwIgNXLv00DBwbXra2thT0M
Tgu5j9X9Ao4uGggEAoFY3uDhliRMEnqEehDDiWcszliTrL2Z3pOCg7/DN2bf
wDJe4V4sLmv20h7psVlZeZ9/Tv/8c+bnn7M+/5wtC/IIFiJkuRPBxiZMKv2x
w3rMY8dV0oW9coDRTduHwy8AzGNhl4K+Njc3Y41P8vLyCgsLU1JSSktLwbtA
tyDl3r17NTU1GTIcHR2JRCL4amZmJuwcDocTFRUFB0UikYDK0ul0xZ4EFqJ1
MRhjS0vLUvW7BetlsVjyUXHlpKWlgZeC88NOAHGFvQpLwo5iMBjwF0Eikdzd
3W1sbOBBACzXWQbsHB8fn8jISFjMy8tL+ac/PFw0EAgEAoGQ4uOWFBgZyOxi
8sZ5idJEgVSQMJ4AAWZhypfyIQJTkVQEkZjRGGIYcfbSHumxYWF8NbUaNbVx
NbUeNbVaNbUmNbVu2RQLdbKsH8KRI+CxP/4DFwwWylfVOPWPBFYHIgemgYde
nlQOeGx9ff20WSMjI6CLwzJAaPl8PvgqxLu7u7OyssDWsDigaHRVVVXFxcWK
bWUXwmOXtl0B+Oq0PWaAWsfExICjgt5zuVx4NACPpdFooaGhmMeGh4e7urpC
xNbW1sLCws/PLyQk5M6dO/AIAHILWqv41djs4OGigUAgEAiEdOluSaCa586d
g3soeAgznulX4XfW46xVlJVwTAg2KxoT3Qy+CYFcQL5Ov24SZHIr9NZl6uWA
6gB/jv/sJUOZs78ri4xMlsnqmJoaQ02No6bmrqaWqaZGUVPzV1Ojqal5qakV
qalJsfC730UoeqxUpkaL5rEgsatWrXrhhRdSU1MXZ42LyUzdBQN5eXkEAiE4
ONjKysrd3T02Ntbe3h6UzMHBwdra2sfHB2bBvkDMZu8GbSE8dgm/84Lnmlm6
y+jt7e3q6pLKWnFjeg+RgYEBsH2oLcQhgjUkgGcEbOGenh6I9PX1QWTqO96Z
QB6LQCAQCJywCLekwcHBhISEmJ8CTqIm4/gXx0lBpPDW8BN3TtjG2FqwLCyj
LM+4nvnW9dtvnL/xK/YjCAgQHHgOkGIda23haREzKyYmJiwWa9YFHNXUGmSa
Wq2mlqimRpVJbLSaWpKaWqxstmMWjwVPxmxhEQAJ+d3vfqepqblo5ryYZGVl
FRUVTZtVV1fn5OQExxFs1svLC7wRbJYlg81mg+Xevn0bjA5Udpbywdbi4uJU
Xu0l9Nh79+4t/kqngjwWgUAgEDhhEW5JY2Nj3d3dXT+lurr6448/9vDwaG5u
DuWEBtYFXvC5wKhnWLAtHPgOlyiXbtBvmDHNXMQuEy9jw26ZMkwtIizMI82J
DGLXrAQEBDQ2Ns6yAI3GkbUfkMpexnJlEluqphakphasphaoplYvl1gIb7/N
nuSxoE+ThmlQ6b4aGR39Xh7GxgZ4PO7//velYuLDMKDYcFcRrP9/bNy02Rkf
Hxwbe6BcUP1nTViXp5O+u8fIzc3FPtEafAgoveKSfX19QqFw9i/gsJGtVF7t
pfLYmpqaxMTExWybPRPIYxEIBAKBE/BwSwqMCLSOsTYNMyXdJdlE2lwgXvjK
+quvrL7yEHvcDLoJ4XbI7Vsht65Sr9ol2HnQPWYvjcVizf4tOYslWLGCu2LF
3RUrUlasSF+xIk02laxYkQpTNbXkJ5/MeuqpHNkCd999lySV/qSVQk5OTkFB
gQo2exrGzp51fO89tw8+gOCOhb/8xfPYMauHKT9MP/zQ/d13LZOSpmlskJ6e
funSJTKZ7O7ujo2hNhMDA71//Svh6FH6sWP+b775Q8DisqmfQnrAm286VFWp
fngs2JNcLheEEx5nFJ812traWltbsX+FKyJfAOItLS3YP8enUl5eDso3bR9u
80csFoN+L7LHjo6ORkREKPNssgjg4aKBQCAQCIQUH7ekjvaOEhkXL1xkMpkl
xSVlMiClrLwMAo/HO3fuXF5eXmlJ6Uxjvst55HdefX29paXFpaVFsunkEBfH
dXIipKQkVVSUwez9+3WTfg52lJ+fP99tnp7RTz5xO3Ag5dVXkw8dijt0KOHw
YcErryS+8grv1VfFBw/GwhQSIfe11yQ7d4ZwuYKpRWBjT2AjOk07pu39+/fB
AKUTrzq79+wJ0tSs0NYu0dWthqCjc09bu0hHp0JHp1RXtw6mEJdlNWhoRBYX
L8hb6I6OjqKiIqgqVwGsBQh3VmZZQCKRVFVVLURtATDYnp6eaUdeWDhA9R93
9NiFAw8XDQQCgUAgpDi7JREIhEkj0mLU1NRYWVkp+c3+/PuPBUvh8RJm+oBo
gVpdyhj9xz/cDh9Oev31JCOjs9u23TYyurhjx50dO6z37PGEiKHhuc2bL+/b
53v0aOrevcF0enjTdICmstlsOzs72G9Tc01MTNauXXvixImsrJT9+93U1f3X
r7fS1AzW1AzX17+rrm6tqytZteq/Bgalq1ad1NaO2rjRy9Cwbs2afxUXL8jr
zZ8dmZmZYN0L10fxtCxak2xlwNVFA4FAIBDLGfzckkZHR+3t7e/evTs1a0nG
88rKyuLxeH19fZPSwXIXYpQoGT947NGjki1bru7YYbVjh6WR0YU33hBv22Z2
7Fj27t1O27ebGxs7Hz2atm9fiJWVI28GmEwmg8EA3ZqaBQb7zDPPfPTRRzEx
nN27v9PWzjI0rNiwwXnNmrPgsRoa/gYGZevXW6ir26xfb62pyVq58j9gtuvX
f1dcPM2hWYaIRCJ4TFjMdgUpKSmtra2LtrpHgp+LBgKBQCCWOfi5JeHNY4H6
+npQ1pKSEsXE3t7eBRsKYfTTT90PHpQcOSIxMLj46qui7dtttm613L7dYfdu
4s6dLhA3MLi0Zw/l9dezdu8OjY9PmsM6qqqqsM/eR0f79xi7rFsbtEE9YM1q
yw3q1PXrPNestlq31mXN6jsb1Cnr17mvWnll44aQtWuc1qw+VVyco+rt/Vmy
yN95NTU1TRqkbMnBz0UDgUAgEMsc/NyScOixUlmH/KmpqYovZrGhEBZmWNKx
r7+2PXbM7Xe/cz12zPp3v3M5dsz27bcJb75pJYtbv/HGrVdfPf/OOx7vvON+
5IiFQCCez8oe9HW9evT2jpdddv3Wded+p12/ddu5n7DjZdsdL1vB7O4D3jCF
2V2/9di533nzroslJcWq2s6fNYvpsXD6wbqWcAzcacHPRQOBQCAQyxxc3ZKs
rKwyMzOnpi+hx2I0NDTExcXV1tZis0wmc4EG2Boc7H/woFMWuh5Ofwz9/d39
/T3YAv39XfMcGrWjtZMQbSMcjuWPcuIGIuOHonijHP4oN34oOqafFdMfkTAc
Dem8kWjBYIx7imNxEfLYCYRCIZwAUxucLARwzpeVlS3Cih4LXF00EAgEArGc
WdBb0vDwcHJyMjZol2J6b2/v1C++k5KSUlNT6+vrp1roknusVDYAGQgMVBI2
KjY2Fuqv8lUsMh2tHZ5CT880T8soy5j+GHIB2ZprDcGvxE8sFSdJk8j55Oju
aAe+A+M+g5xHLi/Dy/fyS0tdXV15efkidIHV39+/cL0uzAfksQgEAoHACQt6
S0pPTy8qKsrNzU1MTAQJhJSysjLwTDs7u4SEBIiAEGJff8NsUFCQQCCIi4vz
9vaGSEZGBoPBwHQRDx6LATWBGjKZTGysgZ814LFEERE09Tv37676X/VM9wy9
F2rGNKMUUlKkKRKpxDzC3FnkbBdnZxtr65vnGxUZNXXMglnaCQ8Pfz842D04
2POoAMv04qF7fyWpra1dHI+Fv4L79+8v9FrmAPJYBAKBQOCEBb0l3ZVRUlJC
p9NDQ0O5XK6vr6+rq2tISAibzba1tQWhhVkqlers7EwgEG7evOng4EAikSIj
I2k0GmRh/zrHj8dKZS9mfXx8wLEXbhWLA3isd5K3bYItuOu3bt+6priG14aD
snpmePrm+pIySfbx9s6JzjYxNvYJ9n5FfowwRnRUdFZWllzhGhsb4UiB1BUW
Fk7a5yMjA598YvvGG+Q33yS9+abv1HD0KOlhIL/6qnVBwUINkaZyFqddQUND
A3jsgq5iziCPRSAQCAROWNBb0tjYWFpaGlgoqA74z9DQUF5eXkFBQXFxcVJS
EovFglyJRFJaWgpaC/55/fp1CoUCy2AvckUiEfaaDlceC1RUVISHh8fHx7e1
tS3oihaUzraJ9rFOAutboZcpRV5uEgdHkbVriv0N+gW3VIfotnDrGFPfAg8r
zm1aiY+r2KGivAIeK+DowIGDPSCVjWxlYWERHBzs5ORUXV2tWPjwcB/I6rZt
ZTt3Fmzblgphx47sbdtSHkYku3YVQ9i5s2jnzjIDA1Zmpuo79XrwoPfaNeK5
c/7nzlEfFfwvXvTs6GhXpthF+M4LTnsej4e3z7vkII9FIBAIBE7A1S0JdAj0
dWo6OJKVlZWSt/VF8NjOzs6EhITe3t64uLjMzMyf0f/EFXnwoOvgK7d37Avb
fSBo+17azpeDdrxM37GPDrM79gVu3e23a3/wjr2Bu/YH7tgbbLDVTN5fAdgs
GGxUVFRlZSXsiv7+fnd390kHDjz27bdJoKm7d2dpat7U1rbQ1SUYGBC1tEx1
dZ0MDSm7dqXt2pVqbJxrbFy4eXN4Vla2yjewra1h506vLVtytm7N2Lo1a+vW
TFnIkIX0h5EsWTxn82bS/fvVyhSbkpISHR2tWslsaGiQD3YcFBTk4+ODtcPB
J7i6aCAQCARiOYOHWxIIYV1dTXV15fXrVzmcKIhPCklJiRcvni8tLYZ4V1fn
7KUtgse2t7fHxsZicdAPDoeDjfT68+LBg/aX94VqahTr6tzT063T1rqrp3tf
V6captpa2bo6lVqa6VqaqTo65bo6tdrasSUlPzHVvr4+kUgE2z7tSMEPPbbQ
2DhPX5+or++qpWX+8ss12tp39PRcIFFL6xbI7Z49RQvnse3tjb/9LXnv3pIt
W+hbtwbp6zvo6dnp6Jhu2xa6f3/51q0h2to3Ib5vX/7evQW7d/uJxYmVSgCe
SSQSCwsLlVlYSeBB4Ne//vXRo0ddXFxYLNbY2JiHh8ekryPxAx4uGggEAoFA
SPFxS/L2pr3zztUPPjD/059uvf/+7Q8/tPjoozsffgjBAqaQ/uc/m/7xjyYw
++67JmZmTrOXtgge++DBg+joaHl/C11dXdiL2QVdqcoBj92/n7FmjdP69U4a
GpxVq77V1b0LcX396rVrzXV0stavt1279pamZtT69e46OpM9FqOnpydBRkdH
h2L68HDvW8co27eV79yRp7HRQlPDVkfbQ1eHpLnJWlfbS0fbS0uTsGmj6Y7t
d3fvqjAyiFxQj92+naWldQUM1siIvGnTN5s3++rqWurrO2tqXtTRMd+3Lw88
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
PY91Bj78aBAEQRCEjR9NkkKh+OKzL77+6uv3//D+n8/++cLXFy9+fRHLC+cv
cEts/cPJ97768vy5v3wpFArtO05NTeXl5VVUVOz0Szf4IIul+X6wOEQs6xKb
+/v7NilqdnZ2enp6aWkJIjQ5OflIkrm6uiIWZwYHa4KD1SEhWSEh2feDll1q
QkJ0WGIr8gQFpd+9O9HT06PT6XZZurKysjg5n5iYiIyMjI6OrqmpcXNza2xs
RE1CX2G2qAeRSIQ47kQgpREREcnJyXFxcX5+fkFBQcggEAhw5ImJiVwX4piY
mPT0dK58FIKPeOzDk8vlznhsaWkpbqDIYwmCIAhiz9mrJmlxcbGpqYkbPRX2
cu7cl9ev30C4ePGby5evnD//9aVLl69du45VJCLi7n4TkQsXLsJz1hS1mw9m
nSctLS0hIQF6hkh4eHhGRkZtbe2OShGsz2Aw7KZ34evAhyLS3d2N04R/wkux
HB8fN5vNOOvMzEyIbnBwMG5hOjs7S0pKkAhf9fDw0Gg0oaGhXl5e8F6f+wQG
Brq7u+NWgSt/fn5eqVQ+9uE5OV4BahJn50wJTzrksQRBEARP2K4mifu78MLC
AlxlkAURrA7eB/GxsTH7pt7e3tjYWOhNVlZWdHT0l19+5eZ27f33P/jtb9/+
zW/+6/XX33jvvfdPn/747bffOXXq1MmTv3d394DNwmP9/f3Xfzq8Ijc3t6Ki
Yvf/hv6o6PV6eKzRaKypqYG8FRYWyuXy+vr6Hf3QXVZZu8fOzs5ardZvv/12
YmICXzq3dWVlBRKLb2pkZKS/vx/x6upqLHFhiMVieO/o6Oj09DSWSOnp6enr
68PVgosEzs91l52bm1OpVI99eHBpZ2bKwO75+fmbjJP21EMeSxAEQfAE55sk
aElVVZVGo4GSQVcaGhoKWRDBauF9Jicn6+rquHhTU1Nra6tAIIDUyWSy4ODg
8+e/Rjh58qSnp9eZM59+8smZv/zl3Mcf/+nTT89i+d5777m739zEYzksFov9
wSynGd3dvVJpTmpq/kODVJpfXGx2siq2QnJyMsQM5paUlARtQwqUbBfeWeNU
ltPLncbusRuCKwEaj0pob28vLS2VSqW4o+nu7q6trcX1gMsD10YNCyL2ve7d
u2efbthJjx0aGnLGY3HwarWa+hUQBEEQxJ7jfJM0Pj4OgXxUMVhcXKyvr+de
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
QRAEQRAEQRAEQRAEsT38L2ZLT8U=
    "], {{0, 1078.}, {460., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{460., 1078.},
  PlotRange->{{0, 460.}, {0, 1078.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[310]=",
 CellID->300455873]
}, Open  ]],

Cell["\<\
We can use ListAnimate to generate a movie/animation of the results\
\>", "MathCaption",
 CellID->1695062567],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{
   RowBox[{"exampleBCellReceptorFigureTimeSet", "[", "\"\<Results\>\"", "]"}],
    ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[311]:=",
 CellID->398502467],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i58$$ = 9, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i58$$ = 1}, 
     "\"max\"" :> {$CellContext`i58$$ = 15}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i58$$], 1, ""}, 1, 15, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i58$1096135$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i58$$], {1, 15, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->0.,
                  AnimationRunning->False,
                  AnimationTimeIndex->2.9568090438842773`,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
NMV8NibZdk3lwVxuoB9SEhS5bHVuX0pavbj+WVK4FY0KH1yqzxVd/yzpEySp
g5VDigMGeiAlQZGU1DkpqelSfa6oxSrCOs9KSTvKA3AvKQmKpKTOHfzGXXT6
xSlp+bWuyvK7V7RvwTespSYl7fjGXaZ+KHIBgrtISVDkItW5g8+SekhJOzb5
9GVPbPygKalYZ/jrpHPrhxSXIbielARFLk+dqw818yOb8O20sC8iSUktqrp4
LTUpqV39kLf1oTNwhJQERa5KnduXa1JfvTvyN0RKSi2++tHNkecmUlLrSng5
VyW4gJQERa5HnZOSjiw+xXx+Pey3rm7clJSp9sSP8Z1POIVrEzQlJUGRK1Hn
dgec1Tfu3pOSojWspqyS1MHKW7g4JY24FgB2k5KgSErqXPRpyF0u2+TTa5ik
pPY1X78W3sMRBeeSkqDoyrtfTvTbQp8V7nbKAZmJRZ8Xf+Pucywh7lsLnMLV
Ck4kJUGR686gpKQjlUyv/Ncb5pqveT7oxEILrllwCikJilxxBiUlHann4Cou
GDKNVnHxtyidW2gkcwC7qB1X+O71093d/ReRkqDoVeeEJ5GSjlR1cBXRxeeh
dMqYOn1U3nU/4PRCU+Fh/LZ73RPpuq+X9IOUBEVvOBU8kpS0u6rjV8BM+Jpn
tQhiB931qakzDK0tx90LHwqcQneFnt0nUhIUuZQMSkq6pbZ8ncvpHaakz+Xf
uFuu95oV8XJ3HeFD01EZD+4cKQmKHnwGeDYp6ZbaVnWu7sT6T0mfmz5sd5Lh
AtGnpY69Il2Up3/gtVxEBiUldVhhKjGduIpT3HIDect5xvntVVIpyTGQoXNq
6CV4J1eQQUlJHVY4dfyvN4T1Xz/271qdU9wbZCKSAyBFz9TTV/BCriCDkpJu
rDOfkpqu4kS3jP1bnl45xb2ToFSkW+o9r6/8LgmKXD4GJSUdqfPgKp6Rki5b
y+0rbbTG/MOLi7XYwK7c3cG/uLszTvOkbWnteX0lJUHRw8757yEl7av2lPuc
6OLn3kHV13PdrWGF07fuuHbr+lnzH/3Rv+3h78r+vMvPbfyDP/h/evh7TG8/
ZkOu8bzukpKgaNO9Df2QknZUu+N+PlPbKa06Xv/Pkj8+P3r46zAlNV2RlHQl
Kel00Q056zxZufiJnXmkzRc3tRNSEhRJSYOSkjZVuPupR6bOU9p2vP4RU9Km
DTxCSnoMKel0qQ1ZTj8YlDZNP2Kus+lnNY/Z9V9SEhRJSYOSkuprk5I6TEmb
trFPUtKVpKTTPTIl9bZIz6QkKJKSBiUlbapQSuowJW3azH08SxpIfmBuTUmr
8f7ClFQ80W1NSasKoyfVZZnli9XraOHwbaqR0cJhyVSDU83IrzQzfVBSEhQV
T6T0SUraWmd4QT9Y4SkNO17/NHJK2rSlvZkqUtJ8vK1ef9/WFHtbSsrc8e6I
M9HX70lJn+wlPjM93AvTr9ln9TbzIlMgLLMqFs0smVZFi9U3I7PS1FqGJiVB
kZQ0KClpX807UtJU7dym1pdMZZalcHpYOFpmVT66uJSUjzDF1/lZ70xJqzE1
SUkbrXovPEelNmRK5IhlJWGZ/Ivl2qcgnoRTUs0oFl6VDBtcWU+qwnDiuKQk
KArPnAxBStpd+RDHfH0Lo4Flji3F16mJm5Y9kpI2bWxXjqSk6fePjaSkWTQl
Le9yz0pJ3zpXb+vrH6W3M8EhU+CTSArRlFETNPIBpF1KSjWjsh4pCfhIScOS
ko7U3/9hX2ze8h7yrJRULJ9Z15GUVLO9HeoqJb3BjpQULju//r5Yvd1abdTy
CLm3ZPSgnYtFC3zq4kO4bLFk+CJaW758sXBqVk0z8hWmJo5LSoKi1XmVUUhJ
Q6xlt8wNTHgvdOKzpCkWiFazMqt7m/oUk49LqWKeJS3n7n6WtFp2rnzfN/FG
6e0pCBfhlOhSYc9Pvw8a4fTolNUejL5d1bCqLVo+teqwJWF7Uu2PNju60lSP
jUtKgqLoqYD+SUn5GvpxSidkapuyKWmp8ht3U5CJVou3eJYU3erOTcdS0kxK
+soPnOmklDQlniU9NSXlTx0HKz9ez1getqVSEhQduZHjRlJSvoZ/8xd/0cPf
wfuQmqiVT0mZHLQpJVU+S9q9scvNOV7JNXanpNWCU/preC9MSZm5u1NSNDFN
B75xd2W37FZz6jhS+Sn1jOVhWyolQZGUNCgpKV/D7fnoSEqqCUfLwuempPDh
UX5BKak+KOVT0r6I9JiUlLc1Jc2DaDXlD4LfK62KPSYlFR3ckE2nqX2VHynQ
wmN2/ZeUBEVS0qCkpHwNt+ejHSlpdddxWUqKPiqKpqR8UDrrTDLKGWlfSpr3
cuqtlBS1NSW1+3tMb3eeMoqFt54qj3vMrv+SkqBIShqUlJSv4fZ8VJ+SUh/J
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
9aznkwM3cmAMSkp6g3664t6UNK99lZJWZVYTo9FmnhUtkCk/XEoKz+2pO8YO
t6XGw7a3uDmVKSaMP8ViqTA1SkoKuyvfmVM2tkx1aWg5MTOr52/cSUlLmaG3
qQwPY18PSkp6g6664prGRG9v5tPUFASW5ZRpEZSiuWYVf4oRKfp6rJS0PMNn
Lv0XNvM0D9ve4ubUBJmwTCYlrfLUuCkpVDyN5J8lTbHHQJmJ0Qoza5GSOpQZ
essCqbc8lR09KCnpDbrqirMak6knc28z25eSaqZUJqboY6z+ZXp+nlusoXI3
3VtyLjylt3c4n70pKR+L5ilbU9Ld/XFU8Rt3UxB/ootP6a/VZdYiJXUoc7R8
ErfK0Yk8jL08KCnpDbrqirMac6Se6byUlPp+XbR8tMJTeuNEqev7skBqwUsa
eLKHbW9xc46kpDANrV684VnScu6+lBR9ljTbmpKijaRbqSPtqoOae2T2Pj2T
kt6gt644pT3TtH4u8Kk+EU3ZZzrHnxxNiZ8sRacc74pzFa/p0enjXgIetr3F
zTnlWdI7U1I4t5iS5hSTST2rKfm3niV1LkhFvxw5qT3V58mEE3V7ySBPSnqD
3rriSHtS16DlKahY/1QXfyqLVaak1Cp2d0UjNSfz8NLf4YZUetj2Ftt25HdJ
mWdJ4ZfxHpOSMnNrUlLqWZKU9EjFZJ1aqn3TuFPPVw0ypKQ36K0rTmnPqpKa
z+uWBc5KSXMg+kqlpFS86m3X1MvfDDzPY7Z3379xV3xRfAg1YkrKS+WX+SCJ
fssunLWckn8rJfWvmKyj0WnoUwo17OVBSUlv0FtXDJqS6rNPqlh0vce7Aurt
+/8lhROXf1LSvX9S0kBWd8tunl/Cjh6UlPQGHXbF8SaFKWmesjUlzR/YRieG
c6PlUykpVYmUxC02BZmmf1KSlPROq4vCp8trNOeSkgYlJb1Bh11xepPma01N
zfmAc/yvvv4Odw2VBr3qSUlnkZK+pKTjRjyTsMmg1wukpJforTcapaT6wlIS
R0QfXA6xN6Wks4SPm290Yz9ISae4dyfS2u3jlH2kpJfosDfObdKm2m67lYk5
sRO43nIPDrE3oz8suuvv7s7gBFLSKYY4e7Cby/2gpKSX6LA3TmzSXYmjw15t
bdnV4t7n1696vrwreCcp6SxOHQ/m0jAoKeklOuyNDpu01QM2YYfU05MX9sZq
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
847e521RvVO2XUqqlAk+xUx0yp7anZLOWvvxSm5fxW4u/YOSkl5IzzRV073i
EoN63kH7vC2qJyVdKZN9wsdJYbEWQal+qROLXaCflsxc8QclJb2Qnmlt09Wn
5uTpBEsnVvdy8/3buMfn87ao3inbLiVVyqek8O2q2FkH5NagVL/2foZMPy2Z
veSU8jxS0gvpmdZ29HD+srXj0z840RTz+fXSP9bB+bwtqnfutktJlYop6ZOI
JKcfkMdTUnjMrCqMvl29WG1U5axMPWFLUq+vd+OqOUJKeiE909rBHg5P5uH9
DNwidf8WzhrF87ao3inbLiVVCrs0GgfCki1O/vUVho1MTY+WrIw8NbMy9dQ0
INyEK7l2D0pKeiE909pZPTylVRa73ikbbutuUdng1Nuwhpu351enbNFwW5c3
7d32pdNT0s1d+auD27LartSU6deen9I7onWTomWivRE2PrU5N75ITbze6YcT
15CSXkjPtHb6hSx/+f75+sfnRw9/LQ6tn3X+g3/w//Xw12jrbt9rm/ZdeKeU
uQn5OeUf/sP/t4e/zNZt2qJVyd/97q97+Nt9ZO7e9qUWKenv/b1/38Nf00hS
GYWapqSimoZ1npLmt1ISO0hJL6RnWrsmJS2vCLffY0tJu7fu9r12ZN/Ntx/R
xYdISZu2aFXy9nx0MCXt3vYlKalyo6Jn7+Ws5ZTorLBka1LSWaSkQUlJL6Rn
WsgHmRY1z/VPg99pFzf/9nwkJWXan597ez7al5IqS96ej1qkpK2kpKcqZrTw
SpQqnLpyLV9kZqUqKS6+bGq7jqoRNokhSEnvpHNOFz2BH+/nmkqmwe+0i1t3
ez6SkjLtz8+9PR9JSfX21SMl0b/bd6WUNCgp6Z10TgstUlLlem+/x959p13s
pfqUtOr5HlJSzdbdvtcO7rvMgsOlpPzH0WHh2/PRiSnpslNWTcfeno+OpKTK
j7YuuEy4M//qoRPsi0FJSe+kc1poFJGKFX7vtFerrr83nsvPS0WrStW/quHI
1kUXn7bknWXhTQs2TUn5rduaZer38qaDodHWzSHlKwwv8/QpEC4Y1hOtM7pg
i63bmmVWogVufJZ0jZqO3ZplwilL+cKNUlJ+A5fTU8WOK7bk8frZ8H5awiZS
0jvpnEZaXJXCm6vVKqZFkFne9NbcGK/uqFOzUhPDGk7ZulWBx6Sk6NbteOhT
s5eje61pSopu3SoQRVNSNPJMi4CTykT1dTbauh1xJvo6P/HZKSnasQdT0mri
/Pq7rotT0moDw+1NTTyu2NX19ZzetrdptItpTUp6J53TyPHrUbHOcBXTrpQU
FkgtXln/vk3Ob9rnpJT0rXD1dlPNJ6ak1da1Tkn11bbYujCtFKdEnw0V5xYf
LbXYuiMpaV+BDlPS1t8l1XTs1ogULjLFUtItz5JWG5iqs8VOLHZ1fT2nt+1t
dnQ7PZCS3knntLPvMlRTYeoyN2VTzLfwKsusJlbeikcnLt9mLsr7fLanpFkY
l74vVm/3VX7i1p2Vkr51rvbypmpbbN2+lJQvti8ltdi63Slp+eL7evXfTZWf
vnU3+nSWkhptY/15PlzqrJL1F6CPe4bDNvU5/ZCS3knntLP1GlRZW+YCN8V+
OhQNOFMiOoX31WFVmYQ1T9mx1TVbt+NZ0mqpuebwudKI37iL7ppMpK2stsXW
pRLQlAhEs/zX6u56lrQqsCMlzVYTl+lpa807tu5EpzxLWhXY8XW7Kfj90SyV
nu76xl1qqR3rOtKS+krC5s1VTUEoixZItWR3q4bzks18HinpnXROUwfPh+EV
LX+Nm7J3yPOC4eOGg8+PonfvRzY2tXUHU1Jq4qaaT0lJmX23Kc5Ed8dyR9+S
kqIFtqakc58lLStssXXHnyWFr/dVu3XrTnQwJUUL7HvcU5OGtla+o0PyG1g/
8bhiV1dWsnqxrPyzyEFh+cyssP5na7SLaU1Keied09qmHq65bcicY6d0Sgpf
hLfTPaSkfIEdKSkajqbD37hrsXWnpKT8Hm+akvIF9qWkVNLZlJJWr1ts3e6U
lJo4veZZUr7A1gdJ9d+sq6/8YEqqL9Du/vmUmlPXpunXyBMW2/Ti8drtZZqS
kl5L/zQy/aqmWE2d+bmp2+bVrNTbfCCqvPFudBWYtv//ksIHRlPMBd+4q9m6
3SmpPhc3Skk1W1eTX/KRJ1Ogpqq5khZbdzAlTUEmmmIPmx6WkoqmwVNS5TZu
ugTcZUoko08sJWWWDTcztdRTdb6jSZGSXkv/tLA6Ey7ftrsszpHnaxVboqJl
won5YuH0FgfV1OD/D7vvr9HWbc0y0V2T2t2dpKS5PWGEmaeHjY8umH+7mr6s
p8XWbY1IK8uJ0ddSUs137cK3q1mpRW5MSaOYtqekzIuwqvf08PfAu7sVbCYl
vZb+OV30NDhfl5uud+vziEZ/je5Fb89H/aSk4fZd9MdE1//1kJLa/b0zJV3w
9/Kr5OritXwbvv78egXMLLus/7JtuZ2UNCgp6bX0z+lSXdq6qx9/p317PpKS
dm/d7flISmpNSiIv+gTq87KbEClpUFLSa+mf092Ykvph62ydrbve6VtXr0VK
6scpXfRyUywZva1vHU6DkpJeS/+cLtWluhp4qtNTEtdrfZFaps535oV3bvUD
SEmvpX9OFz0NOjcCDyYlDa341MxjtVPow0FJSa+lf1pYnQmdGIFnk5LGVfnd
Qlex49wMDEpKei3904ivtQPvISUNqv465UJ2nPuBQUlJb6aL2tG3wBtIScMJ
/o2K2pS0/G3Rvlnhi7BV0dbOhaNf2EjVH625Zu2nhxopaVBS0pvponb0LfAG
UtJYwohUn5I+2aSTnxW+WGWf6OqihcOloukmU3Nq7alqj5OSBiUlvZkuakff
Am8gJQ0kGpG2pqQWL4opKWz/JxY9wnpqGr+qp75n6klJg5KS3kwXNaV7AejK
6CkptUWpplY2fllPi2u3lDQoKenNdFHNxSLVS6tPtOoXBIAbjZ6SVkstX9TU
nK8nH8r2kZIGJSW9mS76BJ2QOT+nJm6NVwBwu5qUtPo8cPV6OTE1a1VPvnD0
EhzWk2p/uN5UDanGh2s5xekVcg0p6c100acUi+YTaf0i+YkAT+J3SUN72HWq
282RkjZZJdnKRTJVZeqvrOcsUtJAdNHnpJRUWTPAw0hJw3nwtanbTZOS6p3+
UC8ToHYsdZCUNBBd9KlLSamJ89vUhxVnNhTuM73b3d3fNSlpOE89pHsesN02
rDdhLx3vt1QN+Zob7S8paSx6KT8ko3dKlaNY3zK6nu86rqQfMqSksdQfxq0P
+92VjzgSnUAqZXopc0DO05cvVnXOU1ZllnWu6llNT9WwiZQ0Fr2UiTyrWanp
0SmpiTAKB3BIn4SkpLFsOoZbH/CbIlvTlrQmJVWqee6Tv+MKI0x0yifIR8UX
0Tq3kpLGopdSUWj3rJrp0DMX9AydsyIlDWTroSslncV5o9IpKanyRSr+pF6k
Jm4iJY3l5b00BcJZ0berZTP1t2s8NOK4zdM/S1LSKHYct8VL3vJT+tRH9/ml
8pWENWSuy6tqu5K/VWAW9lK4T6PH1Y4XYZ35F6mJm0hJY9FLTelehuOgraGX
ZlLSKI6kpMzNYepONXNzm1+wuN78LW6fQUlKqldMJdGelJK2ckDW0EtN6V7G
4oitp6++pKQh7DtcK1NSZfn6W9OatdSvtwdS0iar50SZiatZyzKbpoSrSE3P
t6RIShqLXmpK9zIWR2w9ffUlJQ3hYEr6pO/zpaQaUtKgTg81UtJY9FJTupex
RG9Ootf36PRMseOfy+2+zWt042R0f0lJ/dt9rNaMnegQOyslHaynH1LSoKSk
l9NLTeleBpI6XDMpqaaG/M1MZr1naVS/0f0lJXXuSESq+TRjziz1H4PkPzwJ
K1y+DctEV9RbKumtPVSSktBR7ehbBpJJSZ9YrlmVj06MLhh90Y6U1JSU9AaZ
jzUMhBpS0qCkJHRUU7qXUVyfkvKjI/XJ8BQI1xJtbfgiXNemAWt0f6Skd5CS
DpKSBiUloaOa0r2MIp+SPkG0Sd0shdPDAFK8Z0g9dYpOX87KPK6qX6SS0f2R
kl4j+jHCjs8W3kkvDUpKQkc1pXsZxfGUlLqPStWZGR2peupDUGXJzBYVGd0f
Kaljpxyfy9GUiUipYd4uHYw1+qSkQUlJ6KimdC+jOJKSMskok5IyK53nZp4E
VTavPlhlWpJq3tZFnkdK6tNZEWn5OjWuo8Nn94cPle0Zi5Q0KCkJHdWU7mUU
xZRU+To/a2uBVAhKldyRknYPUqObbh0/ODcFn5opx4074qSkQUlJ6KimdC+j
qPnOzOrhy5wyVmVSs1J1biqTf72cmBdd5HiPwe1OOTIzlRTrz4/x1PgNK8+f
BIqVb9repnacXrhS5VXjGpdt8mUr6se+9p/eJ8x0L6MY4lidfr2DurfOIXqM
FzrlyFxVsrzNqKl/SqSeZW2r16v6wxrCqvKV9zNCd9+hcY2fe+fH50cPf5cd
J1eu6M///H/q4U9K6pDuZRRDHKtSUm/8Lqk3LcbFasopKSkzcZV3dqSk+nZe
Q0rqnJTUdEW356MjKenT05nkkXQvQ+jhQK25lzjy6PzcOnvosdtJSb25JSVV
Ft6Uko48S0q16i5SUuekpKYruj0fSUk9070M4cYDtcUTogsM1NR2pKSunP7p
QeptccxKSUtSUuekpKYruj0fSUk9070MQUraaqCmtiMl9aPFATktpGZlliq+
DV+HLzLTayo/vU926KclRElJTVeUiS2z5dvV3NTrZWEpaThTzN2NgqQWx2fq
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
0wJRUtIpjK9nc2dVr5g+UkmqWF5KWnJA7hPGdmikJiVtSjrHnyWtmrdpIEQ/
1Dp4cZSS6JyUdJzB9XhS0ibhc6LUxNSs1SV4KZy7qiRaOL9IsYUzKWl0U3Ui
hoNWsWWl+JAoU764VFgy08j8WMicWucCR7ro9nwkJZEhJR1kZL1B8TpCn04P
NVLS6KZYGIcWotHmlr/icV4zFqbgg6/o9K1ddHs+kpKioun4Ljf2g5R00L27
j2vcPk7ZR0oiNCVu9uBc0zgpaW5w/dxJSnq0nx3yu9/9dQ9/UtK4DKuXkJIG
JSURCrvOAKeFSz5lr7WpzalZ0bf1lUfrzMSWr9Xr+llS0hGTlPS3pCQo2nSV
oR9SEqHKm0A46OcR9Yd/+H/08Lf12K685O1IYWEN+eRSfJ2fJSXtJiV9SUmb
7PtwhtHZ3YOSkghlus5I50TjpqS5/a2Hw46UFC6SmSUl7SYlfUlJs+IJYVXA
9fQ97OtBSUmEil2nbznF6Clp3op2I2JrSoqWz8/KzJWSMqSkLylpln9OVD+R
57GjByUlEar/KtEFjeHBnpGS5m1pMSI2paRU4dSs6dcfK0lJm6RS0rczV2+/
U6ZApoZ8GSmpQ+H+nX59cpRa6qoGchu3TIOSkgjVd51O5ognpaR5i84dFJtS
0tZnSdOWb+IZ7CuZ/LKatQpNqWI1i0hJPYumpPmcICW9mZTUuczgvd5lm3zN
ip5nU9dduU95mGmRkubzQ5hfwuk1xaInn1QN5x7DJ9Y2tfxdUmYRKaloymac
aXsyOpKSGELqQLr40OV6mQOAHvzcO3/xF/+mh7/LjhMH5G47uk5vs8MURJUp
EX/CidHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeYYpEnNXG1
rGdJA8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNVow08WHMm
ucy3YavX9bP+0eIXScuJUlKNYkoK49LquU8+GYUlpaTOpfLRqkDqLQ9mX3dO
SmKT3b2n26n3+JQ0b+aRAVX8Ltw1f4b2yu6UFH2WtKot/7arlMSsZqQXkxSP
ZHd3TkpikyO9p+epFI0/YQ7KF+s/Jc0bu2MtUlK3alJSmICiS0lJ8GxSUuek
JDY52HtOCNTYnZJmA6WkeZNT64pOn3rSuG8GMx3+N+5WEzPFMuuSkqB/TqGd
mxIpab78RScu565KhgumKjk3JdUv7oA84pTeswvIm7anpNQio6SkecPDKdHL
6M8pPz4/evgznFdSyWXeldFv2a1mpQqsZCLS7SnJ75KgSErqXColhekmnLhM
RpkyqcQULnVwQ04vSeis3nNmIKMy8uxLSdGQ1UlK+iR+xy0lDaQYXi77k5Kg
c+6FOnckJWXyTnGRpilpPupSdxdHVvRy5/aefUHUKuN8hRlnnh6WCWdlyqTW
dUtKmnsgtCpwez6SkqKkpC8paSkznKNvw/F+XVu5UPQ2lX5Me1PSlH0qtCNt
7TtOUvcSywPP2eZEp/eeUwShKfEduev/7j0483dWt+cjKSkqelW6y439ICWt
TOlbkcys1BSe4fZxSt60PSXNdqek1eItvnG36fxDvUa9Z6ewNElJ6Zvtee7t
+UhKauQZXSolrWSyz+pWOXrT8oyjghUpqXM7UtIpz5KafuPuIyW11C4o2TV8
VX1KfpUOO+GTTUlzsdXr+llS0r2e0aVS0kq4W6dFSgrfroo946hg5d6rDEXT
E3+X9PGNu5aadqC9A59STvyUniUt56Ze52dJSTd6RpdKSSvFlPRJBKLUzQwP
ICV1rj4lTb//d78rJ16cksLt+vjXG9po3YFOGnTuxuNzmZW2pqRwkcwsKelG
z+hSKWnlSEpafkLCk9itnctEmJXUxLB8tJ58sUYpaessalzTgXYT3erh4Nya
kqLlU7OWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIOtKfo
U/SW5sSLXc3nxptSUqpwflblMybj9KDw48eUu1u6jZS0ksk7+2bxACMO7Vd5
ZErKX1MckAdd2YFOIPQjdeO6PEpPD0qZlbZ7liQl3esZXSolLWUyb3RKdNag
eZkMO7Rz+WvxxS7b5GtW9FTXd6BdRlem6g9+j6wif6qcGv8uaZKS7vOMLpWS
oOjKu19O9NtCnxXu5oA86JYOdCahHzempGWBrSkpTD2ZWZURSUpq4RldKiVB
kXubQUlJpNzYgfYdPQhT0rT4SsxZq8g/bc9EmLn86nX9rNempE62pZNmHCQl
QZGU1LnUJ5a3uGyTr1nRg93Yh1ceKlBjOvVfb6g8PU4H/u3uyuxTX/L4Vnei
k23ppBkHSUlQ5Jamc60vtZsuypdt8jUrerDb+/D2BsDs+NEYTUP5j4+kpBbC
/v/ccRvzjC6VkqBISuqclMQOPfShcwud2H0cFnNQpubcU/nL7dv8fqQ2arl1
9Zt5Xb9XaNVlFaQkKLp9nJI3SUls108f9tMS3mnr7ehZd7A/F/93f//v9/D3
pDG42pbp10dL9ZXcfj29+KoK7CMlde6F53MH5HFd9aGTDP07/bN9KakFKQm4
khuYzr3wfO6APK7DPuywSbxc0y8+SUkthClpniIlAaeTkjpXcz6fL/Q/Fv+r
wZVU+eXETs7nDsjj+uzD419hmm76sTZP0i4ZrdZyez56XkpaiZ4QijtXSvry
uyQocr/RuZrwsoo/0dQTnT79+n/i6OR87oA8rts+PHjC2ffRMTR9bJRa4+35
6CUpKZyY391bP3vMzK25dPZwVY2SkqBISupc/gwczk2lpB+Lx0yphNXJ+dwB
eVznfbi7eatPjE9qDo91cTJarToTW75Wr+tnhW+lpOXE0KpAZYSp/3xSSoJH
kpI6tzUl1QeoyTfuHq3zbqw886xucqQkilL3xtc3I59ciq8rixWD0lNHSmov
R1PS6jQiJX2kJKhw+6WEvBYpqThXSnqAIbpxayNTiQl6SEZLO1JSuEhq1taU
xOyzKyVNi88Yp+y3MqQkeJL5vEGf8qffzNxw1uRZ0puM0o2bTkHzTc4oW0dT
q7vfrkwbU1K0fGrWtPhK3pu/cReVCkfLAptSUioZLUlJ8Eh9Xl+YbU1JqygU
zkp9AiYlPcxY3VjZ2rE2ika6TUZLm1JSqnBqVhiypKRZJh/NBTalpGVQSl0x
9wUlKQk61/+15uVqwktN6ommJynpwYbrxppz0XAbxVny970d2pSS9j1LkpKi
igeJlPQlJUHRQBedd6o594YP/adAZfkezucOyFMM2o2ZZo91k8wpxt3pW1NS
Pg1Nx36XdHdn9GVfSqr8HFJKgicZ9AL0HvvOvS3+pKSxjNuNTkovN9xjo6gd
Kak+DUlJR+z47HH5Iqrzq2qUlARFo1+JHk9KYp/Ru3H09rPJM5LRUia8zFu6
er1jVjEiSUmhF15Vo6QkKHrSVemRUp9c3eKyTb5mRc/2gG58wCaQd/G55UpT
RX7Z/bep8kd27xGTlPS3pCQoeuoV6vF+W+izwn0cjSd6QGc6QT3P9R+83EJK
6paU9CUlQdHjL1VPJSVR9JjOfMyGvNkbktHSmU/xD7u7M/py9974xY39ICVB
0e3jlLx7T+Ar+UaesrHHK2H2pP486xjjSjVnD+AWUhIUuX51bur4uwGVGWrT
xh6vhNnz+vN5W/RIkhH0T0qCIteyzvWZkjY9aarcTMfhyp6nfc3c3Rl/p7f2
8HXwaDl+sFUu6PiBLykJilwyOjd1lpJOv5F2BKb87JY/+ZP/pYe/e3dQ/1Gu
voUXuGvbD1YSfd3I9b3E8ziK4A1uubBSbxonJQ1xUzeQSUoaxM/++d3v/rqH
v2v21Onj9+IDzPHMcY4ieAN3qp3rLSXNrZJ3WpOSRvGSlNR0pK+qnVeUejGX
z5yLwmWj64IdHEXwBu5v71Xs/3xKmu8Kvq+XU5azVoukaqhPScvGS0n71Oz6
2/ORlFTjwSnpygGeyjLR1JMqFs6K1tNmC3iRBxxFfpcERe5v71UMGpn8spy1
TDphDooWC2dtTUmrrWjZTw9Us+uL4WVpNXHH23tTUuVRVOy36xs2PS4lXdm9
4aqLLz7pTJSatdwcJyuOe8BRJCVBkfvbe00xqwLFiLSakplV+XprSmKHml1f
85QnfB2+KE7sJyXl789Xs645fRUb9oyUVOz8a5yekvL1wD4POIqkJCi6/Zr4
ctFb5eVOqU9JNQFKSupHza4/mJKiJfPF+klJ4akperK64AxW07D6FBNO+Qrf
Rtd7ekqKbtHFpnTYib4ovq2s8DLxcf4aF/f2NR6wXVISFD34JHaBCy4uU08p
ict8Tk1JYbGayntISXNvfNK3Ja2bV9Ow3SlpNTH6OnxxMCWFm3CvVHsyff7Z
8p26fD3tdNXJN3pkPzxgc6QkKHreuWssxcv31DIlrbJPzbMkB8xZanZ9TX6Z
pb5HF86tqTm1lrt8sinp9obVR6Sw8FQKQZX1F1PSss20pp9DT+qTB2yLlARF
Lpr3Cu+4wgJbo1BmVipepdaS+sadY+a4ml2/6VlS5cRpqGdJqwKpBW9v2PGU
lKnkSErKH2O0oLczHtM5D9gKKQmKHnPKGlSx/zP5JZV9puBpUf2TpsqUVNNy
8mp2fbuUtCko3ZKSUgVqJl7fsE1ft1uV/1Zbs2B9SpKMbqTb857RPw/YCikJ
ilxJO5ePMPO9UObXQ5nyYYH6lDQ37/o+eYnWKak+KF2ZkjaVueb0VZNnKyPM
rN2zJKf0e+n8GnqpB1ISFLmkdq4+xbT+Sx0nDqFGihFmviVOTVzelkcXidZw
V0qqtPoQ4O7m/I2aFBNNRvlnTLtT0t398V46v56+up2UBEWuqp3rPyXN7bys
T16i8kHPBX92bt5ZKSkViDalpI/BeB89X09f3U5KgiIpqXNTT2qaek23vMEk
JQ1iqvgHur/Ct5lZqSnFlPRxC3qTTLevTo/Lk+rWM21Y7aYF9x0by/pPObpG
P0RHb/9HSoIK7mwH9dtCVxU6nM4iJY2iMsJc8Le6D7+xT16o5nOk1NsjO+6y
nX5u5aMfn6O3/yMlQQUpaVDdpqSPg+ok4SfMN7q7M7o2dZmSPo+4kRtIsbdX
Qyn1+sh6m+7xcysf/eAcvf0fKQkquAXq3MU3w3lbW96oT6Ard4/LX0Tbdku3
vE2xn6dffzU2xdJNqpJlgSmdhaOLL4+N5eLRg2dVW1h5WFW4SOVRN/SROXTj
v6QkKHIN7dzPvfNP/sn/3sPfjuPE0QU9MAwvUJmSPkFc+pTCRTSPRJeNxuT8
2sP8lSmwdZG8oQ/LoRv/JSVBkfvYzg2dkuZNOLdPgK0Mw9YOpqR8JZkr9Wp6
+DZaoD4EVZas2Yp8y8cydOO/pCQokpI694CU9HGYkRb9JHz5Nv9ROfX0XlP1
KemT/Y3SskD41Ka43mixVNjJJLX6cJSpM2/oA3LoxgOV3Hh07hkpad6WU/qE
hyl+qJ6/n6Se3mtnU0r6bDyqV8mlstpPOtFEc1m0wI5nSZWGPhqHbjxQSUq6
V7H/n5SSaraXF9qRkjxa2k2nNVI8k2ee3dRcCJaFw2pTlaymL9/mX0crj4ou
UtFhYx+KQzceqORO416rS0y0QD65fH1fL6csZ0XLLydelpKWWw1f0/aUlHpL
DZ3Wwli9mhlTl9U5Vo+tDN34L79LgiIp6V5T7FPBVYFMbFnFn2jqiU5fTrw+
JX0ceCysPpeeJ+YLfB5xo3IXXXe6sbpUSjpo6MZ/SUlQ5Gb1XtHOX+6UVIQJ
p6dSUnHKLSkps/m8TWoUFAs4fo7Qe+fqrT+LAyT6ycMpK62ss7ceexspCYpe
cqcx/So1PXRByUxrP1tSUmUm6iolZTqB90iNgnyB4iyK9N6JOunMyoHTg86b
93hSEhQ9/h618w1ctS1s7eNTUrQfeBUp6UY68Cyd9KSURCUpCYo6DxFHDLFp
8wOjzHOl01NS/u0tKemzfX8Vn9ldqV23PF60D5cTiwU4SDeeonU3rkZEOP0T
jIu5fLSGVW2petqNtaEPvKEb/yUlQdFT7zRG2ahi/09n/y4pP/fGlDRvbzgl
uuqfE//oj/5tD3+jHGyQ4hg+7oI+zCegsBnLpJMqVlnP6dvSrtprDN34LykJ
ih6Zkp60RZkIk8o+U/pRUTRJdZWSPtlPSlfFbs9HUhKP8chrwZWuSUnh6+jz
o7BM9EV4ps3HpXMNfbwN3fgvKQmKXBk7l48w83UtnFKclarh9pQ0b/jn16/V
hQVuz0dSEg/jYN7tlpRU+QwoDEf1i0tJUUM3/ktKgiIpqXM1+eWav+uPkzDx
rebeno+kJJ7H8bzPNSkp9TCoMiXtmNhou0Y/zEZv/0dKggpSUuekpH0paV5k
9fr7tqaYlMRrOaT3ad1vqydB88TlGXL1IlwkGojCelpv0ejH2Ojt/0hJUOFh
KelJ2/IVJoUb9bDhywLF8FJ8nZ8lJfFajuodWnfa9Tul3RpHP8BGb/9HSoIK
19/9NvWkbcn7baHPCo+oCWv7UtL0+8dGUhLkObC3elhKarq6EY+uHj4/PJGU
BEVDj/HQk7Yl79kpaUlKgrs4trdq+vDlsut16xUNelxFmz3otnykJKggJQ3q
PSlpZT5iaxJNJhOFE/dFJCmJZ3N4b6XH8obun1Xjh94WKQmKpKRBvTYlzXan
pJmUBDUc4Zs87Kp6rtF7RkqCV3nY+fxJ25InJe1ISatFMl/Dk5JgyUG+lR4L
PaNPllsx9BZJSVAkJTGoylCT+dnR8V8kvS0lhb8Re5W7u/9memArx88n+38G
H9S8IY/ZIiDlSeeuT99nreWVYv5v/jI6BQ/3M/srOveaDrnlKJo2pqS5f1Jv
paSUh93k7KYftm57PG3epFGfDNobl7m71883SUnwGg87j3W7LdOvz+hTp9lU
sXBWvv5oDU1d3/PTgVxz7l+3R90pnr11+7y5TzZt+8/CPz4/evh78y7jdA+7
cQJSHjbY+9yWTKipzDuZ1/nVSUlS0m4POzmc682dk9r26Nns9nwkJXG6Zwx/
v0uComcM9lmf25Jp1V0pafV1iOjbTyzNLWcVH2ClCp9CSmrtqdt1lpf3T/7c
NU+5PR9JSbTwgCNKSoKih6WkPvWWklbZJx92ookpmp7Ct9FVnGXqyelbd7tH
btTpntpLldu1KhYuNUlJXOLGk/+9jnSalARFxwcaRZkeDmdN6YxTc24MF9lU
ZkrEnOiLcGK0hQ6w4dhl9R7ZV/UblR/pUywlzaeI7+tw+jxrfl18G50iJT3e
KWFhaEd6QEqCopefYa6RiUKbUlK4bDGPXJ+Siqujf+fusulXq4k73tY0+LIz
2yMP79UYn0d38YwUzgrTyirXRKdnJkZfp+ZKSQ9mny7t6A0pCYoelpK63ZZU
lskElvBtdEo4a1POSpXPv0jNLU5nCKfvr8pjrDixpv7MxBbH4ZOO7Snmkxjy
qwWjs1aBJROaUtEmM1dKeq2H3becZWu3SElQ9LCzTc/bsrzrWE0JZ4Xl83sq
Wk+02mhtmQWjLz7BjVPqhiqcSOda7KnVwZZZUTi32J4pfYtenHLcIw/s8FyU
mrWcHu3wfEqqyVCZpaZfY9S3Db5x93j2ZsqmnpGSoOhht69P2pZu6eRnuzEl
hcVqGpNPSauofvrWPXI47EhJ0Vn5lDTvkeh38PKpp+YLe1LSI9mVefX9IyVB
kZQ0qN8WLq7wPZ38To1SUhhSwlvx1dzKlqRiV5ieGh26zxsRmV1zYkqq/KJd
zRMoKekl7Mcalb0kJUGRlDSou1JSow/k6UfrZ0mVEzc9S4oeltEp9W2u9/jh
sHoqly+2mnI8JdV86U5Kegn7sYaUBGd52B3vk7Yl78ZnSTxbVykpLLYKRJkc
5FnSWbY+1FtOyceiaA7KT5SS3sx+rCElwVmkpEFJSTTSW0rKN6mYklJ1nujx
p50TU9L8e6KvzMTM20zhTJhq0DFcajW6V5+WLOWX3bSifTXUr+j42SncZCkJ
ziIlDUpKopHTB1H01mU5Mby9yb9N1Ryt87M4yzU63T37tJO58wxLhlMyPyk6
8a+4omfvo5fIZ4HjcaO4xhaKq9gx9KQkOIuUNCgpiUbeM4jOose+pCSakpLq
y9QsJSVBkZQ0KCmJRt4ziM6ix1KmntzdGRw1bUlJy50efb0qlnqRmRs2bzVr
WWZ1EKaaEX0dnVVsTLwTF6QkKDpy+ai+Or3dubvsS0qikcojdt+BvRwRjYZG
dF2tV3TBWuDlVgMt9TZ6kpmC/JIqE30RXTYc+MtZyzL1zahvVbSSVOdESUlQ
tONGounN/yO16DEpiUYuCC+X1S8lwWPUp6TUxMys/Ivi3HyZ1aemxWpTIa5Y
SWZKSEqCoq137+4Hjjix96QkGpGSjqwRaGTolJRq+Y5nSZlKMlOAHepTkudH
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
                   
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 2->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
hJSklB6mS52SuF94x+FzKrzS2qywGRPyZmQo+jZDc9coPfvX9j+fPxb+GTk0
OMe/Lar/OgMM/Ft+j/gklxFSEsbRpKSP7neU4A4pyanwSmuzwmZMyJuRoRjU
DOHiU3qKlIRj/ZCSykqJqVR4XhAScRlxQcg7bU/BEVKSU+GV1maFzZiQNyND
MbQZ6UdLwrcUSEk41g8pqez+vpPmxCQlQe9KpE+FW7JPab5BAZs4cE6FV1qb
FTZjQt7sDMWEltzXotIt6UNKEumXiEIOdWSz/lab90NKKksvFMJgllLS91XR
j98t6VI5LJZWUipsKiXxe0lAlfEbB0pISSewMxTTWpJdY4TPLs9HxlOSHAfS
8TTYEaXN+lvtjj4l/XMR/l8flwpky++UkkqDKceW0o+ax+GP6YPs7iYOUoyU
FLJ8ccBCTAynwiutzQqbMSFvdoZibUq69x6lpKhMtDEbbe6nsgWE8u5SUnpt
L60YDfZFY7P+VrujTDE/SfypFiuFKS8pKR0ueTAvMbZcujQUbhSekq2diqSk
kHDqPSqDzXCsnQqvtDYrbMaEvJkaijmNyS5v7svUlQSWcMsVBKVsroniTzUi
ZR/7SknhFV649U9sZjeb9bfanR9FkEnLlF719yp9i5SUql5GhNjyU/gYSNiY
rVDYS1hm4SiRkkLCqRcWKP2IXXGgneoearpX2IwJeTM1FL0aI9QjrG1ubSlJ
s0WZmLIfY9knjPz9bLUG5WFaW/IufJX7686nNSXJsejeoqn812udE2JLKf5k
X36Vv1Yn7CUso7hkjkJKCgmz5VNYKmc3YjMcZae6h5ruFTZjQt5MDUWvxryp
5+qXkkrfr8uWz1bYZTQ6Kt3fwwKlF05pYGeb9bfaHU2QKZVJ01D0QFO598+S
wmeF2BI+uBSfJd1KVQn7giOlmTZrUmMN4ejDsu6hpnuFzZiQN2tD0aU91+/l
ylV+py77WuEznfefHF2FX1nKbnk/FH1V7+nZ7X5vAZv1t9odTZARyvxzcX5e
SkqfFZJLlGKE1BNtkX8s7W7J+HzxWVLoygmfLb1qVgOxhtlbBmThldZmhc2Y
kDdrQ/GmPaV7UHgJqtZ/6eKPspgyJZV20TwUg2gu5umt32BHlDbrb7VtPy9+
L+mn/FlS+mW8bVKS8KwQW0o/kpL2VspH97OlV41vGlayfNeAILzS2qywGRPy
Zm0ourQnqkTzfl1YoFdKugPRVyklleKVtUOjJy8G9rNNf3+a/sZd9UH1QyiP
KUlWyi/3JEmTTvapcIv8IynJPvn6UIpOri8p0OAoO0VKOoG1oXCakvTZp1Qs
u9/3QwHo6YPMPxfhuY2/VumkpKVISY5Eq2UWz4fgQDsVXmltVtiMCXkzOBTv
m5SmpHvL05R0v2Gb3Zg+my1fSkmlSkhJWOLnSZAZ+m/5PeIlUtIXKemp6Kbw
MXmPRl+kJKfCK63NCpsxIW8Gh6J7k+57jaZmOeC8/6ev3+ChgZLTu94PKakT
UtIXKek9j1cSPOL0foHwSmuzwmZMyJC10RiUkvSFSUl4I/vBpYuj+UNK6iT9
uHmhheNASupi7UHEaMvPU7QhJR3C4Gj0bdKj2pYtZXI6DgLmC4+gi6M56OOM
NqsHAx2QkrpwcfVAM273TnW/Ydm5AzIhQwZHo2OTViUOg6M6WjjUxL3P7696
Hj4UOBMpqRcuHRvj1uAUKekQBkfDYJOe2qALDUqfnhw4GlGXDxwBgJTUCxeQ
jZGSnCIlHcLmaNhslZ739reRU9I5n6fc/Y22AEchJXXENWRXh9wW90NKOoTN
0bDZKj3v7W+j/CzJ++BE3y0sPeu9mwDs4HqyK24WTpGSDmFzNGy2Ss97+9tE
ySgbFryPTNrHhY0BcA6uNlviPuIUKekQZkfDbMOUvLe/QfU7Zt5vB9lPjpa0
BACwAe+3xWORkg5hdjTMNkzJe/sbKH8Tx+/IyJ3y2y9gBH4vCaji3uEUKekQ
ZkfDbMOUvLe/wbEp6d7ut2tAd6QkoIqU5BQp6RBmR8Nsw5S8t/+p6G8aZH8j
yfvtoPpZkuveAX2RkkbgIrMZbhxOkZIOYXk0LLetynXjkVX6vSQ+SwJSpKQR
uMhshpTkFCnpEJZHw3Lbqlw3HiXZbxWSkoAUKWkQrjM7ISU5RUo6hOXRsNy2
KteNh0D+PiHHHfgiJQ3CRWYn3DWcIiUdwvhoGG+ewG/LAeA9UtI43F+2QUpy
ipR0iKGjcVkyrpulvk/eIwDYQUoah/vLNpasT/AeKekQQ0fjr8r/fP5Y+EdK
wkyL3gmwYvXwwwRS0lCcaHvgmukUKekQQ0fjOjglfZhp5yEmfDEO+JCSBuP8
2gOXSqdISYcgJQ3t/vydYhUOd4oxORkpaTTOrw2QkpwiJR2ClDS0+/N3ivm4
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
lX9+f8egrTu9RwgAgFfe39GyNUS3y+jWKaSk0gujLaUfP8nNWl/bm1t8M1KS
U91DTfcKmzEhs6wNS9uHPj+KlFTaIlSbtq3hymZthAEAaLg3Xb+VKkwjSelB
+qMcbUrlNbsuPZW2ZwJSklPdQ033CpsxIbOsDYvllBQ2Un+JszbCADAOv5fk
RVtKevRjdK98mpKqDz7llFTddakxc5CSnOoearpX2IwJmWVtWJQp5rLxN+6E
d9XCMl1HCADsIiU58vT29DQllV7ePSV9kq/YaXYdJayZSElOdQ813StsxoTM
sjYs+pR0q24vFX6fkqKWZ6971kYYAMYhJTmSjRvK8sKP2c93sg+EZjxKSXJL
Hr12DlKSU6Sk01gblkdBZqjmkYnikrURBoBxSEm+aL4RkZYslY+2R7dC4eXp
ffP+MX2Qli/VINR2P1UboSFISU6Fq0SbFTZjQmZZG5YNUlLYF+XdBwD2QEpy
pJp6vGgOPqQkPBKuEm1W2IwJmWVtWNK3mxbq1aNP7o0vANgPKcmFcbe8Ja6m
lLSwy94H/FikpNMwLKNFI7zB/QgASkhJGkJCyf6Y3ke6N8D7XelRL5b3d3kD
0IaUdCBGZqjS8G5zb8LJ9pu9+/VIr0vfSUlKQvCpZqIuR6o5JfXa+/tKlu+i
Gbd+p0hJB2JkhtIML3EJTu03affrkR4paSYh+6QfJ6XFRgQl/as6FpvATktu
3PGdIiUdiJEZ7dHdR3Px5AILI6K13L1+8zs/9+uRXpe+k5KU5JSU/hgV6zUh
nwYl/d7tnDJ2WnI75JKyH1LSgRiZ0RpGWL5tNbz7B3R05Xx+3/p9Tc79eqTX
t++kJKVqSvoUIkn3Cfk+JaVzJqow+2P0IOqU8imhnrQlpcfzLdw13iAlHYiR
Ge3lCKcX83Q9AyxRWr+lT3mxX4/0uvSdlKSUDmk2DqQlR1z89RWmjSxtz5ZU
Rh7NU0I9mgakXZiJe7dTpKQDMTKj9Rrhq0xZbL4uHad3SygbXPoxrWFxf37r
0iN3vZNdrX0PdU9Ji4fyt5d9ifpV2nL9HvmrfCBGNylbJjsaaeNL3Vn4oLRx
vu7TCXOQkg7EyIzW/UYm377/evzn88fCvxFT69ro/zuc7d3yo/bo2KUrJWER
4uLYPeqRu97JmvseGpGSVo/o34ZGEmUUGpqSqjQNM56S7h9JSWgQXhBsVtiM
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
L/cP1OmKsA==
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 3->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/v9UxjJ3QLKCjZl0C9bwBp06TbSKkWsdtss48Iq0SrICWRsunuCpCg
Q0uBREUDdSTouIrlJfA66KkOV3L0OL48f/1n7Bn789FPt86xx+Px2GP7e3zO
df+nv/uv/9l/9R9M0/SX//HP//yzf/XXf/gXf/Gv/uY//09+vvkv/vwv//Rf
//mf/Jd/9Od/9Sf/+k/+4j/73X/4c+L/97Ps7/6jafq71wAAAKx8Pp/vfwEA
AF5uGZQAAAAQkQAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJ
AABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUp
CQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAl
KQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACA
JSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAA
gCUpCQAAYElKAgAAWJKSAAAAlqQkAACApRtT0gSM4JbzAwDAjW68C7r3xg+o
dMv5AQDgRjfeBbkBg84ZpADAO0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALyT
lASkGKQAwDtJSUCKQQoAvJOUBKQYpADAO3Wbknb/H1uWi8z/Da1KpmqoX124
VGq9R5p6ZC35pWo2NtrmVI9lSmbqXE4slomuqKb+aNuKm5xqQ75jp8TBlqq2
+DazaZle2ufc2gAARnHjXVBx1atbyso6o/WH95b5ajf1Sary+lk7mhpOj5bc
17aUVJuLKyruynz0KLZwU/2ZttXUn39buV/ys+r3WnHZg6QkAOCdnpSS6u9C
i9U2SkmZ6VubujtWVN6Zb21D/Z18dL9Ha65vYX39m8JXvnmZpm6dUpmSit1y
+liWkgCAd3p2SgpnVd54n56Sdtzw1z9fqJ+yr0k1Zep3Vk0COpiSMsvuO9pv
TEmb1iUlAQCcovOUtFRTYU1VNYtsTUmZ+jett36RU1LSpu5dLpWpNrXeaAOK
i1dWGy1WnFivJnPV7KBQqs5wFcV17du0vE3HBgDAY9x4F1RcdX2yKBZI3SSf
lZJSS21db36RfKjZkZKKjck0MrNFqZZnSrZISdH6823L1J+PNtGaM40sNnVT
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
PK9GD/7V883dB/Nq8XyFdjq8k98lQZGU1Ln6m6WDN1dSUk2Dz+2B01d0yjfB
DtbAJ/haabRA6lCMvq4/klevixXa4/BOUhIUSUmd23Sn1DR3SElvSElnVfJy
U8yqQIuUlD8bSEnATEqCIimpc1LSBX+PSUkHlz2rBqIpaXmy3ZqSlo+J59fL
KZWBSEoCvqQkKJKSOrc7JS1vzKJ3Vv2npGX7o1NW95+ZBStXBBfIHPyrkqtx
PcWC0hSM6+WyNSlpcgmA95GSoMglsnOpu6l8Slq9CG+uhkhJ0fu61ZRwkzM3
hAc37bKRcnBFp7TTaeGIVDhaFqg54KfgA4H8SK+pKnrwuxDA20hJUOTi2LnT
U9K+iJSJEvuOn8q8lv9IPPP5uZR0ezPeLJOP5gL1KakmHOVTUmY4LJvncgDv
ISVBkcti5/alpFVqaJeSNh0/q/vGgymp8n5SSuqkqlcpjosrU1J+UITtdFGA
N5CSoMgFsXMHnyVFp+/LSqm7qeLxkyrWIiXt28aHpaRTamhRFbPUgb2SmTUf
58sX4bKpCosHv0sDPJuUBEUuhZ2rv9tP3R0t3y5fHElJq1uvaLMzc+s3LVUm
nD5JSafW0KIqZvvGYIu//P619+GppCQokpI6tzvRFIPG7rupyIfaix+A1x9R
jVLSj+1J8Hkp6axKTq+Kr1FSEvBUUhIUSUmd6y0lRSPSvqNoR0paPTCqKSkl
ncJZ4lyZcXS9rW1u2jPANaQkKHLV69x04B/u/jrxM+fjN1qbNi1cS2rTolNO
T0mfq8LCKWs5valOFHy5asADSElQ5HrXuboPg++3b9POSnDHA2B9m3ds6VZn
reX01l6z+Qxh98AHeiAlQZErXec6jxKpoFRzUHW+aak2V5Y8otuU1KhOxuUK
AoOSkqDINa5zI0aJT3VK6seJ23XciWs5vcHX9ABj2TSIgB5ISVDk6ta5afyU
NB9jlQfb7hVdQEpqVCcAV5KSoEhK6txYKSn1mGZ5mBXrkZI6T0ntquUZHB4A
PICU1Ln6lDSnkh1zmz5L+gSPljYtu3VdTQ2XkjK1HVyL8wYZW7/LCgC9cSHr
3KZck4lIxTJSUj/rGiIlnVIDj+cSA8CgXMI695iU1Ogbd7sX2WfElJSqcBVd
w+9G7qsWQi400Bu/S4IiF6/O7U5Jqx8HzVOu+cZduBWfNv96w+5F9nlASppi
PhuTbLum8mAuN9APKQmKXLY6ty8lrV5c/ywp3IpGhQ8u1eeKrn+W9AmS1MHK
IcUBAz2QkqBISuqclNR0qT5X1GIVYZ1npaQd5QG4l5QERVJS5w5+4y46/eKU
tPxaV2X53Svat+Ab1lKTknZ84y5TPxS5AMFdpCQocpHq3MFnST2kpB2bfPqy
JzZ+0JRUrDP8ddK59UOKyxBcT0qCIpenztWHmvmRTfh2WtgXkaSkFlVdvJaa
lNSufsjb+tAZOEJKgiJXpc7tyzWpr94d+RsiJaUWX/3o5shzEympdSW8nKsS
XEBKgiLXo85JSUcWn2I+vx72W1c3bkrKVHvix/jOJ5zCtQmakpKgyJWoc7sD
zuobd+9JSdEaVlNWSepg5S1cnJJGXAsAu0lJUCQldS76NOQul23y6TVMUlL7
mq9fC+/hiIJzSUlQdOXdLyf6baHPCnc75YDMxKLPi79x9zmWEPetBU7hagUn
kpKgyHVnUFLSkUqmV/7rDXPN1zwfdGKhBdcsOIWUBEWuOIOSko7Uc3AVFwyZ
Rqu4+FuUzi00kjmAXdSOK3z3+unu7v6LSElQ9KpzwpNISUeqOriK6OLzUDpl
TJ0+Ku+6H3B6oanwMH7bve6JdN3XS/pBSoKiN5wKHklK2l3V8StgJnzNs1oE
sYPu+tTUGYbWluPuhQ8FTqG7Qs/uEykJilxKBiUl3VJbvs7l9A5T0ufyb9wt
13vNini5u47woemojAd3jpQERQ8+AzyblHRLbas6V3di/aekz00ftjvJcIHo
01LHXpEuytM/8FouIoOSkjqsMJWYTlzFKW65gbzlPOP89iqplOQYyNA5NfQS
vJMryKCkpA4rnDr+1xvC+q8f+3etzinuDTIRyQGQomfq6St4IVeQQUlJN9aZ
T0lNV3GiW8b+LU+vnOLeSVAq0i31ntdXfpcERS4fg5KSjtR5cBXPSEmXreX2
lTZaY/7hxcVabGBX7u7gX9zdGad50ra09ry+kpKg6GHn/PeQkvZVe8p9TnTx
c++g6uu57tawwulbd1y7df2s+d/92Z/18Hdlf97l5zb+8R//bQ9/j+ntx2zI
NZ7XXVISFG26t6EfUtKOanfcz2dqO6VVx+v/WfLH50cPfx2mpKYrkpKuJCWd
LrohZ50nKxc/sTOPtPnipnZCSoIiKWlQUtKmCnc/9cjUeUrbjtc/YkratIFH
SEmPISWdLrUhy+kHg9Km6UfMdTb9rOYxu/5LSoIiKWlQUlJ9bVJShylp0zb2
SUq6kpR0ukempN4W6ZmUBEVS0qCkpE0VSkkdpqRNm7mPZ0kDyQ/MrSlpNd5f
mJKKJ7qtKWlVYfSkuiyzfLF6HS0cvk01Mlo4LJlqcKoZ+ZVmpg9KSoKi4omU
PklJW+sML+gHKzylYcfrn0ZOSZu2tDdTRUqaj7fV6+/bmmJvS0mZO94dcSb6
+j0p6ZO9xGemh3th+jX7rN5mXmQKhGVWxaKZJdOqaLH6ZmRWmlrL0KQkKJKS
BiUl7at5R0qaqp3b1PqSqcyyFE4PC0fLrMpHF5eS8hGm+Do/650paTWmJilp
o1Xvheeo1IZMiRyxrCQsk3+xXPsUxJNwSqoZxcKrkmGDK+tJVRhOHJeUBEXh
mZMhSEm7Kx/imK9vYTSwzLGl+Do1cdOyR1LSpo3typGUNP3+sZGUNIumpOVd
7lkp6Vvn6m19/aP0diY4ZAp8EkkhmjJqgkY+gLRLSalmVNYjJQEfKWlYUtKR
+vs/7IvNW95DnpWSiuUz6zqSkmq2t0NdpaQ32JGSwmXn198Xq7dbq41aHiH3
lowetHOxaIFPXXwIly2WDF9Ea8uXLxZOzappRr7C1MRxSUlQtDqvMgopaYi1
7Ja5gQnvhU58ljTFAtFqVmZ1b1OfYvJxKVXMs6Tl3N3PklbLzpXv+ybeKL09
BeEinBJdKuz56fdBI5wenbLag9G3qxpWtUXLp1YdtiRsT6r90WZHV5rqsXFJ
SVAUPRXQPykpX0M/TumETG1TNiUtVX7jbgoy0WrxFs+SolvduelYSppJSV/5
gTOdlJKmxLOkp6ak/KnjYOXH6xnLw7ZUSoKiIzdy3EhKytfwL/7F/9bD38H7
kJqolU9JmRy0KSVVPkvavbHLzTleyTV2p6TVglP6a3gvTEmZubtTUjQxTQe+
cXdlt+xWc+o4Uvkp9YzlYVsqJUGRlDQoKSlfw+356EhKqglHy8LnpqTw4VF+
QSmpPijlU9K+iPSYlJS3NSXNg2g15Y+D3yutij0mJRUd3JBNp6l9lR8p0MJj
dv2XlARFUtKgpKR8Dbfnox0paXXXcVlKij4qiqakfFA660wyyhlpX0qa93Lq
rZQUtTUltft7TG93njKKhbeeKo97zK7/kpKgSEoalJSUr+H2fFSfklIfyR5M
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
nxy4kQNjUFLSG/TTFfempHntq5S0KrOaGI0286xogUz54VJSeG5P3TF2uC01
Hra9xc2pTDFh/CkWS4WpUVJS2F35zpyysWWqS0PLiZlZPX/jTkpaygy9TWV4
GPt6UFLSG3TVFdc0Jnp7M5+mpiCwLKdMi6AUzTWr+FOMSNHXY6Wk5Rk+c+m/
sJmnedj2FjenJsiEZTIpaZWnxk1JoeJpJP8saYo9BspMjFaYWYuU1KHM0FsW
SL3lqezoQUlJb9BVV5zVmEw9mXub2b6UVDOlMjFFH2P1L9Pz89xiDZW76d6S
c+Epvb3D+exNSflYNE/ZmpLu7o+jit+4m4L4E118Sn+tLrMWKalDmaPlk7hV
jk7kYezlQUlJb9BVV5zVmCP1TOelpNT366LloxWe0hsnSl3flwVSC17SwJM9
bHuLm3MkJYVpaPXiDc+SlnP3paTos6TZ1pQUbSTdSh1pVx3U3COz9+mZlPQG
vXXFKe2ZpvVzgU/1iWjKPtM5/uRoSvxkKTrleFecq3hNj04f9xLwsO0tbs4p
z5LemZLCucWUNKeYTOpZTcm/9Sypc0Eq+uXISe2pPk8mnKjbSwZ5UtIb9NYV
R9qTugYtT0HF+qe6+FNZrDIlpVaxuysaqTmZh5f+Djek0sO2t9i2I79LyjxL
Cr+M95iUlJlbk5JSz5KkpEcqJuvUUu2bxp16vmqQISW9QW9dcUp7VpXUfF63
LHBWSpoD0VcqJaXiVW+7pl7+ZuB5HrO9+/6Nu+KL4kOoEVNSXiq/zAdJ9Ft2
4azllPxbKal/xWQdjU5Dn1KoYS8PSkp6g966YtCUVJ99UsWi6z3eFVBv3/8v
KZy4/JOS7v2Tkgayult28/wSdvSgpKQ36LArjjcpTEnzlK0paf7ANjoxnBst
n0pJqUqkJG6xKcg0/ZOSpKR3Wl0UPl1eozmXlDQoKekNOuyK05s0X2tqas4H
nON/9fV3uGuoNOhVT0o6i5T0JSUdN+KZhE0GvV4gJb1Eb73RKCXVF5aSOCL6
4HKIvSklnSV83HyjG/tBSjrFvTuR1m4fp+wjJb1Eh71xbpM21XbbrUzMiZ3A
9ZZ7cIi9Gf1h0V1/d3cGJ5CSTjHE2YPdXO4HJSW9RIe9cWKT7kocHfZqa8uu
Fvc+v37V8+VdwTtJSWdx6ngwl4ZBSUkv0WFvdNikrR6wCTuknp68sDdWm/zC
HgAp6SxOIA8mJQ1KSnqJPnujz1bVG739++RT0nuep8zbu5oCryIlncg55Kle
cll8HinpJfrsjT5bVW/09u9T+Sxp9M5ZfbcwNXf0zQT64XzyVC4Wg5KSXqLP
3uizVfVGb/8+q2QUDQuj90y4jTc2BngPZ5tHch0ZlJT0Et32RrcNqzR6+3co
fsds9MtB9MnRLS0B4AFGvyy+lpT0Et32RrcNqzR6+3eo/CXOuD2T36hxtwta
8LskKHLtGJSU9BLd9ka3Das0evt3eG1KmqePu2lwOikJiqSkQUlJL9Ftb3Tb
sEqjt3+r1b9pEP1F0uiXg+KzpKG3Ds4lJbXgJPMwLhyDkpJeoufe6LltRUM3
nqjU75I8S4KQlNSCk8zDSEmDkpJeoufe6LltRUM3npTotwqlJAhJSY04zzyJ
lDQoKekleu6NnttWNHTjych/n9B+hy8pqREnmSdx1RiUlPQSnfdG583LGLfl
AMdJSe24vjyGlDQoKeklmvbG1JN2m5na9ovXCNAPKakd15fHuOX+hOOkpJdo
2hs/K//x+dHDn5TElW76JKAXd3c/XZCSmjLQnsE5c1BS0ks07Y3pxSnp40h7
HzHhSz/wkZIaM76ewalyUFLSS0hJTTf/+pVyF7s7pE/eTEpqzfh6AClpUFLS
S0hJTTf/+pVyPZe5DJ3zWlJSa0bWAzhDDkpKegkpqenmX79SrmdH5+mfd5KS
LmBwjU5KGpSU9BI3pqT5xwvf16uJ86z89FU9UhIXs5dr6KUXkpKgSEoalJT0
EnelpDABpWblX6cKSElcwC6up6/eRkqCIilpUFLSoLZu3S0pKZy+OyXlq5WS
aMourqev3kZKgiIpaVBS0qAGTUlHEpOUxF1Su3j+FmiqTObKeO5hs6+2ZfPO
ao/h8DZS0mUMrnFJSYOSkga13Lrlfdo1t2Rh5TUpafXDouLvj8JZUhLXqxlT
dw29405vXufbC+MyuMYlJQ1KShrLFPOp+Ey4h5SUek4UpqT6t1ISrVUOKCmp
UYXAzPgalJQ0KClpUKutW32sXSx/emOuSUn5iHRXSvo8/WB7ua0DanU1XH58
EX6skX+Rb0DqQ5Lopyj55mXWvqoz3U9VnQMcYXANSkoalJQ0qCFSUn3kyUSh
MEzlV9duM/M9cMt6ucCmARVGm1Tkyb/IZJata1nO2rr2aIEiw+FV/C7pYsbX
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
Pm+L6p2y7VJSpUzwKWaiU/bU7pR01tqPV3L7KnZz6R+UlPRCeqapmu4VlxjU
8w7a521RPSnpSpnsEz5OCou1CEr1S51Y7AL9tGTmij8oKemF9Exrm64+NSdP
J1g6sbqXm+/fxj0+n7dF9U7ZdimpUj4lhW9Xxc46ILcGpfq19zNk+mnJ7CWn
lOeRkl5Iz7S2o4fzl60dn/7BiaaYz6+X/rEOzudtUb1zt11KqlRMSZ9EJDn9
gDyeksJjZlVh9O3qxWqjKmdl6glbknp9vRtXzRFS0gvpmdYO9nB4Mg/vZ+AW
qfu3cNYonrdF9U7ZdimpUtil0TgQlmxx8q+vMGxkanq0ZGXkqZmVqaemAeEm
XMm1e1BS0gvpmdbO6uEprbLY9U7ZcFt3i8oGp96GNdy8Pb86ZYuG27q8ae+2
L52ekm7uyl8d3JbVdqWmTL/2/JTeEa2bFC0T7Y2w8anNufFFauL1Tj+cuIaU
9EJ6prXTL2T5y/fP1z8+P3r4a3Fo/azzn/yT/7uHv0Zbd/te27TvwjulzE3I
zyl/8Af/voe/zNZt2qJVyT/90/+ph7/dR+bubV9qkZL+6I/+jx7+mkaSyijU
NCUV1TSs85Q0v5WS2EFKeiE909o1KWl5Rbj9HltK2r11t++1I/tuvv2ILj5E
Stq0RauSt+ejgylp97YvSUmVGxU9ey9nLadEZ4UlW5OSziIlDUpKeiE900I+
yLSoea5/GvxOu7j5t+cjKSnT/vzc2/PRvpRUWfL2fNQiJW0lJT1VMaOFV6JU
4dSVa/kiMytVSXHxZVPbdVSNsEkMQUp6J51zuugJ/Hg/11QyDX6nXdy62/OR
lJRpf37u7flISqq3rx4pif7dviulpEFJSe+kc1pokZIq13v7PfbuO+1iL9Wn
pFXP95CSarbu9r12cN9lFhwuJeU/jg4L356PTkxJl52yajr29nx0JCVVfrR1
wWXCnflXD51gXwxKSnonndNCo4hUrPB7p71adf298Vx+XipaVar+VQ1Hti66
+LQl7ywLb1qwaUrKb93WLFO/lzcdDI22bg4pX2F4madPgXDBsJ5ondEFW2zd
1iyzEi1w47Oka9R07NYsE05ZyhdulJLyG7icnip2XLElj9fPhvfTEjaRkt5J
5zTS4qoU3lytVjEtgszyprfmxnh1R52alZoY1nDK1q0KPCYlRbdux0Ofmr0c
3WtNU1J061aBKJqSopFnWgScVCaqr7PR1u2IM9HX+YnPTknRjj2YklYT59ff
dV2cklYbGG5vauJxxa6ur+f0tr1No11Ma1LSO+mcRo5fj4p1hquYdqWksEBq
8cr6921yftM+J6Wkb4Wrt5tqPjElrbaudUqqr7bF1oVppTgl+myoOLf4aKnF
1h1JSfsKdJiStv4uqaZjt0akcJEplpJueZa02sBUnS12YrGr6+s5vW1vs6Pb
6YGU9E46p519l6GaClOXuSmbYr6FV1lmNbHyVjw6cfk2c1He57M9Jc3CuPR9
sXq7r/ITt+6slPStc7WXN1XbYuv2paR8sX0pqcXW7U5Jyxff16v/bqr89K27
0aezlNRoG+vP8+FSZ5WsvwB93DMctqnP6YeU9E46p52t16DK2jIXuCn206Fo
wJkS0Sm8rw6ryiSsecqOra7Zuh3PklZLzTWHz5VG/MZddNdkIm1ltS22LpWA
pkQgmuW/VnfXs6RVgR0pabaauExPW2vesXUnOuVZ0qrAjq/bTcHvj2ap9HTX
N+5SS+1Y15GW1FcSNm+uagpCWbRAqiW7WzWcl2zm80hJ76Rzmjp4PgyvaPlr
3JS9Q54XDB83HHx+FL17P7Kxqa07mJJSEzfVfEpKyuy7TXEmujuWO/qWlBQt
sDUlnfssaVlhi607/iwpfL2v2q1bd6KDKSlaYN/jnpo0tLXyHR2S38D6iccV
u7qyktWLZeWfRQ4Ky2dmhfU/W6NdTGtS0jvpnNY29XDNbUPmHDulU1L4Iryd
7iEl5QvsSEnRcDQd/sZdi607JSXl93jTlJQvsC8lpZLOppS0et1i63anpNTE
6TXPkvIFtj5Iqv9mXX3lB1NSfYF298+n1Jy6Nk2/Rp6w2KYXj9duL9OUlPRa
+qeR6Vc1xWrqzM9N3TavZqXe5gNR5Y13o6vAtP3/lxQ+MJpiLvjGXc3W7U5J
9bm4UUqq2bqa/JKPPJkCNVXNlbTYuoMpaQoy0RR72PSwlFQ0DZ6SKrdx0yXg
LlMiGX1iKSmzbLiZqaWeqvMdTYqU9Fr6p4XVmXD5tt1lcY48X6vYEhUtE07M
Fwuntziopgb/f9h9f422bmuWie6a1O7uJCXN7QkjzDw9bHx0wfzb1fRlPS22
bmtEWllOjL6Wkmq+axe+Xc1KLXJjShrFtD0lZV6EVb2nh78H3t2tYDMp6bX0
z+mip8H5utx0vVufRzT6a3Qvens+6iclDbfvoj8muv6vh5TU7u+dKemCv5df
JVcXr+Xb8PXn1ytgZtll/Zdty+2kpEFJSa+lf06X6tLWXf34O+3b85GUtHvr
bs9HUlJrUhJ50SdQn5fdhEhJg5KSXkv/nO7GlNQPW2frbN31Tt+6ei1SUj9O
6aKXm2LJ6G1963AalJT0WvrndKku1dXAU52ekrhe64vUMnW+My+8c6sfQEp6
Lf1zuuhp0LkReDApaWjFp2Yeq51CHw5KSnot/dPC6kzoxAg8m5Q0rsrvFrqK
HedmYFBS0mvpn0Z8rR14DylpUPXXKRey49wPDEpKejNd1I6+Bd5AShpO8G9U
1Kak5W+L9s0KX4StirZ2Lhz9wkaq/mjNNWs/PdRISYOSkt5MF7Wjb4E3kJLG
Ekak+pT0ySad/KzwxSr7RFcXLRwuFU03mZpTa09Ve5yUNCgp6c10UTv6FngD
KWkg0Yi0NSW1eFFMSWH7P7HoEdZT0/hVPfU9U09KGpSU9Ga6qCndC0BXRk9J
qS1KNbWy8ct6Wly7paRBSUlvpotqLhapXlp9olW/IADcaPSUtFpq+aKm5nw9
+VC2j5Q0KCnpzXTRJ+iEzPk5NXFrvAKA29WkpNXngavXy4mpWat68oWjl+Cw
nlT7w/Wmakg1PlzLKU6vkGtISW+miz6lWDSfSOsXyU8EeBK/Sxraw65T3W6O
lLTJKslWLpKpKlN/ZT1nkZIGoos+J6WkypoBHkZKGs6Dr03dbpqUVO/0h3qZ
ALVjqYOkpIHook9dSkpNnN+mPqw4s6Fwn+nd7u7+rklJw3nqId3zgO22Yb0J
e+l4v6VqyNfcaH9JSWPRS/khGb1TqhzF+pbR9XzXcSX9kCEljaX+MG592O+u
fMSR6ARSKdNLmQNynr58sapznrIqs6xzVc9qeqqGTaSkseilTORZzUpNj05J
TYRROIBD+iQkJY1l0zHc+oDfFNmatqQ1KalSzXOf/B1XGGGiUz5BPiq+iNa5
lZQ0Fr2UikK7Z9VMh565oGfonBUpaSBbD10p6SzOG5VOSUmVL1LxJ/UiNXET
KWksL++lKRDOir5dLZupv13joRHHbZ7+WZKSRrHjuC1e8paf0qc+us8vla8k
rCFzXV5V25X8rQKzsJfCfRo9rna8COvMv0hN3ERKGoteakr3MhwHbQ29NJOS
RnEkJWVuDlN3qpmb2/yCxfXmb3H7DEpSUr1iKon2pJS0lQOyhl5qSvcyFkds
PX31JSUNYd/hWpmSKsvX35rWrKV+vT2QkjZZPSfKTFzNWpbZNCVcRWp6viVF
UtJY9FJTupexOGLr6asvKWkIB1PSJ32fLyXVkJIGdXqokZLGopea0r2MJXpz
Er2+R6dnih3/XG73bV6jGyej+0tK6t/uY7Vm7ESH2Fkp6WA9/ZCSBiUlvZxe
akr3MpDU4ZpJSTU15G9mMus9S6P6je4vKalzRyJSzacZc2ap/xgk/+FJWOHy
bVgmuqLeUklv7aGSlISOakffMpBMSvrEcs2qfHRidMHoi3akpKakpDfIfKxh
INSQkgYlJaGjmtK9jOL6lJQfHalPhqdAuJZoa8MX4bo2DVij+yMlvYOUdJCU
NCgpCR3VlO5lFPmU9AmiTepmKZweBpDiPUPqqVN0+nJW5nFV/SKVjO6PlPQa
0Y8Rdny28E56aVBSEjqqKd3LKI6npNR9VKrOzOhI1VMfgipLZraoyOj+SEkd
O+X4XI6mTERKDfN26WCs0SclDUpKQkc1pXsZxZGUlElGmZSUWek8N/MkqLJ5
9cEq05JU87Yu8jxSUp/OikjL16lxHR0+uz98qGzPWKSkQUlJ6KimdC+jKKak
ytf5WVsLpEJQquSOlLR7kBrddOv4wbkp+NRMOW7cESclDUpKQkc1pXsZRc13
ZlYPX+aUsSqTmpWqc1OZ/OvlxLzoIsd7DG53ypGZqaRYf36Mp8ZvWHn+JFCs
fNP2NrXj9MKVKq8a17hsky9bUT/2tf/0PmGmexnFEMfq9Osd1L11DtFjvNAp
R+aqkuVtRk39UyL1LGtbvV7VH9YQVpWvvJ8RuvsOjWv83Ds/Pj96+LvsOLly
RX/5l/9DD39SUod0L6MY4liVknrjd0m9aTEuVlNOSUmZiau8syMl1bfzGlJS
56Skpiu6PR8dSUmfns4kj6R7GUIPB2rNvcSRR+fn1tlDj91OSurNLSmpsvCm
lHTkWVKqVXeRkjonJTVd0e35SErqme5lCDceqC2eEF1goKa2IyV15fRPD1Jv
i2NWSlqSkjonJTVd0e35SErqme5lCFLSVgM1tR0pqR8tDshpITUrs1Txbfg6
fJGZXlP56X2yQz8tIUpKarqiTGyZLd+u5qZeLwtLScOZYu5uFCS1OD5Ttyup
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
0nz5i05czl2VDBdMVXJuSqpf3AF5xCm9ZxeQN21PSalFRklJ84aHU6KX0Z9T
fnx+9PBnOK+kksu8K6PfslvNShVYyUSk21OS3yVBkZTUuVRKCtNNOHGZjDJl
UokpXOrghpxektBZvefMQEZl5NmXkqIhq5OU9En8jltKGkgxvFz2JyVB59wL
de5ISsrkneIiTVPSfNSl7i6OrOjlzu09+4KoVcb5CjPOPD0sE87KlEmt65aU
NPdAaFXg9nwkJUVJSV9S0lJmOEffhuP9urZyoehtKv2Y9qakKftUaEfa2nec
pO4llgees82JTu89pwhCU+I7ctf/3Xtw5u+sbs9HUlJU9Kp0lxv7QUpamdK3
IplZqSk8w+3jlLxpe0qa7U5Jq8VbfONu0/mHeo16z05haZKS0jfb89zb85GU
1MgzulRKWslkn9WtcvSm5RlHBStSUud2pKRTniU1/cbdR0pqqV1Qsmv4qvqU
/CoddsInm5LmYqvX9bOkpHs9o0ulpJVwt06LlBS+XRV7xlHByr1XGYqmJ/4u
6eMbdy017UB7Bz6lnPgpPUtazk29zs+Skm70jC6VklaKKemTCESpmxkeQErq
XH1Kmn7/735XTrw4JYXb9fGvN7TRugOdNOjcjcfnMittTUnhIplZUtKNntGl
UtLKkZS0/ISEJ7FbO5eJMCupiWH5aD35Yo1S0tZZ1LimA+0mutXDwbk1JUXL
p2YtU1gxQPXQGw/zjC6VklZqUtKn7jdKPIaU1LlUSrr+T0oaxWUdaE/Rp+gt
zYkXu5rPjTelpFTh/KzKZ0zG6UHhx48pd7d0GylpJZN39s3iAUYc2q/yyJSU
v6Y4IA+6sgOdQOhH6sZ1eZSeHpQyK233LElKutczulRKWspk3uiU6KxB8zIZ
dmjn8tfii122ydes6Kmu70C7jK5M1R/8HllF/lQ5Nf5d0iQl3ecZXSolQdGV
d7+c6LeFPivczQF50C0d6ExCP25MScsCW1NSmHoysyojkpTUwjO6VEqCIvc2
g5KSSLmxA+07ehCmpGnxlZizVpF/2p6JMHP51ev6Wa9NSZ1sSyfNOEhKgiIp
qXOpTyxvcdkmX7OiB7uxD688VKDGdOq/3lB5epwO/NvdldmnvuTxre5EJ9vS
STMOkpKgyC1N51pfajddlC/b5GtW9GC39+HtDYDZ8aMxmobyHx9JSS2E/f+5
4zbmGV0qJUGRlNQ5KYkdeuhD5xY6sfs4LOagTM25p/KX27f5/Uht1HLr6jfz
un6v0KrLKkhJUHT7OCVvkpLYrp8+7KclvNPW29Gz7mB/Lv7//qN/1MPfk8bg
alumXx8t1Vdy+/X04qsqsI+U1LkXns8dkMd11YdOMvTv9M/2paQWpCTgSm5g
OvfC87kD8rgO+7DDJvFyTb/4JCW1EKakeYqUBJxOSupczfl8vtD/WPyvBldS
5ZcTOzmfOyCP67MPj3+Fabrpx9o8SbtktFrL7fnoeSlpJXpCKO5cKenL75Kg
yP1G52rCyyr+RFNPdPr06/+Jo5PzuQPyuG778OAJZ99Hx9D0sVFqjbfno5ek
pHBifndv/ewxM7fm0tnDVTVKSoIiKalz+TNwODeVkn4sHjOlElYn53MH5HGd
9+Hu5q0+MT6pOTzWxclotepMbPlava6fFb6VkpYTQ6sClRGm/vNJKQkeSUrq
3NaUVB+gJt+4e7TOu7HyzLO6yZGSKErdG1/fjHxyKb6uLFYMSk8dKam9HE1J
q9OIlPSRkqDC7ZcS8lqkpOJcKekBhujGrY1MJSboIRkt7UhJ4SKpWVtTErPP
rpQ0LT5jnLLfypCS4Enm8wZ9yp9+M3PDWZNnSW8ySjduOgXNNzmjbB1Nre5+
uzJtTEnR8qlZ0+IreW/+xl1UKhwtC2xKSalktCQlwSP1eX1htjUlraJQOCv1
CZiU9DBjdWNla8faKBrpNhktbUpJqcKpWWHIkpJmmXw0F9iUkpZBKXXF3BeU
pCToXP/XmperCS81qSeanqSkBxuuG2vORcNtFGfJ3/d2aFNK2vcsSUqKKh4k
UtKXlARFA1103qnm3Bs+9J8CleV7OJ87IE8xaDdmmj3WTTKnGHenb01J+TQ0
Hftd0t2d0Zd9Kanyc0gpCZ5k0AvQe+w797b4k5LGMm43Oim93HCPjaJ2pKT6
NCQlHbHjs8fli6jOr6pRUhIUjX4lejwpiX1G78bR288mz0hGS5nwMm/p6vWO
WcWIJCWFXnhVjZKSoOhJV6VHSn1ydYvLNvmaFT3bA7rxAZtA3sXnlitNFfll
99+myh/ZvUdMUtLfk5Kg6KlXqMf7baHPCvdxNJ7oAZ3pBPU813/wcgspqVtS
0peUBEWPv1Q9lZRE0WM68zEb8mZvSEZLZz7FP+zuzujL3XvjFzf2g5QERbeP
U/LuPYGv5Bt5ysYer4TZk/rzrGOMK9WcPYBbSElQ5PrVuanj7wZUZqhNG3u8
EmbP68/nbdEjSUbQPykJilzLOtdnStr0pKlyMx2HK3ue9jVzd2f8g97aw9fB
o+X4wVa5oOMHvqQkKHLJ6NzUWUo6/UbaEZjys1v++T//33v4u3cH9R/l6lt4
gbu2/WAl0deNXN9LPI+jCN7glgsr9aZxUtIQN3UDmaSkQfzsn3/7b//bHv6u
2VOnj9+LDzDHM8c5iuAN3Kl2rreUNLdK3mlNShrFS1JS05G+qnZeUerFXD5z
LgqXja4LdnAUwRu4v71Xsf/zKWm+K/i+Xk5ZzlotkqqhPiUtGy8l7VOz62/P
R1JSjQenpCsHeCrLRFNPqlg4K1pPmy3gRR5wFPldEhS5v71XMWhk8sty1jLp
hDkoWiyctTUlrbaiZT89UM2uL4aXpdXEHW/vTUmVR1Gx365v2PS4lHRl94ar
Lr74pDNRatZyc5ysOO4BR5GUBEXub+81xawKFCPSakpmVuXrrSmJHWp2fc1T
nvB1+KI4sZ+UlL8/X8265vRVbNgzUlKx869xekrK1wP7POAokpKg6PZr4stF
b5WXO6U+JdUEKCmpHzW7/mBKipbMF+snJYWnpujJ6oIzWE3D6lNMOOUrfBtd
7+kpKbpFF5vSYSf6ovi2ssLLxMf5a1zc29d4wHZJSVD04JPYBS64uEw9pSQu
8zk1JYXFairvISXNvfFJ35a0bl5Nw3anpNXE6OvwxcGUFG7CvVLtyfT5Z8t3
6vL1tNNVJ9/okf3wgM2RkqDoeeeusRQv31PLlLTKPjXPkhwwZ6nZ9TX5ZZb6
Hl04t6bm1Fru8smmpNsbVh+RwsJTKQRV1l9MScs205p+Dj2pTx6wLVISFLlo
3iu84woLbI1CmVmpeJVaS+obd46Z42p2/aZnSZUTp6GeJa0KpBa8vWHHU1Km
kiMpKX+M0YLeznhM5zxgK6QkKHrMKWtQxf7P5JdU9pmCp0X1T5oqU1JNy8mr
2fXtUtKmoHRLSkoVqJl4fcM2fd1uVf5bbc2C9SlJMrqRbs97Rv88YCukJChy
Je1cPsLM90KZXw9lyocF6lPS3Lzr++QlWqek+qB0ZUraVOaa01dNnq2MMLN2
z5Kc0u+l82vopR5ISVDkktq5+hTT+i91nDiEGilGmPmWODVxeVseXSRaw10p
qdLqQ4C7m/N3alJMNBnlnzHtTkl398d76fx6+up2UhIUuap2rv+UNLfzsj55
icoHPRf82bl5Z6WkVCDalJI+BuN99Hw9fXU7KQmKpKTOTT2paeo13fIGk5Q0
iKniH+j+Ct9mZqWmFFPSxy3oTTLdvjo9Lk+qW8+0YbWbFtx3bCzrP+XoGv0Q
Hb39HykJKrizHdRvC11V6HA6i5Q0isoIc8Hf6j78xj55oZrPkVJvj+y4y3b6
uZWPfnyO3v6PlAQVpKRBdZuSPg6qk4SfMN/o7s7o2tRlSvo84kZuIMXeXg2l
1Osj6226x8+tfPSDc/T2f6QkqOAWqHMX3wznbW15oz6Brtw9Ln8Rbdst3fI2
xX6efv3V2BRLN6lKlgWmdBaOLr48NpaLRw+eVW1h5WFV4SKVR93QR+bQjf+S
kqDINbRzP/fOX//1f9fD347jxNEFPTAML1CZkj5BXPqUwkU0j0SXjcbk/NrD
/JUpsHWRvKEPy6Eb/yUlQZH72M4NnZLmTTi3T4CtDMPWDqakfCWZK/Vqevg2
WqA+BFWWrNmKfMvHMnTjv6QkKJKSOveAlPRxmJEW/SR8+Tb/UTn19F5T9Snp
k/2N0rJA+NSmuN5osVTYySS1+nCUqTNv6ANy6MYDldx4dO4ZKWnellP6hIcp
fqiev5+knt5rZ1NK+mw8qlfJpbLaTzrRRHNZtMCOZ0mVhj4ah248UElKulex
/5+Ukmq2lxfakZI8WtpNpzVSPJNnnt3UXAiWhcNqU5Wspi/f5l9HK4+KLlLR
YWMfikM3HqjkTuNeq0tMtEA+uXx9Xy+nLGdFyy8nXpaSllsNX9P2lJR6Sw2d
1sJYvZoZU5fVOVaPrQzd+C+/S4IiKeleU+xTwVWBTGxZxZ9o6olOX068PiV9
HHgsrD6XnifmC3wecaNyF113urG6VEo6aOjGf0lJUORm9V7Rzl/ulFSECaen
UlJxyi0pKbP5vE1qFBQLOH6O0Hvn6q0/iwMk+snDKSutrLO3HnsbKQmKXnKn
Mf0qNT10QclMaz9bUlJlJuoqJWU6gfdIjYJ8geIsivTeiTrpzMqB04POm/d4
UhIUPf4etfMNXLUtbO3jU1K0H3gVKelGOvAsnfSklEQlKQmKOg8RRwyxafMD
o8xzpdNTUv7tLSnps31/FZ/ZXaldtzxetA+XE4sFOEg3nqJ1N65GRDj9E4yL
uXy0hlVtqXrajbWhD7yhG/8lJUHRU+80RtmoYv9PZ/8uKT/3xpQ0b284Jbrq
nxP/3Z/9WQ9/oxxskOIYPu6CPswnoLAZy6STKlZZz+nb0q7aawzd+C8pCYoe
mZKetEWZCJPKPlP6UVE0SXWVkj7ZT0pXxW7PR1ISj/HIa8GVrklJ4evo86Ow
TPRFeKbNx6VzDX28Dd34LykJilwZO5ePMPN1LZxSnJWq4faUNG/459ev1YUF
bs9HUhIP42De7ZaUVPkMKAxH9YtLSVFDN/5LSoIiKalzNfnlmr/rj5Mw8a3m
3p6PpCSex/G8zzUpKfUwqDIl7ZjYaLtGP8xGb/9HSoIKUlLnpKR9KWleZPX6
+7ammJTEazmk92ndb6snQfPE5Rly9SJcJBqIwnpab9Hox9jo7f9ISVDhYSnp
SdvyFSaFG/Ww4csCxfBSfJ2fJSXxWo7qHVp32vU7pd0aRz/ARm//R0qCCtff
/Tb1pG3J+22hzwqPqAlr+1LS9PvHRlIS5Dmwt3pYSmq6uhGPrh4+PzyRlARF
Q4/x0JO2Je/ZKWlJSoK7OLa3avrw5bLrdesVDXpcRZs96LZ8pCSoICUN6j0p
aWU+YmsSTSYThRP3RSQpiWdzeG+lx/KG7p9V44feFikJiqSkQb02Jc12p6SZ
lAQ1HOGbPOyqeq7Re0ZKgld52Pn8SduSJyXtSEmrRTJfw5OSYMlBvpUeCz2j
T5ZbMfQWSUlQJCUxqMpQk/nZ0fFfJL0tJYW/EXuVu7v/ZnpgK8fPJ/t/Bh/U
vCGP2SIg5Unnrk/fZ63llWL+b/4yOgUP9zP7Kzr3mg655SiaNqakuX9Sb6Wk
lIfd5OymH7Zuezxt3qRRnwzaG5e5u9fPN0lJ8BoPO491uy3Tr8/oU6fZVLFw
Vr7+aA1NXd/z04Fcc+5ft0fdKZ69dfu8uU82bfvPwj8+P3r4e/Mu43QPu3EC
Uh422Pvclkyoqcw7mdf51UlJUtJuDzs5nOvNnZPa9ujZ7PZ8JCVxumcMf79L
gqJnDPZZn9uSadVdKWn1dYjo208szS1nFR9gpQqfQkpq7anbdZaX90/+3DVP
uT0fSUm08IAjSkqCooelpD71lpJW2ScfdqKJKZqewrfRVZxl6snpW3e7R27U
6Z7aS5XbtSoWLjVJSVzixpP/vY50mpQERccHGkWZHg5nTemMU3NuDBfZVGZK
xJzoi3BitIUOsOHYZfUe2Vf1G5Uf6VMsJc2niO/rcPo8a35dfBudIiU93ilh
YWhHekBKgqKXn2GukYlCm1JSuGwxj1yfkoqro3/n7rLpV6uJO97WNPiyM9sj
D+/VGJ9Hd/GMFM4K08oq10SnZyZGX6fmSkkPZp8u7egNKQmKHpaSut2WVJbJ
BJbwbXRKOGtTzkqVz79IzS1OZwin76/KY6w4sab+zMQWx+GTju0p5pMY8qsF
o7NWgSUTmlLRJjNXSnqth923nGVrt0hJUPSws03P27K861hNCWeF5fN7KlpP
tNpobZkFoy8+wY1T6oYqnEjnWuyp1cGWWVE4t9ieKX2LXpxy3CMP7PBclJq1
nB7t8HxKqslQmaWmX2PUtw2+cfd49mbKpp6RkqDoYbevT9qWbunkZ7sxJYXF
ahqTT0mrqH761j1yOOxISdFZ+ZQ075Hod/DyqafmC3tS0iPZlXn1/SMlQZGU
NKjfFi6u8D2d/E6NUlIYUsJb8dXcypakYleYnhodus8bEZldc2JKqvyiXc0T
KCnpJezHGpW9JCVBkZQ0qLtSUqMP5OlH62dJlRM3PUuKHpbRKfVtrvf44bB6
KpcvtppyPCXVfOlOSnoJ+7GGlARnedgd75O2Je/GZ0k8W1cpKSy2CkSZHORZ
0lm2PtRbTsnHomgOyk+Ukt7MfqwhJcFZpKRBSUk00ltKyjepmJJSdZ7o8aed
E1PS/Huir8zEzNtM4UyYatAxXGo1uleflizll920on011K/o+Nkp3GQpCc4i
JQ1KSqKR0wdR9NZlOTG8vcm/TdUcrfOzOMs1Ot09+7STufMMS4ZTMj8pOvGv
uKJn76OXyGeB43GjuMYWiqvYMfSkJDiLlDQoKYlG3jOIzqLHvqQkmpKS6svU
LCUlQZGUNCgpiUbeM4jOosdSpp7c3RkcNW1JScudHn29KpZ6kZkbNm81a1lm
dRCmmhF9HZ1VbEy8ExekJCg6cvmovjq93bm77EtKopHKI3bfgb0cEY2GRnRd
rVd0wVrg5VYDLfU2epKZgvySKhN9EV02HPjLWcsy9c2ob1W0klTnRElJULTj
RqLpzf8jtegxKYlGLggvl9UvJcFj1Kek1MTMrPyL4tx8mdWnpsVqUyGuWElm
SkhKgqKtd+/uB444sfekJBqRko6sEWhk6JSUavmOZ0mZSjJTgB3qU5LnR6c4
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
                   "], {{
                   0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 4->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
Nm3gEVLSY0hJp0ttyHL6waC0afoRc51NP6t5zK7/kpKgSEoalJRUX5uU1GFK
2rSNfZKSriQlne6RKam3RXomJUGRlDQoKWlThVJShylp02bu41nSQPIDc2tK
Wo33F6ak4olua0paVRg9qS7LLF+sXkcLh29TjYwWDkumGpxqRn6lmemDkpKg
qHgipU9S0tY6wwv6wQpPadjx+qeRU9KmLe3NVJGS5uNt9fr7tqbY21JS5o53
R5yJvn5PSvpkL/GZ6eFemH7NPqu3mReZAmGZVbFoZsm0KlqsvhmZlabWMjQp
CYqkpEFJSftq3pGSpmrnNrW+ZCqzLIXTw8LRMqvy0cWlpHyEKb7Oz3pnSlqN
qUlK2mjVe+E5KrUhUyJHLCsJy+RfLNc+BfEknJJqRrHwqmTY4Mp6UhWGE8cl
JUFReOZkCFLS7sqHOObrWxgNLHNsKb5OTdy07JGUtGlju3IkJU1/eGwkJc2i
KWl5l3tWSvrWuXpbX/8ovZ0JDpkCn0RSiKaMmqCRDyDtUlKqGZX1SEnAR0oa
lpR0pP7+D/ti85b3kGelpGL5zLqOpKSa7e1QVynpDXakpHDZ+fX3xert1mqj
lkfIvSWjB+1cLFrgUxcfwmWLJcMX0dry5YuFU7NqmpGvMDVxXFISFK3Oq4xC
ShpiLbtlbmDCe6ETnyVNsUC0mpVZ3dvUp5h8XEoV8yxpOXf3s6TVsnPl+76J
N0pvT0G4CKdElwp7fvpD0AinR6es9mD07aqGVW3R8qlVhy0J25Nqf7TZ0ZWm
emxcUhIURU8F9E9KytfQj1M6IVPblE1JS5XfuJuCTLRavMWzpOhWd246lpJm
UtJXfuBMJ6WkKfEs6akpKX/qOFj58XrG8rAtlZKg6MiNHDeSkvI1/MVf/Jse
/g7eh9RErXxKyuSgTSmp8lnS7o1dbs7xSq6xOyWtFpzSX8N7YUrKzN2dkqKJ
aTrwjbsru2W3mlPHkcpPqWcsD9tSKQmKpKRBSUn5Gm7PR0dSUk04WhY+NyWF
D4/yC0pJ9UEpn5L2RaTHpKS8rSlpHkSrKX8U/F5pVewxKano4IZsOk3tq/xI
gRYes+u/pCQokpIGJSXla7g9H+1ISau7jstS0hR7VBRNSfmgdNaZZJQz0r6U
NO/l1FspKWprSmr395je7jxlFAtvPVUe95hd/yUlQZGUNCgpKV/D7fmoPiWl
PpI9mJKmQGb6qswqUkUXb5eS6rf9XvsSTYu/IbrrICnpdFLSVo/Z9V9SEhRJ
SYOSkvI1FMPLUmr6PHdVMlxwR0qaKznYD9HAcsvfuWeS/s9LUtKVpKTTnT5g
5xNa9PXqjBeeAMMCn19vUcLy0aWii5yysY/Z9UCl/H0a3ZKS8jXU5Jfwdc2L
1eutKakYjrb2w1NTUn0P3CW8/bvR3Z3R3N0d/Iu7O+McJ27I9Gu0WVVeMzdV
JrNs/Uqnk4LSY3Y9UOlJ5/xXkZLyNexLSTVTaioPU9KO+6vKwm1uA3fas7cO
9wCww4njK6xqqotLn0UaWlWymhKeZzIvinN3cDqCF2pxb8MFpKR8DY1SUk3N
q6V2D7FrBmZ0Lf2cFjppBjzSWeMrdRr5VKek+fWqTCbjSEkH+V0SFPVzO8Qm
UlK+hvr88lWTkrZGpHmpu/rh4Io6OTn00AZ4pNNTUvQh0aZiqRc1j5CkpE2k
JCjq5EaIraSkfA2bniUV3x55lvTZO8puT0nz3NtPEbc3AB7pxJEVPVGspqwe
FVW+DV+kClTWs3sDdy/bJykJinq4BWIHKSlfQ6OUtDUorT7b3DTcOklJc5l7
TxROU9BC05H1mGH7mA1ZkpKg6PabH/aRkvI1tEtJm4JSdFsq49KVA7NyXfee
LpypoIVGI+sxA/YxG7IiJUGRlDQoKSlfQzG8rETnpqZEl6pPSct2Zgp0mJLm
wrecNJypoIXTR/ST7isesyEhKQmKnnQ2exUpKV/Dpl8Ptfur/zJbWLLblDQv
cv2pw8kKGjG4Qs/uEykJiqSkQUlJ+Rpuz0f1KWnZ7GX5zlPSvODFJxDnK2hk
9YT97ubc4z09ICVB0RtOBY8kJeVruD0f7UhJc+NvuUYfWd3FrXXKggtMr3R3
r19HSoKit50WHkNKytfQj4NbcbArNq3ueA2XNfjKngF4HikJii6+E+MsUtLj
TYv/x8cFfXLWKsZqLcA7SUlQJCUNSkp6vFU/XBCXTqxcUALomZQERVLSoKSk
x0v1Q7sxe261F5xbHCoA+0hJUCQlDUpKerx8P7R4tNSi5wd6/gXwHlISFElJ
g5KSHq+yH84dwu2eUrXbrQ4YgK2kJCiSkgYlJT3epn4469FS6+c+Q3xXEODx
pCQokpIGJSU93r5+OBiXrvlXF05fi2MGYBMpCYqkpEFJSY93sB92D+1r+v/e
H1U5xgCAPClpUFLS453SDzseLV3Z/3f9qMoxBgDkSUmDkpIe765/l/v6/j/x
LLRjG+e1OxkCADM3BoOSkh6v3b/Lna/5rv4/61yUqWSKWa3a4Qe8gd8lQZGU
NCgp6fGa9kN+4N+4C045IxVrWBVYPVo6uHaA/klJUCQlDUpKeoPWXZF6tHT7
Ljh4XpKSAPKkJCiSkgYlJb3BZV2xikud7IIjZ6dN3yrscNsBmpKSoEhKGpSU
9AbXd8XypzoXrzqlUVAKSzoZAu8hJUGRG4NBSUlvcO8/pNDPjtjdmMw362qm
AzyVlARFXd0LUU9KeoN7/xWFT2fnh32NWX6VTkoC+JKSoKiruyDqSUlvcG9X
rPJFJ/tla0uWcS+6YFdbB3ANKQmK3B4MSkp6g05S0nJKJ3tnU0umXzVtGMAQ
pCQoctswKCnpDXpLSfP0Ts4bNc2YAte0DaBnUhIUuW0YlJT0Brd3Rb4BneSO
4lfppCSAFSkJitw2DEpKeoPbu6KyAT2cRqJtEJQAoqSkGpnLR/Tt6vricjM6
9wyDkpLe4Pau2NSAHjJIZVa6pW0A/ZCSKmWCTzETudyMzj3DoKSkN7i9K/Y1
4PazSjEr3dIqgH5ISZUy2Sd8nBQWc8UZmnuGQUlJb9BDV+xuw+2RJJ+VbmkS
cLp5RBvam0hJlfIpKXy7KuaYHJqzyqCkpDfooSuOt+HeYJLKSrc0BmhhOcyL
ozv8Cu6N2vdNkpRUKdxNU3CwTbFAFBZjOLePU/aRkt6gh644sQ3HzzZX38Fk
ndUtUOPf/MVf9PN3d2esLcdjcWz+LPBP/+n/0sPfvacRKalSuJum6pTkejE6
u29QUtIbdNIV5zaj5qqRmvtz+o/Pjx7+Otk1vMfPbDL9HAEd/PWQklanESmJ
dmpS0qfuN0oMR0oalJT0Bp10RaNmZE4+qVlSEq8lJWWkElOq8O35SEoaSCbv
7JvFQKSkQUlJb9BJVzRtRvhoKfMtBSmJ15KSMubvO9UMTCmJelMgnLWcEp1V
8w0K+mTHDUpKeoN+uuKClsznotQl6SMlZdXfImZy6EAetr3F5klJGeGJItOZ
qZT0XWr19jslvFVeFgsrSRXuKiX5XRIUdX7hIEVKeoN+uuKylkTvMZZzb89H
naekfBwI+7PDDan0sO0tbk59Spr/jYXv61SBaPknpaRUZ+ZjS+ptzevl2/CF
lNSznk8O3MiBMSgp6Q366Yp7U9K89lVKWpVZTYxGm3lWtECm/HApKTy3p+4Y
O9yWGg/b3uLmVKaYMP4Ui6XC1CgpKeyufGdO2dgy1aWh5cTMrJ6/cSclLWWG
3qYyPIx9PSgp6Q266oprGhO9vZlPU1MQWJZTpkVQiuaaVfwpRqTo67FS0vIM
n7n0X9jM0zxse4ubUxNkwjKZlLTKU+OmpFDxNJJ/ljTFHgNlJkYrzKxFSupQ
ZugtC6Te8lR29KCkpDfoqivOakymnsy9zWxfSqqZUpmYoo+x+pfp+XlusYbK
3XRvybnwlN7e4Xz2pqR8LJqnbE1Jd/fHUcVv3E1B/IkuPqW/VpdZi5TUoczR
8kncKkcn8jD28qCkpDfoqivOasyReqbzUlLq+3XR8tEKT+mNE6Wu78sCqQUv
aeDJHra9xc05kpLCNLR68YZnScu5+1JS9FnSbGtKijaSbqWOtKsOau6R2fv0
TEp6g9664pT2TNP6ucCn+kQ0ZZ/pHH9yNCV+shSdcrwrzlW8pkenj3sJeNj2
FjfnlGdJ70xJ4dxiSppTTCb1rKbk33qW1LkgFf1y5KT2VJ8nE07U7SWDPCnp
DXrriiPtSV2DlqegYv1TXfypLFaZklKr2N0VjdSczMNLf4cbUulh21ts25Hf
JWWeJYVfxntMSsrMrUlJqWdJUtIjFZN1aqn2TeNOPV81yJCS3qC3rjilPatK
aj6vWxY4KyXNgegrlZJS8aq3XVMvfzPwPI/Z3n3/xl3xRfEh1IgpKS+VX+aD
JPotu3DWckr+rZTUv2KyjkanoU8p1LCXByUlvUFvXTFoSqrPPqli0fUe7wqo
t+//lxROXP5JSff+SUkDWd0tu3l+CTt6UFLSG3TYFcebFKakecrWlDR/YBud
GM6Nlk+lpFQlUhK32BRkmv5JSVLSO60uCp8ur9GcS0oalJT0Bh12xelNmq81
NTXnA87xv/r6O9w1VBr0qiclnUVK+pKSjhvxTMImg14vkJJeorfeaJSS6gtL
SRwRfXA5xN6Uks4SPm6+0Y39ICWd4t6dSGu3j1P2kZJeosPeOLdJm2q77VYm
5sRO4HrLPTjE3oz+sOiuv7s7gxNISacY4uzBbi73g5KSXqLD3jixSXcljg57
tbVlV4t7n1+/6vnyruCdpKSzOHU8mEvDoKSkl+iwNzps0lYP2IQdUk9PXtgb
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
Zs87ep+3RfVO2XYpqVIm+BQz0Sl7andKOmvtxyu5fRW7ufQPSkp6IT3TVE33
iksM6nkH7fO2qJ6UdKVM9gkfJ4XFWgSl+qVOLHaBfloyc8UflJT0QnqmtU1X
n5qTpxMsnVjdy833b+Men8/bonqnbLuUVCmfksK3q2JnHZBbg1L92vsZMv20
ZPaSU8rzSEkvpGda29HD+cvWjk//4ERTzOfXS/9YB+fztqjeudsuJVUqpqRP
IpKcfkAeT0nhMbOqMPp29WK1UZWzMvWELUm9vt6Nq+YIKemF9ExrB3s4PJmH
9zNwi9T9WzhrFM/bonqnbLuUVCns0mgcCEu2OPnXVxg2MjU9WrIy8tTMytRT
04BwE67k2j0oKemF9ExrZ/XwlFZZ7HqnbLitu0Vlg1Nvwxpu3p5fnbJFw21d
3rR325dOT0k3d+WvDm7LartSU6Zfe35K74jWTYqWifZG2PjU5tz4IjXxeqcf
TlxDSnohPdPa6Rey/OX75+sfnx89/LU4tKYH/X+Ho1t3+17btO/CO6XMTcjP
Kb/99lc9/GW2btMWrUr+i3/x3/fwt/vI3L3tSy1S0v/wx3/cw1/TSFIZhZqm
pKKahnWekua3UhI7SEkvpGdauyYlLa8It99jS0m7t+72vXZk3823H9HFh0hJ
m7ZoVfL2fHQwJe3e9iUpqXKjomfv5azllOissGRrUtJZpKRBSUkvpGdayAeZ
FjXP9U+D32kXN//2fCQlZdqfn3t7PtqXkipL3p6PWqSkraSkpypmtPBKlCqc
unItX2RmpSopLr5saruOqhE2iSFISe+kc04XPYEf7+eaSqbB77SLW3d7PpKS
Mu3Pz709H0lJ9fbVIyXRv9t3pZQ0KCnpnXROCy1SUuV6b7/H3n2nXeyl+pS0
6vkeUlLN1t2+1w7uu8yCw6Wk/MfRYeHb89GJKemyU1ZNx96ej46kpMqPti64
TLgz/+qhE+yLQUlJ76RzWmgUkYoVfu+0V6uuvzeey89LRatK1b+q4cjWRRef
tuSdZeFNCzZNSfmt25pl6vfypoOh0dbNIeUrDC/z9CkQLhjWE60zumCLrdua
ZVaiBW58lnSNmo7dmmXCKUv5wo1SUn4Dl9NTxY4rtuTx+tnwflrCJlLSO+mc
RlpclcKbq9UqpkWQWd701twYr+6oU7NSE8MaTtm6VYHHpKTo1u146FOzl6N7
rWlKim7dKhBFU1I08kyLgJPKRPV1Ntq6HXEm+jo/8dkpKdqxB1PSauL8+ruu
i1PSagPD7U1NPK7Y1fX1nN62t2m0i2lNSnonndPI8etRsc5wFdOulBQWSC1e
Wf++Tc5v2ueklPStcPV2U80npqTV1rVOSfXVtti6MK0Up0SfDRXnFh8ttdi6
IylpX4EOU9LW3yXVdOzWiBQuMsVS0i3PklYbmKqzxU4sdnV9Pae37W12dDs9
kJLeSee0s+8yVFNh6jI3ZVPMt/Aqy6wmVt6KRycu32Yuyvt8tqekWRiXvi9W
b/dVfuLWnZWSvnWu9vKmalts3b6UlC+2LyW12LrdKWn54vt69d9NlZ++dTf6
dJaSGm1j/Xk+XOqskvUXoI97hsM29Tn9kJLeSee0s/UaVFlb5gI3xX46FA04
UyI6hffVYVWZhDVP2bHVNVu341nSaqm55vC50ojfuIvumkykray2xdalEtCU
CESz/Nfq7nqWtCqwIyXNVhOX6WlrzTu27kSnPEtaFdjxdbsp+P3RLJWe7vrG
XWqpHes60pL6SsLmzVVNQSiLFki1ZHerhvOSzXweKemddE5TB8+H4RUtf42b
snfI84Lh44aDz4+id+9HNja1dQdTUmripppPSUmZfbcpzkR3x3JH35KSogW2
pqRznyUtK2yxdcefJYWv91W7detOdDAlRQvse9xTk4a2Vr6jQ/IbWD/xuGJX
V1ayerGs/LPIQWH5zKyw/mdrtItpTUp6J53T2qYerrltyJxjp3RKCl+Et9M9
pKR8gR0pKRqOpsPfuGuxdaekpPweb5qS8gX2paRU0tmUklavW2zd7pSUmji9
5llSvsDWB0n136yrr/xgSqov0O7++ZSaU9em6dfIExbb9OLx2u1lmpKSXkv/
NDL9qqZYTZ35uanb5tWs1Nt8IKq88W50FZi2//+SwgdGU8wF37ir2brdKak+
FzdKSTVbV5Nf8pEnU6CmqrmSFlt3MCVNQSaaYg+bHpaSiqbBU1LlNm66BNxl
SiSjTywlZZYNNzO11FN1vqNJkZJeS/+0sDoTLt+2uyzOkedrFVuiomXCifli
4fQWB9XU4P8Pu++v0dZtzTLRXZPa3Z2kpLk9YYSZp4eNjy6Yf7uavqynxdZt
jUgry4nR11JSzXftwrerWalFbkxJo5i2p6TMi7Cq9/Tw98C7uxVsJiW9lv45
XfQ0OF+Xm6536/OIRn+N7kVvz0f9pKTh9l30x0TX//WQktr9vTMlXfD38qvk
6uK1fBu+/vx6Bcwsu6z/sm25nZQ0KCnptfTP6VJd2rqrH3+nfXs+kpJ2b93t
+UhKak1KIi/6BOrzspsQKWlQUtJr6Z/T3ZiS+mHrbJ2tu97pW1evRUrqxyld
9HJTLBm9rW8dToOSkl5L/5wu1aW6Gniq01MS12t9kVqmznfmhXdu9QNISa+l
f04XPQ06NwIPJiUNrfjUzGO1U+jDQUlJr6V/WlidCZ0YgWeTksZV+d1CV7Hj
3AwMSkp6Lf3TiK+1A+8hJQ2q/jrlQnac+4FBSUlvpova0bfAG0hJwwn+jYra
lLT8bdG+WeGLsFXR1s6Fo1/YSNUfrblm7aeHGilpUFLSm+midvQt8AZS0ljC
iFSfkj7ZpJOfFb5YZZ/o6qKFw6Wi6SZTc2rtqWqPk5IGJSW9mS5qR98CbyAl
DSQakbampBYviikpbP8nFj3Cemoav6qnvmfqSUmDkpLeTBc1pXsB6MroKSm1
RammVjZ+WU+La7eUNCgp6c10Uc3FItVLq0+06hcEgBuNnpJWSy1f1NScrycf
yvaRkgYlJb2ZLvoEnZA5P6cmbo1XAHC7mpS0+jxw9Xo5MTVrVU++cPQSHNaT
an+43lQNqcaHaznF6RVyDSnpzXTRpxSL5hNp/SL5iQBP4ndJQ3vYdarbzZGS
Nlkl2cpFMlVl6q+s5yxS0kB00eeklFRZM8DDSEnDefC1qdtNk5Lqnf5QLxOg
dix1kJQ0EF30qUtJqYnz29SHFWc2FO4zvdvd3d81KWk4Tz2kex6w3TasN2Ev
He+3VA35mhvtLylpLHopPySjd0qVo1jfMrqe7zqupB8ypKSx1B/GrQ/73ZWP
OBKdQCpleilzQM7Tly9Wdc5TVmWWda7qWU1P1bCJlDQWvZSJPKtZqenRKamJ
MAoHcEifhKSksWw6hlsf8JsiW9OWtCYlVap57pO/4wojTHTKJ8hHxRfROreS
ksail1JRaPesmunQMxf0DJ2zIiUNZOuhKyWdxXmj0ikpqfJFKv6kXqQmbiIl
jeXlvTQFwlnRt6tlM/W3azw04rjN0z9LUtIodhy3xUve8lP61Ef3+aXylYQ1
ZK7Lq2q7kr9VYBb2UrhPo8fVjhdhnfkXqYmbSElj0UtN6V6G46CtoZdmUtIo
jqSkzM1h6k41c3ObX7C43vwtbp9BSUqqV0wl0Z6UkrZyQNbQS03pXsbiiK2n
r76kpCHsO1wrU1Jl+fpb05q11K+3B1LSJqvnRJmJq1nLMpumhKtITc+3pEhK
Goteakr3MhZHbD199SUlDeFgSvqk7/OlpBpS0qBODzVS0lj0UlO6l7FEb06i
1/fo9Eyx45/L7b7Na3TjZHR/SUn9232s1oyd6BA7KyUdrKcfUtKgpKSX00tN
6V4GkjpcMymppob8zUxmvWdpVL/R/SUlde5IRKr5NGPOLPUfg+Q/PAkrXL4N
y0RX1Fsq6a09VJKS0FHt6FsGkklJn1iuWZWPTowuGH3RjpTUlJT0BpmPNQyE
GlLSoKQkdFRTupdRXJ+S8qMj9cnwFAjXEm1t+CJc16YBa3R/pKR3kJIOkpIG
JSWho5rSvYwin5I+QbRJ3SyF08MAUrxnSD11ik5fzso8rqpfpJLR/ZGSXiP6
McKOzxbeSS8NSkpCRzWlexnF8ZSUuo9K1ZkZHal66kNQZcnMFhUZ3R8pqWOn
HJ/L0ZSJSKlh3i4djDX6pKRBSUnoqKZ0L6M4kpIyySiTkjIrnedmngRVNq8+
WGVakmre1kWeR0rq01kRafk6Na6jw2f3hw+V7RmLlDQoKQkd1ZTuZRTFlFT5
Oj9ra4FUCEqV3JGSdg9So5tuHT84NwWfminHjTvipKRBSUnoqKZ0L6Oo+c7M
6uHLnDJWZVKzUnVuKpN/vZyYF13keI/B7U45MjOVFOvPj/HU+A0rz58EipVv
2t6mdpxeuFLlVeMal23yZSvqx772n94nzHQvoxjiWJ1+vYO6t84heowXOuXI
XFWyvM2oqX9KpJ5lbavXq/rDGsKq8pX3M0J336FxjZ9758fnRw9/lx0nV67o
n/yT/7WHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzEVd7ZkZLq23kNKalz
UlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHHbicl9eaWlFRZeFNK
OvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQU9uRkrpy+qcHqbfF
MSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH5LSQmpVZqvg2fB2+
yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4UwxdzcKklocn6nbldRd
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
0nz5i05czl2VDBdMVXJuSqpf3AF5xCm9ZxeQN21PSalFRklJ84aHU6KX0Z9T
fnx+9PBnOK+kksu8K6PfslvNShVYyUSk21OS3yVBkZTUuVRKCtNNOHGZjDJl
UokpXOrghpxektBZvefMQEZl5NmXkqIhq5OU9En8jltKGkgxvFz2JyVB59wL
de5ISsrkneIiTVPSfNSl7i6OrOjlzu09+4KoVcb5CjPOPD0sE87KlEmt65aU
NPdAaFXg9nwkJUVJSV9S0lJmOEffhuP9urZyoehtKv2Y9qakKftUaEfa2nec
pO4llgees82JTu89pwhCU+I7ctf/3Xtw5u+sbs9HUlJU9Kp0lxv7QUpamdK3
IplZqSk8w+3jlLxpe0qa7U5Jq8VbfONu0/mHeo16z05haZKS0jfb89zb85GU
1MgzulRKWslkn9WtcvSm5RlHBStSUud2pKRTniU1/cbdR0pqqV1Qsmv4qvqU
/CoddsInm5LmYqvX9bOkpHs9o0ulpJVwt06LlBS+XRV7xlHByr1XGYqmJ/4u
6eMbdy017UB7Bz6lnPgpPUtazk29zs+Skm70jC6VklaKKemTCESpmxkeQErq
XH1Kmv7w735XTrw4JYXb9fGvN7TRugOdNOjcjcfnMittTUnhIplZUtKNntGl
UtLKkZS0/ISEJ7FbO5eJMCupiWH5aD35Yo1S0tZZ1LimA+0mutXDwbk1JUXL
p2YtU1gxQPXQGw/zjC6VklZqUtKn7jdKPIaU1LlUSrr+T0oaxWUdaE/Rp+gt
zYkXu5rPjTelpFTh/KzKZ0zG6UHhx48pd7d0GylpJZN39s3iAUYc2q/yyJSU
v6Y4IA+6sgOdQOhH6sZ1eZSeHpQyK233LElKutczulRKWspk3uiU6KxB8zIZ
dmjn8tfii122ydes6Kmu70C7jK5M1R/8HllF/lQ5Nf5d0iQl3ecZXSolQdGV
d7+c6PeFPivczQF50C0d6ExCP25MScsCW1NSmHoysyojkpTUwjO6VEqCIvc2
g5KSSLmxA+07ehCmpGnxlZizVpF/2p6JMHP51ev6Wa9NSZ1sSyfNOEhKgiIp
qXOpTyxvcdkmX7OiB7uxD688VKDGdOq/3lB5epwO/NvdldmnvuTxre5EJ9vS
STMOkpKgyC1N51pfajddlC/b5GtW9GC39+HtDYDZ8aMxmobyHx9JSS2E/f+5
4zbmGV0qJUGRlNQ5KYkdeuhD5xY6sfs4LOagTM25p/KX27f5/Uht1HLr6jfz
un6v0KrLKkhJUHT7OCVvkpLYrp8+7KclvNPW29Gz7mB/Lv7bb3/Vw9+TxuBq
W6ZfHy3VV3L79fTiqyqwj5TUuReezx2Qx3XVh04y9O/0z/alpBakJOBKbmA6
98LzuQPyuA77sMMm8XJNv/gkJbUQpqR5ipQEnE5K6lzN+Xy+0P9Y/K8GV1Ll
lxM7OZ87II/rsw+Pf4VpuunH2jxJu2S0Wsvt+eh5KWklekIo7lwp6cvvkqDI
/UbnasLLKv5EU090+vTr/4mjk/O5A/K4bvvw4Aln30fH0PSxUWqNt+ejl6Sk
cGJ+d2/97DEzt+bS2cNVNUpKgiIpqXP5M3A4N5WSfiweM6USVifncwfkcZ33
4e7mrT4xPqk5PNbFyWi16kxs+Vq9rp8VvpWSlhNDqwKVEab+80kpCR5JSurc
1pRUH6Am37h7tM67sfLMs7rJkZIoSt0bX9+MfHIpvq4sVgxKTx0pqb0cTUmr
04iU9JGSoMLtlxLyWqSk4lwp6QGG6MatjUwlJughGS3tSEnhIqlZW1MSs8+u
lDQtPmOcst/KkJLgSebzBn3Kn34zc8NZk2dJbzJKN246Bc03OaNsHU2t7n67
Mm1MSdHyqVnT4it5b/7GXVQqHC0LbEpJqWS0JCXBI/V5fWG2NSWtolA4K/UJ
mJT0MGN1Y2Vrx9ooGuk2GS1tSkmpwqlZYciSkmaZfDQX2JSSlkEpdcXcF5Sk
JOhc/9eal6sJLzWpJ5qepKQHG64ba85Fw20UZ8nf93ZoU0ra9yxJSooqHiRS
0peUBEUDXXTeqebcGz70nwKV5Xs4nzsgTzFoN2aaPdZNMqcYd6dvTUn5NDQd
+13S3Z3Rl30pqfJzSCkJnmTQC9B77Dv3tviTksYybjc6Kb3ccI+NonakpPo0
JCUdseOzx+WLqM6vqlFSEhSNfiV6PCmJfUbvxtHbzybPSEZLmfAyb+nq9Y5Z
xYgkJYVeeFWNkpKg6ElXpUdKfXJ1i8s2+ZoVPdsDuvEBm0DexeeWK00V+WX3
36bKH9m9R0xS0t+QkqDoqVeox/t9oc8K93E0nugBnekE9TzXf/ByCympW1LS
l5QERY+/VD2VlETRYzrzMRvyZm9IRktnPsU/7O7O6Mvde+MXN/aDlARFt49T
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
8tEaVrWl6mk31oY+8IZu/JeUBEVPvdMYZaOK/T+d/buk/NwbU9K8veGU6Kp/
Tvztt7/q4W+Ugw1SHMPHXdCH+QQUNmOZdFLFKus5fVvaVXuNoRv/JSVB0SNT
0pO2KBNhUtlnSj8qiiaprlLSJ/tJ6arY7flISuIxHnktuNI1KSl8HX1+FJaJ
vgjPtPm4dK6hj7ehG/8lJUGRK2Pn8hFmvq6FU4qzUjXcnpLmDf/8+rW6sMDt
+UhK4mEczLvdkpIqnwGF4ah+cSkpaujGf0lJUCQlda4mv1zzd/1xEia+1dzb
85GUxPM4nve5JiWlHgZVpqQdExtt1+iH2ejt/0hJUEFK6pyUtC8lzYusXn/f
1hSTkngth/Q+rftt9SRonrg8Q65ehItEA1FYT+stGv0YG739HykJKjwsJT1p
W77CpHCjHjZ8WaAYXoqv87OkJF7LUb1D6067fqe0W+PoB9jo7f9ISVDh+rvf
pp60LXm/L/RZ4RE1YW1fSpr+8NhISoI8B/ZWD0tJTVc34tHVw+eHJ5KSoGjo
MR560rbkPTslLUlJcBfH9lZNH75cdr1uvaJBj6toswfdlo+UBBWkpEG9JyWt
zEdsTaLJZKJw4r6IJCXxbA7vrfRY3tD9s2r80NsiJUGRlDSo16ak2e6UNJOS
oIYjfJOHXVXPNXrPSEnwKg87nz9pW/KkpB0pabVI5mt4UhIsOci30mOhZ/TJ
ciuG3iIpCYqkJAZVGWoyPzs6/oukt6Wk8Ddir3J3999MD2zl+Plk/8/gg5o3
5DFbBKQ86dz16fustbxSzP/NX0an4OF+Zn9F517TIbccRdPGlDT3T+qtlJTy
sJuc3fTD1m2Pp82bNOqTQXvjMnf3+vkmKQle42HnsW63Zfr1GX3qNJsqFs7K
1x+toanre346kGvO/ev2qDvFs7dunzf3yaZt/1n4x+dHD39v3mWc7mE3TkDK
wwZ7n9uSCTWVeSfzOr86KUlK2u1hJ4dzvblzUtsePZvdno+kJE73jOHvd0lQ
9IzBPutzWzKtuislrb4OEX37iaW55aziA6xU4VNISa09dbvO8vL+yZ+75im3
5yMpiRYecERJSVD0sJTUp95S0ir75MNONDFF01P4NrqKs0w9OX3rbvfIjTrd
U3upcrtWxcKlJimJS9x48r/XkU6TkqDo+ECjKNPD4awpnXFqzo3hIpvKTImY
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 5->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
ISU9hpR0utSGLKcfDEqbph8x19n0s5rH7PovKQmKpKRBSUn1tUlJHaakTdvY
JynpSlLS6R6ZknpbpGdSEhRJSYOSkjZVKCV1mJI2beY+niUNJD8wt6ak1Xh/
YUoqnui2pqRVhdGT6rLM8sXqdbRw+DbVyGjhsGSqwalm5FeamT4oKQmKiidS
+iQlba0zvKAfrPCUhh2vfxo5JW3a0t5MFSlpPt5Wr79va4q9LSVl7nh3xJno
6/ekpE/2Ep+ZHu6F6dfss3qbeZEpEJZZFYtmlkyrosXqm5FZaWotQ5OSoEhK
GpSUtK/mHSlpqnZuU+tLpjLLUjg9LBwtsyofXVxKykeY4uv8rHempNWYmqSk
jVa9F56jUhsyJXLEspKwTP7Fcu1TEE/CKalmFAuvSoYNrqwnVWE4cVxSEhSF
Z06GICXtrnyIY76+hdHAMseW4uvUxE3LHklJmza2K0dS0vSHx0ZS0iyakpZ3
uWelpG+dq7f19Y/S25ngkCnwSSSFaMqoCRr5ANIuJaWaUVmPlAR8pKRhSUlH
6u//sC82b3kPeVZKKpbPrOtISqrZ3g51lZLeYEdKCpedX39frN5urTZqeYTc
WzJ60M7FogU+dfEhXLZYMnwRrS1fvlg4NaumGfkKUxPHJSVB0eq8yiikpCHW
slvmBia8FzrxWdIUC0SrWZnVvU19isnHpVQxz5KWc3c/S1otO1e+75t4o/T2
FISLcEp0qbDnpz8EjXB6dMpqD0bfrmpY1RYtn1p12JKwPan2R5sdXWmqx8Yl
JUFR9FRA/6SkfA39OKUTMrVN2ZS0VPmNuynIRKvFWzxLim5156ZjKWkmJX3l
B850UkqaEs+SnpqS8qeOg5Ufr2csD9tSKQmKjtzIcSMpKV/DP/kn/3sPfwfv
Q2qiVj4lZXLQppRU+Sxp98YuN+d4JdfYnZJWC07pr+G9MCVl5u5OSdHENB34
xt2V3bJbzanjSOWn1DOWh22plARFUtKgpKR8DbfnoyMpqSYcLQufm5LCh0f5
BaWk+qCUT0n7ItJjUlLe1pQ0D6LVlD8Kfq+0KvaYlFR0cEM2nab2VX6kQAuP
2fVfUhIUSUmDkpLyNdyej3akpNVdx2UpKfqoKJqS8kHprDPJKGekfSlp3sup
t1JS1NaU1O7vMb3decooFt56qjzuMbv+S0qCIilpUFJSvobb81F9Skp9JHsw
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
Tw7cyIExKCnpDfrpintT0rz2VUpalVlNjEabeVa0QKb8cCkpPLen7hg73JYa
D9ve4uZUppgw/hSLpcLUKCkp7K58Z07Z2DLVpaHlxMysnr9xJyUtZYbepjI8
jH09KCnpDbrqimsaE729mU9TUxBYllOmRVCK5ppV/ClGpOjrsVLS8gyfufRf
2MzTPGx7i5tTE2TCMpmUtMpT46akUPE0kn+WNMUeA2UmRivMrEVK6lBm6C0L
pN7yVHb0oKSkN+iqK85qTKaezL3NbF9KqplSmZiij7H6l+n5eW6xhsrddG/J
ufCU3t7hfPampHwsmqdsTUl398dRxW/cTUH8iS4+pb9Wl1mLlNShzNHySdwq
RyfyMPbyoKSkN+iqK85qzJF6pvNSUur7ddHy0QpP6Y0Tpa7vywKpBS9p4Mke
tr3FzTmSksI0tHrxhmdJy7n7UlL0WdJsa0qKNpJupY60qw5q7pHZ+/RMSnqD
3rrilPZM0/q5wKf6RDRln+kcf3I0JX6yFJ1yvCvOVbymR6ePewl42PYWN+eU
Z0nvTEnh3GJKmlNMJvWspuTfepbUuSAV/XLkpPZUnycTTtTtJYM8KekNeuuK
I+1JXYOWp6Bi/VNd/KksVpmSUqvY3RWN1JzMw0t/hxtS6WHbW2zbkd8lZZ4l
hV/Ge0xKysytSUmpZ0lS0iMVk3VqqfZN4049XzXIkJLeoLeuOKU9q0pqPq9b
FjgrJc2B6CuVklLxqrddUy9/M/A8j9neff/GXfFF8SHUiCkpL5Vf5oMk+i27
cNZySv6tlNS/YrKORqehTynUsJcHJSW9QW9dMWhKqs8+qWLR9R7vCqi37/+X
FE5c/klJ9/5JSQNZ3S27eX4JO3pQUtIbdNgVx5sUpqR5ytaUNH9gG50Yzo2W
T6WkVCVSErfYFGSa/klJUtI7rS4Kny6v0ZxLShqUlPQGHXbF6U2arzU1NecD
zvG/+vo73DVUGvSqJyWdRUr6kpKOG/FMwiaDXi+Qkl6it95olJLqC0tJHBF9
cDnE3pSSzhI+br7Rjf0gJZ3i3p1Ia7ePU/aRkl6iw944t0mbarvtVibmxE7g
ess9OMTejP6w6K6/uzuDE0hJpxji7MFuLveDkpJeosPeOLFJdyWODnu1tWVX
i3ufX7/q+fKu4J2kpLM4dTyYS8OgpKSX6LA3OmzSVg/YhB1ST09e2BurTX5h
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
87ao3inbLiVVygSfYiY6ZU/tTklnrf14JbevYjeX/kFJSS+kZ5qq6V5xiUE9
76B93hbVk5KulMk+4eOksFiLoFS/1InFLtBPS2au+IOSkl5Iz7S26epTc/J0
gqUTq3u5+f5t3OPzeVtU75Rtl5Iq5VNS+HZV7KwDcmtQql97P0Omn5bMXnJK
eR4p6YX0TGs7ejh/2drx6R+caIr5/HrpH+vgfN4W1Tt326WkSsWU9ElEktMP
yOMpKTxmVhVG365erDaqclamnrAlqdfXu3HVHCElvZCeae1gD4cn8/B+Bm6R
un8LZ43ieVtU75Rtl5IqhV0ajQNhyRYn//oKw0ampkdLVkaemlmZemoaEG7C
lVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6m1Yw83b86tTtmi4rcub9m77
0ukp6eau/NXBbVltV2rK9GvPT+kd0bpJ0TLR3ggbn9qcG1+kJl7v9MOJa0hJ
L6RnWjv9Qpa/fP98/ePzo4e/FofWzzr/+I//XQ9/jbbu9r22ad+Fd0qZm5Cf
U373u3/bw19m6zZt0arkX/zF/9TD3+4jc/e2L7VISf/PP/gHPfw1jSSVUahp
SiqqaVjnKWl+KyWxg5T0QnqmtWtS0vKKcPs9tpS0e+tu32tH9t18+xFdfIiU
tGmLViVvz0cHU9LubV+Skio3Knr2Xs5aTonOCku2JiWdRUoalJT0QnqmhXyQ
aVHzXP80+J12cfNvz0dSUqb9+bm356N9Kamy5O35qEVK2kpKeqpiRguvRKnC
qSvX8kVmVqqS4uLLprbrqBphkxiClPROOud00RP48X6uqWQa/E67uHW35yMp
KdP+/Nzb85GUVG9fPVIS/bt9V0pJg5KS3knntNAiJVWu9/Z77N132sVeqk9J
q57vISXVbN3te+3gvsssOFxKyn8cHRa+PR+dmJIuO2XVdOzt+ehISqr8aOuC
y4Q7868eOsG+GJSU9E46p4VGEalY4fdOe7Xq+nvjufy8VLSqVP2rGo5sXXTx
aUveWRbetGDTlJTfuq1Zpn4vbzoYGm3dHFK+wvAyT58C4YJhPdE6owu22Lqt
WWYlWuDGZ0nXqOnYrVkmnLKUL9woJeU3cDk9Vey4Ykser58N76clbCIlvZPO
aaTFVSm8uVqtYloEmeVNb82N8eqOOjUrNTGs4ZStWxV4TEqKbt2Ohz41ezm6
15qmpOjWrQJRNCVFI8+0CDipTFRfZ6Ot2xFnoq/zE5+dkqIdezAlrSbOr7/r
ujglrTYw3N7UxOOKXV1fz+lte5tGu5jWpKR30jmNHL8eFesMVzHtSklhgdTi
lfXv2+T8pn1OSknfCldvN9V8YkpabV3rlFRfbYutC9NKcUr02VBxbvHRUout
O5KS9hXoMCVt/V1STcdujUjhIlMsJd3yLGm1gak6W+zEYlfX13N6295mR7fT
AynpnXROO/suQzUVpi5zUzbFfAuvssxqYuWteHTi8m3morzPZ3tKmoVx6fti
9XZf5Sdu3Vkp6Vvnai9vqrbF1u1LSfli+1JSi63bnZKWL76vV//dVPnpW3ej
T2cpqdE21p/nw6XOKll/Afq4ZzhsU5/TDynpnXROO1uvQZW1ZS5wU+ynQ9GA
MyWiU3hfHVaVSVjzlB1bXbN1O54lrZaaaw6fK434jbvorslE2spqW2xdKgFN
iUA0y3+t7q5nSasCO1LSbDVxmZ621rxj6050yrOkVYEdX7ebgt8fzVLp6a5v
3KWW2rGuIy2pryRs3lzVFISyaIFUS3a3ajgv2cznkZLeSec0dfB8GF7R8te4
KXuHPC8YPm44+Pwoevd+ZGNTW3cwJaUmbqr5lJSU2Xeb4kx0dyx39C0pKVpg
a0o691nSssIWW3f8WVL4el+1W7fuRAdTUrTAvsc9NWloa+U7OiS/gfUTjyt2
dWUlqxfLyj+LHBSWz8wK63+2RruY1qSkd9I5rW3q4Zrbhsw5dkqnpPBFeDvd
Q0rKF9iRkqLhaDr8jbsWW3dKSsrv8aYpKV9gX0pKJZ1NKWn1usXW7U5JqYnT
a54l5QtsfZBU/826+soPpqT6Au3un0+pOXVtmn6NPGGxTS8er91epikp6bX0
TyPTr2qK1dSZn5u6bV7NSr3NB6LKG+9GV4Fp+/8vKXxgNMVc8I27mq3bnZLq
c3GjlFSzdTX5JR95MgVqqporabF1B1PSFGSiKfaw6WEpqWgaPCVVbuOmS8Bd
pkQy+sRSUmbZcDNTSz1V5zuaFCnptfRPC6sz4fJtu8viHHm+VrElKlomnJgv
Fk5vcVBNDf7/sPv+Gm3d1iwT3TWp3d1JSprbE0aYeXrY+OiC+ber6ct6Wmzd
1oi0spwYfS0l1XzXLny7mpVa5MaUNIppe0rKvAirek8Pfw+8u1vBZlLSa+mf
00VPg/N1uel6tz6PaPTX6F709nzUT0oabt9Ff0x0/V8PKand3ztT0gV/L79K
ri5ey7fh68+vV8DMssv6L9uW20lJg5KSXkv/nC7Vpa27+vF32rfnIylp99bd
no+kpNakJPKiT6A+L7sJkZIGJSW9lv453Y0pqR+2ztbZuuudvnX1WqSkfpzS
RS83xZLR2/rW4TQoKem19M/pUl2qq4GnOj0lcb3WF6ll6nxnXnjnVj+AlPRa
+ud00dOgcyPwYFLS0IpPzTxWO4U+HJSU9Fr6p4XVmdCJEXg2KWlcld8tdBU7
zs3AoKSk19I/jfhaO/AeUtKg6q9TLmTHuR8YlJT0ZrqoHX0LvIGUNJzg36io
TUnL3xbtmxW+CFsVbe1cOPqFjVT90Zpr1n56qJGSBiUlvZkuakffAm8gJY0l
jEj1KemTTTr5WeGLVfaJri5aOFwqmm4yNafWnqr2OClpUFLSm+midvQt8AZS
0kCiEWlrSmrxopiSwvZ/YtEjrKem8at66numnpQ0KCnpzXRRU7oXgK6MnpJS
W5RqamXjl/W0uHZLSYOSkt5MF9VcLFK9tPpEq35BALjR6ClptdTyRU3N+Xry
oWwfKWlQUtKb6aJP0AmZ83Nq4tZ4BQC3q0lJq88DV6+XE1OzVvXkC0cvwWE9
qfaH603VkGp8uJZTnF4h15CS3kwXfUqxaD6R1i+SnwjwJH6XNLSHXae63Rwp
aZNVkq1cJFNVpv7Kes4iJQ1EF31OSkmVNQM8jJQ0nAdfm7rdNCmp3ukP9TIB
asdSB0lJA9FFn7qUlJo4v019WHFmQ+E+07vd3f1dk5KG89RDuucB223DehP2
0vF+S9WQr7nR/pKSxqKX8kMyeqdUOYr1LaPr+a7jSvohQ0oaS/1h3Pqw3135
iCPRCaRSppcyB+Q8ffliVec8ZVVmWeeqntX0VA2bSElj0UuZyLOalZoenZKa
CKNwAIf0SUhKGsumY7j1Ab8psjVtSWtSUqWa5z75O64wwkSnfIJ8VHwRrXMr
KWkseikVhXbPqpkOPXNBz9A5K1LSQLYeulLSWZw3Kp2SkipfpOJP6kVq4iZS
0lhe3ktTIJwVfbtaNlN/u8ZDI47bPP2zJCWNYsdxW7zkLT+lT310n18qX0lY
Q+a6vKq2K/lbBWZhL4X7NHpc7XgR1pl/kZq4iZQ0Fr3UlO5lOA7aGnppJiWN
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
JZ3C+Ho2d1b1iukjlaSK5aWkJQfkPmFsh0ZqUtKmpHP8WdKqeZsGQvRDrYMX
RymJzklJxxlcjyclbRI+J0pNTM1aXYKXwrmrSqKF84sUWziTkkY3VSdiOGgV
W1aKD4ky5YtLhSUzjcyPhcypdS5wpItuz0dSEhlS0kFG1hsUryP06fRQIyWN
boqFcWghGm1u+Sse5zVjYQo++IpO39pFt+cjKSkqmo7vcmM/SEkH3bv7uMbt
45R9pCRCU+JmD841jZOS5gbXz52kpEf72SF/9mf/Sw9/UtK4DKuXkJIGJSUR
CrvOAKeFSz5lr7WpzalZ0bf1lUfrzMSWr9Xr+llS0hGTlPS3pCQo2nSVoR9S
EqHKm0A46OcR9Sd/8m96+Nt6bFde8naksLCGfHIpvs7PkpJ2k5K+pKRN9n04
w+js7kFJSYQyXWekc6JxU9Lc/tbDYUdKChfJzJKSdpOSvqSkWfGEsCrgevoe
9vWgpCRCxa7Tt5xi9JQ0b0W7EbE1JUXL52dl5kpJGVLSl5Q0yz8nqp/I89jR
g5KSCNV/leiCxvBgz0hJ87a0GBGbUlKqcGrW9OuPlaSkTVIp6duZq7ffKVMg
U0O+jJTUoXD/Tr8+OUotdVUDuY1bpkFJSYTqu04nc8STUtK8RecOik0paeuz
pGnLN/EM9pVMflnNWoWmVLGaRaSknkVT0nxOkJLeTErqXGbwXu+yTb5mRc+z
qeuu3Kc8zLRISfP5Icwv4fSaYtGTT6qGc4/hE2ubWv4uKbOIlFQ0ZTPOtD0Z
HUlJDCF1IF186HK9zAFAD37unT//8/+5h7/LjhMH5G47uk5vs8MURJUpEX/C
idHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeYYpEnNXG1rGdJ
A8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNVow08WHMmucy3
YavX9bN+t/hF0nKilFSjmJLCuLR67pNPRmFJKalzqXy0KpB6y4PZ152Tkthk
d+/pduo9PiXNm3lkQBW/C3fNn6G9sjslRZ8lrWrLv+0qJTGrGenFJMUj2d2d
k5LY5Ejv6XkqReNPmIPyxfpPSfPG7liLlNStmpQUJqDoUlISPJuU1DkpiU0O
9p4TAjV2p6TZQClp3uTUuqLTp5407pvBTIf/jbvVxEyxzLqkJOifU2jnpkRK
mi9/0YnLuauS4YKpSs5NSfWLOyCPOKX37ALypu0pKbXIKClp3vBwSvQy+nPK
j8+PHv4M55VUcpl3ZfRbdqtZqQIrmYh0e0ryuyQokpI6l0pJYboJJy6TUaZM
KjGFSx3ckNNLEjqr95wZyKiMPPtSUjRkdZKSPonfcUtJAymGl8v+pCTonHuh
zh1JSZm8U1ykaUqaj7rU3cWRFb3cub1nXxC1yjhfYcaZp4dlwlmZMql13ZKS
5h4IrQrcno+kpCgp6UtKWsoM5+jbcLxf11YuFL1NpR/T3pQ0ZZ8K7Uhb+46T
1L3E8sBztjnR6b3nFEFoSnxH7vq/ew/O/J3V7flISoqKXpXucmM/SEkrU/pW
JDMrNYVnuH2ckjdtT0mz3SlptXiLb9xtOv9Qr1Hv2SksTVJS+mZ7nnt7PpKS
GnlGl0pJK5nss7pVjt60POOoYEVK6tyOlHTKs6Sm37j7SEkttQtKdg1fVZ+S
X6XDTvhkU9JcbPW6fpaUdK9ndKmUtBLu1mmRksK3q2LPOCpYufcqQ9H0xN8l
fXzjrqWmHWjvwKeUEz+lZ0nLuanX+VlS0o2e0aVS0koxJX0SgSh1M8MDSEmd
q09J0x/+3e/KiRenpHC7Pv71hjZad6CTBp278fhcZqWtKSlcJDNLSrrRM7pU
Slo5kpKWn5DwJHZr5zIRZiU1MSwfrSdfrFFK2jqLGtd0oN1Et3o4OLempGj5
1KxlCisGqB5642Ge0aVS0kpNSvrU/UaJx5CSOpdKSdf/SUmjuKwD7Sn6FL2l
OfFiV/O58aaUlCqcn1X5jMk4PSj8+DHl7pZuIyWtZPLOvlk8wIhD+1UemZLy
1xQH5EFXdqATCP1I3bguj9LTg1Jmpe2eJUlJ93pGl0pJS5nMG50SnTVoXibD
Du1c/lp8scs2+ZoVPdX1HWiX0ZWp+oPfI6vInyqnxr9LmqSk+zyjS6UkKLry
7pcT/bbQZ4W7OSAPuqUDnUnox40paVlga0oKU09mVmVEkpJaeEaXSklQ5N5m
UFISKTd2oH1HD8KUNC2+EnPWKvJP2zMRZi6/el0/67UpqZNt6aQZB0lJUCQl
dS71ieUtLtvka1b0YDf24ZWHCtSYTv3XGypPj9OBf7u7MvvUlzy+1Z3oZFs6
acZBUhIUuaXpXOtL7aaL8mWbfM2KHuz2Pry9ATA7fjRG01D+4yMpqYWw/z93
3MY8o0ulJCiSkjonJbFDD33o3EIndh+HxRyUqTn3VP5y+za/H6mNWm5d/WZe
1+8VWnVZBSkJim4fp+RNUhLb9dOH/bSEd9p6O3rWHezPxf/Pf/SPevh70hhc
bcv066Ol+kpuv55efFUF9pGSOvfC87kD8riu+tBJhv6d/tm+lNSClARcyQ1M
5154PndAHtdhH3bYJF6u6RefpKQWwpQ0T5GSgNNJSZ2rOZ/PF/ofi//V4Eqq
/HJiJ+dzB+Rxffbh8a8wTTf9WJsnaZeMVmu5PR89LyWtRE8IxZ0rJX35XRIU
ud/oXE14WcWfaOqJTp9+/T9xdHI+d0Ae120fHjzh7PvoGJo+Nkqt8fZ89JKU
FE7M7+6tnz1m5tZcOnu4qkZJSVAkJXUufwYO56ZS0o/FY6ZUwurkfO6APK7z
PtzdvNUnxic1h8e6OBmtVp2JLV+r1/WzwrdS0nJiaFWgMsLUfz4pJcEjSUmd
25qS6gPU5Bt3j9Z5N1aeeVY3OVISRal74+ubkU8uxdeVxYpB6akjJbWXoylp
dRqRkj5SElS4/VJCXouUVJwrJT3AEN24tZGpxAQ9JKOlHSkpXCQ1a2tKYvbZ
lZKmxWeMU/ZbGVISPMl83qBP+dNvZm44a/Is6U1G6cZNp6D5JmeUraOp1d1v
V6aNKSlaPjVrWnwl783fuItKhaNlgU0pKZWMlqQkeKQ+ry/MtqakVRQKZ6U+
AZOSHmasbqxs7VgbRSPdJqOlTSkpVTg1KwxZUtIsk4/mAptS0jIopa6Y+4KS
lASd6/9a83I14aUm9UTTk5T0YMN1Y825aLiN4iz5+94ObUpJ+54lSUlRxYNE
SvqSkqBooIvOO9Wce8OH/lOgsnwP53MH5CkG7cZMs8e6SeYU4+70rSkpn4am
Y79Lursz+rIvJVV+DiklwZMMegF6j33n3hZ/UtJYxu1GJ6WXG+6xUdSOlFSf
hqSkI3Z89rh8EdX5VTVKSoKi0a9Ejyclsc/o3Th6+9nkGcloKRNe5i1dvd4x
qxiRpKTQC6+qUVISFD3pqvRIqU+ubnHZJl+zomd7QDc+YBPIu/jccqWpIr/s
/ttU+SO794hJSvpbUhIUPfUK9Xi/LfRZ4T6OxhM9oDOdoJ7n+g9ebiEldUtK
+pKSoOjxl6qnkpIoekxnPmZD3uwNyWjpzKf4h93dGX25e2/84sZ+kJKg6PZx
St69J/CVfCNP2djjlTB7Un+edYxxpZqzB3ALKQmKXL86N3X83YDKDLVpY49X
wux5/fm8LXokyQj6JyVBkWtZ5/pMSZueNFVupuNwZc/Tvmbu7oy/01t7+Dp4
tBw/2CoXdPzAl5QERS4ZnZs6S0mn30g7AlN+dss//sf/Rw9/9+6g/qNcfQsv
cNe2H6wk+rqR63uJ53EUwRvccmGl3jROShripm4gk5Q0iJ/988//+f/aw981
e+r08XvxAeZ45jhHEbyBO9XO9ZaS5lbJO61JSaN4SUpqOtJX1c4rSr2Yy2fO
ReGy0XXBDo4ieAP3t/cq9n8+Jc13Bd/XyynLWatFUjXUp6Rl46WkfWp2/e35
SEqq8eCUdOUAT2WZaOpJFQtnRetpswW8yAOOIr9LgiL3t/cqBo1MflnOWiad
MAdFi4Wztqak1Va07KcHqtn1xfCytJq44+29KanyKCr22/UNmx6Xkq7s3nDV
xRefdCZKzVpujpMVxz3gKJKSoMj97b2mmFWBYkRaTcnMqny9NSWxQ82ur3nK
E74OXxQn9pOS8vfnq1nXnL6KDXtGSip2/jVOT0n5emCfBxxFUhIU3X5NfLno
rfJyp9SnpJoAJSX1o2bXH0xJ0ZL5Yv2kpPDUFD1ZXXAGq2lYfYoJp3yFb6Pr
PT0lRbfoYlM67ERfFN9WVniZ+Dh/jYt7+xoP2C4pCYoefBK7wAUXl6mnlMRl
PqempLBYTeU9pKS5Nz7p25LWzatp2O6UtJoYfR2+OJiSwk24V6o9mT7/bPlO
Xb6edrrq5Bs9sh8esDlSEhQ979w1luLle2qZklbZp+ZZkgPmLDW7via/zFLf
owvn1tScWstdPtmUdHvD6iNSWHgqhaDK+ospadlmWtPPoSf1yQO2RUqCIhfN
e4V3XGGBrVEoMysVr1JrSX3jzjFzXM2u3/QsqXLiNNSzpFWB1IK3N+x4SspU
ciQl5Y8xWtDbGY/pnAdshZQERY85ZQ2q2P+Z/JLKPlPwtKj+SVNlSqppOXk1
u75dStoUlG5JSakCNROvb9imr9utyn+rrVmwPiVJRjfS7XnP6J8HbIWUBEWu
pJ3LR5j5Xijz66FM+bBAfUqam3d9n7xE65RUH5SuTEmbylxz+qrJs5URZtbu
WZJT+r10fg291AMpCYpcUjtXn2Ja/6WOE4dQI8UIM98SpyYub8uji0RruCsl
VVp9CHB3c/5GTYqJJqP8M6bdKenu/ngvnV9PX91OSoIiV9XO9Z+S5nZe1icv
Ufmg54I/OzfvrJSUCkSbUtLHYLyPnq+nr24nJUGRlNS5qSc1Tb2mW95gkpIG
MVX8A91f4dvMrNSUYkr6uAW9SabbV6fH5Ul165k2rHbTgvuOjWX9pxxdox+i
o7f/IyVBBXe2g/ptoasKHU5nkZJGURlhLvhb3Yff2CcvVPM5UurtkR132U4/
t/LRj8/R2/+RkqCClDSoblPSx0F1kvAT5hvd3Rldm7pMSZ9H3MgNpNjbq6GU
en1kvU33+LmVj35wjt7+j5QEFdwCde7im+G8rS1v1CfQlbvH5S+ibbulW96m
2M/Tr78am2LpJlXJssCUzsLRxZfHxnLx6MGzqi2sPKwqXKTyqBv6yBy68V9S
EhS5hnbu5975e3/v/+vhb8dx4uiCHhiGF6hMSZ8gLn1K4SKaR6LLRmNyfu1h
/soU2LpI3tCH5dCN/5KSoMh9bOeGTknzJpzbJ8BWhmFrB1NSvpLMlXo1PXwb
LVAfgipL1mxFvuVjGbrxX1ISFElJnXtASvo4zEiLfhK+fJv/qJx6eq+p+pT0
yf5GaVkgfGpTXG+0WCrsZJJafTjK1Jk39AE5dOOBSm48OveMlDRvyyl9wsMU
P1TP309ST++1syklfTYe1avkUlntJ51oorksWmDHs6RKQx+NQzceqCQl3avY
/09KSTXbywvtSEkeLe2m0xopnskzz25qLgTLwmG1qUpW05dv86+jlUdFF6no
sLEPxaEbD1Ryp3Gv1SUmWiCfXL6+r5dTlrOi5ZcTL0tJy62Gr2l7Skq9pYZO
a2GsXs2MqcvqHKvHVoZu/JffJUGRlHSvKfap4KpAJras4k809USnLyden5I+
DjwWVp9LzxPzBT6PuFG5i6473VhdKiUdNHTjv6QkKHKzeq9o5y93SirChNNT
Kak45ZaUlNl83iY1CooFHD9H6L1z9dafxQES/eThlJVW1tlbj72NlARFL7nT
mH6Vmh66oGSmtZ8tKakyE3WVkjKdwHukRkG+QHEWRXrvRJ10ZuXA6UHnzXs8
KQmKHn+P2vkGrtoWtvbxKSnaD7yKlHQjHXiWTnpSSqKSlARFnYeII4bYtPmB
Uea50ukpKf/2lpT02b6/is/srtSuWx4v2ofLicUCHKQbT9G6G1cjIpz+CcbF
XD5aw6q2VD3txtrQB97Qjf+SkqDoqXcao2xUsf+ns3+XlJ97Y0qatzecEl31
z4l//fvf9/A3ysEGKY7h4y7ow3wCCpuxTDqpYpX1nL4t7aq9xtCN/5KSoOiR
KelJW5SJMKnsM6UfFUWTVFcp6ZP9pHRV7PZ8JCXxGI+8FlzpmpQUvo4+PwrL
RF+EZ9p8XDrX0Mfb0I3/kpKgyJWxc/kIM1/XwinFWakabk9J84Z/fv1aXVjg
9nwkJfEwDubdbklJlc+AwnBUv7iUFDV047+kJCiSkjpXk1+u+bv+OAkT32ru
7flISuJ5HM/7XJOSUg+DKlPSjomNtmv0w2z09n+kJKggJXVOStqXkuZFVq+/
b2uKSUm8lkN6n9b9tnoSNE9cniFXL8JFooEorKf1Fo1+jI3e/o+UBBUelpKe
tC1fYVK4UQ8bvixQDC/F1/lZUhKv5ajeoXWnXb9T2q1x9ANs9PZ/pCSocP3d
b1NP2pa83xb6rPCImrC2LyVNf3hsJCVBngN7q4elpKarG/Ho6uHzwxNJSVA0
9BgPPWlb8p6dkpakJLiLY3urpg9fLrtet17RoMdVtNmDbstHSoIKUtKg3pOS
VuYjtibRZDJROHFfRJKSeDaH91Z6LG/o/lk1fuhtkZKgSEoa1GtT0mx3SppJ
SVDDEb7Jw66q5xq9Z6QkeJWHnc+ftC15UtKOlLRaJPM1PCkJlhzkW+mx0DP6
ZLkVQ2+RlARFUhKDqgw1mZ8dHf9F0ttSUvgbsVe5u/tvpge2cvx8sv9n8EHN
G/KYLQJSnnTu+vR91lpeKeb/5i+jU/BwP7O/onOv6ZBbjqJpY0qa+yf1VkpK
edhNzm76Yeu2x9PmTRr1yaC9cZm7e/18k5QEr/Gw81i32zL9+ow+dZpNFQtn
5euP1tDU9T0/Hcg15/51e9Sd4tlbt8+b+2TTtv8s/OPzo4e/N+8yTvewGycg
5WGDvc9tyYSayryTeZ1fnZQkJe32sJPDud7cOaltj57Nbs9HUhKne8bw97sk
KHrGYJ/1uS2ZVt2VklZfh4i+/cTS3HJW8QFWqvAppKTWnrpdZ3l5/+TPXfOU
2/ORlEQLDziipCQoelhK6lNvKWmVffJhJ5qYoukpfBtdxVmmnpy+dbd75Ead
7qm9VLldq2LhUpOUxCVuPPnf60inSUlQdHygUZTp4XDWlM44NefGcJFNZaZE
zIm+CCdGW+gAG45dVu+RfVW/UfmRPsVS0nyK+L4Op8+z5tfFt9EpUtLjnRIW
hnakB6QkKHr5GeYamSi0KSWFyxbzyPUpqbg6+nfuLpt+tZq4421Ngy87sz3y
8F6N8Xl0F89I4awwraxyTXR6ZmL0dWqulPRg9unSjt6QkqDoYSmp221JZZlM
YAnfRqeEszblrFT5/IvU3OJ0hnD6/qo8xooTa+rPTGxxHD7p2J5iPokhv1ow
OmsVWDKhKRVtMnOlpNd62H3LWbZ2i5QERQ872/S8Lcu7jtWUcFZYPr+novVE
q43Wllkw+uIT3DilbqjCiXSuxZ5aHWyZFYVzi+2Z0rfoxSnHPfLADs9FqVnL
6dEOz6ekmgyVWWr6NUZ92+Abd49nb6Zs6hkpCYoedvv6pG3plk5+thtTUlis
pjH5lLSK6qdv3SOHw46UFJ2VT0nzHol+By+femq+sCclPZJdmVffP1ISFElJ
g/pt4eIK39PJ79QoJYUhJbwVX82tbEkqdoXpqdGh+7wRkdk1J6akyi/a1TyB
kpJewn6sUdlLUhIUSUmDuislNfpAnn60fpZUOXHTs6ToYRmdUt/meo8fDqun
cvliqynHU1LNl+6kpJewH2tISXCWh93xPmlb8m58lsSzdZWSwmKrQJTJQZ4l
nWXrQ73llHwsiuag/EQp6c3sxxpSEpxFShqUlEQjvaWkfJOKKSlV54kef9o5
MSXNvyf6ykzMvM0UzoSpBh3DpVaje/VpyVJ+2U0r2ldD/YqOn53CTZaS4CxS
0qCkJBo5fRBFb12WE8Pbm/zbVM3ROj+Ls1yj092zTzuZO8+wZDgl85OiE/+K
K3r2PnqJfBY4HjeKa2yhuIodQ09KgrNISYOSkmjkPYPoLHrsS0qiKSmpvkzN
UlISFElJg5KSaOQ9g+gseixl6sndncFR05aUtNzp0derYqkXmblh81azlmVW
B2GqGdHX0VnFxsQ7cUFKgqIjl4/qq9PbnbvLvqQkGqk8Yvcd2MsR0WhoRNfV
ekUXrAVebjXQUm+jJ5kpyC+pMtEX0WXDgb+ctSxT34z6VkUrSXVOlJQERTtu
JJre/D9Six6TkmjkgvByWf1SEjxGfUpKTczMyr8ozs2XWX1qWqw2FeKKlWSm
hKQkKNp69+5+4IgTe09KohEp6cgagUaGTkmplu94lpSpJDMF2KE+JXl+dIqz
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
                   "], {{
                   0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 6->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3c/q7MyDH2aReJFlbiG+Cm+zMcQeDOOQAYM3Hs/ExAMTMx4I48HwEpJs
vMjGWSW7QMAbQ3CyyOpcSS4kq86ZaX4aHdVf/SmpSnoevrx0S6VSqaSS9Gl1
n/c/+8P/9h/+1//RNE3/8j/5+Z9/+E/+u//8z/7sn/zFf/mf/nzzX/3pv/xv
/tmf/vEf/Rd/+ud//M/++M/+zh/+xz8n/n8/y/7h35qmv3oNAADAyufz+f4X
AADg5ZZBCQAAABEJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiS
kgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABY
kpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAA
WJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIA
AFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoC
AABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFi6MSVNwAhuOT8AANzoxruge2/8
gEq3nB8AAG50412QGzDonEEKALyTlASkGKQAwDtJSUCKQQoAvJOUBKQYpADA
O0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALxTtylp9/+xZbnI/N/QqmSqhvrV
hUul1nukqUfWkl+qZmOjbU71WKZkps7lxGKZ6Ipq6o+2rbjJqTbkO3ZKHGyp
aotvM5uW6aV9zq0NAGAUN94FFVe9uqWsrDNaf3hvma92U5+kKq+ftaOp4fRo
yX1tS0m1ubii4q7MR49iCzfVn2lbTf35t5X7JT+rfq8Vlz1ISgIA3ulJKan+
LrRYbaOUlJm+tam7Y0XlnfnWNtTfyUf3e7Tm+hbW178pfOWbl2nq1imVKanY
LaePZSkJAHinZ6ekcFbljffpKWnHDX/984X6KfuaVFOmfmfVJKCDKSmz7L6j
/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT6402
oLh4ZbXRYsWJ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4tigdRN
8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnTyGJT
N6Wk6JRTSEkAwDu9LSUdnF4sfDyF7W7S7pRUU3lxjfX38NEuWhUoRpLd9e/L
F5mdEm1q5YrCZqeyUn5dlVuxg5QEALzTs1NS5t44v8imu9BTUtKOptbXWVxR
5TGQ2brdKenz65GwqWcqt6Wy/ox8T0annJuSirVJSQAAJ3pSSvqkb1Mr01Dq
pnR3O3fc2NcHt3wztratsnsrm72pTz7pns/Mqu/ATU2NuiAl5d9KSQAAV+o2
JU2BTdWu7jCjtW2dXrm6VA2ZYvVN3dSMsM6aZqdW8VnktfraakrW1JzqmdVS
+frzbctsdWbrolNqNjw6Jdrm4rL127JVo2oBADp3412QGzDonEEKALyTlASk
GKQAwDtJSUCKQQoAvJOUBKQYpADAO0lJQIpBCgC8k5QEpBikAMA73Z6SgM7d
cn4AALjRjXdB9974AZVuOT8AANzIXRAAAMCSlAQAALAkJQEAACxJSQAAAEtS
EgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQ0qN8W+qwQAAAGJSUNSkoC
AIBGpKRBSUkAANCIlDQoKQkAABqRkgYlJQEAQCNS0qCkJAAAaERKGpSUBAAA
jUhJg5KSAACgESlpUFISAAA0IiUNSkoCAIBGpKRBSUkAANCIlDQoKQkAABqR
kgYlJQEAQCNS0qCkJAAAaERKGpSUBAAAjUhJg5KSAACgESlpUFISAAA0IiUN
SkoCAIBGpKQdpt/5vq5cJFNVpv5UPVISAAA0IiVtteyuU3ovE6B2LLWblAQA
AF9S0ibR5z6n11lTs5QEAACNSEmbZPoq/zW5+et54ff0VlNWZZZ1rupZTU/V
UElKAgCALylpk5rnPvnfE4URJjrlE+Sj4otonfWkJAAA+JKSNjklJVW+SMWf
1IvUxEpSEgAAfElJm6R+lxT9Bt3Wh0FSEgAA9EBK2qqYSjxLAgCAoUlJO6ye
E2UmrmYty2yaEq4iNT3fkgwpCQAAvqQkvqQkAAD4kpIGdXqokZIAAOBLShqU
lAQAAI1ISYOSkgAAoBEpaVBSEgAANCIlDUpKAgCARqSk/oX/kPiN7u4MAABo
zq1v/37uoB+fHz38OVQAAHgDKal/UhIAAFxJSuqflAQAAFeSkvonJQEAwJWk
pP5JSQAAcCUp6XbFXZBJSat/gG41MVWgphIpCQCA15KSblf8p7aLySV8HZ24
el2sREoCAOCdpKTbTTGrAlISAABcRkq6XTQlLfdLVynJAQMAwOO56T0ok3FO
8alISbNU6gkLZCrJF1tu9a0dDwAArbjdvV0qHC0LVD5Lqn/AlK8kVTJsmIMH
AIDncaN7u0w+mgucnpJWj432paRl+9v3EwAAXMQt7u2Ku+CslJSPP7tTUuVW
AADAKNzc9q/m90SpiWGBTPlobZUpaW6qwwkAgNG5re1f/lnSlX+Vh4qDCgCA
obmh7d9wKWlutkMLAIARuZXtX/iNuBvta3yLbgEAgEbcxA7qt4U+K1xymAEA
MBC3r4MaKyV9OdgAABiCG9dBjZiSvhxyAAB0zi3roMZNSV8OPAAAuuVmdVCj
p6Qvhx8AAB1ym9q/8/+hugPabeDWpf75P/9f+vlr0S0AANyl3a0vZ5nG/P8l
7djMTfX/zCZ//uf/poc/KQkA4GGkpP69JCXNG1u5FikJAIBGpKT+vSolzZtc
XJeUBABAI1JS/16YkuYNz6xRSgIAoBEpqX+vTUnz5kfXW0xJy39dYfl2NXdV
clVtTRaTkgAAHkZKul1xFxRT0vwP0H1fL6csZ0XLp6b0k5LmTlitPZ9flnOX
yahYZlVeSgIAeCEp6XbFf2o7H17CsBNOX75dlY9O6TAlzV0xt6E+JaUmFlOS
Z0kAAO8kJd0ufO6z2iOZ5BLOSqWk3VO6Sklf3y6q+cadlAQAwA5S0u2iKWm5
XzalpIOZqJiS+lGZX1aRJ/UTJL9LAgBg9r3hvLsVA2udBT6dpaS7+/tvjtj6
f+Nu6++SpCQAgJeTkm6XCkfLAi1S0taIdHtKWvWMlAQAQCNS0u0y+WgusCMK
5UPQjoh0Y0qK9ky7f+NOSgIAeDkp6XbFXVD8FlxNDorOyrzoJCVlOqeYkjL/
g6TV2+gvkjLTpSQAgGeTkvpX80W4r3BKcVZ0Sg8pqXhk1n/jrvWflAQA8DBS
Uv9qvgt3zd81h0rlMSklAQDQiJTUv/ekpE1Ho5QEAEAjUlL/wq/P3ajpNm5a
JPyfH93416hbAAC4RdNbX9r5baHPCit1cgT20AYAADrRyT0qWz0gJXV17HXV
GAAA7uXmcFBDp6QOj7pve3prFQAAt+jwfpUag6akbo+3uVV9Ng8AgCt1e9dK
3nApqfMjbdm2ntsJAMAFOr935TP+v3G3e8GLTYISAAB/bZQ72Debhv3/JY11
dK2aOlDLAQA411j3se80Ykoa8bgKGzzcJgAAcIoR72bfZqyUNO4RFW32oNsC
AMAR497TvscoKWn0YynV+KE3CgCAHUa/s32D/lPSM46izCY8YOsAAKj3jPvb
oRV3QTElzf8A3ff1cspyVlh+nh4tVpOSnnT8FPfCZS0BAOBeT7rLHdQqzkQL
5JPLKv6E05dvV+WjU2pS0vOOnOLmPGx7AQBIed697nDC5z6rPZJJLuGsVEra
PSVMSU89Zmo26pEbDgDAylPveAcSTUnL/bIpJdUnoOiyxZT04KOlctMe3AMA
AHw9+773ApmMc4pPZynp7v5uS1ACAOAjJXUgFY6WBa5JSfmIJCXtKwkAwHCk
pNtl8tFcYEcU2pqSihFJSjpSGACAgUhJtyvuguK34Iqv69/6xl3T8gAADEFK
6l/NF+G+winhrGieypSUkk5fBACAzklJ/av5Ltw1f48/VPZt4OO7BQDgbaSk
/klJl9m9gY/vGQCAV5GS+hd+fe5Gd3dGW0c28PGdAwDwHm+49X2k3xb6rHBE
B8eCoQQA8AxS0qCkpBaOjwWjCQDgAaSkQUlJLZwyFgwoAIDRSUmDkpIaEZQA
AJCSBiUlNXLWcDCsAADGJSUNSkpq5MThYGQBAAxKShqUlNTIucNhR23zkDQ2
AQDu4k5sUFJSI6cPhyNBqUV7AAAokpIGJSU10mI4bK1zWd7wBAC4npQ0KCmp
kUbDIV/t9DthYcMTAOB6UtKgpKRG2g2H+pp94w4A4F5S0qCkpEaaDofKyv3r
DQAA93InNigpqZHWw6GmfkMSAOBeUtKgpKR2bg9KhiQAwL2kpEFJSe1cMCIy
q1j9Sw4AAFzP/digpKR2rhkRxh0AQLekpEFJSe1cNiIMPQBu8R8Cd7cIuiMl
DUpKaufKEWH0AXA9KQmKpKRBSUntXDwiDEAALiYlQZGUNCgpqZ3rR4QxCMCV
pCQokpIGJSW1c8uIMAwBuIyUBEVS0qCkpHbuGhFGIgDXkJKgSEoalJTUzo0j
wmAE4AJSEhRJSYOSktq5d0QYjwC0JiVBkZQ0KCmpqSv/l0mVrmkPAG8gJUGR
G7BBSUlNGRQAPJiUBEVS0qCkpKYMCgAeTEqCIilpUFJSUwYFAA8mJUGRlDQo
KakpgwKAB5OSoEhKGpSU1NSOQVH/7zBcoEWfAPAYUhIUuacalJTU1I5B8XOR
H58fPfwZ0QDkSUlQJCUNSkpqSkoC4MGkJCiSkgYlJTUlJQHwYFISFElJg5KS
mpKSAADeTEoalJTU2tZxISUBADyGlDQoKam1Rilp+S/RLd+Gc6PTpSQAgAtI
SYOSklprkZKWZZYJKFomWlhKAuA4v0uCIilpUFJSa61TUn0y2vpdPiMagDwp
CYqkpEFJSa21+8ZdamL0odKOnzsZ0QDkSUlQJCUNSkpqrd2/3hD+wiiVkvb9
ixBGNAB5UhIUSUmDkpJaa/1v3KV+juRZEgCtSUlQJCUNSkpqrZOUtCMoGdEA
5ElJUCQlDUpKau2yf+OumJK2BiUjGoA8KQmKpKRBSUmtNUpJ0f/zUTjR/y8J
gHakJCiSkgYlJbXW+ht37f6MaADypCQokpIGJSVdYNPQkJIAGIWUBEVS0qCk
pAtsTUn9aNcnADyAlARF7qkGJSVd4JqhIeYAcDEpCYrckg1KSrpA66GReRJk
VALQjpQERVLSoKSkC7QbGvlwZFQC0JSUBEXuxwYlJV2gxdDI/5JolZVOXzsA
fKQkqCAlDUpKukCjoVFMSR9BCYCWpCQokpIGJSVd4Mpv3K3WGL4AgLNISVAk
JQ1KSrpA06ERRqRPIhwZoQAAF5OSBiUlXeDGlJR5DQBAa1LSoKSka7T7aVK0
fikJAKAHUtKgpKRrNPpn7ipnCUoAtOB3SVAkJQ1KSrpGdHQcGTL5ZTMp6eB6
AWAmJUGRlDQoKeka56ak4oLFWGS0AnCclARFUtKgpKRrFFPSPIKKQ6lmoNXE
IgMWgIOkJCiSkgYlJV0jDETh/+co+j88ytRTubr6KQCwiZQERVLSoKSka9R8
4674byxsGmKCEgCtSUlQJCUNSkq6xvGUtHV8VdZg2AKwm5QERVLSoKSka1Sm
pJr//9HuNR78Fh8ArEhJUCQlDUpKukb9P7kQDqV9I2vTkyODF4AdpCQokpIG
JSVdY98/TFe54Cm1Gb8AbCUlQZGUNCgp6TJb/ydHNYvsWJ3HSQCcRUqCIilp
UFLSZYr/F6TVIDo4oHakIUMYgE2kJCiSkgYlJV3m4L/jfdbqimHt4HoBeA8p
CYqkpEFJSZepHyCnDKXdz4wMZAAqSUlQJCUNSkq6TOUAOWscHflmnbEMQA0p
CYqkpEFJSZfpJyXVrMVwBqBISoIiKalzU0/u7ox71Gz4iZ2Tr6q4otfuJgDq
SUlQ9Oa73yH83Ds/Pj96+HvtcXJxMDmYkirLAACQISV1Tkq63fHYcuLqKtf4
2p0FAHAKKalzUtLtMhveok/OenT12v0FAHCclNQ5KakH0W1v1CEnPip68y4D
IMPvkqBISrpXsf+lpB6E296uN6QkAFqTkqBolJS0o5GjbFf+H5GrSUmrSlJz
v6+L5aWk0Grbm3bFuT87evNeAyBFSoKih6WkIbZlaYpZFaiMMDWv57epMlJS
1HLbW/fD6Yf6m3ccAFFSEhQNkZK+LTz3M/ZORFPScqccSUnR50pS0g7L3XHZ
uk4ptqMwAI8nJUHRuClpbvnyDnY5MZyemhVWXt+wpj5np6Ti86b8KpZd9ypH
DpJ96zq35NbCADyblARFQ9z3TolP8sOMsywQnRWWDCu5UiocLQtsijBfNSlp
Vbj+WdIQx8y5rtzkRilpR3kAnkpKgqIh7ngzCSL14pNOSauqUhHsGpl8NBfY
+izpx+JfaSiW35GSli2/qp9uduWWSkkAtCYlQVH/97qpZPSpS0mf4Ct2qfpv
TEn5AiempDAc7U5Jle1/gIu3cdO6BCUAdpCSoKj/u9yDKan+8VOf/XAkJf1I
//4o9XprSpob2WfvHRc9ii5YY4vCuxdBpwEPIyVBUef3t+G34+a34evwRfj6
8+smRyvpSk2EmQLRucUpu1PS3NRUmQ47tsYtCXrrugSlC+gx4GGkJCjqMxqc
aLl1I25p5YOeC/4qey8stkqpo1g1+LL2X5CSdi/1WqvTSM+fqwDUkJKg6PEX
einp4pT0CQ6qEVNSNOvdtepzyx9Z6m3Cp7RhPtKTwIikJCga7vZ1hxHv0mfR
+7S7HG95o146V7SdlzV+x4r2tW2U3dGDKf1gUTcCI5KSoGige1eWflvos8Kv
4YJSqoVXtnxHIL1mRa91eko68bOL4472DjAgKQmKXCUHNURKGu6uLNO2K5u9
Y127m9fz7ujHFKSkecq+DpwG/CYt8CRSEhR1ftdKo0+P9zmx8S366qB8q65s
876uvnJ1Lzcd/tcbJikJuJWUBEXd3rLyNe7d1LmBq7Vikx6cko4v/jbHu2vc
cQ0AL9HnLSuz591NbXp6dZmaZp+y+TX2retIC6/cugc43l3T48Y1ADxM5S0i
d3nw3dRYm/bslHR88feoT9b5Sm4/7BuNawB4Bimpcw++mxpr0/pPSUcWPGVx
ZsXzavTgXz3f3H0wrxbPV2inwzv5XRIUSUmdq79ZOnhzJSXVNPjcHjh9Rad8
E+xgDXyCr5VGC6QOxejr+iN59bpYoT0O7yQlQZGU1LlNd0pNc4eU9IaUdFYl
LzfFrAq0SEn5s4GUBMykJCiSkjonJV3w95iUdHDZs2ogmpKWJ9utKWn5mHh+
vZxSGYikJOBLSoIiKalzu1PS8sYsemfVf0patj86ZXX/mVmwckVwgczBvyq5
GtdTLChNwbheLluTkiaXAHgfKQmKXCI7l7qbyqek1Yvw5mqIlBS9r1tNCTc5
c0N4cNMuGykHV3RKO50WjkiFo2WBmgN+Cj4QyI/0mqqiB78LAbyNlARFLo6d
Oz0l7YtImSix7/ipzGv5j8Qzn59LSbc3480y+WguUJ+SasJRPiVlhsOyeS4H
8B5SEhS5LHZuX0papYZ2KWnT8bO6bzyYkirvJ6WkTqp6leK4uDIl5QdF2E4X
BXgDKQmKXBA7d/BZUnT6vqyUupsqHj+pYi1S0r5tfFhKOqWGFlUxSx3YK5lZ
83G+fBEum6qwePC7NMCzSUlQ5FLYufq7/dTd0fLt8sWRlLS69Yo2OzO3ftNS
ZcLpk5R0ag0tqmK2bwy2+MvvX3sfnkpKgiIpqXO7E00xaOy+m4p8qL34AXj9
EdUoJf3YngSfl5LOquT0qvgaJSUBTyUlQZGU1LneUlI0Iu07inakpNUDo5qS
UtIpnCXOlRlH19va5qY9A1xDSoIiV73OTQf+4e6vEz9zPn6jtWnTwrWkNi06
5fSU9LkqLJyyltOb6kTBl6sGPICUBEWud52r+zD4fvs27awEdzwA1rd5x5Zu
ddZaTm/tNZvPEHYPfKAHUhIUudJ1rvMokQpKNQdV55uWanNlySO6TUmN6mRc
riAwKCkJilzjOjdilPhUp6R+nLhdx524ltMbfE0PMJZNgwjogZQERa5unZvG
T0nzMVZ5sO1e0QWkpEZ1AnAlKQmKpKTOjZWSUo9plodZsR4pqfOU1K5ansHh
AcADSEmdq09JcyrZMbfps6RP8Ghp07Jb19XUcCkpU9vBtThvkLH1u6wA0BsX
ss5tyjWZiFQsIyX1s64hUtIpNfB4LjEADMolrHOPSUmNvnG3e5F9RkxJqQpX
0TX8buS+aiHkQgO98bskKHLx6tzulLT6cdA85Zpv3IVb8WnzrzfsXmSfB6Sk
KeazMcm2ayoP5nID/ZCSoMhlq3P7UtLqxfXPksKtaFT44FJ9ruj6Z0mfIEkd
rBxSHDDQAykJiqSkzklJTZfqc0UtVhHWeVZK2lEegHtJSVAkJXXu4DfuotMv
TknLr3VVlt+9on0LvmEtNSlpxzfuMvVDkQsQ3EVKgiIXqc4dfJbUQ0rascmn
L3ti4wdNScU6w18nnVs/pLgMwfWkJChyeepcfaiZH9mEb6eFfRFJSmpR1cVr
qUlJ7eqHvK0PnYEjpCQoclXq3L5ck/rq3ZG/IVJSavHVj26OPDeRklpXwsu5
KsEFpCQocj3qnJR0ZPEp5vPrYb91deOmpEy1J36M73zCKVyboCkpCYpciTq3
O+CsvnH3npQUrWE1ZZWkDlbewsUpacS1ALCblARFUlLnok9D7nLZJp9ewyQl
ta/5+rXwHo4oOJeUBEVX3v1yot8W+qxwt1MOyEws+rz4G3efYwlx31rgFK5W
cCIpCYpcdwYlJR2pZHrlv94w13zN80EnFlpwzYJTSElQ5IozKCnpSD0HV3HB
kGm0iou/RencQiOZA9hF7bjCd6+f7u7uv4iUBEWvOic8iZR0pKqDq4guPg+l
U8bU6aPyrvsBpxeaCg/jt93rnkjXfb2kH6QkKHrDqeCRpKTdVR2/AmbC1zyr
RRA76K5PTZ1haG057l74UOAUuiv07D6RkqDIpWRQUtItteXrXE7vMCV9Lv/G
3XK916yIl7vrCB+ajsp4cOdISVD04DPAs0lJt9S2qnN1J9Z/Svrc9GG7kwwX
iD4tdewV6aI8/QOv5SIyKCmpwwpTienEVZzilhvIW84zzm+vkkpJjoEMnVND
L8E7uYIMSkrqsMKp43+9Iaz/+rF/1+qc4t4gE5EcACl6pp6+ghdyBRmUlHRj
nfmU1HQVJ7pl7N/y9Mop7p0EpSLdUu95feV3SVDk8jEoKelInQdX8YyUdNla
bl9pozXmH15crMUGduXuDv7F3Z1xmidtS2vP6yspCYoeds5/DylpX7Wn3OdE
Fz/3Dqq+nutuDSucvnXHtVvXz5r/5E/+bQ9/V/bnXX5u4+/93n/o4e8xvf2Y
DbnG87pLSoKiTfc29ENK2lHtjvv5TG2ntOp4/T9L/vj86OGvw5TUdEVS0pWk
pNNFN+Ss82Tl4id25pE2X9zUTkhJUCQlDUpK2lTh7qcemTpPadvx+kdMSZs2
8Agp6TGkpNOlNmQ5/WBQ2jT9iLnOpp/VPGbXf0lJUCQlDUpKqq9NSuowJW3a
xj5JSVeSkk73yJTU2yI9k5KgSEoalJS0qUIpqcOUtGkz9/EsaSD5gbk1Ja3G
+wtTUvFEtzUlrSqMnlSXZZYvVq+jhcO3qUZGC4clUw1ONSO/0sz0QUlJUFQ8
kdInKWlrneEF/WCFpzTseP3TyClp05b2ZqpISfPxtnr9fVtT7G0pKXPHuyPO
RF+/JyV9spf4zPRwL0y/Zp/V28yLTIGwzKpYNLNkWhUtVt+MzEpTaxmalARF
UtKgpKR9Ne9ISVO1c5taXzKVWZbC6WHhaJlV+ejiUlI+whRf52e9MyWtxtQk
JW206r3wHJXakCmRI5aVhGXyL5Zrn4J4Ek5JNaNYeFUybHBlPakKw4njkpKg
KDxzMgQpaXflQxzz9S2MBpY5thRfpyZuWvZIStq0sV05kpKm3z02kpJm0ZS0
vMs9KyV961y9ra9/lN7OBIdMgU8iKURTRk3QyAeQdikp1YzKeqQk4CMlDUtK
OlJ//4d9sXnLe8izUlKxfGZdR1JSzfZ2qKuU9AY7UlK47Pz6+2L1dmu1Ucsj
5N6S0YN2LhYt8KmLD+GyxZLhi2ht+fLFwqlZNc3IV5iaOC4pCYpW51VGISUN
sZbdMjcw4b3Qic+SplggWs3KrO5t6lNMPi6linmWtJy7+1nSatm58n3fxBul
t6cgXIRTokuFPT/9LmiE06NTVnsw+nZVw6q2aPnUqsOWhO1JtT/a7OhKUz02
LikJiqKnAvonJeVr6McpnZCpbcqmpKXKb9xNQSZaLd7iWVJ0qzs3HUtJMynp
Kz9wppNS0pR4lvTUlJQ/dRys/Hg9Y3nYlkpJUHTkRo4bSUn5Gv7gD/5dD38H
70NqolY+JWVy0KaUVPksaffGLjfneCXX2J2SVgtO6a/hvTAlZebuTknRxDQd
+Mbdld2yW82p40jlp9QzlodtqZQERVLSoKSkfA2356MjKakmHC0Ln5uSwodH
+QWlpPqglE9J+yLSY1JS3taUNA+i1ZTfC36vtCr2mJRUdHBDNp2m9lV+pEAL
j9n1X1ISFElJg5KS8jXcno92pKTVXcdlKSn6qCiakvJB6awzyShnpH0pad7L
qbdSUtTWlNTu7zG93XnKKBbeeqo87jG7/ktKgiIpaVBSUr6G2/NRfUpKfSR7
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
L+wBkJLO4gTyYFLSoKSkl+izN/psVb3R279PPiW953nKvL2rKfAqUtKJnEOe
6iWXxeeRkl6iz97os1X1Rm//PpXPkkbvnNV3C1NzR99MoB/OJ0/lYjEoKekl
+uyNPltVb/T277NKRtGwMHrPhNt4Y2OA93C2eSTXkUFJSS/RbW9027BKo7d/
h+J3zEa/HESfHN3SEgAeYPTL4mtJSS/RbW9027BKo7d/h8pf4ozbM/mNGne7
oAW/S4Ii145BSUkv0W1vdNuwSqO3f4fXpqR5+ribBqeTkqBIShqUlPQS3fZG
tw2rNHr7t1r9mwbRXySNfjkoPksaeuvgXFJSC04yD+PCMSgp6SV67o2e21Y0
dOOJSv0uybMkCElJLTjJPIyUNCgp6SV67o2e21Y0dONJiX6rUEqCkJTUiPPM
k0hJg5KSXqLn3ui5bUVDN56M/PcJ7Xf4kpIacZJ5EleNQUlJL9F5b3TevIxx
Ww5wnJTUjuvLY0hJg5KSXqJpb0w9abeZqW2/eI0A/ZCS2nF9eYxb7k84Tkp6
iaa98bPyH58fPfxJSVzppk8CenF399MFKakpA+0ZnDMHJSW9RNPemF6ckj6O
tPcRE770Ax8pqTHj6xmcKgclJb2ElNR0869fKXexu0P65M2kpNaMrweQkgYl
Jb2ElNR0869fKddzmcvQOa8lJbVmZD2AM+SgpKSXkJKabv71K+V6dnSe/nkn
KekCBtfopKRBSUkvcWNKmn+88H29mjjPyk9f1SMlcTF7uYZeeiEpCYqkpEFJ
SS9xV0oKE1BqVv51qoCUxAXs4nr66m2kJCiSkgYlJQ1q69bdkpLC6btTUr5a
KYmm7OJ6+uptpCQokpIGJSUNatCUdCQxSUncJbWL52+BpspkroznHjb7als2
76z2GA5vIyVdxuAal5Q0KClpUMutW96nXXNLFlZek5JWPywq/v4onCUlcb2a
MXXX0Dvu9OZ1vr0wLoNrXFLSoKSksUwxn4rPhHtISannRGFKqn8rJdFa5YCS
khpVCMyMr0FJSYOSkga12rrVx9rF8qc35pqUlI9Id6Wkz9MPtpfbOqBWV8Pl
xxfhxxr5F/kGpD4kiX6Kkm9eZu2rOtP9VNU5wBEG16CkpEFJSYMaIiXVR55M
FArDVH517TYz3wO3rJcLbBpQYbRJRZ78i0xm2bqW5ayta48WKDIcXsXvki5m
fI1IShqUlDSo8K6peDPTrkMyseVH4vdHmSkr0blSEpfZ+rHDfJQuS4blt+am
cBVhbfUhqH6lUhJ5UtLFjK8RSUmDkpKeYb6fyd+8tVt7/otwl/1JSZyuMiXl
c8q5KWmemApBqbXsW+nW67vh8CpS0vUMseFISYOSkp6hZmOlpHZedbC9TWrn
ZsJI+GJ3PIm2YXcW27HSHce24fAqUtL1DLHhSEmDkpKe4faU1I9G21jsgVvW
ywUyOzd61KUOy2XJ1YLFRVZrSS1efJ1aV83ap+qDvL4kDyAl3cIoG8umUyj9
kJIeoPIeZqwO0Vo6MdDOXSWpu+ocqMc4Tkq6hVE2FilpUFLSg+U/KO7fKO38
DNVUthpo50pJXE9KuouBNpCBbr1YkpKeTUq6xkBNZasedm79sG0xxn3jjgwp
CYoGuvViSUp6tnEj0tcorR2lnexw485t8WzoAgM1leOkJCga7u6LLynp8YZO
SZ9x9uMo7WQrKWmrgZrKcVISFI1498VHSnqBoSPS1xDNHqKR7NBiz86DcTUq
l29XY3YuH61hVVuqnmvOA8bCq0hJNzLWRjHuDdjLSUlvICVdYIhGskOjPZtP
QOGql0knVayyntO3ZcVYeBUp6V6G2xDGvQF7OSnpDUZPSZ8R9mb/LWSfdikp
fB19fhSWib4II1U+LrVjLLyKlHQvw20IQ9+AvZmU9BIPGKGdt7/z5rHbZSmp
8hlQGI7qF5eSOJ2UdDsjrn8PuAd7JynpJZ4xQnvehJ7bxhH9fOPu+ERft+N0
UtLtDLr+PeMe7IWkpPd4QIf0vAk9t42DWuzc1ZOgeeLyy3KrF+Eiqa/Srepp
txUhA+FtpKQeGHedk5IGJSV1a+rJ3Z3xN7pqzFK3DeO4Fjv3+gPmmjUaCG8j
JfXAuOtcb7dSVJKSuvWz/T8+P3r4660ne2vPV5+t4hQPSEmXrc5AgFsYej2T
kgYlJXVLSsrQJC527v698intlVdnowDuYvT1TEoalJTULSkpo8MmfXptFWex
f/P0D9zLGOyWlDQoKalbUlJeh63qsEmcyGUuQ8+8lt8l9cMw7JbLx6CkpG5J
SUW9Nay39tCCvRzSJ28mJUGRlDQoKalbqZS0+tfnUnO/r1ezNlXVf0r6dLaX
u2oM7awGzt3NuYce4EtKgiKnykFJSd3Kx5aa18WUlFlcStqhq8ZwmemV7u51
eiElQZHT5qCkpG5NG1NSWD4sVlNmrJT06WlH99MSgGtISb1xJeqQlDQoKalb
x1NSuMgjU9Knm33dSTMALiMldcjFqDdS0qCkpG7lU9JSfUoKi4X1jJiSPn3s
7h7aAHAlKalDLka9kZIGJSV1q/JZUuY5UU0ayi8lJQ3XBoArSUl9cj3qipQ0
KCmpW8dTUub5UT8pKfrD8Lsc35ZT+gRgFFJSn1yPunLKPQbXk5K6NW1MSZn4
kyrfSUr6u3/3/+nh75TNHP2oA9hESuqW61E/pKRBSUndSuWX8AlIdG5qyvJt
tAYp6eDmHK8EYBRSUrdcj/ohJQ1KSupWzVOea/6kpE2bc7wSgFFIST1zSeqE
lDQoKalbUpKUBNA5KalnLkmdkJIGJSV1K/evDFyu6Wbeno+kJIB9pKTOuSr1
oPWtFI1ISa/SYZ/Up6RlastPzEyXkgBOJCV1zlWpB1LSoKSkV+mwTypTzCoZ
hRNT06UkgHakpKc6+JWSeSkB4aMThiUlvUqHfbIjJWXiz3fivm/xSUkAW0lJ
D7a8ou0LSruX3b1Un6SkQUlJr9Jhn2x61lOZkvYFpVNOYh32MADsICWdRUoa
lJT0Nr11y6Y4s/ydUT4lrQrXP0s68gWDT3/dCwDHr2jRGlaXy9WlM5OSUguu
pqTefoKLdX1tRy7xu0lJg5KS3qa3btn30KcmJW19qFQ8jddv0XndAwAn2Pcw
KPPJ4SoEhZkolZJSSapYT2pd0UVSs8L2XEBKGpSU9Da9dUvPKWnZyPpTXG89
DNCO3yWNYl9K2vR2da3cmpKKLz7plFRcdaox15CSBiUlvU1v3VKZYqY+/o27
zKdqyzKn9hBAv6SkgRz8asSmt5+WKekTfMWuZtWrhHUlKWlQUtLb9NYt9Slp
VpyeKnw8Ja1aHj3v9dbDAO1ISQOJxo3K8pm30ec70ReZZux7lnR82WtISYOS
kt6mt27ZFGSa/u3umVVc6q2HAdqRksZS842IsGSq/Gr66lKYWTy8bs5vwxdh
+VQNmdrmWaUeakJKGpSU9Da9dcsDUtJyWyqvPgDPICUNpJh6RrE7+EhJbCIl
vU1v3RJ+3HSjs7boE/vgC+B5pKQhtLvk3WLalZJu3OTRO/y1pKS30S2trXr4
AdcjgBQpqUYmoUTfhteR0xsw+lVp01bcvr23N4B9pKQX0jNNpbr3Mdcm3ux5
R+/ztqjeKdsuJVXKBJ9iJjplT+1OSWet/Xglt69iN5f+QUlJL6RnmqrpXnGJ
QT3voH3eFtWTkq6UyT7h46SwWIugVL/UicUu0E9LZq74g5KSXkjPtLbp6lNz
8nSCpROre7n5/m3c4/N5W1TvlG2XkirlU1L4dlXsrANya1CqX3s/Q6aflsxe
ckp5HinphfRMazt6OH/Z2vHpH5xoivn8eukf6+B83hbVO3fbpaRKxZT0SUSS
0w/I4ykpPGZWFUbfrl6sNqpyVqaesCWp19e7cdUcISW9kJ5p7WAPhyfz8H4G
bpG6fwtnjeJ5W1TvlG2XkiqFXRqNA2HJFif/+grDRqamR0tWRp6aWZl6ahoQ
bsKVXLsHJSW9kJ5p7awentIqi13vlA23dbeobHDqbVjDzdvzq1O2aLity5v2
bvvS6Snp5q781cFtWW1Xasr0a89P6R3RuknRMtHeCBuf2pwbX6QmXu/0w4lr
SEkvpGdaO/1Clr98/3z94/Ojh78Wh9bPOv/iL/6nHv4abd3te23TvgvvlDI3
IT+n/Pf/+l/38JfZuk1btCr5+7//73v4231k7t72pRYp6c///N/08Nc0klRG
oaYpqaimYZ2npPmtlMQOUtIL6ZnWrklJyyvC7ffYUtLurbt9rx3Zd/PtR3Tx
IVLSpi1albw9Hx1MSbu3fUlKqtyo6Nl7OWs5JTorLNmalHQWKWlQUtIL6ZkW
8kGmRc1z/dPgd9rFzb89H0lJmfbn596ej/alpMqSt+ejFilpKynpqYoZLbwS
pQqnrlzLF5lZqUqKiy+b2q6jaoRNYghS0jvpnNNFT+DH+7mmkmnwO+3i1t2e
j6SkTPvzc2/PR1JSvX31SEn07/ZdKSUNSkp6J53TQouUVLne2++xd99pF3up
PiWter6HlFSzdbfvtYP7LrPgcCkp/3F0WPj2fHRiSrrslFXTsbfnoyMpqfKj
rQsuE+7Mv3roBPtiUFLSO+mcFhpFpGKF3zvt1arr743n8vNS0apS9a9qOLJ1
0cWnLXlnWXjTgk1TUn7rtmaZ+r286WBotHVzSPkKw8s8fQqEC4b1ROuMLthi
67ZmmZVogRufJV2jpmO3ZplwylK+cKOUlN/A5fRUseOKLXm8fja8n5awiZT0
TjqnkRZXpfDmarWKaRFklje9NTfGqzvq1KzUxLCGU7ZuVeAxKSm6dTse+tTs
5ehea5qSolu3CkTRlBSNPNMi4KQyUX2djbZuR5yJvs5PfHZKinbswZS0mji/
/q7r4pS02sBwe1MTjyt2dX09p7ftbRrtYlqTkt5J5zRy/HpUrDNcxbQrJYUF
UotX1r9vk/Ob9jkpJX0rXL3dVPOJKWm1da1TUn21LbYuTCvFKdFnQ8W5xUdL
LbbuSEraV6DDlLT1d0k1Hbs1IoWLTLGUdMuzpNUGpupssROLXV1fz+lte5sd
3U4PpKR30jnt7LsM1VSYusxN2RTzLbzKMquJlbfi0YnLt5mL8j6f7SlpFsal
74vV232Vn7h1Z6Wkb52rvbyp2hZbty8l5YvtS0kttm53Slq++L5e/XdT5adv
3Y0+naWkRttYf54PlzqrZP0F6OOe4bBNfU4/pKR30jntbL0GVdaWucBNsZ8O
RQPOlIhO4X11WFUmYc1Tdmx1zdbteJa0WmquOXyuNOI37qK7JhNpK6ttsXWp
BDQlAtEs/7W6u54lrQrsSEmz1cRletpa846tO9Epz5JWBXZ83W4Kfn80S6Wn
u75xl1pqx7qOtKS+krB5c1VTEMqiBVIt2d2q4bxkM59HSnonndPUwfNheEXL
X+Om7B3yvGD4uOHg86Po3fuRjU1t3cGUlJq4qeZTUlJm322KM9HdsdzRt6Sk
aIGtKencZ0nLClts3fFnSeHrfdVu3boTHUxJ0QL7HvfUpKGtle/okPwG1k88
rtjVlZWsXiwr/yxyUFg+Myus/9ka7WJak5LeSee0tqmHa24bMufYKZ2Swhfh
7XQPKSlfYEdKioaj6fA37lps3SkpKb/Hm6akfIF9KSmVdDalpNXrFlu3OyWl
Jk6veZaUL7D1QVL9N+vqKz+YkuoLtLt/PqXm1LVp+jXyhMU2vXi8dnuZpqSk
19I/jUy/qilWU2d+buq2eTUr9TYfiCpvvBtdBabt/7+k8IHRFHPBN+5qtm53
SqrPxY1SUs3W1eSXfOTJFKipaq6kxdYdTElTkImm2MOmh6WkomnwlFS5jZsu
AXeZEsnoE0tJmWXDzUwt9VSd72hSpKTX0j8trM6Ey7ftLotz5PlaxZaoaJlw
Yr5YOL3FQTU1+P/D7vtrtHVbs0x016R2dycpaW5PGGHm6WHjowvm366mL+tp
sXVbI9LKcmL0tZRU81278O1qVmqRG1PSKKbtKSnzIqzqPT38PfDubgWbSUmv
pX9OFz0Nztflpuvd+jyi0V+je9Hb81E/KWm4fRf9MdH1fz2kpHZ/70xJF/y9
/Cq5ungt34avP79eATPLLuu/bFtuJyUNSkp6Lf1zulSXtu7qx99p356PpKTd
W3d7PpKSWpOSyIs+gfq87CZEShqUlPRa+ud0N6akftg6W2frrnf61tVrkZL6
cUoXvdwUS0Zv61uH06CkpNfSP6dLdamuBp7q9JTE9VpfpJap85154Z1b/QBS
0mvpn9NFT4POjcCDSUlDKz4181jtFPpwUFLSa+mfFlZnQidG4NmkpHFVfrfQ
Vew4NwODkpJeS/804mvtwHtISYOqv065kB3nfmBQUtKb6aJ29C3wBlLScIJ/
o6I2JS1/W7RvVvgibFW0tXPh6Bc2UvVHa65Z++mhRkoalJT0ZrqoHX0LvIGU
NJYwItWnpE826eRnhS9W2Se6umjhcKlousnUnFp7qtrjpKRBSUlvpova0bfA
G0hJA4lGpK0pqcWLYkoK2/+JRY+wnprGr+qp75l6UtKgpKQ300VN6V4AujJ6
SkptUaqplY1f1tPi2i0lDUpKejNdVHOxSPXS6hOt+gUB4Eajp6TVUssXNTXn
68mHsn2kpEFJSW+miz5BJ2TOz6mJW+MVANyuJiWtPg9cvV5OTM1a1ZMvHL0E
h/Wk2h+uN1VDqvHhWk5xeoVcQ0p6M130KcWi+URav0h+IsCT+F3S0B52nep2
c6SkTVZJtnKRTFWZ+ivrOYuUNBBd9DkpJVXWDPAwUtJwHnxt6nbTpKR6pz/U
ywSoHUsdJCUNRBd96lJSauL8NvVhxZkNhftM73Z393dNShrOUw/pngdstw3r
TdhLx/stVUO+5kb7S0oai17KD8nonVLlKNa3jK7nu44r6YcMKWks9Ydx68N+
d+UjjkQnkEqZXsockPP05YtVnfOUVZllnat6VtNTNWwiJY1FL2Uiz2pWanp0
SmoijMIBHNInISlpLJuO4dYH/KbI1rQlrUlJlWqe++TvuMIIE53yCfJR8UW0
zq2kpLHopVQU2j2rZjr0zAU9Q+esSEkD2XroSklncd6odEpKqnyRij+pF6mJ
m0hJY3l5L02BcFb07WrZTP3tGg+NOG7z9M+SlDSKHcdt8ZK3/JQ+9dF9fql8
JWENmevyqtqu5G8VmIW9FO7T6HG140VYZ/5FauImUtJY9FJTupfhOGhr6KWZ
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
QJSUdArj69ncWdUrpo9UkiqWl5KWHJD7hLEdGqlJSZuSzvFnSavmbRoI0Q+1
Dl4cpSQ6JyUdZ3A9npS0SficKDUxNWt1CV4K564qiRbOL1Js4UxKGt1UnYjh
oFVsWSk+JMqULy4Vlsw0Mj8WMqfWucCRLro9H0lJZEhJBxlZb1C8jtCn00ON
lDS6KRbGoYVotLnlr3ic14yFKfjgKzp9axfdno+kpKhoOr7Ljf0gJR107+7j
GrePU/aRkghNiZs9ONc0TkqaG1w/d5KSHu1nh/zRH/2vPfxJSeMyrF5CShqU
lEQo7DoDnBYu+ZS91qY2p2ZF39ZXHq0zE1u+Vq/rZ0lJR0xS0l+TkqBo01WG
fkhJhCpvAuGgn0fUP/pH/0cPf1uP7cpL3o4UFtaQTy7F1/lZUtJuUtKXlLTJ
vg9nGJ3dPSgpiVCm64x0TjRuSprb33o47EhJ4SKZWVLSblLSl5Q0K54QVgVc
T9/Dvh6UlESo2HX6llOMnpLmrWg3IrampGj5/KzMXCkpQ0r6kpJm+edE9RN5
Hjt6UFISofqvEl3QGB7sGSlp3pYWI2JTSkoVTs2afv2xkpS0SSolfTtz9fY7
ZQpkasiXkZI6FO7f6dcnR6mlrmogt3HLNCgpiVB91+lkjnhSSpq36NxBsSkl
bX2WNG35Jp7BvpLJL6tZq9CUKlaziJTUs2hKms8JUtKbSUmdywze6122ydes
6Hk2dd2V+5SHmRYpaT4/hPklnF5TLHrySdVw7jF8Ym1Ty98lZRaRkoqmbMaZ
tiejIymJIaQOpIsPXa6XOQDowc+984//8f/ew99lx4kDcrcdXae32WEKosqU
iD/hxOjzoOjb6Iuw8OmbdkqdU8t/4276NSUV13V8c55kKj0JmgtMsciTmrha
1rOkgeSTUfSc4Ob5JezozklJbLIvKOlzNonmmil44lMslolO9ZGq0QYerDmT
XObbsNXr+ll/ufhF0nKilFSjmJLCuLR67pNPRmFJKalzqXy0KpB6y4PZ152T
kthkd+/pduo9PiXNm3lkQBW/C3fNn6G9sjslRZ8lrWrLv+0qJTGrGenFJMUj
2d2dk5LY5Ejv6XkqReNPmIPyxfpPSfPG7liLlNStmpQUJqDoUlISPJuU1Dkp
iU0O9p4TAjV2p6TZQClp3uTUuqLTp5407pvBTIf/jbvVxEyxzLqkJOifU2jn
pkRKmi9/0YnLuauS4YKpSs5NSfWLOyCPOKX37ALypu0pKbXIKClp3vBwSvQy
+nPKj8+PHv4M55VUcpl3ZfRbdqtZqQIrmYh0e0ryuyQokpI6l0pJYboJJy6T
UaZMKjGFSx3ckNNLEjqr95wZyKiMPPtSUjRkdZKSPonfcUtJAymGl8v+pCTo
nHuhzh1JSZm8U1ykaUqaj7rU3cWRFb3cub1nXxC1yjhfYcaZp4dlwlmZMql1
3ZKS5h4IrQrcno+kpCgp6UtKWsoM5+jbcLxf11YuFL1NpR/T3pQ0ZZ8K7Uhb
+46T1L3E8sBztjnR6b3nFEFoSnxH7vq/ew/O/J3V7flISoqKXpXucmM/SEkr
U/pWJDMrNYVnuH2ckjdtT0mz3SlptXiLb9xtOv9Qr1Hv2SksTVJS+mZ7nnt7
PpKSGnlGl0pJK5nss7pVjt60POOoYEVK6tyOlHTKs6Sm37j7SEkttQtKdg1f
VZ+SX6XDTvhkU9JcbPW6fpaUdK9ndKmUtBLu1mmRksK3q2LPOCpYufcqQ9H0
xN8lfXzjrqWmHWjvwKeUEz+lZ0nLuanX+VlS0o2e0aVS0koxJX0SgSh1M8MD
SEmdq09J0+/+3e/KiRenpHC7Pv71hjZad6CTBp278fhcZqWtKSlcJDNLSrrR
M7pUSlo5kpKWn5DwJHZr5zIRZiU1MSwfrSdfrFFK2jqLGtd0oN1Et3o4OLem
pGj51KxlCisGqB5642Ge0aVS0kpNSvrU/UaJx5CSOpdKSdf/SUmjuKwD7Sn6
FL2lOfFiV/O58aaUlCqcn1X5jMk4PSj8+DHl7pZuIyWtZPLOvlk8wIhD+1Ue
mZLy1xQH5EFXdqATCP1I3bguj9LTg1Jmpe2eJUlJ93pGl0pJS5nMG50SnTVo
XibDDu1c/lp8scs2+ZoVPdX1HWiX0ZWp+oPfI6vInyqnxr9LmqSk+zyjS6Uk
KLry7pcT/bbQZ4W7OSAPuqUDnUnox40paVlga0oKU09mVmVEkpJaeEaXSklQ
5N5mUFISKTd2oH1HD8KUNC2+EnPWKvJP2zMRZi6/el0/67UpqZNt6aQZB0lJ
UCQldS71ieUtLtvka1b0YDf24ZWHCtSYTv3XGypPj9OBf7u7MvvUlzy+1Z3o
ZFs6acZBUhIUuaXpXOtL7aaL8mWbfM2KHuz2Pry9ATA7fjRG01D+4yMpqYWw
/z933MY8o0ulJCiSkjonJbFDD33o3EIndh+HxRyUqTn3VP5y+za/H6mNWm5d
/WZe1+8VWnVZBSkJim4fp+RNUhLb9dOH/bSEd9p6O3rWHezPxf/gD/5dD39P
GoOrbZl+fbRUX8nt19OLr6rAPlJS5154PndAHtdVHzrJ0L/TP9uXklqQkoAr
uYHp3AvP5w7I4zrsww6bxMs1/eKTlNRCmJLmKVIScDopqXM15/P5Qv9j8b8a
XEmVX07s5HzugDyuzz48/hWm6aYfa/Mk7ZLRai2356PnpaSV6AmhuHOlpC+/
S4Ii9xudqwkvq/gTTT3R6dOv/yeOTs7nDsjjuu3DgyecfR8dQ9PHRqk13p6P
XpKSwon53b31s8fM3JpLZw9X1SgpCYqkpM7lz8Dh3FRK+rF4zJRKWJ2czx2Q
x3Xeh7ubt/rE+KTm8FgXJ6PVqjOx5Wv1un5W+FZKWk4MrQpURpj6zyelJHgk
KalzW1NSfYCafOPu0Trvxsozz+omR0qiKHVvfH0z8sml+LqyWDEoPXWkpPZy
NCWtTiNS0kdKggq3X0rIa5GSinOlpAcYohu3NjKVmKCHZLS0IyWFi6RmbU1J
zD67UtK0+Ixxyn4rQ0qCJ5nPG/Qpf/rNzA1nTZ4lvcko3bjpFDTf5IyydTS1
uvvtyrQxJUXLp2ZNi6/kvfkbd1GpcLQssCklpZLRkpQEj9Tn9YXZ1pS0ikLh
rNQnYFLSw4zVjZWtHWujaKTbZLS0KSWlCqdmhSFLSppl8tFcYFNKWgal1BVz
X1CSkqBz/V9rXq4mvNSknmh6kpIebLhurDkXDbdRnCV/39uhTSlp37MkKSmq
eJBISV9SEhQNdNF5p5pzb/jQfwpUlu/hfO6APMWg3Zhp9lg3yZxi3J2+NSXl
09B07HdJd3dGX/alpMrPIaUkeJJBL0Dvse/c2+JPShrLuN3opPRywz02itqR
kurTkJR0xI7PHpcvojq/qkZJSVA0+pXo8aQk9hm9G0dvP5s8IxktZcLLvKWr
1ztmFSOSlBR64VU1SkqCoiddlR4p9cnVLS7b5GtW9GwP6MYHbAJ5F59brjRV
5Jfdf5sqf2T3HjFJSX9NSoKip16hHu+3hT4r3MfReKIHdKYT1PNc/8HLLaSk
bklJX1ISFD3+UvVUUhJFj+nMx2zIm70hGS2d+RT/sLs7oy93741f3NgPUhIU
3T5Oybv3BL6Sb+QpG3u8EmZP6s+zjjGuVHP2AG4hJUGR61fnpo6/G1CZoTZt
7PFKmD2vP5+3RY8kGUH/pCQoci3rXJ8padOTpsrNdByu7Hna18zdnfE3emsP
XwePluMHW+WCjh/4kpKgyCWjc1NnKen0G2lHYMrPbvlX/+p/7OHv3h3Uf5Sr
b+EF7tr2g5VEXzdyfS/xPI4ieINbLqzUm8ZJSUPc1A1kkpIG8bN//sE/+D97
+LtmT50+fi8+wBzPHOcogjdwp9q53lLS3Cp5pzUpaRQvSUlNR/qq2nlFqRdz
+cy5KFw2ui7YwVEEb+D+9l7F/s+npPmu4Pt6OWU5a7VIqob6lLRsvJS0T82u
vz0fSUk1HpySrhzgqSwTTT2pYuGsaD1ttoAXecBR5HdJUOT+9l7FoJHJL8tZ
y6QT5qBosXDW1pS02oqW/fRANbu+GF6WVhN3vL03JVUeRcV+u75h0+NS0pXd
G666+OKTzkSpWcvNcbLiuAccRVISFLm/vdcUsypQjEirKZlZla+3piR2qNn1
NU95wtfhi+LEflJS/v58Neua01exYc9IScXOv8bpKSlfD+zzgKNISoKi26+J
Lxe9VV7ulPqUVBOgpKR+1Oz6gykpWjJfrJ+UFJ6aoierC85gNQ2rTzHhlK/w
bXS9p6ek6BZdbEqHneiL4tvKCi8TH+evcXFvX+MB2yUlQdGDT2IXuODiMvWU
krjM59SUFBarqbyHlDT3xid9W9K6eTUN252SVhOjr8MXB1NSuAn3SrUn0+ef
Ld+py9fTTledfKNH9sMDNkdKgqLnnbvGUrx8Ty1T0ir71DxLcsCcpWbX1+SX
Wep7dOHcmppTa7nLJ5uSbm9YfUQKC0+lEFRZfzElLdtMa/o59KQ+ecC2SElQ
5KJ5r/COKyywNQplZqXiVWotqW/cOWaOq9n1m54lVU6chnqWtCqQWvD2hh1P
SZlKjqSk/DFGC3o74zGd84CtkJKg6DGnrEEV+z+TX1LZZwqeFtU/aapMSTUt
J69m17dLSZuC0i0pKVWgZuL1Ddv0dbtV+W+1NQvWpyTJ6Ea6Pe8Z/fOArZCS
oMiVtHP5CDPfC2V+PZQpHxaoT0lz867vk5donZLqg9KVKWlTmWtOXzV5tjLC
zNo9S3JKv5fOr6GXeiAlQZFLaufqU0zrv9Rx4hBqpBhh5lvi1MTlbXl0kWgN
d6WkSqsPAe5uzl+pSTHRZJR/xrQ7Jd3dH++l8+vpq9tJSVDkqtq5/lPS3M7L
+uQlKh/0XPBn5+adlZJSgWhTSvoYjPfR8/X01e2kJCiSkjo39aSmqdd0yxtM
UtIgpop/oPsrfJuZlZpSTEkft6A3yXT76vS4PKluPdOG1W5acN+xsaz/lKNr
9EN09PZ/pCSo4M52UL8tdFWhw+ksUtIoKiPMBX+r+/Ab++SFaj5HSr09suMu
2+nnVj768Tl6+z9SElSQkgbVbUr6OKhOEn7CfKO7O6NrU5cp6fOIG7mBFHt7
NZRSr4+st+keP7fy0Q/O0dv/kZKgglugzl18M5y3teWN+gS6cve4/EW0bbd0
y9sU+3n69VdjUyzdpCpZFpjSWTi6+PLYWC4ePXhWtYWVh1WFi1QedUMfmUM3
/ktKgiLX0M793Dv/4l/8zz387ThOHF3QA8PwApUp6RPEpU8pXETzSHTZaEzO
rz3MX5kCWxfJG/qwHLrxX1ISFLmP7dzQKWnehHP7BNjKMGztYErKV5K5Uq+m
h2+jBepDUGXJmq3It3wsQzf+S0qCIimpcw9ISR+HGWnRT8KXb/MflVNP7zVV
n5I+2d8oLQuET22K640WS4WdTFKrD0eZOvOGPiCHbjxQyY1H556RkuZtOaVP
eJjih+r5+0nq6b12NqWkz8ajepVcKqv9pBNNNJdFC+x4llRp6KNx6MYDlaSk
exX7/0kpqWZ7eaEdKcmjpd10WiPFM3nm2U3NhWBZOKw2Vclq+vJt/nW08qjo
IhUdNvahOHTjgUruNO61usREC+STy9f39XLKcla0/HLiZSlpudXwNW1PSam3
1NBpLYzVq5kxdVmdY/XYytCN//K7JCiSku41xT4VXBXIxJZV/Immnuj05cTr
U9LHgcfC6nPpeWK+wOcRNyp30XWnG6tLpaSDhm78l5QERW5W7xXt/OVOSUWY
cHoqJRWn3JKSMpvP26RGQbGA4+cIvXeu3vqzOECinzycstLKOnvrsbeRkqDo
JXca069S00MXlMy09rMlJVVmoq5SUqYTeI/UKMgXKM6iSO+dqJPOrBw4Pei8
eY8nJUHR4+9RO9/AVdvC1j4+JUX7gVeRkm6kA8/SSU9KSVSSkqCo8xBxxBCb
Nj8wyjxXOj0l5d/ekpI+2/dX8Zndldp1y+NF+3A5sViAg3TjKVp342pEhNM/
wbiYy0drWNWWqqfdWBv6wBu68V9SEhQ99U5jlI0q9v909u+S8nNvTEnz9oZT
oqv+OfFP/uTf9vA3ysEGKY7h4y7ow3wCCpuxTDqpYpX1nL4t7aq9xtCN/5KS
oOiRKelJW5SJMKnsM6UfFUWTVFcp6ZP9pHRV7PZ8JCXxGI+8FlzpmpQUvo4+
PwrLRF+EZ9p8XDrX0Mfb0I3/kpKgyJWxc/kIM1/XwinFWakabk9J84Z/fv1a
XVjg9nwkJfEwDubdbklJlc+AwnBUv7iUFDV047+kJCiSkjpXk1+u+bv+OAkT
32ru7flISuJ5HM/7XJOSUg+DKlPSjomNtmv0w2z09n+kJKggJXVOStqXkuZF
Vq+/b2uKSUm8lkN6n9b9tnoSNE9cniFXL8JFooEorKf1Fo1+jI3e/o+UBBUe
lpKetC1fYVK4UQ8bvixQDC/F1/lZUhKv5ajeoXWnXb9T2q1x9ANs9PZ/pCSo
cP3db1NP2pa83xb6rPCImrC2LyVNv3tsJCVBngN7q4elpKarG/Ho6uHzwxNJ
SVA09BgPPWlb8p6dkpakJLiLY3urpg9fLrtet17RoMdVtNmDbstHSoIKUtKg
3pOSVuYjtibRZDJROHFfRJKSeDaH91Z6LG/o/lk1fuhtkZKgSEoa1GtT0mx3
SppJSVDDEb7Jw66q5xq9Z6QkeJWHnc+ftC15UtKOlLRaJPM1PCkJlhzkW+mx
0DP6ZLkVQ2+RlARFUhKDqgw1mZ8dHf9F0ttSUvgbsVe5u/tvpge2cvx8sv9n
8EHNG/KYLQJSnnTu+vR91lpeKeb/5i+jU/BwP7O/onOv6ZBbjqJpY0qa+yf1
VkpKedhNzm76Yeu2x9PmTRr1yaC9cZm7e/18k5QEr/Gw81i32zL9+ow+dZpN
FQtn5euP1tDU9T0/Hcg15/51e9Sd4tlbt8+b+2TTtv8s/OPzo4e/N+8yTvew
Gycg5WGDvc9tyYSayryTeZ1fnZQkJe32sJPDud7cOaltj57Nbs9HUhKne8bw
97skKHrGYJ/1uS2ZVt2VklZfh4i+/cTS3HJW8QFWqvAppKTWnrpdZ3l5/+TP
XfOU2/ORlEQLDziipCQoelhK6lNvKWmVffJhJ5qYoukpfBtdxVmmnpy+dbd7
5Ead7qm9VLldq2LhUpOUxCVuPPnf60inSUlQdHygUZTp4XDWlM44NefGcJFN
ZaZEzIm+CCdGW+gAG45dVu+RfVW/UfmRPsVS0nyK+L4Op8+z5tfFt9EpUtLj
nRIWhnakB6QkKHr5GeYamSi0KSWFyxbzyPUpqbg6+nfuLpt+tZq4421Ngy87
sz3y8F6N8Xl0F89I4awwraxyTXR6ZmL0dWqulPRg9unSjt6QkqDoYSmp221J
ZZlMYAnfRqeEszblrFT5/IvU3OJ0hnD6/qo8xooTa+rPTGxxHD7p2J5iPokh
v1owOmsVWDKhKRVtMnOlpNd62H3LWbZ2i5QERQ872/S8Lcu7jtWUcFZYPr+n
ovVEq43Wllkw+uIT3DilbqjCiXSuxZ5aHWyZFYVzi+2Z0rfoxSnHPfLADs9F
qVnL6dEOz6ekmgyVWWr6NUZ92+Abd49nb6Zs6hkpCYoedvv6pG3plk5+thtT
UlispjH5lLSK6qdv3SOHw46UFJ2VT0nzHol+By+femq+sCclPZJdmVffP1IS
FElJg/pt4eIK39PJ79QoJYUhJbwVX82tbEkqdoXpqdGh+7wRkdk1J6akyi/a
1TyBkpJewn6sUdlLUhIUSUmDuislNfpAnn60fpZUOXHTs6ToYRmdUt/meo8f
DquncvliqynHU1LNl+6kpJewH2tISXCWh93xPmlb8m58lsSzdZWSwmKrQJTJ
QZ4lnWXrQ73llHwsiuag/EQp6c3sxxpSEpxFShqUlEQjvaWkfJOKKSlV54ke
f9o5MSXNvyf6ykzMvM0UzoSpBh3DpVaje/VpyVJ+2U0r2ldD/YqOn53CTZaS
4CxS0qCkJBo5fRBFb12WE8Pbm/zbVM3ROj+Ls1yj092zTzuZO8+wZDgl85Oi
E/+KK3r2PnqJfBY4HjeKa2yhuIodQ09KgrNISYOSkmjkPYPoLHrsS0qiKSmp
vkzNUlISFElJg5KSaOQ9g+gseixl6sndncFR05aUtNzp0derYqkXmblh81az
lmVWB2GqGdHX0VnFxsQ7cUFKgqIjl4/qq9PbnbvLvqQkGqk8Yvcd2MsR0Who
RNfVekUXrAVebjXQUm+jJ5kpyC+pMtEX0WXDgb+ctSxT34z6VkUrSXVOlJQE
RTtuJJre/D9Six6TkmjkgvByWf1SEjxGfUpKTczMyr8ozs2XWX1qWqw2FeKK
lWSmhKQkKNp69+5+4IgTe09KohEp6cgagUaGTkmplu94lpSpJDMF2KE+JXl+
dIqzulFKopHU8bn6GDP6CWfqc87wgh5WFS4SLhiuPdWY1bqiNaRaEi2QGbZO
jHCBTEz4/DrMUxPDU0F0wZqqwgZkyqTeFkvW1JlvCXBE/uq/Ktm6MS9xSk9K
STQSPT4rr/6fIPVUXvTziyybUX9TEda8dUPyfVI5FzhF6oQQ3sasJoYfenxi
J4qVVeHM3Pxa8oVT1UYXzFeS7ytgh3BwpYpd0Jj3ON6fUhKNRA/O1FV4SoeL
KXaLUrNIOD3atmL9m9ZV084Up0e4wLkD7dnDtmbr/C4JimpS0rNPJnc52KtS
Eo1kjsxUiMgEk/pwlKkz2rZi/Zm5y89pi4s7Q0IPpKR6UhKcQkq6i5REn/Lx
JPMsJl9gx7OkaDPq6z9rojMk9ODEgbZ6cHxKbZvKn7Leg6uQkqCoaUpanoju
Oh1dYF+TpCT6lEpJq4SyHNqZ18uJedFFom1bzaqpZNX46Jau6sn0RrG7gNNd
PNY2ra6380BNe6QkKIreiqwK7K65fi27a+6kzh2LH1yjlEQ79QfnpkBxvM7r
b0WkJOiElFRPSoJTNEpJqQ+BTyElfaQkWpKS6lfX290RPNWRz2yjz5TnifPb
1dywcHRutJL861Q9Z5GS4BSXpaTVGlNnqtWL8KwSLZCvp6ZktB/yS6Um1jty
bpSSaGfTkdniQh+ts90dRaoBlSVbNwb4HBtrq6v5amLqBiP6orJwWD5Vj5QE
3bo4JeXDTiq/hOXDt5l6as6N0YiUXyrayE2kJLrl5r+GXoLLHExJ4etMtPkE
l/h9keoTu0NY3ai0ICXBKTpJScUX4cTViSuzeH3JsLU1MS2zvXlSEj0TAfL0
D1zpxpRUX9UndofwSXzku5p+lsoKpSQouiwl7f4QJlU+tYojJSvLSEm8QdOP
OkenZ+B6u8dd/cek+y79mZRUrEdKgm41Skmf6jNJ8UX9GeZ4yWj7pSTeTBwI
6RO4xcEbktUdReZttPBqVn7ZYuFwqbNISXCWdinpEzt1hBOXb6MvPukz26Z6
KktGm7o6oa1e7D7XHelbKYnLHDzOn0EPwO12j76Lh+29Z4nKtUtJUFS86A8x
2AclJTGi6KcHj3d3rwN/Zd9gvHII33u6qF+7lARFxRuAUcb7iI5snZQEwAtt
vXRe9lnH7Z+obFq7lARFPaekrZ/ldhKp6s+TUhIAbHJ7GOnT1j6RkqCo55S0
lGpGJ81bkZIAoJ0+r/532dEbUhIUSUktSEkA0NTLfzx4cNulJChqlJJWIzcc
yNG3qyG/qiFcMFM4fJvallThmg1JbVSqQLjq1KwiKQkAZuGNxLPd3d/wfMWx
tmMkTr9Gm+nXHJEpUHyRKZBZ3ScdlPL1736bam2qo3aQkgAAoJGmKSl8u4oS
W1PSasFo5anVFdsWbVi0tlThsCX5z3ykJAAA6NAtKSmVfcJF/v/27mBJThAK
oGj+/6c7i1RSjMAD0edI5pzVtCJiZ9O3tDs33ksari2Y9tR9qOaWJpUEAAAv
lFpJw3zo1cTzlRQv7NTLYLXNU69RSQAAkGRYSZ/VUKpvxzS3HB5Oaw5ojixf
HmY4zNYcP1zq4UTDwfWxzdOVx558U79QSQAAkCT4GF+OyV7DY+d6D5UEAADv
pJK+i0oCAIB3mqmkzyOhNLmS/8P1K1VJAACQZL5Nfk7CZLvlnVRJAACQ5FQl
CaXr7noPVRIAACQ52z5C6Yob3z2VBAAASRbuEPV+JZumpPdKJQEAQJLrn96r
/1yIL+76lzpQSQAAkCT1kzx5VBIAACRRSZtSSQAAkEQlbUolAQBAEpW0KZUE
AABJVNKmVBIAACRRSZtSSQAAkEQlbUolAQBAEpW0KZUEAABJVNKmVBIAACRR
SZtSSQAAkEQlbUolAQBAEpW0KZUEAABJVNKmVBIAACRRSZtSSQAAkEQlbUol
AQBAEpW0KZUEAABJVNKmVBIAACRRSZtSSQAAkEQlbUolAQBAEpW0KZUEAABJ
VNKmVBIAACRRSZsSNQAAkEQlbUolAQBAEpUEAABQUkkAAAAllQQAAFBSSQAA
ACWVBAAAUFJJAAAAJZUEAABQWqukX381d8Xzl1uCeZqH//m7eVQ55+RSAQAA
agsFUWdLb7Z65t7emeCK5y8Dav4UAAAAB3mVFCfScNepLTNlpJIAAIAZN1bS
v7s5n9adnea9nuY8vcG9R+wW/gYAAOi5q5KCGupt6c3ZG3w4r0oCAAAy3FJJ
a1t6L3uDF564+xS/3qCSAACAGXdVUq0eE8wwPEVz5EwlBRsBAABqN34vqdwy
WUm9AooPj3cNH+cDAAAIrD2KFjzDVoZPfVPp8IWj4HG4enB91GFX7xRnrw4A
APjJdAQAAEBJJQEAAJSWK2n+RxJ6D9qtnfTi146GZ384GyUqAAC8zfL3kk7t
qn+NYdn1rBjO8MApAACA13q4kt4QICoJAAAILFTSYXz9DFvvobjgebzD3/XP
1vWmCp7l613azDKa5w2WOlxG88BgtfW7CgAAPONiJTVvEjUrafIeU10f8YDe
yObChluayRNccrDI+ly9sju1eAAAINtdldQbUG7pDa6r4fM1WIIBn1baNGce
rrmunubKewUULzLeeLjMhX8UAADgLk9WUr1rpn2GU9W1EpxxZs6zlbRwLymY
v74WAADgSXdVUpxOvb3zlXR25Hwl1feAvrGShosHAACyrd2waN6+qXeVA8pP
/s2XpXLa3rHNA+uFBRt7y6gXeeoqgjX3LiE+BAAAeNLap/HgEJ/tAQCArS3f
s2geJZEAAIDdebILAACgpJIAAABKKgkAAKBU/+YbAADAD/cbgYkCvQ==
                   
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 7->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/v9UyDH3QLUlDuW6DMG4hQOqJIESmelYJIkyLaFbsRza6yQYq2iW4a
SkRLgyho6FghJCSEroqCN8DboE51uPY5ery+PH/9Z+wZ+/PRT7fOscfj8dhj
+3t8znX/x3/6l//sz/+DaZr+zX/08z//7E/+7X/6V3/1J3/9n//Rzzf/xV/8
m//qX/3Fn/2X/9lf/Nd/9q/+7K/+kz/9D39O/Pc/y/7p35umv30NAADAyufz
+f4XAADg5ZZBCQAAABEJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIA
AFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoC
AABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElK
AgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJ
SgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABg
SUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFi6MSVNwAhuOT8AANzoxrug
e2/8gEq3nB8AAG50412QGzDonEEKALyTlASkGKQAwDtJSUCKQQoAvJOUBKQY
pADAO0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALxTtylp9/+xZbnI/N/QqmSq
hvrVhUul1nukqUfWkl+qZmOjbU71WKZkps7lxGKZ6Ipq6o+2rbjJqTbkO3ZK
HGypaotvM5uW6aV9zq0NAGAUN94FFVe9uqWsrDNaf3hvma92U5+kKq+ftaOp
4fRoyX1tS0m1ubii4q7MR49iCzfVn2lbTf35t5X7JT+rfq8Vlz1ISgIA3ulJ
Kan+LrRYbaOUlJm+tam7Y0XlnfnWNtTfyUf3e7Tm+hbW178pfOWbl2nq1imV
KanYLaePZSkJAHinZ6ekcFbljffpKWnHDX/984X6KfuaVFOmfmfVJKCDKSmz
7L6j/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT
6402oLh4ZbXRYsWJ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4ti
gdRN8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnT
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
D0hJU8xnY5Jt11QezOUG+iElQZHLVuf2paTVi+ufJYVb0ajwwaX6XNH1z5I+
QZI6WDmkOGCgB1ISFElJnZOSmi7V54parCKs86yUtKM8APeSkqBISurcwW/c
RadfnJKWX+uqLL97RfsWfMNaalLSjm/cZeqHIhcguIuUBEUuUp07+Cyph5S0
Y5NPX/bExg+akop1hr9OOrd+SHEZgutJSVDk8tS5+lAzP7IJ304L+yKSlNSi
qovXUpOS2tUPeVsfOgNHSElQ5KrUuX25JvXVuyN/Q6Sk1OKrH90ceW4iJbWu
hJdzVYILSElQ5HrUOSnpyOJTzOfXw37r6sZNSZlqT/wY3/mEU7g2QVNSEhS5
EnVud8BZfePuPSkpWsNqyipJHay8hYtT0ohrAWA3KQmKpKTORZ+G3OWyTT69
hklKal/z9WvhPRxRcC4pCYquvPvlRL8t9FnhbqcckJlY9HnxN+4+xxLivrXA
KVyt4ERSEhS57gxKSjpSyfTKf71hrvma54NOLLTgmgWnkJKgyBVnUFLSkXoO
ruKCIdNoFRd/i9K5hUYyB7CL2nGF714/3d3dfxEpCYpedU54EinpSFUHVxFd
fB5Kp4yp00flXfcDTi80FR7Gb7vXPZGu+3pJP0hJUPSGU8EjSUm7qzp+BcyE
r3lWiyB20F2fmjrD0Npy3L3wocApdFfo2X0iJUGRS8mgpKRbasvXuZzeYUr6
XP6Nu+V6r1kRL3fXET40HZXx4M6RkqDowWeAZ5OSbqltVefqTqz/lPS56cN2
JxkuEH1a6tgr0kV5+gdey0VkUFJShxWmEtOJqzjFLTeQt5xnnN9eJZWSHAMZ
OqeGXoJ3cgUZlJTUYYVTx/96Q1j/9WP/rtU5xb1BJiI5AFL0TD19BS/kCjIo
KenGOvMpqekqTnTL2L/l6ZVT3DsJSkW6pd7z+srvkqDI5WNQUtKROg+u4hkp
6bK13L7SRmvMP7y4WIsN7MrdHfyLuzvjNE/altae11dSEhQ97Jz/HlLSvmpP
uc+JLn7uHVR9PdfdGlY4feuOa7eunzX/7nd/08Pflf15l5/b+Md//L/28PeY
3n7Mhlzjed0lJUHRpnsb+iEl7ah2x/18prZTWnW8/p8lf3x+9PDXYUpquiIp
6UpS0umiG3LWebJy8RM780ibL25qJ6QkKJKSBiUlbapw91OPTJ2ntO14/SOm
pE0beISU9BhS0ulSG7KcfjAobZp+xFxn089qHrPrv6QkKJKSBiUl1dcmJXWY
kjZtY5+kpCtJSad7ZErqbZGeSUlQJCUNSkraVKGU1GFK2rSZ+3iWNJD8wNya
klbj/YUpqXii25qSVhVGT6rLMssXq9fRwuHbVCOjhcOSqQanmpFfaWb6oKQk
KCqeSOmTlLS1zvCCfrDCUxp2vP5p5JS0aUt7M1WkpPl4W73+vq0p9raUlLnj
3RFnoq/fk5I+2Ut8Znq4F6Zfs8/qbeZFpkBYZlUsmlkyrYoWq29GZqWptQxN
SoIiKWlQUtK+mnekpKnauU2tL5nKLEvh9LBwtMyqfHRxKSkfYYqv87PemZJW
Y2qSkjZa9V54jkptyJTIEctKwjL5F8u1T0E8CaekmlEsvCoZNriynlSF4cRx
SUlQFJ45GYKUtLvyIY75+hZGA8scW4qvUxM3LXskJW3a2K4cSUnTHx4bSUmz
aEpa3uWelZK+da7e1tc/Sm9ngkOmwCeRFKIpoyZo5ANIu5SUakZlPVIS8JGS
hiUlHam//8O+2LzlPeRZKalYPrOuIympZns71FVKeoMdKSlcdn79fbF6u7Xa
qOURcm/J6EE7F4sW+NTFh3DZYsnwRbS2fPli4dSsmmbkK0xNHJeUBEWr8yqj
kJKGWMtumRuY8F7oxGdJUywQrWZlVvc29SkmH5dSxTxLWs7d/Sxptexc+b5v
4o3S21MQLsIp0aXCnp/+EDTC6dEpqz0YfbuqYVVbtHxq1WFLwvak2h9tdnSl
qR4bl5QERdFTAf2TkvI19OOUTsjUNmVT0lLlN+6mIBOtFm/xLCm61Z2bjqWk
mZT0lR8400kpaUo8S3pqSsqfOg5WfryesTxsS6UkKDpyI8eNpKR8Df/yX/5P
PfwdvA+piVr5lJTJQZtSUuWzpN0bu9yc45VcY3dKWi04pb+G98KUlJm7OyVF
E9N04Bt3V3bLbjWnjiOVn1LPWB62pVISFElJg5KS8jXcno+OpKSacLQsfG5K
Ch8e5ReUkuqDUj4l7YtIj0lJeVtT0jyIVlP+OPi90qrYY1JS0cEN2XSa2lf5
kQItPGbXf0lJUCQlDUpKytdwez7akZJWdx2XpaQp9qgompLyQemsM8koZ6R9
KWney6m3UlLU1pTU7u8xvd15yigW3nqqPO4xu/5LSoIiKWlQUlK+htvzUX1K
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
nrywN1ab/MIeACnpLE4gDyYlDUpKeok+e6PPVtUbvf375FPSe56nzNu7mgKv
IiWdyDnkqV5yWXweKekl+uyNPltVb/T271P5LGn0zll9tzA1d/TNBPrhfPJU
LhaDkpJeos/e6LNV9UZv/z6rZBQNC6P3TLiNNzYGeA9nm0dyHRmUlPQS3fZG
tw2rNHr7dyh+x2z0y0H0ydEtLQHgAUa/LL6WlPQS3fZGtw2rNHr7d6j8Jc64
PZPfqHG3C1rwuyQocu0YlJT0Et32RrcNqzR6+3d4bUqap4+7aXA6KQmKpKRB
SUkv0W1vdNuwSqO3f6vVv2kQ/UXS6JeD4rOkobcOziUlteAk8zAuHIOSkl6i
597ouW1FQzeeqNTvkjxLgpCU1IKTzMNISYOSkl6i597ouW1FQzeelOi3CqUk
CElJjTjPPImUNCgp6SV67o2e21Y0dOPJyH+f0H6HLympESeZJ3HVGJSU9BKd
90bnzcsYt+UAx0lJ7bi+PIaUNCgp6SWa9sbUk3abmdr2i9cI0A8pqR3Xl8e4
5f6E46Skl2jaGz8r//H50cOflMSVbvokoBd3dz9dkJKaMtCewTlzUFLSSzTt
jenFKenjSHsfMeFLP/CRkhozvp7BqXJQUtJLSElNN//6lXIXuzukT95MSmrN
+HoAKWlQUtJLSElNN//6lXI9l7kMnfNaUlJrRtYDOEMOSkp6CSmp6eZfv1Ku
Z0fn6Z93kpIuYHCNTkoalJT0EjempPnHC9/Xq4nzrPz0VT1SEhezl2vopReS
kqBIShqUlPQSd6WkMAGlZuVfpwpISVzALq6nr95GSoIiKWlQUtKgtm7dLSkp
nL47JeWrlZJoyi6up6/eRkqCIilpUFLSoAZNSUcSk5TEXVK7eP4WaKpM5sp4
7mGzr7Zl885qj+HwNlLSZQyucUlJg5KSBrXcuuV92jW3ZGHlNSlp9cOi4u+P
wllSEterGVN3Db3jTm9e59sL4zK4xiUlDUpKGssU86n4TLiHlJR6ThSmpPq3
UhKtVQ4oKalRhcDM+BqUlDQoKWlQq61bfaxdLH96Y65JSfmIdFdK+jz9YHu5
rQNqdTVcfnwRfqyRf5FvQOpDkuinKPnmZda+qjPdT1WdAxxhcA1KShqUlDSo
IVJSfeTJRKEwTOVX124z8z1wy3q5wKYBFUabVOTJv8hklq1rWc7auvZogSLD
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
x1ybeLPnHb3P26J6p2y7lFQpE3yKmeiUPbU7JZ219uOV3L6K3Vz6ByUlvZCe
aaqme8UlBvW8g/Z5W1RPSrpSJvuEj5PCYi2CUv1SJxa7QD8tmbniD0pKeiE9
09qmq0/NydMJlk6s7uXm+7dxj8/nbVG9U7ZdSqqUT0nh21Wxsw7IrUGpfu39
DJl+WjJ7ySnleaSkF9Izre3o4fxla8enf3CiKebz66V/rIPzeVtU79xtl5Iq
FVPSJxFJTj8gj6ek8JhZVRh9u3qx2qjKWZl6wpakXl/vxlVzhJT0QnqmtYM9
HJ7Mw/sZuEXq/i2cNYrnbVG9U7ZdSqoUdmk0DoQlW5z86ysMG5maHi1ZGXlq
ZmXqqWlAuAlXcu0elJT0QnqmtbN6eEqrLHa9Uzbc1t2issGpt2ENN2/Pr07Z
ouG2Lm/au+1Lp6ekm7vyVwe3ZbVdqSnTrz0/pXdE6yZFy0R7I2x8anNufJGa
eL3TDyeuISW9kJ5p7fQLWf7y/fP1j8+PHv5aHFo/6/zv//Ive/hrtHW377VN
+y68U8rchPyc8t/963/dw19m6zZt0arkP/kn/0cPf7uPzN3bvtQiJf3Df/h/
9/DXNJJURqGmKamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d
2Xfz7Ud08SFS0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0Filp
UFLSC+mZFvJBpkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp
6amKGS28EqUKp65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp
8Dvt4tbdno+kpEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvv
sXffaRd7qT4lrXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G3
56MjKanyo60LLhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGq
UvWvajiyddHFpy15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG
9UTrjC7YYuu2ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42
vJ+WsImU9E46p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkp
unU7HvrU7OXoXmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop2
7MGUtJo4v/6u6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwz
XMW0KyWFBVKLV9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnR
Z0PFucVHSy227khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11d
X8/pbXubHd1OD6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+
n+0paRbGpe+L1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+
Xv13U+Wnb92NPp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXW
lrnATbGfDkUDzpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYT
aSurbbF1qQQ0JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1u
Cn5/NEulp7u+cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T
1MHzYXhFy1/jpuwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR
3bHc0bekpGiBrSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv
6JD8BtZPPK7Y1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn
2CmdksIX4e10DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV
6xZbtzslpSZOr3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14
vHZ7maakpNfSP41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRz
wTfuarZud0qqz8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp
8JRUuY2bLgF3mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5
WsWWqGiZcGK+WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML
5t+upi/rabF1WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w
7m4Fm0lJr6V/Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2
f+9MSRf8vfwqubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sff
ad+ej6Sk3Vt3ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653
+tbVa5GS+nFKF73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOd
eeGdW/0AUtJr6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZ
pKRxVX630FXsODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt
8AZS0nCCf6OiNiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6
qB19C7yBlDSWMCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJ
b6aL2tG3wBtISQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NF
TeleALoyekpKbVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek
1VLLFzU15+vJh7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzN
WtWTLxy9BIf1pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd
0tAedp3qdnOkpE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep2
06Skeqc/1MsEqB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP
6Z4HbLcN603YS8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClp
LPWHcevDfnflI45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9l
Is9qVmp6dEpqIozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd
8gnyUfFFtM6tpKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8
kYo/qRepiZtISWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yU
PvXRfX6pfCVhDZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX
4Thoa+ilmZQ0iiMpKXNzmLpTzdzc5hcsrjd/i9tnUJKS6hVTSbQnpaStHJA1
9FJTupexOGLr6asvKWkI+w7XypRUWb7+1rRmLfXr7YGUtMnqOVFm4mrWssym
KeEqUtPzLSmSksail5rSvYzFEVtPX31JSUM4mJI+6ft8KamGlDSo00ONlDQW
vdSU7mUs0ZuT6PU9Oj1T7Pjncrtv8xrdOBndX1JS/3YfqzVjJzrEzkpJB+vp
h5Q0KCnp5fRSU7qXgaQO10xKqqkhfzOTWe9ZGtVvdH9JSZ07EpFqPs2YM0v9
xyD5D0/CCpdvwzLRFfWWSnprD5WkJHRUO/qWgWRS0ieWa1bloxOjC0ZftCMl
NSUlvUHmYw0DoYaUNCgpCR3VlO5lFNenpPzoSH0yPAXCtURbG74I17VpwBrd
HynpHaSkg6SkQUlJ6KimdC+jyKekTxBtUjdL4fQwgBTvGVJPnaLTl7Myj6vq
F6lkdH+kpNeIfoyw47OFd9JLg5KS0FFN6V5GcTwlpe6jUnVmRkeqnvoQVFky
s0VFRvdHSurYKcfncjRlIlJqmLdLB2ONPilpUFISOqop3csojqSkTDLKpKTM
Sue5mSdBlc2rD1aZlqSat3WR55GS+nRWRFq+To3r6PDZ/eFDZXvGIiUNSkpC
RzWlexlFMSVVvs7P2logFYJSJXekpN2D1OimW8cPzk3Bp2bKceOOOClpUFIS
Oqop3csoar4zs3r4MqeMVZnUrFSdm8rkXy8n5kUXOd5jcLtTjsxMJcX682M8
NX7DyvMngWLlm7a3qR2nF65UedW4xmWbfNmK+rGv/af3CTPdyyiGOFanX++g
7q1ziB7jhU45MleVLG8zauqfEqlnWdvq9ar+sIawqnzl/YzQ3XdoXOPn3vnx
+dHD32XHyZUr+t3v/qaHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzEVd7Z
kZLq23kNKalzUlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHHbicl
9eaWlFRZeFNKOvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQU9uR
krpy+qcHqbfFMSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH5LSQ
mpVZqvg2fB2+yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4UwxdzcK
klocn6nbldRdzdyM1dxP6W4qWqD1iDOiP1JSTxyQ3XIDcK9i/0+LlBTeudVE
m2j55ZTo67D+y46TK1eUyizh61XhaJnMaylpFOEoc5Kkc42Oz1WQ+fyagMJV
L5NOqlhlPadvy4oR/ZGSuuFo7JkbgHsV78TCqBJ9nQ9KZ72+rE8uW1ExJaUm
SklPJSUxnHYpKXy9GhGpMtEXYaTKx6V2jOiPlAQV3ADcq3g/lklJ9d+Uk5JS
K8rEFinptUQkxnJZSsqHmkw4ql9cSrqMlARF7gHulfjc+pdP2KKRZ0p8fW71
rTkpKb+ifHJZRZ6VVDIKC0hJw5GSGEi7lBTmndUa8ylpx8QLhpsR/SUlQZF7
gCMyGecUn1hKmkVzU3T6apFiGoou0m4zb1STX3Y/S5KSxrU6Tu5uDhS0OEqn
9L/eME9cvQgXCV9E62m3FSEj+ktKup1DsX/uAe4VvXVfFcg/S6ovkCqZeb1a
/LI+uWxFo6ekj9NsMyISA2mXkq4kJV1JSrqX43AIbgPuVfzIOhNtMlOiqUdK
CleUT0ZS0ptJSQzkASnpeZeYzklJ93IcDsFtwL2K/V+fkqbgV0jHf4v02pQ0
W00J36ZeS0kP0O3psc9Wca9zj4orPyW4cqAZOzMp6UaOw1F0exvA1yq/rJ4T
pR4ezVPCRaZfpcpHF7xsky9b0Y7nPi3+pKRu9dm9fbaK2zkw8vTPkpR0F8fh
QKSkzoWZKP83pZ8KHfyTkqSk4YSp/0bnbtdqGz+XfyDfj2s2eQg6JEPPrEhJ
d3EoDsRJtXOTlNRyRbfnIympqZ+d84//8f/Zw98puymVEZan8WuOh59r+Uf/
6P/q4c/xH9InIX0SkpJu4VAci5TUuVM/cz3qsk2+bEX9OLIVJ/bJw0zPSknL
7Uq9veZ4mKSkvp11ehmaHsiTkm7haByLE8igflvos8LdnnFAXjayntFdjUhJ
jUhJYzn9U50h3N3rsOawHI6TyaCkpCFcsC1P6q7TTa9JSfOUa46HSUoC2MLJ
akRS0qCkpFG0HmIP665zPTUlhZv5OfVIK1YlJQFs4mQ1IilpUFLSWASlW2RS
0urLOauJ0berKZlit6SkcyvMf3NpmZLmYt/Xy+lhoplLpqZkSkYjkoMf9vG7
JChylRmUlDScdmPtqT12XDG5hK+jE6OzVlkpLP+YlBQeunNmCSNPMddEk05x
YiZJnbvt8BJSEhS5ygxKShpUi617do8dcSQlZSLScsrtKalFWIimpOVapuDJ
0SrLFAuspoTxKj/FsyQ4SEqCIleZQUlJ42rxyf+5FT7G7pSUykSpSr4n0vy6
HuOTTkk1uUZKgh5ISZdxmhqXq8ygpKShnTvu3tBj+0zVySX8Kt2mlHTvN+5O
lwpHywI1KSksk8lNqzrDlBStbayOhX5ISddwjhqaq8ygpKQHOGtL39NjWxVT
UubZkJQUzUdzgWJKmp2SklK1jdWx0A8p6QJOUKNzlRmUlPQMpwzAV/XYJrtT
Ujg3lZsenJLyBSq/Ppd6KlSfkvK1jdWx0A8p6QJOUKNzlRmUlPQkBzf5hT1W
6UhKygelaJh6TEoq2vq9uFRKWj0e2lHbwzoWLiMltebs9ACuMoOSkh7myEh8
Z4/VyMeWr8zEsExmSjGR3d0ZZwqjyjLUpN5OaWEyShUIa7u7M2BIUlJrzk4P
4CozKCnpkQSlc+WTyyl/lat42A6agi/O3fX3sI6Fy0hJTTk1PYOUNCgp6an2
DcmXd1qKlNSIlASjk5LacV56DClpUFLSs23tBJ0WlfmK1/Xu7owz3d2Xv7i7
M2BIUlI7zkuP4SozKCnp8TaNTZ3GlX4ebz8+P3r4c+TDPlJSI05KTyIlDUpK
eonK3tBpXElKgtFJSY04KT2JlDQoKek9ajpEp3ElKQlGJyVBkZQ0KCnpVYrj
VKdxJSkJRiclQZGUNCgp6YUyPaPTuJKUBKOTkqBIStpk+a8qHe+3HTW0219S
0hBSB4BO40rLlLT6F+fCFDNPn/8bLRkumKpHSgJ641z0SFJSvWVH7e63dtnq
YM1S0kAEJe4VRpia1/PbmohUU6eUBHTCueiRpKRKYS9JSY04IGuEI1e/cZma
lBR97lOZkiqTl5QE9MCJ6KmkpEr5n4RkunH1Jb3V69WL1brCMtG5YRuib/Nb
ISWNaPV888aW8Cr7UlIq6UhJcD2/SzqLs9CDSUmVap7gZJ43hS8+2TSUWbCy
QGoVKVLSoGoiMJwrjCpLF6ckVzHYQUo6i/PPg7m+VNqdklYTUxFm34vUM6bM
KlKkpKEZyFwp8yxpfnvxs6QjQ6DF2Jl6cvrW8QBS0imMr2dzCq0U9tIUfIA/
T1n16vJtWH7fi5qSqYlRUtLojGUuM+1KSVP6MdN82jz4jbt9o6DFwPlZ51//
9X/bw5/TAlFS0imMr2dzZ1WvmD5SSapYXkpackDuE8Z2aKQmJW1KOsefJa2a
t2kgRD/UOnhxlJLonJR0nMH1eFLSJuFzotTE1KzVJXgpnLuqJFo4v0ixhTMp
aXRTdSKGg1axZaX4kChTvrhUWDLTyPxYyJxa5wJHuuj2fCQlkSElHWRkvUHx
OkKfTg81UtLoplgYhxai0eaWv+JxXjMWpuCDr+j0rV10ez6SkqKi6fguN/aD
lHTQvbuPa9w+TtlHSiI0JW724FzTOClpbnD93ElKerSfHfJP/+n/3sOflDQu
w+olpKRBSUmEwq4zwGnhkk/Za21qc2pW9G195dE6M7Hla/W6fpaUdMQkJf2e
lARFm64y9ENKIlR5EwgH/Tyi/sW/+J97+Nt6bFde8naksLCGfHIpvs7PkpJ2
k5K+pKRN9n04w+js7kFJSYQyXWekc6JxU9Lc/tbDYUdKChfJzJKSdpOSvqSk
WfGEsCrgevoe9vWgpCRCxa7Tt5xi9JQ0b0W7EbE1JUXL52dl5kpJGVLSl5Q0
yz8nqp/I89jRg5KSCNV/leiCxvBgz0hJ87a0GBGbUlKqcGrW9OuPlaSkTVIp
6duZq7ffKVMgU0O+jJTUoXD/Tr8+OUotdVUDuY1bpkFJSYTqu04nc8STUtK8
RecOik0paeuzpGnLN/EM9pVMflnNWoWmVLGaRaSknkVT0nxOkJLeTErqXGbw
Xu+yTb5mRc+zqeuu3Kc8zLRISfP5Icwv4fSaYtGTT6qGc4/hE2ubWv4uKbOI
lFQ0ZTPOtD0ZHUlJDCF1IF186HK9zAFAD37unT/6o/+vh7/LjhMH5G47uk5v
s8MURJUpEX/CidHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeY
YpEnNXG1rGdJA8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNV
ow08WHMmucy3YavX9bP+evGLpOVEKalGMSWFcWn13CefjMKSUlLnUvloVSD1
lgezrzsnJbHJ7t7T7dR7fEqaN/PIgCp+F+6aP0N7ZXdKij5LWtWWf9tVSmJW
M9KLSYpHsrs7JyWxyZHe0/NUisafMAfli/WfkuaN3bEWKalbNSkpTEDRpaQk
eDYpqXNSEpsc7D0nBGrsTkmzgVLSvMmpdUWnTz1p3DeDmQ7/G3eriZlimXVJ
SdA/p9DOTYmUNF/+ohOXc1clwwVTlZybkuoXd0AecUrv2QXkTdtTUmqRUVLS
vOHhlOhl9OeUH58fPfwZziup5DLvyui37FazUgVWMhHp9pTkd0lQJCV1LpWS
wnQTTlwmo0yZVGIKlzq4IaeXJHRW7zkzkFEZefalpGjI6iQlfRK/45aSBlIM
L5f9SUnQOfdCnTuSkjJ5p7hI05Q0H3Wpu4sjK3q5c3vPviBqlXG+wowzTw/L
hLMyZVLruiUlzT0QWhW4PR9JSVFS0peUtJQZztG34Xi/rq1cKHqbSj+mvSlp
yj4V2pG29h0nqXuJ5YHnbHOi03vPKYLQlPiO3PV/9x6c+Tur2/ORlBQVvSrd
5cZ+kJJWpvStSGZWagrPcPs4JW/anpJmu1PSavEW37jbdP6hXqPes1NYmqSk
9M32PPf2fCQlNfKMLpWSVjLZZ3WrHL1pecZRwYqU1LkdKemUZ0lNv3H3kZJa
aheU7Bq+qj4lv0qHnfDJpqS52Op1/Swp6V7P6FIpaSXcrdMiJYVvV8WecVSw
cu9VhqLpib9L+vjGXUtNO9DegU8pJ35Kz5KWc1Ov87OkpBs9o0ulpJViSvok
AlHqZoYHkJI6V5+Spj/8u9+VEy9OSeF2ffzrDW207kAnDTp34/G5zEpbU1K4
SGaWlHSjZ3SplLRyJCUtPyHhSezWzmUizEpqYlg+Wk++WKOUtHUWNa7pQLuJ
bvVwcG5NSdHyqVnLFFYMUD30xsM8o0ulpJWalPSp+40SjyEldS6Vkq7/k5JG
cVkH2lP0KXpLc+LFruZz400pKVU4P6vyGZNxelD48WPK3S3dRkpayeSdfbN4
gBGH9qs8MiXlrykOyIOu7EAnEPqRunFdHqWnB6XMSts9S5KS7vWMLpWSljKZ
NzolOmvQvEyGHdq5/LX4Ypdt8jUreqrrO9AuoytT9Qe/R1aRP1VOjX+XNElJ
93lGl0pJUHTl3S8n+m2hzwp3c0AedEsHOpPQjxtT0rLA1pQUpp7MrMqIJCW1
8IwulZKgyL3NoKQkUm7sQPuOHoQpaVp8JeasVeSftmcizFx+9bp+1mtTUifb
0kkzDpKSoEhK6lzqE8tbXLbJ16zowW7swysPFagxnfqvN1SeHqcD/3Z3Zfap
L3l8qzvRybZ00oyDpCQockvTudaX2k0X5cs2+ZoVPdjtfXh7A2B2/GiMpqH8
x0dSUgth/3/uuI15RpdKSVAkJXVOSmKHHvrQuYVO7D4OizkoU3Puqfzl9m1+
P1Ibtdy6+s28rt8rtOqyClISFN0+TsmbpCS266cP+2kJ77T1dvSsO9ifi//u
d3/Tw9+TxuBqW6ZfHy3VV3L79fTiqyqwj5TUuReezx2Qx3XVh04y9O/0z/al
pBakJOBKbmA698LzuQPyuA77sMMm8XJNv/gkJbUQpqR5ipQEnE5K6lzN+Xy+
0P9Y/K8GV1LllxM7OZ87II/rsw+Pf4VpuunH2jxJu2S0Wsvt+eh5KWklekIo
7lwp6cvvkqDI/UbnasLLKv5EU090+vTr/4mjk/O5A/K4bvvw4Aln30fH0PSx
UWqNt+ejl6SkcGJ+d2/97DEzt+bS2cNVNUpKgiIpqXP5M3A4N5WSfiweM6US
VifncwfkcZ334e7mrT4xPqk5PNbFyWi16kxs+Vq9rp8VvpWSlhNDqwKVEab+
80kpCR5JSurc1pRUH6Am37h7tM67sfLMs7rJkZIoSt0bX9+MfHIpvq4sVgxK
Tx0pqb0cTUmr04iU9JGSoMLtlxLyWqSk4lwp6QGG6MatjUwlJughGS3tSEnh
IqlZW1MSs8+ulDQtPmOcst/KkJLgSebzBn3Kn34zc8NZk2dJbzJKN246Bc03
OaNsHU2t7n67Mm1MSdHyqVnT4it5b/7GXVQqHC0LbEpJqWS0JCXBI/V5fWG2
NSWtolA4K/UJmJT0MGN1Y2Vrx9ooGuk2GS1tSkmpwqlZYciSkmaZfDQX2JSS
lkEpdcXcF5SkJOhc/9eal6sJLzWpJ5qepKQHG64ba85Fw20UZ8nf93ZoU0ra
9yxJSooqHiRS0peUBEUDXXTeqebcGz70nwKV5Xs4nzsgTzFoN2aaPdZNMqcY
d6dvTUn5NDQd+13S3Z3Rl30pqfJzSCkJnmTQC9B77Dv3tviTksYybjc6Kb3c
cI+NonakpPo0JCUdseOzx+WLqM6vqlFSEhSNfiV6PCmJfUbvxtHbzybPSEZL
mfAyb+nq9Y5ZxYgkJYVeeFWNkpKg6ElXpUdKfXJ1i8s2+ZoVPdsDuvEBm0De
xeeWK00V+WX336bKH9m9R0xS0u9JSVD01CvU4/220GeF+zgaT/SAznSCep7r
P3i5hZTULSnpS0qCosdfqp5KSqLoMZ35mA15szcko6Uzn+Ifdndn9OXuvfGL
G/tBSoKi28cpefeewFfyjTxlY49XwuxJ/XnWMcaVas4ewC2kJChy/erc1PF3
Ayoz1KaNPV4Js+f15/O26JEkI+iflARFrmWd6zMlbXrSVLmZjsOVPU/7mrm7
M/5Ob+3h6+DRcvxgq1zQ8QNfUhIUuWR0buosJZ1+I+0ITPnZLf/u3/03Pfzd
u4P6j3L1LbzAXdt+sJLo60au7yWex1EEb3DLhZV60zgpaYibuoFMUtIgfvbP
P/gH/08Pf9fsqdPH78UHmOOZ4xxF8AbuVDvXW0qaWyXvtCYljeIlKanpSF9V
O68o9WIunzkXhctG1wU7OIrgDdzf3qvY//mUNN8VfF8vpyxnrRZJ1VCfkpaN
l5L2qdn1t+cjKanGg1PSlQM8lWWiqSdVLJwVrafNFvAiDziK/C4Jitzf3qsY
NDL5ZTlrmXTCHBQtFs7ampJWW9Gynx6oZtcXw8vSauKOt/empMqjqNhv1zds
elxKurJ7w1UXX3zSmSg1a7k5TlYc94CjSEqCIve395piVgWKEWk1JTOr8vXW
lMQONbu+5ilP+Dp8UZzYT0rK35+vZl1z+io27Bkpqdj51zg9JeXrgX0ecBRJ
SVB0+zXx5aK3ysudUp+SagKUlNSPml1/MCVFS+aL9ZOSwlNT9GR1wRmspmH1
KSac8hW+ja739JQU3aKLTemwE31RfFtZ4WXi4/w1Lu7tazxgu6QkKHrwSewC
F1xcpp5SEpf5nJqSwmI1lfeQkube+KRvS1o3r6Zhu1PSamL0dfjiYEoKN+Fe
qfZk+vyz5Tt1+Xra6aqTb/TIfnjA5khJUPS8c9dYipfvqWVKWmWfmmdJDpiz
1Oz6mvwyS32PLpxbU3NqLXf5ZFPS7Q2rj0hh4akUgirrL6akZZtpTT+HntQn
D9gWKQmKXDTvFd5xhQW2RqHMrFS8Sq0l9Y07x8xxNbt+07OkyonTUM+SVgVS
C97esOMpKVPJkZSUP8ZoQW9nPKZzHrAVUhIUPeaUNahi/2fySyr7TMHTovon
TZUpqabl5NXs+nYpaVNQuiUlpQrUTLy+YZu+brcq/622ZsH6lCQZ3Ui35z2j
fx6wFVISFLmSdi4fYeZ7ocyvhzLlwwL1KWlu3vV98hKtU1J9ULoyJW0qc83p
qybPVkaYWbtnSU7p99L5NfRSD6QkKHJJ7Vx9imn9lzpOHEKNFCPMfEucmri8
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
xnCRTWWmRMyJvggnRlvoABuOXVbvkX1Vv1H5kT7FUtJ8ivi+DqfPs+bXxbfR
KVLS450SFoZ2pAekJCh6+RnmGpkotCklhcsW88j1Kam4Ovp37i6bfrWauONt
TYMvO7M98vBejfF5dBfPSOGsMK2sck10emZi9HVqrpT0YPbp0o7ekJKg6GEp
qdttSWWZTGAJ30anhLM25axU+fyL1NzidIZw+v6qPMaKE2vqz0xscRw+6die
Yj6JIb9aMDprFVgyoSkVbTJzpaTXeth9y1m2douUBEUPO9v0vC3Lu47VlHBW
WD6/p6L1RKuN1pZZMPriE9w4pW6owol0rsWeWh1smRWFc4vtmdK36MUpxz3y
wA7PRalZy+nRDs+npJoMlVlq+jVGfdvgG3ePZ2+mbOoZKQmKHnb7+qRt6ZZO
frYbU1JYrKYx+ZS0iuqnb90jh8OOlBSdlU9J8x6Jfgcvn3pqvrAnJT2SXZlX
3z9SEhRJSYP6beHiCt/Tye/UKCWFISW8FV/NrWxJKnaF6anRofu8EZHZNSem
pMov2tU8gZKSXsJ+rFHZS1ISFElJg7orJTX6QJ5+tH6WVDlx07Ok6GEZnVLf
5nqPHw6rp3L5Yqspx1NSzZfupKSXsB9rSElwlofd8T5pW/JufJbEs3WVksJi
q0CUyUGeJZ1l60O95ZR8LIrmoPxEKenN7McaUhKcRUoalJREI72lpHyTiikp
VeeJHn/aOTElzb8n+spMzLzNFM6EqQYdw6VWo3v1aclSftlNK9pXQ/2Kjp+d
wk2WkuAsUtKgpCQaOX0QRW9dlhPD25v821TN0To/i7Nco9Pds087mTvPsGQ4
JfOTohP/iit69j56iXwWOB43imtsobiKHUNPSoKzSEmDkpJo5D2D6Cx67EtK
oikpqb5MzVJSEhRJSYOSkmjkPYPoLHosZerJ3Z3BUdOWlLTc6dHXq2KpF5m5
YfNWs5ZlVgdhqhnR19FZxcbEO3FBSoKiI5eP6qvT2527y76kJBqpPGL3HdjL
EdFoaETX1XpFF6wFXm410FJvoyeZKcgvqTLRF9Flw4G/nLUsU9+M+lZFK0l1
TpSUBEU7biSa3vw/Uosek5Jo5ILwcln9UhI8Rn1KSk3MzMq/KM7Nl1l9alqs
NhXiipVkpoSkJCjaevfufuCIE3tPSqIRKenIGoFGhk5JqZbveJaUqSQzBdih
PiV5fnSKs7pRSqKR1PG5+hgz+gln6nPO8IIeVhUuEi4Yrj3VmNW6ojWkWhIt
kBm2ToxwgUxM+Pw6zFMTw1NBdMGaqsIGZMqk3hZL1tSZbwlwRP7qvyrZujEv
cUpPSkk0Ej0+K6/+nyD1VF7084ssm1F/UxHWvHVD8n1SORc4ReqEEN7GrCaG
H3p8YieKlVXhzNz8WvKFU9VGF8xXku8rYIdwcKWKXdCY9zjen1ISjUQPztRV
eEqHiyl2i1KzSDg92rZi/ZvWVdPOFKdHuMC5A+3Zw7Zm6/wuCYpqUtKzTyZ3
OdirUhKNZI7MVIjIBJP6cJSpM9q2Yv2ZucvPaYuLO0NCD6SkelISnEJKuouU
RJ/y8STzLCZfYMezpGgz6us/a6IzJPTgxIG2enB8Sm2byp+y3oOrkJKgqGlK
Wp6I7jodXWBfk6Qk+pRKSauEshzamdfLiXnRRaJtW82qqWTV+OiWrurJ9Eax
u4DTXTzWNq2ut/NATXukJCiK3oqsCuyuuX4tu2vupM4dix9co5REO/UH56ZA
cbzO629FpCTohJRUT0qCUzRKSakPgU8hJX2kJFqSkupX19vdETzVkc9so8+U
54nz29XcsHB0brSS/OtUPWeRkuAUl6Wk1RpTZ6rVi/CsEi2Qr6emZLQf8kul
JtY7cm6Ukmhn05HZ4kIfrbPdHUWqAZUlWzcG+Bwba6ur+Wpi6gYj+qKycFg+
VY+UBN26OCXlw04qv4Tlw7eZemrOjdGIlF8q2shNpCS65ea/hl6CyxxMSeHr
TLT5BJf4fZHqE7tDWN2otCAlwSk6SUnFF+HE1Ykrs3h9ybC1NTEts715UhI9
EwHy9A9c6caUVF/VJ3aH8El85LuafpbKCqUkKLosJe3+ECZVPrWKIyUry0hJ
vEHTjzpHp2fgervHXf3HpPsu/ZmUVKxHSoJuNUpJn+ozSfFF/RnmeMlo+6Uk
3kwcCOkTuMXBG5LVHUXmbbTwalZ+2WLhcKmzSElwlnYp6RM7dYQTl2+jLz7p
M9umeipLRpu6OqGtXuw+1x3pWymJyxw8zp9BD8Dtdo++i4ftvWeJyrVLSVBU
vOgPMdgHJSUxouinB493d68Df2vfYLxyCN97uqhfu5QERcUbgFHG+4iObJ2U
BMALbb10XvZZx+2fqGxau5QERT2npK2f5XYSqerPk1ISAGxyexjp09Y+kZKg
qOeUtJRqRifNW5GSAKCdPq/+d9nRG1ISFElJLUhJANDUy388eHDbpSQoapSS
ViM3HMjRt6shv6ohXDBTOHyb2pZU4ZoNSW1UqkC46tSsIikJAGbhjcSz3d3f
8HzFsbZjJE6/Rpvp1xyRKVB8kSmQWd0nHZTy9e9+m2ptqqN2kJIAAKCRpikp
fLuKEltT0mrBaOWp1RXbFm1YtLZU4bAl+c98pCQAAOjQ/9/eHSzJCUIBFM3/
/3RnkUqKEXgg+hzJnLOaVkTsbPqWdudbKqnXPvUhN95LGq4tmPbUfajmliaV
BAAAL5RaScN86NXE85UUL+zUy2C1zVOvUUkAAJBkWEmf1VCqb8c0txweTmsO
aI4sXx5mOMzWHD9c6uFEw8H1sc3TlceefFO/UEkAAJAk+Bhfjslew2Pneg+V
BAAA76SSvotKAgCAd5qppM8joTS5kv/D9StVSQAAkGS+TX5OwmS75Z1USQAA
kORUJQml6+56D1USAAAkOds+QumKG989lQQAAEkW7hD1fiWbpqT3SiUBAECS
65/eq/9ciC/u+pc6UEkAAJAk9ZM8eVQSAAAkUUmbUkkAAJBEJW1KJQEAQBKV
tCmVBAAASVTSplQSAAAkUUmbUkkAAJBEJW1KJQEAQBKVtCmVBAAASVTSplQS
AAAkUUmbUkkAAJBEJW1KJQEAQBKVtCmVBAAASVTSplQSAAAkUUmbUkkAAJBE
JW1KJQEAQBKVtCmVBAAASVTSplQSAAAkUUmbUkkAAJBEJW1KJQEAQBKVtCmV
BAAASVTSplQSAAAkUUmbEjUAAJBEJW1KJQEAQBKVBAAAUFJJAAAAJZUEAABQ
UkkAAAAllQQAAFBSSQAAACWVBAAAUFqrpF9/NXfF85dbgnmah//5u3lUOefk
UgEAAGoLBVFnS2+2eube3pngiucvA2r+FAAAAAd5lRQn0nDXqS0zZaSSAACA
GTdW0r+7OZ/WnZ3mvZ7mPL3BvUfsFv4GAADouauSghrqbenN2Rt8OK9KAgAA
MtxSSWtbei97gxeeuPsUv96gkgAAgBl3VVKtHhPMMDxFc+RMJQUbAQAAajd+
L6ncMllJvQKKD493DR/nAwAACKw9ihY8w1aGT31T6fCFo+BxuHpwfdRhV+8U
Z68OAAD4yXQEAABASSUBAACUlitp/kcSeg/arZ304teOhmd/OBslKgAAvM3y
95JO7ap/jWHZ9awYzvDAKQAAgNd6uJLeECAqCQAACCxU0mF8/Qxb76G44Hm8
w9/1z9b1pgqe5etd2swymucNljpcRvPAYLX1uwoAADzjYiU1bxI1K2nyHlNd
H/GA3sjmwoZbmskTXHKwyPpcvbI7tXgAACDbXZXUG1Bu6Q2uq+HzNViCAZ9W
2jRnHq65rp7mynsFFC8y3ni4zIV/FAAA4C5PVlK9a6Z9hlPVtRKccWbOs5W0
cC8pmL++FgAA4El3VVKcTr2985V0duR8JdX3gL6xkoaLBwAAsq3dsGjevql3
lQPKT/7Nl6Vy2t6xzQPrhQUbe8uoF3nqKoI19y4hPgQAAHjS2qfx4BCf7QEA
gK0t37NoHiWRAACA3XmyCwAAoKSSAAAASioJAACgVP/mGwAAwA/3G14xaF0=

                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 8->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3U/r9UyDJ/SgLlz6FnwXzmbA3rkaaOmmoWdgprGd6c0j9AjPuGi4mY2z
daMgiKDCMIIguJYLN74nV8er+/Ckc6X+5k8lVcnnw4+bc5JKpVJJJfmenHPd
//Ff/Fd//F/+e9M0/cv/8Od//vif/f4//eu//mf/zX/+H/188ye/+5d/9c9/
95f/xX/2u//6L//5X/71f/IX//7Pif/fz7J/8R9M09++BgAAYOXz+Xz/CwAA
8HLLoAQAAICIBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAs3ZiSJmAEt5wfAABudONd0L03fkCl
W84PAAA3uvEuyA0YdM4gBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J2k
JCDFIAUA3klKAlIMUgDgnaQkIMUgBQDeqduUtPv/2LJcZP5vaFUyVUP96sKl
Uus90tQja8kvVbOx0TaneixTMlPncmKxTHRFNfVH21bc5FQb8h07JQ62VLXF
t5lNy/TSPufWBgAwihvvgoqrXt1SVtYZrT+8t8xXu6lPUpXXz9rR1HB6tOS+
tqWk2lxcUXFX5qNHsYWb6s+0rab+/NvK/ZKfVb/XisseJCUBAO/0pJRUfxda
rLZRSspM39rU3bGi8s58axvq7+Sj+z1ac30L6+vfFL7yzcs0deuUypRU7JbT
x7KUBAC807NTUjir8sb79JS044a//vlC/ZR9TaopU7+zahLQwZSUWXbf0X5j
Stq0LikJAOAUnaekpZoKa6qqWWRrSsrUv2m99YuckpI2de9yqUy1qfVGG1Bc
vLLaaLHixHo1matmB4VSdYarKK5r36blbTo2AAAe48a7oOKq65NFsUDqJvms
lJRaaut684vkQ82OlFRsTKaRmS1KtTxTskVKitafb1um/ny0idacaWSxqZtS
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
szHJtmsqD+ZyA/2QkqDIZatz+1LS6sX1z5LCrWhU+OBSfa7o+mdJnyBJHawc
Uhww0AMpCYqkpM5JSU2X6nNFLVYR1nlWStpRHoB7SUlQJCV17uA37qLTL05J
y691VZbfvaJ9C75hLTUpacc37jL1Q5ELENxFSoIiF6nOHXyW1ENK2rHJpy97
YuMHTUnFOsNfJ51bP6S4DMH1pCQocnnqXH2omR/ZhG+nhX0RSUpqUdXFa6lJ
Se3qh7ytD52BI6QkKHJV6ty+XJP66t2RvyFSUmrx1Y9ujjw3kZJaV8LLuSrB
BaQkKHI96pyUdGTxKebz62G/dXXjpqRMtSd+jO98wilcm6ApKQmKXIk6tzvg
rL5x956UFK1hNWWVpA5W3sLFKWnEtQCwm5QERVJS56JPQ+5y2SafXsMkJbWv
+fq18B6OKDiXlARFV979cqLfFvqscLdTDshMLPq8+Bt3n2MJcd9a4BSuVnAi
KQmKXHcGJSUdqWR65b/eMNd8zfNBJxZacM2CU0hJUOSKMygp6Ug9B1dxwZBp
tIqLv0Xp3EIjmQPYRe24wnevn+7u7r+IlARFrzonPImUdKSqg6uILj4PpVPG
1Omj8q77AacXmgoP47fd655I1329pB+kJCh6w6ngkaSk3VUdvwJmwtc8q0UQ
O+iuT02dYWhtOe5e+FDgFLor9Ow+kZKgyKVkUFLSLbXl61xO7zAlfS7/xt1y
vdesiJe76wgfmo7KeHDnSElQ9OAzwLNJSbfUtqpzdSfWf0r63PRhu5MMF4g+
LXXsFemiPP0Dr+UiMigpqcMKU4npxFWc4pYbyFvOM85vr5JKSY6BDJ1TQy/B
O7mCDEpK6rDCqeN/vSGs//qxf9fqnOLeIBORHAApeqaevoIXcgUZlJR0Y535
lNR0FSe6Zezf8vTKKe6dBKUi3VLveX3ld0lQ5PIxKCnpSJ0HV/GMlHTZWm5f
aaM15h9eXKzFBnbl7g7+xd2dcZonbUtrz+srKQmKHnbOfw8paV+1p9znRBc/
9w6qvp7rbg0rnL51x7Vb18+a/+Zv/nUPf1f2511+buMf/dH/3cPfY3r7MRty
jed1l5QERZvubeiHlLSj2h3385naTmnV8fp/lvzx+dHDX4cpqemKpKQrSUmn
i27IWefJysVP7Mwjbb64qZ2QkqBIShqUlLSpwt1PPTJ1ntK24/WPmJI2beAR
UtJjSEmnS23IcvrBoLRp+hFznU0/q3nMrv+SkqBIShqUlFRfm5TUYUratI19
kpKuJCWd7pEpqbdFeiYlQZGUNCgpaVOFUlKHKWnTZu7jWdJA8gNza0pajfcX
pqTiiW5rSlpVGD2pLsssX6xeRwuHb1ONjBYOS6YanGpGfqWZ6YOSkqCoeCKl
T1LS1jrDC/rBCk9p2PH6p5FT0qYt7c1UkZLm4231+vu2ptjbUlLmjndHnIm+
fk9K+mQv8Znp4V6Yfs0+q7eZF5kCYZlVsWhmybQqWqy+GZmVptYyNCkJiqSk
QUlJ+2rekZKmauc2tb5kKrMshdPDwtEyq/LRxaWkfIQpvs7PemdKWo2pSUra
aNV74TkqtSFTIkcsKwnL5F8s1z4F8SSckmpGsfCqZNjgynpSFYYTxyUlQVF4
5mQIUtLuyoc45utbGA0sc2wpvk5N3LTskZS0aWO7ciQlTX94bCQlzaIpaXmX
e1ZK+ta5eltf/yi9nQkOmQKfRFKIpoyaoJEPIO1SUqoZlfVIScBHShqWlHSk
/v4P+2LzlveQZ6WkYvnMuo6kpJrt7VBXKekNdqSkcNn59ffF6u3WaqOWR8i9
JaMH7VwsWuBTFx/CZYslwxfR2vLli4VTs2qaka8wNXFcUhIUrc6rjEJKGmIt
u2VuYMJ7oROfJU2xQLSalVnd29SnmHxcShXzLGk5d/ezpNWyc+X7vok3Sm9P
QbgIp0SXCnt++kPQCKdHp6z2YPTtqoZVbdHyqVWHLQnbk2p/tNnRlaZ6bFxS
EhRFTwX0T0rK19CPUzohU9uUTUlLld+4m4JMtFq8xbOk6FZ3bjqWkmZS0ld+
4EwnpaQp8SzpqSkpf+o4WPnxesbysC2VkqDoyI0cN5KS8jX8w3/4//Twd/A+
pCZq5VNSJgdtSkmVz5J2b+xyc45Xco3dKWm14JT+Gt4LU1Jm7u6UFE1M04Fv
3F3ZLbvVnDqOVH5KPWN52JZKSVAkJQ1KSsrXcHs+OpKSasLRsvC5KSl8eJRf
UEqqD0r5lLQvIj0mJeVtTUnzIFpN+aPg90qrYo9JSUUHN2TTaWpf5UcKtPCY
Xf8lJUGRlDQoKSlfw+35aEdKWt11XJaSoo+KoikpH5TOOpOMckbal5LmvZx6
KyVFbU1J7f4e09udp4xi4a2nyuMes+u/pCQokpIGJSXla7g9H9WnpNRHsgdT
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
Jwdu5MAYlJT0Bv10xb0paV77KiWtyqwmRqPNPCtaIFN+uJQUnttTd4wdbkuN
h21vcXMqU0wYf4rFUmFqlJQUdle+M6dsbJnq0tByYmZWz9+4k5KWMkNvUxke
xr4elJT0Bl11xTWNid7ezKepKQgsyynTIihFc80q/hQjUvT1WClpeYbPXPov
bOZpHra9xc2pCTJhmUxKWuWpcVNSqHgayT9LmmKPgTIToxVm1iIldSgz9JYF
Um95Kjt6UFLSG3TVFWc1JlNP5t5mti8l1UypTEzRx1j9y/T8PLdYQ+Vuurfk
XHhKb+9wPntTUj4WzVO2pqS7++Oo4jfupiD+RBef0l+ry6xFSupQ5mj5JG6V
oxN5GHt5UFLSG3TVFWc15kg903kpKfX9umj5aIWn9MaJUtf3ZYHUgpc08GQP
297i5hxJSWEaWr14w7Ok5dx9KSn6LGm2NSVFG0m3UkfaVQc198jsfXomJb1B
b11xSnumaf1c4FN9Ipqyz3SOPzmaEj9Zik453hXnKl7To9PHvQQ8bHuLm3PK
s6R3pqRwbjElzSkmk3pWU/JvPUvqXJCKfjlyUnuqz5MJJ+r2kkGelPQGvXXF
kfakrkHLU1Cx/qku/lQWq0xJqVXs7opGak7m4aW/ww2p9LDtLbbtyO+SMs+S
wi/jPSYlZebWpKTUsyQp6ZGKyTq1VPumcaeerxpkSElv0FtXnNKeVSU1n9ct
C5yVkuZA9JVKSal41duuqZe/GXiex2zvvn/jrvii+BBqxJSUl8ov80ES/ZZd
OGs5Jf9WSupfMVlHo9PQpxRq2MuDkpLeoLeuGDQl1WefVLHoeo93BdTb9/9L
Cicu/6Ske/+kpIGs7pbdPL+EHT0oKekNOuyK400KU9I8ZWtKmj+wjU4M50bL
p1JSqhIpiVtsCjJN/6QkKemdVheFT5fXaM4lJQ1KSnqDDrvi9CbN15qamvMB
5/hfff0d7hoqDXrVk5LOIiV9SUnHjXgmYZNBrxdISS/RW280Skn1haUkjog+
uBxib0pJZwkfN9/oxn6Qkk5x706ktdvHKftISS/RYW+c26RNtd12KxNzYidw
veUeHGJvRn9YdNff3Z3BCaSkUwxx9mA3l/tBSUkv0WFvnNikuxJHh73a2rKr
xb3Pr1/1fHlX8E5S0lmcOh7MpWFQUtJLdNgbHTZpqwdswg6ppycv7I3VJr+w
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
87ao3inbLiVVygSfYiY6ZU/tTklnrf14JbevYjeX/kFJSS+kZ5qq6V5xiUE9
76B93hbVk5KulMk+4eOksFiLoFS/1InFLtBPS2au+IOSkl5Iz7S26epTc/J0
gqUTq3u5+f5t3OPzeVtU75Rtl5Iq5VNS+HZV7KwDcmtQql97P0Omn5bMXnJK
eR4p6YX0TGs7ejh/2drx6R+caIr5/HrpH+vgfN4W1Tt326WkSsWU9ElEktMP
yOMpKTxmVhVG365erDaqclamnrAlqdfXu3HVHCElvZCeae1gD4cn8/B+Bm6R
un8LZ43ieVtU75Rtl5IqhV0ajQNhyRYn//oKw0ampkdLVkaemlmZemoaEG7C
lVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6m1Yw83b86tTtmi4rcub9m77
0ukp6eau/NXBbVltV2rK9GvPT+kd0bpJ0TLR3ggbn9qcG1+kJl7v9MOJa0hJ
L6RnWjv9Qpa/fP98/ePzo4e/FofWzzr/7M/+bQ9/jbbu9r22ad+Fd0qZm5Cf
U/70T/9dD3+Zrdu0RauSf/In/3sPf7uPzN3bvtQiJf2jf/R/9vDXNJJURqGm
KamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d2Xfz7Ud08SFS
0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0FilpUFLSC+mZFvJB
pkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp6amKGS28EqUK
p65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp8Dvt4tbdno+k
pEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvvsXffaRd7qT4l
rXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G356MjKanyo60L
LhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGqUvWvajiyddHF
py15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG9UTrjC7YYuu2
ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42vJ+WsImU9E46
p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkpunU7HvrU7OXo
XmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop27MGUtJo4v/6u
6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwzXMW0KyWFBVKL
V9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnRZ0PFucVHSy22
7khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11dX8/pbXubHd1O
D6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+n+0paRbGpe+L
1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+Xv13U+Wnb92N
Pp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXWlrnATbGfDkUD
zpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYTaSurbbF1qQQ0
JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1uCn5/NEulp7u+
cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T1MHzYXhFy1/j
puwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR3bHc0bekpGiB
rSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv6JD8BtZPPK7Y
1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn2CmdksIX4e10
DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV6xZbtzslpSZO
r3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14vHZ7maakpNfS
P41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRzwTfuarZud0qq
z8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp8JRUuY2bLgF3
mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5WsWWqGiZcGK+
WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML5t+upi/rabF1
WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w7m4Fm0lJr6V/
Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2f+9MSRf8vfwq
ubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sffad+ej6Sk3Vt3
ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653+tbVa5GS+nFK
F73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOdeeGdW/0AUtJr
6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZpKRxVX630FXs
ODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt8AZS0nCCf6Oi
NiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6qB19C7yBlDSW
MCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJb6aL2tG3wBtI
SQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NFTeleALoyekpK
bVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek1VLLFzU15+vJ
h7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzNWtWTLxy9BIf1
pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd0tAedp3qdnOk
pE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep206Skeqc/1MsE
qB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP6Z4HbLcN603Y
S8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClpLPWHcevDfnfl
I45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9lIs9qVmp6dEpq
IozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd8gnyUfFFtM6t
pKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8kYo/qRepiZtI
SWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yUPvXRfX6pfCVh
DZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX4Thoa+ilmZQ0
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
lHQK4+vZ3FnVK6aPVJIqlpeSlhyQ+4SxHRqpSUmbks7xZ0mr5m0aCNEPtQ5e
HKUkOiclHWdwPZ6UtEn4nCg1MTVrdQleCueuKokWzi9SbOFMShrdVJ2I4aBV
bFkpPiTKlC8uFZbMNDI/FjKn1rnAkS66PR9JSWRISQcZWW9QvI7Qp9NDjZQ0
uikWxqGFaLS55a94nNeMhSn44Cs6fWsX3Z6PpKSoaDq+y439ICUddO/u4xq3
j1P2kZIITYmbPTjXNE5KmhtcP3eSkh7tZ4f86Z/+ux7+pKRxGVYvISUNSkoi
FHadAU4Ll3zKXmtTm1Ozom/rK4/WmYktX6vX9bOkpCMmKenvSElQtOkqQz+k
JEKVN4Fw0M8j6p/8k/+lh7+tx3blJW9HCgtryCeX4uv8LClpNynpS0raZN+H
M4zO7h6UlEQo03VGOicaNyXN7W89HHakpHCRzCwpaTcp6UtKmhVPCKsCrqfv
YV8PSkoiVOw6fcspRk9J81a0GxFbU1K0fH5WZq6UlCElfUlJs/xzovqJPI8d
PSgpiVD9V4kuaAwP9oyUNG9LixGxKSWlCqdmTb/+WElK2iSVkr6duXr7nTIF
MjXky0hJHQr37/Trk6PUUlc1kNu4ZRqUlESovut0Mkc8KSXNW3TuoNiUkrY+
S5q2fBPPYF/J5JfVrFVoShWrWURK6lk0Jc3nBCnpzaSkzmUG7/Uu2+RrVvQ8
m7ruyn3Kw0yLlDSfH8L8Ek6vKRY9+aRqOPcYPrG2qeXvkjKLSElFUzbjTNuT
0ZGUxBBSB9LFhy7XyxwA9ODn3vn97/9ND3+XHScOyN12dJ3eZocpiCpTIv6E
E6PPg6Jvoy/Cwqdv2il1Ti3/jbvp15RUXNfxzXmSqfQkaC4wxSJPauJqWc+S
BpJPRtFzgpvnl7CjOyclscm+oKTP2SSaa6bgiU+xWCY61UeqRht4sOZMcplv
w1av62f9+eIXScuJUlKNYkoK49LquU8+GYUlpaTOpfLRqkDqLQ9mX3dOSmKT
3b2n26n3+JQ0b+aRAVX8Ltw1f4b2yu6UFH2WtKot/7arlMSsZqQXkxSPZHd3
TkpikyO9p+epFI0/YQ7KF+s/Jc0bu2MtUlK3alJSmICiS0lJ8GxSUuekJDY5
2HtOCNTYnZJmA6WkeZNT64pOn3rSuG8GMx3+N+5WEzPFMuuSkqB/TqGdmxIp
ab78RScu565KhgumKjk3JdUv7oA84pTeswvIm7anpNQio6SkecPDKdHL6M8p
Pz4/evgznFdSyWXeldFv2a1mpQqsZCLS7SnJ75KgSErqXColhekmnLhMRpky
qcQULnVwQ04vSeis3nNmIKMy8uxLSdGQ1UlK+iR+xy0lDaQYXi77k5Kgc+6F
OnckJWXyTnGRpilpPupSdxdHVvRy5/aefUHUKuN8hRlnnh6WCWdlyqTWdUtK
mnsgtCpwez6SkqKkpC8paSkznKNvw/F+XVu5UPQ2lX5Me1PSlH0qtCNt7TtO
UvcSywPP2eZEp/eeUwShKfEduev/7j0483dWt+cjKSkqelW6y439ICWtTOlb
kcys1BSe4fZxSt60PSXNdqek1eItvnG36fxDvUa9Z6ewNElJ6Zvtee7t+UhK
auQZXSolrWSyz+pWOXrT8oyjghUpqXM7UtIpz5KafuPuIyW11C4o2TV8VX1K
fpUOO+GTTUlzsdXr+llS0r2e0aVS0kq4W6dFSgrfroo946hg5d6rDEXTE3+X
9PGNu5aadqC9A59STvyUniUt56Ze52dJSTd6RpdKSSvFlPRJBKLUzQwPICV1
rj4lTX/4d78rJ16cksLt+vjXG9po3YFOGnTuxuNzmZW2pqRwkcwsKelGz+hS
KWnlSEpafkLCk9itnctEmJXUxLB8tJ58sUYpaessalzTgXYT3erh4NyakqLl
U7OWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIOtKfoU/SW
5sSLXc3nxptSUqpwflblMybj9KDw48eUu1u6jZS0ksk7+2bxACMO7Vd5ZErK
X1MckAdd2YFOIPQjdeO6PEpPD0qZlbZ7liQl3esZXSolLWUyb3RKdNageZkM
O7Rz+WvxxS7b5GtW9FTXd6BdRlem6g9+j6wif6qcGv8uaZKS7vOMLpWSoOjK
u19O9NtCnxXu5oA86JYOdCahHzempGWBrSkpTD2ZWZURSUpq4RldKiVBkXub
QUlJpNzYgfYdPQhT0rT4SsxZq8g/bc9EmLn86nX9rNempE62pZNmHCQlQZGU
1LnUJ5a3uGyTr1nRg93Yh1ceKlBjOvVfb6g8PU4H/u3uyuxTX/L4Vneik23p
pBkHSUlQ5Jamc60vtZsuypdt8jUrerDb+/D2BsDs+NEYTUP5j4+kpBbC/v/c
cRvzjC6VkqBISuqclMQOPfShcwud2H0cFnNQpubcU/nL7dv8fqQ2arl19Zt5
Xb9XaNVlFaQkKLp9nJI3SUls108f9tMS3mnr7ehZd7A/F/8f//Ive/h70hhc
bcv066Ol+kpuv55efFUF9pGSOvfC87kD8riu+tBJhv6d/tm+lNSClARcyQ1M
5154PndAHtdhH3bYJF6u6RefpKQWwpQ0T5GSgNNJSZ2rOZ/PF/ofi//V4Eqq
/HJiJ+dzB+Rxffbh8a8wTTf9WJsnaZeMVmu5PR89LyWtRE8IxZ0rJX35XRIU
ud/oXE14WcWfaOqJTp9+/T9xdHI+d0Ae120fHjzh7PvoGJo+Nkqt8fZ89JKU
FE7M7+6tnz1m5tZcOnu4qkZJSVAkJXUufwYO56ZS0o/FY6ZUwurkfO6APK7z
PtzdvNUnxic1h8e6OBmtVp2JLV+r1/WzwrdS0nJiaFWgMsLUfz4pJcEjSUmd
25qS6gPU5Bt3j9Z5N1aeeVY3OVISRal74+ubkU8uxdeVxYpB6akjJbWXoylp
dRqRkj5SElS4/VJCXouUVJwrJT3AEN24tZGpxAQ9JKOlHSkpXCQ1a2tKYvbZ
lZKmxWeMU/ZbGVISPMl83qBP+dNvZm44a/Is6U1G6cZNp6D5JmeUraOp1d1v
V6aNKSlaPjVrWnwl783fuItKhaNlgU0pKZWMlqQkeKQ+ry/MtqakVRQKZ6U+
AZOSHmasbqxs7VgbRSPdJqOlTSkpVTg1KwxZUtIsk4/mAptS0jIopa6Y+4KS
lASd6/9a83I14aUm9UTTk5T0YMN1Y825aLiN4iz5+94ObUpJ+54lSUlRxYNE
SvqSkqBooIvOO9Wce8OH/lOgsnwP53MH5CkG7cZMs8e6SeYU4+70rSkpn4am
Y79Lursz+rIvJVV+DiklwZMMegF6j33n3hZ/UtJYxu1GJ6WXG+6xUdSOlFSf
hqSkI3Z89rh8EdX5VTVKSoKi0a9Ejyclsc/o3Th6+9nkGcloKRNe5i1dvd4x
qxiRpKTQC6+qUVISFD3pqvRIqU+ubnHZJl+zomd7QDc+YBPIu/jccqWpIr/s
/ttU+SO794hJSvo7UhIUPfUK9Xi/LfRZ4T6OxhM9oDOdoJ7n+g9ebiEldUtK
+pKSoOjxl6qnkpIoekxnPmZD3uwNyWjpzKf4h93dGX25e2/84sZ+kJKg6PZx
St69J/CVfCNP2djjlTB7Un+edYxxpZqzB3ALKQmKXL86N3X83YDKDLVpY49X
wux5/fm8LXokyQj6JyVBkWtZ5/pMSZueNFVupuNwZc/Tvmbu7oy/11t7+Dp4
tBw/2CoXdPzAl5QERS4ZnZs6S0mn30g7AlN+dstf/MX/1MPfvTuo/yhX38IL
3LXtByuJvm7k+l7ieRxF8Aa3XFipN42Tkoa4qRvIJCUN4mf//O53/10Pf9fs
qdPH78UHmOOZ4xxF8AbuVDvXW0qaWyXvtCYljeIlKanpSF9VO68o9WIunzkX
hctG1wU7OIrgDdzf3qvY//mUNN8VfF8vpyxnrRZJ1VCfkpaNl5L2qdn1t+cj
KanGg1PSlQM8lWWiqSdVLJwVrafNFvAiDziK/C4Jitzf3qsYNDL5ZTlrmXTC
HBQtFs7ampJWW9Gynx6oZtcXw8vSauKOt/empMqjqNhv1zdselxKurJ7w1UX
X3zSmSg1a7k5TlYc94CjSEqCIve395piVgWKEWk1JTOr8vXWlMQONbu+5ilP
+Dp8UZzYT0rK35+vZl1z+io27Bkpqdj51zg9JeXrgX0ecBRJSVB0+zXx5aK3
ysudUp+SagKUlNSPml1/MCVFS+aL9ZOSwlNT9GR1wRmspmH1KSac8hW+ja73
9JQU3aKLTemwE31RfFtZ4WXi4/w1Lu7tazxgu6QkKHrwSewCF1xcpp5SEpf5
nJqSwmI1lfeQkube+KRvS1o3r6Zhu1PSamL0dfjiYEoKN+FeqfZk+vyz5Tt1
+Xra6aqTb/TIfnjA5khJUPS8c9dYipfvqWVKWmWfmmdJDpiz1Oz6mvwyS32P
LpxbU3NqLXf5ZFPS7Q2rj0hh4akUgirrL6akZZtpTT+HntQnD9gWKQmKXDTv
Fd5xhQW2RqHMrFS8Sq0l9Y07x8xxNbt+07OkyonTUM+SVgVSC97esOMpKVPJ
kZSUP8ZoQW9nPKZzHrAVUhIUPeaUNahi/2fySyr7TMHTovonTZUpqabl5NXs
+nYpaVNQuiUlpQrUTLy+YZu+brcq/622ZsH6lCQZ3Ui35z2jfx6wFVISFLmS
di4fYeZ7ocyvhzLlwwL1KWlu3vV98hKtU1J9ULoyJW0qc83pqybPVkaYWbtn
SU7p99L5NfRSD6QkKHJJ7Vx9imn9lzpOHEKNFCPMfEucmri8LY8uEq3hrpRU
afUhwN3N+Vs1KSaajPLPmHanpLv74710fj19dTspCYpcVTvXf0qa23lZn7xE
5YOeC/7s3LyzUlIqEG1KSR+D8T56vp6+up2UBEVSUuemntQ09ZpueYNJShrE
VPEPdH+FbzOzUlOKKenjFvQmmW5fnR6XJ9WtZ9qw2k0L7js2lvWfcnSNfoiO
3v6PlAQV3NkO6reFrip0OJ1FShpFZYS54G91H35jn7xQzedIqbdHdtxlO/3c
ykc/Pkdv/0dKggpS0qC6TUkfB9VJwk+Yb3R3Z3Rt6jIlfR5xIzeQYm+vhlLq
9ZH1Nt3j51Y++sE5evs/UhJUcAvUuYtvhvO2trxRn0BX7h6Xv4i27ZZueZti
P0+//mpsiqWbVCXLAlM6C0cXXx4by8WjB8+qtrDysKpwkcqjbugjc+jGf0lJ
UOQa2rmfe+e//6u/6uFvx3Hi6IIeGIYXqExJnyAufUrhIppHostGY3J+7WH+
yhTYukje0Ifl0I3/kpKgyH1s54ZOSfMmnNsnwFaGYWsHU1K+ksyVejU9fBst
UB+CKkvWbEW+5WMZuvFfUhIUSUmde0BK+jjMSIt+Er58m/+onHp6r6n6lPTJ
/kZpWSB8alNcb7RYKuxkklp9OMrUmTf0ATl044FKbjw694yUNG/LKX3CwxQ/
VM/fT1JP77WzKSV9Nh7Vq+RSWe0nnWiiuSxaYMezpEpDH41DNx6oJCXdq9j/
T0pJNdvLC+1ISR4t7abTGimeyTPPbmouBMvCYbWpSlbTl2/zr6OVR0UXqeiw
sQ/FoRsPVHKnca/VJSZaIJ9cvr6vl1OWs6LllxMvS0nLrYavaXtKSr2lhk5r
YaxezYypy+ocq8dWhm78l98lQZGUdK8p9qngqkAmtqziTzT1RKcvJ16fkj4O
PBZWn0vPE/MFPo+4UbmLrjvdWF0qJR00dOO/pCQocrN6r2jnL3dKKsKE01Mp
qTjllpSU2XzeJjUKigUcP0fovXP11p/FARL95OGUlVbW2VuPvY2UBEUvudOY
fpWaHrqgZKa1ny0pqTITdZWSMp3Ae6RGQb5AcRZFeu9EnXRm5cDpQefNezwp
CYoef4/a+Qau2ha29vEpKdoPvIqUdCMdeJZOelJKopKUBEWdh4gjhti0+YFR
5rnS6Skp//aWlPTZvr+Kz+yu1K5bHi/ah8uJxQIcpBtP0bobVyMinP4JxsVc
PlrDqrZUPe3G2tAH3tCN/5KSoOipdxqjbFSx/6ezf5eUn3tjSpq3N5wSXfXP
iX/zN/+6h79RDjZIcQwfd0Ef5hNQ2Ixl0kkVq6zn9G1pV+01hm78l5QERY9M
SU/aokyESWWfKf2oKJqkukpJn+wnpatit+cjKYnHeOS14ErXpKTwdfT5UVgm
+iI80+bj0rmGPt6GbvyXlARFroydy0eY+boWTinOStVwe0qaN/zz69fqwgK3
5yMpiYdxMO92S0qqfAYUhqP6xaWkqKEb/yUlQZGU1Lma/HLN3/XHSZj4VnNv
z0dSEs/jeN7nmpSUehhUmZJ2TGy0XaMfZqO3/yMlQQUpqXNS0r6UNC+yev19
W1NMSuK1HNL7tO631ZOgeeLyDLl6ES4SDURhPa23aPRjbPT2f6QkqPCwlPSk
bfkKk8KNetjwZYFieCm+zs+SkngtR/UOrTvt+p3Sbo2jH2Cjt/8jJUGF6+9+
m3rStuT9ttBnhUfUhLV9KWn6w2MjKQnyHNhbPSwlNV3diEdXD58fnkhKgqKh
x3joSduS9+yUtCQlwV0c21s1ffhy2fW69YoGPa6izR50Wz5SElSQkgb1npS0
Mh+xNYkmk4nCifsikpTEszm8t9JjeUP3z6rxQ2+LlARFUtKgXpuSZrtT0kxK
ghqO8E0edlU91+g9IyXBqzzsfP6kbcmTknakpNUima/hSUmw5CDfSo+FntEn
y60YeoukJCiSkhhUZajJ/Ozo+C+S3paSwt+Ivcrd3X8zPbCV4+eT/T+DD2re
kMdsEZDypHPXp++z1vJKMf83fxmdgof7mf0VnXtNh9xyFE0bU9LcP6m3UlLK
w25ydtMPW7c9njZv0qhPBu2Ny9zd6+ebpCR4jYedx7rdlunXZ/Sp02yqWDgr
X3+0hqau7/npQK4596/bo+4Uz966fd7cJ5u2/WfhH58fPfy9eZdxuofdOAEp
DxvsfW5LJtRU5p3M6/zqpCQpabeHnRzO9ebOSW179Gx2ez6SkjjdM4a/3yVB
0TMG+6zPbcm06q6UtPo6RPTtJ5bmlrOKD7BShU8hJbX21O06y8v7J3/umqfc
no+kJFp4wBElJUHRw1JSn3pLSavskw870cQUTU/h2+gqzjL15PStu90jN+p0
T+2lyu1aFQuXmqQkLnHjyf9eRzpNSoKi4wONokwPh7OmdMapOTeGi2wqMyVi
TvRFODHaQgfYcOyyeo/sq/qNyo/0KZaS5lPE93U4fZ41vy6+jU6Rkh7vlLAw
tCM9ICVB0cvPMNfIRKFNKSlctphHrk9JxdXRv3N32fSr1cQdb2safNmZ7ZGH
92qMz6O7eEYKZ4VpZZVrotMzE6OvU3OlpAezT5d29IaUBEUPS0ndbksqy2QC
S/g2OiWctSlnpcrnX6TmFqczhNP3V+UxVpxYU39mYovj8EnH9hTzSQz51YLR
WavAkglNqWiTmSslvdbD7lvOsrVbpCQoetjZpudtWd51rKaEs8Ly+T0VrSda
bbS2zILRF5/gxil1QxVOpHMt9tTqYMusKJxbbM+UvkUvTjnukQd2eC5KzVpO
j3Z4PiXVZKjMUtOvMerbBt+4ezx7M2VTz0hJUPSw29cnbUu3dPKz3ZiSwmI1
jcmnpFVUP33rHjkcdqSk6Kx8Spr3SPQ7ePnUU/OFPSnpkezKvPr+kZKgSEoa
1G8LF1f4nk5+p0YpKQwp4a34am5lS1KxK0xPjQ7d542IzK45MSVVftGu5gmU
lPQS9mONyl6SkqBIShrUXSmp0Qfy9KP1s6TKiZueJUUPy+iU+jbXe/xwWD2V
yxdbTTmekmq+dCclvYT9WENKgrM87I73SduSd+OzJJ6tq5QUFlsFokwO8izp
LFsf6i2n5GNRNAflJ0pJb2Y/1pCS4CxS0qCkJBrpLSXlm1RMSak6T/T4086J
KWn+PdFXZmLmbaZwJkw16BgutRrdq09LlvLLblrRvhrqV3T87BRuspQEZ5GS
BiUl0cjpgyh667KcGN7e5N+mao7W+Vmc5Rqd7p592snceYYlwymZnxSd+Fdc
0bP30Uvks8DxuFFcYwvFVewYelISnEVKGpSURCPvGURn0WNfUhJNSUn1ZWqW
kpKgSEoalJREI+8ZRGfRYylTT+7uDI6atqSk5U6Pvl4VS73IzA2bt5q1LLM6
CFPNiL6Ozio2Jt6JC1ISFB25fFRfnd7u3F32JSXRSOURu+/AXo6IRkMjuq7W
K7pgLfByq4GWehs9yUxBfkmVib6ILhsO/OWsZZn6ZtS3KlpJqnOipCQo2nEj
0fTm/5Fa9JiURCMXhJfL6peS4DHqU1JqYmZW/kVxbr7M6lPTYrWpEFesJDMl
JCVB0da7d/cDR5zYe1ISjUhJR9YINDJ0Skq1fMezpEwlmSnADvUpyfOjU5zV
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 9->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
M68Wz1doo8M7+bskKJKSOld/s3Tw5kpKqmnwuSNw+opO+SXYwRr4BD8rjRZI
7YrR9/V78up9sUJbHN5JSoIiKalzm+6UmuYOKekNKemsSl5uilkVaJGS8mcD
KQmYSUlQJCV1Tkq64PWYlHRw2bNqIJqSlifbrSlp+Zh4fr+cUhmIpCTgS0qC
Iimpc7tT0vLGLHpn1X9KWrY/OmV1/5lZsHJFcIHMzr8quTqup1hQmoLjerls
TUqaXALgfaQkKHKJ7FzqbiqfklZvwpurIVJS9L5uNSXscuaG8GDXLjtSDq7o
lHY6LRyRCkfLAjU7/BR8IZA/0muqiu78LgTwNlISFLk4du70lLQvImWixL79
pzKv5b8Sz3x/LiXd3ow3y+SjuUB9SqoJR/mUlDkcls1zOYD3kJKgyGWxc/tS
0io1tEtJm/af1X3jwZRUeT8pJXVS1asUj4srU1L+oAjb6aIAbyAlQZELYucO
PkuKTt+XlVJ3U8X9J1WsRUra18eHpaRTamhRFbPUjr2SmTXv58s34bKpCos7
v0sDPJuUBEUuhZ2rv9tP3R0tPy7fHElJq1uvaLMzc+u7lioTTp+kpFNraFEV
s33HYItXfvva+vBUUhIUSUmd251oikFj991U5EvtxR+A1+9RjVLSr+1J8Hkp
6axKTq+Kr1FSEvBUUhIUSUmd6y0lRSPSvr1oR0paPTCqKSklncJZ4lyZ4+h6
W9vcdGSAa0hJUOSq17npwD/c/XXid87Hb7Q2dS1cS6pr0Smnp6TPVWHhlLWc
3lQnCr5cNeABpCQocr3rXN2Xwffb17WzEtzxAFjf5h093eqstZze2mu6zxB2
H/hAD6QkKHKl61znUSIVlGp2qs67lmpzZckjuk1JjepkXK4gMCgpCYpc4zo3
YpT4VKekfpzYr+NOXMvpDb5mBBjLpoMI6IGUBEWubp2bxk9J8z5WubPtXtEF
pKRGdQJwJSkJiqSkzo2VklKPaZa7WbEeKanzlNSuWp7B7gHAA0hJnatPSXMq
2TG36bOkT/BoadOyW9fV1HApKVPbwbU4b5Cx9besANAbF7LObco1mYhULCMl
9bOuIVLSKTXweC4xAAzKJaxzj0lJjX5xt3uRfUZMSakKV9E1/G3kvmoh5EID
vfF3SVDk4tW53Slp9cdB85RrfnEX9uLT5l9v2L3IPg9ISVPMZ2OSbddUHszl
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
3il9l5IqZYJPMROdsqV2p6Sz1n68kttXsZtL/6CkpBcyMk3VDK+4xKCet9M+
r0f1pKQrZbJP+DgpLNYiKNUvdWKxC/TTkpkr/qCkpBcyMq1tuvrUnDydYOnE
6l5uvn8bd/98Xo/qndJ3KalSPiWFH1fFztohtwal+rX3c8j005LZS04pzyMl
vZCRaW3HCOcvWzu+/YMTTTGfn5f+sXbO5/Wo3rl9l5IqFVPSJxFJTt8hj6ek
cJ9ZVRj9uHqz6lTlrEw9YUtS769346o5Qkp6ISPT2sERDk/m4f0M3CJ1/xbO
GsXzelTvlL5LSZXCIY3GgbBki5N/fYVhI1PToyUrI0/NrEw9NQ0Iu3Al1+5B
SUkvZGRaO2uEp7TKYtc7peN6d4vKBqc+hjXc3J+fTunRcL3Lm/b2fen0lHTz
UP50sC+rfqWmTD9HfkpviNZNipaJjkbY+FR3bnyTmni903cnriElvZCRae30
C1n+8v37/a/Prx5eLXat33X+03/6v/XwatS727fapm0X3illbkK+M/t4bUhJ
lbdVQ/Qub3ffl1qkpP/ln//zHl5NI0llFGqakopqGtZ5Spo/SknsICW9kJFp
7ZqUtLwi3H6PLSXt7t3tW+3ItptvP6KLj5gj8j0avXdn9X1JSqrsVPTsvZy1
nBKdFZZsTUo6i5Q0KCnphYxMC/kg06Lmuf5p8DvtYvdvz0dSUqb9+bl3x4fN
OWJTybs7tbl3Z/V9SUp6qmJGC69EqcKpK9fyTWZWqpLi4sumthuoGmGTGIKU
9E4G53TRE/jxca6pZBr8TrvYu9vzkZSUaX9+7t3xQUraYF89UhL9u31TSkmD
kpLeyeC00CIlVa739nvs3XfaxVGqT0mrke8hJdX07vatdnDbZRYcLkfkv44e
vXf1fW+qZmBvz0dHUlLlV1sXXCbcmX/1MAi2xaCkpHcyOC00ikjFCr932qtV
198bz+XnpaJVpepf1XCkd9HFpy15Z1l404JNU1K+d1uzTP1W3rQzNOrdfBs/
l1rd3i+mh8IFw3qidUYWbNm72iwT62BY4J6UdJmagd2aZcIpS/nCjVJSac9Z
/25tx4qOt+Tx+ul4Py1hEynpnQxOIy2uSrGbqx+rmBZBZnnTW3NjvLqjTs1K
TQxrOKV3qwKPSUnR3u146FOzlaNbrWlKivauFAGmoEz4PlVgU52te1cflFJ9
yUx8ckqKDuzBlLSaOL//ruvilLTqYNjf1MTjikNdX8/pbXubRpuY1qSkdzI4
jRy/HhXrDFcx7UpJYYHU4pX17+tyvmufk1LSt8LVx001n5iSVr1rnZLqq23R
uzCtVExJBYf83FSZ6cSUlO7djpS0r0B3KWnr3yXVDOzWiBQuMsVS0i3PklYd
TNXZYiMWh7q+ntPb9jY7hp0eSEnvZHDa2XcZqqkwdZmbsinmW3iVZVYTK2/F
oxOXHzMX5X0+21PSLIxL3zerj/sqP7F3Z6Wkb52rrbyp2ha925uS8sX2pKTG
vduakpZvpp/tXE6sr/YhPp2lpEZ9rD/Ph0udVbL+AvRxz3DYpjGnH1LSOxmc
drZegypry1zgptifDkUDzpSITuF9dVhVJmHNU3b0uqZ3O54lrZaaaw6fK434
i7vopslE2spqW/QuHRCmYPqqwtXEYu4opKTGvdsRZ6IdnBK9KFS7tXcnOuVZ
0qrAjp/bTcHfH81S6emuX9ylltqxriMtqa8kbN5c1apr88dVgVRLdrdqOC/p
5vNISe9kcJo6eD4Mr2j5a9yUvUOeFwwfNxx8fhS9ez/S2VTvDqak1MRNNZ+S
kjLbblOciW6O5Ya+JSUlCmxNSamJyyn1KemPChv3rj4lZXq9SkyvSEnRAvse
99Skoa2V7xiQfAfrJx5XHOrKSlZvlpV/FjkoLJ+ZFdb/bI02Ma1JSe9kcFrb
NMJ192PJc+yUTknhm/B2uoeUlC+wIyVFw9F0+Bd3LXp3SkrKb/GmKalUYF9K
KiaLmpT0433j3m1NSfk2b615vJSUL7D1QVL9L+vqKz+YkuoL7DtzntKS+krC
quaP05+j0KrYpjeP124r05SU9FrGp5Hpp5piNXXm56Zum1ezUh/zgSha/1kp
qabv9SnmK3xgNMVc8Iu7mt7tTkn1ubhRSqrpXU1+KUWeTIGaqqZGOSLWmK0p
KdPBTZWPlJKKpsFTUmUflxqt5bhV25Yf5/fTn1NSZtmwm6mlnqrzDU2KlPRa
xqeF1Zlw+bHdZXH6+S8nrGJLVLRMODFfLJzeYqeaGvz/Yfe9GvVua5aJbprU
5u4mJf2x4wdZYJ4eii6Y//iJVdVJSip2MHwvJZV/axd+XM1KLXJjShrFagSW
H+f308+8k3kTVvWeEf7745nRSEmvZXxOFz0N/nHf03K9W59HNHo1uhe9PR/1
k5KG23Ybc0S7l961cuOzpNavl18lVxev5cfw/efnFTCz7LL+y/pyOylpUFLS
axmf06WGtPVQP/5O+/Z8JCXt7t3d8UFKak5KIi/6BOrzspsQKWlQUtJrGZ/T
3ZiS+qF3eqd31zu9d/VapKR+nDJELzfFktHbxtbuNCgp6bWMz+lSQ2qogac6
PSVxvdYXqWXqfGdeeGevH0BKei3jc7roadC5EXgwKWloxadmHqudwhgOSkp6
LePTwupM6MQIPJuUNK7K3xa6ih3nZmBQUtJrGZ9G/KwdeA8paVD11ykXsuPc
DwxKSnozQ9SOsQXeQEoaTvBvVNSmpOXfFu2bFb4JWxVt7Vw4+oONVP3RmmvW
fnqokZIGJSW9mSFqx9gCbyAljSWMSPUp6ZNNOvlZ4ZtV9omuLlo4XCqabjI1
p9aeqvY4KWlQUtKbGaJ2jC3wBlLSQKIRaWtKavGmmJLC9n9i0SOsp6bxq3rq
R6aelDQoKenNDFFThheAroyeklI9SjW1svHLelpcu6WkQUlJb2aIai4WqVFa
faNVvyAA3Gj0lLRaavmmpuZ8PflQto+UNCgp6c0M0ScYhMz5OTVxa7wCgNvV
pKTV94Gr98uJqVmrevKFo5fgsJ5U+8P1pmpINT5cyylOr5BrSElvZog+pVg0
n0jrF8lPBHgSf5c0tIddp7rtjpS0ySrJVi6SqSpTf2U9Z5GSBmKIPielpMqa
AR5GShrOg69N3XZNSqp3+kO9TIDasdRBUtJADNGnLiWlJs4fU19WnNlQuM/0
bncPf9ekpOE8dZfu+YDttmG9CUfp+LilasjX3Gh7SUljMUr5QzJ6p1R5FBtb
RtfzXceVjEOGlDSW+t249W6/u/IRj0QnkEqZUcrskPP05ZtVnfOUVZllnat6
VtNTNWwiJY3FKGUiz2pWanp0SmoijMIOHDImISlpLJv24dY7/KbI1rQlrUlJ
lWqe++TvuMIIE53yCfJR8U20zq2kpLEYpVQU2j2rZjr0zAU9w+CsSEkD2brr
Sklncd6odEpKqnyTij+pN6mJm0hJY3n5KE2BcFb042rZTP3tGg+N2G/zjM+S
lDSKHftt8ZK3/JY+9dV9fql8JWENmevyqtqu5G8VmIWjFG7T6H61401YZ/5N
auImUtJYjFJThpfh2GlrGKWZlDSKIykpc3OYulPN3NzmFyyuN3+L22dQkpLq
FVNJdCSlpK3skDWMUlOGl7HYY+sZqy8paQj7dtfKlFRZvv7WtGYt9evtgZS0
yeo5UWbiatayzKYp4SpS0/MtKZKSxmKUmjK8jMUeW89YfUlJQziYkj7p+3wp
qYaUNKjTQ42UNBaj1JThZSzRm5Po9T06PVPs+Pdyu2/zGt04Obq/pKT+7d5X
a46d6CF2Vko6WE8/pKRBSUkvZ5SaMrwMJLW7ZlJSTQ35m5nMes/SqH5H95eU
1LkjEanm24w5s9R/DZL/8iSscPkxLBNdUW+ppLf2UElKwkC1Y2wZSCYlfWK5
ZlU+OjG6YPRNO1JSU1LSG2S+1nAg1JCSBiUlYaCaMryM4vqUlD86Ut8MT4Fw
LdHWhm/CdW06YB3dHynpHaSkg6SkQUlJGKimDC+jyKekTxBtUjdL4fQwgBTv
GVJPnaLTl7Myj6vqF6nk6P5ISa8R/Rphx3cL72SUBiUlYaCaMryM4nhKSt1H
perMHB2peupDUGXJTI+KHN0fKaljp+yfy6MpE5FSh3m7dDDW0SclDUpKwkA1
ZXgZxZGUlElGmZSUWek8N/MkqLJ59cEq05JU87Yu8jxSUp/OikjL96njOnr4
7P7yobI9Y5GSBiUlYaCaMryMopiSKt/nZ20tkApBqZI7UtLug9TRTbeO75yb
gk/NlOPGPeKkpEFJSRiopgwvo6j5zczq4cucMlZlUrNSdW4qk3+/nJgXXeT4
iMHtTtkzM5UU688f46njN6w8fxIoVr6pv03tOL1wpcqrxjUu6/JlK+rHvvaf
PibMDC+jGGJfnX7eQd1b5xAjxgudsmeuKlneZtTUPyVSz7K21ftV/WENYVX5
yvs5QnffoXGN31vn1+dXD6/L9pMrV/QP/sH/08NLSuqQ4WUUQ+yrUlJv/F1S
b1ocF6spp6SkzMRV3tmRkurbeQ0pqXNSUtMV3Z6PjqSkT09nkkcyvAyhhx21
5l7iyKPzc+vsYcRuJyX15paUVFl4U0o68iwp1aq7SEmdk5Karuj2fCQl9czw
MoQbd9QWT4guMFBT25GSunL6twepj8VjVkpakpI6JyU1XdHt+UhK6pnhZQhS
0lYDNbUdKakfLXbIaSE1K7NU8WP4PnyTmV5T+eljskM/LSFKSmq6okxsmS0/
ruam3i8LS0nDmWLubhQktdg/U7crqbuauRmruZ/S3VS0QOsjzhH9kZJ6Yofs
lhuAexXHf1qkpPDOrSbaRMsvp0Tfh/Vftp9cuaJUZgnfrwpHy2TeS0mjCI8y
J0k612j/XAWZz88EFK56mXRSxSrrOb0vK47oj5TUDXtjz9wA3Kt4JxZGlej7
fFA66/1lY3LZioopKTVRSnoqKYnhtEtJ4fvVEZEqE30TRqp8XGrHEf2RkqCC
G4B7Fe/HMimp/pdyUlJqRZnYIiW9lojEWC5LSflQkwlH9YtLSZeRkqDIPcC9
Et9b//iGLRp5psTP51a/mpOS8ivKJ5dV5FlJJaOwgJQ0HCmJgbRLSWHeWa0x
n5J2TLzgcHNEf0lJUOQe4IhMxjnFJ5aSZtHcFJ2+WqSYhqKLtOvmjWryy+5n
SVLSuFb7yd3NgYIWe+mU/tcb5omrN+Ei4ZtoPe16EXJEf0lJt7Mr9s89wL2i
t+6rAvlnSfUFUiUz71eLXzYml61o9JT0cZptRkRiIO1S0pWkpCtJSfeyHw7B
bcC9il9ZZ6JNZko09UhJ4YryyUhKejMpiYE8ICU97xLTOSnpXvbDIbgNuFdx
/OtT0hT8FdLxv0V6bUqaraaEH1PvpaQH6Pb02GeruNe5e8WV3xJceaA5dmZS
0o3sh6Po9jaAr1V+WT0nSj08mqeEi0w/pcpHF7ysy5etaMdznxYvKalbfQ5v
n63idnaMPOOzJCXdxX44ECmpc2Emyr+m9FOhgy8pSUoaTpj6b3Ruv1Z9/Fz+
hXw/runyEAxIhpFZkZLuYlcciJNq5yYpqeWKbs9HUlJTvwfnf/i3/7aH1ymb
KZURlqfxa/aH7wr7eNn/14xJyJiEpKRb2BXHIiV17sRvXI+7rMuXragfR3px
4pg8zPSslLTsV+rjNfvDd5/t42X/jzjr9DI0I5AnJd3C3jgWJ5BB/Wmhzwp3
e8YOedmR9YzhakRKakRKGsup3+gM4+5RhzW75XCcTAYlJQ3hgr48abhON70m
Jc1Trtkfvivs42X/BwbgZDUiKWlQUtIoWh9iDxuucz01JYXd/Jy6pxWrkpIA
NnGyGpGUNCgpaSyC0i0yKWn145zVxOjH1ZRMsVtS0rkV5n+59DMl/VEwmL5O
NIuSqSmZkpGIZOeHffxdEhS5ygxKShpOu2PtqSN2XDG5hO+jE6OzVlkpLP+Y
lBTuuovMEkaeYq6JBqLixGSSOrfv8BJSEhS5ygxKShpUi949e8SOOJKSMhFp
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
z6zRRcPqUkw0GeWfMe1MSXePx3sZ/HrG6nZSEhS5qnau/5Q0t/OyMXmJYni5
7GXj5p2XklJVbUhJHwfjfYx8PWN1OykJiqSkzk09qWnqNcPyBpOUNIjvjl/z
Q7jYx8ys1JRCSvq4Bb1JZthXp8flSXXrmTasdtOC+/aNZf2n7F2j76Kjt/8j
JUEFd7aD+tNCVxXanc4iJY2iOsJc8PIPUd6m5nuk1McjG+6yjX5u5aPvn6O3
/yMlQQUpaVDdpqSPneok4TfMN7p7MLr2HaE+XlX/djotFEd7dSil3h9Zb9Mt
fm7lo++co7f/IyVBBbdAnbv0Vrhka8sbjQl05e7j8odo224ZlrcpjvO3wFxs
iqWbVCXLAlM6C0cXX+4by8WjO8+qtrDysKpwkcq9bug9c+jGf0lJUOQa2rnv
9unjtXk/sXdBDxyGF6hMSZ8gLn1K4SKaR6LLRmNyfu1h/soU2LpI3tC75dCN
/5KSoMh9bOeGTklzF84dE2Arh2FrB1NSvpLMlXo1PfwYLVAfgipL1vQi3/Kx
DN34LykJiqSkzj0gJX3sZqRFvwlffsx/VU49o9dUfUr6ZP9GaVkgfGpTXG+0
WCrsZJJafTjK1Jk39A45dOOBSm48OveMlDT35ZQx4WEyt2r592xl9NrZlJI+
G/fqVXKprPaTTjTRXBYtsONZUqWh98ahGw9UkpLuVRz/J6Wkmv7yQjtSkkdL
uxm0RirO5MlnNzUXgmXhsNpUJavpy4/599HKo6KLVAzY2Lvi0I0HKrnTuNfq
EhMtkE8u80Vp8d/1RSxRfjnxopS07DV8LfeH+X104ifYeexLOxi0FsYa1cwx
dVmdY43YytCN//J3SVAkJd1rdVkJN0c2wkzTOv5EU090+hRb8KKU9LHjsfAj
0i8m5gt8HnGjchdDd7qxhlRKOmjoxn9JSVDkZvVe0cFfbpR0hAmnp1JSccoN
KSnTfd4mdRQUC9h/jjB65+ptPIsHSPSbh1NWWllnbyP2NlISFL3kTmP6KTU9
dEHJTGs/21JSZSbqKCVlBoH3SB0F+QLFWRQZvRN1MpiVB04POm/e40lJUPT4
e9TOO7hqW9jax6ek6DjwKlLSjQzgWToZSSmJSlISFHUeIo4YomuLB0aZ50qn
p6T8xxtS0mf79pp60m5YHi86hsuJxQIcZBhP0XoYV0dEOP0THBdz+WgNq9pS
9bQ71obe8YZu/JeUBEVPvdMYpVPF8f/O3xiFMrMqnzTdkJLm/sZGYFN+vP41
xs4GKfbh4y4Yw3wCCpuxTDqpYpX1nN6XdtVeY+jGf0lJUPTIlPSkHmWzQCr7
TBXF8rnpziyw2ielJLjAI68FV7omJYXvV896UmWib8IzbT4unWvo/W3oxn9J
SVDkyti5Uhb448oWTCnOStXQRRaYL+Kra3f1yEhJsJmdebdbUlI+1GTCUf3i
UlLU0I3/kpKgSErq3JuzQCTvGRlozP68zzUpKcw7q7XnU9KOiY36NfpuNnr7
P1ISVJCSOvfmLHAsJS2fkS3frxbMFOt3ZKApu/Q+rcdtji2rLLM8Q67ehItE
A1FYT+sejb6Pjd7+j5QEFR6Wkp7Ul68wKdyoh47/LFAILxXv87OkJF7KXr1D
60G7fqO0W+PoO9jo7f9ISVDh+rvfpp7Ul7w/LfRZ4RE1YW1vSpq2BCgpifey
Y2/1sJTUdHUj7l3F7+7GIiVB0dDHeOhJfcl7dkpakpLgLvbtrdqN2JX35K1X
NOh+FW32oH35SElQQUoa1HtS0sq8x9YlmkwmCifui0gv2ut4Ibv3VkYsb+jx
WTV+6L5ISVAkJQ3qtSlpdiAl/fGlrJQERfbwTR52VT3X6CMjJcGrPOx8/qS+
5ElJu1LSFJsrJUGBnXwrIxZ6xpgsezF0j6QkKJKSGFR1qIn+3K44S0qKmN7t
7uG/mRHYyv7zyf6fwQc1d+QxPQJSnnTu+vR91lpeKeb/5i+jqyn5a0107jUD
cste9F3nlpT0xwglPkpJcQ+7ydnNOGzte3iKu1GjMRl0NC5z96ifb+7UI3sH
LD3sPNZtX5YNW475qsGpYuGsfP3RGpq6fuS/nevj1eled4pn926fN4/Jpr7/
Lvzr86uH15s3Gad72I0TkPKwg73PvmRCTWXeybzPr05KkpJ2e9jJ4VxvHpxU
36Nns9vzkZTE6Z5x+Pu7JCh6xsE+67MvmVbdlZJWP4eIfvzE0txyVvEBVqrw
KaSk1p7ar7O8fHzy5655yu35SEqihQfsUVISFD0sJfWpt5S0yj75sBNNTNH0
FH6MruIsU09O793tHtmp0z11lCr7tSoWLjVJSVzixpP/vY4MmpQERccPNIoy
IxzOmtIZp+bcGC6yqcyUiDnRN+HEaAvtYMOxyeo9cqzqO5U/0qdYSppPEd/3
4fR51vy++DE6RUp6vFPCwtCOjICUBEUvP8NcIxOFNqWkcNliHrk+JRVXR//O
3WTTT6uJOz7WNPiyM9sjd+/VMT4f3cUzUjgrTCurXBOdnpkYfZ+aKyU9mG26
tGM0pCQoelhK6rYvqSyTCSzhx+iUcNamnJUqn3+TmluczhBO316V+1hxYk39
mYkt9sMn7dtTzCdxyK8WjM5aBZZMaEpFm8xcKem1HnbfcpatwyIlQdHDzjY9
92V517GaEs4Ky+e3VLSeaLXR2jILRt98ghun1A1VOJHOtdhSq50ts6JwbrE9
U/oWvTjluEfu2OG5KDVrOT064PmUVJOhMktNP2PUtw1+cfd4tmbKppGRkqDo
YbevT+pLtwzys92YksJiNY3Jp6RVVD+9d488HHakpOisfEqat0j0N3j51FPz
gz0p6ZFsyrz68ZGSoEhKGtSfFi6u8D2D/E6NUlIYUsJb8dXcypakYleYnhrt
us87IjKb5sSUVPlDu5onUFLSS9iONSpHSUqCIilpUHelpEZfyNOP1s+SKidu
epYU3S2jU+rbXO/xh8PqqVy+2GrK8ZRU86M7KeklbMcaUhKc5WF3vE/qS96N
z5J4tq5SUlhsFYgyOcizpLNsfai3nJKPRdEclJ8oJb2Z7VhDSoKzSEmDkpJo
pLeUlG9SMSWl6jzR4087J6ak+e+JvjITMx8zhTNhqsHAcKnV0b36tmQpv+ym
Fe2roX5Fx89OYZelJDiLlDQoKYlGTj+Iorcuy4nh7U3+Y6rmaJ2fxVmu0enu
2aedzJ1nWDKckvmTohNfxRU9exu9RD4LHI8bxTW2UFzFjkNPSoKzSEmDkpJo
5D0H0VmM2JeURFNSUn2ZmqWkJCiSkgYlJdHIew6isxixlKkndw8GR01bUtJy
o0ffr4ql3mTmhs1bzVqWWe2EqWZE30dnFRsTH8QFKQmKjlw+qq9Ob3fuJvuS
kmikco/dt2Mvj4hGh0Z0Xa1XdMFa4OVWB1rqY/QkMwX5JVUm+ia6bHjgL2ct
y9Q3o75V0UpSgxMlJUHRjhuJpjf/j9RixKQkGrkgvFxWv5QEj1GfklITM7Py
b4pz82VW35oWq02FuGIlmSkhKQmKtt69ux844sTRk5JoREo6skagkaFTUqrl
O54lZSrJTAF2qE9Jnh+d4qxhlJJoJLV/rr7GjH7DmfqeM7ygh1WFi4QLhmtP
NWa1rmgNqZZEC2QOWydGuEAmJnx+HuapieGpILpgTVVhAzJlUh+LJWvqzLcE
OCJ/9V+VbN2YlzhlJKUkGonun5VX/0+Qeiov+vlFls2ov6kIa97akfyYVM4F
TpE6IYS3MauJ4Zcen9iJYmVVODM3v5Z84VS10QXzleTHCtghPLhSxS5ozHsc
H08piUaiO2fqKjylw8UUu0WpWSScHm1bsf5N66ppZ4rTI1zg3APt2YdtTe/8
XRIU1aSkZ59M7nJwVKUkGsnsmakQkQkm9eEoU2e0bcX6M3OX39MWF3eGhB5I
SfWkJDiFlHQXKYk+5eNJ5llMvsCOZ0nRZtTXf9ZEZ0jowYkH2urB8Sm1bSp/
ynoPrkJKgqKmKWl5IrrrdHSBfU2SkuhTKiWtEsry0M68X07Miy4SbdtqVk0l
q8ZHe7qqJzMaxeECTnfxsbZpdb2dB2raIyVBUfRWZFVgd831a9ldcyd17lj8
4BqlJNqp3zk3BYrjdV5/KyIlQSekpHpSEpyiUUpKfQl8CinpIyXRkpRUv7re
7o7gqY58Zxt9pjxPnD+u5oaFo3OjleTfp+o5i5QEp7gsJa3WmDpTrd6EZ5Vo
gXw9NSWj45BfKjWx3pFzo5REO5v2zBYX+mid7e4oUg2oLNm6McDn2LG2upqv
JqZuMKJvKguH5VP1SEnQrYtTUj7spPJLWD78mKmn5twYjUj5paKN3ERKoltu
/msYJbjMwZQUvs9Em09wid8XqT6xO4TVjUoLUhKcopOUVHwTTlyduDKL15cM
W1sT0zL9zZOS6JkIkGd84Eo3pqT6qj6xO4RP4ivf1fSzVFYoJUHRZSlp95cw
qfKpVRwpWVlGSuINmn7VOTojA9fbfdzVf02679KfSUnFeqQk6FajlPSpPpMU
39SfYY6XjLZfSuLNxIGQMYFbHLwhWd1RZD5GC69m5ZctFg6XOouUBGdpl5I+
sVNHOHH5Mfrmkz6zbaqnsmS0qasT2urN7nPdkbGVkrjMwf38GYwA3G730Xfx
YXvvWaJy7VISFBUv+kMc7IOSkhhR9NuDx7t71IF/Z9/BeOUhfO/pon7tUhIU
FW8ARjneR3Skd1ISAC+09dJ52Xcdt3+jsmntUhIU9ZyStn6X20mkqj9PSkkA
sMntYaRPW8dESoKinlPSUqoZnTRvRUoCgHb6vPrfZcdoSElQJCW1ICUBQFMv
/+PBg32XkqCoUUpaHbnhgRz9uDrkVzWEC2YKhx9TfUkVrulIqlOpAuGqU7OK
pCQAmIU3Es9293jD8xWPtR1H4vQz2kw/c0SmQPFNpkBmdZ90UMrXv/tjqrWp
gdpBSgIAgEaapqTw4ypKbE1JqwWjladWV2xbtGHR2lKFw5bkv/ORkgAAoEO3
pKRU9gkXOfFZUrFtmWo3PYeKTomSkgAAoENNU1IxPqTSxPUpKd+w/7+9O0hy
EwYCKJr7X9pZpJLS0FIjZJqxMu+txiCEcDb+BXYuvUxW2z31GpUEAABFTivp
tRpK8XZMd8vh4bTugO7I9uVhhsNs3fGnSz2c6HRwPLZ7uvbYi2/qFyoJAACK
JB/j2zHVa3jsXJ9DJQEAwGdSSd9FJQEAwGeaqaTXI6E0uZL/w/tXqpIAAKDI
fJv8nISpdss7qZIAAKDIpUoSSu+76z1USQAAUORq+wild9z47qkkAAAosnCH
aPQr2XQVvVcqCQAAirz/6T3850J8cde/1IFKAgCAIqWf5KmjkgAAoIhK2pRK
AgCAIippUyoJAACKqKRNqSQAACiikjalkgAAoIhK2pRKAgCAIippUyoJAACK
qKRNqSQAACiikjalkgAAoIhK2pRKAgCAIippUyoJAACKqKRNqSQAACiikjal
kgAAoIhK2pRKAgCAIippUyoJAACKqKRNqSQAACiikjalkgAAoIhK2pRKAgCA
IippUyoJAACKqKRNqSQAACiikjalkgAAoIhK2pSoAQCAIippUyoJAACKqCQA
AICWSgIAAGipJAAAgJZKAgAAaKkkAACAlkoCAABoqSQAAIDWWiX9+qu7K5+/
3ZLM0z38z9/do9o5J5cKAAAQLRREzJbRbHHm0d6Z4MrnbwNq/hQAAAAHdZWU
J9LprktbZspIJQEAADNurKR/d3NevTs73Xs93XlGg0eP2C38DQAAMHJXJSU1
NNoymnM0+HBelQQAAFS4pZLWtoxejgYvPHH3an69QSUBAAAz7qqkKI5JZjg9
RXfkTCUlGwEAAKIbv5fUbpmspFEB5Yfnu04f5wMAAEisPYqWPMPWhk+8qXT4
wlHyOFwcHI867Bqd4urVAQAAP5mOAAAAaKkkAACA1nIlzf9IwuhBu7WTvvm1
o9OzP5yNEhUAAD7N8veSLu2Kv8aw7P2sOJ3hgVMAAAAf6+FK+oQAUUkAAEBi
oZIO4+MzbKOH4pLn8Q5/x5+tG02VPMs3urSZZXTPmyz1dBndA5PVxncVAAB4
xpuV1L1J1K2kyXtMsT7yAaOR3YWdbukmT3LJySLjuUZld2nxAABAtbsqaTSg
3TIaHKvh9TVYkgGvXtp0Zz5dc6ye7spHBZQvMt94uMyFfxQAAOAuT1ZS3DXT
PqdTxVpJzjgz59VKWriXlMwfrwUAAHjSXZWUp9No73wlXR05X0nxHtA3VtLp
4gEAgGprNyy6t2/irnZA+8m/+7LVTjs6tntgXFiycbSMuMhLV5GseXQJ+SEA
AMCT1j6NJ4f4bA8AAGxt+Z5F9yiJBAAA7M6TXQAAAC2VBAAA0FJJAAAArfib
bwAAAD/cb92N5Po=
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 10->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/r9UyDH3aRuEiZtxBw5zewbTAYAmsMtoO3M14/uyYunsA6eEl3l3Hp
IoVxinQJpAnZKhC4yryBdHklqU6u3cOj1aX5qz8jzUifDz9uzpFGo9FII+l7
dM51/xd/+t/+4z//T6Zp+jf/2c///ON/8Zf/5V/8xb/47//Jf/7zzX/9+3/z
3/yr3//Z7/6r3/93f/av/uwv/uhP/9OfE/+/n2X/9O9M01+/BgAAYOXz+Xz/
CwAA8HLLoAQAAICIBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEA
ACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUB
AAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQl
AQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs3ZiSJmAEt5wfAABudONd0L03
fkClW84PAAA3uvEuyA0YdM4gBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA
4J2kJCDFIAUA3klKAlIMUgDgnaQkIMUgBQDeqduUtPv/2LJcZP5vaFUyVUP9
6sKlUus90tQja8kvVbOx0TaneixTMlPncmKxTHRFNfVH21bc5FQb8h07JQ62
VLXFt5lNy/TSPufWBgAwihvvgoqrXt1SVtYZrT+8t8xXu6lPUpXXz9rR1HB6
tOS+tqWk2lxcUXFX5qNHsYWb6s+0rab+/NvK/ZKfVb/XisseJCUBAO/0pJRU
fxdarLZRSspM39rU3bGi8s58axvq7+Sj+z1ac30L6+vfFL7yzcs0deuUypRU
7JbTx7KUBAC807NTUjir8sb79JS044a//vlC/ZR9TaopU7+zahLQwZSUWXbf
0X5jStq0LikJAOAUnaekpZoKa6qqWWRrSsrUv2m99YuckpI2de9yqUy1qfVG
G1BcvLLaaLHixHo1matmB4VSdYarKK5r36blbTo2AAAe48a7oOKq65NFsUDq
JvmslJRaaut684vkQ82OlFRsTKaRmS1KtTxTskVKitafb1um/ny0idacaWSx
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
A4+Qkh5DSjpdakOW0w8GpU3Tj5jrbPpZzWN2/ZeUBEVS0qCkpPrapKQOU9Km
beyTlHQlKel0j0xJvS3SMykJiqSkQUlJmyqUkjpMSZs2cx/PkgaSH5hbU9Jq
vL8wJRVPdFtT0qrC6El1WWb5YvU6Wjh8m2pktHBYMtXgVDPyK81MH5SUBEXF
Eyl9kpK21hle0A9WeErDjtc/jZySNm1pb6aKlDQfb6vX37c1xd6WkjJ3vDvi
TPT1e1LSJ3uJz0wP98L0a/ZZvc28yBQIy6yKRTNLplXRYvXNyKw0tZahSUlQ
JCUNSkraV/OOlDRVO7ep9SVTmWUpnB4WjpZZlY8uLiXlI0zxdX7WO1PSakxN
UtJGq94Lz1GpDZkSOWJZSVgm/2K59imIJ+GUVDOKhVclwwZX1pOqMJw4LikJ
isIzJ0OQknZXPsQxX9/CaGCZY0vxdWripmWPpKRNG9uVIylp+sNjIylpFk1J
y7vcs1LSt87V2/r6R+ntTHDIFPgkkkI0ZdQEjXwAaZeSUs2orEdKAj5S0rCk
pCP193/YF5u3vIc8KyUVy2fWdSQl1Wxvh7pKSW+wIyWFy86vvy9Wb7dWG7U8
Qu4tGT1o52LRAp+6+BAuWywZvojWli9fLJyaVdOMfIWpieOSkqBodV5lFFLS
EGvZLXMDE94LnfgsaYoFotWszOrepj7F5ONSqphnScu5u58lrZadK9/3TbxR
ensKwkU4JbpU2PPTH4JGOD06ZbUHo29XNaxqi5ZPrTpsSdieVPujzY6uNNVj
45KSoCh6KqB/UlK+hn6c0gmZ2qZsSlqq/MbdFGSi1eItniVFt7pz07GUNJOS
vvIDZzopJU2JZ0lPTUn5U8fByo/XM5aHbamUBEVHbuS4kZSUr+Gf/tP/rYe/
g/chNVErn5IyOWhTSqp8lrR7Y5ebc7ySa+xOSasFp/TX8F6YkjJzd6ekaGKa
Dnzj7spu2a3m1HGk8lPqGcvDtlRKgiIpaVBSUr6G2/PRkZRUE46Whc9NSeHD
o/yCUlJ9UMqnpH0R6TEpKW9rSpoH0WrKnwS/V1oVe0xKKjq4IZtOU/sqP1Kg
hcfs+i8pCYqkpEFJSfkabs9HO1LS6q7jspQUfVQUTUn5oHTWmWSUM9K+lDTv
5dRbKSlqa0pq9/eY3u48ZRQLbz1VHveYXf8lJUGRlDQoKSlfw+35qD4lpT6S
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
Pev55MCNHBiDkpLeoJ+uuDclzWtfpaRVmdXEaLSZZ0ULZMoPl5LCc3vqjrHD
banxsO0tbk5lignjT7FYKkyNkpLC7sp35pSNLVNdGlpOzMzq+Rt3UtJSZuht
KsPD2NeDkpLeoKuuuKYx0dub+TQ1BYFlOWVaBKVorlnFn2JEir4eKyUtz/CZ
S/+FzTzNw7a3uDk1QSYsk0lJqzw1bkoKFU8j+WdJU+wxUGZitMLMWqSkDmWG
3rJA6i1PZUcPSkp6g6664qzGZOrJ3NvM9qWkmimViSn6GKt/mZ6f5xZrqNxN
95acC0/p7R3OZ29KyseiecrWlHR3fxxV/MbdFMSf6OJT+mt1mbVISR3KHC2f
xK1ydCIPYy8PSkp6g6664qzGHKlnOi8lpb5fFy0frfCU3jhR6vq+LJBa8JIG
nuxh21vcnCMpKUxDqxdveJa0nLsvJUWfJc22pqRoI+lW6ki76qDmHpm9T8+k
pDforStOac80rZ8LfKpPRFP2mc7xJ0dT4idL0SnHu+JcxWt6dPq4l4CHbW9x
c055lvTOlBTOLaakOcVkUs9qSv6tZ0mdC1LRL0dOak/1eTLhRN1eMsiTkt6g
t6440p7UNWh5CirWP9XFn8pilSkptYrdXdFIzck8vPR3uCGVHra9xbYd+V1S
5llS+GW8x6SkzNyalJR6liQlPVIxWaeWat807tTzVYMMKekNeuuKU9qzqqTm
87plgbNS0hyIvlIpKRWvets19fI3A8/zmO3d92/cFV8UH0KNmJLyUvllPkii
37ILZy2n5N9KSf0rJutodBr6lEINe3lQUtIb9NYVg6ak+uyTKhZd7/GugHr7
/n9J4cTln5R075+UNJDV3bKb55ewowclJb1Bh11xvElhSpqnbE1J8we20Ynh
3Gj5VEpKVSIlcYtNQabpn5QkJb3T6qLw6fIazbmkpEFJSW/QYVec3qT5WlNT
cz7gHP+rr7/DXUOlQa96UtJZpKQvKem4Ec8kbDLo9QIp6SV6641GKam+sJTE
EdEHl0PsTSnpLOHj5hvd2A9S0inu3Ym0dvs4ZR8p6SU67I1zm7SptttuZWJO
7ASut9yDQ+zN6A+L7vq7uzM4gZR0iiHOHuzmcj8oKeklOuyNE5t0V+LosFdb
W3a1uPf59aueL+8K3klKOotTx4O5NAxKSnqJDnujwyZt9YBN2CH19OSFvbHa
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
vKP3eVtU75Rtl5IqZYJPMROdsqd2p6Sz1n68kttXsZtL/6CkpBfSM03VdK+4
xKCed9A+b4vqSUlXymSf8HFSWKxFUKpf6sRiF+inJTNX/EFJSS+kZ1rbdPWp
OXk6wdKJ1b3cfP827vH5vC2qd8q2S0mV8ikpfLsqdtYBuTUo1a+9nyHTT0tm
LzmlPI+U9EJ6prUdPZy/bO349A9ONMV8fr30j3VwPm+L6p277VJSpWJK+iQi
yekH5PGUFB4zqwqjb1cvVhtVOStTT9iS1Ovr3bhqjpCSXkjPtHawh8OTeXg/
A7dI3b+Fs0bxvC2qd8q2S0mVwi6NxoGwZIuTf32FYSNT06MlKyNPzaxMPTUN
CDfhSq7dg5KSXkjPtHZWD09plcWud8qG27pbVDY49Tas4ebt+dUpWzTc1uVN
e7d96fSUdHNX/urgtqy2KzVl+rXnp/SOaN2kaJlob4SNT23OjS9SE693+uHE
NaSkF9IzrZ1+Ictfvn++/vH50cNfi0PrZ53//ve/7+Gv0dbdvtc27bvwTilz
E/Jzyn/48z/v4S+zdZu2aFXy9v8X9sH/I/bubV9qkZL+9b/+H3v4axpJKqNQ
05RUVNOwzlPS/FZKYgcp6YX0TGvXpKTlFeH2e2wpaffW3b7Xjuy7+fYjuvgQ
KWnTFq1K3p6PDqak3du+JCVVblT07L2ctZwSnRWWbE1KOouUNCgp6YX0TAv5
INOi5rn+afA77eLm356PpKRM+/Nzb89H+1JSZcnb81GLlLSVlPRUxYwWXolS
hVNXruWLzKxUJcXFl01t11E1wiYxBCnpnXTO6aIn8OP9XFPJNPiddnHrbs9H
UlKm/fm5t+cjKanevnqkJPp3+66UkgYlJb2TzmmhRUqqXO/t99i777SLvVSf
klY930NKqtm62/fawX2XWXC4lJT/ODosfHs+OjElXXbKqunY2/PRkZRU+dHW
BZcJd+ZfPXSCfTEoKemddE4LjSJSscLvnfZq1fX3xnP5ealoVan6VzUc2bro
4tOWvLMsvGnBpikpv3Vbs0z9Xt50MDTaujmkfIXhZZ4+BcIFw3qidUYXbLF1
W7PMSrTAjc+SrlHTsVuzTDhlKV+4UUrKb+ByeqrYccWWPF4/G95PS9hESnon
ndNIi6tSeHO1WsW0CDLLm96aG+PVHXVqVmpiWMMpW7cq8JiUFN26HQ99avZy
dK81TUnRrVsFomhKikaeaRFwUpmovs5GW7cjzkRf5yc+OyVFO/ZgSlpNnF9/
13VxSlptYLi9qYnHFbu6vp7T2/Y2jXYxrUlJ76RzGjl+PSrWGa5i2pWSwgKp
xSvr37fJ+U37nJSSvhWu3m6q+cSUtNq61impvtoWWxemleKU6LOh4tzio6UW
W3ckJe0r0GFK2vq7pJqO3RqRwkWmWEq65VnSagNTdbbYicWurq/n9La9zY5u
pwdS0jvpnHb2XYZqKkxd5qZsivkWXmWZ1cTKW/HoxOXbzEV5n8/2lDQL49L3
xertvspP3LqzUtK3ztVe3lRti63bl5LyxfalpBZbtzslLV98X6/+u6ny07fu
Rp/OUlKjbaw/z4dLnVWy/gL0cc9w2KY+px9S0jvpnHa2XoMqa8tc4KbYT4ei
AWdKRKfwvjqsKpOw5ik7trpm63Y8S1otNdccPlca8Rt30V2TibSV1bbYulQC
mhKBaJb/Wt1dz5JWBXakpNlq4jI9ba15x9ad6JRnSasCO75uNwW/P5ql0tNd
37hLLbVjXUdaUl9J2Ly5qikIZdECqZbsbtVwXrKZzyMlvZPOaerg+TC8ouWv
cVP2DnleMHzccPD5UfTu/cjGprbuYEpKTdxU8ykpKbPvNsWZ6O5Y7uhbUlK0
wNaUdO6zpGWFLbbu+LOk8PW+ardu3YkOpqRogX2Pe2rS0NbKd3RIfgPrJx5X
7OrKSlYvlpV/FjkoLJ+ZFdb/bI12Ma1JSe+kc1rb1MM1tw2Zc+yUTknhi/B2
uoeUlC+wIyVFw9F0+Bt3LbbulJSU3+NNU1K+wL6UlEo6m1LS6nWLrdudklIT
p9c8S8oX2Pogqf6bdfWVH0xJ9QXa3T+fUnPq2jT9GnnCYptePF67vUxTUtJr
6Z9Gpl/VFKupMz83ddu8mpV6mw9ElTfeja4C0/b/X1L4wGiKueAbdzVbtzsl
1efiRimpZutq8ks+8mQK1FQ1V9Ji6w6mpCnIRFPsYdPDUlLRNHhKqtzGTZeA
u0yJZPSJpaTMsuFmppZ6qs53NClS0mvpnxZWZ8Ll23aXxTnyfK1iS1S0TDgx
Xyyc3uKgmhr8/2H3/TXauq1ZJrprUru7k5Q0tyeMMPP0sPHRBfNvV9OX9bTY
uq0RaWU5MfpaSqr5rl34djUrtciNKWkU0/aUlHkRVvWeHv4eeHe3gs2kpNfS
P6eLngbn63LT9W59HtHor9G96O35qJ+UNNy+i/6Y6Pq/HlJSu793pqQL/l5+
lVxdvJZvw9efX6+AmWWX9V+2LbeTkgYlJb2W/jldqktbd/Xj77Rvz0dS0u6t
uz0fSUmtSUnkRZ9AfV52EyIlDUpKei39c7obU1I/bJ2ts3XXO33r6rVISf04
pYteboolo7f1rcNpUFLSa+mf06W6VFcDT3V6SuJ6rS9Sy9T5zrzwzq1+ACnp
tfTP6aKnQedG4MGkpKEVn5p5rHYKfTgoKem19E8LqzOhEyPwbFLSuCq/W+gq
dpybgUFJSa+lfxrxtXbgPaSkQdVfp1zIjnM/MCgp6c10UTv6FngDKWk4wb9R
UZuSlr8t2jcrfBG2KtrauXD0Cxup+qM116z99FAjJQ1KSnozXdSOvgXeQEoa
SxiR6lPSJ5t08rPCF6vsE11dtHC4VDTdZGpOrT1V7XFS0qCkpDfTRe3oW+AN
pKSBRCPS1pTU4kUxJYXt/8SiR1hPTeNX9dT3TD0paVBS0pvpoqZ0LwBdGT0l
pbYo1dTKxi/raXHtlpIGJSW9mS6quVikemn1iVb9ggBwo9FT0mqp5YuamvP1
5EPZPlLSoKSkN9NFn6ATMufn1MSt8QoAbleTklafB65eLyemZq3qyReOXoLD
elLtD9ebqiHV+HAtpzi9Qq4hJb2ZLvqUYtF8Iq1fJD8R4En8LmloD7tOdbs5
UtImqyRbuUimqkz9lfWcRUoaiC76nJSSKmsGeBgpaTgPvjZ1u2lSUr3TH+pl
AtSOpQ6Skgaiiz51KSk1cX6b+rDizIbCfaZ3u7v7uyYlDeeph3TPA7bbhvUm
7KXj/ZaqIV9zo/0lJY1FL+WHZPROqXIU61tG1/Ndx5X0Q4aUNJb6w7j1Yb+7
8hFHohNIpUwvZQ7IefryxarOecqqzLLOVT2r6akaNpGSxqKXMpFnNSs1PTol
NRFG4QAO6ZOQlDSWTcdw6wN+U2Rr2pLWpKRKNc998ndcYYSJTvkE+aj4Ilrn
VlLSWPRSKgrtnlUzHXrmgp6hc1akpIFsPXSlpLM4b1Q6JSVVvkjFn9SL1MRN
pKSxvLyXpkA4K/p2tWym/naNh0Yct3n6Z0lKGsWO47Z4yVt+Sp/66D6/VL6S
sIbMdXlVbVfytwrMwl4K92n0uNrxIqwz/yI1cRMpaSx6qSndy3ActDX00kxK
GsWRlJS5OUzdqWZubvMLFtebv8XtMyhJSfWKqSTak1LSVg7IGnqpKd3LWByx
9fTVl5Q0hH2Ha2VKqixff2tas5b69fZAStpk9ZwoM3E1a1lm05RwFanp+ZYU
SUlj0UtN6V7G4oitp6++pKQhHExJn/R9vpRUQ0oa1OmhRkoai15qSvcylujN
SfT6Hp2eKXb8c7ndt3mNbpyM7i8pqX+7j9WasRMdYmelpIP19ENKGpSU9HJ6
qSndy0BSh2smJdXUkL+Zyaz3LI3qN7q/pKTOHYlINZ9mzJml/mOQ/IcnYYXL
t2GZ6Ip6SyW9tYdKUhI6qh19y0AyKekTyzWr8tGJ0QWjL9qRkpqSkt4g87GG
gVBDShqUlISOakr3MorrU1J+dKQ+GZ4C4VqirQ1fhOvaNGCN7o+U9A5S0kFS
0qCkJHRUU7qXUeRT0ieINqmbpXB6GECK9wypp07R6ctZmcdV9YtUMro/UtJr
RD9G2PHZwjvppUFJSeiopnQvozieklL3Uak6M6MjVU99CKosmdmiIqP7IyV1
7JTjczmaMhEpNczbpYOxRp+UNCgpCR3VlO5lFEdSUiYZZVJSZqXz3MyToMrm
1QerTEtSzdu6yPNISX06KyItX6fGdXT47P7wobI9Y5GSBiUloaOa0r2MopiS
Kl/nZ20tkApBqZI7UtLuQWp0063jB+em4FMz5bhxR5yUNCgpCR3VlO5lFDXf
mVk9fJlTxqpMalaqzk1l8q+XE/OiixzvMbjdKUdmppJi/fkxnhq/YeX5k0Cx
8k3b29SO0wtXqrxqXOOyTb5sRf3Y1/7T+4SZ7mUUQxyr0693UPfWOUSP8UKn
HJmrSpa3GTX1T4nUs6xt9XpVf1hDWFW+8n5G6O47NK7xc+/8+Pzo4e+y4+TK
Ff2jf/S/9/AnJXVI9zKKIY5VKak3fpfUmxbjYjXllJSUmbjKOztSUn07ryEl
dU5Karqi2/PRkZT06elM8ki6lyH0cKDW3EsceXR+bp099NjtpKTe3JKSKgtv
SklHniWlWnUXKalzUlLTFd2ej6SknulehnDjgdriCdEFBmpqO1JSV07/9CD1
tjhmpaQlKalzUlLTFd2ej6SknulehiAlbTVQU9uRkvrR4oCcFlKzMksV34av
wxeZ6TWVn94nO/TTEqKkpKYrysSW2fLtam7q9bKwlDScKebuRkFSi+MzdbuS
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
lJR0CuPr2dxZ1Sumj1SSKpaXkpYckPuEsR0aqUlJm5LO8WdJq+ZtGgjRD7UO
XhylJDonJR1ncD2elLRJ+JwoNTE1a3UJXgrnriqJFs4vUmzhTEoa3VSdiOGg
VWxZKT4kypQvLhWWzDQyPxYyp9a5wJEuuj0fSUlkSEkHGVlvULyO0KfTQ42U
NLopFsahhWi0ueWveJzXjIUp+OArOn1rF92ej6SkqGg6vsuN/SAlHXTv7uMa
t49T9pGSCE2Jmz041zROSpobXD93kpIe7WeH/PN//j/38CcljcuwegkpaVBS
EqGw6wxwWrjiQ/Zqm9qcmhV9W195tM5MbPlava6fJSUdMUlJf0NKgqJNVxn6
ISURqrwJhIN+HlF/+Zf/Qw9/W4/tykvejhQW1pBPLsXX+VlS0m5S0peUtMm+
D2cYnd09KCmJUKbrjHRONG5KmtvfejjsSEnhIplZUtJuUtKXlDQrnhBWBVxP
38O+HpSURKjYdfqWU4yekuataDcitqakaPn8rMxcKSlDSvqSkmb550T1E3ke
O3pQUhKh+q8SXdAYHuwZKWnelhYjYlNKShVOzZp+/bGSlLRJKiV9O3P19jtl
CmRqyJeRkjoU7t/p1ydHqaWuaiC3ccs0KCmJUH3X6WSOeFJKmrfo3EGxKSVt
fZY0bfkmnsG+kskvq1mr0JQqVrOIlNSzaEqazwlS0ptJSZ3LDN7rXbbJ16zo
eTZ13ZX7lIeZFilpPj+E+SWcXlMsevJJ1XDuMXxibVPL3yVlFpGSiqZsxpm2
J6MjKYkhpA6kiw9drpc5AOjBz73zd//u/9vD32XHiQNytx1dp7fZYQqiypSI
P+HE6POg6Nvoi7Dw6Zt2Sp1Ty3/jbvo1JRXXdXxznmQqPQmaC0yxyJOauFrW
s6SB5JNR9Jzg5vkl7OjOSUlssi8o6XM2ieaaKXjiUyyWiU71karRBh6sOZNc
5tuw1ev6Wf9u8Yuk5UQpqUYxJYVxafXcJ5+MwpJSUudWey1VIPWWB7OvOzdJ
SWyxu/d0O/WK8SecMlZKmjfzyIAqfhfumj9De2V3Soo+S1rVln/bVUpiVjPS
i0mKR7K7OyclscmR3tPzVIrGnzAH5Yv1n5Lmjd2xFimpWzUpKUxA0aWkJHg2
KalzUhKbHOw9JwRq7E5Js4FS0rzJqXVFp089adw3g5kO/xt3q4mZYpl1SUnQ
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
hNM/wbiYy0drWNWWqqfdWBv6wBu68V9SEhQ99U5jlI0q9v909u+S8nNvTEnz
9oZToqv+OfGP//ivevgb5WCDFMfwcRf0YT4Bhc1YJp1Uscp6Tt+WdtVeY+jG
f0lJUPTIlPSkLcpEmFT2mdKPiqJJqquU9Ml+Uroqdns+kpJ4jEdeC650TUoK
X0efH4Vloi/CM20+Lp1r6ONt6MZ/SUlQ5MrYuXyEma9r4ZTirFQNt6ekecM/
v36tLixwez6SkngYB/Nut6SkymdAYTiqX1xKihq68V9SEhRJSZ2ryS/X/F1/
nISJbzX39nwkJfE8jud9rklJqYdBlSlpx8RG2zX6YTZ6+z9SElSQkjonJe1L
SfMiq9fftzXFpCReyyG9T+t+Wz0Jmicuz5CrF+Ei0UAU1tN6i0Y/xkZv/0dK
ggoPS0lP2pavMCncqIcNXxYohpfi6/wsKYnXclTv0LrTrt8p7dY4+gE2evs/
UhJUuP7ut6knbUvebwt9VnhETVjbl5KmPzw2kpIgz4G91cNSUtPVjXh09fD5
4YmkJCgaeoyHnrQtec9OSUtSEtzFsb1V04cvl12vW69o0OMq2uxBt+UjJUEF
KWlQ70lJK/MRW5NoMpkonLgvIklJPJvDeys9ljd0/6waP/S2SElQJCUN6rUp
abY7Jc2kJKjhCN/kYVfVc43eM1ISvMrDzudP2pY8KWlHSlotkvkanpQESw7y
rfRY6Bl9styKobdISoIiKYlBVYaazM+Ojv8i6W0pKfyN2Kvc3f030wNbOX4+
2f8z+KDmDXnMFgEpTzp3ffo+ay2vFPN/85fRKXi4n9lf0bnXdMgtR9G0MSXN
/ZN6KyWlPOwmZzf9sHXb42nzJo36ZNDeuMzdvX6+SUqC13jYeazbbZl+fUaf
Os2mioWz8vVHa2jq+p6fDuSac/+6PepO8eyt2+fNfbJp238W/vH50cPfm3cZ
p3vYjROQ8rDB3ue2ZEJNZd7JvM6vTkqSknZ72MnhXG/unNS2R89mt+cjKYnT
PWP4+10SFD1jsM/63JZMq+5KSauvQ0TffmJpbjmr+AArVfgUUlJrT92us7y8
f/LnrnnK7flISqKFBxxRUhIUPSwl9am3lLTKPvmwE01M0fQUvo2u4ixTT07f
uts9cqNO99ReqtyuVbFwqUlK4hI3nvzvdaTTpCQoOj7QKMr0cDhrSmecmnNj
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

                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 11->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3u9VyDH2QLKOhClWlDjiBFCloURQrKaCINeg8gI4YIKRqkN0iEJnmo
qKjoOIRISKBBQkJI9wFQcASIFjpaqs09s/V6fHt9+mPZa9nXpb8e7W0vLy8v
e9n+be99P//+n/3nf/qf/lvTNP2Lf/fnf/70n/6X/+Hvf/9P/6v/+N/7+eZ3
f/Ev/rN/9hd//p/8R3/xX/z5P/vz3/8Hf/Zv/5z4//0s+2f/zjT91WsAAABW
Pp/P978AAAAvtwxKAAAAiEgAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtS
EgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABL
UhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAA
S1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwNKNKWkCRnDL+QEA4EY3
3gXde+MHVLrl/AAAcKMb74LcgEHnDFIA4J2kJCDFIAUA3klKAlIMUgDgnaQk
IMUgBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J26TUm7/48ty0Xm/4ZW
JVM11K8uXCq13iNNPbKW/FI1Gxttc6rHMiUzdS4nFstEV1RTf7RtxU1OtSHf
sVPiYEtVW3yb2bRML+1zbm0AAKO48S6ouOrVLWVlndH6w3vLfLWb+iRVef2s
HU0Np0dL7mtbSqrNxRUVd2U+ehRbuKn+TNtq6s+/rdwv+Vn1e6247EFSEgDw
Tk9KSfV3ocVqG6WkzPStTd0dKyrvzLe2of5OPrrfozXXt7C+/k3hK9+8TFO3
TqlMScVuOX0sS0kAwDs9OyWFsypvvE9PSTtu+OufL9RP2dekmjL1O6smAR1M
SZll9x3tN6akTeuSkgAATtF5SlqqqbCmqppFtqakTP2b1lu/yCkpaVP3LpfK
VJtab7QBxcUrq40WK06sV5O5anZQKFVnuIriuvZtWt6mYwMA4DFuvAsqrro+
WRQLpG6Sz0pJqaW2rje/SD7U7EhJxcZkGpnZolTLMyVbpKRo/fm2ZerPR5to
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
R0xJmzbwCCnpMaSk06U2ZDn9YFDaNP2Iuc6mn9U8Ztd/SUlQJCUNSkqqr01K
6jAlbdrGPklJV5KSTvfIlNTbIj2TkqBIShqUlLSpQimpw5S0aTP38SxpIPmB
uTUlrcb7C1NS8US3NSWtKoyeVJdlli9Wr6OFw7epRkYLhyVTDU41I7/SzPRB
SUlQVDyR0icpaWud4QX9YIWnNOx4/dPIKWnTlvZmqkhJ8/G2ev19W1PsbSkp
c8e7I85EX78nJX2yl/jM9HAvTL9mn9XbzItMgbDMqlg0s2RaFS1W34zMSlNr
GZqUBEVS0qCkpH0170hJU7Vzm1pfMpVZlsLpYeFomVX56OJSUj7CFF/nZ70z
Ja3G1CQlbbTqvfAcldqQKZEjlpWEZfIvlmufgngSTkk1o1h4VTJscGU9qQrD
ieOSkqAoPHMyBClpd+VDHPP1LYwGljm2FF+nJm5a9khK2rSxXTmSkqY/PDaS
kmbRlLS8yz0rJX3rXL2tr3+U3s4Eh0yBTyIpRFNGTdDIB5B2KSnVjMp6pCTg
IyUNS0o6Un//h32xect7yLNSUrF8Zl1HUlLN9naoq5T0BjtSUrjs/Pr7YvV2
a7VRyyPk3pLRg3YuFi3wqYsP4bLFkuGLaG358sXCqVk1zchXmJo4LikJilbn
VUYhJQ2xlt0yNzDhvdCJz5KmWCBazcqs7m3qU0w+LqWKeZa0nLv7WdJq2bny
fd/EG6W3pyBchFOiS4U9P/0haITTo1NWezD6dlXDqrZo+dSqw5aE7Um1P9rs
6EpTPTYuKQmKoqcC+icl5WvoxymdkKltyqakpcpv3E1BJlot3uJZUnSrOzcd
S0kzKekrP3Cmk1LSlHiW9NSUlD91HKz8eD1jediWSklQdORGjhtJSfka/tbf
+n97+Dt4H1ITtfIpKZODNqWkymdJuzd2uTnHK7nG7pS0WnBKfw3vhSkpM3d3
SoompunAN+6u7Jbdak4dRyo/pZ6xPGxLpSQokpIGJSXla7g9Hx1JSTXhaFn4
3JQUPjzKLygl1QelfEraF5Eek5LytqakeRCtpvxJ8HulVbHHpKSigxuy6TS1
r/IjBVp4zK7/kpKgSEoalJSUr+H2fLQjJa3uOi5LSdFHRdGUlA9KZ51JRjkj
7UtJ815OvZWSorampHZ/j+ntzlNGsfDWU+Vxj9n1X1ISFElJg5KS8jXcno/q
U1LqI9mDKWkKZKavyqwiVXTxdimpftvvtS/RtPgborsOkpJOJyVt9Zhd/yUl
QZGUNCgpKV9DMbwspabPc1clwwV3pKRUONraD6mUdP3fuWeS/s9LUtKVpKTT
nT5g5xNa9PXqjBeeAMMCn19vUcLy0aWii5yysY/Z9UCl/H0a3ZKS8jXU5Jfw
dc2L1eutKakYjrb2w1NTUn0P3CW8/bvR3Z3R3N0d/Iu7O+McJ27I9Gu0WVVe
MzdVJrNs/Uqnk4LSY3Y9UOlJ5/xXkZLyNexLSTVTaioPU9KO+6vKwm1uA3fa
s7cO9wCww4njK6xqqotLn0UaWlWymhKeZzIvinN3cDqCF2pxb8MFpKR8DY1S
Uk3Nq6V2D7FrBmZ0Lf2cFjppBjzSWeMrdRr5VKek+fWqTCbjSEkH+V0SFPVz
O8QmUlK+hvr88lWTkrZGpHmpu/rh4Io6OTn00AZ4pNNTUvQh0aZiqRc1j5Ck
pE2kJCjq5EaIraSkfA2bniUV3x55lvTZO8puT0nz3NtPEbc3AB7pxJEVPVGs
pqweFVW+DV+kClTWs3sDdy/bJykJinq4BWIHKSlfQ6OUtDUorT7b3DTcOklJ
c5l7TxROU9BC05H1mGH7mA1ZkpKg6PabH/aRkvI1tEtJm4JSdFsq49KVA7Ny
XfeeLpypoIVGI+sxA/YxG7IiJUGRlDQoKSlfQzG8rETnpqZEl6pPSct2Zgp0
mJLmwrecNJypoIXTR/ST7isesyEhKQmKnnQ2exUpKV/Dpl8Ptfur/zJbWLLb
lDQvcv2pw8kKGjG4Qs/uEykJiqSkQUlJ+Rpuz0f1KWnZ7GX5zlPSvODFJxDn
K2hk9YT97ubc4z09ICVB0RtOBY8kJeVruD0f7UhJc+NvuUYfWd3FrXXKggtM
r3R3r19HSoKit50WHkNKytfQj4NbcbArNq3ueA2XNfjKngF4HikJii6+E+Ms
UtLjTYv/x8cFfXLWKsZqLcA7SUlQJCUNSkp6vFU/XBCXTqxcUALomZQERVLS
oKSkx0v1Q7sxe261F5xbHCoA+0hJUCQlDUpKerx8P7R4tNSi5wd6/gXwHlIS
FElJg5KSHq+yH84dwu2eUrXbrQ4YgK2kJCiSkgYlJT3epn4469FS6+c+Q3xX
EODxpCQokpIGJSU93r5+OBiXrvlXF05fi2MGYBMpCYqkpEFJSY93sB92D+1r
+v/eH1U5xgCAPClpUFLS453SDzseLV3Z/3f9qMoxBgDkSUmDkpIe765/l/v6
/j/xLLRjG+e1OxkCADM3BoOSkh6v3b/Lna/5rv4/61yUqWSKWa3a4Qe8gd8l
QZGUNCgp6fGa9kN+4N+4C045IxVrWBVYPVo6uHaA/klJUCQlDUpKeoPWXZF6
tHT7Ljh4XpKSAPKkJCiSkgYlJb3BZV2xikud7IIjZ6dN3yrscNsBmpKSoEhK
GpSU9AbXd8XypzoXrzqlUVAKSzoZAu8hJUGRG4NBSUlvcO8/pNDPjtjdmMw3
62qmAzyVlARFXd0LUU9KeoN7/xWFT2fnh32NWX6VTkoC+JKSoKiruyDqSUlv
cG9XrPJFJ/tla0uWcS+6YFdbB3ANKQmK3B4MSkp6g05S0nJKJ3tnU0umXzVt
GMAQpCQoctswKCnpDXpLSfP0Ts4bNc2YAte0DaBnUhIUuW0YlJT0Brd3Rb4B
neSO4lfppCSAFSkJitw2DEpKeoPbu6KyAT2cRqJtEJQAoqSkGpnLR/Tt6vri
cjM69wyDkpLe4Pau2NSAHjJIZVa6pW0A/ZCSKmWCTzETudyMzj3DoKSkN7i9
K/Y14PazSjEr3dIqgH5ISZUy2Sd8nBQWc8UZmnuGQUlJb9BDV+xuw+2RJJ+V
bmkScLp5RBvam0hJlfIpKXy7KuaYHJqzyqCkpDfooSuOt+HeYJLKSrc0Bmhh
OcyLozv8Cu6N2vdNkpRUKdxNU3CwTbFAFBZjOLePU/aRkt6gh644sQ3HzzZX
38FkndUtUOO3f/2v+/m7uzPWluOxODZ/FviX//K/6eHv3tOIlFQp3E1TdUpy
vRid3TcoKekNOumKc5tRc9VIzf05/cfnRw9/newa3uNnNpl+joAO/npISavT
iJREOzUp6VP3GyWGIyUNSkp6g066olEzMief1CwpideSkjJSiSlV+PZ8JCUN
JJN39s1iIFLSoKSkN+ikK5o2I3y0lPmWgpTEa0lJGfP3nWoGppREvSkQzlpO
ic6q+QYFfbLjBiUlvUE/XXFBS+ZzUeqS9JGSsupvETM5dCAP295i86SkjPBE
kenMVEr6LrV6+50S3iovi4WVpAp3lZL8LgmKOr9wkCIlvUE/XXFZS6L3GMu5
t+ejzlNSPg6E/dnhhlR62PYWN6c+Jc3/xsL3dapAtPyTUlKqM/OxJfW25vXy
bfhCSupZzycHbuTAGJSU9Ab9dMW9KWle+yolrcqsJkajzTwrWiBTfriUFJ7b
U3eMHW5LjYdtb3FzKlNMGH+KxVJhapSUFHZXvjOnbGyZ6tLQcmJmVs/fuJOS
ljJDb1MZHsa+HpSU9AZddcU1jYne3synqSkILMsp0yIoRXPNKv4UI1L09Vgp
aXmGz1z6L2zmaR62vcXNqQkyYZlMSlrlqXFTUqh4Gsk/S5pij4EyE6MVZtYi
JXUoM/SWBVJveSo7elBS0ht01RVnNSZTT+beZrYvJdVMqUxM0cdY/cv0/Dy3
WEPlbrq35Fx4Sm/vcD57U1I+Fs1Ttqaku/vjqOI37qYg/kQXn9Jfq8usRUrq
UOZo+SRulaMTeRh7eVBS0ht01RVnNeZIPdN5KSn1/bpo+WiFp/TGiVLX92WB
1IKXNPBkD9ve4uYcSUlhGlq9eMOzpOXcfSkp+ixptjUlRRtJt1JH2lUHNffI
7H16JiW9QW9dcUp7pmn9XOBTfSKass90jj85mhI/WYpOOd4V5ype06PTx70E
PGx7i5tzyrOkd6akcG4xJc0pJpN6VlPybz1L6lyQin45clJ7qs+TCSfq9pJB
npT0Br11xZH2pK5By1NQsf6pLv5UFqtMSalV7O6KRmpO5uGlv8MNqfSw7S22
7cjvkjLPksIv4z0mJWXm1qSk1LMkKemRisk6tVT7pnGnnq8aZEhJb9BbV5zS
nlUlNZ/XLQuclZLmQPSVSkmpeNXbrqmXvxl4nsds775/4674ovgQasSUlJfK
L/NBEv2WXThrOSX/VkrqXzFZR6PT0KcUatjLg5KS3qC3rhg0JdVnn1Sx6HqP
dwXU2/f/SwonLv+kpHv/pKSBrO6W3Ty/hB09KCnpDTrsiuNNClPSPGVrSpo/
sI1ODOdGy6dSUqoSKYlbbAoyTf+kJCnpnVYXhU+X12jOJSUNSkp6gw674vQm
zdeamprzAef4X339He4aKg161ZOSziIlfUlJx414JmGTQa8XSEkv0VtvNEpJ
9YWlJI6IPrgcYm9KSWcJHzff6MZ+kJJOce9OpLXbxyn7SEkv0WFvnNukTbXd
disTc2IncL3lHhxib0Z/WHTX392dwQmkpFMMcfZgN5f7QUlJL9Fhb5zYpLsS
R4e92tqyq8W9z69f9Xx5V/BOUtJZnDoezKVhUFLSS3TYGx02aasHbMIOqacn
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
XJt4s+cdvc/bonqnbLuUVCkTfIqZ6JQ9tTslnbX245XcvordXPoHJSW9kJ5p
qqZ7xSUG9byD9nlbVE9KulIm+4SPk8JiLYJS/VInFrtAPy2ZueIPSkp6IT3T
2qarT83J0wmWTqzu5eb7t3GPz+dtUb1Ttl1KqpRPSeHbVbGzDsitQal+7f0M
mX5aMnvJKeV5pKQX0jOt7ejh/GVrx6d/cKIp5vPrpX+sg/N5W1Tv3G2XkioV
U9InEUlOPyCPp6TwmFlVGH27erHaqMpZmXrClqReX+/GVXOElPRCeqa1gz0c
nszD+xm4Rer+LZw1iudtUb1Ttl1KqhR2aTQOhCVbnPzrKwwbmZoeLVkZeWpm
ZeqpaUC4CVdy7R6UlPRCeqa1s3p4Sqssdr1TNtzW3aKywam3YQ03b8+vTtmi
4bYub9q77Uunp6Sbu/JXB7dltV2pKdOvPT+ld0TrJkXLRHsjbHxqc258kZp4
vdMPJ64hJb2Qnmnt9AtZ/vL98/WPz48e/locWj/r/Nt/+//p4a/R1t2+1zbt
u/BOKXMT8nPKP/pH/0sPf5mt27RFq5K///1/28Pf7iNz97YvtUhJ//M//sc9
/DWNJJVRqGlKKqppWOcpaX4rJbGDlPRCeqa1a1LS8opw+z22lLR7627fa0f2
3Xz7EV18iJS0aYtWJW/PRwdT0u5tX5KSKjcqevZezlpOic4KS7YmJZ1FShqU
lPRCeqaFfJBpUfNc/zT4nXZx82/PR1JSpv35ubfno30pqbLk7fmoRUraSkp6
qmJGC69EqcKpK9fyRWZWqpLi4sumtuuoGmGTGIKU9E4653TRE/jxfq6pZBr8
Tru4dbfnIykp0/783NvzkZRUb189UhL9u31XSkmDkpLeSee00CIlVa739nvs
3XfaxV6qT0mrnu8hJdVs3e177eC+yyw4XErKfxwdFr49H52Yki47ZdV07O35
6EhKqvxo64LLhDvzrx46wb4YlJT0TjqnhUYRqVjh9057ter6e+O5/LxUtKpU
/asajmxddPFpS95ZFt60YNOUlN+6rVmmfi9vOhgabd0cUr7C8DJPnwLhgmE9
0TqjC7bYuq1ZZiVa4MZnSdeo6ditWSacspQv3Cgl5TdwOT1V7LhiSx6vnw3v
pyVsIiW9k85ppMVVKby5Wq1iWgSZ5U1vzY3x6o46NSs1MazhlK1bFXhMSopu
3Y6HPjV7ObrXmqak6NatAlE0JUUjz7QIOKlMVF9no63bEWeir/MTn52Soh17
MCWtJs6vv+u6OCWtNjDc3tTE44pdXV/P6W17m0a7mNakpHfSOY0cvx4V6wxX
Me1KSWGB1OKV9e/b5PymfU5KSd8KV2831XxiSlptXeuUVF9ti60L00pxSvTZ
UHFu8dFSi607kpL2FegwJW39XVJNx26NSOEiUywl3fIsabWBqTpb7MRiV9fX
c3rb3mZHt9MDKemddE47+y5DNRWmLnNTNsV8C6+yzGpi5a14dOLybeaivM9n
e0qahXHp+2L1dl/lJ27dWSnpW+dqL2+qtsXW7UtJ+WL7UlKLrdudkpYvvq9X
/91U+elbd6NPZymp0TbWn+fDpc4qWX8B+rhnOGxTn9MPKemddE47W69BlbVl
LnBT7KdD0YAzJaJTeF8dVpVJWPOUHVtds3U7niWtlpprDp8rjfiNu+iuyUTa
ympbbF0qAU2JQDTLf63urmdJqwI7UtJsNXGZnrbWvGPrTnTKs6RVgR1ft5uC
3x/NUunprm/cpZbasa4jLamvJGzeXNUUhLJogVRLdrdqOC/ZzOeRkt5J5zR1
8HwYXtHy17gpe4c8Lxg+bjj4/Ch6935kY1NbdzAlpSZuqvmUlJTZd5viTHR3
LHf0LSkpWmBrSjr3WdKywhZbd/xZUvh6X7Vbt+5EB1NStMC+xz01aWhr5Ts6
JL+B9ROPK3Z1ZSWrF8vKP4scFJbPzArrf7ZGu5jWpKR30jmtberhmtuGzDl2
Sqek8EV4O91DSsoX2JGSouFoOvyNuxZbd0pKyu/xpikpX2BfSkolnU0pafW6
xdbtTkmpidNrniXlC2x9kFT/zbr6yg+mpPoC7e6fT6k5dW2afo08YbFNLx6v
3V6mKSnptfRPI9OvaorV1Jmfm7ptXs1Kvc0Hosob70ZXgWn7/y8pfGA0xVzw
jbuardudkupzcaOUVLN1NfklH3kyBWqqmitpsXUHU9IUZKIp9rDpYSmpaBo8
JVVu46ZLwF2mRDL6xFJSZtlwM1NLPVXnO5oUKem19E8LqzPh8m27y+Iceb5W
sSUqWiacmC8WTm9xUE0N/v+w+/4abd3WLBPdNand3UlKmtsTRph5etj46IL5
t6vpy3pabN3WiLSynBh9LSXVfNcufLualVrkxpQ0iml7Ssq8CKt6Tw9/D7y7
W8FmUtJr6Z/TRU+D83W56Xq3Po9o9NfoXvT2fNRPShpu30V/THT9Xw8pqd3f
O1PSBX8vv0quLl7Lt+Hrz69XwMyyy/ov25bbSUmDkpJeS/+cLtWlrbv68Xfa
t+cjKWn31t2ej6Sk1qQk8qJPoD4vuwmRkgYlJb2W/jndjSmpH7bO1tm6652+
dfVapKR+nNJFLzfFktHb+tbhNCgp6bX0z+lSXaqrgac6PSVxvdYXqWXqfGde
eOdWP4CU9Fr653TR06BzI/BgUtLQik/NPFY7hT4clJT0WvqnhdWZ0IkReDYp
aVyV3y10FTvOzcCgpKTX0j+N+Fo78B5S0qDqr1MuZMe5HxiUlPRmuqgdfQu8
gZQ0nODfqKhNScvfFu2bFb4IWxVt7Vw4+oWNVP3RmmvWfnqokZIGJSW9mS5q
R98CbyAljSWMSPUp6ZNNOvlZ4YtV9omuLlo4XCqabjI1p9aeqvY4KWlQUtKb
6aJ29C3wBlLSQKIRaWtKavGimJLC9n9i0SOsp6bxq3rqe6aelDQoKenNdFFT
uheAroyeklJblGpqZeOX9bS4dktJg5KS3kwX1VwsUr20+kSrfkEAuNHoKWm1
1PJFTc35evKhbB8paVBS0pvpok/QCZnzc2ri1ngFALerSUmrzwNXr5cTU7NW
9eQLRy/BYT2p9ofrTdWQany4llOcXiHXkJLeTBd9SrFoPpHWL5KfCPAkfpc0
tIddp7rdHClpk1WSrVwkU1Wm/sp6ziIlDUQXfU5KSZU1AzyMlDScB1+but00
Kane6Q/1MgFqx1IHSUkD0UWfupSUmji/TX1YcWZD4T7Tu93d/V2Tkobz1EO6
5wHbbcN6E/bS8X5L1ZCvudH+kpLGopfyQzJ6p1Q5ivUto+v5ruNK+iFDShpL
/WHc+rDfXfmII9EJpFKmlzIH5Dx9+WJV5zxlVWZZ56qe1fRUDZtISWPRS5nI
s5qVmh6dkpoIo3AAh/RJSEoay6ZjuPUBvymyNW1Ja1JSpZrnPvk7rjDCRKd8
gnxUfBGtcyspaSx6KRWFds+qmQ49c0HP0DkrUtJAth66UtJZnDcqnZKSKl+k
4k/qRWriJlLSWF7eS1MgnBV9u1o2U3+7xkMjjts8/bMkJY1ix3FbvOQtP6VP
fXSfXypfSVhD5rq8qrYr+VsFZmEvhfs0elzteBHWmX+RmriJlDQWvdSU7mU4
DtoaemkmJY3iSErK3Bym7lQzN7f5BYvrzd/i9hmUpKR6xVQS7UkpaSsHZA29
1JTuZSyO2Hr66ktKGsK+w7UyJVWWr781rVlL/Xp7ICVtsnpOlJm4mrUss2lK
uIrU9HxLiqSkseilpnQvY3HE1tNXX1LSEA6mpE/6Pl9KqiElDer0UCMljUUv
NaV7GUv05iR6fY9OzxQ7/rnc7tu8RjdORveXlNS/3cdqzdiJDrGzUtLBevoh
JQ1KSno5vdSU7mUgqcM1k5JqasjfzGTWe5ZG9RvdX1JS545EpJpPM+bMUv8x
SP7Dk7DC5duwTHRFvaWS3tpDJSkJHdWOvmUgmZT0ieWaVfnoxOiC0RftSElN
SUlvkPlYw0CoISUNSkpCRzWlexnF9SkpPzpSnwxPgXAt0daGL8J1bRqwRvdH
SnoHKekgKWlQUhI6qindyyjyKekTRJvUzVI4PQwgxXuG1FOn6PTlrMzjqvpF
KhndHynpNaIfI+z4bOGd9NKgpCR0VFO6l1EcT0mp+6hUnZnRkaqnPgRVlsxs
UZHR/ZGSOnbK8bkcTZmIlBrm7dLBWKNPShqUlISOakr3MoojKSmTjDIpKbPS
eW7mSVBl8+qDVaYlqeZtXeR5pKQ+nRWRlq9T4zo6fHZ/+FDZnrFISYOSktBR
TeleRlFMSZWv87O2FkiFoFTJHSlp9yA1uunW8YNzU/CpmXLcuCNOShqUlISO
akr3Moqa78ysHr7MKWNVJjUrVeemMvnXy4l50UWO9xjc7pQjM1NJsf78GE+N
37Dy/EmgWPmm7W1qx+mFK1VeNa5x2SZftqJ+7Gv/6X3CTPcyiiGO1enXO6h7
6xyix3ihU47MVSXL24ya+qdE6lnWtnq9qj+sIawqX3k/I3T3HRrX+Ll3fnx+
9PB32XFy5Yr+yT/5H3v4k5I6pHsZxRDHqpTUG79L6k2LcbGackpKykxc5Z0d
Kam+ndeQkjonJTVd0e356EhK+vR0Jnkk3csQejhQa+4ljjw6P7fOHnrsdlJS
b25JSZWFN6WkI8+SUq26i5TUOSmp6Ypuz0dSUs90L0O48UBt8YToAgM1tR0p
qSunf3qQelscs1LSkpTUOSmp6Ypuz0dSUs90L0OQkrYaqKntSEn9aHFATgup
WZmlim/D1+GLzPSayk/vkx36aQlRUlLTFWViy2z5djU39XpZWEoazhRzd6Mg
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
/d89/DktECUlncL4ejZ3VvWK6SOVpIrlpaQlB+Q+YWyHRmpS0qakc/xZ0qp5
mwZC9EOtgxdHKYnOSUnHGVyPJyVtEj4nSk1MzVpdgpfCuatKooXzixRbOJOS
RjdVJ2I4aBVbVooPiTLli0uFJTONzI+FzKl1LnCki27PR1ISGVLSQUbWGxSv
I/Tp9FAjJY1uioVxaCEabW75Kx7nNWNhCj74ik7f2kW35yMpKSqaju9yYz9I
SQfdu/u4xu3jlH2kJEJT4mYPzjWNk5LmBtfPnaSkR/vZIX/6p/9DD39S0rgM
q5eQkgYlJREKu84Ap4VLPmWvtanNqVnRt/WVR+vMxJav1ev6WVLSEZOU9Nek
JCjadJWhH1ISocqbQDjo5xH1D/7B/9bD39Zju/KStyOFhTXkk0vxdX6WlLSb
lPQlJW2y78MZRmd3D0pKIpTpOiOdE42bkub2tx4OO1JSuEhmlpS0m5T0JSXN
iieEVQHX0/ewrwclJREqdp2+5RSjp6R5K9qNiK0pKVo+PyszV0rKkJK+pKRZ
/jlR/USex44elJREqP6rRBc0hgd7Rkqat6XFiNiUklKFU7OmX3+sJCVtkkpJ
385cvf1OmQKZGvJlpKQOhft3+vXJUWqpqxrIbdwyDUpKIlTfdTqZI56UkuYt
OndQbEpJW58lTVu+iWewr2Tyy2rWKjSlitUsIiX1LJqS5nOClPRmUlLnMoP3
epdt8jUrep5NXXflPuVhpkVKms8PYX4Jp9cUi558UjWcewyfWNvU8ndJmUWk
pKIpm3Gm7cnoSEpiCKkD6eJDl+tlDgB68HPv/O53/6aHv8uOEwfkbju6Tm+z
wxRElSkRf8KJ0edB0bfRF2Hh0zftlDqnlv/G3fRrSiqu6/jmPMlUehI0F5hi
kSc1cbWsZ0kDySej6DnBzfNL2NGdk5LYZF9Q0udsEs01U/DEp1gsE53qI1Wj
DTxYcya5zLdhq9f1s/5o8Yuk5UQpqUYxJYVxafXcJ5+MwpJSUudS+WhVIPWW
B7OvOyclscnu3tPt1Ht8Spo388iAKn4X7po/Q3tld0qKPkta1ZZ/21VKYlYz
0otJikeyuzsnJbHJkd7T81SKxp8wB+WL9Z+S5o3dsRYpqVs1KSlMQNGlpCR4
Nimpc1ISmxzsPScEauxOSbOBUtK8yal1RadPPWncN4OZDv8bd6uJmWKZdUlJ
0D+n0M5NiZQ0X/6iE5dzVyXDBVOVnJuS6hd3QB5xSu/ZBeRN21NSapFRUtK8
4eGU6GX055Qfnx89/BnOK6nkMu/K6LfsVrNSBVYyEen2lOR3SVAkJXUulZLC
dBNOXCajTJlUYgqXOrghp5ckdFbvOTOQURl59qWkaMjqJCV9Er/jlpIGUgwv
l/1JSdA590KdO5KSMnmnuEjTlDQfdam7iyMrerlze8++IGqVcb7CjDNPD8uE
szJlUuu6JSXNPRBaFbg9H0lJUVLSl5S0lBnO0bfheL+urVwoeptKP6a9KWnK
PhXakbb2HSepe4nlgedsc6LTe88pgtCU+I7c9X/3Hpz5O6vb85GUFBW9Kt3l
xn6Qklam9K1IZlZqCs9w+zglb9qekma7U9Jq8RbfuNt0/qFeo96zU1iapKT0
zfY89/Z8JCU18owulZJWMtlndascvWl5xlHBipTUuR0p6ZRnSU2/cfeRklpq
F5TsGr6qPiW/Soed8MmmpLnY6nX9LCnpXs/oUilpJdyt0yIlhW9XxZ5xVLBy
71WGoumJv0v6+MZdS0070N6BTyknfkrPkpZzU6/zs6SkGz2jS6WklWJK+iQC
UepmhgeQkjpXn5KmP/y735UTL05J4XZ9/OsNbbTuQCcNOnfj8bnMSltTUrhI
ZpaUdKNndKmUtHIkJS0/IeFJ7NbOZSLMSmpiWD5aT75Yo5S0dRY1rulAu4lu
9XBwbk1J0fKpWcsUVgxQPfTGwzyjS6WklZqU9Kn7jRKPISV1LpWSrv+TkkZx
WQfaU/Qpektz4sWu5nPjTSkpVTg/q/IZk3F6UPjxY8rdLd1GSlrJ5J19s3iA
EYf2qzwyJeWvKQ7Ig67sQCcQ+pG6cV0epacHpcxK2z1LkpLu9YwulZKWMpk3
OiU6a9C8TIYd2rn8tfhil23yNSt6qus70C6jK1P1B79HVpE/VU6Nf5c0SUn3
eUaXSklQdOXdLyf6baHPCndzQB50Swc6k9CPG1PSssDWlBSmnsysyogkJbXw
jC6VkqDIvc2gpCRSbuxA+44ehClpWnwl5qxV5J+2ZyLMXH71un7Wa1NSJ9vS
STMOkpKgSErqXOoTy1tctsnXrOjBbuzDKw8VqDGd+q83VJ4epwP/dndl9qkv
eXyrO9HJtnTSjIOkJChyS9O51pfaTRflyzb5mhU92O19eHsDYHb8aIymofzH
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
5dFFojXclZIqrT4EuLs5f6UmxUSTUf4Z0+6UdHd/vJfOr6evbiclQZGrauf6
T0lzOy/rk5eofNBzwZ+dm3dWSkoFok0p6WMw3kfP19NXt5OSoEhK6tzUk5qm
XtMtbzBJSYOYKv6B7q/wbWZWakoxJX3cgt4k0+2r0+PypLr1TBtWu2nBfcfG
sv5Tjq7RD9HR2/+RkqCCO9tB/bbQVYUOp7NISaOojDAX/K3uw2/skxeq+Rwp
9fbIjrtsp59b+ejH5+jt/0hJUEFKGlS3KenjoDpJ+Anzje7ujK5NXaakzyNu
5AZS7O3VUEq9PrLepnv83MpHPzhHb/9HSoIKboE6d/HNcN7WljfqE+jK3ePy
F9G23dItb1Ps5+nXX41NsXSTqmRZYEpn4ejiy2NjuXj04FnVFlYeVhUuUnnU
DX1kDt34LykJilxDO/dz7/zDf/i/9vC34zhxdEEPDMMLVKakTxCXPqVwEc0j
0WWjMTm/9jB/ZQpsXSRv6MNy6MZ/SUlQ5D62c0OnpHkTzu0TYCvDsLWDKSlf
SeZKvZoevo0WqA9BlSVrtiLf8rEM3fgvKQmKpKTOPSAlfRxmpEU/CV++zX9U
Tj2911R9Svpkf6O0LBA+tSmuN1osFXYySa0+HGXqzBv6gBy68UAlNx6de0ZK
mrfllD7hYYofqufvJ6mn99rZlJI+G4/qVXKprPaTTjTRXBYtsONZUqWhj8ah
Gw9UkpLuVez/J6Wkmu3lhXakJI+WdtNpjRTP5JlnNzUXgmXhsNpUJavpy7f5
19HKo6KLVHTY2Ifi0I0HKrnTuNfqEhMtkE8uX9/XyynLWdHyy4mXpaTlVsPX
tD0lpd5SQ6e1MFavZsbUZXWO1WMrQzf+y++SoEhKutcU+1RwVSATW1bxJ5p6
otOXE69PSR8HHgurz6XnifkCn0fcqNxF151urC6Vkg4auvFfUhIUuVm9V7Tz
lzslFWHC6amUVJxyS0rKbD5vkxoFxQKOnyP03rl668/iAIl+8nDKSivr7K3H
3kZKgqKX3GlMv0pND11QMtPaz5aUVJmJukpJmU7gPVKjIF+gOIsivXeiTjqz
cuD0oPPmPZ6UBEWPv0ftfANXbQtb+/iUFO0HXkVKupEOPEsnPSklUUlKgqLO
Q8QRQ2za/MAo81zp9JSUf3tLSvps31/FZ3ZXatctjxftw+XEYgEO0o2naN2N
qxERTv8E42IuH61hVVuqnnZjbegDb+jGf0lJUPTUO41RNqrY/9PZv0vKz70x
Jc3bG06JrvrnxD/+47/s4W+Ugw1SHMPHXdCH+QQUNmOZdFLFKus5fVvaVXuN
oRv/JSVB0SNT0pO2KBNhUtlnSj8qiiaprlLSJ/tJ6arY7flISuIxHnktuNI1
KSl8HX1+FJaJvgjPtPm4dK6hj7ehG/8lJUGRK2Pn8hFmvq6FU4qzUjXcnpLm
Df/8+rW6sMDt+UhK4mEczLvdkpIqnwGF4ah+cSkpaujGf0lJUCQlda4mv1zz
d/1xEia+1dzb85GUxPM4nve5JiWlHgZVpqQdExtt1+iH2ejt/0hJUEFK6pyU
tC8lzYusXn/f1hSTkngth/Q+rftt9SRonrg8Q65ehItEA1FYT+stGv0YG739
HykJKjwsJT1pW77CpHCjHjZ8WaAYXoqv87OkJF7LUb1D6067fqe0W+PoB9jo
7f9ISVDh+rvfpp60LXm/LfRZ4RE1YW1fSpr+8NhISoI8B/ZWD0tJTVc34tHV
w+eHJ5KSoGjoMR560rbkPTslLUlJcBfH9lZNH75cdr1uvaJBj6toswfdlo+U
BBWkpEG9JyWtzEdsTaLJZKJw4r6IJCXxbA7vrfRY3tD9s2r80NsiJUGRlDSo
16ak2e6UNJOSoIYjfJOHXVXPNXrPSEnwKg87nz9pW/KkpB0pabVI5mt4UhIs
Oci30mOhZ/TJciuG3iIpCYqkJAZVGWoyPzs6/oukt6Wk8Ddir3J3999MD2zl
+Plk/8/gg5o35DFbBKQ86dz16fustbxSzP/NX0an4OF+Zn9F517TIbccRdPG
lDT3T+qtlJTysJuc3fTD1m2Pp82bNOqTQXvjMnf3+vkmKQle42HnsW63Zfr1
GX3qNJsqFs7K1x+toanre346kGvO/ev2qDvFs7dunzf3yaZt/1n4x+dHD39v
3mWc7mE3TkDKwwZ7n9uSCTWVeSfzOr86KUlK2u1hJ4dzvblzUtsePZvdno+k
JE73jOHvd0lQ9IzBPutzWzKtuislrb4OEX37iaW55aziA6xU4VNISa09dbvO
8vL+yZ+75im35yMpiRYecERJSVD0sJTUp95S0ir75MNONDFF01P4NrqKs0w9
OX3rbvfIjTrdU3upcrtWxcKlJimJS9x48r/XkU6TkqDo+ECjKNPD4awpnXFq
zo3hIpvKTImYE30RToy20AE2HLus3iP7qn6j8iN9iqWk+RTxfR1On2fNr4tv
o1OkpMc7JSwM7UgPSElQ9PIzzDUyUWhTSgqXLeaR61NScXX079xdNv1qNXHH
25oGX3Zme+ThvRrj8+gunpHCWWFaWeWa6PTMxOjr1Fwp6cHs06UdvSElQdHD
UlK325LKMpnAEr6NTglnbcpZqfL5F6m5xekM4fT9VXmMFSfW1J+Z2OI4fNKx
PcV8EkN+tWB01iqwZEJTKtpk5kpJr/Ww+5azbO0WKQmKHna26Xlblncdqynh
rLB8fk9F64lWG60ts2D0xSe4cUrdUIUT6VyLPbU62DIrCucW2zOlb9GLU457
5IEdnotSs5bTox2eT0k1GSqz1PRrjPq2wTfuHs/eTNnUM1ISFD3s9vVJ29It
nfxsN6aksFhNY/IpaRXVT9+6Rw6HHSkpOiufkuY9Ev0OXj711HxhT0p6JLsy
r75/pCQokpIG9dvCxRW+p5PfqVFKCkNKeCu+mlvZklTsCtNTo0P3eSMis2tO
TEmVX7SreQIlJb2E/VijspekJCiSkgZ1V0pq9IE8/Wj9LKly4qZnSdHDMjql
vs31Hj8cVk/l8sVWU46npJov3UlJL2E/1pCS4CwPu+N90rbk3fgsiWfrKiWF
xVaBKJODPEs6y9aHessp+VgUzUH5iVLSm9mPNaQkOIuUNCgpiUZ6S0n5JhVT
UqrOEz3+tHNiSpp/T/SVmZh5mymcCVMNOoZLrUb36tOSpfyym1a0r4b6FR0/
O4WbLCXBWaSkQUlJNHL6IIreuiwnhrc3+bepmqN1fhZnuUanu2efdjJ3nmHJ
cErmJ0Un/hVX9Ox99BL5LHA8bhTX2EJxFTuGnpQEZ5GSBiUl0ch7BtFZ9NiX
lERTUlJ9mZqlpCQokpIGJSXRyHsG0Vn0WMrUk7s7g6OmLSlpudOjr1fFUi8y
c8PmrWYty6wOwlQzoq+js4qNiXfigpQERUcuH9VXp7c7d5d9SUk0UnnE7juw
lyOi0dCIrqv1ii5YC7zcaqCl3kZPMlOQX1Jloi+iy4YDfzlrWaa+GfWtilaS
6pwoKQmKdtxINL35f6QWPSYl0cgF4eWy+qUkeIz6lJSamJmVf1Gcmy+z+tS0
WG0qxBUryUwJSUlQtPXu3f3AESf2npREI1LSkTUCjQydklIt3/EsKVNJZgqw
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

                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 12->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3r9cyDH2bhpHC1BNwYDGbTLrjYLrDrIp3degm4ceElu0sKb2AdCOme
vyFVajdp0qVIeUOc2kXAtQkE0qRxmerk3j38tLo1r3oZaUa6Lr48nCONRqOR
RtLn6Jz7+c//9L/9Z3/+d6Zp+td/9+d//tm//O//y7/6q3/5P/zJf/bzzX/1
l//6v/mLv/yz//qf/uV/92d/8Wd/9V/86X/yc+L/97Psn/6n0/TXrwEAAFj5
fD7f/wIAALzcMigBAAAgIgEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEA
ACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAASzempAkYwS3nBwCAG914
F3TvjR9Q6ZbzAwDAjW68C3IDBp0zSAGAd5KSgBSDFAB4JykJSDFIAYB3kpKA
FIMUAHgnKQlIMUgBgHeSkoAUgxQAeCcpCUgxSAGAd+o2Je3+P7YsF5n/G1qV
TNVQv7pwqdR6jzT1yFryS9VsbLTNqR7LlMzUuZxYLBNdUU390bYVNznVhnzH
TomDLVVt8W1m0zK9tM+5tQEAjOLGu6Diqle3lJV1RusP7y3z1W7qk1Tl9bN2
NDWcHi25r20pqTYXV1TclfnoUWzhpvozbaupP/+2cr/kZ9XvteKyB0lJAMA7
PSkl1d+FFqttlJIy07c2dXesqLwz39qG+jv56H6P1lzfwvr6N4WvfPMyTd06
pTIlFbvl9LEsJQEA7/TslBTOqrzxPj0l7bjhr3++UD9lX5NqytTvrJoEdDAl
ZZbdd7TfmJI2rUtKAgA4RecpaammwpqqahbZmpIy9W9ab/0ip6SkTd27XCpT
bWq90QYUF6+sNlqsOLFeTeaq2UGhVJ3hKorr2rdpeZuODQCAx7jxLqi46vpk
USyQukk+KyWlltq63vwi+VCzIyUVG5NpZGaLUi3PlGyRkqL159uWqT8fbaI1
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
FPPZmGTbNZUHc7mBfkhJUOSy1bl9KWn14vpnSeFWNCp8cKk+V3T9s6RPkKQO
Vg4pDhjogZQERVJS56Skpkv1uaIWqwjrPCsl7SgPwL2kJCiSkjp38Bt30ekX
p6Tl17oqy+9e0b4F37CWmpS04xt3mfqhyAUI7iIlQZGLVOcOPkvqISXt2OTT
lz2x8YOmpGKd4a+Tzq0fUlyG4HpSEhS5PHWuPtTMj2zCt9PCvogkJbWo6uK1
1KSkdvVD3taHzsARUhIUuSp1bl+uSX317sjfECkptfjqRzdHnptISa0r4eVc
leACUhIUuR51Tko6svgU8/n1sN+6unFTUqbaEz/Gdz7hFK5N0JSUBEWuRJ3b
HXBW37h7T0qK1rCaskpSBytv4eKUNOJaANhNSoIiKalz0achd7lsk0+vYZKS
2td8/Vp4D0cUnEtKgqIr73450W8LfVa42ykHZCYWfV78jbvPsYS4by1wClcr
OJGUBEWuO4OSko5UMr3yX2+Ya77m+aATCy24ZsEppCQocsUZlJR0pJ6Dq7hg
yDRaxcXfonRuoZHMAeyidlzhu9dPd3f3X0RKgqJXnROeREo6UtXBVUQXn4fS
KWPq9FF51/2A0wtNhYfx2+51T6Trvl7SD1ISFL3hVPBIUtLuqo5fATPha57V
IogddNenps4wtLYcdy98KHAK3RV6dp9ISVDkUjIoKemW2vJ1Lqd3mJI+l3/j
brnea1bEy911hA9NR2U8uHOkJCh68Bng2aSkW2pb1bm6E+s/JX1u+rDdSYYL
RJ+WOvaKdFGe/oHXchEZlJTUYYWpxHTiKk5xyw3kLecZ57dXSaUkx0CGzqmh
l+CdXEEGJSV1WOHU8b/eENZ//di/a3VOcW+QiUgOgBQ9U09fwQu5ggxKSrqx
znxKarqKE90y9m95euUU906CUpFuqfe8vvK7JChy+RiUlHSkzoOreEZKumwt
t6+00RrzDy8u1mIDu3J3B//i7s44zZO2pbXn9ZWUBEUPO+e/h5S0r9pT7nOi
i597B1Vfz3W3hhVO37rj2q3rZ81/+If/roe/K/vzLj+38Y/+6P/o4e8xvf2Y
DbnG87pLSoKiTfc29ENK2lHtjvv5TG2ntOp4/T9L/vj86OGvw5TUdEVS0pWk
pNNFN+Ss82Tl4id25pE2X9zUTkhJUCQlDUpK2lTh7qcemTpPadvx+kdMSZs2
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
LE4gDyYlDUpKeok+e6PPVtUbvf375FPSe56nzNu7mgKvIiWdyDnkqV5yWXwe
Kekl+uyNPltVb/T271P5LGn0zll9tzA1d/TNBPrhfPJULhaDkpJeos/e6LNV
9UZv/z6rZBQNC6P3TLiNNzYGeA9nm0dyHRmUlPQS3fZGtw2rNHr7dyh+x2z0
y0H0ydEtLQHgAUa/LL6WlPQS3fZGtw2rNHr7d6j8Jc64PZPfqHG3C1rwuyQo
cu0YlJT0Et32RrcNqzR6+3d4bUqap4+7aXA6KQmKpKRBSUkv0W1vdNuwSqO3
f6vVv2kQ/UXS6JeD4rOkobcOziUlteAk8zAuHIOSkl6i597ouW1FQzeeqNTv
kjxLgpCU1IKTzMNISYOSkl6i597ouW1FQzeelOi3CqUkCElJjTjPPImUNCgp
6SV67o2e21Y0dOPJyH+f0H6HLympESeZJ3HVGJSU9BKd90bnzcsYt+UAx0lJ
7bi+PIaUNCgp6SWa9sbUk3abmdr2i9cI0A8pqR3Xl8e45f6E46Skl2jaGz8r
//H50cOflMSVbvokoBd3dz9dkJKaMtCewTlzUFLSSzTtjenFKenjSHsfMeFL
P/CRkhozvp7BqXJQUtJLSElNN//6lXIXuzukT95MSmrN+HoAKWlQUtJLSElN
N//6lXI9l7kMnfNaUlJrRtYDOEMOSkp6CSmp6eZfv1KuZ0fn6Z93kpIuYHCN
TkoalJT0EjempPnHC9/Xq4nzrPz0VT1SEhezl2vopReSkqBIShqUlPQSd6Wk
MAGlZuVfpwpISVzALq6nr95GSoIiKWlQUtKgtm7dLSkpnL47JeWrlZJoyi6u
p6/eRkqCIilpUFLSoAZNSUcSk5TEXVK7eP4WaKpM5sp47mGzr7Zl885qj+Hw
NlLSZQyucUlJg5KSBrXcuuV92jW3ZGHlNSlp9cOi4u+PwllSEterGVN3Db3j
Tm9e59sL4zK4xiUlDUpKGssU86n4TLiHlJR6ThSmpPq3UhKtVQ4oKalRhcDM
+BqUlDQoKWlQq61bfaxdLH96Y65JSfmIdFdK+jz9YHu5rQNqdTVcfnwRfqyR
f5FvQOpDkuinKPnmZda+qjPdT1WdAxxhcA1KShqUlDSoIVJSfeTJRKEwTOVX
124z8z1wy3q5wKYBFUabVOTJv8hklq1rWc7auvZogSLD4VX8LulixteIpKRB
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
nbLtUlKlTPApZqJT9tTulHTW2o9XcvsqdnPpH5SU9EJ6pqma7hWXGNTzDtrn
bVE9KelKmewTPk4Ki7UISvVLnVjsAv20ZOaKPygp6YX0TGubrj41J08nWDqx
upeb79/GPT6ft0X1Ttl2KalSPiWFb1fFzjogtwal+rX3M2T6acnsJaeU55GS
XkjPtLajh/OXrR2f/sGJppjPr5f+sQ7O521RvXO3XUqqVExJn0QkOf2APJ6S
wmNmVWH07erFaqMqZ2XqCVuSen29G1fNEVLSC+mZ1g72cHgyD+9n4Bap+7dw
1iiet0X1Ttl2KalS2KXROBCWbHHyr68wbGRqerRkZeSpmZWpp6YB4SZcybV7
UFLSC+mZ1s7q4Smtstj1TtlwW3eLygan3oY13Lw9vzpli4bburxp77YvnZ6S
bu7KXx3cltV2paZMv/b8lN4RrZsULRPtjbDxqc258UVq4vVOP5y4hpT0Qnqm
tdMvZPnL98/XPz4/evhrcWj9rPP3f/8/9PDXaOtu32ub9l14p5S5Cfk55Q/+
4N/38JfZuk1btCr5j/7R/9nD3+4jc/e2L7VISf/gH/zfPfw1jSSVUahpSiqq
aVjnKWl+KyWxg5T0QnqmtWtS0vKKcPs9tpS0e+tu32tH9t18+xFdfIiUtGmL
ViVvz0cHU9LubV+Skio3Knr2Xs5aTonOCku2JiWdRUoalJT0QnqmhXyQaVHz
XP80+J12cfNvz0dSUqb9+bm356N9Kamy5O35qEVK2kpKeqpiRguvRKnCqSvX
8kVmVqqS4uLLprbrqBphkxiClPROOud00RP48X6uqWQa/E67uHW35yMpKdP+
/Nzb85GUVG9fPVIS/bt9V0pJg5KS3knntNAiJVWu9/Z77N132sVeqk9Jq57v
ISXVbN3te+3gvsssOFxKyn8cHRa+PR+dmJIuO2XVdOzt+ehISqr8aOuCy4Q7
868eOsG+GJSU9E46p4VGEalY4fdOe7Xq+nvjufy8VLSqVP2rGo5sXXTxaUve
WRbetGDTlJTfuq1Zpn4vbzoYGm3dHFK+wvAyT58C4YJhPdE6owu22LqtWWYl
WuDGZ0nXqOnYrVkmnLKUL9woJeU3cDk9Vey4Ykser58N76clbCIlvZPOaaTF
VSm8uVqtYloEmeVNb82N8eqOOjUrNTGs4ZStWxV4TEqKbt2Ohz41ezm615qm
pOjWrQJRNCVFI8+0CDipTFRfZ6Ot2xFnoq/zE5+dkqIdezAlrSbOr7/rujgl
rTYw3N7UxOOKXV1fz+lte5tGu5jWpKR30jmNHL8eFesMVzHtSklhgdTilfXv
2+T8pn1OSknfCldvN9V8YkpabV3rlFRfbYutC9NKcUr02VBxbvHRUoutO5KS
9hXoMCVt/V1STcdujUjhIlMsJd3yLGm1gak6W+zEYlfX13N6295mR7fTAynp
nXROO/suQzUVpi5zUzbFfAuvssxqYuWteHTi8m3morzPZ3tKmoVx6fti9XZf
5Sdu3Vkp6Vvnai9vqrbF1u1LSfli+1JSi63bnZKWL76vV//dVPnpW3ejT2cp
qdE21p/nw6XOKll/Afq4ZzhsU5/TDynpnXROO1uvQZW1ZS5wU+ynQ9GAMyWi
U3hfHVaVSVjzlB1bXbN1O54lrZaaaw6fK434jbvorslE2spqW2xdKgFNiUA0
y3+t7q5nSasCO1LSbDVxmZ621rxj6050yrOkVYEdX7ebgt8fzVLp6a5v3KWW
2rGuIy2pryRs3lzVFISyaIFUS3a3ajgv2cznkZLeSec0dfB8GF7R8te4KXuH
PC8YPm44+Pwoevd+ZGNTW3cwJaUmbqr5lJSU2Xeb4kx0dyx39C0pKVpga0o6
91nSssIWW3f8WVL4el+1W7fuRAdTUrTAvsc9NWloa+U7OiS/gfUTjyt2dWUl
qxfLyj+LHBSWz8wK63+2RruY1qSkd9I5rW3q4Zrbhsw5dkqnpPBFeDvdQ0rK
F9iRkqLhaDr8jbsWW3dKSsrv8aYpKV9gX0pKJZ1NKWn1usXW7U5JqYnTa54l
5QtsfZBU/826+soPpqT6Au3un0+pOXVtmn6NPGGxTS8er91epikp6bX0TyPT
r2qK1dSZn5u6bV7NSr3NB6LKG+9GV4Fp+/8vKXxgNMVc8I27mq3bnZLqc3Gj
lFSzdTX5JR95MgVqqporabF1B1PSFGSiKfaw6WEpqWgaPCVVbuOmS8BdpkQy
+sRSUmbZcDNTSz1V5zuaFCnptfRPC6sz4fJtu8viHHm+VrElKlomnJgvFk5v
cVBNDf7/sPv+Gm3d1iwT3TWp3d1JSprbE0aYeXrY+OiC+ber6ct6Wmzd1oi0
spwYfS0l1XzXLny7mpVa5MaUNIppe0rKvAirek8Pfw+8u1vBZlLSa+mf00VP
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
MoOSkgbVYuue3WNHHElJmYi0nHJ7SmoRFqIpabmWKXhytMoyxQKrKWG8yk/x
LAkOkpKgyFVmUFLSuFp88n9uhY+xOyWlMlGqku+JNL+ux/ikU1JNrpGSoAdS
0mWcpsblKjMoKWlo5467N/TYPlN1cgm/SrcpJd37jbvTpcLRskBNSgrLZHLT
qs4wJUVrG6tjoR9S0jWco4bmKjMoKekBztrS9/TYVsWUlHk2JCVF89FcoJiS
ZqekpFRtY3Us9ENKuoAT1OhcZQYlJT3DKQPwVT22ye6UFM5N5aYHp6R8gcqv
z6WeCtWnpHxtY3Us9ENKuoAT1OhcZQYlJT3JwU1+YY9VOpKS8kEpGqYek5KK
tn4vLpWSVo+HdtT2sI6Fy0hJrTk7PYCrzKCkpIc5MhLf2WM18rHlKzMxLJOZ
Ukxkd3fGmcKosgw1qbdTWpiMUgXC2u7uDBiSlNSas9MDuMoMSkp6JEHpXPnk
cspf5SoetoOm4Itzd/09rGPhMlJSU05NzyAlDUpKeqp9Q/LlnZYiJTUiJcHo
pKR2nJceQ0oalJT0bFs7QadFZb7idb27O+NMd/flL+7uDBiSlNSO89JjuMoM
Skp6vE1jU6dxpZ/H24/Pjx7+HPmwj5TUiJPSk0hJg5KSXqKyN3QaV5KSYHRS
UiNOSk8iJQ1KSnqPmg7RaVxJSoLRSUlQJCUNSkp6leI41WlcSUqC0UlJUCQl
DUpKeqFMz+g0riQlweikJCiSkjZZ/qtKx/ttRw3t9peUNITUAaDTuNIyJa3+
xbkwxczT5/9GS4YLpuqRkoDeOBc9kpRUb9lRu/utXbY6WLOUNBBBiXuFEabm
9fy2JiLV1CklAZ1wLnokKalS2EtSUiMOyBrhyNVvXKYmJUWf+1SmpMrkJSUB
PXAieiopqVL+JyGZblx9SW/1evVita6wTHRu2Ibo2/xWSEkjWj3fvLElvMq+
lJRKOlISXM/vks7iLPRgUlKlmic4medN4YtPNg1lFqwskFpFipQ0qJoIDOcK
o8rSxSnJVQx2kJLO4vzzYK4vlXanpNXEVITZ9yL1jCmzihQpaWgGMlfKPEua
3178LOnIEGgxdqaenL51PICUdArj69mcQiuFvTQFH+DPU1a9unwblt/3oqZk
amKUlDQ6Y5nLTLtS0pR+zDSfNg9+427fKGgxcH7W+Xu/9x97+HNaIEpKOoXx
9WzurOoV00cqSRXLS0lLDsh9wtgOjdSkpE1J5/izpFXzNg2E6IdaBy+OUhKd
k5KOM7geT0raJHxOlJqYmrW6BC+Fc1eVRAvnFym2cCYljW6qTsRw0Cq2rBQf
EmXKF5cKS2YamR8LmVPrXOBIF92ej6QkMqSkg4ysNyheR+jT6aFGShrdFAvj
0EI02tzyVzzOa8bCFHzwFZ2+tYtuz0dSUlQ0Hd/lxn6Qkg66d/dxjdvHKftI
SYSmxM0enGsaJyXNDa6fO0lJj/azQ/7iL/6nHv6kpHEZVi8hJQ1KSiIUdp0B
TguXfMpea1ObU7Oib+srj9aZiS1fq9f1s6SkIyYp6W9ISVC06SpDP6QkQpU3
gXDQzyPq93//P/Twt/XYrrzk7UhhYQ355FJ8nZ8lJe0mJX1JSZvs+3CG0dnd
g5KSCGW6zkjnROOmpLn9rYfDjpQULpKZJSXtJiV9SUmz4glhVcD19D3s60FJ
SYSKXadvOcXoKWneinYjYmtKipbPz8rMlZIypKQvKWmWf05UP5HnsaMHJSUR
qv8q0QWN4cGekZLmbWkxIjalpFTh1Kzp1x8rSUmbpFLStzNXb79TpkCmhnwZ
KalD4f6dfn1ylFrqqgZyG7dMg5KSCNV3nU7miCelpHmLzh0Um1LS1mdJ05Zv
4hnsK5n8spq1Ck2pYjWLSEk9i6ak+ZwgJb2ZlNS5zOC93mWbfM2KnmdT1125
T3mYaZGS5vNDmF/C6TXFoiefVA3nHsMn1ja1/F1SZhEpqWjKZpxpezI6kpIY
QupAuvjQ5XqZA4Ae/Nw7//yf/889/F12nDggd9vRdXqbHaYgqkyJ+BNOjD4P
ir6NvggLn75pp9Q5tfw37qZfU1JxXcc350mm0pOgucAUizypiatlPUsaSD4Z
Rc8Jbp5fwo7unJTEJvuCkj5nk2iumYInPsVimehUH6kabeDBmjPJZb4NW72u
n/V7i18kLSdKSTWKKSmMS6vnPvlkFJaUkjqXykerAqm3PJh93TkpiU12955u
p97jU9K8mUcGVPG7cNf8Gdoru1NS9FnSqrb8265SErOakV5MUjyS3d05KYlN
jvSenqdSNP6EOShfrP+UNG/sjrVISd2qSUlhAoouJSXBs0lJnZOS2ORg7zkh
UGN3SpoNlJLmTU6tKzp96knjvhnMdPjfuFtNzBTLrEtKgv45hXZuSqSk+fIX
nbicuyoZLpiq5NyUVL+4A/KIU3rPLiBv2p6SUouMkpLmDQ+nRC+jP6f8+Pzo
4c9wXkkll3lXRr9lt5qVKrCSiUi3pyS/S4IiKalzqZQUpptw4jIZZcqkElO4
1MENOb0kobN6z5mBjMrIsy8lRUNWJynpk/gdt5Q0kGJ4uexPSoLOuRfq3JGU
lMk7xUWapqT5qEvdXRxZ0cud23v2BVGrjPMVZpx5elgmnJUpk1rXLSlp7oHQ
qsDt+UhKipKSvqSkpcxwjr4Nx/t1beVC0dtU+jHtTUlT9qnQjrS17zhJ3Uss
DzxnmxOd3ntOEYSmxHfkrv+79+DM31ndno+kpKjoVekuN/aDlLQypW9FMrNS
U3iG28cpedP2lDTbnZJWi7f4xt2m8w/1GvWencLSJCWlb7bnubfnIympkWd0
qZS0ksk+q1vl6E3LM44KVqSkzu1ISac8S2r6jbuPlNRSu6Bk1/BV9Sn5VTrs
hE82Jc3FVq/rZ0lJ93pGl0pJK+FunRYpKXy7KvaMo4KVe68yFE1P/F3Sxzfu
WmragfYOfEo58VN6lrScm3qdnyUl3egZXSolrRRT0icRiFI3MzyAlNS5+pQ0
/e7f/a6ceHFKCrfr419vaKN1Bzpp0Lkbj89lVtqaksJFMrOkpBs9o0ulpJUj
KWn5CQlPYrd2LhNhVlITw/LRevLFGqWkrbOocU0H2k10q4eDc2tKipZPzVqm
sGKA6qE3HuYZXSolrdSkpE/db5R4DCmpc6mUdP2flDSKyzrQnqJP0VuaEy92
NZ8bb0pJqcL5WZXPmIzTg8KPH1Pubuk2UtJKJu/sm8UDjDi0X+WRKSl/TXFA
HnRlBzqB0I/UjevyKD09KGVW2u5ZkpR0r2d0qZS0lMm80SnRWYPmZTLs0M7l
r8UXu2yTr1nRU13fgXYZXZmqP/g9sor8qXJq/LukSUq6zzO6VEqCoivvfjnR
bwt9VribA/KgWzrQmYR+3JiSlgW2pqQw9WRmVUYkKamFZ3SplARF7m0GJSWR
cmMH2nf0IExJ0+IrMWetIv+0PRNh5vKr1/WzXpuSOtmWTppxkJQERVJS51Kf
WN7isk2+ZkUPdmMfXnmoQI3p1H+9ofL0OB34t7srs099yeNb3YlOtqWTZhwk
JUGRW5rOtb7UbrooX7bJ16zowW7vw9sbALPjR2M0DeU/PpKSWgj7/3PHbcwz
ulRKgiIpqXNSEjv00IfOLXRi93FYzEGZmnNP5S+3b/P7kdqo5dbVb+Z1/V6h
VZdVkJKg6PZxSt4kJbFdP33YT0t4p623o2fdwf5c/E/+5H/p4e9JY3C1LdOv
j5bqK7n9enrxVRXYR0rq3AvP5w7I47rqQycZ+nf6Z/tSUgtSEnAlNzCde+H5
3AF5XId92GGTeLmmX3ySkloIU9I8RUoCTiclda7mfD5f6H8s/leDK6nyy4md
nM8dkMf12YfHv8I03fRjbZ6kXTJareX2fPS8lLQSPSEUd66U9OV3SVDkfqNz
NeFlFX+iqSc6ffr1/8TRyfncAXlct3148ISz76NjaPrYKLXG2/PRS1JSODG/
u7d+9piZW3Pp7OGqGiUlQZGU1Ln8GTicm0pJPxaPmVIJq5PzuQPyuM77cHfz
Vp8Yn9QcHuviZLRadSa2fK1e188K30pJy4mhVYHKCFP/+aSUBI8kJXVua0qq
D1CTb9w9WufdWHnmWd3kSEkUpe6Nr29GPrkUX1cWKwalp46U1F6OpqTVaURK
+khJUOH2Swl5LVJSca6U9ABDdOPWRqYSE/SQjJZ2pKRwkdSsrSmJ2WdXSpoW
nzFO2W9lSEnwJPN5gz7lT7+ZueGsybOkNxmlGzedguabnFG2jqZWd79dmTam
pGj51Kxp8ZW8N3/jLioVjpYFNqWkVDJakpLgkfq8vjDbmpJWUSiclfoETEp6
mLG6sbK1Y20UjXSbjJY2paRU4dSsMGRJSbNMPpoLbEpJy6CUumLuC0pSEnSu
/2vNy9WEl5rUE01PUtKDDdeNNeei4TaKs+Tvezu0KSXte5YkJUUVDxIp6UtK
gqKBLjrvVHPuDR/6T4HK8j2czx2Qpxi0GzPNHusmmVOMu9O3pqR8GpqO/S7p
7s7oy76UVPk5pJQETzLoBeg99p17W/xJSWMZtxudlF5uuMdGUTtSUn0akpKO
2PHZ4/JFVOdX1SgpCYpGvxI9npTEPqN34+jtZ5NnJKOlTHiZt3T1esesYkSS
kkIvvKpGSUlQ9KSr0iOlPrm6xWWbfM2Knu0B3fiATSDv4nPLlaaK/LL7b1Pl
j+zeIyYp6W9ISVD01CvU4/220GeF+zgaT/SAznSCep7rP3i5hZTULSnpS0qC
osdfqp5KSqLoMZ35mA15szcko6Uzn+Ifdndn9OXuvfGLG/tBSoKi28cpefee
wFfyjTxlY49XwuxJ/XnWMcaVas4ewC2kJChy/erc1PF3Ayoz1KaNPV4Js+f1
5/O26JEkI+iflARFrmWd6zMlbXrSVLmZjsOVPU/7mrm7M/5Wb+3h6+DRcvxg
q1zQ8QNfUhIUuWR0buosJZ1+I+0ITPnZLX/8x/+2h797d1D/Ua6+hRe4a9sP
VhJ93cj1vcTzOIrgDW65sFJvGiclDXFTN5BJShrEz/75x//4f+/h75o9dfr4
vfgAczxznKMI3sCdaud6S0lzq+Sd1qSkUbwkJTUd6atq5xWlXszlM+eicNno
umAHRxG8gfvbexX7P5+S5ruC7+vllOWs1SKpGupT0rLxUtI+Nbv+9nwkJdV4
cEq6coCnskw09aSKhbOi9bTZAl7kAUeR3yVBkfvbexWDRia/LGctk06Yg6LF
wllbU9JqK1r20wPV7PpieFlaTdzx9t6UVHkUFfvt+oZNj0tJV3ZvuOrii086
E6VmLTfHyYrjHnAUSUlQ5P72XlPMqkAxIq2mZGZVvt6aktihZtfXPOUJX4cv
ihP7SUn5+/PVrGtOX8WGPSMlFTv/GqenpHw9sM8DjiIpCYpuvya+XPRWeblT
6lNSTYCSkvpRs+sPpqRoyXyxflJSeGqKnqwuOIPVNKw+xYRTvsK30fWenpKi
W3SxKR12oi+KbysrvEx8nL/Gxb19jQdsl5QERQ8+iV3ggovL1FNK4jKfU1NS
WKym8h5S0twbn/RtSevm1TRsd0paTYy+Dl8cTEnhJtwr1Z5Mn3+2fKcuX087
XXXyjR7ZDw/YHCkJip537hpL8fI9tUxJq+xT8yzJAXOWml1fk19mqe/RhXNr
ak6t5S6fbEq6vWH1ESksPJVCUGX9xZS0bDOt6efQk/rkAdsiJUGRi+a9wjuu
sMDWKJSZlYpXqbWkvnHnmDmuZtdvepZUOXEa6lnSqkBqwdsbdjwlZSo5kpLy
xxgt6O2Mx3TOA7ZCSoKix5yyBlXs/0x+SWWfKXhaVP+kqTIl1bScvJpd3y4l
bQpKt6SkVIGaidc3bNPX7Vblv9XWLFifkiSjG+n2vGf0zwO2QkqCIlfSzuUj
zHwvlPn1UKZ8WKA+Jc3Nu75PXqJ1SqoPSlempE1lrjl91eTZyggza/csySn9
Xjq/hl7qgZQERS6pnatPMa3/UseJQ6iRYoSZb4lTE5e35dFFojXclZIqrT4E
uLs5f60mxUSTUf4Z0+6UdHd/vJfOr6evbiclQZGrauf6T0lzOy/rk5eofNBz
wZ+dm3dWSkoFok0p6WMw3kfP19NXt5OSoEhK6tzUk5qmXtMtbzBJSYOYKv6B
7q/wbWZWakoxJX3cgt4k0+2r0+PypLr1TBtWu2nBfcfGsv5Tjq7RD9HR2/+R
kqCCO9tB/bbQVYUOp7NISaOojDAX/K3uw2/skxeq+Rwp9fbIjrtsp59b+ejH
5+jt/0hJUEFKGlS3KenjoDpJ+Anzje7ujK5NXaakzyNu5AZS7O3VUEq9PrLe
pnv83MpHPzhHb/9HSoIKboE6d/HNcN7WljfqE+jK3ePyF9G23dItb1Ps5+nX
X41NsXSTqmRZYEpn4ejiy2NjuXj04FnVFlYeVhUuUnnUDX1kDt34LykJilxD
O/dz7/z9v///9PC34zhxdEEPDMMLVKakTxCXPqVwEc0j0WWjMTm/9jB/ZQps
XSRv6MNy6MZ/SUlQ5D62c0OnpHkTzu0TYCvDsLWDKSlfSeZKvZoevo0WqA9B
lSVrtiLf8rEM3fgvKQmKpKTOPSAlfRxmpEU/CV++zX9UTj2911R9Svpkf6O0
LBA+tSmuN1osFXYySa0+HGXqzBv6gBy68UAlNx6de0ZKmrfllD7hYYofqufv
J6mn99rZlJI+G4/qVXKprPaTTjTRXBYtsONZUqWhj8ahGw9UkpLuVez/J6Wk
mu3lhXakJI+WdtNpjRTP5JlnNzUXgmXhsNpUJavpy7f519HKo6KLVHTY2Ifi
0I0HKrnTuNfqEhMtkE8uX9/XyynLWdHyy4mXpaTlVsPXtD0lpd5SQ6e1MFav
ZsbUZXWO1WMrQzf+y++SoEhKutcU+1RwVSATW1bxJ5p6otOXE69PSR8HHgur
z6XnifkCn0fcqNxF151urC6Vkg4auvFfUhIUuVm9V7TzlzslFWHC6amUVJxy
S0rKbD5vkxoFxQKOnyP03rl668/iAIl+8nDKSivr7K3H3kZKgqKX3GlMv0pN
D11QMtPaz5aUVJmJukpJmU7gPVKjIF+gOIsivXeiTjqzcuD0oPPmPZ6UBEWP
v0ftfANXbQtb+/iUFO0HXkVKupEOPEsnPSklUUlKgqLOQ8QRQ2za/MAo81zp
9JSUf3tLSvps31/FZ3ZXatctjxftw+XEYgEO0o2naN2NqxERTv8E42IuH61h
VVuqnnZjbegDb+jGf0lJUPTUO41RNqrY/9PZv0vKz70xJc3bG06JrvrnxD/8
w3/Xw98oBxukOIaPu6AP8wkobMYy6aSKVdZz+ra0q/YaQzf+S0qCokempCdt
USbCpLLPlH5UFE1SXaWkT/aT0lWx2/ORlMRjPPJacKVrUlL4Ovr8KCwTfRGe
afNx6VxDH29DN/5LSoIiV8bO5SPMfF0LpxRnpWq4PSXNG/759Wt1YYHb85GU
xMM4mHe7JSVVPgMKw1H94lJS1NCN/5KSoEhK6lxNfrnm7/rjJEx8q7m35yMp
iedxPO9zTUpKPQyqTEk7JjbartEPs9Hb/5GSoIKU1DkpaV9KmhdZvf6+rSkm
JfFaDul9Wvfb6knQPHF5hly9CBeJBqKwntZbNPoxNnr7P1ISVHhYSnrStnyF
SeFGPWz4skAxvBRf52dJSbyWo3qH1p12/U5pt8bRD7DR2/+RkqDC9Xe/TT1p
W/J+W+izwiNqwtq+lDT97rGRlAR5DuytHpaSmq5uxKOrh88PTyQlQdHQYzz0
pG3Je3ZKWpKS4C6O7a2aPny57HrdekWDHlfRZg+6LR8pCSpISYN6T0pamY/Y
mkSTyUThxH0RSUri2RzeW+mxvKH7Z9X4obdFSoIiKWlQr01Js90paSYlQQ1H
+CYPu6qea/SekZLgVR52Pn/StuRJSTtS0mqRzNfwpCRYcpBvpcdCz+iT5VYM
vUVSEhRJSQyqMtRkfnZ0/BdJb0tJ4W/EXuXu7r+ZHtjK8fPJ/p/BBzVvyGO2
CEh50rnr0/dZa3mlmP+bv4xOwcP9zP6Kzr2mQ245iqaNKWnun9RbKSnlYTc5
u+mHrdseT5s3adQng/bGZe7u9fNNUhK8xsPOY91uy/TrM/rUaTZVLJyVrz9a
Q1PX9/x0INec+9ftUXeKZ2/dPm/uk03b/rPwj8+PHv7evMs43cNunICUhw32
PrclE2oq807mdX51UpKUtNvDTg7nenPnpLY9eja7PR9JSZzuGcPf75Kg6BmD
fdbntmRadVdKWn0dIvr2E0tzy1nFB1ipwqeQklp76nad5eX9kz93zVNuz0dS
Ei084IiSkqDoYSmpT72lpFX2yYedaGKKpqfwbXQVZ5l6cvrW3e6RG3W6p/ZS
5XatioVLTVISl7jx5H+vI50mJUHR8YFGUaaHw1lTOuPUnBvDRTaVmRIxJ/oi
nBhtoQNsOHZZvUf2Vf1G5Uf6FEtJ8yni+zqcPs+aXxffRqdISY93SlgY2pEe
kJKg6OVnmGtkotCmlBQuW8wj16ek4uro37m7bPrVauKOtzUNvuzM9sjDezXG
59FdPCOFs8K0sso10emZidHXqblS0oPZp0s7ekNKgqKHpaRutyWVZTKBJXwb
nRLO2pSzUuXzL1Jzi9MZwun7q/IYK06sqT8zscVx+KRje4r5JIb8asHorFVg
yYSmVLTJzJWSXuth9y1n2dotUhIUPexs0/O2LO86VlPCWWH5/J6K1hOtNlpb
ZsHoi09w45S6oQon0rkWe2p1sGVWFM4ttmdK36IXpxz3yAM7PBelZi2nRzs8
n5JqMlRmqenXGPVtg2/cPZ69mbKpZ6QkKHrY7euTtqVbOvnZbkxJYbGaxuRT
0iqqn751jxwOO1JSdFY+Jc17JPodvHzqqfnCnpT0SHZlXn3/SElQJCUN6reF
iyt8Tye/U6OUFIaU8FZ8NbeyJanYFaanRofu80ZEZtecmJIqv2hX8wRKSnoJ
+7FGZS9JSVAkJQ3qrpTU6AN5+tH6WVLlxE3PkqKHZXRKfZvrPX44rJ7K5Yut
phxPSTVfupOSXsJ+rCElwVkedsf7pG3Ju/FZEs/WVUoKi60CUSYHeZZ0lq0P
9ZZT8rEomoPyE6WkN7Mfa0hJcBYpaVBSEo30lpLyTSqmpFSdJ3r8aefElDT/
nugrMzHzNlM4E6YadAyXWo3u1aclS/llN61oXw31Kzp+dgo3WUqCs0hJg5KS
aOT0QRS9dVlODG9v8m9TNUfr/CzOco1Od88+7WTuPMOS4ZTMT4pO/Cuu6Nn7
6CXyWeB43CiusYXiKnYMPSkJziIlDUpKopH3DKKz6LEvKYmmpKT6MjVLSUlQ
JCUNSkqikfcMorPosZSpJ3d3BkdNW1LScqdHX6+KpV5k5obNW81allkdhKlm
RF9HZxUbE+/EBSkJio5cPqqvTm937i77kpJopPKI3XdgL0dEo6ERXVfrFV2w
Fni51UBLvY2eZKYgv6TKRF9Elw0H/nLWskx9M+pbFa0k1TlRUhIU7biRaHrz
/0gtekxKopELwstl9UtJ8Bj1KSk1MTMr/6I4N19m9alpsdpUiCtWkpkSkpKg
aOvdu/uBI07sPSmJRqSkI2sEGhk6JaVavuNZUqaSzBRgh/qU5PnRKc7qRimJ
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 13->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/r9cyDH2aRpEiZzthgzDbbubExpM2CixgXi0PcGi/ZmMCyC+tA2O6p
Ugf8BtKmcmHSBMLdh6RJl8aEQELegqvje/fw0+rW/NWfkWak6+LLwznSaDQa
aSR9js65n9/7oz/7J//1fzBN07/8j3/+55/88//uP/vzP//nf/Ff/Cc/3/yX
f/ov/5t/8ad//F/953/63/7xv/jjP/9P/+g//Dnx3/0s+0f/0TT95WsAAABW
Pp/P978AAAAvtwxKAAAAiEgAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtS
EgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABL
UhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAA
S1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwNKNKWkCRnDL+QEA4EY3
3gXde+MHVLrl/AAAcKMb74LcgEHnDFIA4J2kJCDFIAUA3klKAlIMUgDgnaQk
IMUgBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J26TUm7/48ty0Xm/4ZW
JVM11K8uXCq13iNNPbKW/FI1Gxttc6rHMiUzdS4nFstEV1RTf7RtxU1OtSHf
sVPiYEtVW3yb2bRML+1zbm0AAKO48S6ouOrVLWVlndH6w3vLfLWb+iRVef2s
HU0Np0dL7mtbSqrNxRUVd2U+ehRbuKn+TNtq6s+/rdwv+Vn1e6247EFSEgDw
Tk9KSfV3ocVqG6WkzPStTd0dKyrvzLe2of5OPrrfozXXt7C+/k3hK9+8TFO3
TqlMScVuOX0sS0kAwDs9OyWFsypvvE9PSTtu+OufL9RP2dekmjL1O6smAR1M
SZll9x3tN6akTeuSkgAATtF5SlqqqbCmqppFtqakTP2b1lu/yCkpaVP3LpfK
VJtab7QBxcUrq40WK06sV5O5anZQKFVnuIriuvZtWt6mYwMA4DFuvAsqrro+
WRQLpG6Sz0pJqaW2rje/SD7U7EhJxcZkGpnZolTLMyVbpKRo/fm2ZerPR5to
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
evLC3lht8gt7AKSksziBPJiUNCgp6SX67I0+W1Vv9Pbvk09J73meMm/vagq8
ipR0IueQp3rJZfF5pKSX6LM3+mxVvdHbv0/ls6TRO2f13cLU3NE3E+iH88lT
uVgMSkp6iT57o89W1Ru9/fusklE0LIzeM+E23tgY4D2cbR7JdWRQUtJLdNsb
3Tas0ujt36H4HbPRLwfRJ0e3tASABxj9svhaUtJLdNsb3Tas0ujt36Hylzjj
9kx+o8bdLmjB75KgyLVjUFLSS3TbG902rNLo7d/htSlpnj7upsHppCQokpIG
JSW9RLe90W3DKo3e/q1W/6ZB9BdJo18Ois+Sht46OJeU1IKTzMO4cAxKSnqJ
nnuj57YVDd14olK/S/IsCUJSUgtOMg8jJQ1KSnqJnnuj57YVDd14UqLfKpSS
ICQlNeI88yRS0qCkpJfouTd6blvR0I0nI/99QvsdvqSkRpxknsRVY1BS0kt0
3hudNy9j3JYDHCclteP68hhS0qCkpJdo2htTT9ptZmrbL14jQD+kpHZcXx7j
lvsTjpOSXqJpb/ys/MfnRw9/UhJXuumTgF7c3f10QUpqykB7BufMQUlJL9G0
N6YXp6SPI+19xIQv/cBHSmrM+HoGp8pBSUkvISU13fzrV8pd7O6QPnkzKak1
4+sBpKRBSUkvISU13fzrV8r1XOYydM5rSUmtGVkP4Aw5KCnpJaSkppt//Uq5
nh2dp3/eSUq6gME1OilpUFLSS9yYkuYfL3xfrybOs/LTV/VISVzMXq6hl15I
SoIiKWlQUtJL3JWSwgSUmpV/nSogJXEBu7ievnobKQmKpKRBSUmD2rp1t6Sk
cPrulJSvVkqiKbu4nr56GykJiqSkQUlJgxo0JR1JTFISd0nt4vlboKkymSvj
uYfNvtqWzTurPYbD20hJlzG4xiUlDUpKGtRy65b3adfckoWV16Sk1Q+Lir8/
CmdJSVyvZkzdNfSOO715nW8vjMvgGpeUNCgpaSxTzKfiM+EeUlLqOVGYkurf
Skm0VjmgpKRGFQIz42tQUtKgpKRBrbZu9bF2sfzpjbkmJeUj0l0p6fP0g+3l
tg6o1dVw+fFF+LFG/kW+AakPSaKfouSbl1n7qs50P1V1DnCEwTUoKWlQUtKg
hkhJ9ZEnE4XCMJVfXbvNzPfALevlApsGVBhtUpEn/yKTWbauZTlr69qjBYoM
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
fcy1iTd73tH7vC2qd8q2S0mVMsGnmIlO2VO7U9JZaz9eye2r2M2lf1BS0gvp
maZquldcYlDPO2ift0X1pKQrZbJP+DgpLNYiKNUvdWKxC/TTkpkr/qCkpBfS
M61tuvrUnDydYOnE6l5uvn8b9/h83hbVO2XbpaRK+ZQUvl0VO+uA3BqU6tfe
z5DppyWzl5xSnkdKeiE909qOHs5ftnZ8+gcnmmI+v176xzo4n7dF9c7ddimp
UjElfRKR5PQD8nhKCo+ZVYXRt6sXq42qnJWpJ2xJ6vX1blw1R0hJL6RnWjvY
w+HJPLyfgVuk7t/CWaN43hbVO2XbpaRKYZdG40BYssXJv77CsJGp6dGSlZGn
ZlamnpoGhJtwJdfuQUlJL6RnWjurh6e0ymLXO2XDbd0tKhucehvWcPP2/OqU
LRpu6/Kmvdu+dHpKurkrf3VwW1bblZoy/drzU3pHtG5StEy0N8LGpzbnxhep
idc7/XDiGlLSC+mZ1k6/kOUv3z9f//j86OGvxaH1s87f+71/28Nfo627fa9t
2nfhnVLmJuTnlL/7d//PHv4yW7dpi1Yl//AP/3UPf7uPzN3bvtQiJf29v/d/
9PDXNJJURqGmKamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d
2Xfz7Ud08SFS0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0Filp
UFLSC+mZFvJBpkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp
6amKGS28EqUKp65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp
8Dvt4tbdno+kpEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvv
sXffaRd7qT4lrXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G3
56MjKanyo60LLhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGq
UvWvajiyddHFpy15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG
9UTrjC7YYuu2ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42
vJ+WsImU9E46p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkp
unU7HvrU7OXoXmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop2
7MGUtJo4v/6u6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwz
XMW0KyWFBVKLV9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnR
Z0PFucVHSy227khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11d
X8/pbXubHd1OD6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+
n+0paRbGpe+L1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+
Xv13U+Wnb92NPp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXW
lrnATbGfDkUDzpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYT
aSurbbF1qQQ0JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1u
Cn5/NEulp7u+cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T
1MHzYXhFy1/jpuwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR
3bHc0bekpGiBrSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv
6JD8BtZPPK7Y1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn
2CmdksIX4e10DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV
6xZbtzslpSZOr3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14
vHZ7maakpNfSP41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRz
wTfuarZud0qqz8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp
8JRUuY2bLgF3mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5
WsWWqGiZcGK+WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML
5t+upi/rabF1WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w
7m4Fm0lJr6V/Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2
f+9MSRf8vfwqubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sff
ad+ej6Sk3Vt3ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653
+tbVa5GS+nFKF73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOd
eeGdW/0AUtJr6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZ
pKRxVX630FXsODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt
8AZS0nCCf6OiNiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6
qB19C7yBlDSWMCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJ
b6aL2tG3wBtISQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NF
TeleALoyekpKbVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek
1VLLFzU15+vJh7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzN
WtWTLxy9BIf1pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd
0tAedp3qdnOkpE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep2
06Skeqc/1MsEqB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP
6Z4HbLcN603YS8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClp
LPWHcevDfnflI45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9l
Is9qVmp6dEpqIozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd
8gnyUfFFtM6tpKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8
kYo/qRepiZtISWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yU
PvXRfX6pfCVhDZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX
4Thoa+ilmZQ0iiMpKXNzmLpTzdzc5hcsrjd/i9tnUJKS6hVTSbQnpaStHJA1
9FJTupexOGLr6asvKWkI+w7XypRUWb7+1rRmLfXr7YGUtMnqOVFm4mrWssym
KeEqUtPzLSmSksail5rSvYzFEVtPX31JSUM4mJI+6ft8KamGlDSo00ONlDQW
vdSU7mUs0ZuT6PU9Oj1T7Pjncrtv8xrdOBndX1JS/3YfqzVjJzrEzkpJB+vp
h5Q0KCnp5fRSU7qXgaQO10xKqqkhfzOTWe9ZGtVvdH9JSZ07EpFqPs2YM0v9
xyD5D0/CCpdvwzLRFfWWSnprD5WkJHRUO/qWgWRS0ieWa1bloxOjC0ZftCMl
NSUlvUHmYw0DoYaUNCgpCR3VlO5lFNenpPzoSH0yPAXCtURbG74I17VpwBrd
HynpHaSkg6SkQUlJ6KimdC+jyKekTxBtUjdL4fQwgBTvGVJPnaLTl7Myj6vq
F6lkdH+kpNeIfoyw47OFd9JLg5KS0FFN6V5GcTwlpe6jUnVmRkeqnvoQVFky
s0VFRvdHSurYKcfncjRlIlJqmLdLB2ONPilpUFISOqop3csojqSkTDLKpKTM
Sue5mSdBlc2rD1aZlqSat3WR55GS+nRWRFq+To3r6PDZ/eFDZXvGIiUNSkpC
RzWlexlFMSVVvs7P2logFYJSJXekpN2D1OimW8cPzk3Bp2bKceOOOClpUFIS
Oqop3csoar4zs3r4MqeMVZnUrFSdm8rkXy8n5kUXOd5jcLtTjsxMJcX682M8
NX7DyvMngWLlm7a3qR2nF65UedW4xmWbfNmK+rGv/af3CTPdyyiGOFanX++g
7q1ziB7jhU45MleVLG8zauqfEqlnWdvq9ar+sIawqnzl/YzQ3XdoXOPn3vnx
+dHD32XHyZUr+kf/6H/u4U9K6pDuZRRDHKtSUm/8Lqk3LcbFasopKSkzcZV3
dqSk+nZeQ0rqnJTUdEW356MjKenT05nkkXQvQ+jhQK25lzjy6PzcOnvosdtJ
Sb25JSVVFt6Uko48S0q16i5SUuekpKYruj0fSUk9070M4cYDtcUTogsM1NR2
pKSunP7pQeptccxKSUtSUuekpKYruj0fSUk9070MQUraaqCmtiMl9aPFATkt
pGZlliq+DV+HLzLTayo/vU926KclRElJTVeUiS2z5dvV3NTrZWEpaThTzN2N
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
7/9fPfw5LRAlJZ3C+Ho2d1b1iukjlaSK5aWkJQfkPmFsh0ZqUtKmpHP8WdKq
eZsGQvRDrYMXRymJzklJxxlcjyclbRI+J0pNTM1aXYKXwrmrSqKF84sUWziT
kkY3VSdiOGgVW1aKD4ky5YtLhSUzjcyPhcypdS5wpItuz0dSEhlS0kFG1hsU
ryP06fRQIyWNboqFcWghGm1u+Sse5zVjYQo++IpO39pFt+cjKSkqmo7vcmM/
SEkH3bv7uMbt45R9pCRCU+JmD841jZOS5gbXz52kpEf72SF/+If/uoc/KWlc
htVLSEmDkpIIhV1ngNPCJZ+y19rU5tSs6Nv6yqN1ZmLL1+p1/Swp6YhJSvor
UhIUbbrK0A8piVDlTSAc9POI+ht/4//v4W/rsV15yduRwsIa8sml+Do/S0ra
TUr6kpI22ffhDKOzuwclJRHKdJ2RzonGTUlz+1sPhx0pKVwkM0tK2k1K+pKS
ZsUTwqqA6+l72NeDkpIIFbtO33KK0VPSvBXtRsTWlBQtn5+VmSslZUhJX1LS
LP+cqH4iz2NHD0pKIlT/VaILGsODPSMlzdvSYkRsSkmpwqlZ068/VpKSNkml
pG9nrt5+p0yBTA35MlJSh8L9O/365Ci11FUN5DZumQYlJRGq7zqdzBFPSknz
Fp07KDalpK3PkqYt38Qz2Fcy+WU1axWaUsVqFpGSehZNSfM5QUp6Mympc5nB
e73LNvmaFT3Ppq67cp/yMNMiJc3nhzC/hNNrikVPPqkazj2GT6xtavm7pMwi
UlLRlM040/ZkdCQlMYTUgXTxocv1MgcAPfi5d/7BP/jfevi77DhxQO62o+v0
NjtMQVSZEvEnnBh9HhR9G30RFj59006pc2r5b9xNv6ak4rqOb86TTKUnQXOB
KRZ5UhNXy3qWNJB8MoqeE9w8v4Qd3TkpiU32BSV9zibRXDMFT3yKxTLRqT5S
NdrAgzVnkst8G7Z6XT/r9xe/SFpOlJJqFFNSGJdWz33yySgsKSV1LpWPVgVS
b3kw+7pzUhKb7O493U69x6ekeTOPDKjid+Gu+TO0V3anpOizpFVt+bddpSRm
NSO9mKR4JLu7c1ISmxzpPT1PpWj8CXNQvlj/KWne2B1rkZK6VZOSwgQUXUpK
gmeTkjonJbHJwd5zQqDG7pQ0GyglzZucWld0+tSTxn0zmOnwv3G3mpgpllmX
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
N65GRDj9E4yLuXy0hlVtqXrajbWhD7yhG/8lJUHRU+80RtmoYv9PZ/8uKT/3
xpQ0b284JbrqnxP/5E/+VQ9/oxxskOIYPu6CPswnoLAZy6STKlZZz+nb0q7a
awzd+C8pCYoemZKetEWZCJPKPlP6UVE0SXWVkj7ZT0pXxW7PR1ISj/HIa8GV
rklJ4evo86OwTPRFeKbNx6VzDX28Dd34LykJilwZO5ePMPN1LZxSnJWq4faU
NG/459ev1YUFbs9HUhIP42De7ZaUVPkMKAxH9YtLSVFDN/5LSoIiKalzNfnl
mr/rj5Mw8a3m3p6PpCSex/G8zzUpKfUwqDIl7ZjYaLtGP8xGb/9HSoIKUlLn
pKR9KWleZPX6+7ammJTEazmk92ndb6snQfPE5Rly9SJcJBqIwnpab9Hox9jo
7f9ISVDhYSnpSdvyFSaFG/Ww4csCxfBSfJ2fJSXxWo7qHVp32vU7pd0aRz/A
Rm//R0qCCtff/Tb1pG3J+22hzwqPqAlr+1LS9LvHRlIS5Dmwt3pYSmq6uhGP
rh4+PzyRlARFQ4/x0JO2Je/ZKWlJSoK7OLa3avrw5bLrdesVDXpcRZs96LZ8
pCSoICUN6j0paWU+YmsSTSYThRP3RSQpiWdzeG+lx/KG7p9V44feFikJiqSk
Qb02Jc12p6SZlAQ1HOGbPOyqeq7Re0ZKgld52Pn8SduSJyXtSEmrRTJfw5OS
YMlBvpUeCz2jT5ZbMfQWSUlQJCUxqMpQk/nZ0fFfJL0tJYW/EXuVu7v/Znpg
K8fPJ/t/Bh/UvCGP2SIg5Unnrk/fZ63llWL+b/4yOgUP9zP7Kzr3mg655Sia
NqakuX9Sb6WklIfd5OymH7Zuezxt3qRRnwzaG5e5u9fPN0lJ8BoPO491uy3T
r8/oU6fZVLFwVr7+aA1NXd/z04Fcc+5ft0fdKZ69dfu8uU82bfvPwj8+P3r4
e/Mu43QPu3ECUh422Pvclkyoqcw7mdf51UlJUtJuDzs5nOvNnZPa9ujZ7PZ8
JCVxumcMf79LgqJnDPZZn9uSadVdKWn1dYjo208szS1nFR9gpQqfQkpq7anb
dZaX90/+3DVPuT0fSUm08IAjSkqCooelpD71lpJW2ScfdqKJKZqewrfRVZxl
6snpW3e7R27U6Z7aS5XbtSoWLjVJSVzixpP/vY50mpQERccHGkWZHg5nTemM
U3NuDBfZVGZKxJzoi3BitIUOsOHYZfUe2Vf1G5Uf6VMsJc2niO/rcPo8a35d
fBudIiU93ilhYWhHekBKgqKXn2GukYlCm1JSuGwxj1yfkoqro3/n7rLpV6uJ
O97WNPiyM9sjD+/VGJ9Hd/GMFM4K08oq10SnZyZGX6fmSkkPZp8u7egNKQmK
HpaSut2WVJbJBJbwbXRKOGtTzkqVz79IzS1OZwin76/KY6w4sab+zMQWx+GT
ju0p5pMY8qsFo7NWgSUTmlLRJjNXSnqth923nGVrt0hJUPSws03P27K861hN
CWeF5fN7KlpPtNpobZkFoy8+wY1T6oYqnEjnWuyp1cGWWVE4t9ieKX2LXpxy
3CMP7PBclJq1nB7t8HxKqslQmaWmX2PUtw2+cfd49mbKpp6RkqDoYbevT9qW
bunkZ7sxJYXFahqTT0mrqH761j1yOOxISdFZ+ZQ075Hod/DyqafmC3tS0iPZ
lXn1/SMlQZGUNKjfFi6u8D2d/E6NUlIYUsJb8dXcypakYleYnhodus8bEZld
c2JKqvyiXc0TKCnpJezHGpW9JCVBkZQ0qLtSUqMP5OlH62dJlRM3PUuKHpbR
KfVtrvf44bB6KpcvtppyPCXVfOlOSnoJ+7GGlARnedgd75O2Je/GZ0k8W1cp
KSy2CkSZHORZ0lm2PtRbTsnHomgOyk+Ukt7MfqwhJcFZpKRBSUk00ltKyjep
mJJSdZ7o8aedE1PS/Huir8zEzNtM4UyYatAxXGo1uleflizll920on011K/o
+Nkp3GQpCc4iJQ1KSqKR0wdR9NZlOTG8vcm/TdUcrfOzOMs1Ot09+7STufMM
S4ZTMj8pOvGvuKJn76OXyGeB43GjuMYWiqvYMfSkJDiLlDQoKYlG3jOIzqLH
vqQkmpKS6svULCUlQZGUNCgpiUbeM4jOosdSpp7c3RkcNW1JScudHn29KpZ6
kZkbNm81a1lmdRCmmhF9HZ1VbEy8ExekJCg6cvmovjq93bm77EtKopHKI3bf
gb0cEY2GRnRdrVd0wVrg5VYDLfU2epKZgvySKhN9EV02HPjLWcsy9c2ob1W0
klTnRElJULTjRqLpzf8jtegxKYlGLggvl9UvJcFj1Kek1MTMrPyL4tx8mdWn
psVqUyGuWElmSkhKgqKtd+/uB444sfekJBqRko6sEWhk6JSUavmOZ0mZSjJT
gB3qU5LnR6c4qxulJBpJHZ+rjzGjn3CmPucML+hhVeEi4YLh2lONWa0rWkOq
JdECmWHrxAgXyMSEz6/DPDUxPBVEF6ypKmxApkzqbbFkTZ35lgBH5K/+q5Kt
G/MSp/SklEQj0eOz8ur/CVJP5UU/v8iyGfU3FWHNWzck3yeVc4FTpE4I4W3M
amL4occndqJYWRXOzM2vJV84VW10wXwl+b4CdggHV6rYBY15j+P9KSXRSPTg
TF2Fp3S4mGK3KDWLhNOjbSvWv2ldNe1McXqEC5w70J49bGu2zu+SoKgmJT37
ZHKXg70qJdFI5shMhYhMMKkPR5k6o20r1p+Zu/yctri4MyT0QEqqJyXBKaSk
u0hJ9CkfTzLPYvIFdjxLijajvv6zJjpDQg9OHGirB8en1Lap/CnrPbgKKQmK
mqak5YnortPRBfY1SUqiT6mUtEooy6Gdeb2cmBddJNq21ayaSlaNj27pqp5M
bxS7CzjdxWNt0+p6Ow/UtEdKgqLorciqwO6a69eyu+ZO6tyx+ME1Skm0U39w
bgoUx+u8/lZESoJOSEn1pCQ4RaOUlPoQ+BRS0kdKoiUpqX51vd0dwVMd+cw2
+kx5nji/Xc0NC0fnRivJv07VcxYpCU5xWUparTF1plq9CM8q0QL5empKRvsh
v1RqYr0j50YpiXY2HZktLvTROtvdUaQaUFmydWOAz7GxtrqaryambjCiLyoL
h+VT9UhJ0K2LU1I+7KTyS1g+fJupp+bcGI1I+aWijdxESqJbbv5r6CW4zMGU
FL7ORJtPcInfF6k+sTuE1Y1KC1ISnKKTlFR8EU5cnbgyi9eXDFtbE9My25sn
JdEzESBP/8CVbkxJ9VV9YncIn8RHvqvpZ6msUEqCostS0u4PYVLlU6s4UrKy
jJTEGzT9qHN0egaut3vc1X9Muu/Sn0lJxXqkJOhWo5T0qT6TFF/Un2GOl4y2
X0rizcSBkD6BWxy8IVndUWTeRguvZuWXLRYOlzqLlARnaZeSPrFTRzhx+Tb6
4pM+s22qp7JktKmrE9rqxe5z3ZG+lZK4zMHj/Bn0ANxu9+i7eNjee5aoXLuU
BEXFi/4Qg31QUhIjin568Hh39zrwl/YNxiuH8L2ni/q1S0lQVLwBGGW8j+jI
1klJALzQ1kvnZZ913P6Jyqa1S0lQ1HNK2vpZbieRqv48KSUBwCa3h5E+be0T
KQmKek5JS6lmdNK8FSkJANrp8+p/lx29ISVBkZTUgpQEAE29/MeDB7ddSoKi
RilpNXLDgRx9uxryqxrCBTOFw7epbUkVrtmQ1EalCoSrTs0qkpIAYBbeSDzb
3f0Nz1ccaztG4vRrtJl+zRGZAsUXmQKZ1X3SQSlf/+63qdamOmoHKQkAABpp
mpLCt6sosTUlrRaMVp5aXbFt0YZFa0sVDluS/8xHSgIAgA7dkpJS2efft3cH
S3KCUABF8/8/3VmkkmIEHog+RzLnrKYVETubvqXdqQ+58V7ScG3BtKfuQzW3
NKkkAAB4odRKGuZDryaer6R4YadeBqttnnqNSgIAgCTDSvqshlJ9O6a55fBw
WnNAc2T58jDDYbbm+OFSDycaDq6PbZ6uPPbkm/qFSgIAgCTBx/hyTPYaHjvX
e6gkAAB4J5X0XVQSAAC800wlfR4JpcmV/B+uX6lKAgCAJPNt8nMSJtst76RK
AgCAJKcqSShdd9d7qJIAACDJ2fYRSlfc+O6pJAAASLJwh6j3K9k0Jb1XKgkA
AJJc//Re/edCfHHXv9SBSgIAgCSpn+TJo5IAACCJStqUSgIAgCQqaVMqCQAA
kqikTakkAABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2
pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIA
gCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqik
TakkAABIopI2pZIAACCJStqUqAEAgCQqaVMqCQAAkqgkAACAkkoCAAAoqSQA
AICSSgIAACipJAAAgJJKAgAAKKkkAACA0lol/fqruSuev9wSzNM8/M/fzaPK
OSeXCgAAUFsoiDpberPVM/f2zgRXPH8ZUPOnAAAAOMirpDiRhrtObZkpI5UE
AADMuLGS/t3N+bTu7DTv9TTn6Q3uPWK38DcAAEDPXZUU1FBvS2/O3uDDeVUS
AACQ4ZZKWtvSe9kbvPDE3af49QaVBAAAzLirkmr1mGCG4SmaI2cqKdgIAABQ
u/F7SeWWyUrqFVB8eLxr+DgfAABAYO1RtOAZtjJ86ptKhy8cBY/D1YProw67
eqc4e3UAAMBPpiMAAABKKgkAAKC0XEnzP5LQe9Bu7aQXv3Y0PPvD2ShRAQDg
bZa/l3RqV/1rDMuuZ8VwhgdOAQAAvNbDlfSGAFFJAABAYKGSDuPrZ9h6D8UF
z+Md/q5/tq43VfAsX+/SZpbRPG+w1OEymgcGq63fVQAA4BkXK6l5k6hZSZP3
mOr6iAf0RjYXNtzSTJ7gkoNF1ufqld2pxQMAANnuqqTegHJLb3BdDZ+vwRIM
+LTSpjnzcM119TRX3iugeJHxxsNlLvyjAAAAd3mykupdM+0znKquleCMM3Oe
raSFe0nB/PW1AAAAT7qrkuJ06u2dr6SzI+crqb4H9I2VNFw8AACQbe2GRfP2
Tb2rHFB+8m++LJXT9o5tHlgvLNjYW0a9yFNXEay5dwnxIQAAwJPWPo0Hh/hs
DwAAbG35nkXzKIkEAADszpNdAAAAJZUEAABQUkkAAACl+jffAAAAfrjfa7x2
Kw==
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 14->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
/ynpyIKnLM6seF6NHvyr55u7D+bV4vkK7XR4J79LgiIpqXP1N0sHb66kpJoG
n9sDp6/olG+CHayBT/C10miB1KEYfV1/JK9eFyu0x+GdpCQokpI6t+lOqWnu
kJLekJLOquTlpphVgRYpKX82kJKAmZQERVJS56SkC/4ek5IOLntWDURT0vJk
uzUlLR8Tz6+XUyoDkZQEfElJUCQldW53SlremEXvrPpPScv2R6es7j8zC1au
CC6QOfhXJVfjeooFpSkY18tla1LS5BIA7yMlQZFLZOdSd1P5lLR6Ed5cDZGS
ovd1qynhJmduCA9u2mUj5eCKTmmn08IRqXC0LFBzwE/BBwL5kV5TVfTgdyGA
t5GSoMjFsXOnp6R9ESkTJfYdP5V5Lf+ReObzcynp9ma8WSYfzQXqU1JNOMqn
pMxwWDbP5QDeQ0qCIpfFzu1LSavU0C4lbTp+VveNB1NS5f2klNRJVa9SHBdX
pqT8oAjb6aIAbyAlQZELYucOPkuKTt+XlVJ3U8XjJ1WsRUrat40PS0mn1NCi
KmapA3slM2s+zpcvwmVTFRYPfpcGeDYpCYpcCjtXf7efujtavl2+OJKSVrde
0WZn5tZvWqpMOH2Skk6toUVVzPaNwRZ/+f1r78NTSUlQJCV1bneiKQaN3XdT
kQ+1Fz8Arz+iGqWkH9uT4PNS0lmVnF4VX6OkJOCppCQokpI611tKikakfUfR
jpS0emBUU1JKOoWzxLky4+h6W9vctGeAa0hJUOSq17npwD/c/XXiZ87Hb7Q2
bVq4ltSmRaecnpI+V4WFU9ZyelOdKPhy1YAHkJKgyPWuc3UfBt9v36adleCO
B8D6Nu/Y0q3OWsvprb1m8xnC7oEP9EBKgiJXus51HiVSQanmoOp801Jtrix5
RLcpqVGdjMsVBAYlJUGRa1znRowSn+qU1I8Tt+u4E9dyeoOv6QHGsmkQAT2Q
kqDI1a1z0/gpaT7GKg+23Su6gJTUqE4AriQlQZGU1LmxUlLqMc3yMCvWIyV1
npLaVcszODwAeAApqXP1KWlOJTvmNn2W9AkeLW1aduu6mhouJWVqO7gW5w0y
tn6XFQB640LWuU25JhORimWkpH7WNURKOqUGHs8lBoBBuYR17jEpqdE37nYv
ss+IKSlV4Sq6ht+N3FcthFxooDd+lwRFLl6d252SVj8Omqdc8427cCs+bf71
ht2L7POAlDTFfDYm2XZN5cFcbqAfUhIUuWx1bl9KWr24/llSuBWNCh9cqs8V
Xf8s6RMkqYOVQ4oDBnogJUGRlNQ5KanpUn2uqMUqwjrPSkk7ygNwLykJiqSk
zh38xl10+sUpafm1rsryu1e0b8E3rKUmJe34xl2mfihyAYK7SElQ5CLVuYPP
knpISTs2+fRlT2z8oCmpWGf466Rz64cUlyG4npQERS5PnasPNfMjm/DttLAv
IklJLaq6eC01Kald/ZC39aEzcISUBEWuSp3bl2tSX7078jdESkotvvrRzZHn
JlJS60p4OVcluICUBEWuR52Tko4sPsV8fj3st65u3JSUqfbEj/GdTziFaxM0
JSVBkStR53YHnNU37t6TkqI1rKasktTBylu4OCWNuBYAdpOSoEhK6lz0achd
Ltvk02uYpKT2NV+/Ft7DEQXnkpKg6Mq7X07020KfFe52ygGZiUWfF3/j7nMs
Ie5bC5zC1QpOJCVBkevOoKSkI5VMr/zXG+aar3k+6MRCC65ZcAopCYpccQYl
JR2p5+AqLhgyjVZx8bconVtoJHMAu6gdV/ju9dPd3f0XkZKg6FXnhCeRko5U
dXAV0cXnoXTKmDp9VN51P+D0QlPhYfy2e90T6bqvl/SDlARFbzgVPJKUtLuq
41fATPiaZ7UIYgfd9ampMwytLcfdCx8KnEJ3hZ7dJ1ISFLmUDEpKuqW2fJ3L
6R2mpM/l37hbrveaFfFydx3hQ9NRGQ/uHCkJih58Bng2KemW2lZ1ru7E+k9J
n5s+bHeS4QLRp6WOvSJdlKd/4LVcRAYlJXVYYSoxnbiKU9xyA3nLecb57VVS
KckxkKFzaugleCdXkEFJSR1WOHX8rzeE9V8/9u9anVPcG2QikgMgRc/U01fw
Qq4gg5KSbqwzn5KaruJEt4z9W55eOcW9k6BUpFvqPa+v/C4Jilw+BiUlHanz
4CqekZIuW8vtK220xvzDi4u12MCu3N3Bv7i7M07zpG1p7Xl9JSVB0cPO+e8h
Je2r9pT7nOji595B1ddz3a1hhdO37rh26/pZ8x/+4b/p4e/K/rzLz238oz/6
X3r4e0xvP2ZDrvG87pKSoGjTvQ39kJJ2VLvjfj5T2ymtOl7/z5I/Pj96+Osw
JTVdkZR0JSnpdNENOes8Wbn4iZ15pM0XN7UTUhIUSUmDkpI2Vbj7qUemzlPa
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
6t7HXJt4s+cdvc/bonqnbLuUVCkTfIqZ6JQ9tTslnbX245XcvordXPoHJSW9
kJ5pqqZ7xSUG9byD9nlbVE9KulIm+4SPk8JiLYJS/VInFrtAPy2ZueIPSkp6
IT3T2qarT83J0wmWTqzu5eb7t3GPz+dtUb1Ttl1KqpRPSeHbVbGzDsitQal+
7f0MmX5aMnvJKeV5pKQX0jOt7ejh/GVrx6d/cKIp5vPrpX+sg/N5W1Tv3G2X
kioVU9InEUlOPyCPp6TwmFlVGH27erHaqMpZmXrClqReX+/GVXOElPRCeqa1
gz0cnszD+xm4Rer+LZw1iudtUb1Ttl1KqhR2aTQOhCVbnPzrKwwbmZoeLVkZ
eWpmZeqpaUC4CVdy7R6UlPRCeqa1s3p4Sqssdr1TNtzW3aKywam3YQ03b8+v
Ttmi4bYub9q77Uunp6Sbu/JXB7dltV2pKdOvPT+ld0TrJkXLRHsjbHxqc258
kZp4vdMPJ64hJb2Qnmnt9AtZ/vL98/WPz48e/locWj/r/Ht/73/t4a/R1t2+
1zbtu/BOKXMT8nPK3/yb/2cPf5mt27RFq5J/5+/87z387T4yd2/7UouU9I/+
0f/Yw1/TSFIZhZqmpKKahnWekua3UhI7SEkvpGdauyYlLa8It99jS0m7t+72
vXZk3823H9HFh0hJm7ZoVfL2fHQwJe3e9iUpqXKjomfv5azllOissGRrUtJZ
pKRBSUkvpGdayAeZFjXP9U+D32kXN//2fCQlZdqfn3t7PtqXkipL3p6PWqSk
raSkpypmtPBKlCqcunItX2RmpSopLr5saruOqhE2iSFISe+kc04XPYEf7+ea
SqbB77SLW3d7PpKSMu3Pz709H0lJ9fbVIyXRv9t3pZQ0KCnpnXROCy1SUuV6
b7/H3n2nXeyl+pS06vkeUlLN1t2+1w7uu8yCw6Wk/MfRYeHb89GJKemyU1ZN
x96ej46kpMqPti64TLgz/+qhE+yLQUlJ76RzWmgUkYoVfu+0V6uuvzeey89L
RatK1b+q4cjWRReftuSdZeFNCzZNSfmt25pl6vfypoOh0dbNIeUrDC/z9CkQ
LhjWE60zumCLrduaZVaiBW58lnSNmo7dmmXCKUv5wo1SUn4Dl9NTxY4rtuTx
+tnwflrCJlLSO+mcRlpclcKbq9UqpkWQWd701twYr+6oU7NSE8MaTtm6VYHH
pKTo1u146FOzl6N7rWlKim7dKhBFU1I08kyLgJPKRPV1Ntq6HXEm+jo/8dkp
KdqxB1PSauL8+ruui1PSagPD7U1NPK7Y1fX1nN62t2m0i2lNSnonndPI8etR
sc5wFdOulBQWSC1eWf++Tc5v2ueklPStcPV2U80npqTV1rVOSfXVtti6MK0U
p0SfDRXnFh8ttdi6IylpX4EOU9LW3yXVdOzWiBQuMsVS0i3PklYbmKqzxU4s
dnV9Pae37W12dDs9kJLeSee0s+8yVFNh6jI3ZVPMt/Aqy6wmVt6KRycu32Yu
yvt8tqekWRiXvi9Wb/dVfuLWnZWSvnWu9vKmalts3b6UlC+2LyW12LrdKWn5
4vt69d9NlZ++dTf6dJaSGm1j/Xk+XOqskvUXoI97hsM29Tn9kJLeSee0s/Ua
VFlb5gI3xX46FA04UyI6hffVYVWZhDVP2bHVNVu341nSaqm55vC50ojfuIvu
mkykray2xdalEtCUCESz/Nfq7nqWtCqwIyXNVhOX6WlrzTu27kSnPEtaFdjx
dbsp+P3RLJWe7vrGXWqpHes60pL6SsLmzVVNQSiLFki1ZHerhvOSzXweKemd
dE5TB8+H4RUtf42bsnfI84Lh44aDz4+id+9HNja1dQdTUmripppPSUmZfbcp
zkR3x3JH35KSogW2pqRznyUtK2yxdcefJYWv91W7detOdDAlRQvse9xTk4a2
Vr6jQ/IbWD/xuGJXV1ayerGs/LPIQWH5zKyw/mdrtItpTUp6J53T2qYerrlt
yJxjp3RKCl+Et9M9pKR8gR0pKRqOpsPfuGuxdaekpPweb5qS8gX2paRU0tmU
klavW2zd7pSUmji95llSvsDWB0n136yrr/xgSqov0O7++ZSaU9em6dfIExbb
9OLx2u1lmpKSXkv/NDL9qqZYTZ35uanb5tWs1Nt8IKq88W50FZi2//+SwgdG
U8wF37ir2brdKak+FzdKSTVbV5Nf8pEnU6CmqrmSFlt3MCVNQSaaYg+bHpaS
iqbBU1LlNm66BNxlSiSjTywlZZYNNzO11FN1vqNJkZJeS/+0sDoTLt+2uyzO
kedrFVuiomXCifli4fQWB9XU4P8Pu++v0dZtzTLRXZPa3Z2kpLk9YYSZp4eN
jy6Yf7uavqynxdZtjUgry4nR11JSzXftwrerWalFbkxJo5i2p6TMi7Cq9/Tw
98C7uxVsJiW9lv45XfQ0OF+Xm6536/OIRn+N7kVvz0f9pKTh9l30x0TX//WQ
ktr9vTMlXfD38qvk6uK1fBu+/vx6Bcwsu6z/sm25nZQ0KCnptfTP6VJd2rqr
H3+nfXs+kpJ2b93t+UhKak1KIi/6BOrzspsQKWlQUtJr6Z/T3ZiS+mHrbJ2t
u97pW1evRUrqxyld9HJTLBm9rW8dToOSkl5L/5wu1aW6Gniq01MS12t9kVqm
znfmhXdu9QNISa+lf04XPQ06NwIPJiUNrfjUzGO1U+jDQUlJr6V/WlidCZ0Y
gWeTksZV+d1CV7Hj3AwMSkp6Lf3TiK+1A+8hJQ2q/jrlQnac+4FBSUlvpova
0bfAG0hJwwn+jYralLT8bdG+WeGLsFXR1s6Fo1/YSNUfrblm7aeHGilpUFLS
m+midvQt8AZS0ljCiFSfkj7ZpJOfFb5YZZ/o6qKFw6Wi6SZTc2rtqWqPk5IG
JSW9mS5qR98CbyAlDSQakbampBYviikpbP8nFj3Cemoav6qnvmfqSUmDkpLe
TBc1pXsB6MroKSm1RammVjZ+WU+La7eUNCgp6c10Uc3FItVLq0+06hcEgBuN
npJWSy1f1NScrycfyvaRkgYlJb2ZLvoEnZA5P6cmbo1XAHC7mpS0+jxw9Xo5
MTVrVU++cPQSHNaTan+43lQNqcaHaznF6RVyDSnpzXTRpxSL5hNp/SL5iQBP
4ndJQ3vYdarbzZGSNlkl2cpFMlVl6q+s5yxS0kB00eeklFRZM8DDSEnDefC1
qdtNk5Lqnf5QLxOgdix1kJQ0EF30qUtJqYnz29SHFWc2FO4zvdvd3d81KWk4
Tz2kex6w3TasN2EvHe+3VA35mhvtLylpLHopPySjd0qVo1jfMrqe7zqupB8y
pKSx1B/GrQ/73ZWPOBKdQCpleilzQM7Tly9Wdc5TVmWWda7qWU1P1bCJlDQW
vZSJPKtZqenRKamJMAoHcEifhKSksWw6hlsf8JsiW9OWtCYlVap57pO/4woj
THTKJ8hHxRfROreSksail1JRaPesmunQMxf0DJ2zIiUNZOuhKyWdxXmj0ikp
qfJFKv6kXqQmbiIljeXlvTQFwlnRt6tlM/W3azw04rjN0z9LUtIodhy3xUve
8lP61Ef3+aXylYQ1ZK7Lq2q7kr9VYBb2UrhPo8fVjhdhnfkXqYmbSElj0UtN
6V6G46CtoZdmUtIojqSkzM1h6k41c3ObX7C43vwtbp9BSUqqV0wl0Z6UkrZy
QNbQS03pXsbiiK2nr76kpCHsO1wrU1Jl+fpb05q11K+3B1LSJqvnRJmJq1nL
MpumhKtITc+3pEhKGoteakr3MhZHbD199SUlDeFgSvqk7/OlpBpS0qBODzVS
0lj0UlO6l7FEb06i1/fo9Eyx45/L7b7Na3TjZHR/SUn9232s1oyd6BA7KyUd
rKcfUtKgpKSX00tN6V4GkjpcMymppob8zUxmvWdpVL/R/SUlde5IRKr5NGPO
LPUfg+Q/PAkrXL4Ny0RX1Fsq6a09VJKS0FHt6FsGkklJn1iuWZWPTowuGH3R
jpTUlJT0BpmPNQyEGlLSoKQkdFRTupdRXJ+S8qMj9cnwFAjXEm1t+CJc16YB
a3R/pKR3kJIOkpIGJSWho5rSvYwin5I+QbRJ3SyF08MAUrxnSD11ik5fzso8
rqpfpJLR/ZGSXiP6McKOzxbeSS8NSkpCRzWlexnF8ZSUuo9K1ZkZHal66kNQ
ZcnMFhUZ3R8pqWOnHJ/L0ZSJSKlh3i4djDX6pKRBSUnoqKZ0L6M4kpIyySiT
kjIrnedmngRVNq8+WGVakmre1kWeR0rq01kRafk6Na6jw2f3hw+V7RmLlDQo
KQkd1ZTuZRTFlFT5Oj9ra4FUCEqV3JGSdg9So5tuHT84NwWfminHjTvipKRB
SUnoqKZ0L6Oo+c7M6uHLnDJWZVKzUnVuKpN/vZyYF13keI/B7U45MjOVFOvP
j/HU+A0rz58EipVv2t6mdpxeuFLlVeMal23yZSvqx772n94nzHQvoxjiWJ1+
vYO6t84heowXOuXIXFWyvM2oqX9KpJ5lbavXq/rDGsKq8pX3M0J336FxjZ97
58fnRw9/lx0nV67or/21/6eHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzE
Vd7ZkZLq23kNKalzUlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHH
bicl9eaWlFRZeFNKOvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQ
U9uRkrpy+qcHqbfFMSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH
5LSQmpVZqvg2fB2+yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4Uwx
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
/+AP/r8e/pwWiJKSTmF8PZs7q3rF9JFKUsXyUtKSA3KfMLZDIzUpaVPSOf4s
adW8TQMh+qHWwYujlETnpKTjDK7Hk5I2CZ8TpSamZq0uwUvh3FUl0cL5RYot
nElJo5uqEzEctIotK8WHRJnyxaXCkplG5sdC5tQ6FzjSRbfnIymJDCnpICPr
DYrXEfp0eqiRkkY3xcI4tBCNNrf8FY/zmrEwBR98Radv7aLb85GUFBVNx3e5
sR+kpIPu3X1c4/Zxyj5SEqEpcbMH55rGSUlzg+vnTlLSo/3skL/7d/+3Hv6k
pHEZVi8hJQ1KSiIUdp0BTguXfMpea1ObU7Oib+srj9aZiS1fq9f1s6SkIyYp
6S9JSVC06SpDP6QkQpU3gXDQzyPqb//tf93D39Zju/KStyOFhTXkk0vxdX6W
lLSblPQlJW2y78MZRmd3D0pKIpTpOiOdE42bkub2tx4OO1JSuEhmlpS0m5T0
JSXNiieEVQHX0/ewrwclJREqdp2+5RSjp6R5K9qNiK0pKVo+PyszV0rKkJK+
pKRZ/jlR/USex44elJREqP6rRBc0hgd7Rkqat6XFiNiUklKFU7OmX3+sJCVt
kkpJ385cvf1OmQKZGvJlpKQOhft3+vXJUWqpqxrIbdwyDUpKIlTfdTqZI56U
kuYtOndQbEpJW58lTVu+iWewr2Tyy2rWKjSlitUsIiX1LJqS5nOClPRmUlLn
MoP3epdt8jUrep5NXXflPuVhpkVKms8PYX4Jp9cUi558UjWcewyfWNvU8ndJ
mUWkpKIpm3Gm7cnoSEpiCKkD6eJDl+tlDgB68HPv/JN/8t/18HfZceKA3G1H
1+ltdpiCqDIl4k84Mfo8KPo2+iIsfPqmnVLn1PLfuJt+TUnFdR3fnCeZSk+C
5gJTLPKkJq6W9SxpIPlkFD0nuHl+CTu6c1ISm+wLSvqcTaK5Zgqe+BSLZaJT
faRqtIEHa84kl/k2bPW6ftYfLH6RtJwoJdUopqQwLq2e++STUVhSSupcKh+t
CqTe8mD2deekJDbZ3Xu6nXqPT0nzZh4ZUMXvwl3zZ2iv7E5J0WdJq9ryb7tK
ScxqRnoxSfFIdnfnpCQ2OdJ7ep5K0fgT5qB8sf5T0ryxO9YiJXWrJiWFCSi6
lJQEzyYldU5KYpODveeEQI3dKWk2UEqaNzm1ruj0qSeN+2Yw0+F/4241MVMs
sy4pCfrnFNq5KZGS5stfdOJy7qpkuGCqknNTUv3iDsgjTuk9u4C8aXtKSi0y
SkqaNzycEr2M/pzy4/Ojhz/DeSWVXOZdGf2W3WpWqsBKJiLdnpL8LgmKpKTO
pVJSmG7CictklCmTSkzhUgc35PSShM7qPWcGMiojz76UFA1ZnaSkT+J33FLS
QIrh5bI/KQk6516oc0dSUibvFBdpmpLmoy51d3FkRS93bu/ZF0StMs5XmHHm
6WGZcFamTGpdt6SkuQdCqwK35yMpKUpK+pKSljLDOfo2HO/XtZULRW9T6ce0
NyVN2adCO9LWvuMkdS+xPPCcbU50eu85RRCaEt+Ru/7v3oMzf2d1ez6SkqKi
V6W73NgPUtLKlL4VycxKTeEZbh+n5E3bU9Jsd0paLd7iG3ebzj/Ua9R7dgpL
k5SUvtme596ej6SkRp7RpVLSSib7rG6VozctzzgqWJGSOrcjJZ3yLKnpN+4+
UlJL7YKSXcNX1afkV+mwEz7ZlDQXW72unyUl3esZXSolrYS7dVqkpPDtqtgz
jgpW7r3KUDQ98XdJH9+4a6lpB9o78CnlxE/pWdJybup1fpaUdKNndKmUtFJM
SZ9EIErdzPAAUlLn6lPS9Pt/97ty4sUpKdyuj3+9oY3WHeikQeduPD6XWWlr
SgoXycySkm70jC6VklaOpKTlJyQ8id3auUyEWUlNDMtH68kXa5SSts6ixjUd
aDfRrR4Ozq0pKVo+NWuZwooBqofeeJhndKmUtFKTkj51v1HiMaSkzqVS0vV/
UtIoLutAe4o+RW9pTrzY1XxuvCklpQrnZ1U+YzJODwo/fky5u6XbSEkrmbyz
bxYPMOLQfpVHpqT8NcUBedCVHegEQj9SN67Lo/T0oJRZabtnSVLSvZ7RpVLS
UibzRqdEZw2al8mwQzuXvxZf7LJNvmZFT3V9B9pldGWq/uD3yCryp8qp8e+S
JinpPs/oUikJiq68++VEvy30WeFuDsiDbulAZxL6cWNKWhbYmpLC1JOZVRmR
pKQWntGlUhIUubcZlJREyo0daN/RgzAlTYuvxJy1ivzT9kyEmcuvXtfPem1K
6mRbOmnGQVISFElJnUt9YnmLyzb5mhU92I19eOWhAjWmU//1hsrT43Tg3+6u
zD71JY9vdSc62ZZOmnGQlARFbmk61/pSu+mifNkmX7OiB7u9D29vAMyOH43R
NJT/+EhKaiHs/88dtzHP6FIpCYqkpM5JSezQQx86t9CJ3cdhMQdlas49lb/c
vs3vR2qjlltXv5nX9XuFVl1WQUqCotvHKXmTlMR2/fRhPy3hnbbejp51B/tz
8X/wD/6nHv6eNAZX2zL9+mipvpLbr6cXX1WBfaSkzr3wfO6APK6rPnSSoX+n
f7YvJbUgJQFXcgPTuReezx2Qx3XYhx02iZdr+sUnKamFMCXNU6Qk4HRSUudq
zufzhf7H4n81uJIqv5zYyfncAXlcn314/CtM000/1uZJ2iWj1Vpuz0fPS0kr
0RNCcedKSV9+lwRF7jc6VxNeVvEnmnqi06df/08cnZzPHZDHdduHB084+z46
hqaPjVJrvD0fvSQlhRPzu3vrZ4+ZuTWXzh6uqlFSEhRJSZ3Ln4HDuamU9GPx
mCmVsDo5nzsgj+u8D3c3b/WJ8UnN4bEuTkarVWdiy9fqdf2s8K2UtJwYWhWo
jDD1n09KSfBIUlLntqak+gA1+cbdo3XejZVnntVNjpREUere+Ppm5JNL8XVl
sWJQeupISe3laEpanUakpI+UBBVuv5SQ1yIlFedKSQ8wRDdubWQqMUEPyWhp
R0oKF0nN2pqSmH12paRp8RnjlP1WhpQETzKfN+hT/vSbmRvOmjxLepNRunHT
KWi+yRll62hqdffblWljSoqWT82aFl/Je/M37qJS4WhZYFNKSiWjJSkJHqnP
6wuzrSlpFYXCWalPwKSkhxmrGytbO9ZG0Ui3yWhpU0pKFU7NCkOWlDTL5KO5
wKaUtAxKqSvmvqAkJUHn+r/WvFxNeKlJPdH0JCU92HDdWHMuGm6jOEv+vrdD
m1LSvmdJUlJU8SCRkr6kJCga6KLzTjXn3vCh/xSoLN/D+dwBeYpBuzHT7LFu
kjnFuDt9a0rKp6Hp2O+S7u6MvuxLSZWfQ0pJ8CSDXoDeY9+5t8WflDSWcbvR
SenlhntsFLUjJdWnISnpiB2fPS5fRHV+VY2SkqBo9CvR40lJ7DN6N47efjZ5
RjJayoSXeUtXr3fMKkYkKSn0wqtqlJQERU+6Kj1S6pOrW1y2ydes6Nke0I0P
2ATyLj63XGmqyC+7/zZV/sjuPWKSkv6SlARFT71CPd5vC31WuI+j8UQP6Ewn
qOe5/oOXW0hJ3ZKSvqQkKHr8peqppCSKHtOZj9mQN3tDMlo68yn+YXd3Rl/u
3hu/uLEfpCQoun2cknfvCXwl38hTNvZ4Jcye1J9nHWNcqebsAdxCSoIi16/O
TR1/N6AyQ23a2OOVMHtefz5vix5JMoL+SUlQ5FrWuT5T0qYnTZWb6Thc2fO0
r5m7O+Ov9NYevg4eLccPtsoFHT/wJSVBkUtG56bOUtLpN9KOwJSf3fI3/sb/
1cPfvTuo/yhX38IL3LXtByuJvm7k+l7ieRxF8Aa3XFipN42Tkoa4qRvIJCUN
4mf//PW//n/38HfNnjp9/F58gDmeOc5RBG/gTrVzvaWkuVXyTmtS0ihekpKa
jvRVtfOKUi/m8plzUbhsdF2wg6MI3sD97b2K/Z9PSfNdwff1cspy1mqRVA31
KWnZeClpn5pdf3s+kpJqPDglXTnAU1kmmnpSxcJZ0XrabAEv8oCjyO+SoMj9
7b2KQSOTX5azlkknzEHRYuGsrSlptRUt++mBanZ9MbwsrSbueHtvSqo8ior9
dn3DpselpCu7N1x18cUnnYlSs5ab42TFcQ84iqQkKHJ/e68pZlWgGJFWUzKz
Kl9vTUnsULPra57yhK/DF8WJ/aSk/P35atY1p69iw56Rkoqdf43TU1K+Htjn
AUeRlARFt18TXy56q7zcKfUpqSZASUn9qNn1B1NStGS+WD8pKTw1RU9WF5zB
ahpWn2LCKV/h2+h6T09J0S262JQOO9EXxbeVFV4mPs5f4+LevsYDtktKgqIH
n8QucMHFZeopJXGZz6kpKSxWU3kPKWnujU/6tqR182oatjslrSZGX4cvDqak
cBPulWpPps8/W75Tl6+nna46+UaP7IcHbI6UBEXPO3eNpXj5nlqmpFX2qXmW
5IA5S82ur8kvs9T36MK5NTWn1nKXTzYl3d6w+ogUFp5KIaiy/mJKWraZ1vRz
6El98oBtkZKgyEXzXuEdV1hgaxTKzErFq9RaUt+4c8wcV7PrNz1Lqpw4DfUs
aVUgteDtDTuekjKVHElJ+WOMFvR2xmM65wFbISVB0WNOWYMq9n8mv6SyzxQ8
Lap/0lSZkmpaTl7Nrm+XkjYFpVtSUqpAzcTrG7bp63ar8t9qaxasT0mS0Y10
e94z+ucBWyElQZEraefyEWa+F8r8eihTPixQn5Lm5l3fJy/ROiXVB6UrU9Km
MtecvmrybGWEmbV7luSUfi+dX0Mv9UBKgiKX1M7Vp5jWf6njxCHUSDHCzLfE
qYnL2/LoItEa7kpJlVYfAtzdnL9Qk2KiySj/jGl3Srq7P95L59fTV7eTkqDI
VbVz/aekuZ2X9clLVD7oueDPzs07KyWlAtGmlPQxGO+j5+vpq9tJSVAkJXVu
6klNU6/pljeYpKRBTBX/QPdX+DYzKzWlmJI+bkFvkun21elxeVLdeqYNq920
4L5jY1n/KUfX6Ifo6O3/SElQwZ3toH5b6KpCh9NZpKRRVEaYC/5W9+E39skL
1XyOlHp7ZMddttPPrXz043P09n+kJKggJQ2q25T0cVCdJPyE+UZ3d0bXpi5T
0ucRN3IDKfb2aiilXh9Zb9M9fm7lox+co7f/IyVBBbdAnbv4Zjhva8sb9Ql0
5e5x+Yto227plrcp9vP066/Gpli6SVWyLDCls3B08eWxsVw8evCsagsrD6sK
F6k86oY+Modu/JeUBEWuoZ37uXf+m9/9roe/HceJowt6YBheoDIlfYK49CmF
i2geiS4bjcn5tYf5K1Ng6yJ5Qx+WQzf+S0qCIvexnRs6Jc2bcG6fAFsZhq0d
TEn5SjJX6tX08G20QH0IqixZsxX5lo9l6MZ/SUlQJCV17gEp6eMwIy36Sfjy
bf6jcurpvabqU9In+xulZYHwqU1xvdFiqbCTSWr14ShTZ97QB+TQjQcqufHo
3DNS0rwtp/QJD1P8UD1/P0k9vdfOppT02XhUr5JLZbWfdKKJ5rJogR3PkioN
fTQO3XigkpR0r2L/Pykl1WwvL7QjJXm0tJtOa6R4Js88u6m5ECwLh9WmKllN
X77Nv45WHhVdpKLDxj4Uh248UMmdxr1Wl5hogXxy+fq+Xk5ZzoqWX068LCUt
txq+pu0pKfWWGjqthbF6NTOmLqtzrB5bGbrxX36XBEVS0r2m2KeCqwKZ2LKK
P9HUE52+nHh9Svo48FhYfS49T8wX+DziRuUuuu50Y3WplHTQ0I3/kpKgyM3q
vaKdv9wpqQgTTk+lpOKUW1JSZvN5m9QoKBZw/Byh987VW38WB0j0k4dTVlpZ
Z2899jZSEhS95E5j+lVqeuiCkpnWfrakpMpM1FVKynQC75EaBfkCxVkU6b0T
ddKZlQOnB5037/GkJCh6/D1q5xu4alvY2senpGg/8CpS0o104Fk66UkpiUpS
EhR1HiKOGGLT5gdGmedKp6ek/NtbUtJn+/4qPrO7UrtuebxoHy4nFgtwkG48
RetuXI2IcPonGBdz+WgNq9pS9bQba0MfeEM3/ktKgqKn3mmMslHF/p/O/l1S
fu6NKWne3nBKdNU/J/7hH/6bHv5GOdggxTF83AV9mE9AYTOWSSdVrLKe07el
XbXXGLrxX1ISFD0yJT1pizIRJpV9pvSjomiS6iolfbKflK6K3Z6PpCQe45HX
gitdk5LC19HnR2GZ6IvwTJuPS+ca+ngbuvFfUhIUuTJ2Lh9h5utaOKU4K1XD
7Slp3vDPr1+rCwvcno+kJB7GwbzbLSmp8hlQGI7qF5eSooZu/JeUBEVSUudq
8ss1f9cfJ2HiW829PR9JSTyP43mfa1JS6mFQZUraMbHRdo1+mI3e/o+UBBWk
pM5JSftS0rzI6vX3bU0xKYnXckjv07rfVk+C5onLM+TqRbhINBCF9bTeotGP
sdHb/5GSoMLDUtKTtuUrTAo36mHDlwWK4aX4Oj9LSuK1HNU7tO6063dKuzWO
foCN3v6PlAQVrr/7bepJ25L320KfFR5RE9b2paTp94+NpCTIc2Bv9bCU1HR1
Ix5dPXx+eCIpCYqGHuOhJ21L3rNT0pKUBHdxbG/V9OHLZdfr1isa9LiKNnvQ
bflISVBBShrUe1LSynzE1iSaTCYKJ+6LSFISz+bw3kqP5Q3dP6vGD70tUhIU
SUmDem1Kmu1OSTMpCWo4wjd52FX1XKP3jJQEr/Kw8/mTtiVPStqRklaLZL6G
JyXBkoN8Kz0WekafLLdi6C2SkqBISmJQlaEm87Oj479IeltKCn8j9ip3d//N
9MBWjp9P9v8MPqh5Qx6zRUDKk85dn77PWssrxfzf/GV0Ch7uZ/ZXdO41HXLL
UTRtTElz/6TeSkkpD7vJ2U0/bN32eNq8SaM+GbQ3LnN3r59vkpLgNR52Hut2
W6Zfn9GnTrOpYuGsfP3RGpq6vuenA7nm3L9uj7pTPHvr9nlzn2za9p+Ff3x+
9PD35l3G6R524wSkPGyw97ktmVBTmXcyr/Ork5KkpN0ednI415s7J7Xt0bPZ
7flISuJ0zxj+fpcERc8Y7LM+tyXTqrtS0urrENG3n1iaW84qPsBKFT6FlNTa
U7frLC/vn/y5a55yez6SkmjhAUeUlARFD0tJfeotJa2yTz7sRBNTND2Fb6Or
OMvUk9O37naP3KjTPbWXKrdrVSxcapKSuMSNJ/97Hek0KQmKjg80ijI9HM6a
0hmn5twYLrKpzJSIOdEX4cRoCx1gw7HL6j2yr+o3Kj/Sp1hKmk8R39fh9HnW
/Lr4NjpFSnq8U8LC0I70gJQERS8/w1wjE4U2paRw2WIeuT4lFVdH/87dZdOv
VhN3vK1p8GVntkce3qsxPo/u4hkpnBWmlVWuiU7PTIy+Ts2Vkh7MPl3a0RtS
EhQ9LCV1uy2pLJMJLOHb6JRw1qaclSqff5GaW5zOEE7fX5XHWHFiTf2ZiS2O
wycd21PMJzHkVwtGZ60CSyY0paJNZq6U9FoPu285y9ZukZKg6GFnm563ZXnX
sZoSzgrL5/dUtJ5otdHaMgtGX3yCG6fUDVU4kc612FOrgy2zonBusT1T+ha9
OOW4Rx7Y4bkoNWs5Pdrh+ZRUk6EyS02/xqhvG3zj7vHszZRNPSMlQdHDbl+f
tC3d0snPdmNKCovVNCafklZR/fSte+Rw2JGSorPyKWneI9Hv4OVTT80X9qSk
R7Ir8+r7R0qCIilpUL8tXFzhezr5nRqlpDCkhLfiq7mVLUnFrjA9NTp0nzci
MrvmxJRU+UW7midQUtJL2I81KntJSoIiKWlQd6WkRh/I04/Wz5IqJ256lhQ9
LKNT6ttc7/HDYfVULl9sNeV4Sqr50p2U9BL2Yw0pCc7ysDveJ21L3o3Pkni2
rlJSWGwViDI5yLOks2x9qLecko9F0RyUnyglvZn9WENKgrNISYOSkmikt5SU
b1IxJaXqPNHjTzsnpqT590RfmYmZt5nCmTDVoGO41Gp0rz4tWcovu2lF+2qo
X9Hxs1O4yVISnEVKGpSURCOnD6LorctyYnh7k3+bqjla52dxlmt0unv2aSdz
5xmWDKdkflJ04l9xRc/eRy+RzwLH40ZxjS0UV7Fj6ElJcBYpaVBSEo28ZxCd
RY99SUk0JSXVl6lZSkqCIilpUFISjbxnEJ1Fj6VMPbm7Mzhq2pKSljs9+npV
LPUiMzds3mrWsszqIEw1I/o6OqvYmHgnLkhJUHTk8lF9dXq7c3fZl5REI5VH
7L4DezkiGg2N6Lpar+iCtcDLrQZa6m30JDMF+SVVJvoiumw48JezlmXqm1Hf
qmglqc6JkpKgaMeNRNOb/0dq0WNSEo1cEF4uq19KgseoT0mpiZlZ+RfFufky
q09Ni9WmQlyxksyUkJQERVvv3t0PHHFi70lJNCIlHVkj0MjQKSnV8h3PkjKV
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
06cvSA==
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 15->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3u9UyjH2QLKFIi7SJF0iTKm/ZVquwqUUraILo02WITIUUbaQcJ7SpP
xQnkEDgEDuCGCiqUliAqKChyAlSLO3vx+vXt+fTH2DP2demvR15e4/F47LH9
W17rfv7On/03//S/+o+mafpXf+Pnf/7pP//v/slf/uU//6v//D/9+eK/+It/
9V//i7/48//yP/uL//bP/8Wf/+Wf/tl//HPm//uz7J/9J9P0H6YBAABY+Xw+
3/8CAAC83DIoAQAAICIBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEs3pqQJGMEt5wcAgBvdeBd0
740fUOmW8wMAwI1uvAtyAwadM0gBgHeSkoAUgxQAeCcpCUgxSAGAd5KSgBSD
FAB4JykJSDFIAYB3kpKAFIMUAHgnKQlIMUgBgHfqNiXt/j+2LBeZ/xtalUzV
UL+6cKnUeo809cha8kvVbGy0zakey5TM1LmcWSwTXVFN/dG2FTc51YZ8x06J
gy1VbfFlZtMyvbTPubUBAIzixrug4qpXt5SVdUbrD+8t89Vu6pNU5fVv7Whq
OD9acl/bUlJtLq6ouCvz0aPYwk31Z9pWU3/+ZeV+yb9Vv9eKyx4kJQEA7/Sk
lFR/F1qstlFKyszf2tTdsaLyznxrG+rv5KP7PVpzfQvr698UvvLNyzR165zK
lFTsltPHspQEALzTs1NS+FbljffpKWnHDX/984X6OfuaVFOmfmfVJKCDKSmz
7L6j/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT
6402oLh4ZbXRYsWZ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4ti
gdRN8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnT
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
nrI4s+J5NXrwr55v7j6YV4vnK7TT4Z38LgmKpKTO1d8sHby5kpJqGnxuD5y+
olO+CXawBj7B10qjBVKHYnS6/kheTRcrtMfhnaQkKJKSOrfpTqlp7pCS3pCS
zqrk5aaYVYEWKSl/NpCSgJmUBEVSUuekpAv+HpOSDi57Vg1EU9LyZLs1JS0f
E8/TyzmVgUhKAr6kJCiSkjq3OyUtb8yid1b9p6Rl+6NzVvefmQUrVwQXyBz8
q5KrcT3FgtIUjOvlsjUpaXIJgPeRkqDIJbJzqbupfEpaTYQ3V0OkpOh93WpO
uMmZG8KDm3bZSDm4olPa6bRwRCocLQvUHPBT8IFAfqTXVBU9+F0I4G2kJChy
cezc6SlpX0TKRIl9x09lXst/JJ75/FxKur0Zb5bJR3OB+pRUE47yKSkzHJbN
czmA95CSoMhlsXP7UtIqNbRLSZuOn9V948GUVHk/KSV1UtWrFMfFlSkpPyjC
droowBtISVDkgti5g8+SovP3ZaXU3VTx+EkVa5GS9m3jw1LSKTW0qIpZ6sBe
ybw1H+fLiXDZVIXFg9+lAZ5NSoIil8LO1d/tp+6Oli+XE0dS0urWK9rszLv1
m5YqE86fpKRTa2hRFbN9Y7DFX37/2vvwVFISFElJndudaIpBY/fdVORD7cUP
wOuPqEYp6cf2JPi8lHRWJadXxdcoKQl4KikJiqSkzvWWkqIRad9RtCMlrR4Y
1ZSUkk7hLHGuzDi63tY2N+0Z4BpSEhS56nVuOvAPd3+d+Jnz8RutTZsWriW1
adE5p6ekz1Vh4ZS1nN5UJwq+XDXgAaQkKHK961zdh8H327dpZyW44wGwvs07
tnSrs9Zyemuv2XyGsHvgAz2QkqDIla5znUeJVFCqOag637RUmytLHtFtSmpU
J+NyBYFBSUlQ5BrXuRGjxKc6JfXjxO067sS1nN7ga3qAsWwaREAPpCQocnXr
3DR+SpqPscqDbfeKLiAlNaoTgCtJSVAkJXVurJSUekyzPMyK9UhJnaekdtXy
DA4PAB5ASupcfUqaU8mOd5s+S/oEj5Y2Lbt1XU0Nl5IytR1ci/MGGVu/ywoA
vXEh69ymXJOJSMUyUlI/6xoiJZ1SA4/nEgPAoFzCOveYlNToG3e7F9lnxJSU
qnAVXcPvRu6rFkIuNNAbv0uCIhevzu1OSasfB81zrvnGXbgVnzb/esPuRfZ5
QEqaYj4bk2y7pvJgLjfQDykJily2OrcvJa0mrn+WFG5Fo8IHl+pzRdc/S/oE
Sepg5ZDigIEeSElQJCV1TkpqulSfK2qxirDOs1LSjvIA3EtKgiIpqXMHv3EX
nX9xSlp+rauy/O4V7VvwDWupSUk7vnGXqR+KXIDgLlISFLlIde7gs6QeUtKO
TT592RMbP2hKKtYZ/jrp3PohxWUIriclQZHLU+fqQ838yCZ8OS3si0hSUouq
Ll5LTUpqVz/kbX3oDBwhJUGRq1Ln9uWa1FfvjvwNkZJSi69+dHPkuYmU1LoS
Xs5VCS4gJUGR61HnpKQji08xn18P+62rGzclZao98WN85xNO4doETUlJUORK
1LndAWf1jbv3pKRoDas5qyR1sPIWLk5JI64FgN2kJCiSkjoXfRpyl8s2+fQa
Jimpfc3Xr4X3cETBuaQkKLry7pcT/bbQZ4W7nXJAZmLR58XfuPscS4j71gKn
cLWCE0lJUOS6Mygp6Ugl0yv/9Ya55mueDzqx0IJrFpxCSoIiV5xBSUlH6jm4
iguGTKNVXPwtSucWGskcwC5qxxW+e/10d3f/RaQkKHrVOeFJpKQjVR1cRXTx
eSidMqZOH5V33Q84vdBUeBi/7V73RLru6yX9ICVB0RtOBY8kJe2u6vgVMBO+
5rdaBLGD7vrU1BmG1pbj7oUPBU6hu0LP7hMpCYpcSgYlJd1SW77O5fwOU9Ln
8m/cLdd7zYp4ubuO8KHpqIwHd46UBEUPPgM8m5R0S22rOld3Yv2npM9NH7Y7
yXCB6NNSx16RLsrTP/BaLiKDkpI6rDCVmE5cxSluuYG85Tzj/PYqqZTkGMjQ
OTX0EryTK8igpKQOK5w6/tcbwvqvH/t3rc4p7g0yEckBkKJn6ukreCFXkEFJ
STfWmU9JTVdxolvG/i1Pr5zi3klQKtIt9Z7XV36XBEUuH4OSko7UeXAVz0hJ
l63l9pU2WmP+4cXFWmxgV+7u4F/c3RmnedK2tPa8vpKSoOhh5/z3kJL2VXvK
fU508XPvoOrrue7WsMLpW3dcu3X9rPlP/uTf9/B3ZX/e5ec2/u53/66Hv8f0
9mM25BrP6y4pCYo23dvQDylpR7U77ucztZ3SquP1/yz54/Ojh78OU1LTFUlJ
V5KSThfdkLPOk5WLn9iZR9p8cVM7ISVBkZQ0KClpU4W7n3pk6jylbcfrHzEl
bdrAI6Skx5CSTpfakOX8g0Fp0/wj5jqbflbzmF3/JSVBkZQ0KCmpvjYpqcOU
tGkb+yQlXUlKOt0jU1Jvi/RMSoIiKWlQUtKmCqWkDlPSps3cx7OkgeQH5taU
tBrvL0xJxRPd1pS0qjB6Ul2WWU6spqOFw5epRkYLhyVTDU41I7/SzPxBSUlQ
VDyR0icpaWud4QX9YIWnNOx4/dPIKWnTlvZmqkhJ8/G2mv6+rCn2tpSUuePd
EWei0+9JSZ/sJT4zP9wL06/ZZ/UyM5EpEJZZFYtmlkyrosXqm5FZaWotQ5OS
oEhKGpSUtK/mHSlpqnZuU+tLpjLLUjg/LBwtsyofXVxKykeY4nT+rXempNWY
mqSkjVa9F56jUhsyJXLEspKwTH5iufYpiCfhnFQzioVXJcMGV9aTqjCcOS4p
CYrCMydDkJJ2Vz7EMV/fwmhgmWNLcTo1c9OyR1LSpo3typGUNP3hsZGUNIum
pOVd7lkp6Vvn6mV9/aP0diY4ZAp8EkkhmjJqgkY+gLRLSalmVNYjJQEfKWlY
UtKR+vs/7IvNW95DnpWSiuUz6zqSkmq2t0NdpaQ32JGSwmXn6e/E6uXWaqOW
R8i9JaMH7VwsWuBTFx/CZYslw4lobfnyxcKpt2qaka8wNXNcUhIUrc6rjEJK
GmItu2VuYMJ7oROfJU2xQLR6K7O6t6lPMfm4lCrmWdLy3d3PklbLzpXv+ybe
KL09BeEinBNdKuz56Q9BI5wfnbPag9GXqxpWtUXLp1YdtiRsT6r90WZHV5rq
sXFJSVAUPRXQPykpX0M/TumETG1TNiUtVX7jbgoy0WrxFs+SolvduelYSppJ
SV/5gTOdlJKmxLOkp6ak/KnjYOXH6xnLw7ZUSoKiIzdy3EhKytfw+9//2x7+
Dt6H1EStfErK5KBNKanyWdLujV1uzvFKrrE7Ja0WnNJfw3thSsq8uzslRRPT
dOAbd1d2y241p44jlZ9Sz1getqVSEhRJSYOSkvI13J6PjqSkmnC0LHxuSgof
HuUXlJLqg1I+Je2LSI9JSXlbU9I8iFZzfhf8XmlV7DEpqejghmw6Te2r/EiB
Fh6z67+kJCiSkgYlJeVruD0f7UhJq7uOy1JS9FFRNCXlg9JZZ5JRzkj7UtK8
l1MvpaSorSmp3d9jervzlFEsvPVUedxjdv2XlARFUtKgpKR8Dbfno/qUlPpI
9mBKmgKZ+asyq0gVXbxdSqrf9nvtSzQt/oboroOkpNNJSVs9Ztd/SUlQJCUN
SkrK11AML0up+fO7q5LhgjtSUiocbe2HVEq6/u/cM0n/5yUp6UpS0ulOH7Dz
CS06vTrjhSfAsMDn11uUsHx0qegip2zsY3Y9UCl/n0a3pKR8DTX5JZyumVhN
b01JxXC0tR+empLqe+Au4e3fje7ujObu7uBf3N0Z5zhxQ6Zfo82q8pp3U2Uy
y9avdDopKD1m1wOVnnTOfxUpKV/DvpRUM6em8jAl7bi/qizc5jZwpz1763AP
ADucOL7Cqqa6uPRZpKFVJas54XkmM1F8dwenI3ihFvc2XEBKytfQKCXV1Lxa
avcQu2ZgRtfSz2mhk2bAI501vlKnkU91SpqnV2UyGUdKOsjvkqCon9shNpGS
8jXU55evmpS0NSLNS93VDwdX1MnJoYc2wCOdnpKiD4k2FUtN1DxCkpI2kZKg
qJMbIbaSkvI1bHqWVHx55FnSZ+8ouz0lze/efoq4vQHwSCeOrOiJYjVn9aio
8mU4kSpQWc/uDdy9bJ+kJCjq4RaIHaSkfA2NUtLWoLT6bHPTcOskJc1l7j1R
OE1BC01H1mOG7WM2ZElKgqLbb37YR0rK19AuJW0KStFtqYxLVw7MynXde7pw
poIWGo2sxwzYx2zIipQERVLSoKSkfA3F8LISfTc1J7pUfUpatjNToMOUNBe+
5aThTAUtnD6in3Rf8ZgNCUlJUPSks9mrSEn5Gjb9eqjdX/2X2cKS3aakeZHr
Tx1OVtCIwRV6dp9ISVAkJQ1KSsrXcHs+qk9Jy2Yvy3eekuYFLz6BOF9BI6sn
7Hc35x7v6QEpCYrecCp4JCkpX8Pt+WhHSpobf8s1+sjqLm6tUxZcYHqlu3v9
OlISFL3ttPAYUlK+hn4c3IqDXbFpdcdruKzBV/YMwPNISVB08Z0YZ5GSHm9a
/D8+LuiTs1YxVmsB3klKgiIpaVBS0uOt+uGCuHRi5YISQM+kJCiSkgYlJT1e
qh/ajdlzq73g3OJQAdhHSoIiKWlQUtLj5fuhxaOlFj0/0PMvgPeQkqBIShqU
lPR4lf1w7hBu95Sq3W51wABsJSVBkZQ0KCnp8Tb1w1mPllo/9xniu4IAjycl
QZGUNCgp6fH29cPBuHTNv7pw+locMwCbSElQJCUNSkp6vIP9sHtoX9P/9/6o
yjEGAORJSYOSkh7vlH7Y8Wjpyv6/60dVjjEAIE9KGpSU9Hh3/bvc1/f/iWeh
Hds4r93JEACYuTEYlJT0eO3+Xe58zXf1/1nnokwlU8xq1Q4/4A38LgmKpKRB
SUmP17Qf8gP/xl1wyhmpWMOqwOrR0sG1A/RPSoIiKWlQUtIbtO6K1KOl23fB
wfOSlASQJyVBkZQ0KCnpDS7rilVc6mQXHDk7bfpWYYfbDtCUlARFUtKgpKQ3
uL4rlj/VuXjVKY2CUljSyRB4DykJitwYDEpKeoN7/yGFfnbE7sZkvllXMx/g
qaQkKOrqXoh6UtIb3PuvKHw6Oz/sa8zyq3RSEsCXlARFXd0FUU9KeoN7u2KV
LzrZL1tbsox70QW72jqAa0hJUOT2YFBS0ht0kpKWczrZO5taMv2qacMAhiAl
QZHbhkFJSW/QW0qa53dy3qhpxhS4pm0APZOSoMhtw6CkpDe4vSvyDegkdxS/
SiclAaxISVDktmFQUtIb3N4VlQ3o4TQSbYOgBBAlJdXIXD6iL1fXF5eb0bln
GJSU9Aa3d8WmBvSQQSqz0i1tA+iHlFQpE3yKmcjlZnTuGQYlJb3B7V2xrwG3
n1WKWemWVgH0Q0qqlMk+4eOksJgrztDcMwxKSnqDHrpidxtujyT5rHRLk4DT
zSPa0N5ESqqUT0nhy1Uxx+TQnFUGJSW9QQ9dcbwN9waTVFa6pTFAC8thXhzd
4Vdwb9S+b5KkpErhbpqCg22KBaKwGMO5fZyyj5T0Bj10xYltOH62ufoOJuus
boEa//Jf/pt+/u7ujLXleCyOzZ8Ffve7f9fD372nESmpUribpuqU5HoxOrtv
UFLSG3TSFec2o+aqkXr35/wfnx89/HWya3iPn9lk+jkCOvjrISWtTiNSEu3U
pKRP3W+UGI6UNCgp6Q066YpGzcicfFJvSUm8lpSUkUpMqcK35yMpaSCZvLPv
LQYiJQ1KSnqDTrqiaTPCR0uZbylISbyWlJQxf9+pZmBKSdSbAuFbyznRt2q+
QUGf7LhBSUlv0E9XXNCS+VyUuiR9pKSs+lvETA4dyMO2t9g8KSkjPFFkOjOV
kr5LrV5+54S3ystiYSWpwl2lJL9LgqLOLxykSElv0E9XXNaS6D3G8t3b81Hn
KSkfB8L+7HBDKj1se4ubU5+S5n9j4TudKhAt/6SUlOrMfGxJvayZXr4MJ6Sk
nvV8cuBGDoxBSUlv0E9X3JuS5rWvUtKqzGpmNNrMb0ULZMoPl5LCc3vqjrHD
banxsO0tbk5lignjT7FYKkyNkpLC7sp35pSNLVNdGlrOzLzV8zfupKSlzNDb
VIaHsa8HJSW9QVddcU1jorc382lqCgLLcs60CErRXLOKP8WIFJ0eKyUtz/CZ
S/+FzTzNw7a3uDk1QSYsk0lJqzw1bkoKFU8j+WdJU+wxUGZmtMLMWqSkDmWG
3rJA6iVPZUcPSkp6g6664qzGZOrJ3NvM9qWkmjmViSn6GKt/mZ6f3y3WULmb
7i05F57S2zucz96UlI9F85ytKenu/jiq+I27KYg/0cWn9NfqMmuRkjqUOVo+
iVvl6Ewexl4elJT0Bl11xVmNOVLPdF5KSn2/Llo+WuEpvXGi1PV9WSC14CUN
PNnDtre4OUdSUpiGVhNveJa0fHdfSoo+S5ptTUnRRtKt1JF21UHNPTJ7n55J
SW/QW1ec0p5pWj8X+FSfiKbsM53jT46mxE+WonOOd8W5itf06PxxLwEP297i
5pzyLOmdKSl8t5iS5hSTST2rOfmXniV1LkhFvxw5qT3V58mEE3V7ySBPSnqD
3rriSHtS16DlKahY/1QXfyqLVaak1Cp2d0UjNSfz8NLf4YZUetj2Ftt25HdJ
mWdJ4ZfxHpOSMu/WpKTUsyQp6ZGKyTq1VPumcaeerxpkSElv0FtXnNKeVSU1
n9ctC5yVkuZA9JVKSal41duuqZe/GXiex2zvvn/jrjhRfAg1YkrKS+WX+SCJ
fssufGs5J/9SSupfMVlHo9PQpxRq2MuDkpLeoLeuGDQl1WefVLHoeo93BdTb
9/9LCmcu/6Ske/+kpIGs7pbdPL+EHT0oKekNOuyK400KU9I8Z2tKmj+wjc4M
342WT6WkVCVSErfYFGSa/klJUtI7rS4Kny6v0ZxLShqUlPQGHXbF6U2arzU1
NecDzvG/+vo73DVUGvSqJyWdRUr6kpKOG/FMwiaDXi+Qkl6it95olJLqC0tJ
HBF9cDnE3pSSzhI+br7Rjf0gJZ3i3p1Ia7ePU/aRkl6iw944t0mbarvtVibm
xE7gess9OMTejP6w6K6/uzuDE0hJpxji7MFuLveDkpJeosPeOLFJdyWODnu1
tWVXi3ufX7/q+fKu4J2kpLM4dTyYS8OgpKSX6LA3OmzSVg/YhB1ST09e2Bur
TX5hD4CUdBYnkAeTkgYlJb1En73RZ6vqjd7+ffIp6T3PU+btXc2BV5GSTuQc
8lQvuSw+j5T0En32Rp+tqjd6+/epfJY0euesvluYenf0zQT64XzyVC4Wg5KS
XqLP3uizVfVGb/8+q2QUDQuj90y4jTc2BngPZ5tHch0ZlJT0Et32RrcNqzR6
+3cofsds9MtB9MnRLS0B4AFGvyy+lpT0Et32RrcNqzR6+3eo/CXOuD2T36hx
twta8LskKHLtGJSU9BLd9ka3Das0evt3eG1KmuePu2lwOikJiqSkQUlJL9Ft
b3TbsEqjt3+r1b9pEP1F0uiXg+KzpKG3Ds4lJbXgJPMwLhyDkpJeoufe6Llt
RUM3nqjU75I8S4KQlNSCk8zDSEmDkpJeoufe6LltRUM3npTotwqlJAhJSY04
zzyJlDQoKekleu6NnttWNHTjych/n9B+hy8pqREnmSdx1RiUlPQSnfdG583L
GLflAMdJSe24vjyGlDQoKeklmvbG1JN2m5na9ovXCNAPKakd15fHuOX+hOOk
pJdo2hs/K//x+dHDn5TElW76JKAXd3c/XZCSmjLQnsE5c1BS0ks07Y3pxSnp
40h7HzHhSz/wkZIaM76ewalyUFLSS0hJTTf/+pVyF7s7pE/eTEpqzfh6AClp
UFLSS0hJTTf/+pVyPZe5DJ3zWlJSa0bWAzhDDkpKegkpqenmX79SrmdH5+mf
d5KSLmBwjU5KGpSU9BI3pqT5xwvf6dXM+a38/FU9UhIXs5dr6KUXkpKgSEoa
lJT0EnelpDABpd7KT6cKSElcwC6up6/eRkqCIilpUFLSoLZu3S0pKZy/OyXl
q5WSaMourqev3kZKgiIpaVBS0qAGTUlHEpOUxF1Su3j+FmiqTObKeO5hs6+2
ZfPOao/h8DZS0mUMrnFJSYOSkga13Lrlfdo1t2Rh5TUpafXDouLvj8K3pCSu
VzOm7hp6x53evM63F8ZlcI1LShqUlDSWKeZT8ZlwDykp9ZwoTEn1L6UkWqsc
UFJSowqBmfE1KClpUFLSoFZbt/pYu1j+9MZck5LyEemulPR5+sH2clsH1Opq
uPz4IvxYIz+Rb0DqQ5Lopyj55mXWvqoz3U9VnQMcYXANSkoalJQ0qCFSUn3k
yUShMEzlV9duM/M9cMt6ucCmARVGm1TkyU9kMsvWtSzf2rr2aIEiw+FV/C7p
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
vKP3eVtU75Rtl5IqZYJPMROdsqd2p6Sz1n68kttXsZtL/6CkpBfSM03VdK+4
xKCed9A+b4vqSUlXymSf8HFSWKxFUKpf6sRiF+inJTNX/EFJSS+kZ1rbdPWp
OXk6wdKJ1b3cfP827vH5vC2qd8q2S0mV8ikpfLkqdtYBuTUo1a+9nyHTT0tm
LzmlPI+U9EJ6prUdPZy/bO349A9ONMV8fr30j3VwPm+L6p277VJSpWJK+iQi
yekH5PGUFB4zqwqjL1cTq42qfCtTT9iS1PT1blw1R0hJL6RnWjvYw+HJPLyf
gVuk7t/Ct0bxvC2qd8q2S0mVwi6NxoGwZIuTf32FYSNT86MlKyNPzVuZemoa
EG7ClVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6mVYw83b86tTtmi4rcub
9m770ukp6eau/NXBbVltV2rO9GvPT+kd0bpJ0TLR3ggbn9qcGydSM693+uHE
NaSkF9IzrZ1+Ictfvn9O//j86OGvxaH1s85//I//px7+Gm3d7Xtt074L75Qy
NyE/5/zpn/4vPfxltm7TFq1K/sN/+L/28Lf7yNy97UstUtLf//v/ew9/TSNJ
ZRRqmpKKahrWeUqaX0pJ7CAlvZCeae2alLS8Itx+jy0l7d662/fakX03335E
Fx8iJW3aolXJ2/PRwZS0e9uXpKTKjYqevZdvLedE3wpLtiYlnUVKGpSU9EJ6
poV8kGlR81z/NPiddnHzb89HUlKm/fl3b89H+1JSZcnb81GLlLSVlPRUxYwW
XolShVNXruVE5q1UJcXFl01t11E1wiYxBCnpnXTO6aIn8OP9XFPJNPiddnHr
bs9HUlKm/fl3b89HUlK9ffVISfTv9l0pJQ1KSnonndNCi5RUud7b77F332kX
e6k+Ja16voeUVLN1t++1g/sus+BwKSn/cXRY+PZ8dGJKuuyUVdOxt+ejIymp
8qOtCy4T7sy/eugE+2JQUtI76ZwWGkWkYoXfO+3Vquvvjefy81LRqlL1r2o4
snXRxacteWdZeNOCTVNSfuu2Zpn6vbzpYGi0dXNI+QrDyzx/CoQLhvVE64wu
2GLrtmaZlWiBG58lXaOmY7dmmXDOUr5wo5SU38Dl/FSx44otebx+NryflrCJ
lPROOqeRFlel8OZqtYppEWSWN701N8arO+rUW6mZYQ2nbN2qwGNSUnTrdjz0
qdnL0b3WNCVFt24ViKIpKRp5pkXASWWi+jobbd2OOBOdzs98dkqKduzBlLSa
OU9/13VxSlptYLi9qZnHFbu6vp7T2/Y2jXYxrUlJ76RzGjl+PSrWGa5i2pWS
wgKpxSvr37fJ+U37nJSSvhWuXm6q+cSUtNq61impvtoWWxemleKc6LOh4rvF
R0sttu5IStpXoMOUtPV3STUduzUihYtMsZR0y7Ok1Qam6myxE4tdXV/P6W17
mx3dTg+kpHfSOe3suwzVVJi6zE3ZFPMtvMoyq5mVt+LRmcuXmYvyPp/tKWkW
xqXvxOrlvspP3LqzUtK3ztVe3lRti63bl5LyxfalpBZbtzslLSe+06v/bqr8
9K270aezlNRoG+vP8+FSZ5WsvwB93DMctqnP6YeU9E46p52t16DK2jIXuCn2
06FowJkS0Sm8rw6ryiSsec6Ora7Zuh3PklZLzTWHz5VG/MZddNdkIm1ltS22
LpWApkQgmuW/VnfXs6RVgR0pabaauUxPW2vesXUnOuVZ0qrAjq/bTcHvj2ap
9HTXN+5SS+1Y15GW1FcSNm+uagpCWbRAqiW7WzWcl2zm80hJ76Rzmjp4Pgyv
aPlr3JS9Q54XDB83HHx+FL17P7Kxqa07mJJSMzfVfEpKyuy7TXEmujuWO/qW
lBQtsDUlnfssaVlhi607/iwpnN5X7datO9HBlBQtsO9xT00a2lr5jg7Jb2D9
zOOKXV1ZyWpiWflnkYPC8pm3wvqfrdEupjUp6Z10TmuberjmtiFzjp3SKSmc
CG+ne0hJ+QI7UlI0HE2Hv3HXYutOSUn5Pd40JeUL7EtJqaSzKSWtplts3e6U
lJo5veZZUr7A1gdJ9d+sq6/8YEqqL9Du/vmUmlPXpunXyBMW2zTxeO32Mk1J
Sa+lfxqZflVTrKbO/Lup2+bVW6mX+UBUeePd6Cowbf//JYUPjKaYC75xV7N1
u1NSfS5ulJJqtq4mv+QjT6ZATVVzJS227mBKmoJMNMUeNj0sJRVNg6ekym3c
dAm4y5RIRp9YSsosG25maqmn6nxHkyIlvZb+aWF1Jly+bHdZnH79lxNWsSUq
WiacmS8Wzm9xUE0N/v+w+/4abd3WLBPdNand3UlKmtsTRph5ftj46IL5l6v5
y3pabN3WiLSynBmdlpJqvmsXvly9lVrkxpQ0iml7SspMhFW9p4e/B97drWAz
Kem19M/poqfB+brcdL1bn0c0+mt0L3p7PuonJQ2376I/Jrr+r4eU1O7vnSnp
gr+XXyVXF6/ly3D68+sVMLPssv7LtuV2UtKgpKTX0j+nS3Vp665+/J327flI
Stq9dbfnIympNSmJvOgTqM/LbkKkpEFJSa+lf053Y0rqh62zdbbueqdvXb0W
Kakfp3TRy02xZPS2vnU4DUpKei39c7pUl+pq4KlOT0lcr/VFapk635kX3rnV
DyAlvZb+OV30NOjcCDyYlDS04lMzj9VOoQ8HJSW9lv5pYXUmdGIEnk1KGlfl
dwtdxY5zMzAoKem19E8jvtYOvIeUNKj665QL2XHuBwYlJb2ZLmpH3wJvICUN
J/g3KmpT0vK3RfveCifCVkVbOxeOfmEjVX+05pq1nx5qpKRBSUlvpova0bfA
G0hJYwkjUn1K+mSTTv6tcGKVfaKrixYOl4qmm0zNqbWnqj1OShqUlPRmuqgd
fQu8gZQ0kGhE2pqSWkwUU1LY/k8seoT11DR+VU99z9STkgYlJb2ZLmpK9wLQ
ldFTUmqLUk2tbPyynhbXbilpUFLSm+mimotFqpdWn2jVLwgANxo9Ja2WWk7U
1JyvJx/K9pGSBiUlvZku+gSdkDk/p2ZujVcAcLualLT6PHA1vZyZemtVT75w
9BIc1pNqf7jeVA2pxodrOcXpFXINKenNdNGnFIvmE2n9IvmZAE/id0lDe9h1
qtvNkZI2WSXZykUyVWXqr6znLFLSQHTR56SUVFkzwMNIScN58LWp202Tkuqd
/lAvE6B2LHWQlDQQXfSpS0mpmfPL1IcVZzYU7jO9293d3zUpaThPPaR7HrDd
Nqw3YS8d77dUDfmaG+0vKWkseik/JKN3SpWjWN8yup7vOq6kHzKkpLHUH8at
D/vdlY84Ep1AKmV6KXNAzvOXE6s65zmrMss6V/Ws5qdq2ERKGoteykSe1Vup
+dE5qZkwCgdwSJ+EpKSxbDqGWx/wmyJb05a0JiVVqnnuk7/jCiNMdM4nyEfF
iWidW0lJY9FLqSi0+62a+dAzF/QMnbMiJQ1k66ErJZ3FeaPSKSmpciIVf1IT
qZmbSEljeXkvTYHwrejL1bKZ+ts1Hhpx3ObpnyUpaRQ7jtviJW/5KX3qo/v8
UvlKwhoy1+VVtV3J3yowC3sp3KfR42rHRFhnfiI1cxMpaSx6qSndy3ActDX0
0kxKGsWRlJS5OUzdqWZubvMLFtebv8XtMyhJSfWKqSTak1LSVg7IGnqpKd3L
WByx9fTVl5Q0hH2Ha2VKqixff2tas5b69fZAStpk9ZwoM3P11rLMpjnhKlLz
8y0pkpLGopea0r2MxRFbT199SUlDOJiSPun7fCmphpQ0qNNDjZQ0Fr3UlO5l
LNGbk+j1PTo/U+z453K7b/Ma3TgZ3V9SUv92H6s1Yyc6xM5KSQfr6YeUNCgp
6eX0UlO6l4GkDtdMSqqpIX8zk1nvWRrVb3R/SUmdOxKRaj7NmDNL/ccg+Q9P
wgqXL8My0RX1lkp6aw+VpCR0VDv6loFkUtInlmtW5aMzowtGJ9qRkpqSkt4g
87GGgVBDShqUlISOakr3MorrU1J+dKQ+GZ4C4VqirQ0nwnVtGrBG90dKegcp
6SApaVBSEjqqKd3LKPIp6RNEm9TNUjg/DCDFe4bUU6fo/OVbmcdV9YtUMro/
UtJrRD9G2PHZwjvppUFJSeiopnQvozieklL3Uak6M6MjVU99CKosmdmiIqP7
IyV17JTjczmaMhEpNczbpYOxRp+UNCgpCR3VlO5lFEdSUiYZZVJSZqXzu5kn
QZXNqw9WmZakmrd1keeRkvp0VkRaTqfGdXT47P7wobI9Y5GSBiUloaOa0r2M
opiSKqfzb20tkApBqZI7UtLuQWp0063jB+em4FMz57hxR5yUNCgpCR3VlO5l
FDXfmVk9fJlTxqpM6q1UnZvK5KeXM/OiixzvMbjdKUdmppJi/fkxnhq/YeX5
k0Cx8k3b29SO0wtXqrxqXOOyTb5sRf3Y1/7T+4SZ7mUUQxyr0693UPfWOUSP
8UKnHJmrSpa3GTX1T4nUs6xtNb2qP6whrCpfeT8jdPcdGtf4uXd+fH708HfZ
cXLlin6uqo8/Kak7updRDHGsSkm98buk3rQYF6s5p6SkzMxV3tmRkurbeQ0p
qXNSUtMV3R2ODqWkT09nkkfSvQyhhwO15l7iyKPzc+vsocduJyX15paUVFl4
U0o68iwp1aq7SEmdk5KarujucCQldU33MoQbD9QWT4guMFBT25GSunL6pwep
l8UxKyUtSUmdk5KarujucCQldU33MgQpaauBmtqOlNSPFgfktJB6K7NU8WU4
HU5k5tdUfnqf7NBPS4iSkpquKBNblkP81+lP+q0VKWlIwX50kqRrLY7P1O1K
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
tECUlHQK4+vZ3FnVK6aPVJIqlpeSlhyQ+4SxHRqpSUmbks7xZ0mr5m0aCNEP
tQ5eHKUkOiclHWdwPZ6UtEn4nCg1M/XW6hK8FL67qiRaOL9IsYUzKWl0U3Ui
hoNWsWWl+JAoU764VFgy08j8WMicWucCR7ro9nwkJZEhJR1kZL1B8TpCn04P
NVLS6KZYGIcWotHmlr/icV4zFqbgg6/o/K1ddHs+kpKioun4Ljf2g5R00L27
j2vcPk7ZR0oiNCVu9uBc0zgpaW5w/buTlPRoPzvkH/yD/62HPylpXIbVS0hJ
g5KSCIVdZ4DTwiWfstfa1ObUW9GX9ZVH68zElq/VdP1bUtIRk5T016QkKNp0
laEfUhKhyptAOOjnEfV3/+7/2cPf1mO78pK3I4WFNeSTS3E6/5aUtJuU9CUl
bbLvwxlGZ3cPSkoilOk6I50TjZuS5va3Hg47UlK4SOYtKWk3KelLSpoVTwir
Aq6n72FfD0pKIlTsOn3LKUZPSfNWtBsRW1NStHz+rcy7UlKGlPQlJc3yz4nq
Z/I8dvSgpCRC9V8luqAxPNgzUtK8LS1GxKaUlCqcemv69cdKUtImqZT07czV
y++cKZCpIV9GSupQuH+nX58cpZa6qoHcxi3ToKQkQvVdp5M54kkpad6icwfF
ppS09VnStOWbeAb7Sia/rN5ahaZUsZpFpKSeRVPSfE6Qkt5MSupcZvBe77JN
vmZFz7Op667cpzzMtEhJ8/khzC/h/Jpi0ZNPqoZzj+ETa5ta/i4ps4iUVDRl
M860PRkdSUkMIXUgXXzocr3MAUAPfu6df/bP/oce/i47ThyQu+3oOr3NDlMQ
VaZE/AlnRp8HRV9GJ8LCp2/aKXVOLf+Nu+nXlFRc1/HNeZKp9CRoLjDFIk9q
5mpZz5IGkk9G0XOCm+eXsKM7JyWxyb6gpM/ZJJprpuCJT7FYJjrVR6pGG3iw
5kxymW/DVtP1b/1+8Yuk5UwpqUYxJYVxafXcJ5+MwpJSUudS+WhVIPWSB7Ov
Oyclscnu3tPt1Ht8Spo388iAKn4X7po/Q3tld0qKPkta1ZZ/2VVKYlYz0otJ
ikeyuzsnJbHJkd7T81SKxp8wB+WL9Z+S5o3dsRYpqVs1KSlMQNGlpCR4Nimp
c1ISmxzsPScEauxOSbOBUtK8yal1RedPPWncN4OZDv8bd6uZmWKZdUlJ0D+n
0M5NiZQ0X/6iM5fvrkqGC6YqOTcl1S/ugDzilN6zC8ibtqek1CKjpKR5w8M5
0cvozzk/Pj96+DOcV1LJZd6V0W/Zrd5KFVjJRKTbU5LfJUGRlNS5VEoK0004
c5mMMmVSiSlc6uCGnF6S0Fm958xARmXk2ZeSoiGrk5T0SfyOW0oaSDG8XPYn
JUHn3At17khKyuSd4iJNU9J81KXuLo6s6OXO7T37gqhVxvkKM848PywTvpUp
k1rXLSlp7oHQqsDt+UhKipKSvqSkpcxwjr4Mx/t1beVC0dtU+jHtTUlT9qnQ
jrS17zhJ3UssDzxnmxOd3ntOEYSmxHfkrv+79+DM31ndno+kpKjoVekuN/aD
lLQypW9FMm+l5vAMt49T8qbtKWm2OyWtFm/xjbtN5x/qNeo9O4WlSUpK32zP
796ej6SkRp7RpVLSSib7rG6VozctzzgqWJGSOrcjJZ3yLKnpN+4+UlJL7YKS
XcNX1afkV+mwEz7ZlDQXW03XvyUl3esZXSolrYS7dVqkpPDlqtgzjgpW7r3K
UDQ98XdJH9+4a6lpB9o78CnlxE/pWdLy3dR0/i0p6UbP6FIpaaWYkj6JQJS6
meEBpKTO1aek6Q//7nflzItTUrhdH/96QxutO9BJg87deHwus9LWlBQuknlL
SrrRM7pUSlo5kpKWn5DwJHZr5zIRZiU1MywfrSdfrFFK2voWNa7pQLuJbvVw
cG5NSdHyqbeWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIO
tKfoU/SW5sSLXc3nxptSUqpw/q3KZ0zG6UHhx48pd7d0GylpJZN39r3FA4w4
tF/lkSkpf01xQB50ZQc6gdCP1I3r8ig9PShlVtruWZKUdK9ndKmUtJTJvNE5
0bcGzctk2KGdy1+LL3bZJl+zoqe6vgPtMroyVX/we2QV+VPl1Ph3SZOUdJ9n
dKmUBEVX3v1yot8W+qxwNwfkQbd0oDMJ/bgxJS0LbE1JYerJvFUZkaSkFp7R
pVISFLm3GZSURMqNHWjf0YMwJU2Lr8SctYr80/ZMhJnLr6br33ptSupkWzpp
xkFSEhRJSZ1LfWJ5i8s2+ZoVPdiNfXjloQI1plP/9YbK0+N04N/ursw+9SWP
b3UnOtmWTppxkJQERW5pOtf6UrvponzZJl+zoge7vQ9vbwDMjh+N0TSU//hI
Smoh7P/PHbcxz+hSKQmKpKTOSUns0EMfOrfQid3HYTEHZWrOPZW/3L7N70dq
o5ZbV7+Z1/V7hVZdVkFKgqLbxyl5k5TEdv30YT8t4Z223o6edQf7raCPv+eM
wdW2LF9u2sW3X08vvqoC+0hJnXvh+dwBeVxXfegkQ/9O/2xfSmpBSgKu5Aam
cy88nzsgj+uwDztsEi/X9ItPUlILYUqa50hJwOmkpM7VnM/nC/2Pxf9qcCVV
fjmzk/O5A/K4PvvwjK8w3fNjbZ6kXTIK1nJ7PnpaSlqJnhCKO1dK+vK7JChy
v9G5mvCyij/R1BOdP/36f+Lo5HzugDyu2z48eMLZ99ExNH1slF7j7fnoFSkp
nJnf3Vs/e8y8W3Pp7OGqGiUlQZGU1Ln8GTh8N5WSfiweM6USVifncwfkcZ33
4e7mrT4xPqk5PNbFyShYdTK2zO36dbr+rfCllPTHmaFVgcoIU//5pJQEjyQl
dW5rSqoPUJNv3D1a591YeeZZ3eRISRSl7o3vaEYuuVRMVxYrBqVnjpTUXo6m
pNVpREr6SElQ4fZLCXktUlLxXSnpAYboxq2NTCUm6CEZLe1KSeEiqbe2pSRm
n10paVp8xjhlv5UhJcGTzOcN+pQ//WbeDd+aPEt6k1G6cdMpaL7JGWXraGp1
99uVb6O2pKRo+dRb8/z8Wp78LCklFY6WBTalpFQyWpKS4JH6vL4w25qSVlEo
fCv1CZiU9DBjdWNla8faKBrpNhktbUxJqcKpt8KQJSX9/zL5aC6wKSUtg1Lq
irkvKElJ0Ln+rzUvVxNealJPND1JSQ82XDfWnIuG2yjOkr/v7dDGlLTvWZKU
FFE8SKSkLykJiga66LxTzbl3vnkI54Rv5cv3cD53QJ5i0G7MNHusm2ROMe5O
356S8mloqlhcSqqyLyVVfg4pJcGTDHoBeo99594Wf1LSWMbtRiell1t+vHN3
W/bblZLq05CUtF/NVXX1yeFyIqrzq2qUlARFo1+JHk9KYp/Ru3H09rPJM5LR
Uja8/HFbf53e8VYxIhlKay+8qkZJSVD0pKvSI6U+ubrFZZt8zYqe7QHd+IBN
IO/ic8uVvpvV7G9T5Q/s3iMmKemvSUlQ9NQr1OP9ttBnhfs4Gk/0gM50gnqe
6z94uYWU1C0p6UtKgqLHX6qeSkqi6DGd+ZgNebM3JKOlM57en+buzujL3Xvj
Fzf2g5QERbePU/LuPYGv5Bt5ysYer4TZk/rzrGOMK9WcPYBbSElQ5PrVuanj
7wZUZqhNG3u8EmbP68/nbdEjSUbQPykJilzLOtdnStr0pKlyMx2HK3ue9jVz
d2f8UW/t4evg0XL8YKtc0PEDX1ISFLlkdG7qLCWdfiPtCEz5dkwff3fuoP6j
XH0LL3DXth+sJDrdyPW9xPM4iuANbrmwUm8aJyUNcVM3kG/39PFnN+X87J+/
9bf+7x7+rtlTp4/fiw8wxzPHOYrgDdypdq63lDS3St5pTUoaxUtSUtORvqp2
XlFqYi6fOReFy0bXBTs4iuAN3N/eq9j/+ZQ03xV8p5dzlm+tFknVUJ+Slo2X
kvap2fV3hyMpqcqDU9KVAzyVZaKpJ1UsfCtaT5st4EUecBT5XRIUub+9VzFo
ZPLL8q1l0glzULRY+NbWlLTaipb99EA1u74YXlZ1/Dpzx8s7U1LlUVTst+sb
Nj0uJV3ZveGqixOfdCZKvbXcHCcrjnvAUSQlQZH723sFN7rr3TElwks4f0qk
pEwaSk1vTUnsULPra57yxKbDieLMXlJS/v589dY1p69iw6ZHpKRi518jzDLR
dDNVp6R8PbDPA44iKQmKbr8mvlz0Vnm5U6bqlFQToKSkftTs+sMpKVoyX6yX
lBSemqInqwvOYDUNq08x4Zyv8GV0vaenpOgWXWy59uXxn5oovqys8DLRXfke
F/f2NR6wXVISFD34JHaBCy4uU08pict8Tk5JYbGayu9PSXNvfNK3Ja2bV9Ow
3SlpNTM6HU4cTEnhJtwr1Z5Mn3+2fKcuX087XXXyjR7ZDw/YHCkJip537hpL
8fI9tUxJq+xT8yzJAXOWml1fl5L+uHQiJYXv1tScWss9PtmUdHvD6iNSWHgq
haDK+ospadlmWtPPoSf1yQO2RUqCIhfNe4V3XGGBrVEo81YqXqXWkvrGnWPm
uJpdv/FZUuXMaaBnSasCqQVvb9jxlJSp5EhKyh9jtKC3Mx7TOQ/YCikJih5z
yhpUsf8z+SWVfabgaVH9k6bKlFTTcvJqdn3LlLQpKHXxrzdE519wHNY0bNPX
7Vblv9XWLFifkiSjG+n2vGf0zwO2QkqCIlfSzuUjzHwvlPn1UKZ8WKA+Jc3N
u75PXqJ9SqoPStelpE1lrjl9FddSn5Jm7Z4lOaXfS+fX0Es9kJKgyCW1c/Up
pvVf6jhxCDVSEWH+eFOcmDkFZfIv70xJlabVVnWgJsVEk1H+GdPulHR3f7yX
zq+nr24nJUGRq2rn+k9Jczsv65OXqAgvl/3ZuTlnpaRUINqUkj4G4330fD19
dTspCYqkpM5NPalp6jXd8gbf7uzjz27NmSr+ge6v8GXmrdScYkr6uAW9Sabb
V6fH5Ul165k2rHbTgvuOjWX9pxxdox+io7f/IyVBBXe2g/ptoasKHU5nkZJG
URlhLvhb3Yff2CcvVPM5UurlkR132U4/t/LRj8/R2/+RkqCClDSoblPSx0F1
kvAT5hvd3Rldm7pMSZ9H3MgNpNjbq6GUmj6y3qZ7/NzKRz84R2//R0qCCm6B
OnfxzXDe1pY36hPoyt3j8hfRtt3SLW9T7OfpD9+vC8tHZ0YrD3dotJ5VgXmp
5eLRg2dVW1h5WFW4SOVRN/SROXTjv6QkKHIN7dzPvfOv//VvPfztOE4cXdAD
w/AClSnpE8SlTylcRPNIdNloTM6vPcxfmQJbF8kb+rAcuvFfUhIUuY/t3NAp
ad6Ec/sE2MowbO1gSspXkrlSr+aHL6MF6kNQZcmarci3fCxDN/5LSoIiKalz
D0hJH4cZadFPwpcv8x+VU0/vNVWfkj7Z3ygtC4RPbYrrjRZLhZ1MUqsPR5k6
84Y+IIduPFDJjUfnnpGS5m05pU94mMytWn6arfReO5tS0mfjUb1KLpXVftKJ
JprLogV2PEuqNPTROHTjgUpS0r2K/f+klFSzvbzQjpTk0dJuOq2R4pk88+ym
5kKwLBxWm6pkNX/5Mj8drTwqukhFh419KA7deKCSO417rS4x0QL55PL1nV7O
Wb4VLb+ceVlKWm41fE3bU1LqJTV0Wgtj9WpmTF1W51g9tjJ047/8LgmKpKR7
TbFPBVcFMrFlFX+iqSc6fznz+pT0ceCxsPpcep6ZL/B5xI3KXXTd6cbqUinp
oKEb/yUlQZGb1XtFO3+5U1IRJpyfSknFObekpMzm8zapUVAs4Pg5Qu+dq7f+
LA6Q6CcPp6y0ss7eeuxtpCQoesmdxvSr1PzQBSUzrf1sSUmVmairlJTpBN4j
NQryBYpvUaT3TtRJZ1YOnB503rzHk5Kg6PH3qJ1v4KptYWsfn5Ki/cCrSEk3
0oFn6aQnpSQqSUlQ1HmIOGKITZsfGGWeK52ekvIvb0lJn+37K/Wo7hbtuuXx
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
AKBU/+YbAADAD/cbK4B6rw==
                   "], {{0, 761}, {1122, 0}}, {0, 
                   255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}]}, 
                Dynamic[$CellContext`i58$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->Automatic,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i58$$, \
$CellContext`i58$1096135$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 15, 1}, 15, 1.]}], 
         
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{851., {408.1044921875, 413.3955078125}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->"Out[311]=",
 CellID->1509656058]
}, Open  ]],

Cell["\<\
We can set the ResultsFormat to \"Movie\" to output a movie version:\
\>", "MathCaption",
 CellID->596901522],

Cell[BoxData[
 RowBox[{"KEGGPathwayVisual", "[", 
  RowBox[{"\"\<path:hsa04662\>\"", ",", 
   RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Movie\>\""}], ",", 
   RowBox[{"MemberSet", "\[Rule]", " ", "membersBCellReceptor"}], ",", 
   RowBox[{"Intensities", "\[Rule]", " ", "intensitiesAll"}]}], 
  "]"}]], "Input",
 CellLabel->"In[232]:=",
 CellID->1227765117]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Tutorials"
}], "RelatedTutorialsSection",
 WholeCellGroupOpener->True,
 CellID->415694126],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[ButtonBox["MathIOmica Dynamic Transcriptome",
 BaseStyle->"Link",
 ButtonData->
  "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"]], \
"RelatedTutorials",
 CellID->795520170],

Cell[TextData[ButtonBox["MathIOmica Overview",
 BaseStyle->"Link",
 ButtonData->
  "paclet:MathIOmica/tutorial/MathIOmicaOverview"]], "RelatedTutorials",
 CellID->1258435320],

Cell[TextData[ButtonBox["MathIOmica Guide",
 BaseStyle->"Link",
 ButtonData->"paclet:MathIOmica/guide/MathIOmicaGuide"]], "RelatedTutorials",
 CellID->1425023577]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"MathIOmica: Omics Analysis Tutorial",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:MathIOmica/guide/MathIOmica", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2020, 7, 13, 11, 33, 11.507169}", 
    "history" -> {"1.0", "", "", ""}, "context" -> "MathIOmica`", 
    "keywords" -> {"MathIOmica"}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Math I Omica Package Tutorial", "language" -> "en", "paclet" -> 
    "MathIOmica Package", "status" -> "None", "summary" -> 
    "MathIOmica is an omics analysis package designed to facilitate method \
development for the analysis of multiple omics in Mathematica, particularly \
for dynamics (time series/longitudinal data). This extensive tutorial follows \
the analysis of multiple dynamic omics data (transcriptomics, proteomics, and \
metabolomics from human samples). Various MathIOmica functions are introduced \
in the tutorial, including additional discussion of related functionality. We \
should note that the approach methods are simply an illustration of \
MathIOmica functionality, and should not be considered as a definitive \
approach. Additionally, certain details are included to illustrate common \
complications (e.g. renaming samples, combining datasets, transforming \
accessions from one database to another, dealing with replicates and Missing \
data, etc.). After a brief discussion of data in MathIOmica, each example \
data (transcriptome, proteome and metabolome) are imported and preprocessed. \
Next a simulation is carried out to obtain datasets for each omics used to \
assess statistical significance cutoffs. The datasets are combined, and \
classified for time series patterns, followed by clustering. The clusters are \
visualized, and biological annotation of Gene Ontology (GO) and pathway \
analysis (KEGG: Kyoto Encyclopedia of Genes and Genomes) are finally \
considered. N.B.1 For a more streamlined/simple example with less discussion \
please check out the tutorial on MathIOmica Dynamic Transcriptome.", 
    "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$77001, "title" -> 
    "MathIOmica: Omics Analysis Tutorial", "titlemodifier" -> "", 
    "windowtitle" -> "MathIOmica: Omics Analysis Tutorial", "type" -> 
    "Tutorial", "uri" -> "MathIOmica/tutorial/MathIOmicaTutorial", 
    "WorkflowDockedCell" -> ""}, "SearchTextTranslated" -> ""},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "12.1 for Mac OS X x86 (64-bit) (June 19, 2020)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[1766092, 43266, 787345, 12914, 70, "Output",ExpressionUUID->"c6e4aadd-f4ee-4175-b6de-9a069ad1d86b",
   CellTags->"RasterizedOutput",
   CellID->664801128],
  Cell[2918577, 64103, 474110, 7779, 70, "Output",ExpressionUUID->"7fa4817f-3912-4861-871b-8874e97ef04d",
   CellTags->"RasterizedOutput",
   CellID->300455873]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 3966373, 81434}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[607, 21, 8932, 185, 70, "AnchorBarGrid",ExpressionUUID->"cf2c2408-dada-4cf4-bbb1-f048b670fd82",
 CellID->1],
Cell[CellGroupData[{
Cell[9564, 210, 72, 1, 70, "Title",ExpressionUUID->"2e92b317-6a2c-48bc-ba29-b3f7d6bc2332",
 CellID->509267359],
Cell[9639, 213, 47230, 837, 70, "TutorialJumpBox",ExpressionUUID->"6729e269-a64f-49ff-9ce8-220983d8f115"],
Cell[56872, 1052, 898, 14, 70, "Text",ExpressionUUID->"6278c44b-be04-4f1a-ab40-c7a7ac7ce791",
 CellID->2044157074],
Cell[57773, 1068, 573, 10, 70, "Text",ExpressionUUID->"1caf4863-0be9-49e7-b4d2-94868a144da7",
 CellID->985017158],
Cell[58349, 1080, 333, 9, 70, "Text",ExpressionUUID->"c052a847-89cb-4bf8-9927-81c71d4c806d",
 CellID->429607656],
Cell[58685, 1091, 677, 21, 70, "Text",ExpressionUUID->"139b089f-5fca-4917-829d-b3783b640390",
 CellID->54176507],
Cell[CellGroupData[{
Cell[59387, 1116, 70, 1, 70, "Section",ExpressionUUID->"a829a38b-b495-457f-894d-d2da007eda34",
 CellID->2133290847],
Cell[59460, 1119, 339, 10, 70, "Text",ExpressionUUID->"1503592e-88ff-427a-af6f-300ae4433e40",
 CellID->1534169418],
Cell[59802, 1131, 67, 1, 70, "MathCaption",ExpressionUUID->"1d0cad65-dd4f-416b-9ee8-d91d4c210b38",
 CellID->1217948648],
Cell[59872, 1134, 98, 3, 70, "Input",ExpressionUUID->"7d9c40a7-78a6-4165-92e7-d94a4a5c2b83",
 CellID->262742254],
Cell[59973, 1139, 75, 1, 70, "MathCaption",ExpressionUUID->"868356ce-e993-4cca-84e0-c4cd4e1ee0fd",
 CellID->1869508656],
Cell[60051, 1142, 119, 3, 70, "Input",ExpressionUUID->"82f9da69-341a-4095-b07b-be09f0b2a6ac",
 CellID->998742135]
}, Open  ]],
Cell[CellGroupData[{
Cell[60207, 1150, 57, 1, 70, "Section",ExpressionUUID->"e4a83665-b129-43c7-8ad5-90c45009963b",
 CellID->671613477],
Cell[60267, 1153, 540, 11, 70, "Text",ExpressionUUID->"0340a410-c566-49ef-ab12-231a80a6df15",
 CellID->1313645745],
Cell[CellGroupData[{
Cell[60832, 1168, 66, 1, 70, "Subsection",ExpressionUUID->"b8e3296a-92ff-4f89-b728-9bc66048f06f",
 CellID->501197291],
Cell[60901, 1171, 521, 13, 70, "Text",ExpressionUUID->"cee9fd20-a931-4e41-8c51-eb81073c2ea9",
 CellID->1179683263],
Cell[CellGroupData[{
Cell[61447, 1188, 66, 1, 70, "Subsubsection",ExpressionUUID->"2f29130f-1894-4be3-84ac-eb9a7a9e7ceb",
 CellID->929984066],
Cell[61516, 1191, 847, 26, 70, "Text",ExpressionUUID->"21df245d-345b-486b-ad4d-cffeca1e80b3",
 CellID->1165527708],
Cell[62366, 1219, 315, 10, 70, "Text",ExpressionUUID->"b56d21ae-15e2-43ac-9dd9-158ab8507d52",
 CellID->1597287192],
Cell[62684, 1231, 168, 6, 70, "MathCaption",ExpressionUUID->"f0578726-0a6b-4456-b421-063ea70b8d1d",
 CellID->174991658],
Cell[62855, 1239, 7316, 207, 70, "Text",ExpressionUUID->"1563a994-1d04-45ae-b25c-8e0fc85ec98e",
 CellID->1192006303],
Cell[70174, 1448, 717, 21, 70, "Text",ExpressionUUID->"4f4e1cf7-85c6-4053-85bd-448a7d9fe86b",
 CellID->2001356434],
Cell[70894, 1471, 278, 6, 70, "MathCaption",ExpressionUUID->"c979b705-6554-4f7e-9e71-19275a2d8e90",
 CellID->299944951],
Cell[71175, 1479, 3483, 95, 70, "Input",ExpressionUUID->"180b1117-ac85-4395-84a2-80ef7cdaa7bb",
 CellID->1030671948],
Cell[74661, 1576, 248, 7, 70, "Text",ExpressionUUID->"71adb287-5af7-478c-957a-92237985d326",
 CellID->1097212187]
}, Open  ]],
Cell[CellGroupData[{
Cell[74946, 1588, 86, 1, 70, "Subsubsection",ExpressionUUID->"d4c5e54a-e543-43b5-b140-9b008d9fb5c8",
 CellID->1010514183],
Cell[75035, 1591, 292, 8, 70, "Text",ExpressionUUID->"6fe52a1a-5f7b-4e53-88a5-ac29b48937b1",
 CellID->1276400541],
Cell[75330, 1601, 381, 11, 70, "Text",ExpressionUUID->"5d21fded-eb63-47b0-9465-f646b053855c",
 CellID->200159297],
Cell[75714, 1614, 471, 15, 70, "Text",ExpressionUUID->"543e5e5f-9a5d-40b8-a426-39649a8eaaaa",
 CellID->471195666],
Cell[76188, 1631, 718, 24, 70, "Text",ExpressionUUID->"7728b130-9046-4525-a9a0-860e0a5ad0c6",
 CellID->1897113300],
Cell[76909, 1657, 5414, 147, 70, "DefinitionBox",ExpressionUUID->"9b7415c6-2476-4bd4-a093-43697ee02200",
 CellID->953451491],
Cell[82326, 1806, 196, 7, 70, "Caption",ExpressionUUID->"f4806be0-e8a6-4547-96d5-da773ff54749",
 CellID->7357]
}, Open  ]],
Cell[CellGroupData[{
Cell[82559, 1818, 75, 1, 70, "Subsubsection",ExpressionUUID->"47b6a5e3-75d0-4149-8218-c421b12c10ec",
 CellID->1310432575],
Cell[82637, 1821, 548, 17, 70, "Text",ExpressionUUID->"ac25af01-4c43-4d34-af85-16841b174dfe",
 CellID->1202669251],
Cell[83188, 1840, 8621, 256, 70, "DefinitionBox",ExpressionUUID->"63543727-fa7f-4e7b-883d-3a59547fd0f3",
 CellID->438464085],
Cell[91812, 2098, 196, 7, 70, "Caption",ExpressionUUID->"5f496aec-5f0a-4a1c-ae95-2cc922cd62c0",
 CellID->1249483738]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92057, 2111, 55, 1, 70, "Subsection",ExpressionUUID->"906f1065-3aee-490a-981f-2bc8afc9a9cd",
 CellID->490101258],
Cell[92115, 2114, 363, 12, 70, "Text",ExpressionUUID->"faec00d3-58eb-4bba-b07c-2305a0cb9e07",
 CellID->249980817],
Cell[92481, 2128, 115, 3, 70, "MathCaption",ExpressionUUID->"92b0f8ea-990d-4b9b-b1ca-4fbd27ab6b55",
 CellID->2139419895],
Cell[92599, 2133, 166, 5, 70, "Input",ExpressionUUID->"92a00481-4dfd-4c91-8cf5-ca0eb469d03b",
 CellID->1911473544],
Cell[92768, 2140, 545, 16, 70, "Text",ExpressionUUID->"c272fec1-8722-4f0e-b52c-f9067121f2fd",
 CellID->1570546560],
Cell[93316, 2158, 12167, 341, 70, "DefinitionBox",ExpressionUUID->"ceb0d672-22b9-4a16-b413-206f091b15b2",
 CellID->1722327182],
Cell[105486, 2501, 589, 20, 70, "Caption",ExpressionUUID->"44cb8f48-cd65-4fa7-b320-777dfccbb7e9",
 CellID->231225297],
Cell[106078, 2523, 127, 4, 70, "Text",ExpressionUUID->"d3b9213f-60f4-4645-a1af-46514c8ba8f7",
 CellID->1540904390],
Cell[106208, 2529, 3157, 86, 70, "DefinitionBox",ExpressionUUID->"520035b3-0586-4f54-a906-4de89f05e6b7",
 CellID->312091046],
Cell[109368, 2617, 583, 19, 70, "Caption",ExpressionUUID->"b0a54028-bc6c-4d5f-846e-7c739828443b",
 CellID->1159144148]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110000, 2642, 57, 1, 70, "Section",ExpressionUUID->"c225dff9-357c-41fe-876a-d6e135977bb6",
 CellID->540567276],
Cell[110060, 2645, 175, 4, 70, "Text",ExpressionUUID->"130a4a3d-c9f8-4f43-870d-127ab5ec470b",
 CellID->1827655092],
Cell[CellGroupData[{
Cell[110260, 2653, 82, 1, 70, "Subsection",ExpressionUUID->"18d20c10-99c3-4e1a-9010-5895b7a06480",
 CellID->257268298],
Cell[110345, 2656, 985, 35, 70, "Text",ExpressionUUID->"38b1c61c-d753-41a3-a26f-6b2529e97a30",
 CellID->1539574452],
Cell[111333, 2693, 187, 6, 70, "MathCaption",ExpressionUUID->"1ae47128-2622-46d2-af70-3b41a8dcb66c",
 CellID->787376419],
Cell[CellGroupData[{
Cell[111545, 2703, 286, 9, 70, "Input",ExpressionUUID->"78c5b0c8-002d-48b4-a24d-94c0353e18f6",
 CellID->641241319],
Cell[111834, 2714, 11477, 295, 70, "Output",ExpressionUUID->"1382b0b8-dbfa-43b2-9a23-35018deac242",
 CellID->76837286]
}, Open  ]],
Cell[123326, 3012, 266, 7, 70, "MathCaption",ExpressionUUID->"095d8780-112b-4a68-a4f5-c2583b674813",
 CellID->546537213],
Cell[CellGroupData[{
Cell[123617, 3023, 137, 4, 70, "Input",ExpressionUUID->"307870de-02db-4320-a1c6-f4b48ffaa401",
 CellID->863380672],
Cell[123757, 3029, 396, 8, 70, "Output",ExpressionUUID->"1bac95ea-c7cf-4a9e-a582-424a9d1dc51b",
 CellID->1272316944]
}, Open  ]],
Cell[124168, 3040, 241, 5, 70, "Text",ExpressionUUID->"62922c6c-33a8-4300-87eb-29b13c9da266",
 CellID->1566749700],
Cell[CellGroupData[{
Cell[124434, 3049, 142, 4, 70, "Input",ExpressionUUID->"761a21f8-11de-492f-9f41-36e2ccc9df36",
 CellID->908486935],
Cell[124579, 3055, 395, 8, 70, "Output",ExpressionUUID->"14505500-55d7-414a-83e7-663dbeff5e14",
 CellID->535902783]
}, Open  ]],
Cell[124989, 3066, 304, 10, 70, "MathCaption",ExpressionUUID->"c7289291-6132-4262-8fc2-d38f8f306f64",
 CellID->392276805],
Cell[CellGroupData[{
Cell[125318, 3080, 225, 8, 70, "Input",ExpressionUUID->"d132a4b0-5f42-4077-82a1-4ceee0d3d88a",
 CellID->221465345],
Cell[125546, 3090, 604, 19, 70, "Output",ExpressionUUID->"cdeda1bc-6a2c-425e-8b2d-57b4886be097",
 CellID->29914394]
}, Open  ]],
Cell[126165, 3112, 775, 19, 70, "Text",ExpressionUUID->"8f3185ca-e7a6-44fc-8b46-87d2199298fb",
 CellID->464982744],
Cell[126943, 3133, 196, 4, 70, "MathCaption",ExpressionUUID->"0bdafffa-096c-4695-b163-2d198fcd61ea",
 CellID->1833142640],
Cell[CellGroupData[{
Cell[127164, 3141, 267, 9, 70, "Input",ExpressionUUID->"e42a0dc8-ad75-4cb0-a930-77f8c94431ab",
 CellID->1827950618],
Cell[127434, 3152, 2682, 80, 70, "Output",ExpressionUUID->"7d32514b-240b-45bf-8481-ab4dfbea71e6",
 CellID->679977437]
}, Open  ]],
Cell[130131, 3235, 164, 4, 70, "Text",ExpressionUUID->"eb317ce3-a9b1-4c07-b6ac-65df2132f447",
 CellID->1488223786],
Cell[130298, 3241, 193, 4, 70, "MathCaption",ExpressionUUID->"e7100341-fdeb-4cdc-8369-346d5cf5acd9",
 CellID->1609229737],
Cell[CellGroupData[{
Cell[130516, 3249, 432, 14, 70, "Input",ExpressionUUID->"59d89c91-75b0-418f-9ede-e22726706ed0",
 CellID->915139441],
Cell[130951, 3265, 9607, 274, 70, "Output",ExpressionUUID->"e7b9cc5b-233d-4b4e-ae53-a2789f918baf",
 CellID->794006111]
}, Open  ]],
Cell[140573, 3542, 69, 1, 70, "MathCaption",ExpressionUUID->"3bd9818e-9762-44e9-8534-17277891a024",
 CellID->1516242184],
Cell[CellGroupData[{
Cell[140667, 3547, 458, 15, 70, "Input",ExpressionUUID->"01d8534b-06b5-42f4-90a2-392b3430b776",
 CellID->1441431186],
Cell[141128, 3564, 9607, 274, 70, "Output",ExpressionUUID->"a133309a-2af8-4cd2-a4ff-e7be33684a6b",
 CellID->702184882]
}, Open  ]],
Cell[150750, 3841, 247, 5, 70, "MathCaption",ExpressionUUID->"27068011-3d39-45a7-b5ab-d74a94db546e",
 CellID->1478232418],
Cell[151000, 3848, 78, 2, 70, "WolframAlphaLong",ExpressionUUID->"aabd0791-e1da-4227-9601-498e65b569c2",
 CellID->413937183],
Cell[151081, 3852, 66, 1, 70, "Text",ExpressionUUID->"209a6ad1-d428-4533-ad35-8b41d963122b",
 CellID->90413432],
Cell[151150, 3855, 196806, 3234, 70, "Text",ExpressionUUID->"8d909c4c-5c53-4f05-9a7d-e9e5e955371f",
 CellID->984259520]
}, Open  ]],
Cell[CellGroupData[{
Cell[347993, 7094, 78, 1, 70, "Subsection",ExpressionUUID->"bbffb906-8af7-44f2-b724-b8a27e026fe0",
 CellID->964105434],
Cell[348074, 7097, 224, 5, 70, "Text",ExpressionUUID->"7ae7094c-c5e5-445a-a353-6f1e3d72eb34",
 CellID->1926312606],
Cell[CellGroupData[{
Cell[348323, 7106, 82, 1, 70, "Subsubsection",ExpressionUUID->"6fea57f7-b8dc-4e9e-9ff5-192bf6aebaac",
 CellID->433330108],
Cell[CellGroupData[{
Cell[348430, 7111, 77, 1, 70, "Subsubsubsection",ExpressionUUID->"8dfbb9a0-13ab-43f0-866c-3bd0320423a6",
 CellID->62840614],
Cell[348510, 7114, 257, 5, 70, "Text",ExpressionUUID->"fc019c90-6d53-4e81-afd9-dc4163073cbf",
 CellID->1020016945],
Cell[348770, 7121, 118, 3, 70, "MathCaption",ExpressionUUID->"8cd06508-a471-41d5-ab57-16146395e17b",
 CellID->381670302],
Cell[348891, 7126, 1108, 22, 70, "Input",ExpressionUUID->"22ec94df-ab35-4549-83af-4a8c5570af02",
 CellID->199112125],
Cell[350002, 7150, 184, 7, 70, "MathCaption",ExpressionUUID->"b5f4236c-a024-4635-b3b3-6ecd53ce9c2e",
 CellID->1332666250],
Cell[CellGroupData[{
Cell[350211, 7161, 185, 5, 70, "Input",ExpressionUUID->"6af7d416-299a-42a9-8a23-9798976f70dd",
 CellID->2014709187],
Cell[350399, 7168, 11415, 294, 70, "Output",ExpressionUUID->"d76ed6bd-4839-4eff-9452-92721a1a0fdc",
 CellID->2120249074]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[361863, 7468, 71, 1, 70, "Subsubsubsection",ExpressionUUID->"7415c36d-9c73-4f3f-a606-25c2d461ebd6",
 CellID->1747728821],
Cell[361937, 7471, 416, 13, 70, "DefinitionBox",ExpressionUUID->"b4dc1995-5808-435c-b947-a75ce08a0a41",
 CellID->818482745],
Cell[362356, 7486, 477, 15, 70, "Caption",ExpressionUUID->"baad25a8-289b-4e2d-af5d-8c9383f1b8fa",
 CellID->1606736180],
Cell[362836, 7503, 379, 11, 70, "MathCaption",ExpressionUUID->"a333a795-25d5-4dba-b651-7702a686966b",
 CellID->1093504481],
Cell[CellGroupData[{
Cell[363240, 7518, 298, 7, 70, "Input",ExpressionUUID->"907a05a8-b098-43e7-b2fd-eb59a680ca51",
 CellID->364761141],
Cell[363541, 7527, 11111, 287, 70, "Output",ExpressionUUID->"a602101b-e94c-4074-8d06-0e4c7ace01bb",
 CellID->2073287215]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[374701, 7820, 75, 1, 70, "Subsubsubsection",ExpressionUUID->"e78dd6c7-39ec-421e-b936-825a0b21b78c",
 CellID->1673762423],
Cell[374779, 7823, 296, 8, 70, "Text",ExpressionUUID->"41462d5c-a12b-4666-8219-7517dbd696e8",
 CellID->529597330],
Cell[375078, 7833, 654, 20, 70, "DefinitionBox",ExpressionUUID->"d7cbc3d6-356c-40d2-8133-4356223ff34d",
 CellID->1118958870],
Cell[375735, 7855, 260, 9, 70, "Caption",ExpressionUUID->"0a338b80-f2e9-4754-abf7-41fad56a585d",
 CellID->827431311],
Cell[375998, 7866, 1220, 33, 70, "DefinitionBox3Col",ExpressionUUID->"f144100f-a801-4467-a7a3-63fa913a0c52",
 CellID->29072],
Cell[377221, 7901, 249, 10, 70, "Caption",ExpressionUUID->"5a2863d4-bf36-4629-a55b-07b8c6a7a5c4",
 CellID->956870455],
Cell[377473, 7913, 366, 14, 70, "MathCaption",ExpressionUUID->"92dde7d8-8a54-43a6-913e-c12412821333",
 CellID->1372190648],
Cell[CellGroupData[{
Cell[377864, 7931, 183, 5, 70, "Input",ExpressionUUID->"24ce7ca5-28d3-42bf-8e7d-4ab271fd67b7",
 CellID->581335803],
Cell[378050, 7938, 11278, 290, 70, "Output",ExpressionUUID->"7ef3928a-5dfe-470f-89bb-9a426643e201",
 CellID->1591346998]
}, Open  ]],
Cell[389343, 8231, 295, 10, 70, "MathCaption",ExpressionUUID->"bbed783f-8426-4da2-9cd8-3df48f5552c3",
 CellID->351193473],
Cell[CellGroupData[{
Cell[389663, 8245, 244, 6, 70, "Input",ExpressionUUID->"9bb01fd0-8a34-4f39-8802-e7b66dfa288c",
 CellID->1223638755],
Cell[389910, 8253, 11278, 290, 70, "Output",ExpressionUUID->"00e44671-4585-4c8e-8a34-8001250d4020",
 CellID->1007655648]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[401237, 8549, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"0a710bda-b7a6-432f-b577-34bba4076d7a",
 CellID->1524282659],
Cell[401300, 8552, 486, 15, 70, "Text",ExpressionUUID->"71dffd8f-be01-4b13-b6a0-2bbdbc595ee9",
 CellID->222118196],
Cell[401789, 8569, 620, 18, 70, "DefinitionBox",ExpressionUUID->"2ea691b6-8d7f-4964-ba1b-be68b14cb7ea",
 CellID->1425592616],
Cell[402412, 8589, 450, 14, 70, "Caption",ExpressionUUID->"4899fa72-e365-4a41-a4a8-2e852652bde1",
 CellID->460047533],
Cell[402865, 8605, 857, 24, 70, "DefinitionBox3Col",ExpressionUUID->"6ae5f7ff-6bda-4911-8fc5-e673bcf41fc8",
 CellID->2081738160],
Cell[403725, 8631, 253, 10, 70, "Caption",ExpressionUUID->"e50ce54e-2ee0-4081-96e7-8dc91969da58",
 CellID->969678196],
Cell[403981, 8643, 139, 4, 70, "Text",ExpressionUUID->"1d0505d5-2607-4919-bc4e-78f9bccdfc17",
 CellID->2046575969],
Cell[404123, 8649, 175, 4, 70, "MathCaption",ExpressionUUID->"4692456a-d3e8-4d6a-8bc2-088dc8a96d88",
 CellID->132360816],
Cell[CellGroupData[{
Cell[404323, 8657, 274, 8, 70, "Input",ExpressionUUID->"8d08246a-982a-4803-a7f6-1748be27ec75",
 CellID->1942659867],
Cell[CellGroupData[{
Cell[404622, 8669, 2522, 70, 70, "Print",ExpressionUUID->"4ff35e13-bfeb-491a-a4ec-1b06f64dede1",
 CellID->1221241714],
Cell[407147, 8741, 322, 9, 70, "Print",ExpressionUUID->"0ec6a46c-dd72-470e-8fe6-f0ec83b8c941",
 CellID->1908272819],
Cell[407472, 8752, 20218, 423, 70, "Print",ExpressionUUID->"a0d102a6-9571-4b20-84b9-7c3d992bd81b",
 CellID->1820484635]
}, Open  ]],
Cell[427705, 9178, 11278, 290, 70, "Output",ExpressionUUID->"b09ab868-50e7-434d-812b-d606a075b66d",
 CellID->1685741636]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[439044, 9475, 77, 1, 70, "Subsubsection",ExpressionUUID->"417d4e24-8ffb-4598-9903-62633e0dc4e9",
 CellID->267016150],
Cell[439124, 9478, 767, 24, 70, "Text",ExpressionUUID->"6691d2d4-46a1-4fdf-9746-0ee5a961db11",
 CellID->94668970],
Cell[439894, 9504, 664, 19, 70, "DefinitionBox",ExpressionUUID->"562832e9-04eb-4107-ab1e-9c4e5e23176a",
 CellID->1824801338],
Cell[440561, 9525, 299, 10, 70, "MathCaption",ExpressionUUID->"9cb31027-a311-41c3-ac57-b2ef0bf947c3",
 CellID->2019621014],
Cell[CellGroupData[{
Cell[440885, 9539, 150, 4, 70, "Input",ExpressionUUID->"22fdd5dd-d670-480d-b14d-d4439c28bd20",
 CellID->643857816],
Cell[441038, 9545, 287, 7, 70, "Output",ExpressionUUID->"fe8b6a7a-75c0-49e8-9581-6954da823603",
 CellID->15810684]
}, Open  ]],
Cell[441340, 9555, 142, 4, 70, "MathCaption",ExpressionUUID->"9ba8792f-0ee1-4af4-adc6-02eb1ffe10de",
 CellID->148216279],
Cell[CellGroupData[{
Cell[441507, 9563, 159, 4, 70, "Input",ExpressionUUID->"daa1cacd-03f8-4096-a34c-5d691aa589a6",
 CellID->2137454280],
Cell[441669, 9569, 12668, 311, 70, "Output",ExpressionUUID->"d09ede34-ee8e-4a39-95c8-8938d68bf97f",
 CellID->344747750]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[454386, 9886, 120, 3, 70, "Subsubsection",ExpressionUUID->"1d076c13-6212-42c1-83e9-2d786123910d",
 CellID->1837977213],
Cell[454509, 9891, 144, 4, 70, "Text",ExpressionUUID->"4bcf9be8-f97d-4235-a926-ffa57af3fc99",
 CellID->1135789927],
Cell[454656, 9897, 617, 19, 70, "DefinitionBox",ExpressionUUID->"9f0d5103-ff9f-486b-a84b-27f090fe9433",
 CellID->1719166110],
Cell[455276, 9918, 90, 1, 70, "Caption",ExpressionUUID->"ae014ba0-b452-41f3-b3a8-75f431d13e91",
 CellID->1779824032],
Cell[455369, 9921, 286, 10, 70, "MathCaption",ExpressionUUID->"1b0846a2-8e99-42d5-be83-eb16fe72a800",
 CellID->1087636944],
Cell[CellGroupData[{
Cell[455680, 9935, 186, 5, 70, "Input",ExpressionUUID->"9dd16697-36be-48cc-ae9e-9ec7b621beff",
 CellID->533314544],
Cell[455869, 9942, 12636, 310, 70, "Output",ExpressionUUID->"c56d7c5b-c089-4ef1-af91-8f52870fcfbb",
 CellID->1534941352]
}, Open  ]],
Cell[468520, 10255, 392, 12, 70, "Text",ExpressionUUID->"ee686a27-11c1-467f-ba15-f38a47103152",
 CellID->440466924],
Cell[468915, 10269, 631, 18, 70, "DefinitionBox",ExpressionUUID->"bcda3e4e-82e9-4fe9-ae13-435b2e439fbf",
 CellID->1719094828],
Cell[469549, 10289, 121, 3, 70, "Caption",ExpressionUUID->"3db18f23-2d49-4e0c-b063-15be7597e672",
 CellID->581787458],
Cell[469673, 10294, 3661, 103, 70, "DefinitionBox3Col",ExpressionUUID->"61ae943d-cfbd-4ed3-84d7-efee562f89b0",
 CellID->1460313503],
Cell[473337, 10399, 275, 11, 70, "Caption",ExpressionUUID->"5b1a707b-f0f0-4330-9a1b-12d95001c479",
 CellID->2045927005],
Cell[473615, 10412, 171, 4, 70, "MathCaption",ExpressionUUID->"3ed0b18c-1e3b-454a-bed1-6d6c62b655f7",
 CellID->1398268181],
Cell[CellGroupData[{
Cell[473811, 10420, 235, 6, 70, "Input",ExpressionUUID->"a94f76d4-fdfd-4a92-a05a-99eda98b501e",
 CellID->779768946],
Cell[474049, 10428, 12823, 314, 70, "Output",ExpressionUUID->"b026b23c-5b0e-4b3f-a0cf-f353c6cabb6f",
 CellID->1779061158]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[486921, 10748, 106, 2, 70, "Subsubsection",ExpressionUUID->"6eb1758e-d2bd-4535-9e95-b6a8308a3cbc",
 CellID->384896847],
Cell[487030, 10752, 290, 10, 70, "MathCaption",ExpressionUUID->"0beb2ffd-bfd0-4305-a2e5-d652196dece7",
 CellID->1747726374],
Cell[CellGroupData[{
Cell[487345, 10766, 191, 5, 70, "Input",ExpressionUUID->"47115dbe-2ce0-4b3f-b670-a605db445506",
 CellID->755844152],
Cell[487539, 10773, 12848, 314, 70, "Output",ExpressionUUID->"df5a0f17-acde-4af2-b9a7-03e7bf2c4ac8",
 CellID->1063560421]
}, Open  ]],
Cell[500402, 11090, 342, 9, 70, "DefinitionBox",ExpressionUUID->"161dc05e-3474-4f03-911d-95638a01dfff",
 CellID->1164836919],
Cell[500747, 11101, 64, 1, 70, "Caption",ExpressionUUID->"c0127ec3-cd30-4e8c-b204-1a4daeee3467",
 CellID->953171581],
Cell[500814, 11104, 355, 12, 70, "MathCaption",ExpressionUUID->"9b8394b0-d085-4d3b-9b58-17f8a706525b",
 CellID->1883423327],
Cell[CellGroupData[{
Cell[501194, 11120, 172, 4, 70, "Input",ExpressionUUID->"22b9df7f-3f86-4652-8280-d6b18c0f2cf9",
 CellID->786900109],
Cell[501369, 11126, 258, 4, 70, "Print",ExpressionUUID->"88749426-631f-4083-a2a3-b6126e963763",
 CellID->1253250375],
Cell[501630, 11132, 9425, 242, 70, "Output",ExpressionUUID->"386e76f4-2a59-4b8a-89d4-1e27d0b30212",
 CellID->859442849]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[511116, 11381, 72, 1, 70, "Subsection",ExpressionUUID->"4fe6748d-d5ff-4005-adc6-ffbc40b69e3b",
 CellID->1956292219],
Cell[511191, 11384, 533, 9, 70, "Text",ExpressionUUID->"621a79a6-b949-4934-b37a-2f25357e977b",
 CellID->673780035],
Cell[CellGroupData[{
Cell[511749, 11397, 78, 1, 70, "Subsubsection",ExpressionUUID->"1aed2595-eb15-4d04-a6c0-6267ff2754cc",
 CellID->576856357],
Cell[511830, 11400, 263, 11, 70, "Text",ExpressionUUID->"d8f6e7f5-61c9-4868-82bc-754832c9c4be",
 CellID->1399228810],
Cell[512096, 11413, 592, 16, 70, "DefinitionBox",ExpressionUUID->"a361910f-f22d-4bd1-91fb-ff1f1e0111ac",
 CellID->1661281776],
Cell[512691, 11431, 166, 4, 70, "Caption",ExpressionUUID->"14b04716-ba85-4e85-8e43-f7d25be4cce2",
 CellID->2000128109],
Cell[512860, 11437, 74, 1, 70, "Text",ExpressionUUID->"4a3c4bff-c799-4559-bd98-f3f4a4e69cff",
 CellID->809854710],
Cell[CellGroupData[{
Cell[512959, 11442, 191, 5, 70, "Input",ExpressionUUID->"d1cbcf8f-e4ab-4a27-8619-d2b5c1b225a9",
 CellID->2018927283],
Cell[513153, 11449, 11572, 295, 70, "Output",ExpressionUUID->"2ceb5a51-fc51-482d-aa40-e1840c844097",
 CellID->1775673247]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[524774, 11750, 127, 3, 70, "Subsubsection",ExpressionUUID->"507aad10-fa0f-45ed-845d-3e74bca15d67",
 CellID->1483609541],
Cell[524904, 11755, 331, 11, 70, "MathCaption",ExpressionUUID->"0156e691-a5a9-4ba4-ade3-82e5a11faff5",
 CellID->214676973],
Cell[525238, 11768, 329, 9, 70, "Input",ExpressionUUID->"26c1a39d-d3cc-455a-840b-2fddfffdb090",
 CellID->303358251],
Cell[525570, 11779, 359, 14, 70, "MathCaption",ExpressionUUID->"20486930-02b2-410f-be87-7f5a1f362769",
 CellID->375344567],
Cell[525932, 11795, 224, 7, 70, "Input",ExpressionUUID->"ab0aa969-0e02-46b3-98a6-7f649b1438fc",
 CellID->1256666330],
Cell[526159, 11804, 296, 10, 70, "MathCaption",ExpressionUUID->"086b3325-996f-488e-a292-aa9d58a05688",
 CellID->1035495647],
Cell[526458, 11816, 285, 8, 70, "Input",ExpressionUUID->"47dff064-cb94-4371-b3b9-d46909e33d12",
 CellID->367863841],
Cell[526746, 11826, 173, 4, 70, "MathCaption",ExpressionUUID->"ff2c32cf-48da-4279-a7a9-926fdae93cce",
 CellID->61312748],
Cell[CellGroupData[{
Cell[526944, 11834, 292, 8, 70, "Input",ExpressionUUID->"bc2e65cd-196b-4a76-b2af-a0e4d614f5d4",
 CellID->1838688723],
Cell[CellGroupData[{
Cell[527261, 11846, 2526, 70, 70, "Print",ExpressionUUID->"ec05a4a7-bda8-4ecb-854b-e7162482ba4a",
 CellID->793810163],
Cell[529790, 11918, 323, 9, 70, "Print",ExpressionUUID->"69568983-39c8-41c6-b4c7-a5a5d7eb7649",
 CellID->1398994377],
Cell[530116, 11929, 20233, 423, 70, "Print",ExpressionUUID->"87be5f05-0128-47d8-9e41-e682471e0b3f",
 CellID->100043236]
}, Open  ]],
Cell[550364, 12355, 11071, 283, 70, "Output",ExpressionUUID->"1929edd9-426c-4000-9ea2-29b7acf0e864",
 CellID->1866962899]
}, Open  ]],
Cell[561450, 12641, 159, 4, 70, "MathCaption",ExpressionUUID->"df7ee52b-f024-467c-b7f9-8a1f1ea080b6",
 CellID->274183705],
Cell[CellGroupData[{
Cell[561634, 12649, 177, 4, 70, "Input",ExpressionUUID->"edfb47fe-c9e8-41ad-a165-efb502afb333",
 CellID->1853107120],
Cell[561814, 12655, 9519, 244, 70, "Output",ExpressionUUID->"00e40a24-35a3-46a7-aa6f-2f7692901ab3",
 CellID->1161877176]
}, Open  ]],
Cell[571348, 12902, 277, 10, 70, "MathCaption",ExpressionUUID->"eaf3e975-a4e0-4c1c-82a3-f3522e92ee8c",
 CellID->373642571],
Cell[CellGroupData[{
Cell[571650, 12916, 204, 5, 70, "Input",ExpressionUUID->"3d509d13-3784-4c79-9c51-3a1a31534419",
 CellID->568506969],
Cell[571857, 12923, 9551, 244, 70, "Output",ExpressionUUID->"3b49c2c2-41a0-4f67-8fee-3a4d134a1542",
 CellID->600894861]
}, Open  ]],
Cell[581423, 13170, 170, 4, 70, "MathCaption",ExpressionUUID->"c4d63d43-b28e-44c7-983d-741e2ca8dca8",
 CellID->369078912],
Cell[CellGroupData[{
Cell[581618, 13178, 254, 6, 70, "Input",ExpressionUUID->"ef5ca80b-2984-4087-9f14-39ef35d2f7dc",
 CellID->1176501448],
Cell[581875, 13186, 9552, 244, 70, "Output",ExpressionUUID->"5c837050-f5fa-4ce6-bf4c-4078a1f6a9df",
 CellID->1771820633]
}, Open  ]],
Cell[591442, 13433, 290, 10, 70, "MathCaption",ExpressionUUID->"a8261f33-5f32-4d0e-b18f-0c2450f33909",
 CellID->1458062219],
Cell[CellGroupData[{
Cell[591757, 13447, 209, 5, 70, "Input",ExpressionUUID->"39b55e48-ed45-4b54-bc67-ca114671d546",
 CellID->715818816],
Cell[591969, 13454, 9572, 245, 70, "Output",ExpressionUUID->"a21edffc-dc71-4057-8aa7-aa832a302a31",
 CellID->1492281749]
}, Open  ]],
Cell[601556, 13702, 354, 12, 70, "MathCaption",ExpressionUUID->"dafab09d-c910-4ee6-b881-cf1546e41df3",
 CellID->841142010],
Cell[CellGroupData[{
Cell[601935, 13718, 195, 6, 70, "Input",ExpressionUUID->"0d58e2d7-34e0-4246-b77f-52fc6ad91798",
 CellID->188913869],
Cell[602133, 13726, 258, 4, 70, "Print",ExpressionUUID->"e91a9e9f-385f-421a-908d-2414221c4971",
 CellID->1269750011],
Cell[602394, 13732, 9572, 245, 70, "Output",ExpressionUUID->"fccab841-8989-4b75-86b5-6c4b6493a819",
 CellID->1143434638]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[612027, 13984, 85, 1, 70, "Subsection",ExpressionUUID->"e6496fd0-baae-4815-9739-5fa0fc99b9ce",
 CellID->834625544],
Cell[612115, 13987, 403, 12, 70, "Text",ExpressionUUID->"e05d956d-651c-4a78-ba61-a3eb7bdc4fb2",
 CellID->1375671789],
Cell[612521, 14001, 3745, 105, 70, "DefinitionBox",ExpressionUUID->"6b536a09-4eef-48bd-abbf-88aeba84d5fe",
 CellID->628162865],
Cell[616269, 14108, 99, 1, 70, "Caption",ExpressionUUID->"2ead0439-1d58-4c10-817b-9f7076843f04",
 CellID->503663403],
Cell[616371, 14111, 7617, 188, 70, "DefinitionBox3Col",ExpressionUUID->"9b1e4339-3f63-4fca-9652-aebeec95b696",
 CellID->495990132],
Cell[623991, 14301, 281, 11, 70, "Caption",ExpressionUUID->"614687a7-6007-4730-a8f3-7939fc4a033d",
 CellID->1722114517],
Cell[624275, 14314, 1076, 20, 70, "Text",ExpressionUUID->"4132e610-f77d-4c63-bc5d-28297f216e97",
 CellID->1268036459],
Cell[625354, 14336, 3817, 82, 70, "DefinitionBox",ExpressionUUID->"cd54d117-711e-423f-866e-c3284515a01b",
 CellID->1644998689],
Cell[629174, 14420, 280, 11, 70, "Caption",ExpressionUUID->"697e5bfc-03d4-4ecc-8d12-ec5ad7819ee1",
 CellID->788494545],
Cell[629457, 14433, 387, 12, 70, "Text",ExpressionUUID->"86c8efbb-7055-48b3-92bc-74f98d42c9a0",
 CellID->1104163398],
Cell[629847, 14447, 1015, 26, 70, "DefinitionBox",ExpressionUUID->"c7d14a49-1bc7-4cf8-b751-dce70432e0af",
 CellID->219567939],
Cell[630865, 14475, 174, 4, 70, "Caption",ExpressionUUID->"e0086603-9743-455e-a537-1ccae09ff483",
 CellID->908945433],
Cell[631042, 14481, 1700, 41, 70, "DefinitionBox3Col",ExpressionUUID->"91b080f4-3da0-4837-b147-98872c05a747",
 CellID->1624929440],
Cell[632745, 14524, 266, 11, 70, "Caption",ExpressionUUID->"e2309aef-d68d-44b2-bd77-4691be2d99c4",
 CellID->639559181],
Cell[633014, 14537, 410, 12, 70, "Text",ExpressionUUID->"a9604fb7-382d-4c5a-bcd5-897c27b4ac66",
 CellID->67687095],
Cell[633427, 14551, 3820, 96, 70, "DefinitionBox",ExpressionUUID->"bafea1ed-ba26-41e6-86a1-218e8e0a9595",
 CellID->131328315],
Cell[637250, 14649, 358, 14, 70, "Caption",ExpressionUUID->"6568d893-9c64-47f7-85ee-c0005a1156cc",
 CellID->751094438],
Cell[637611, 14665, 1005, 32, 70, "Text",ExpressionUUID->"a7d1052f-9d79-49c4-abb9-d996b101a965",
 CellID->1062814029],
Cell[638619, 14699, 4220, 125, 70, "Text",ExpressionUUID->"4cec1c1d-29a8-406f-9e03-89c58bd19776",
 CellID->2093893304],
Cell[642842, 14826, 203, 5, 70, "MathCaption",ExpressionUUID->"3f1ffc79-6a33-4994-b2dc-fa40bfe7c426",
 CellID->1669899255],
Cell[CellGroupData[{
Cell[643070, 14835, 202, 6, 70, "Input",ExpressionUUID->"e8b9221d-a8cd-456d-9c27-461ba5cd46d4",
 CellID->532996142],
Cell[643275, 14843, 66, 1, 70, "Output",ExpressionUUID->"5f2663cb-b4e6-4712-b627-31d6f75e1114",
 CellID->177650624]
}, Open  ]],
Cell[643356, 14847, 145, 4, 70, "MathCaption",ExpressionUUID->"3de97b01-d45b-4d2f-9f13-853229816988",
 CellID->365627628],
Cell[CellGroupData[{
Cell[643526, 14855, 272, 7, 70, "Input",ExpressionUUID->"2d1b1193-e265-4ade-bb51-6644a20f9786",
 CellID->186560353],
Cell[643801, 14864, 434, 13, 70, "Output",ExpressionUUID->"340197e7-9e35-4455-af57-0b7007df24d6",
 CellID->811386742]
}, Open  ]],
Cell[644250, 14880, 130, 3, 70, "MathCaption",ExpressionUUID->"acaec322-5c02-4721-a6ea-86c5d985fe16",
 CellID->1987903082],
Cell[CellGroupData[{
Cell[644405, 14887, 339, 7, 70, "Input",ExpressionUUID->"ce0753f5-8620-4389-a1d7-b1d857aeabe2",
 CellID->136519148],
Cell[644747, 14896, 136, 2, 70, "Print",ExpressionUUID->"0d399cb9-fdf9-44f2-bda7-df292ab76520",
 CellID->1026543908],
Cell[644886, 14900, 10021, 257, 70, "Output",ExpressionUUID->"9c5e287a-1599-4391-b0b6-12d2f91337c3",
 CellID->755245404]
}, Open  ]],
Cell[654922, 15160, 657, 18, 70, "Text",ExpressionUUID->"f6f007bd-6b78-4c37-ba91-9581f0d97b4b",
 CellID->673783308],
Cell[655582, 15180, 4219, 125, 70, "Text",ExpressionUUID->"cbc94754-a60f-40fb-b251-966e56f89c39",
 CellID->594786925],
Cell[659804, 15307, 99, 1, 70, "MathCaption",ExpressionUUID->"1ebd5210-8206-48f4-b51a-c0ed025211a0",
 CellID->1134620377],
Cell[CellGroupData[{
Cell[659928, 15312, 119, 3, 70, "Input",ExpressionUUID->"1265ec35-75d9-4d9c-9237-5e5b4b1bd421",
 CellID->2057374526],
Cell[660050, 15317, 289, 6, 70, "Output",ExpressionUUID->"2c065555-0902-43c2-9154-4cae8ca4b675",
 CellID->568030100]
}, Open  ]],
Cell[660354, 15326, 91, 1, 70, "MathCaption",ExpressionUUID->"b2a5fb52-605a-4f7e-857d-493c74a2e5a1",
 CellID->172558847],
Cell[CellGroupData[{
Cell[660470, 15331, 176, 6, 70, "Input",ExpressionUUID->"0cf02157-f51e-4d3b-8245-a25a3a8200c8",
 CellID->1093618079],
Cell[660649, 15339, 603, 14, 70, "Output",ExpressionUUID->"9a0a6420-3bf1-415a-9e92-fa29e32e6c55",
 CellID->1781151258]
}, Open  ]],
Cell[661267, 15356, 103, 2, 70, "MathCaption",ExpressionUUID->"d9f1843d-078b-443b-bdf2-1d6c5d053572",
 CellID->47471690],
Cell[CellGroupData[{
Cell[661395, 15362, 182, 6, 70, "Input",ExpressionUUID->"a147dbe5-4fd5-41b3-8655-d2b3dbf42f11",
 CellID->1140260793],
Cell[661580, 15370, 9551, 236, 70, "Output",ExpressionUUID->"23617b37-7648-4899-a9a5-9d9d0b6e9c4f",
 CellID->384783444]
}, Open  ]],
Cell[671146, 15609, 349, 11, 70, "Text",ExpressionUUID->"849d745e-a7f3-4b7e-a997-f344978bb01e",
 CellID->1070903617],
Cell[671498, 15622, 3042, 83, 70, "DefinitionBox",ExpressionUUID->"e2ab3b51-6bc9-4abf-9aee-ebb1e9dd10cc",
 CellID->1990717933],
Cell[674543, 15707, 123, 3, 70, "Caption",ExpressionUUID->"4492f681-59ff-485d-8ac9-4bdb58272742",
 CellID->201079671],
Cell[674669, 15712, 2024, 50, 70, "DefinitionBox3Col",ExpressionUUID->"850fd4de-b3e9-4940-a12a-d1382c31a237",
 CellID->3905959],
Cell[676696, 15764, 250, 10, 70, "Caption",ExpressionUUID->"a08fe24e-02cb-4370-89ac-a7294fec1a8f",
 CellID->1222943503],
Cell[676949, 15776, 578, 19, 70, "MathCaption",ExpressionUUID->"7191f1fc-be8e-4333-91e0-099b5a3c3f80",
 CellID->661398041],
Cell[CellGroupData[{
Cell[677552, 15799, 272, 7, 70, "Input",ExpressionUUID->"a84ec245-bd61-4486-80fc-56b36b23e51a",
 CellID->741518215],
Cell[677827, 15808, 616, 12, 70, "Output",ExpressionUUID->"cd1cab1f-66db-499a-82bb-863d9187b214",
 CellID->1561171098]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[678504, 15827, 54, 1, 70, "Section",ExpressionUUID->"88923657-ea34-45e6-b8ed-f6f700b4690f",
 CellID->1387790784],
Cell[CellGroupData[{
Cell[678583, 15832, 78, 1, 70, "Subsection",ExpressionUUID->"a6e40e40-5f82-4582-bf21-9377f5ebaca6",
 CellID->1225055698],
Cell[678664, 15835, 976, 35, 70, "Text",ExpressionUUID->"bdd7ddb9-7405-4b02-8d60-f5a39779f460",
 CellID->72301240],
Cell[679643, 15872, 100, 1, 70, "MathCaption",ExpressionUUID->"f268abe8-8bd7-4dab-8e4a-b7d4c3f09f27",
 CellID->1419719176],
Cell[CellGroupData[{
Cell[679768, 15877, 295, 9, 70, "Input",ExpressionUUID->"94cfcbe5-4276-4370-bb34-7a79361de42b",
 CellID->458823941],
Cell[680066, 15888, 11059, 285, 70, "Output",ExpressionUUID->"1fb5b8b8-6182-46cf-b03f-280348e42d10",
 CellID->647445040]
}, Open  ]],
Cell[691140, 16176, 267, 7, 70, "MathCaption",ExpressionUUID->"1eeeb444-60cc-4d88-af27-1f17dec271d3",
 CellID->1754470356],
Cell[CellGroupData[{
Cell[691432, 16187, 142, 4, 70, "Input",ExpressionUUID->"778a98ac-e18e-4ea3-8e2b-ae70d7046d00",
 CellID->285316335],
Cell[691577, 16193, 355, 7, 70, "Output",ExpressionUUID->"cbf775e0-8f6d-406c-ac33-4f17f2c7d520",
 CellID->309147931]
}, Open  ]],
Cell[691947, 16203, 263, 5, 70, "Text",ExpressionUUID->"0d6c1ff6-d3a0-4f7d-8fd7-578f32db936b",
 CellID->460190071],
Cell[692213, 16210, 306, 10, 70, "MathCaption",ExpressionUUID->"73d9de40-7e3b-4646-9e5d-3ef97e818225",
 CellID->1259531385],
Cell[CellGroupData[{
Cell[692544, 16224, 229, 8, 70, "Input",ExpressionUUID->"febfe3b8-dc69-403f-bcd3-edaa472db232",
 CellID->1197679216],
Cell[692776, 16234, 511, 15, 70, "Output",ExpressionUUID->"255bfec2-18fe-4791-a55a-74547e30b89c",
 CellID->1086334224]
}, Open  ]],
Cell[693302, 16252, 815, 24, 70, "Text",ExpressionUUID->"6f6a5653-4392-421e-9c16-29f5ac412d38",
 CellID->1823731250],
Cell[694120, 16278, 453, 8, 70, "Text",ExpressionUUID->"726fd841-ede2-4a0e-a4ce-cd5e90ebc3a0",
 CellID->220886326],
Cell[CellGroupData[{
Cell[694598, 16290, 88, 1, 70, "Subsubsubsection",ExpressionUUID->"44c7f63b-8edf-4685-972e-1c9cd7bc19a2",
 CellID->237385776],
Cell[694689, 16293, 592, 19, 70, "Text",ExpressionUUID->"d1332e30-4f92-4d84-912e-d4fe7551c167",
 CellID->1605734052],
Cell[695284, 16314, 2640, 72, 70, "DefinitionBox",ExpressionUUID->"28b34a8e-5d85-4a74-bc8a-fe108b68b1de",
 CellID->730612315],
Cell[697927, 16388, 91, 1, 70, "Caption",ExpressionUUID->"d63f7f99-5677-4780-bd47-eb0efa89816c",
 CellID->69474757],
Cell[698021, 16391, 97, 1, 70, "MathCaption",ExpressionUUID->"a9f82329-eff7-4f49-a864-5277832e3247",
 CellID->1155116896],
Cell[CellGroupData[{
Cell[698143, 16396, 146, 4, 70, "Input",ExpressionUUID->"7df921b8-3dbd-4baf-9c24-7294f72918e9",
 CellID->797502192],
Cell[698292, 16402, 9802, 248, 70, "Output",ExpressionUUID->"99ee4cb8-24a0-409f-86a1-e9509e7ecda4",
 CellID->113335974]
}, Open  ]],
Cell[708109, 16653, 141, 4, 70, "MathCaption",ExpressionUUID->"77536b71-3d89-48e4-81c8-f467e281bb23",
 CellID->811349928],
Cell[CellGroupData[{
Cell[708275, 16661, 169, 5, 70, "Input",ExpressionUUID->"94b64905-3686-4662-b9d6-41772960a7d1",
 CellID->1984565093],
Cell[708447, 16668, 464, 10, 70, "Output",ExpressionUUID->"d49e24c9-01ab-4817-818d-5b44c3f6d881",
 CellID->19720129]
}, Open  ]],
Cell[708926, 16681, 201, 4, 70, "MathCaption",ExpressionUUID->"c1377280-0f29-4de8-8ad2-592bf7e891bb",
 CellID->589880236],
Cell[CellGroupData[{
Cell[709152, 16689, 369, 9, 70, "Input",ExpressionUUID->"54f1c235-8e1c-4e1d-8323-8034ea3eafc2",
 CellID->557131970],
Cell[709524, 16700, 429, 11, 70, "Output",ExpressionUUID->"68eb2dee-2ed4-47f0-b8ba-2d0ad200cc78",
 CellID->723726465]
}, Open  ]],
Cell[709968, 16714, 147, 4, 70, "Text",ExpressionUUID->"090458ec-7a35-4172-ab13-620b982ccff1",
 CellID->1398286274]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[710164, 16724, 70, 1, 70, "Subsection",ExpressionUUID->"3e662072-8828-4914-bcb2-aec9c414fc33",
 CellID->1281067914],
Cell[710237, 16727, 483, 8, 70, "Text",ExpressionUUID->"60a5351d-d12f-4d97-b8cb-f289530e1a8e",
 CellID->1997801546],
Cell[CellGroupData[{
Cell[710745, 16739, 90, 1, 70, "Subsubsection",ExpressionUUID->"14f3e206-4004-4a5e-ac0f-dc0fbe2497cf",
 CellID->1973203023],
Cell[CellGroupData[{
Cell[710860, 16744, 73, 1, 70, "Subsubsubsection",ExpressionUUID->"724109f6-d2b1-440a-b4e9-77636a059e92",
 CellID->666869090],
Cell[710936, 16747, 422, 13, 70, "Text",ExpressionUUID->"2521c1eb-3a43-4f98-a76d-40918f818d4d",
 CellID->611320926],
Cell[711361, 16762, 480, 14, 70, "DefinitionBox",ExpressionUUID->"1cffb747-8442-48a7-a96a-a79c4eaef646",
 CellID->351641937],
Cell[711844, 16778, 135, 4, 70, "Caption",ExpressionUUID->"03d9b91c-9ada-4c4b-9798-c65dbef9f42b",
 CellID->171038615],
Cell[711982, 16784, 1561, 46, 70, "DefinitionBox3Col",ExpressionUUID->"0b883ed4-3b62-445b-8085-4895bb679ff0",
 CellID->1055700668],
Cell[713546, 16832, 272, 11, 70, "Caption",ExpressionUUID->"339f8e08-3e1a-4242-85b0-e7914487cd14",
 CellID->651235562],
Cell[713821, 16845, 360, 8, 70, "MathCaption",ExpressionUUID->"3c09bba9-ac05-438b-98c0-719e4a16051a",
 CellID->1312882619],
Cell[CellGroupData[{
Cell[714206, 16857, 302, 7, 70, "Input",ExpressionUUID->"9411b1d0-d516-4231-96db-e04e2e6c93c1",
 CellID->223704608],
Cell[CellGroupData[{
Cell[714533, 16868, 425, 10, 70, "Print",ExpressionUUID->"44cfc8d2-5218-4187-9ff2-d090e630437b",
 CellID->916487219],
Cell[714961, 16880, 426, 10, 70, "Print",ExpressionUUID->"c1c7e1d4-6a4f-4688-a593-148a2ee6a398",
 CellID->1393161984],
Cell[715390, 16892, 423, 10, 70, "Print",ExpressionUUID->"799b44ab-1c28-493e-82af-297a505742d9",
 CellID->1933820101],
Cell[715816, 16904, 426, 10, 70, "Print",ExpressionUUID->"08c6cf7f-ee70-4dd9-80db-1f23324b3f04",
 CellID->1615625703],
Cell[716245, 16916, 422, 10, 70, "Print",ExpressionUUID->"aa09bc84-be23-4f32-8332-131f91df6ffe",
 CellID->944609390],
Cell[716670, 16928, 407, 10, 70, "Print",ExpressionUUID->"2c4422f4-2a83-4ba9-a488-8b29a9b18843",
 CellID->1760647747],
Cell[717080, 16940, 406, 10, 70, "Print",ExpressionUUID->"aee5caa5-feb9-4089-872c-d59406217850",
 CellID->729347633],
Cell[717489, 16952, 408, 10, 70, "Print",ExpressionUUID->"f487d879-d6a8-4279-8c12-110360b78a33",
 CellID->928300839],
Cell[717900, 16964, 400, 9, 70, "Print",ExpressionUUID->"ccf4d785-e1fd-4a71-a61d-15c499de2389",
 CellID->200801478],
Cell[718303, 16975, 409, 10, 70, "Print",ExpressionUUID->"31d10c60-189a-477c-b69a-ee0d84684bf9",
 CellID->584112668],
Cell[718715, 16987, 408, 10, 70, "Print",ExpressionUUID->"c2d348b8-cf46-4bc6-b90c-b0f573b43aef",
 CellID->805571796],
Cell[719126, 16999, 420, 10, 70, "Print",ExpressionUUID->"89eb27da-6353-4375-b71c-c6b35656ae17",
 CellID->507574800],
Cell[719549, 17011, 426, 10, 70, "Print",ExpressionUUID->"e68c1430-3aa6-4a7f-88e3-397eb6d8bcff",
 CellID->1093520098]
}, Open  ]],
Cell[719990, 17024, 10862, 281, 70, "Output",ExpressionUUID->"1f26b3f3-be1b-4c07-8ff0-68ae12190500",
 CellID->627236060]
}, Open  ]],
Cell[730867, 17308, 123, 3, 70, "MathCaption",ExpressionUUID->"03807435-1f9d-4304-bf7b-5cfb122538de",
 CellID->1190633123],
Cell[CellGroupData[{
Cell[731015, 17315, 310, 10, 70, "Input",ExpressionUUID->"e7795f5c-4978-4df4-8b2e-bc3f4873d065",
 CellID->718275515],
Cell[731328, 17327, 186498, 4955, 70, "Output",ExpressionUUID->"9483daab-3692-4c98-a66d-b981b827fce8",
 CellID->2106720944]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[917875, 22288, 78, 1, 70, "Subsubsubsection",ExpressionUUID->"de02c9f8-ff7c-44bb-8b66-a64e143275da",
 CellID->528878766],
Cell[917956, 22291, 255, 5, 70, "MathCaption",ExpressionUUID->"172b589d-0aed-4bf7-8757-55f888afde3e",
 CellID->1740422649],
Cell[918214, 22298, 1109, 22, 70, "Input",ExpressionUUID->"c618e58e-31cd-49cc-b403-3cf6c032a1a9",
 CellID->750369086],
Cell[919326, 22322, 184, 7, 70, "MathCaption",ExpressionUUID->"f1bc0ad6-af3e-4424-bbcd-f5b6723add96",
 CellID->1712427223],
Cell[CellGroupData[{
Cell[919535, 22333, 203, 6, 70, "Input",ExpressionUUID->"f29c8661-613f-47f7-bb6c-757d972e2f45",
 CellID->188499867],
Cell[919741, 22341, 10617, 274, 70, "Output",ExpressionUUID->"8e8d17ac-4aec-4c36-8037-cd6a3944fc55",
 CellID->2096017719]
}, Open  ]],
Cell[930373, 22618, 90, 1, 70, "MathCaption",ExpressionUUID->"aba44151-44fb-4b26-ac70-0650406d04a7",
 CellID->292613774],
Cell[CellGroupData[{
Cell[930488, 22623, 170, 4, 70, "Input",ExpressionUUID->"15d37d85-dbf2-41de-995a-b59ebece4215",
 CellID->222147988],
Cell[930661, 22629, 265, 7, 70, "Output",ExpressionUUID->"a23d68f0-87a2-4804-95ee-b7a895de5069",
 CellID->448057845]
}, Open  ]],
Cell[930941, 22639, 394, 7, 70, "Text",ExpressionUUID->"c70a2376-b51f-4f36-adb1-5c6d40a2ee34",
 CellID->1796883614],
Cell[931338, 22648, 472, 13, 70, "MathCaption",ExpressionUUID->"7d9e966e-29f0-4caf-9a37-b75c46d92e3f",
 CellID->306227952],
Cell[CellGroupData[{
Cell[931835, 22665, 508, 14, 70, "Input",ExpressionUUID->"9b378cad-3607-47cc-8b03-9bf999a1367f",
 CellID->1402371052],
Cell[932346, 22681, 10617, 274, 70, "Output",ExpressionUUID->"a2e60807-5d36-4eab-8477-4bf5ef754a4b",
 CellID->1430534533]
}, Open  ]],
Cell[942978, 22958, 81, 1, 70, "MathCaption",ExpressionUUID->"1a154b71-bd44-4f58-b850-ef08cbb7edc1",
 CellID->136402831],
Cell[CellGroupData[{
Cell[943084, 22963, 175, 5, 70, "Input",ExpressionUUID->"1e5f123c-7a33-481b-8ff3-7cb68abf4407",
 CellID->1157329268],
Cell[943262, 22970, 290, 7, 70, "Output",ExpressionUUID->"17cb5601-a988-415d-ad83-a4fd70204900",
 CellID->1914467966]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[943601, 22983, 71, 1, 70, "Subsubsubsection",ExpressionUUID->"09d6d5f0-6a13-4bce-a286-f11da444761d",
 CellID->1560572010],
Cell[943675, 22986, 484, 13, 70, "Text",ExpressionUUID->"c7728281-da66-4dec-b203-c801457b2fbc",
 CellID->1315991259],
Cell[944162, 23001, 526, 16, 70, "DefinitionBox",ExpressionUUID->"561211ae-17c8-4af4-af11-15265ab971de",
 CellID->391089394],
Cell[944691, 23019, 111, 3, 70, "Caption",ExpressionUUID->"53018421-473a-471e-9fa5-adc2e269fca4",
 CellID->1739485138],
Cell[944805, 23024, 1518, 44, 70, "DefinitionBox3Col",ExpressionUUID->"83156a82-9268-40ab-9860-36688addb204",
 CellID->2083543412],
Cell[946326, 23070, 267, 11, 70, "Caption",ExpressionUUID->"d74ca927-ebf5-4ee8-8c9c-0824d2e9b5f6",
 CellID->1245777502],
Cell[946596, 23083, 336, 8, 70, "MathCaption",ExpressionUUID->"54566087-fbea-41ad-b631-ebff6da5dd8a",
 CellID->178778395],
Cell[CellGroupData[{
Cell[946957, 23095, 313, 7, 70, "Input",ExpressionUUID->"e42227a8-5e54-4be3-91ee-d1614bf707ed",
 CellID->398862612],
Cell[947273, 23104, 10616, 274, 70, "Output",ExpressionUUID->"b6ee875b-ed9e-4616-b43b-a3fbcaa9e38f",
 CellID->715621561]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[957938, 23384, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"15b112b8-8e60-4031-988d-3488ea525aa5",
 CellID->1066609228],
Cell[958001, 23387, 487, 15, 70, "Text",ExpressionUUID->"0a3edd0c-1efb-4f88-bfb5-b01151ec8d19",
 CellID->1455293487],
Cell[CellGroupData[{
Cell[958513, 23406, 214, 6, 70, "Input",ExpressionUUID->"662bc3b9-a4dd-40dc-b06d-26d7ac6d6c15",
 CellID->1426380326],
Cell[CellGroupData[{
Cell[958752, 23416, 5297, 154, 70, "Print",ExpressionUUID->"b1520940-2033-48d5-89a2-2cf7dc7d1ccb",
 CellID->1543152527],
Cell[964052, 23572, 499, 13, 70, "Print",ExpressionUUID->"471cefae-2d2b-44cf-a357-dd0f76ae8d4a",
 CellID->604516470],
Cell[964554, 23587, 54921, 1136, 70, "Print",ExpressionUUID->"c995f370-1782-4648-897a-723d9f31517d",
 CellID->363177333]
}, Open  ]],
Cell[1019490, 24726, 10607, 274, 70, "Output",ExpressionUUID->"884eeb84-4391-429d-a0ca-61e09163182e",
 CellID->772910957]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1030158, 25007, 73, 1, 70, "Subsubsection",ExpressionUUID->"3d94c3db-cfe7-4913-9448-0c86b183786f",
 CellID->1796762249],
Cell[1030234, 25010, 93, 1, 70, "Text",ExpressionUUID->"edd84e64-bd90-498f-b620-5e4752ef37f5",
 CellID->1723717413],
Cell[1030330, 25013, 145, 4, 70, "MathCaption",ExpressionUUID->"1166e8a4-aba9-4055-bf53-b2a9412dd548",
 CellID->141883528],
Cell[CellGroupData[{
Cell[1030500, 25021, 171, 4, 70, "Input",ExpressionUUID->"666a590a-6af1-4606-a72b-88ea8619394c",
 CellID->929606926],
Cell[1030674, 25027, 9647, 248, 70, "Output",ExpressionUUID->"db49f41f-4d49-4596-8e9b-f6c60e0b9ab8",
 CellID->185873596]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1040370, 25281, 100, 1, 70, "Subsubsection",ExpressionUUID->"5383a595-984f-4d9b-98e5-49d564c13054",
 CellID->1908271188],
Cell[1040473, 25284, 292, 10, 70, "MathCaption",ExpressionUUID->"110662e3-7aeb-4f17-b31d-578152a303b0",
 CellID->1758442397],
Cell[CellGroupData[{
Cell[1040790, 25298, 197, 5, 70, "Input",ExpressionUUID->"ec010202-c7c9-43a0-9da9-a8fc48a1c31f",
 CellID->471416365],
Cell[1040990, 25305, 10412, 263, 70, "Output",ExpressionUUID->"be5af58d-4d98-4dbb-b8f7-5f1edd6c3979",
 CellID->1536305234]
}, Open  ]],
Cell[1051417, 25571, 355, 12, 70, "MathCaption",ExpressionUUID->"5dc49950-8abc-4fe7-bf84-5f35527d2c18",
 CellID->2143452651],
Cell[CellGroupData[{
Cell[1051797, 25587, 176, 4, 70, "Input",ExpressionUUID->"df6efdb1-53e0-4e0c-82fb-0796964255a1",
 CellID->970526932],
Cell[1051976, 25593, 10412, 263, 70, "Output",ExpressionUUID->"0b2440fc-7db3-4b22-a2c5-c39695ead8b0",
 CellID->1486179957]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1062449, 25863, 67, 1, 70, "Subsection",ExpressionUUID->"0aefe91b-fdbf-4793-890d-f6b6594c32fe",
 CellID->1059869896],
Cell[1062519, 25866, 532, 9, 70, "Text",ExpressionUUID->"b634b815-f87e-4d98-8877-26fa307f1568",
 CellID->214174283],
Cell[CellGroupData[{
Cell[1063076, 25879, 73, 1, 70, "Subsubsection",ExpressionUUID->"373cd07c-6fb6-4cbd-a6be-dfec4ef0fd5e",
 CellID->444582009],
Cell[1063152, 25882, 74, 1, 70, "Text",ExpressionUUID->"81fdad53-0c31-415c-801a-adfe9795227a",
 CellID->168882663],
Cell[CellGroupData[{
Cell[1063251, 25887, 195, 5, 70, "Input",ExpressionUUID->"cf235655-855b-4004-845e-205e70b8d663",
 CellID->1585019354],
Cell[1063449, 25894, 11281, 289, 70, "Output",ExpressionUUID->"d8b79c04-3d6a-4864-a929-10cd0a06815f",
 CellID->844239042]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1074779, 26189, 122, 3, 70, "Subsubsection",ExpressionUUID->"b8951843-e772-4164-809a-ded6e4ecf725",
 CellID->1807183132],
Cell[1074904, 26194, 374, 8, 70, "MathCaption",ExpressionUUID->"89ded6bc-daec-441b-8060-c5a0222916d2",
 CellID->1847604807],
Cell[CellGroupData[{
Cell[1075303, 26206, 312, 7, 70, "Input",ExpressionUUID->"17123bf6-20d9-47fa-84ad-a4251a720a48",
 CellID->80455629],
Cell[CellGroupData[{
Cell[1075640, 26217, 425, 10, 70, "Print",ExpressionUUID->"bb1dbc6f-cdb8-4f01-8e51-8a0072d0bb75",
 CellID->534263066],
Cell[1076068, 26229, 423, 10, 70, "Print",ExpressionUUID->"4c77ca82-e5ea-48ae-8de3-6d4ece8a0a50",
 CellID->2122200127],
Cell[1076494, 26241, 422, 10, 70, "Print",ExpressionUUID->"05bf1f1a-a68c-4355-b9fb-51a82866c87d",
 CellID->840909824],
Cell[1076919, 26253, 421, 10, 70, "Print",ExpressionUUID->"9bd8a9c0-f054-4097-a748-e0a976308634",
 CellID->53150085],
Cell[1077343, 26265, 423, 10, 70, "Print",ExpressionUUID->"1d913c60-4ddf-4ae7-80ec-1f7d552436c9",
 CellID->1067283359],
Cell[1077769, 26277, 407, 10, 70, "Print",ExpressionUUID->"abff7b06-454a-47df-b409-0241c9163a3a",
 CellID->1639847900],
Cell[1078179, 26289, 409, 10, 70, "Print",ExpressionUUID->"f93104eb-42f5-4f68-80bc-4e886b662cd2",
 CellID->961166574],
Cell[1078591, 26301, 409, 10, 70, "Print",ExpressionUUID->"68896e2c-74c2-44ea-8caa-5b0ce7298ee6",
 CellID->1489251853],
Cell[1079003, 26313, 410, 10, 70, "Print",ExpressionUUID->"340118ed-3edb-4313-b7e6-456bcc7e7752",
 CellID->1713518480],
Cell[1079416, 26325, 409, 10, 70, "Print",ExpressionUUID->"885132b8-6e94-4b53-bdc5-43e9442acb32",
 CellID->499513137],
Cell[1079828, 26337, 406, 10, 70, "Print",ExpressionUUID->"531b68ec-6081-44e3-984f-d7131846ad9a",
 CellID->406807222],
Cell[1080237, 26349, 422, 10, 70, "Print",ExpressionUUID->"cd35ea78-21bf-4618-b0b9-9aadf2f90d83",
 CellID->690439218],
Cell[1080662, 26361, 425, 10, 70, "Print",ExpressionUUID->"4c9f9285-8dc2-4a9a-9282-6bcf1586ec34",
 CellID->820946473]
}, Open  ]],
Cell[1081102, 26374, 10682, 273, 70, "Output",ExpressionUUID->"f4e5457f-9fe2-4778-9b19-88d5f362c0bd",
 CellID->2128264267]
}, Open  ]],
Cell[1091799, 26650, 199, 7, 70, "MathCaption",ExpressionUUID->"16e313e2-64b2-4fcc-818f-dfb3eceb8d55",
 CellID->1446718475],
Cell[1092001, 26659, 243, 7, 70, "Input",ExpressionUUID->"2f43b0ef-934b-40c0-9a72-b4294a45e49e",
 CellID->1187557991],
Cell[1092247, 26668, 90, 1, 70, "MathCaption",ExpressionUUID->"bf63bff7-e34c-48a2-a3c9-d6b2e7855b88",
 CellID->918869862],
Cell[CellGroupData[{
Cell[1092362, 26673, 188, 5, 70, "Input",ExpressionUUID->"3d2a130d-4044-435d-89dc-4e9e66ee1e1f",
 CellID->890865057],
Cell[1092553, 26680, 266, 7, 70, "Output",ExpressionUUID->"f4ffb86d-3083-42db-8c28-8462fcc29ab1",
 CellID->1249911037]
}, Open  ]],
Cell[1092834, 26690, 514, 13, 70, "MathCaption",ExpressionUUID->"9cac48a2-6286-4611-b3e2-1ced06db32ac",
 CellID->916506595],
Cell[1093351, 26705, 557, 16, 70, "Input",ExpressionUUID->"8b17453e-706b-424f-8627-994fbd714d33",
 CellID->1973625881],
Cell[1093911, 26723, 80, 1, 70, "MathCaption",ExpressionUUID->"6ba44b34-44bd-4f22-a4cf-02a0755b7f46",
 CellID->19000568],
Cell[CellGroupData[{
Cell[1094016, 26728, 197, 6, 70, "Input",ExpressionUUID->"7e3a81e2-9b91-43a3-b9d9-efb43e10c113",
 CellID->1514966620],
Cell[1094216, 26736, 289, 7, 70, "Output",ExpressionUUID->"55853dee-3450-4a33-8858-abdd16d51b32",
 CellID->569763905]
}, Open  ]],
Cell[1094520, 26746, 349, 9, 70, "MathCaption",ExpressionUUID->"009bd95f-86c4-44cb-8ac1-e536ec7788a5",
 CellID->1183809265],
Cell[CellGroupData[{
Cell[1094894, 26759, 332, 7, 70, "Input",ExpressionUUID->"4ebbfa51-3dde-4003-910e-4ea0ea8c1d2e",
 CellID->1993811047],
Cell[1095229, 26768, 10699, 273, 70, "Output",ExpressionUUID->"90859d72-956d-4ecc-93e8-34301f76db9c",
 CellID->1808037231]
}, Open  ]],
Cell[1105943, 27044, 497, 15, 70, "Text",ExpressionUUID->"efb341e3-858e-4597-8b9c-4a6bf6ac21db",
 CellID->1212150445],
Cell[CellGroupData[{
Cell[1106465, 27063, 232, 6, 70, "Input",ExpressionUUID->"f7b1e821-2b48-4d22-8237-575a062eae42",
 CellID->1582653673],
Cell[CellGroupData[{
Cell[1106722, 27073, 10252, 303, 70, "Print",ExpressionUUID->"1dd1f019-79b2-4ff3-9217-c1bab9a0d4ba",
 CellID->1368119989],
Cell[1116977, 27378, 819, 20, 70, "Print",ExpressionUUID->"52c1825d-a047-4434-a964-5f0a0a35b5c8",
 CellID->885246694],
Cell[1117799, 27400, 115759, 2384, 70, "Print",ExpressionUUID->"a39f28a8-941b-4f2d-9204-a921b7cae5ab",
 CellID->574479642]
}, Open  ]],
Cell[1233573, 29787, 10722, 274, 70, "Output",ExpressionUUID->"aaed9f9b-976f-4ec3-975b-83c7c7b15dc6",
 CellID->314696655]
}, Open  ]],
Cell[1244310, 30064, 125, 3, 70, "MathCaption",ExpressionUUID->"4d2c8682-6a43-47c8-892a-712a9c05caa3",
 CellID->1388846014],
Cell[CellGroupData[{
Cell[1244460, 30071, 193, 5, 70, "Input",ExpressionUUID->"5a3335a9-d59b-4212-bacf-052c35da6664",
 CellID->1335198055],
Cell[1244656, 30078, 8681, 227, 70, "Output",ExpressionUUID->"7831539e-af70-44de-9a25-b7366f7cb579",
 CellID->2001941671]
}, Open  ]],
Cell[1253352, 30308, 292, 10, 70, "MathCaption",ExpressionUUID->"72ce9366-70e0-49ca-ae6b-7c35456efb26",
 CellID->1164916883],
Cell[CellGroupData[{
Cell[1253669, 30322, 217, 6, 70, "Input",ExpressionUUID->"ee71777f-9007-4867-be68-84fa6fa3bacd",
 CellID->149642882],
Cell[1253889, 30330, 9710, 249, 70, "Output",ExpressionUUID->"822bad77-7f8b-4698-853c-be5cf276fa6b",
 CellID->2007366948]
}, Open  ]],
Cell[1263614, 30582, 355, 12, 70, "MathCaption",ExpressionUUID->"483709c7-dece-4366-bd1f-7203846cbe57",
 CellID->1523959247],
Cell[CellGroupData[{
Cell[1263994, 30598, 197, 5, 70, "Input",ExpressionUUID->"bbf7f508-d764-4f55-a5e9-66c4544ee23a",
 CellID->145606560],
Cell[1264194, 30605, 9709, 249, 70, "Output",ExpressionUUID->"1438d638-5c46-4f2f-a53b-85cab241001f",
 CellID->848200666]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1273964, 30861, 81, 1, 70, "Subsection",ExpressionUUID->"82cc19d3-042f-41e5-a2ff-dfad0d9d160d",
 CellID->2003973854],
Cell[1274048, 30864, 890, 28, 70, "Text",ExpressionUUID->"3e30dcfe-287b-455e-8dff-4a4ce8fd0ea4",
 CellID->1328457457],
Cell[1274941, 30894, 159, 4, 70, "MathCaption",ExpressionUUID->"277af5f2-4656-4a0d-847f-b710d7e97537",
 CellID->1629616244],
Cell[CellGroupData[{
Cell[1275125, 30902, 226, 6, 70, "Input",ExpressionUUID->"6a29aaeb-26a9-467d-b33c-fa19cd14cd18",
 CellID->2101262717],
Cell[1275354, 30910, 91, 2, 70, "Output",ExpressionUUID->"3f88031c-e94e-46bb-bde9-ea96f2b0b377",
 CellID->384258966]
}, Open  ]],
Cell[1275460, 30915, 140, 4, 70, "MathCaption",ExpressionUUID->"0a1abd29-83a4-4222-9fc2-ea1ed3826a8a",
 CellID->218785383],
Cell[CellGroupData[{
Cell[1275625, 30923, 297, 8, 70, "Input",ExpressionUUID->"033496f5-b50e-419e-83fb-0df6603cbec6",
 CellID->633928417],
Cell[1275925, 30933, 586, 17, 70, "Output",ExpressionUUID->"a3f36390-8413-4d58-ad6d-8634ba19a6e9",
 CellID->1148116342]
}, Open  ]],
Cell[1276526, 30953, 125, 3, 70, "MathCaption",ExpressionUUID->"1ab622fa-9163-431a-9e59-c6f30ccc010b",
 CellID->1746502806],
Cell[CellGroupData[{
Cell[1276676, 30960, 364, 8, 70, "Input",ExpressionUUID->"ed01310f-80d3-4904-a5c2-fae8df3bd6c0",
 CellID->1666173246],
Cell[1277043, 30970, 136, 2, 70, "Print",ExpressionUUID->"1cc29ef2-bf6a-48a7-84a6-9dae7b60dba9",
 CellID->1621576223],
Cell[1277182, 30974, 8728, 228, 70, "Output",ExpressionUUID->"be045e7f-b907-4dc9-bacc-7a4da894c935",
 CellID->116615884]
}, Open  ]],
Cell[1285925, 31205, 763, 24, 70, "Text",ExpressionUUID->"c8565db7-929f-43d4-8a78-c9697d83e3dc",
 CellID->808687274],
Cell[1286691, 31231, 98, 1, 70, "MathCaption",ExpressionUUID->"ccc31091-e64b-4dbd-8be8-0f8067b442c5",
 CellID->690387281],
Cell[CellGroupData[{
Cell[1286814, 31236, 122, 3, 70, "Input",ExpressionUUID->"2d2cae7b-b794-4176-8f2a-2f40cf7e0e75",
 CellID->484887026],
Cell[1286939, 31241, 230, 6, 70, "Output",ExpressionUUID->"8b0ffb0f-8232-4258-8790-7589ef9edfd9",
 CellID->459471277]
}, Open  ]],
Cell[1287184, 31250, 92, 1, 70, "MathCaption",ExpressionUUID->"3a348519-8e16-46ba-8197-299063298b5c",
 CellID->1931356472],
Cell[CellGroupData[{
Cell[1287301, 31255, 181, 6, 70, "Input",ExpressionUUID->"7e2b3afa-6929-4443-bb1a-496c5b88923a",
 CellID->1092900499],
Cell[1287485, 31263, 449, 11, 70, "Output",ExpressionUUID->"ff061890-6baa-477a-a102-cad95358c421",
 CellID->1294671978]
}, Open  ]],
Cell[1287949, 31277, 104, 2, 70, "MathCaption",ExpressionUUID->"dc51a88e-7580-4258-a660-74e0a328662d",
 CellID->642146293],
Cell[CellGroupData[{
Cell[1288078, 31283, 186, 6, 70, "Input",ExpressionUUID->"dd592e83-805c-44ea-a4ae-53a4538509dc",
 CellID->1447420276],
Cell[1288267, 31291, 6723, 159, 70, "Output",ExpressionUUID->"0fb0a5a7-ca38-437d-a92d-efcfe535feed",
 CellID->157992455]
}, Open  ]],
Cell[1295005, 31453, 579, 19, 70, "MathCaption",ExpressionUUID->"c59ae8e9-fa8e-4e84-b334-fa9fb0b845b7",
 CellID->1243280944],
Cell[CellGroupData[{
Cell[1295609, 31476, 276, 7, 70, "Input",ExpressionUUID->"a0908e2a-9bb4-40aa-9300-a40316ee27e4",
 CellID->806940498],
Cell[1295888, 31485, 616, 12, 70, "Output",ExpressionUUID->"ae0b5893-9fe2-4b10-bffc-3422bdcaac19",
 CellID->1715219372]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1296565, 31504, 55, 1, 70, "Section",ExpressionUUID->"efb9b0e2-91be-4b2f-b366-c40bd6d50700",
 CellID->779816621],
Cell[CellGroupData[{
Cell[1296645, 31509, 80, 1, 70, "Subsection",ExpressionUUID->"ac11fb66-bab4-4566-88b3-9a12d13126ed",
 CellID->1971981026],
Cell[1296728, 31512, 980, 35, 70, "Text",ExpressionUUID->"e3a540b6-1a94-4eab-b1e0-3426f8fbf3d2",
 CellID->1838680125],
Cell[1297711, 31549, 186, 4, 70, "MathCaption",ExpressionUUID->"ea5f202c-f0d7-4a65-a3b5-52876271b3af",
 CellID->902655240],
Cell[CellGroupData[{
Cell[1297922, 31557, 334, 10, 70, "Input",ExpressionUUID->"d1b4a0a4-4cc7-40fc-8efd-38cc7fd945fa",
 CellID->1102136272],
Cell[1298259, 31569, 10178, 263, 70, "Output",ExpressionUUID->"3ec1e2e3-c562-46ef-93a6-48392111a2bd",
 CellID->1616524567]
}, Open  ]],
Cell[CellGroupData[{
Cell[1308474, 31837, 334, 10, 70, "Input",ExpressionUUID->"fbb299d8-4107-4570-b582-eb66fa1a71c8",
 CellID->1021092447],
Cell[1308811, 31849, 10967, 283, 70, "Output",ExpressionUUID->"3803ea68-3c58-423c-b080-c489db5244f7",
 CellID->1548290285]
}, Open  ]],
Cell[1319793, 32135, 266, 7, 70, "MathCaption",ExpressionUUID->"099c9cf4-5c42-419b-9ae6-52bca48877fb",
 CellID->969019879],
Cell[CellGroupData[{
Cell[1320084, 32146, 162, 5, 70, "Input",ExpressionUUID->"96524d03-45b0-4027-8434-e329992f7d52",
 CellID->1948611152],
Cell[1320249, 32153, 337, 7, 70, "Output",ExpressionUUID->"f9598f17-5152-42c1-ba28-ddc3c1322b80",
 CellID->1243364280]
}, Open  ]],
Cell[CellGroupData[{
Cell[1320623, 32165, 161, 5, 70, "Input",ExpressionUUID->"1ad543ca-6a8d-41c7-a26b-430431d88bee",
 CellID->619818574],
Cell[1320787, 32172, 337, 7, 70, "Output",ExpressionUUID->"03083c22-265a-44b6-b0ee-e47e83a890e0",
 CellID->1440862894]
}, Open  ]],
Cell[1321139, 32182, 177, 4, 70, "Text",ExpressionUUID->"1823fc27-4426-47a3-a974-c8e90ba79212",
 CellID->1900924848],
Cell[1321319, 32188, 300, 10, 70, "MathCaption",ExpressionUUID->"34faf6da-0667-496a-948d-a27af2a521ec",
 CellID->729703917],
Cell[CellGroupData[{
Cell[1321644, 32202, 246, 8, 70, "Input",ExpressionUUID->"e63021b7-aeab-45ad-8ef2-a1685da623fa",
 CellID->2002108649],
Cell[1321893, 32212, 1022, 28, 70, "Output",ExpressionUUID->"a0501027-3b2e-4927-9886-7fd913bd7e93",
 CellID->81485738]
}, Open  ]],
Cell[1322930, 32243, 1053, 28, 70, "Text",ExpressionUUID->"09db9f40-634a-4244-b79f-d066ffd6a0d5",
 CellID->527526154],
Cell[1323986, 32273, 359, 12, 70, "MathCaption",ExpressionUUID->"d4626dcf-93b0-461d-8b52-1678b3dc4837",
 CellID->449223127],
Cell[CellGroupData[{
Cell[1324370, 32289, 279, 8, 70, "Input",ExpressionUUID->"ace4f52a-8e09-413c-bce1-902e68c05f54",
 CellID->1688076284],
Cell[1324652, 32299, 10659, 275, 70, "Output",ExpressionUUID->"5c3879dc-2c68-43f2-8332-230261455ee3",
 CellID->2034427395]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1335360, 32580, 72, 1, 70, "Subsection",ExpressionUUID->"b1bc2dff-a764-4b82-ad5e-139fe7a23c37",
 CellID->1357359281],
Cell[1335435, 32583, 472, 8, 70, "Text",ExpressionUUID->"da73906f-6d2f-4efc-830c-679cb53f562d",
 CellID->1802528277],
Cell[CellGroupData[{
Cell[1335932, 32595, 144, 4, 70, "Subsubsection",ExpressionUUID->"9556eaf7-2cea-47d4-9f1b-6c3d67af34cf",
 CellID->524759768],
Cell[CellGroupData[{
Cell[1336101, 32603, 80, 1, 70, "Subsubsubsection",ExpressionUUID->"3cb80d11-0691-49bf-85eb-b34d138753c5",
 CellID->1551861331],
Cell[1336184, 32606, 391, 7, 70, "Text",ExpressionUUID->"02c6ca8f-61be-4e2a-9f43-6036273d548a",
 CellID->944497302],
Cell[1336578, 32615, 594, 18, 70, "DefinitionBox",ExpressionUUID->"ea97fd4b-fb59-4d41-86e6-45b1730b497d",
 CellID->1659581078],
Cell[1337175, 32635, 206, 7, 70, "Caption",ExpressionUUID->"dc36e729-f9c4-4802-aaba-c602b612eb2a",
 CellID->1061570710],
Cell[1337384, 32644, 2285, 63, 70, "DefinitionBox3Col",ExpressionUUID->"961f9cc7-adb0-405e-8965-04b58f01a80b",
 CellID->524783694],
Cell[1339672, 32709, 268, 11, 70, "Caption",ExpressionUUID->"4474b98b-dd65-472d-99ca-f4d299375cea",
 CellID->324206829],
Cell[1339943, 32722, 138, 4, 70, "MathCaption",ExpressionUUID->"ab6c257a-15e4-4123-829d-fc156442252e",
 CellID->873132756],
Cell[CellGroupData[{
Cell[1340106, 32730, 334, 9, 70, "Input",ExpressionUUID->"ac348cef-4a1a-4dda-a58b-028415b6594b",
 CellID->986470141],
Cell[1340443, 32741, 10678, 276, 70, "Output",ExpressionUUID->"96e4b1ea-c15a-4341-9b31-7839c4188d5a",
 CellID->469857818]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1351170, 33023, 73, 1, 70, "Subsubsubsection",ExpressionUUID->"694f337c-ccbc-44fa-8b77-e312ad331e87",
 CellID->128983684],
Cell[1351246, 33026, 356, 8, 70, "MathCaption",ExpressionUUID->"afc21905-6d20-441f-b8f1-9d83004e9f8b",
 CellID->1069961234],
Cell[CellGroupData[{
Cell[1351627, 33038, 309, 7, 70, "Input",ExpressionUUID->"3e1fbb15-9bef-402c-a71f-49181c8195d6",
 CellID->1957883507],
Cell[CellGroupData[{
Cell[1351961, 33049, 421, 10, 70, "Print",ExpressionUUID->"44a2c403-470b-4ecb-bd14-1e47fa504d72",
 CellID->64325918],
Cell[1352385, 33061, 425, 10, 70, "Print",ExpressionUUID->"11e5aa1f-788a-4e79-8b52-ab4902b76e8c",
 CellID->107170713],
Cell[1352813, 33073, 421, 10, 70, "Print",ExpressionUUID->"874048d5-2ab0-4534-90de-6bc463777751",
 CellID->95796752],
Cell[1353237, 33085, 422, 10, 70, "Print",ExpressionUUID->"e2b66ab7-6571-44a2-b0d2-de7f02f8a8bb",
 CellID->824325630],
Cell[1353662, 33097, 425, 10, 70, "Print",ExpressionUUID->"cf928fc6-c7d4-4757-8acd-70a6dca66be9",
 CellID->524837664],
Cell[1354090, 33109, 426, 10, 70, "Print",ExpressionUUID->"43f1e9a8-7415-4f04-9034-7d4367e1403d",
 CellID->1492609609],
Cell[1354519, 33121, 426, 10, 70, "Print",ExpressionUUID->"e0824bba-2976-43d1-bd0f-1812996468fa",
 CellID->1812054345],
Cell[1354948, 33133, 423, 10, 70, "Print",ExpressionUUID->"fad659db-a660-4aef-bfef-cf193e54142e",
 CellID->1204774573],
Cell[1355374, 33145, 423, 10, 70, "Print",ExpressionUUID->"2862e741-73cf-475f-bca1-d47c061d7725",
 CellID->1653787195],
Cell[1355800, 33157, 426, 10, 70, "Print",ExpressionUUID->"70b65318-c828-4ec3-a843-241080f447d2",
 CellID->1967842748],
Cell[1356229, 33169, 423, 10, 70, "Print",ExpressionUUID->"61fe6bd8-b5c9-407c-93e0-b4e3a38026d2",
 CellID->1388283531],
Cell[1356655, 33181, 421, 10, 70, "Print",ExpressionUUID->"47dbae22-f09a-4143-8c55-3724e5d0c79f",
 CellID->66431071]
}, Open  ]],
Cell[1357091, 33194, 10420, 269, 70, "Output",ExpressionUUID->"17bdae87-e056-4f8b-bb13-96a13105a282",
 CellID->637169717]
}, Open  ]],
Cell[1367526, 33466, 123, 3, 70, "MathCaption",ExpressionUUID->"a6bb965e-3c12-453e-ab2a-4d4480d67902",
 CellID->2078239195],
Cell[CellGroupData[{
Cell[1367674, 33473, 313, 10, 70, "Input",ExpressionUUID->"97783bca-2490-4f42-ac57-850d994f1fac",
 CellID->144631910],
Cell[1367990, 33485, 48485, 1030, 70, "Output",ExpressionUUID->"d00a200d-6b9c-487b-817d-5b0abf3e79dc",
 CellID->841573546]
}, Open  ]],
Cell[1416490, 34518, 94, 1, 70, "MathCaption",ExpressionUUID->"a660a1a2-8645-40ce-af6e-add55c880e08",
 CellID->1914505686],
Cell[CellGroupData[{
Cell[1416609, 34523, 654, 15, 70, "Input",ExpressionUUID->"52b8eab4-feb6-4331-8685-58d7fe036f49",
 CellID->1349581601],
Cell[1417266, 34540, 10491, 271, 70, "Output",ExpressionUUID->"c5c2ba4a-04c3-4a89-9a54-477423ab9b76",
 CellID->1805328114]
}, Open  ]],
Cell[1427772, 34814, 134, 4, 70, "MathCaption",ExpressionUUID->"c33d0b69-5f21-4bf1-9429-6eab14ecbe44",
 CellID->2141940815],
Cell[CellGroupData[{
Cell[1427931, 34822, 312, 10, 70, "Input",ExpressionUUID->"9596dc27-5477-487a-8032-6c237e455bfc",
 CellID->1785374157],
Cell[1428246, 34834, 35100, 648, 70, "Output",ExpressionUUID->"029e2901-ffa9-47e4-a71b-8b8dbd0a5197",
 CellID->628044284]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1463395, 35488, 78, 1, 70, "Subsubsubsection",ExpressionUUID->"2b3f0881-ca39-4fbe-97dc-a34d7c9a04ad",
 CellID->418653686],
Cell[1463476, 35491, 213, 5, 70, "Text",ExpressionUUID->"f4ba71c2-d257-41a9-aafc-9ba6bdb3af4f",
 CellID->1156073030],
Cell[1463692, 35498, 1108, 22, 70, "Input",ExpressionUUID->"f087b384-411e-401e-b958-201e635699d9",
 CellID->38250836],
Cell[1464803, 35522, 184, 7, 70, "MathCaption",ExpressionUUID->"77b42849-e804-4828-8809-738f6af13538",
 CellID->1834860801],
Cell[CellGroupData[{
Cell[1465012, 35533, 208, 6, 70, "Input",ExpressionUUID->"a0025a8d-07f7-49ad-92e9-372c9373f62f",
 CellID->640311487],
Cell[1465223, 35541, 10410, 269, 70, "Output",ExpressionUUID->"350afd72-6ea1-448b-8a0d-494fd4c75196",
 CellID->658156183]
}, Open  ]],
Cell[1475648, 35813, 90, 1, 70, "MathCaption",ExpressionUUID->"0c11847d-9669-40ae-8196-bccf2bc8f9e1",
 CellID->571106757],
Cell[CellGroupData[{
Cell[1475763, 35818, 178, 4, 70, "Input",ExpressionUUID->"3554746d-e448-4635-a968-9ac53ab4e6fb",
 CellID->1486846456],
Cell[1475944, 35824, 253, 7, 70, "Output",ExpressionUUID->"a64935fc-e3ab-4b00-9545-ce26b463a263",
 CellID->2090185631]
}, Open  ]],
Cell[1476212, 35834, 308, 6, 70, "Text",ExpressionUUID->"0b939ab2-0722-4cd0-975c-8e9dcee8b10f",
 CellID->280773926],
Cell[1476523, 35842, 362, 12, 70, "MathCaption",ExpressionUUID->"e555b877-0615-4ab0-9020-4cc41139a504",
 CellID->945801823],
Cell[CellGroupData[{
Cell[1476910, 35858, 524, 13, 70, "Input",ExpressionUUID->"5767334b-7da7-48b0-9ef2-58666dd3d6ce",
 CellID->417284067],
Cell[1477437, 35873, 10456, 270, 70, "Output",ExpressionUUID->"c527b0d9-a45a-4a2e-990f-ed30f0e9474b",
 CellID->1212402591]
}, Open  ]],
Cell[1487908, 36146, 81, 1, 70, "MathCaption",ExpressionUUID->"36ca87df-164a-417a-a02d-17f9ea6a0643",
 CellID->430709602],
Cell[CellGroupData[{
Cell[1488014, 36151, 183, 5, 70, "Input",ExpressionUUID->"92b06823-ac17-4fe3-b70a-e7b9b6e3498e",
 CellID->1916390424],
Cell[1488200, 36158, 290, 7, 70, "Output",ExpressionUUID->"a88cee5f-1539-4701-825a-fd7041b34da9",
 CellID->1525504201]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1488539, 36171, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"ece65841-6da9-4656-88fd-feaf912ef620",
 CellID->1084739385],
Cell[1488602, 36174, 600, 16, 70, "Text",ExpressionUUID->"c6b5c7c2-4a88-40cb-b0fa-e82b6fc7106c",
 CellID->1226164312],
Cell[CellGroupData[{
Cell[1489227, 36194, 300, 8, 70, "Input",ExpressionUUID->"345c85d6-88d7-4d0f-b67e-cc55ca54a82b",
 CellID->890515172],
Cell[CellGroupData[{
Cell[1489552, 36206, 4555, 133, 70, "Print",ExpressionUUID->"3cec75ec-cfcf-46f4-922c-101ea2bafb91",
 CellID->341844674],
Cell[1494110, 36341, 450, 12, 70, "Print",ExpressionUUID->"8b4754d8-b6da-497f-b85e-8d36c2b42a1a",
 CellID->864680193],
Cell[1494563, 36355, 45711, 949, 70, "Print",ExpressionUUID->"b89f07d0-10c8-4b8e-83ae-cd11bd80bb74",
 CellID->658164502]
}, Open  ]],
Cell[1540289, 37307, 10247, 265, 70, "Output",ExpressionUUID->"88f33d97-b4e2-4466-a959-d20c6057ee98",
 CellID->82519417]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1550585, 37578, 69, 1, 70, "Subsubsubsection",ExpressionUUID->"d973576c-5762-4b58-8c3b-4e2cb4a78998",
 CellID->1252715262],
Cell[1550657, 37581, 499, 13, 70, "Text",ExpressionUUID->"e6729745-e5bc-4ccc-ade2-9efe5bbf53cb",
 CellID->1581980320],
Cell[1551159, 37596, 685, 19, 70, "DefinitionBox",ExpressionUUID->"67b1f831-ce48-4587-8579-ba4bb1bbce02",
 CellID->472784104],
Cell[1551847, 37617, 314, 10, 70, "Caption",ExpressionUUID->"0ce4f827-c59d-49b2-8fe8-ab458b016207",
 CellID->392942028],
Cell[1552164, 37629, 197, 4, 70, "MathCaption",ExpressionUUID->"b083d4bc-a27e-4b1c-9ee6-8f42f09cfd46",
 CellID->1324534886],
Cell[CellGroupData[{
Cell[1552386, 37637, 225, 5, 70, "Input",ExpressionUUID->"afb69386-f3a4-45da-971b-55cea1d1adfb",
 CellID->642344200],
Cell[1552614, 37644, 9079, 239, 70, "Output",ExpressionUUID->"76e4dda3-efcd-4105-9487-5b8368eee102",
 CellID->524174621]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1561754, 37890, 75, 1, 70, "Subsubsection",ExpressionUUID->"debdd9e7-1c31-4f94-88ba-944b2d6bfdb2",
 CellID->1109625018],
Cell[1561832, 37893, 92, 1, 70, "Text",ExpressionUUID->"f91e5d2b-d944-4787-8ffb-61f61cf0b0a7",
 CellID->719686978],
Cell[1561927, 37896, 162, 4, 70, "MathCaption",ExpressionUUID->"bf385992-1be5-40e4-8687-60e18931d050",
 CellID->1151139342],
Cell[CellGroupData[{
Cell[1562114, 37904, 191, 6, 70, "Input",ExpressionUUID->"15325bc8-10bb-4d9b-849e-ba30ac8a35ab",
 CellID->518745171],
Cell[1562308, 37912, 7419, 199, 70, "Output",ExpressionUUID->"26ceaf79-6acd-454a-80ac-953a975132b3",
 CellID->824935153]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1569776, 38117, 118, 3, 70, "Subsubsection",ExpressionUUID->"21ab78bb-8634-478a-92b6-8485baf6fa38",
 CellID->1009763177],
Cell[1569897, 38122, 488, 13, 70, "Text",ExpressionUUID->"2147cf4d-e7d3-4fb5-ab4f-0a6ea48db4fe",
 CellID->278067401],
Cell[1570388, 38137, 169, 4, 70, "MathCaption",ExpressionUUID->"5f9156c6-fb32-47f1-9bfe-ea81fcd84dfb",
 CellID->96962883],
Cell[CellGroupData[{
Cell[1570582, 38145, 250, 6, 70, "Input",ExpressionUUID->"ee4424c9-b9df-4e90-acda-a83088cfda68",
 CellID->1862570155],
Cell[1570835, 38153, 8581, 225, 70, "Output",ExpressionUUID->"ea792bc1-1767-4f94-8bd9-e46cc72d248e",
 CellID->530691439]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1579465, 38384, 104, 2, 70, "Subsubsection",ExpressionUUID->"49f56c67-5e94-4c9f-a0e1-2e06d85a4f6f",
 CellID->1412731195],
Cell[1579572, 38388, 289, 10, 70, "MathCaption",ExpressionUUID->"8b1cd595-80b3-491b-ad1f-378ac9027a01",
 CellID->966741969],
Cell[CellGroupData[{
Cell[1579886, 38402, 208, 5, 70, "Input",ExpressionUUID->"bcacc723-6899-4e71-b658-b13f0137983b",
 CellID->170999781],
Cell[1580097, 38409, 9619, 247, 70, "Output",ExpressionUUID->"53908a84-5529-412b-ae1b-948a25a27bda",
 CellID->1856841682]
}, Open  ]],
Cell[1589731, 38659, 354, 12, 70, "MathCaption",ExpressionUUID->"1ad3e95c-d6b6-48c6-8bf2-08a594330439",
 CellID->245953314],
Cell[CellGroupData[{
Cell[1590110, 38675, 192, 5, 70, "Input",ExpressionUUID->"4fe5b95f-20d6-45e3-9fd2-25032f45988f",
 CellID->1978811570],
Cell[1590305, 38682, 9619, 247, 70, "Output",ExpressionUUID->"7a215d99-d64b-4deb-909b-125be6d00e43",
 CellID->1324492706]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1599985, 38936, 68, 1, 70, "Subsection",ExpressionUUID->"7eb9b905-deb5-456e-ab07-375d11230eda",
 CellID->453326653],
Cell[1600056, 38939, 511, 9, 70, "Text",ExpressionUUID->"497707dc-72c1-455b-9b30-89a715df0603",
 CellID->184556424],
Cell[CellGroupData[{
Cell[1600592, 38952, 73, 1, 70, "Subsubsection",ExpressionUUID->"20433017-278d-45e5-9cee-30e423fb2021",
 CellID->633718938],
Cell[1600668, 38955, 75, 1, 70, "Text",ExpressionUUID->"0aae285f-e9f4-4043-8320-99b016aac243",
 CellID->1542785493],
Cell[CellGroupData[{
Cell[1600768, 38960, 202, 5, 70, "Input",ExpressionUUID->"f2ace1d0-71cb-4bd0-9918-febb736415b6",
 CellID->878226973],
Cell[1600973, 38967, 8910, 235, 70, "Output",ExpressionUUID->"01919df4-ca9c-4f92-8c6e-07ea2c9fd474",
 CellID->1614351122]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1609932, 39208, 123, 3, 70, "Subsubsection",ExpressionUUID->"3d754996-e5c8-4cb2-8939-a04de18778ff",
 CellID->360522749],
Cell[1610058, 39213, 160, 4, 70, "MathCaption",ExpressionUUID->"e322f98e-8705-4cc9-afa7-a578b1288790",
 CellID->677226397],
Cell[1610221, 39219, 367, 10, 70, "Input",ExpressionUUID->"e620264e-102b-4d50-852c-9c5e1002b111",
 CellID->480725279],
Cell[1610591, 39231, 365, 8, 70, "MathCaption",ExpressionUUID->"adf9d3da-0da3-4f0b-999b-09d4344c1257",
 CellID->700277754],
Cell[CellGroupData[{
Cell[1610981, 39243, 327, 7, 70, "Input",ExpressionUUID->"4c5c8fa1-3b59-4e14-9313-f3c446a33037",
 CellID->1357825918],
Cell[CellGroupData[{
Cell[1611333, 39254, 423, 10, 70, "Print",ExpressionUUID->"b75d5755-c4ca-48bb-9f52-62d4b4f30d1d",
 CellID->1877585153],
Cell[1611759, 39266, 425, 10, 70, "Print",ExpressionUUID->"cefedc05-776c-4b2c-bd99-b41081ab13ef",
 CellID->163355591],
Cell[1612187, 39278, 422, 10, 70, "Print",ExpressionUUID->"842e7052-23b1-4c95-aef8-d9fd12f41513",
 CellID->259759008],
Cell[1612612, 39290, 425, 10, 70, "Print",ExpressionUUID->"eba6757f-fe67-4221-8d19-13aa8ecae4b0",
 CellID->778641117],
Cell[1613040, 39302, 425, 10, 70, "Print",ExpressionUUID->"70b37ed1-b301-4bc6-93d3-8108147f7c81",
 CellID->617410823],
Cell[1613468, 39314, 421, 10, 70, "Print",ExpressionUUID->"22b17b18-0ca6-4475-bc1a-86736e771b04",
 CellID->71021389],
Cell[1613892, 39326, 422, 10, 70, "Print",ExpressionUUID->"9a5f2d37-e51c-466d-9d60-630bf44183c1",
 CellID->901761449],
Cell[1614317, 39338, 422, 10, 70, "Print",ExpressionUUID->"211ff3ec-8f74-4433-abab-b26f4dc583a8",
 CellID->932516019],
Cell[1614742, 39350, 423, 10, 70, "Print",ExpressionUUID->"89f735ce-2885-427c-bda0-a3556457e2c0",
 CellID->1175383913],
Cell[1615168, 39362, 425, 10, 70, "Print",ExpressionUUID->"bad2167c-334a-4fa1-8859-6118c5414ca9",
 CellID->290081537],
Cell[1615596, 39374, 423, 10, 70, "Print",ExpressionUUID->"786ec2b5-27e6-4abc-b86c-d0d3ce713613",
 CellID->1628114812],
Cell[1616022, 39386, 425, 10, 70, "Print",ExpressionUUID->"f86c3b65-d74d-4150-98fb-89011d28b380",
 CellID->458717401]
}, Open  ]],
Cell[1616462, 39399, 8906, 234, 70, "Output",ExpressionUUID->"3af50b24-1880-42c7-a2e7-71503c493786",
 CellID->197065877]
}, Open  ]],
Cell[1625383, 39636, 94, 1, 70, "MathCaption",ExpressionUUID->"51bf3779-050b-4c79-957e-51e4fd0c8081",
 CellID->1180721070],
Cell[CellGroupData[{
Cell[1625502, 39641, 681, 15, 70, "Input",ExpressionUUID->"0a912c81-ae12-46d5-8d06-4b708a3bf47d",
 CellID->1630125210],
Cell[1626186, 39658, 9020, 237, 70, "Output",ExpressionUUID->"42dd3897-49a1-45e9-af7f-26b2b1952d5f",
 CellID->666411065]
}, Open  ]],
Cell[1635221, 39898, 217, 7, 70, "MathCaption",ExpressionUUID->"f3d222a8-d6df-4937-8a6f-34f0a2a53102",
 CellID->314732997],
Cell[1635441, 39907, 249, 7, 70, "Input",ExpressionUUID->"685a15e2-32e1-4c4b-8232-21bc21e93266",
 CellID->465258018],
Cell[1635693, 39916, 91, 1, 70, "MathCaption",ExpressionUUID->"8a83d6cc-9bb6-42a5-ba2c-98c6afd6cc06",
 CellID->1296207012],
Cell[CellGroupData[{
Cell[1635809, 39921, 198, 6, 70, "Input",ExpressionUUID->"1740d845-7f68-466d-98f1-cd6912e39510",
 CellID->1277135516],
Cell[1636010, 39929, 253, 7, 70, "Output",ExpressionUUID->"147b9fbe-f0ee-489e-a78d-72349f62dcde",
 CellID->1243550350]
}, Open  ]],
Cell[1636278, 39939, 376, 12, 70, "MathCaption",ExpressionUUID->"2ea52157-6253-4c69-b709-ad4ba22f7195",
 CellID->115749397],
Cell[1636657, 39953, 573, 15, 70, "Input",ExpressionUUID->"998184f7-7c62-4648-b806-20f354bf4f0b",
 CellID->1927414844],
Cell[1637233, 39970, 81, 1, 70, "MathCaption",ExpressionUUID->"0cd52118-1cdc-4f03-a2e7-2743af3954ab",
 CellID->889199561],
Cell[CellGroupData[{
Cell[1637339, 39975, 204, 6, 70, "Input",ExpressionUUID->"46fa1b83-6b6b-452d-a0f9-23d2867b8545",
 CellID->438322254],
Cell[1637546, 39983, 290, 7, 70, "Output",ExpressionUUID->"a7b01524-1602-4a91-ba09-a701e85e71ed",
 CellID->1039879846]
}, Open  ]],
Cell[1637851, 39993, 601, 16, 70, "MathCaption",ExpressionUUID->"fc67860f-56ab-41b2-b498-f262ac7ab150",
 CellID->107474856],
Cell[CellGroupData[{
Cell[1638477, 40013, 342, 9, 70, "Input",ExpressionUUID->"e2dd636d-a2e0-44fd-86f2-362ce717eaf5",
 CellID->1335914459],
Cell[CellGroupData[{
Cell[1638844, 40026, 4203, 118, 70, "Print",ExpressionUUID->"18a70fc5-4007-45af-8ad7-823e5b279a9f",
 CellID->1038652436],
Cell[1643050, 40146, 455, 12, 70, "Print",ExpressionUUID->"5e4fc07f-3da2-46ad-b411-f81dbe5a2d9e",
 CellID->1884409036],
Cell[1643508, 40160, 46181, 956, 70, "Print",ExpressionUUID->"8c3f1294-9dd9-4662-9e40-5f7dcce0251e",
 CellID->173842096]
}, Open  ]]
}, Open  ]],
Cell[1689716, 41120, 170, 4, 70, "MathCaption",ExpressionUUID->"8ef58cb3-c9ab-453d-858d-e15369a8a654",
 CellID->40883495],
Cell[1689889, 41126, 223, 7, 70, "Input",ExpressionUUID->"2218df67-1931-42d6-a2d1-9348cac6b4e7",
 CellID->2081617072],
Cell[1690115, 41135, 181, 4, 70, "MathCaption",ExpressionUUID->"048be93d-ee23-48ae-a817-a11d7caae3b9",
 CellID->1475115608],
Cell[1690299, 41141, 289, 7, 70, "Input",ExpressionUUID->"737e50f9-dadf-4f27-9f20-8e3c3211b9f3",
 CellID->1716802688],
Cell[1690591, 41150, 289, 10, 70, "MathCaption",ExpressionUUID->"9b5db0de-1121-4c97-897d-53404fc29a39",
 CellID->454276768],
Cell[1690883, 41162, 249, 7, 70, "Input",ExpressionUUID->"1d582b3e-f126-4ae7-bd89-1cbaaa42a37e",
 CellID->725274691],
Cell[1691135, 41171, 355, 12, 70, "MathCaption",ExpressionUUID->"840ec8b9-ebb3-4275-a247-35d45ca12415",
 CellID->1396633943],
Cell[1691493, 41185, 233, 7, 70, "Input",ExpressionUUID->"a0684353-f1f9-4d82-8935-f966b785cfc5",
 CellID->1230418291]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1691775, 41198, 82, 1, 70, "Subsection",ExpressionUUID->"e9802faf-7f36-4fd6-98f8-da5bde9b5235",
 CellID->298821825],
Cell[1691860, 41201, 892, 28, 70, "Text",ExpressionUUID->"3b8413bd-049c-4149-a6e9-678ea35c4f2d",
 CellID->1481646089],
Cell[1692755, 41231, 161, 4, 70, "MathCaption",ExpressionUUID->"8fc24817-233c-4a91-85ee-3414df021d5a",
 CellID->1952930858],
Cell[CellGroupData[{
Cell[1692941, 41239, 240, 7, 70, "Input",ExpressionUUID->"98492b6f-6091-4e60-a606-e9e62bf0f8ae",
 CellID->768869658],
Cell[1693184, 41248, 92, 2, 70, "Output",ExpressionUUID->"5ccdf3e7-8e4e-4d56-badd-90d9a5e2654a",
 CellID->1856700619]
}, Open  ]],
Cell[1693291, 41253, 141, 4, 70, "MathCaption",ExpressionUUID->"2576c158-ecd3-478e-906e-76e4248ff73f",
 CellID->1337236679],
Cell[CellGroupData[{
Cell[1693457, 41261, 314, 9, 70, "Input",ExpressionUUID->"1a7b8144-20db-4ad7-9475-6c4225dc907e",
 CellID->1520498098],
Cell[1693774, 41272, 269, 8, 70, "Output",ExpressionUUID->"10eb72f3-b261-43d4-af61-7013a05bc80f",
 CellID->1886752990]
}, Open  ]],
Cell[1694058, 41283, 125, 3, 70, "MathCaption",ExpressionUUID->"eaa8bb60-bf36-4c38-a6e2-e4e5e886aeb6",
 CellID->1474915870],
Cell[CellGroupData[{
Cell[1694208, 41290, 381, 8, 70, "Input",ExpressionUUID->"f8663727-d70d-4eab-8911-2ca62a39c530",
 CellID->507289769],
Cell[1694592, 41300, 136, 2, 70, "Print",ExpressionUUID->"6555136b-e682-4b69-9033-9c27d5e14eb0",
 CellID->1019182225],
Cell[1694731, 41304, 10068, 259, 70, "Output",ExpressionUUID->"958d1222-e38a-4d1f-bdea-62fa42531291",
 CellID->1066388514]
}, Open  ]],
Cell[1704814, 41566, 616, 19, 70, "Text",ExpressionUUID->"4a036642-e5c2-49e7-bb29-574503afc61b",
 CellID->754816834],
Cell[1705433, 41587, 99, 1, 70, "MathCaption",ExpressionUUID->"51e8215f-51b1-4171-a8fb-c32bf4272c37",
 CellID->1020626209],
Cell[CellGroupData[{
Cell[1705557, 41592, 126, 3, 70, "Input",ExpressionUUID->"22e38883-4894-4099-a068-2a151b421824",
 CellID->1712806074],
Cell[1705686, 41597, 251, 6, 70, "Output",ExpressionUUID->"b21a895b-9b0a-482a-916b-9e8a72a5ca3d",
 CellID->497917949]
}, Open  ]],
Cell[1705952, 41606, 92, 1, 70, "MathCaption",ExpressionUUID->"bb8f65b6-039c-430b-827e-9e346efa6e6f",
 CellID->1056863292],
Cell[CellGroupData[{
Cell[1706069, 41611, 183, 6, 70, "Input",ExpressionUUID->"6c278735-a06a-4f79-9db7-4251fc02b355",
 CellID->864104307],
Cell[1706255, 41619, 501, 12, 70, "Output",ExpressionUUID->"a224ad6f-0845-49f6-b361-17909d51d04d",
 CellID->2040720583]
}, Open  ]],
Cell[1706771, 41634, 104, 2, 70, "MathCaption",ExpressionUUID->"996d38c7-ed11-4129-b605-bc4c2fedffea",
 CellID->575017700],
Cell[CellGroupData[{
Cell[1706900, 41640, 188, 6, 70, "Input",ExpressionUUID->"06380409-a169-4f3f-b8be-a61fc14b131c",
 CellID->646072400],
Cell[1707091, 41648, 6483, 157, 70, "Output",ExpressionUUID->"4e28f7f4-d608-4693-8e8a-63d7184d8887",
 CellID->1348085108]
}, Open  ]],
Cell[1713589, 41808, 578, 19, 70, "MathCaption",ExpressionUUID->"edf79b83-8b38-4803-8e75-29049323a702",
 CellID->861507568],
Cell[CellGroupData[{
Cell[1714192, 41831, 288, 7, 70, "Input",ExpressionUUID->"8ff26028-805d-4997-be69-abd5ea6b64b6",
 CellID->1022947302],
Cell[1714483, 41840, 615, 12, 70, "Output",ExpressionUUID->"5ef79e7b-909c-4a56-8599-05cbdec9a375",
 CellID->603088833]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1715159, 41859, 64, 1, 70, "Section",ExpressionUUID->"de803970-a37d-4495-8904-f37698e1fda1",
 CellID->1340833355],
Cell[1715226, 41862, 719, 21, 70, "Text",ExpressionUUID->"0de99591-0c58-479c-bc92-ace9c1dcb0fb",
 CellID->834349127],
Cell[CellGroupData[{
Cell[1715970, 41887, 80, 1, 70, "Subsection",ExpressionUUID->"6e08b5a9-e8c4-417a-ba35-887522e27093",
 CellID->1502510612],
Cell[1716053, 41890, 666, 18, 70, "DefinitionBox",ExpressionUUID->"0113f7f8-b6a3-4f9d-a78b-0e235c8d9052",
 CellID->1289482141],
Cell[1716722, 41910, 68, 1, 70, "Caption",ExpressionUUID->"419b7443-9c28-47c6-9250-45c5c6194e6e",
 CellID->2068861910],
Cell[1716793, 41913, 309, 11, 70, "MathCaption",ExpressionUUID->"fc9cca73-be7d-48cc-bc19-de0efa3f7dc4",
 CellID->681556684],
Cell[CellGroupData[{
Cell[1717127, 41928, 298, 8, 70, "Input",ExpressionUUID->"118dd2dc-821c-46aa-b771-79f326e61ce0",
 CellID->245414890],
Cell[1717428, 41938, 10022, 257, 70, "Output",ExpressionUUID->"161e5da1-4e50-4d07-9bf0-65d1542e2106",
 CellID->808884430]
}, Open  ]],
Cell[1727465, 42198, 99, 1, 70, "MathCaption",ExpressionUUID->"d83027dd-277b-4599-8aa8-237508300e92",
 CellID->1179244319],
Cell[CellGroupData[{
Cell[1727589, 42203, 275, 9, 70, "Input",ExpressionUUID->"6f845fa0-232a-401e-902b-e955e3752d6f",
 CellID->764718377],
Cell[1727867, 42214, 699, 15, 70, "Output",ExpressionUUID->"3c39e3c6-0554-4d17-a448-e8ab9122ebc2",
 CellID->729829850]
}, Open  ]],
Cell[CellGroupData[{
Cell[1728603, 42234, 118, 3, 70, "Input",ExpressionUUID->"68bf6e89-0101-4ef0-99c9-b9f39dd41dc1",
 CellID->432691270],
Cell[1728724, 42239, 290, 6, 70, "Output",ExpressionUUID->"9edbce5b-ed9e-4e18-b8ad-f758663270e2",
 CellID->1950743689]
}, Open  ]],
Cell[1729029, 42248, 125, 3, 70, "MathCaption",ExpressionUUID->"31cc7ed7-2523-421c-afb8-b44900a5839d",
 CellID->2090161703],
Cell[CellGroupData[{
Cell[1729179, 42255, 334, 11, 70, "Input",ExpressionUUID->"30932a9d-44b3-4560-bdfa-1ae976ccf7b0",
 CellID->810244695],
Cell[1729516, 42268, 1518, 35, 70, "Output",ExpressionUUID->"c1f28db5-0814-4397-91f4-860ea10da1f0",
 CellID->1387605075]
}, Open  ]],
Cell[CellGroupData[{
Cell[1731071, 42308, 180, 6, 70, "Input",ExpressionUUID->"42b6e978-8888-44d6-8974-4c5889c32c4e",
 CellID->75235690],
Cell[1731254, 42316, 605, 14, 70, "Output",ExpressionUUID->"8c8f2221-18cc-4b45-8c93-9943a786b051",
 CellID->916666016]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1731908, 42336, 72, 1, 70, "Subsection",ExpressionUUID->"64c9e148-7039-4574-9128-861078e86f8f",
 CellID->1764557057],
Cell[1731983, 42339, 1864, 56, 70, "Text",ExpressionUUID->"b95770c7-1264-40a4-b8b6-612a9598264b",
 CellID->32166003],
Cell[1733850, 42397, 384, 9, 70, "Text",ExpressionUUID->"1a8ff0d3-6d68-44ca-8ed2-45be92f1af59",
 CellID->58096227],
Cell[1734237, 42408, 1643, 39, 70, "DefinitionBox",ExpressionUUID->"195eff09-c0c1-464a-8a2f-cfc2ca02755c",
 CellID->1813135289],
Cell[1735883, 42449, 76, 1, 70, "Caption",ExpressionUUID->"867fc5ec-8276-4909-8f93-734adcc6efcd",
 CellID->571851293],
Cell[1735962, 42452, 2252, 55, 70, "DefinitionBox3Col",ExpressionUUID->"8e1ec817-8b3e-47cf-8f1e-a44f2c069cb1",
 CellID->1454392793],
Cell[1738217, 42509, 269, 11, 70, "Caption",ExpressionUUID->"09a6a4a9-f629-428c-8442-2415300cf094",
 CellID->1320801797],
Cell[1738489, 42522, 240, 5, 70, "Text",ExpressionUUID->"4df5cfbf-8547-4e10-a539-a33a06cc0933",
 CellID->416113495],
Cell[1738732, 42529, 6752, 161, 70, "Text",ExpressionUUID->"937e05c5-52ac-4e71-a352-8bbee76d2d1d",
 CellID->1412755833],
Cell[1745487, 42692, 1752, 41, 70, "DefinitionBox",ExpressionUUID->"8011b7c2-4e58-40e4-8eba-86152a9d449a",
 CellID->1608083999],
Cell[1747242, 42735, 303, 11, 70, "Caption",ExpressionUUID->"531e0b97-0e33-4045-9c2b-c0b3d5fd6c5f",
 CellID->986073698],
Cell[1747548, 42748, 147, 4, 70, "MathCaption",ExpressionUUID->"f298ae9d-39e0-489d-a252-513688d5834f",
 CellID->565513990],
Cell[CellGroupData[{
Cell[1747720, 42756, 179, 5, 70, "Input",ExpressionUUID->"9dea48b6-a18b-4558-bc3a-d7557c90bdbd",
 CellID->1978491955],
Cell[1747902, 42763, 10901, 276, 70, "Output",ExpressionUUID->"4df2eb4f-3d62-4ef9-94a8-3add6bd50dbf",
 CellID->92211928]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1758864, 43046, 53, 1, 70, "Section",ExpressionUUID->"782fefde-ee33-401b-891c-e4d4b3a1d2c2",
 CellID->1200455778],
Cell[1758920, 43049, 774, 22, 70, "Text",ExpressionUUID->"3b9945b2-747f-4bd5-84c4-53166bad4bf0",
 CellID->944139540],
Cell[1759697, 43073, 1391, 39, 70, "DefinitionBox",ExpressionUUID->"618bb24d-838c-4736-bbdf-738ec8f56ad1",
 CellID->581300403],
Cell[1761091, 43114, 82, 1, 70, "Caption",ExpressionUUID->"1679dca0-0fe0-4c51-80ad-b639d64e0d35",
 CellID->1012763018],
Cell[1761176, 43117, 852, 25, 70, "DefinitionBox3Col",ExpressionUUID->"115b4f19-4686-4ea6-94de-9a0607bf0a11",
 CellID->2015411944],
Cell[1762031, 43144, 290, 11, 70, "Caption",ExpressionUUID->"e56d68a0-9cba-4de5-b15b-3ff0d69176a7",
 CellID->768978677],
Cell[1762324, 43157, 2901, 77, 70, "DefinitionBox3Col",ExpressionUUID->"c5c7ff97-6cdd-4c5e-a4e1-063b212dfc14",
 CellID->1299131947],
Cell[1765228, 43236, 287, 11, 70, "Caption",ExpressionUUID->"d9b9122b-b68b-48e4-bbf4-0ab21dbc8383",
 CellID->1044394180],
Cell[1765518, 43249, 400, 7, 70, "MathCaption",ExpressionUUID->"8b697018-4364-46df-a8e3-6a9d3a3c4b55",
 CellID->1376228890],
Cell[CellGroupData[{
Cell[1765943, 43260, 146, 4, 70, "Input",ExpressionUUID->"2a7a1dc4-3bb5-495b-8d61-784d1d8d5f53",
 CellID->1880076040],
Cell[1766092, 43266, 787345, 12914, 70, "Output",ExpressionUUID->"c6e4aadd-f4ee-4175-b6de-9a069ad1d86b",
 CellTags->"RasterizedOutput",
 CellID->664801128]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2553486, 56186, 65, 1, 70, "Section",ExpressionUUID->"9f3ef266-fca2-4a66-b908-6881c8250878",
 CellID->2035743524],
Cell[2553554, 56189, 277, 5, 70, "Text",ExpressionUUID->"2a3704b1-3c29-4435-b6cd-702361161505",
 CellID->1722961908],
Cell[CellGroupData[{
Cell[2553856, 56198, 65, 1, 70, "Subsection",ExpressionUUID->"63506619-5a62-4501-a263-2ba12013fd1f",
 CellID->2013711891],
Cell[2553924, 56201, 757, 21, 70, "Text",ExpressionUUID->"3bdc8a33-b98f-448b-8fa0-0e199fe61218",
 CellID->1112357573],
Cell[2554684, 56224, 501, 13, 70, "DefinitionBox",ExpressionUUID->"6f1427ee-f1e6-4710-a0e8-109ed1338729",
 CellID->329777640],
Cell[2555188, 56239, 158, 4, 70, "Caption",ExpressionUUID->"d0399066-1d22-42be-aee3-707466c14769",
 CellID->2064986220],
Cell[2555349, 56245, 10273, 262, 70, "DefinitionBox3Col",ExpressionUUID->"d064fc74-0716-4fbf-acdb-227085153400",
 CellID->740180373],
Cell[2565625, 56509, 248, 10, 70, "Caption",ExpressionUUID->"c410750f-0b00-4ba8-b73a-a38943e29b30",
 CellID->1986245587],
Cell[2565876, 56521, 1943, 59, 70, "Text",ExpressionUUID->"cfdc2445-900a-465d-9e43-b6cc3e9e1a9a",
 CellID->296707676],
Cell[2567822, 56582, 5849, 143, 70, "Text",ExpressionUUID->"dabdbcad-a77b-47f5-8d8d-8ac7ce2706a1",
 CellID->308882198],
Cell[2573674, 56727, 968, 26, 70, "Text",ExpressionUUID->"8304a13f-7814-4cce-b0c2-60922532798d",
 CellID->915126987],
Cell[2574645, 56755, 417, 13, 70, "Text",ExpressionUUID->"501abe05-6e6c-4711-91fa-b144332731d9",
 CellID->875538647],
Cell[2575065, 56770, 744, 23, 70, "DefinitionBox",ExpressionUUID->"e309901c-be0f-43c9-99cb-855f5fd22e5c",
 CellID->1158915490],
Cell[2575812, 56795, 80, 1, 70, "Caption",ExpressionUUID->"1f375321-8078-46f7-ab3a-e69d75e38e14",
 CellID->215962140],
Cell[2575895, 56798, 353, 6, 70, "MathCaption",ExpressionUUID->"6283cd8b-d77c-4d12-9595-78da5766629a",
 CellID->54495101],
Cell[2576251, 56806, 454, 11, 70, "Input",ExpressionUUID->"9fb8f056-2a93-41c0-affa-717e94bdbd41",
 CellID->1071128885],
Cell[2576708, 56819, 88, 1, 70, "MathCaption",ExpressionUUID->"de50e60e-c9e6-4a8a-a6fd-01b07f2d7dac",
 CellID->618975626],
Cell[CellGroupData[{
Cell[2576821, 56824, 114, 3, 70, "Input",ExpressionUUID->"e2edb84d-468c-41f6-ac48-fa1a742a58a8",
 CellID->712560114],
Cell[2576938, 56829, 290, 6, 70, "Output",ExpressionUUID->"4b8e61ec-adb8-4a24-ade5-55ea25733c58",
 CellID->1709177902]
}, Open  ]],
Cell[2577243, 56838, 116, 3, 70, "MathCaption",ExpressionUUID->"258e639c-0ed9-495b-bcfd-c4c928202109",
 CellID->2051853087],
Cell[CellGroupData[{
Cell[2577384, 56845, 221, 6, 70, "Input",ExpressionUUID->"7656652d-1e38-45eb-9311-bd3bf535da26",
 CellID->1202429683],
Cell[2577608, 56853, 43355, 1121, 70, "Output",ExpressionUUID->"f81eeca0-c814-49d6-a6fe-ccb42f833067",
 CellID->1411736642]
}, Open  ]],
Cell[2620978, 57977, 440, 12, 70, "MathCaption",ExpressionUUID->"5b6089de-a787-4130-8e5c-d71979e06361",
 CellID->430804357],
Cell[CellGroupData[{
Cell[2621443, 57993, 227, 7, 70, "Input",ExpressionUUID->"068c1995-8e12-47de-bff9-3b10f9cc582a",
 CellID->1361454062],
Cell[2621673, 58002, 2471, 60, 70, "Output",ExpressionUUID->"f4b020b1-41d8-4f07-b004-a586970e11bf",
 CellID->500244026]
}, Open  ]],
Cell[2624159, 58065, 459, 12, 70, "MathCaption",ExpressionUUID->"0d86811c-eea7-4622-be36-5b11cbc0744a",
 CellID->170022261],
Cell[CellGroupData[{
Cell[2624643, 58081, 213, 6, 70, "Input",ExpressionUUID->"67189fd7-9137-400d-821c-1a1c43bc0f0f",
 CellID->1410890117],
Cell[2624859, 58089, 2572, 74, 70, "Output",ExpressionUUID->"9d279c8e-382a-413e-b1b6-7c303414387f",
 CellID->948909842]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2627480, 58169, 58, 1, 70, "Subsection",ExpressionUUID->"2c0000f7-c889-4b4a-a914-fe7d5637a47d",
 CellID->113475317],
Cell[CellGroupData[{
Cell[2627563, 58174, 138, 4, 70, "Subsubsection",ExpressionUUID->"7cfc29b5-a1e2-4c60-88af-0991cdc42c38",
 CellID->794541302],
Cell[2627704, 58180, 784, 21, 70, "Text",ExpressionUUID->"b0a5c98c-5cb6-413e-bc4a-0ac3505b7630",
 CellID->1511547068],
Cell[2628491, 58203, 523, 13, 70, "DefinitionBox",ExpressionUUID->"395a1730-6df8-4bab-9a39-abaed0c1e827",
 CellID->1987511513],
Cell[2629017, 58218, 187, 4, 70, "Caption",ExpressionUUID->"b5320ca9-017e-4d42-91c4-e261d6064da2",
 CellID->2145353553],
Cell[2629207, 58224, 13202, 323, 70, "DefinitionBox3Col",ExpressionUUID->"8c50395e-bdd5-4cc7-867a-2561fc557c2c",
 CellID->706732141],
Cell[2642412, 58549, 251, 10, 70, "Caption",ExpressionUUID->"02d5790f-77a1-4483-b6eb-3bbd3febc073",
 CellID->315042230],
Cell[2642666, 58561, 153, 5, 70, "Text",ExpressionUUID->"001951d1-129d-45d2-a4c1-41d67e6ff3d6",
 CellID->1844849291],
Cell[2642822, 58568, 281, 9, 70, "Text",ExpressionUUID->"5f538246-7c52-4a4a-a48f-06a2900cae9f",
 CellID->420108894],
Cell[2643106, 58579, 433, 11, 70, "Text",ExpressionUUID->"2232e800-25b5-4620-9cd0-b8ec1fabe43c",
 CellID->1991433769],
Cell[2643542, 58592, 820, 23, 70, "Text",ExpressionUUID->"a18995b1-77e6-484e-9e7b-e1ab058ea455",
 CellID->446395410],
Cell[2644365, 58617, 524, 12, 70, "Text",ExpressionUUID->"92b58263-2603-43b4-b95d-9bebe1bcbf81",
 CellID->1407276899],
Cell[2644892, 58631, 110, 3, 70, "Text",ExpressionUUID->"f960dcd9-2dc8-4aba-b948-9b67301e8d90",
 CellID->1865437082],
Cell[2645005, 58636, 5359, 131, 70, "Text",ExpressionUUID->"29e2a58a-d5dc-491e-ae7c-cc06905b87df",
 CellID->1474295269],
Cell[2650367, 58769, 169, 5, 70, "Text",ExpressionUUID->"38d21bb8-ee33-42da-a4f9-041cb616c4ac",
 CellID->814266997],
Cell[2650539, 58776, 1161, 37, 70, "Text",ExpressionUUID->"a611efc5-2e3c-4713-981b-61c952177b1c",
 CellID->1619619895],
Cell[2651703, 58815, 175, 5, 70, "Text",ExpressionUUID->"5f5c2717-e8ed-4b0b-b2e8-361023052c76",
 CellID->1596349540],
Cell[2651881, 58822, 504, 14, 70, "Text",ExpressionUUID->"719339b8-61cb-4299-8e43-fa9f22331ba1",
 CellID->1333516809],
Cell[2652388, 58838, 973, 26, 70, "Text",ExpressionUUID->"f423aec7-907e-453e-99e3-84785e7135f5",
 CellID->1277668771],
Cell[2653364, 58866, 606, 12, 70, "Text",ExpressionUUID->"52c496ad-ff6e-4db3-8785-3a4d92fd8795",
 CellID->1090047844],
Cell[2653973, 58880, 536, 9, 70, "Text",ExpressionUUID->"c831d77e-f91f-40c1-bb50-d149103dca31",
 CellID->251121551],
Cell[2654512, 58891, 359, 6, 70, "MathCaption",ExpressionUUID->"a9a15b50-f817-4533-9fa4-1c3d88eceb13",
 CellID->1339044942],
Cell[2654874, 58899, 452, 11, 70, "Input",ExpressionUUID->"ddcc8dab-a4fd-4be2-8d98-e5ac0391e941",
 CellID->1847203281],
Cell[2655329, 58912, 121, 3, 70, "MathCaption",ExpressionUUID->"7cff599d-efd6-45ba-8749-2f61d570500d",
 CellID->1921942735],
Cell[CellGroupData[{
Cell[2655475, 58919, 117, 3, 70, "Input",ExpressionUUID->"b0b86bc4-c4a3-48e1-913a-bdfd2193d523",
 CellID->1790012618],
Cell[2655595, 58924, 148, 4, 70, "Output",ExpressionUUID->"635d1794-ab8b-4cd8-b882-6a9bdb12a276",
 CellID->921808109]
}, Open  ]],
Cell[2655758, 58931, 95, 1, 70, "MathCaption",ExpressionUUID->"7638c836-6cff-470a-9d7b-5e52e5020c0e",
 CellID->1116859782],
Cell[CellGroupData[{
Cell[2655878, 58936, 133, 3, 70, "Input",ExpressionUUID->"9b23c307-26dc-4737-879c-f3bba80a14bb",
 CellID->1866845763],
Cell[2656014, 58941, 10576, 271, 70, "Output",ExpressionUUID->"9cf8ddaf-6cd4-465a-8991-d10b3deddb55",
 CellID->881858505]
}, Open  ]],
Cell[CellGroupData[{
Cell[2666627, 59217, 135, 3, 70, "Input",ExpressionUUID->"6d605fba-78d8-4f67-99ce-80039f42545a",
 CellID->1218496248],
Cell[2666765, 59222, 9304, 200, 70, "Output",ExpressionUUID->"62aaf8eb-f322-44c0-8d65-c7bf32b01383",
 CellID->1408890497]
}, Open  ]],
Cell[2676084, 59425, 125, 3, 70, "MathCaption",ExpressionUUID->"81518e41-9123-43d6-b9be-bf08ec8c6ae7",
 CellID->1431426074],
Cell[CellGroupData[{
Cell[2676234, 59432, 265, 7, 70, "Input",ExpressionUUID->"dce44a41-bb73-4154-8868-6a153a73adc4",
 CellID->1866212024],
Cell[2676502, 59441, 32811, 698, 70, "Output",ExpressionUUID->"26dca30f-fbe2-4230-b03d-16e532aae69e",
 CellID->1982568702]
}, Closed]],
Cell[2709328, 60142, 374, 12, 70, "Text",ExpressionUUID->"212d05d9-0f1b-42d8-8283-01a19b3145b1",
 CellID->488726451],
Cell[2709705, 60156, 1318, 36, 70, "DefinitionBox",ExpressionUUID->"c4b78455-4b5f-40dd-b0bf-d3d35eb840e4",
 CellID->2038566199],
Cell[2711026, 60194, 98, 1, 70, "Caption",ExpressionUUID->"2667b408-a580-4070-b1b7-407bdcad946b",
 CellID->1228002355],
Cell[2711127, 60197, 1178, 31, 70, "DefinitionBox3Col",ExpressionUUID->"e0d1d864-175a-428a-a190-9b7e61e716c4",
 CellID->1076877467],
Cell[2712308, 60230, 275, 11, 70, "Caption",ExpressionUUID->"03a844e2-c94a-483e-82e0-5104338f7c2b",
 CellID->87410953],
Cell[2712586, 60243, 315, 11, 70, "MathCaption",ExpressionUUID->"610798db-fcb5-46f3-bed2-b75b71c72463",
 CellID->1660367008],
Cell[2712904, 60256, 405, 12, 70, "Input",ExpressionUUID->"1215dce3-24ab-4f49-92dd-fdab41f9f783",
 CellID->1385794338],
Cell[2713312, 60270, 335, 11, 70, "MathCaption",ExpressionUUID->"e5825140-df82-45c1-8606-5721119b3b7d",
 CellID->1754716454],
Cell[2713650, 60283, 352, 10, 70, "Input",ExpressionUUID->"de8a44d4-a29d-4863-bea4-6ab41620f2f6",
 CellID->126518127]
}, Open  ]],
Cell[CellGroupData[{
Cell[2714039, 60298, 79, 1, 70, "Subsubsection",ExpressionUUID->"93ab2562-ddcd-49a2-a7c1-264d3028a10a",
 CellID->36506248],
Cell[2714121, 60301, 321, 11, 70, "Text",ExpressionUUID->"ca8227a1-a730-429b-9f99-45c817dbd162",
 CellID->1912770077],
Cell[2714445, 60314, 364, 11, 70, "DefinitionBox",ExpressionUUID->"280ac698-d009-48f6-8cb8-9b270218854b",
 CellID->672020044],
Cell[2714812, 60327, 66, 1, 70, "Caption",ExpressionUUID->"d4f1759f-beab-467e-9231-1461ccb354ef",
 CellID->1024379935],
Cell[2714881, 60330, 14082, 335, 70, "DefinitionBox3Col",ExpressionUUID->"eeecee53-6a76-4197-a446-da7e75372c58",
 CellID->812822320],
Cell[2728966, 60667, 266, 11, 70, "Caption",ExpressionUUID->"eb3ba955-6668-4551-b3fa-74ed29f612de",
 CellID->961253673],
Cell[2729235, 60680, 925, 22, 70, "DefinitionBox",ExpressionUUID->"b7bfaf67-78df-4451-a1e5-232b7d8b9c70",
 CellID->746904677],
Cell[2730163, 60704, 318, 11, 70, "Caption",ExpressionUUID->"6c7e884a-ecb6-4904-adfc-fc7ade891d72",
 CellID->1184989624],
Cell[2730484, 60717, 100, 1, 70, "MathCaption",ExpressionUUID->"436ac265-f5a5-405c-a1f8-d5a52184a39d",
 CellID->1676459694],
Cell[CellGroupData[{
Cell[2730609, 60722, 180, 5, 70, "Input",ExpressionUUID->"97f33368-0f7e-4800-b2ce-0b143ef420b0",
 CellID->1272628418],
Cell[2730792, 60729, 358, 9, 70, "Output",ExpressionUUID->"f660301e-e969-4a1c-8bc6-2a4cc3945bd9",
 CellID->545314925]
}, Open  ]],
Cell[2731165, 60741, 74, 1, 70, "MathCaption",ExpressionUUID->"2eca7322-ec55-4477-80f0-06804ba8bc64",
 CellID->1218512518],
Cell[2731242, 60744, 223, 6, 70, "Input",ExpressionUUID->"aead6cdd-0895-4464-8ad7-dfb358b021c7",
 CellID->1135832234],
Cell[2731468, 60752, 77, 1, 70, "MathCaption",ExpressionUUID->"ba9c09db-33e3-40a4-a18d-8bdf06243d2d",
 CellID->64193474],
Cell[CellGroupData[{
Cell[2731570, 60757, 272, 7, 70, "Input",ExpressionUUID->"ac1f9213-128d-41e9-8093-0a7bc7aed474",
 CellID->862926724],
Cell[2731845, 60766, 39988, 663, 70, "Output",ExpressionUUID->"8ea9d667-d891-4f17-bd1d-56da6ee2d008",
 CellID->810394010]
}, Open  ]],
Cell[2771848, 61432, 59, 1, 70, "MathCaption",ExpressionUUID->"4e1f095e-b1da-4d8d-8983-abe047c2ac69",
 CellID->1377198042],
Cell[CellGroupData[{
Cell[2771932, 61437, 298, 9, 70, "Input",ExpressionUUID->"cf231350-5b88-4122-ba08-fad3451cc2b5",
 CellID->988744528],
Cell[2772233, 61448, 39337, 649, 70, "Output",ExpressionUUID->"afbd4ab6-f8df-468f-8391-c2489f1e8a00",
 CellID->2006014202]
}, Open  ]],
Cell[2811585, 62100, 75, 1, 70, "MathCaption",ExpressionUUID->"41b20531-8a3a-4462-914b-fdd96c560232",
 CellID->632012813],
Cell[CellGroupData[{
Cell[2811685, 62105, 615, 15, 70, "Input",ExpressionUUID->"6e1f6b54-2936-47ad-92aa-2008a89f22b2",
 CellID->785230029],
Cell[2812303, 62122, 37475, 622, 70, "Output",ExpressionUUID->"1103ff05-3942-48c7-89bb-6961284feac8",
 CellID->475821867]
}, Open  ]],
Cell[2849793, 62747, 58, 1, 70, "MathCaption",ExpressionUUID->"1b46ae01-4232-44bd-9210-320a042b1d71",
 CellID->983872788],
Cell[CellGroupData[{
Cell[2849876, 62752, 307, 9, 70, "Input",ExpressionUUID->"0e5407b1-5b14-4fc4-93e0-669d1b86e1ff",
 CellID->325866016],
Cell[2850186, 62763, 36759, 607, 70, "Output",ExpressionUUID->"0a194717-52af-4206-aa7d-18b0da57c64f",
 CellID->2019329860]
}, Open  ]],
Cell[2886960, 63373, 95, 1, 70, "Text",ExpressionUUID->"b6cef31f-766d-4700-b87f-524d97ee99dd",
 CellID->973016157],
Cell[2887058, 63376, 115, 3, 70, "MathCaption",ExpressionUUID->"d1a1a0e6-891c-4bd1-82f4-02df62db29b0",
 CellID->499168171],
Cell[CellGroupData[{
Cell[2887198, 63383, 463, 14, 70, "Input",ExpressionUUID->"3e7cdf52-b956-4df9-aa7a-30feccf305f4",
 CellID->1448324815],
Cell[2887664, 63399, 2698, 68, 70, "Output",ExpressionUUID->"8c68a4c4-d0e2-48d0-b28b-985f1f4f1efc",
 CellID->863400676]
}, Open  ]],
Cell[2890377, 63470, 115, 3, 70, "MathCaption",ExpressionUUID->"1f71723a-dddf-42c3-8ff4-cd6ef2db5354",
 CellID->401232237],
Cell[CellGroupData[{
Cell[2890517, 63477, 915, 27, 70, "Input",ExpressionUUID->"603a7237-af52-42ef-8c4c-0c956d58d98b",
 CellID->411555679],
Cell[2891435, 63506, 26581, 578, 70, "Output",ExpressionUUID->"397f43fd-65dc-4ee6-911b-f6e3f1e55406",
 CellID->778663946]
}, Closed]],
Cell[2918031, 64087, 96, 1, 70, "MathCaption",ExpressionUUID->"fe99bd28-d93b-4578-9d95-8f45f073af7f",
 CellID->1111199700],
Cell[CellGroupData[{
Cell[2918152, 64092, 422, 9, 70, "Input",ExpressionUUID->"a66cad02-f7ef-4f51-93ed-9a5084290ea0",
 CellID->1553382050],
Cell[2918577, 64103, 474110, 7779, 70, "Output",ExpressionUUID->"7fa4817f-3912-4861-871b-8874e97ef04d",
 CellTags->"RasterizedOutput",
 CellID->300455873]
}, Open  ]],
Cell[3392702, 71885, 119, 3, 70, "MathCaption",ExpressionUUID->"9d89c720-b2b3-4fd8-b587-41236728c09d",
 CellID->1695062567],
Cell[CellGroupData[{
Cell[3392846, 71892, 262, 7, 70, "Input",ExpressionUUID->"22da9a10-a894-4366-ac78-c59e66613210",
 CellID->398502467],
Cell[3393111, 71901, 568163, 9405, 70, "Output",ExpressionUUID->"e1a26ce1-cfa1-4fb0-9b8a-58412ebca3c7",
 CellID->1509656058]
}, Open  ]],
Cell[3961289, 81309, 119, 3, 70, "MathCaption",ExpressionUUID->"79acea21-8470-4648-bd2d-97fb6a999355",
 CellID->596901522],
Cell[3961411, 81314, 361, 8, 70, "Input",ExpressionUUID->"c83dab1c-f6e4-4868-bc1a-0c488419727e",
 CellID->1227765117]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3961833, 81329, 167, 7, 70, "RelatedTutorialsSection",ExpressionUUID->"83bd62ac-6363-4579-9680-bf43fcfb49e6",
 CellID->415694126],
Cell[3962003, 81338, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"8f82bb7c-4b8b-4008-92eb-d93908bb6746"],
Cell[3962037, 81340, 200, 5, 70, "RelatedTutorials",ExpressionUUID->"54ecfccf-7336-4aa9-b91a-b29f5ae83f55",
 CellID->795520170],
Cell[3962240, 81347, 174, 4, 70, "RelatedTutorials",ExpressionUUID->"87485b4b-2d32-4016-be12-585dac0223fc",
 CellID->1258435320],
Cell[3962417, 81353, 162, 3, 70, "RelatedTutorials",ExpressionUUID->"e42641fa-6076-46aa-93a5-7db6faaaac85",
 CellID->1425023577]
}, Open  ]]
}, Open  ]],
Cell[3962606, 81360, 23, 0, 70, "FooterCell",ExpressionUUID->"c31bcb67-50c9-4384-a8e7-d817e648c2dc"]
}
]
*)

(* End of internal cache information *)
