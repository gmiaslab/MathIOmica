(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   4112970,      84143]
NotebookOptionsPosition[   4010907,      82154]
NotebookOutlinePosition[   4015082,      82241]
CellTagsIndexPosition[   4014999,      82236]
WindowTitle->MathIOmica: Omics Analysis Tutorial
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["MATH I OMICA PACKAGE TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MathIOmica Dynamic Transcriptome\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"], \
"\<\"MathIOmica Overview\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaOverview"], "\<\"MathIOmica \
Guide\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/guide/MathIOmicaGuide"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"RelatedTutorialsSection"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Functions",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Functions", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\")\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/associationList"], "\<\"Applier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Applier"], "\<\"ApplierList\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ApplierList"], "\<\"ApplyBoxCoxTransform\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ApplyBoxCoxTransform"], "\<\"associationList \
(\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/associationList"], "\<\"Autocorrelation\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Autocorrelation"], \
"\<\"BenjaminiHochbergFDR\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/BenjaminiHochbergFDR"], "\<\"ConstantAssociator\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantAssociator"], \
"\<\"ConstantMathIOmicaExamplesDirectory\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"], \
"\<\"ConstantSeriesClean\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantSeriesClean"], "\<\"CorrelationFunction\
\"\>":>Documentation`HelpLookup[
       "paclet:ref/CorrelationFunction"], "\<\"CreateTimeSeries\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/CreateTimeSeries"], "\<\"DataImporter\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporter"], "\<\"DataImporterDirect\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporterDirect"], \
"\<\"DataImporterDirectLabeled\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporterDirectLabeled"], \
"\<\"EnlargeInnerAssociation\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnlargeInnerAssociation"], \
"\<\"EnlargeOuterAssociation\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnlargeOuterAssociation"], \
"\<\"EnrichmentReportExport\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnrichmentReportExport"], \
"\<\"FilteringFunction\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/FilteringFunction"], "\<\"FilterMissing\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/FilterMissing"], "\<\"GeneTranslation\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GeneTranslation"], "\<\"GetGeneDictionary\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GetGeneDictionary"], "\<\"GOAnalysis\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GOAnalysis"], "\<\"Interpolation\"\>":>
       Documentation`HelpLookup[
       "paclet:ref/Interpolation"], "\<\"JoinNestedAssociations\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/JoinNestedAssociations"], \
"\<\"KEGGAnalysis\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/KEGGAnalysis"], "\<\"LombScargle\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/LombScargle"], "\<\"LowValueTag\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/LowValueTag"], "\<\"MeasurementApplier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/MeasurementApplier"], "\<\"Missing\"\>":>
       Documentation`HelpLookup["paclet:ref/Missing"], "\<\"OmicsObject\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObject"], "\<\"OmicsObjectCreator\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectCreator"], \
"\<\"OmicsObjectMerge\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectMerge"], "\<\"OmicsObjectPairedMerge\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectPairedMerge"], \
"\<\"OmicsObjectUniqueMassConverter\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"], \
"\<\"QuantileEstimator\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/QuantileEstimator"], "\<\"QuantileNormalization\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/QuantileNormalization"], "\<\"Returner\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Returner"], "\<\"SeriesApplier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/SeriesApplier"], \
"\<\"SeriesInternalCompare\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/SeriesInternalCompare"], \
"\<\"TimeExtractor\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeExtractor"], \
"\<\"TimeSeriesClassification\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesClassification"], \
"\<\"TimeSeriesClusters\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesClusters"], \
"\<\"TimeSeriesDendrogramHeatmap\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"], \
"\<\"TimeSeriesDendrogramsHeatmaps\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"], \
"\<\"TimeSeriesModelFit\"\>":>Documentation`HelpLookup[
       "paclet:ref/TimeSeriesModelFit"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"TutorialFunction"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"MathIOmica/tutorial/MathIOmicaTutorial\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["MathIOmica/tutorial/MathIOmicaTutorial"]}, Visible -> 
            False]]; SelectionMove[
         DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/MathIOmica/tutorial/\
MathIOmicaTutorial.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$78917], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "MathIOmica/tutorial/MathIOmicaTutorial", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell["MathIOmica: Omics Analysis Tutorial", "Title",
 CellID->509267359],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
      Cell["Loading the MathIOmica Package"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#2133290847", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Metabolomic Data"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#779816621", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Data in MathIOmica"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#671613477", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Combined Data Clustering"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1340833355", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Transcriptome Data"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#540567276", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Visualization"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1200455778", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Proteomic Data"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1387790784", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Annotation and Enrichment"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#2035743524", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]}
  }]], "TutorialJumpBox"],

Cell["\<\
MathIOmica is an omics analysis package designed to facilitate method \
development for the analysis of multiple omics in Mathematica, particularly \
for dynamics (time series/longitudinal data). This extensive tutorial follows \
the analysis of multiple dynamic omics data (transcriptomics, proteomics, and \
metabolomics from human samples). Various MathIOmica functions are introduced \
in the tutorial, including additional discussion of related functionality. We \
should note that the approach methods are simply an illustration of \
MathIOmica functionality, and should not be considered as a definitive \
approach. Additionally, certain details are included to illustrate common \
complications (e.g. renaming samples, combining datasets, transforming \
accessions from one database to another, dealing with replicates and Missing \
data, etc.).\
\>", "Text",
 CellID->2044157074],

Cell["\<\
After a brief discussion of data in MathIOmica, each example data \
(transcriptome, proteome and metabolome) are imported and preprocessed. Next \
a simulation is carried out to obtain datasets for each omics used to assess \
statistical significance cutoffs. The datasets are combined, and classified \
for time series patterns, followed by clustering. The clusters are \
visualized, and biological annotation of Gene Ontology (GO) and pathway \
analysis (KEGG: Kyoto Encyclopedia of Genes and Genomes) are finally \
considered.\
\>", "Text",
 CellID->985017158],

Cell[TextData[{
 StyleBox["N.B.1 ",
  FontWeight->"Bold"],
 "For a more streamlined/simple example with less discussion please check out \
the tutorial on ",
 ButtonBox["MathIOmica Dynamic Transcriptome.",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"]
}], "Text",
 CellID->429607656],

Cell[TextData[{
 StyleBox["N.B.2 ",
  FontWeight->"Bold"],
 "We highly recommend the saving of intermediate results whenever possible. \
Some functions perform lengthy intensive computations and the performance may \
vary from system to system. Please use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Put"]], "paclet:ref/Put"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to save expressions to a file, and equivalently ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Get"]], "paclet:ref/Get"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to recover these expressions."
}], "Text",
 CellID->54176507],

Cell[CellGroupData[{

Cell["Loading the MathIOmica Package", "Section",
 CellID->2133290847],

Cell[TextData[{
 "The functions defined in the ",
 Cell[BoxData["MathIOmica`"], "InlineFormula"],
 " context provide support for conducting analyses of omics data (See also \
the ",
 ButtonBox["MathIOmica Overview",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/tutorial/MathIOmicaOverview"],
 ")."
}], "Text",
 CellID->1534169418],

Cell["This loads the package:", "MathCaption",
 CellID->1217948648],

Cell[BoxData[
 RowBox[{"<<", "MathIOmica`"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->262742254],

Cell["Also we can load MathIOmica as:", "MathCaption",
 CellID->1869508656],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->998742135]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data in MathIOmica", "Section",
 CellID->671613477],

Cell[TextData[{
 "In this section we will discuss the data objects in use by MathIOmica, \
particularly the format of an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 ". The data in the tutorial will be imported as an OmicsObject which is \
first described in this section. Then we present the example data included \
with MathIOmica. The example data will be imported in subsequent sections to \
illustrate analysis methods available in MathIOmica."
}], "Text",
 CellID->1313645745],

Cell[CellGroupData[{

Cell["Data Format: OmicsObject", "Subsection",
 CellID->501197291],

Cell[TextData[{
 "In MathIOmica the calculations utilize what we term an omics object (",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 "). An ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " is an association of associations with some additional characteristics. It \
has an external  (outer) association to denote samples and an internal \
(inner) association for annotation."
}], "Text",
 CellID->1179683263],

Cell[CellGroupData[{

Cell["OmicsObject Structure", "Subsubsection",
 CellID->929984066],

Cell[TextData[{
 "In an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " the outer association has ",
 Cell[BoxData["M"], "InlineFormula"],
 " outer labels as keys, corresponding to ",
 Cell[BoxData["M"], "InlineFormula"],
 " samples. Across the samples there are ",
 Cell[BoxData["N"], "InlineFormula"],
 " inner labels (e.g. identifiers for genes/proteins), and  inner labels are \
the same across samples. For a given ",
 Cell[BoxData[
  SuperscriptBox["j", "th"]], "InlineFormula"],
 " outer label, ",
 Cell[BoxData[
  SubscriptBox["OuterLabel", "j"]], "InlineFormula"],
 ", the ",
 Cell[BoxData[
  SuperscriptBox["k", "th"]], "InlineFormula"],
 " inner label, ",
 Cell[BoxData[
  SubscriptBox["InnerLabel", "k"]], "InlineFormula"],
 " has a value of : "
}], "Text",
 CellID->1165527708],

Cell[TextData[Cell[BoxData[
 RowBox[{
  SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     SubscriptBox["Measurements", "jk"], "}"}], ",", 
    RowBox[{"{", 
     SubscriptBox["Metadata", "jk"], "}"}]}], 
   "}"}]}]], "InlineFormula"]], "Text",
 CellID->1597287192],

Cell[TextData[{
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " structure:"
}], "MathCaption",
 CellID->174991658],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{
   RowBox[{
    SubscriptBox["OuterLabel", "1"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "11"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "11"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "12"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "12"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "13"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "13"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"1", "k"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"1", "k"}]], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"1", "N"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"1", "N"}]], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "2"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "21"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "21"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "22"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "22"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "23"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "23"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"2", "k"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"2", "k"}]], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"2", "N"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"2", "N"}]], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "j"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j1"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j1"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j2"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j2"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j3"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j3"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "jk"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "jk"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "jN"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "jN"], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "M"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M1"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M1"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M2"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M2"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M3"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M3"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "Mk"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "Mk"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "MN"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "MN"], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "\[IndentingNewLine]", "|>"}]], "InlineFormula"]], "Text",
 CellID->1192006303],

Cell[TextData[{
 "For any ",
 Cell[BoxData[
  SuperscriptBox["j", "th"]], "InlineFormula"],
 " outer label, ",
 Cell[BoxData[
  SubscriptBox["OuterLabel", "j"]], "InlineFormula"],
 ", it is possible that the ",
 Cell[BoxData[
  SuperscriptBox["m", "th"]], "InlineFormula"],
 " inner label, ",
 Cell[BoxData[
  SubscriptBox["InnerLabel", "m"]], "InlineFormula"],
 " is missing and takes a Missing[] value in the form ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["InnerLabel", "m"], "\[Rule]", " ", 
   RowBox[{"Missing", "[", "]"}]}]], "InlineFormula"],
 ". This can happen if the measurement was not performed for the sample, or \
no value was recorded (e.g. mass spectrometry data)."
}], "Text",
 CellID->2001356434],

Cell["\<\
For example here is a list of 3 samples using protein identifiers \
(specifically, these are UniProt accessions). The measurements are relative \
intensities in this case and the metadata is the number of peptides per \
sample.\
\>", "MathCaption",
 CellID->299944951],

Cell[BoxData[
 RowBox[{
  RowBox[{"omicsObjectExample", "=", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<FirstSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.937", "}"}], ",", 
           RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.059", "}"}], ",", 
           RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.03", "}"}], ",", 
           RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.268", "}"}], ",", 
           RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"\"\<SecondSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.003", "}"}], ",", 
           RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.779", "}"}], ",", 
           RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.917", "}"}], ",", 
           RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.921", "}"}], ",", 
           RowBox[{"{", "24", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], 
     ",", 
     RowBox[{"\"\<ThirdSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.064", "}"}], ",", 
           RowBox[{"{", "19", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.545", "}"}], ",", 
           RowBox[{"{", "5", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.87", "}"}], ",", 
           RowBox[{"{", "23", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}]}],
     "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[67]:=",
 CellID->1030671948],

Cell[TextData[{
 "The outer labels of an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " are strings, while the inner labels are typically lists of strings. "
}], "Text",
 CellID->1097212187]
}, Open  ]],

Cell[CellGroupData[{

Cell["Methods to Import Data as an OmicsObject", "Subsubsection",
 CellID->1010514183],

Cell[TextData[{
 "There are multiple methods to import data as an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " using MathIOmica. Four functions assist with importing data directly from \
text files:"
}], "Text",
 CellID->1276400541],

Cell[TextData[{
 "(i) ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporter"]], "paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provides a graphical dynamic interface that utilizes file headers to \
assist with the creation of OmicsObject variables from multiple files."
}], "Text",
 CellID->200159297],

Cell[TextData[{
 "(ii) The ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObjectCreator"]], 
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function provides a function to create an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " from already existing/imported data in a Mathematica notebook."
}], "Text",
 CellID->471195666],

Cell[TextData[{
 "(iii) ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirect"]], 
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and (iv) ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirectLabeled"]], 
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provide additional expert mode functions that may be used to directly \
import data as ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " variables without a graphical interface. "
}], "Text",
 CellID->1897113300],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     RowBox[{
      ButtonBox["DataImporter",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/DataImporter"], "[", 
      StyleBox["associationName", "TI"], "]"}], " "}], Cell[TextData[{
     "provides a graphical interface to extract data and create an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " variable ",
     StyleBox["associationName", "TI"],
     " for associations of information."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectCreator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectCreator"], "[", 
     RowBox[{
      StyleBox["outerLabels", "TI"], ",", " ", 
      StyleBox["innerLabels", "TI"], ",", " ", 
      StyleBox["measurements", "TI"], 
      StyleBox[",", "TI"], 
      StyleBox["metadata", "TI"]}], "]"}], Cell[TextData[{
     "creates an ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["OmicsObject"]], "paclet:MathIOmica/ref/OmicsObject"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " for use with MathIOmica. It uses the following inputs:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["outerLabels", "TI"], Cell[
         "Outer labels (keys) for the OmicsObject.", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["innerLabels", "TI"], Cell[
         "Inner labels (keys) for identifiers in the OmicsObject.", 
          "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["measurements", "TI"], Cell[
         "List of measurements for each inner label.", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["metadata", "TI"], Cell[
         "List of metadata for each label.", "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{
       "Columns" -> {{None}}, "Rows" -> {None, None, None, {None}}},
      GridBoxDividers->{"Rows" -> {{True, True, True, True, True}}}}]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["DataImporterDirect",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/DataImporterDirect"], "[", 
     RowBox[{
      StyleBox["positionsList", "TI"], ",", " ", 
      StyleBox["fileList", "TI"], ",", " ", 
      StyleBox["headerLines", "TI"]}], "]"}], Cell[TextData[{
     StyleBox["Expert Usage:",
      FontSlant->"Italic"],
     " The ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["DataImporterDirect"]], 
        "paclet:MathIOmica/ref/DataImporterDirect"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function is a helper function originally created for ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["DataImporter"]], "paclet:MathIOmica/ref/DataImporter"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". ",
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["DataImporterDirect"]], 
         "paclet:MathIOmica/ref/DataImporterDirect"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{
        StyleBox["positionsList", "TI"], ",", " ", 
        StyleBox["fileList", "TI"], ",", " ", 
        StyleBox["headerLines", "TI"]}], "]"}]], "InlineFormula"],
     " creates an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " importing the column number in ",
     Cell[BoxData[
      StyleBox["positionsList", "TI"]], "InlineFormula"],
     "  from the ",
     Cell[BoxData[
      StyleBox["fileList", "TI"]], "InlineFormula"],
     " file path list, and importing data by skipping a number of ",
     Cell[BoxData[
      StyleBox["headerLines", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["DataImporterDirectLabeled",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/DataImporterDirectLabeled"], "[", 
     RowBox[{
      StyleBox["sampleRules", "TI"], ",", " ", 
      StyleBox["fileList", "TI"], ",", " ", 
      StyleBox["headerLines", "TI"], ",", " ", 
      StyleBox["headerColumnAssociations", "TI"]}], "]"}], Cell[TextData[{
     StyleBox["Expert Usage:",
      FontSlant->"Italic"],
     " The ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["DataImporterDirectLabeled"]], 
        "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function creates an ",
     Cell[BoxData["OmicsObject"], "InlineFormula"],
     " association for ",
     Cell[BoxData[
      StyleBox["variableName", "TI"]], "InlineFormula"],
     ", by imporing data from the files at the paths specified in the ",
     Cell[BoxData[
      StyleBox["fileList", "TI"]], "InlineFormula"],
     ", using the ",
     Cell[BoxData[
      StyleBox["sampleRules", "TI"]], "InlineFormula"],
     " as a label to column header imported rule for each file, and the ",
     Cell[BoxData[
      StyleBox["headerColumnAssociations", "TI"]], "InlineFormula"],
     " list of associations to associate column headers to column positions \
for each file."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->953451491],

Cell[TextData[{
 "Functions for importing/creating ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " datasets."
}], "Caption",
 CellID->7357]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with OmicsObject Data", "Subsubsection",
 CellID->1310432575],

Cell[TextData[{
 "An ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " is an association of associations, and so ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " can be used directly to access and manipulate components. MathIOmica also \
offers multiple functions that can implement computations and manipulation of \
an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 ":"
}], "Text",
 CellID->1202669251],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["Applier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/Applier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", " ", 
      StyleBox["inputData", "TI"]}], "]"}], Cell[TextData[{
     "applies ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to OmicsObject, association or list ",
     Cell[BoxData[
      StyleBox["inputData", "TI"]], "InlineFormula"],
     " components."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["ApplierList",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ApplierList"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", " ", 
      StyleBox["inputData", "TI"]}], "]"}], Cell[TextData[{
     "applies ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to list of lists from an association, nested association or components \
or a matrix ",
     Cell[BoxData[
      StyleBox["inputData", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["ConstantAssociator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantAssociator"], "[", 
     RowBox[{
      StyleBox["inputAssociation", "TI"], ",", " ", 
      StyleBox["associationAddition", "TI"]}], "]"}], Cell[TextData[{
     "adds multi key constant to an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " (or an association of associations) ",
     Cell[BoxData[
      StyleBox["inputAssociation", "TI"]], "InlineFormula"],
     ", with each addition specified in a single association ",
     Cell[BoxData[
      StyleBox["associationAddition", "TI"]], "InlineFormula"],
     ", of form <|addition1\[Rule] Value1,addition2\[Rule] Value2,...|>."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["CreateTimeSeries",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/CreateTimeSeries"], "[", 
     StyleBox["dataIn", "TI"], "]"}], Cell[TextData[{
     "creates a time series list across an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " ",
     Cell[BoxData[
      StyleBox["dataIn", "TI"]], "InlineFormula"],
     " using outer Keys for points."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["EnlargeInnerAssociation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnlargeInnerAssociation"], "[", 
     StyleBox["omicsObjectList", "TI"], "]"}], Cell[TextData[{
     "combines a list of OmicsObject (associations of associations)  ",
     Cell[BoxData[
      StyleBox["omicsObjectList", "TI"]], "InlineFormula"],
     " elements  by enlarging the inner associations - inner association Keys \
must be different."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["EnlargeOuterAssociation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnlargeOuterAssociation"], "[", 
     StyleBox["omicsObjectList", "TI"], "]"}], Cell[TextData[{
     "combines a list, ",
     Cell[BoxData[
      StyleBox["omicsObjectList", "TI"]], "InlineFormula"],
     ", of OmicsObject (or associations of associations) elements to a \
combined output by enlarging the outer associations - outer association keys \
must be different."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["FilteringFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilteringFunction"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", 
      StyleBox["cutoff", "TI"]}], "]"}], Cell[TextData[{
     "filters an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " data by a chosen ",
     Cell[BoxData[
      StyleBox["comparison", "Text"]], "InlineFormula",
      ShowStringCharacters->False],
     " (by default greatr or equal) to a ",
     Cell[BoxData[
      StyleBox["cutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["FilterMissing",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilterMissing"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["percentage", "TI"]}], "]"}], Cell[TextData[{
     "filters out data from ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " if across the datasets a ",
     Cell[BoxData[
      StyleBox["percentage", "TI"]], "InlineFormula"],
     " of data points is missing."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["LowValueTag",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/LowValueTag"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["valueCutoff", "TI"]}], "]"}], Cell[TextData[{
     "takes an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " and tags values in specified position as ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Missing"]], "paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "[] based on provided ",
     Cell[BoxData[
      StyleBox["valueCutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["MeasurementApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/MeasurementApplier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", 
      StyleBox["omicsObject", "TI"]}], "]"}], Cell[TextData[{
     "applies a ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to the measurement list of an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", ignoring missing values."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectMerge",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectMerge"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["2", "TR"]], ",", " ", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
      StyleBox["f", "TI"]}], "]"}], Cell[TextData[{
     "merges a list of ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " components ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["2", "TR"]], ",", " ", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]]],
     ", using the function ",
     StyleBox["f", "TI"],
     " to combine values with the same inner and outer keys."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectPairedMerge",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectPairedMerge"], "[", 
     RowBox[{
      SubscriptBox[
       StyleBox["omicsObject", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["omicsObject", "TI"], 
       StyleBox["2", "TR"]]}], "]"}], Cell[TextData[{
     "merges pairwise ",
     Cell[BoxData[
      StyleBox["omicsObject1", "TI"]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      StyleBox["omicsObject2", "TI"]], "InlineFormula"],
     " values that have the same inner and outer keys."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["Returner",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/Returner"], "[", 
     RowBox[{
      StyleBox["originalAssociation", "TI"], ",", " ", 
      StyleBox["update", "TI"]}], "]"}], Cell[TextData[{
     "returns a modified ",
     Cell[BoxData[
      StyleBox["originalAssociation", "TI"]], "InlineFormula"],
     " updated at a specified position by the single association ",
     Cell[BoxData[
      StyleBox["update", "TI"]], "InlineFormula"],
     ", e.g. from ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Applier"]], "paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ApplierList"]], "paclet:MathIOmica/ref/ApplierList"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " result."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->438464085],

Cell[TextData[{
 "Functions for manipulating ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " datasets."
}], "Caption",
 CellID->1249483738]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example Data ", "Subsection",
 CellID->490101258],

Cell[TextData[{
 "MathIOmica comes with multiple example data. The data can be found in the \
",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]], 
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->249980817],

Cell["\<\
We can get a listing of the current example Data by evaluating:\
\>", "MathCaption",
 CellID->2139419895],

Cell[BoxData[
 RowBox[{"FileNames", "[", 
  RowBox[{"__", ",", "ConstantMathIOmicaExamplesDirectory"}], "]"}]], "Input",\

 CellLabel->"In[3]:=",
 CellID->1911473544],

Cell[TextData[{
 "The data contains both initial (raw) data and additionally intermediate \
data that have been analyzed in MathIOmica and are used in the examples (",
 StyleBox["N.B.",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" these files should ",
  FontSlant->"Italic"],
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" be altered or removed",
  FontSlant->"Italic"],
 "). The dynamic raw datasets are from an integrative Personal Omics Profile \
as described below:"
}], "Text",
 CellID->1570546560],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"i", 
         StyleBox[
          StyleBox["n", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "tegrativ", 
         StyleBox[
          StyleBox[
           StyleBox["e", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"P", 
         StyleBox[
          StyleBox["e", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "rsona", 
         StyleBox[
          StyleBox[
           StyleBox["l", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"O", 
         StyleBox[
          StyleBox["m", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "ic", 
         StyleBox[
          StyleBox[
           StyleBox["s", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"P", 
         StyleBox["r", "TR",
          FontWeight->"Bold"], "of", 
         StyleBox["i", "TR",
          FontWeight->"Bold"], "li", 
         StyleBox["n", "TR",
          FontWeight->"Bold"], 
         StyleBox[
          StyleBox["g", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       RowBox[{
        StyleBox[
         StyleBox[
          StyleBox["(", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"], 
        StyleBox[
         RowBox[{
          StyleBox[
           StyleBox["i", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "PO", 
          StyleBox[
           StyleBox["P", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"]}]], 
        StyleBox[
         StyleBox[
          StyleBox[")", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"]}]}], "\n"}], "TR",
     FontWeight->"Bold"], Cell[TextData[{
     "Data from the first integrative Omics Profiling (iPOP) is used \
comprised of dynamics from proteomics transcriptomics and metabolomics. The \
data corresponds to a time series analysis of omics from blood componenets \
from a single individual.\nDifferent samples (from 7 to 21 included here) \
were obtained at different time points. The time points included here \
correspond to days ranging from 186th to the 400th day of the study, (this \
can be represented in the following sample to day association: ",
     StyleBox[
     "\[LeftAssociation]7\[Rule]186,8\[Rule]255,9\[Rule]289,10\[Rule]290,11\
\[Rule]292,12\[Rule]294,13\[Rule]297,14\[Rule]301,15\[Rule]307,16\[Rule]311,\
17\[Rule]322,18\[Rule]329,19\[Rule]369,20\[Rule]380,21\[Rule]400\
\[RightAssociation]", "InlineCode"],
     ". On day 289 the subject of the study had a Respiratory syncytial virus \
infection. Additionally, after day 301, the subject displayed high glucose \
levels and was eventually diagnosed with type 2 diabetes. The analyzed mapped \
data are used in these examples for illustrative purposes - these and \
additional dynamic omics data that will become available can also be accessed \
MathIOmica website at https://mathiomica.org. More information regarding the \
iPOP dataset can also be found in the original iPOP paper: ",
     Cell[BoxData[{
      StyleBox[
       RowBox[{
        SuperscriptBox["Chen", "*"], ",", 
        SuperscriptBox["Mias", "*"], ",", 
        RowBox[{"Li", "-", "Pook", "-", 
         SuperscriptBox["Than", "*"]}], ",", 
        RowBox[{
         SuperscriptBox["Jiang", "*"], " ", "et", " ", 
         RowBox[{"al", "."}]}], ",", 
        RowBox[{
         StyleBox["Personal",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Omics",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Profiling",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Reveals",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Dynamic",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Molecular",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["and",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Medical",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox["Phenotypes",
           FontSlant->"Italic"], 
          StyleBox[".",
           FontSlant->"Italic"], 
          StyleBox["  ",
           FontSlant->"Italic"], "Cell"}], " ", "148", 
         RowBox[{"(", "6", ")"}]}], ",", 
        RowBox[{"p1293", " ", 
         RowBox[{"(", "2012", ")"}]}], ",", 
        RowBox[{"PMID", ":", "22424236."}]}], "TR"], "\n", 
      StyleBox[
       RowBox[{
        RowBox[{"http", ":"}], "//", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"dx", ".", "doi", ".", "org"}], "/", "10.1016"}], "/", 
          RowBox[{"j", ".", "cell"}]}], ".2012", ".02", 
         RowBox[{".009", "."}]}]}], "TR"]}], "InlineFormula"],
     "\nand related review (including summary):\n",
     Cell[BoxData[
      RowBox[{
       RowBox[{
        StyleBox["Mias", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["and", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["Snyder", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["Personal", "TR",
         FontSlant->"Italic"], 
        StyleBox[" ", "TR"], 
        StyleBox["Genomes", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Quantitative", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Dynamic", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Omics", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["and", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Personalized", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox[
         RowBox[{"Medicine", ".", "  ", "\n", 
          StyleBox["Quantitative",
           FontSlant->"Plain"]}], "TI"], 
        StyleBox[" ", "TR"], 
        StyleBox["Biology", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["1", "TR"], 
        StyleBox[
         RowBox[{"(", "1", ")"}], "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox[
         RowBox[{"(", "2013", ")"}], "TR"]}], 
       StyleBox[",", "TR"], 
       StyleBox[" ", "TR"], 
       StyleBox[
        RowBox[{
         RowBox[{"PMCID", ":", 
          RowBox[{"PMC4366006", ".", "\n", 
           RowBox[{"http", ":"}]}]}], "//", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dx", ".", "doi", ".", "org"}], "/", "10.1007"}], "/", 
           "s40484"}], "-", "013", "-", "0005", "-", "3."}]}], "TR"]}]], 
      "InlineFormula"]
    }], "TableText"]},
   {
    StyleBox[
     RowBox[{"Example", " ", 
      StyleBox[
       RowBox[{"i", 
        StyleBox["P", "TI",
         FontWeight->"Bold"], "OP"}]], 
      StyleBox[" ", "TR",
       FontWeight->"Bold"], 
      StyleBox[
       RowBox[{
        StyleBox[
         StyleBox["S", "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"], "et"}]], " ", "Description"}], "TI",
     FontWeight->"Bold"], Cell[TextData[{
     StyleBox["File Names located in the ", "TI",
      FontWeight->"Bold"],
     StyleBox[ButtonBox["ConstantMathIOmicaExamplesDirectory",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"],
      FontWeight->"Bold",
      FontSlant->"Italic"],
     StyleBox[".", "TI",
      FontWeight->"Bold"]
    }], "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox[
      RowBox[{"Transcriptome", "."}],
      FontWeight->"Bold"], " ", "The", " ", "transcriptomic", " ", "data", 
     " ", "included", " ", "was", " ", "obtained", " ", "from", " ", 
     "mapping", " ", "of", " ", "the", "  ", "originally", " ", "RNA", " ", 
     "Sequencing", " ", "raw", " ", "data", " ", "using", " ", "the", " ", 
     "Tuxedo", " ", 
     RowBox[{"suite", ".", " ", "The"}], " ", "data", " ", "corresponds", " ",
      "to", " ", "transcriptome", " ", "from", " ", "peripheral", " ", 
     "blood", " ", "mononuclear", " ", "cells", " ", 
     RowBox[{
      RowBox[{"(", "PBMCs", ")"}], "."}]}], Cell["\<\
iPOP_ 07_genes.fpkm_tracking
iPOP_ 08_genes.fpkm_tracking
iPOP_ 09_genes.fpkm_tracking
iPOP_ 10_genes.fpkm_tracking
iPOP_ 11_genes.fpkm_tracking
iPOP_ 12_genes.fpkm_tracking
iPOP_ 13_genes.fpkm_tracking
iPOP_ 14_genes.fpkm_tracking
iPOP_ 15_genes.fpkm_tracking
iPOP_ 16_genes.fpkm_tracking
iPOP_ 17_genes.fpkm_tracking
iPOP_ 18_genes.fpkm_tracking
iPOP_ 19_genes.fpkm_tracking
iPOP_ 20_genes.fpkm_tracking
iPOP_ 21_genes.fpkm_tracking\
\>", "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox["Proteome",
       FontWeight->"Bold"], 
      StyleBox[".",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], "The"}], " ", "Proteomics", " ", "data", " ", 
     "from", " ", "analysis", " ", "of", " ", "mass", " ", "spectrometry", 
     " ", "data", " ", "using", " ", "the", " ", "Sequest", " ", "algorithm", 
     " ", "implemented", " ", "by", " ", 
     RowBox[{"ProteomeDiscoverer", ".", " ", "The"}], " ", "data", " ", 
     "corresponds", " ", "to", " ", "proteome", " ", "from", " ", 
     RowBox[{"PBMCs", ".", "\n", "The"}], " ", "names", " ", "of", " ", "the",
      " ", "files", " ", "provide", " ", "a", " ", "correspondence", " ", 
     "of", " ", "samples", " ", "to", " ", "Tandem", " ", "Mass", " ", "Tag", 
     " ", "labels", " ", "in", " ", "order", " ", "of", " ", "increasing", 
     " ", 
     RowBox[{"m", "/", "z"}], " ", "values", "  ", "from", " ", "126", " ", 
     "to", " ", "131", " ", 
     RowBox[{"amu", ".", " ", "6"}], " ", "TMT", " ", "labels", " ", "were", 
     " ", "used", " ", "in", " ", "each", " ", 
     RowBox[{"experiment", ".", "\n", "The"}], " ", "data", " ", "has", " ", 
     "been", " ", "adapted", " ", "from", " ", "the", " ", "original", " ", 
     "to", " ", "UniProt", " ", 
     RowBox[{"accessions", "."}]}], Cell["\<\
8_7_9_10_11_14_MulticonsensusReports_3Replicates.csv
8_12_13_15_16_14_MulticonsensusReports_3Replicates.csv
8_17_19_20_21_14_MulticonsensusReports_3Replicates.csv\
\>", "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox["Metabolome",
       FontWeight->"Bold"], 
      StyleBox[".",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], "The"}], " ", "Metabolomics", " ", "data", " ", 
     "from", " ", "analysis", " ", "of", " ", "mass", " ", "spectrometry", 
     " ", 
     RowBox[{"data", ".", " ", "The"}], " ", "data", " ", "corresponds", " ", 
     "to", " ", "small", " ", "molecule", " ", "metabolomics", " ", "from", 
     " ", "plasma", " ", "ran", " ", "with", " ", "technical", " ", 
     RowBox[{"triplicates", ".", "\n", "The"}], " ", "names", " ", "of", " ", 
     "the", " ", "files", " ", "provide", " ", "a", " ", "correspondence", 
     " ", "of", " ", "samples", " ", "ran", " ", "in", " ", "positive", " ", 
     "or", " ", "negative", " ", 
     RowBox[{"mode", "."}]}], Cell["\<\
metabolomics_negative_mode.csv
metabolomics_positive_mode.csv\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1722327182],

Cell[TextData[{
 "Description of Example iPOP original datasets and corresponding files in \
the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]], 
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". ",
 StyleBox["N.B.",
  FontWeight->"Bold"],
 " this table is provided as a reference for the examples, and these files \
should ",
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be altered or removed."
}], "Caption",
 CellID->231225297],

Cell["\<\
Various analyzed datasets are used in the MathIOmica documentation for \
examples:\
\>", "Text",
 CellID->1540904390],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{"Data", 
      StyleBox[
       RowBox[{" ", 
        StyleBox[" ", "TI",
         FontWeight->"Bold"]}]], "Description"}], "TI",
     FontWeight->"Bold"], Cell[TextData[{
     StyleBox["File Name(s) ", "TI",
      FontWeight->"Bold"],
     StyleBox["located in the ", "TI",
      FontWeight->"Bold"],
     StyleBox[Cell[BoxData[
      RowBox[{" ", 
       ButtonBox["ConstantMathIOmicaExamplesDirectory",
        BaseStyle->"Link",
        ButtonData->
         "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"]}]], "TI",
      FontWeight->"Bold"], "TI"],
     StyleBox[".", "TI",
      FontWeight->"Bold"]
    }], "TableText"]},
   {
    RowBox[{
    "iPOP", " ", "transcriptome", " ", "imported", " ", "as", " ", "an", " ", 
     "OmicsObject", " ", "across", " ", "all", " ", 
     RowBox[{"timepoints", 
      StyleBox[".",
       FontWeight->"Bold"]}]}], "rnaExample"},
   {
    RowBox[{
    "iPOP", " ", "proteome", " ", "data", " ", "imported", " ", "as", " ", 
     "an", " ", "OmicsObject", " ", "across", " ", "all", " ", 
     RowBox[{"timepoints", "."}]}], Cell["proteinExample", "TableText"]},
   {
    RowBox[{
    "iPOP", " ", "metabolome", " ", "data", " ", "imported", " ", "as", " ", 
     "an", " ", "OmicsObject", " ", "across", " ", "all", " ", "timepoints", 
     " ", "and", " ", "technical", " ", "replicates", " ", "for", " ", 
     "negative", " ", "and", " ", "positive", " ", "mode", " ", "aligned", 
     " ", "mass", " ", "spectrometry", " ", 
     RowBox[{"features", "."}]}], Cell["\<\
metabolomicsNegativeModeExample
metabolomicsPositiveModeExample\
\>", "TableText"]},
   {
    RowBox[{"Example", " ", "time", " ", "series", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinTimeSeriesExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "classification", " ", "results", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinClassificationExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "classification", " ", "results", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinClusteringExample", "TableText"]},
   {
    RowBox[{
     RowBox[{
     "Example", " ", "combined", " ", "clustering", " ", "results", " ", 
      "from", " ", "transcriptome"}], ",", " ", 
     RowBox[{"proteome", " ", "and", " ", "metabolome", " ", 
      RowBox[{"data", "."}]}]}], Cell["combinedClustersExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "enrichment", " ", "analysis", " ", "results", " ", "for",
      " ", "Gene", " ", "Ontology", " ", "and", " ", "KEGG", " ", "pathway", 
     " ", "analysis", " ", "for", " ", "combined", " ", "omics", " ", "data", 
     " ", "in", " ", "this", " ", 
     RowBox[{"tutorial", "."}]}], Cell["\<\
combinedGOAnalysis
combinedKEGGAnalysis\
\>", "TableText"]},
   {
    RowBox[{
    "Spectra", " ", "from", " ", "proteomics", " ", "mass", " ", 
     "spectrometry", " ", "data", " ", 
     RowBox[{"examples", "."}]}], Cell["\<\
small.pwiz.1.1.mzML
exampleMS3.mzXML\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->312091046],

Cell[TextData[{
 "Description of example analyzed datasets and corresponding files in the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]], 
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". ",
 StyleBox["N.B.",
  FontWeight->"Bold"],
 " this table is provided as a reference for the examples, and these files \
should ",
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be altered or removed."
}], "Caption",
 CellID->1159144148]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transcriptome Data", "Section",
 CellID->540567276],

Cell["\<\
In this section we import the example transcriptome iPOP dataset, and \
illustrate a preprocessing approach for this omic dataset.\
\>", "Text",
 CellID->1827655092],

Cell[CellGroupData[{

Cell["Importing OmicsObject Transcriptome Data", "Subsection",
 CellID->257268298],

Cell[TextData[{
 "We first import the transcriptomics data example (for details on how to \
import such data please refer to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporter"]], "paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirect"]], 
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirectLabeled"]], 
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObjectCreator"]], 
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->1539574452],

Cell[TextData[{
 "We import the transcriptomics ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"]
}], "MathCaption",
 CellID->787376419],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", "\"\<rnaExample\>\""}], 
     "}"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[68]:=",
 CellID->641241319],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.73998`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 68, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 68, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 68, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[68], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[68]=",
 CellID->76837286]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->546537213],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[69]:=",
 CellID->863380672],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", 
   ",", "\<\"11\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>",
    ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", 
   ",", "\<\"18\"\>", ",", "\<\"19\"\>", ",", "\<\"20\"\>", 
   ",", "\<\"21\"\>"}], "}"}]], "Output",
 CellLabel->"Out[69]=",
 CellID->1272316944]
}, Open  ]],

Cell["\<\
Notice that we have used \"@\" to form a Query using a prefix function \
application, which is used throughout the MathIOmica tutorials and \
documentation. This is the same as using the [ ] form:\
\>", "Text",
 CellID->1566749700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "[", "rnaExample", "]"}]], "Input",
 CellLabel->"In[70]:=",
 CellID->908486935],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", 
   ",", "\<\"11\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>",
    ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", 
   ",", "\<\"18\"\>", ",", "\<\"19\"\>", ",", "\<\"20\"\>", 
   ",", "\<\"21\"\>"}], "}"}]], "Output",
 CellLabel->"Out[70]=",
 CellID->535902783]
}, Open  ]],

Cell[TextData[{
 "We can get the expression raw data from any sample and entry. For example, \
the ",
 Cell[BoxData[
  SuperscriptBox["10", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["14", "th"]], "InlineFormula"],
 " entries in sample 12:"
}], "MathCaption",
 CellID->392276805],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<12\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"7777", ",", "55"}], "}"}]}], "]"}], "@", 
  "rnaExample"}]], "Input",
 CellLabel->"In[71]:=",
 CellID->221465345],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "21.1197`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0.560212`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[71]=",
 CellID->29914394]
}, Open  ]],

Cell[TextData[{
 "The keys correspond to \"Gene Symbols\" and are also tagged with an \"RNA\" \
label. The values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<FPKM\>\"", " ", "values"}], "}"}], ",", 
    RowBox[{"{", "\"\<FPKM status\>\"", "}"}]}], "}"}]], "InlineFormula"],
 ". Here, FPKM stands for Fragments Per Kilobase of transcript per Million \
mapped reads. The example is from mapped RNA-Sequencing data. FPKM is then a \
relative measure of transcript (gene) expression."
}], "Text",
 CellID->464982744],

Cell["\<\
We can query all timepoints for a particular gene of interest if it exists. \
We must use the same labels as the actual keys of the OmicsObject:\
\>", "MathCaption",
 CellID->1833142640],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{"Key", "@", 
     RowBox[{"{", 
      RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}]}]}], "]"}], "@", 
  "rnaExample"}]], "Input",
 CellLabel->"In[72]:=",
 CellID->1827950618],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "12.7644`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "14.9997`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "15.8482`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.3504`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "18.5309`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.7081`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "14.6549`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.3951`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "8.93065`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.2545`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.9217`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.0331`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "18.7293`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "10.8115`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "12.9051`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[72]=",
 CellID->679977437]
}, Open  ]],

Cell["\<\
We note that we added Key@ before the bracket to indicate that this list is \
used as a key for the inner associations.\
\>", "Text",
 CellID->1488223786],

Cell["\<\
We can query all timepoints for multiple genes of interest if it exists. We \
must use the same labels as the actual keys of the OmicsObject:\
\>", "MathCaption",
 CellID->1609229737],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Key", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}]}], ",", 
      RowBox[{"Key", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<NDNL2\>\"", ",", "\"\<RNA\>\""}], "}"}]}]}], "}"}]}], 
   "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[73]:=",
 CellID->915139441],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.7644`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "13.6201`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.9997`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.3813`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "15.8482`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2763`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3504`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.2483`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.5309`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.3254`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.7081`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.1197`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.6549`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.0412`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3951`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.1224`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "8.93065`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.4774`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2545`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "23.6771`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.9217`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.8782`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.0331`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.4414`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.7293`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "19.9134`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.8115`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.5756`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.9051`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.55`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[73]=",
 CellID->794006111]
}, Open  ]],

Cell["Or in a more concise form", "MathCaption",
 CellID->1516242184],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<NDNL2\>\"", ",", "\"\<RNA\>\""}], "}"}]}], "}"}]}]}], 
   "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[74]:=",
 CellID->1441431186],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.7644`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "13.6201`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.9997`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.3813`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "15.8482`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2763`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3504`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.2483`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.5309`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.3254`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.7081`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.1197`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.6549`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.0412`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3951`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.1224`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "8.93065`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.4774`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2545`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "23.6771`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.9217`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.8782`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.0331`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.4414`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.7293`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "19.9134`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.8115`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.5756`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.9051`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.55`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[74]=",
 CellID->702184882]
}, Open  ]],

Cell["\<\
We should also note that  we can take advantage of Mathematica's native \
direct access to Wolfram Alpha,  to look up any \"Gene Symbol\" information \
by evaluating (needs a network connection):\
\>", "MathCaption",
 CellID->1478232418],

Cell["NFKBIB", "WolframAlphaLong",
 CellLabel->"In[75]:=",
 CellID->413937183],

Cell["Here is an image of the output:", "Text",
 CellID->90413432],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd0FNXbxkE/qigKiICAgFhQBAWUZkVAsaAI+kdFRaVXaYL0TkKvkRII
EEIooYQOgRB6Db2ZLCUkIZ10ks0mme+ZvXEcdnY3m56wz+/k5Ny5c+f2ue/z
zszO1P5t4Dc9HitWrNiQ0vj3za/DPxo8+Ne/Oj6NjW8HDOndc0D3bu0GDO3e
s/vgZr89jshmpYoV24j0clgihBBCiH2TlpYWFRV19+5dnU73DyGEEEKKPrDp
sOyw77DyZq1/XFwc0gQHByNNfHx8YmLiA0IIIYQUZWDNYdNh2YOCgmDlY2Nj
Tax/dHQ0REJMTExB15QQQggheQKsvL+/P8SAie8PhVDQVSOEEEJIHgJbL/x9
cd8f1p++PyGEEGIPiOsAqampUVFRwcHBBV0dQgghhOQTQUFB4eHh4snAgq4L
IYQQQvIJ2P07d+7w7j8hhBBiV8Du+/v7//PPP1Z+8RcbGxsYGCiSEUIIIaTw
A6sN2w0Lbsm4w+6LlFasP/aGhIRAKuj1egMhhBBCCjcpKSmw4GFhYX5+flY0
gBUBgKNwbFRUVGpqat69e5AQQggheUFMTAxMvCUNYEUABAYGhoaGpqenF3QL
CCGEEJIdIiIiYM2zKgD8/f2Tk5MLuu6EEEIIySYpKSk6nS6rAgDxdP8JIYSQ
ogvsOKx5UlJSVgVAQVecEEIIITkC1lyv11MAEEIIIXYFrLn4XQAFACGEEGI/
UAAQQgghdggFACGEEGKHUAAQQgghdggFACGEEGKHUAAQQgghdggFACGEEGKH
UAAQQgghdggFACGEEGKHUAAQQgghdggFALFCWlqat7c3Br2gK0IIISSXyTcB
oNfr/f39c73+4O+//75z505WjwoPD0dbgoODDQYD6qbT6ZRd0dHRoaGhCPj5
+V37l8jISCS7efOmSJOUlIRI2MegoCCRAEcpOeDA1NRUxIhdSKMuOiAgID4+
/vbt2wkJCUokOsfZ2Tmrrchr0Irt27ejtmb3okNu3bqlbEZFRaFX86tqeUDY
ZenYTCv783qMMFV2796dd/kTQoiafBMAK1euLFGiRGBgYK43YcaMGTdu3Mjq
UW3atIHxatCgAVp09erV4sWLK2svFEW/fv0QePbZZ7t27drLCPYi2euvv474
xMTEjz76aOTIkQh/++23bdu27dOnz9dG0JniwIiIiEWLFtWvXx+7fvjhh5Yt
W8Lii/xffPFFKIQqVarcu3dPqc+lS5fmzp2b077IbawLgMuXL7/xxhvK5vTp
0//888/8qlp2ifSTNv1oftc9X+moo5VDbR+jrVu3Ll26NKtVW7t2bbdu3bJ6
FCGEZI98EwAwuOPGjZs2bZrY3Ldv3zvvvFOnTh1YDWzChf/ss8+qVavWpUsX
GJ1du3b1799fpGzRokVYWNihQ4e++eabN998s0aNGlgn33333erVqy9ZsgQJ
OnTocPHiRSTo2LHj22+//cILL8DyimOHDh1asWLFpk2b/vrrr5s3b1YqA8cf
+Vy/fh0GGpuw7KhJs2bNUJD0sACAHVeOEgJAWH8HBwcRCQGwceNGyWgrUZaw
8ooA6Nu3r0j21Vdfubi4IBATE9OwYUMUDdmg7p9jx4799NNPCMyZM+fll19G
S02cQeTfo0ePqlWrfvjhh2fPnjXpXm1Lp0yZ8txzz9WuXXvbtm3YRM/DuGCz
UaNGBw8eRIxOp0Pfli9fvlOnTmiU2VHLngAwaYKlgrQtMpkVqnqkSFt/k2ZU
kVa8LwWefGjXzf3Sum+klR9JjhUlz9+ltFQ5BskWvS5t6y7p46UN30kOFaRF
9aU7h6WUB3J4wuPS7BrysTc8pXl1JcdK0n5Zy0m3faSN/5MDrp9IW7pKM56T
1rSTom+bjBHOF+hGiLrKlSuj/unp6SZNPnz48JNPPlm2bFkxoCYDgbnXrl07
HIuZI64aeXh4YDYiwe+//04BQAjJN/JHAAQEBMBowiYq9gKWF0slFsCff/45
ISEBBnfEiBGoyV9//eXr67tp0yaxeIKXXnoJayZMA1ZUWJzFixcXK1bMxwg0
ABJ88MEHZ86cQYKSJUuePn0a4QoVKhgMhps3bz7//POwLHv27ClVqtSaNWuU
+iBDrNJ3797Fki4ZLTsqhmRffPGF9LAAgNXeZARVRTKs0ihO7BVgGYcCGT58
ODSJsnorAqBx48ajRo2CdIG6gOmXjAIADYTvb3LVAkb5888/hwJ56qmnIiMj
Ue1hw4apEyDmjz/+QF8tWLDg+++/V+/StjQkJARCCEXs3LnztddeQ5qRI0ei
jRBaMFWimb169RozZkxoaOgnn3yyYcMGswOXDQGgbYKlgrQtMpkVqgl0VDbu
8aHS4SnSug4PVeKf7dL4YtLZJVLAEWl2Tfk/YmDir2+RkmOlC6ukZU2lkPPS
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
YpelF+tJxu8cBQcHr1u3LmuNLDgOHjwYFRVlaa/1FwWgA2/duqVsIh/xmkdb
SXkg3Tv332ZCmBRtHOjECOnYTOn6Vvlbvb7ODx1yYLRpJoenShE3zKQ04dxy
ycLLlwoj/+yQ4u5l50B76NJc75x7vvKbosVfXLCcLPRSRprkODkyzSBF+Wck
iFWd+zgQu+JDM3aFX7NYtNm+Qvfev/VQjOj5RwzNeMFSiBet5xFYok0+tm63
5JsAWLlyZYkSJQIDA3O9CTNmzLD+ll0tV69eLV68uDIH1J//69q1ay8j2Ku8
/D8xMfGjjz4aOVL+avy3337btm3bPn36fG1EvMBNefl//fr1seuHH35o2bLl
7du3Tcr19PTs2bPn8ePHW7duneN25xP79u1DcyztzcbnArNQdsh5+T3/V9Zn
bJ6cJ20zfvNoZ1/J43t5Eb7tI61476FDkD794a8oHpokhV02k1LNRVdpq/nv
IRZS/tkuf6o4GxSqLt07VM4k18n1zplWXtrYWf4gNf5ueMrJ5tWV45Oi5bdG
7xksh92/klw+lLZ1l1a1lgPi5ZM4EHrgxBxpwStyVus7SgvrSZGa9dNSXyGf
WwceihE9/4ihGa9Lly6JD5dkytatW8W7uLPE2rVr+dENQb4JgDZt2owbN27a
tGliE2blnXfeqVOnDoyCZHx3+meffVatWrUuXbrApuzatat///4iZYsWLcLC
wg4dOvTNN9+8+eabNWrUwPC9++671atXF59T79Chw8WLF5GgY8eOb7/99gsv
vCC+yAOGDh1asWLFpk2b/vrrr5s3b1YqA8uOops1a4acpYcFgPbrP8L6Ozg4
iEjl6z+oJzIXVl77+b+vvvrKxcXFpBMaNmyo0+kgAND2jz/+uGrVqlOmTEH8
6NGj3d3dJeO3eqEcEEBHoc5o7FtvvYXi6tat26BBg2PHjknGb82//PLLqJh4
5z9SYjLXrl27UaNG8NZNStT2AEp87rnnkH7btm1mD0cN0efly5fv1KmTeBsz
ikZXmB3W7AmAOXPmoAkYTaHBtCVmgJV2RhX5Ez8xd+VNsSDDIZ1YQl5ajzr+
Z4NOL5KWvysZkuQFfGc/+fX+zi0y3De3z+UX+yOlUwP5Vf/TnpY2/fjfq4AB
rBvWc3hnN/fLXw5Cstk1ZOfLubk0q7p0Sv6Mkex2YRPHYnkXLh6KizJe0bq8
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
dHVivT5l+YKNCDuMXhIWEinKWr14y5DuU6MiYqb85bR+5c6hPabNneISF5ug
3htzP+7Keb+xg+YO6+mww8Nb3jXTrfcPY1FK4J0Q+PiOY5b81W/mFvd9Jru8
dhw95HUakTh83OB5yHzt8u1paWl+124vmePuMHrxqAGzfPbJrdAn67eu87Kk
KAghhJC8wNfX15IAwC5t+lwUADPGLXNZ5BEXE+88fwPMpYiBxY8Iuw8ZAFWA
mEnDF4r7BaePXlyzzBOBpXPXwaQ+VKWrt5AYAgDG9+Dek9ASMLgBt4LVic8c
v7TQ0TUmOs5z/X73FdtFWSgX9t2QYsCBHq67I8OjYcH3bT+q3gshATWCTELv
RYzsNxO1xd6hPRygKBDYvHbv9cs34+MSoRCQQL0LTRBZjR8yH5UPCQ6fPGKR
//U71y7p+v004bYu6M7NoCHdp6Wmpkbfj53450JkkttjSwghhFjEy8tLMf1q
EIld2vS5KwBgECWjdV6x0EPEnDt1FYGkpGR463CKsyQA+v8yUfjRa5dvE08F
KIldnDYtm7d+99ZDHmv2jB44W5R1y+8uAkI5CMf/6kX/eVNXqveidJhpHIg/
WPATh89LKiufok9B5bFrwrAFF85clzQCAIeP+WOOqOfebUe2uO+DAIDIETHQ
BuJyBCGEEJLPFKwACLwTggBM5/KFG0XM5fNy4pQUw6Dfp+iT9RAAwrM+dtA3
UwEAzSBiNqzedeTAGXXiJXPccfjh/afxJ3YppePAPj+Oe5CYhLDftdszxi9T
7w0KCB3eZ7o4EH/iwoJi5R1GL3Gev+GQ1ymH0YvNCgAcDu9e1Mp7z4l1Ljsg
ABbPWitipvzlRAFACCGkQCjYWwBaAQB7Crf6uM+5OZNXSEbDDV8efr3TTDch
AFwWeRzzeahiVgSAkhiZLF+wEWmCA8PgsEsPC4DeP4w9sPs4SnFdunXHpoPq
vWDUgFmw45LRhQ8MkCP/6jczIuw+VMqAXyYmJjyIj0sY2mOaEABil6S6BYDD
b+sCITBmT1x+9aK/VgCkpqaeOX6J70oihBCSnxTAQ4BB4cIphq8t7OnFs9eV
WwAw9PD9//htsrgUAP99RJ8ZcKsXOroKAXD+zLVhvRzVv/v759rtRTPWwI4P
6W4qAJTECfGJqxdvgXUeO2gurLC6dBw48NdJ86etwn/sFeZb2QvOnbo6afjC
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
K/STvgMHDiAjQLc9e/YYm428AzlOs2bNEFMsbMVy3nrrrebNmxssB0lHXFyc
vFVWe0l6iQsyltOkSZOSkhKp0movbdy4UbzUjzIxMTGIVvIzWu15ee9V2mr1
iYTD4XnknvqteXl577//fqWt8rsmfzJY7UaZrbF6u21xgo0bJ+8lq1ckszVa
QpyYWhYA0OF4kx45csSg/urVq5DraBo6dKhBE977sLB169ZIDYwHFNdJ+dY2
bdogHBg8RsRCkpKSpJe9evWCDc8888wHH3xgPI6Xl9esWbN+/vlnXEaysrIs
aY2OjsZyhgwZYtAZqYd4/ihjldVeEuX8/HykYyEhIei5fv16qY/tXtKPMvqY
m9Fqz8t7T77VlhNp6tSpONbg0YZW9+C40laZXav0ZBDY4kbjrbF6u21xgi0b
V6mXrF6RzNYYj0aI81DLAgBiHu9Eg6xHAOmOJiHmDYCFjRo1evXVV6Ua5AiL
/+TgwYMyrbhS3XPPPcjQZaxKS0vr2rUrCjNmzKhfv750g1Hi3XffTU1NxeXC
pIUmW3fu3ImXuPJI3c6fPy9ZhYuSjFXWeUli5cqVbm5uWt0lEemkqJT3oSVe
0poXACZnVKlUVnte3ntr1qyRaUXotO5ECgoK6tu3L46FhJA6eHp6itZVq1bJ
t8rsmvxykIra6Eat0dbYst22OMGWjZNvvXHjhtUrktkaQpyZWhYAn376Kd6J
+pmLhI+PD5oWLlxo3IQUoGHDhu3atdOvDA8PR39cKnNycmRab9++jdaOHTvK
WIVrzpYtW7S6u4INGjRALq/fimvdv//9b1F+5513kKvqZ23mWr29vWHAvHnz
pJ5lZWVTpkxB5fjx48WKzFllnZckMKx4HLBs2TJ0PnfunLYyH1riJa15AWBy
RoVCYbXn5b2HiCPT6uXlZd2JVFRU1KtXL5QTEhKk1uzs7DfffBOVCEbyrTK7
Jr8c6XSy2o1ao62xZbttcYItGyffijTf6hXJbA0hzkwtC4AJEybgnXj06FHj
posXL6Jp+PDhJg986aWXHnroIYPK5s2bf/3115W2tmrVqmnTpuZMwuW3devW
HTp0eEtHs2bNMNTvet9KQ1R65ZVXROvzzz8PI/39/SttjYmJMb4RffLkSVQG
BgbKW2W1lwCixuOPPy7swaLuuuuuAQMGiCZbvCQwKQBkZrTa8/Lek2+15UQS
97cN7hX/8MMP9913X6WtMrtW6cmgtcGNAuOtsXq7bXGCLRtXqZesXpHM1hDi
zNSyAAgNDa1fv/4XX3xhUC/+tIF4C+fn5+s3ib93gBQAb2FfX1/9pieeeMLF
xQUF+daxY8cat4pJ8X9AQMA333wjVYoU293dXbzEel988UXYIF4WFBTcf//9
H330UaWtqEQTlpOXlycNfubMGQx+4MABeaus9hIKAwcODAoKkup79+59zz33
IEez0UsCkwJAZkarPS/vPflWW04k5LBIJA08P3LkSGxrpa0yu1bpyWCLGwXG
W2P1dtviBFs2rlIvWb0ima3REuLE1P7XAIcMGYI3o8HnwL/66isUoPNxbenV
q5f02x3Jyck9evS4efNmWVnZa6+91qJFi8uXL4smXMwffvhhIf7lWxEIWuiI
iooSreg/ceLEzZs3o9ytW7fjx49LxqDpwQcfbNOmjbgxCzu/++47fftxoYb9
0dHRlbaGh4c3atQIyykqKhKtyJukq5m8VdZ5KT093eAJBYIsZpw2bZqNXpJW
h9H0v24gP6Mtnpf3nnyr1ScSmDRpkoHnhw0bJqJbpa0yuyZvsC1uNLc1tmy3
LU6wZePkW21ZkczWEOK01L4AwHt2wYIFuNS3bdv2s88+69q167hx46Rb7hD8
yAKg6vv06fPee+/1799fBFOt7g3+448/IkHo3r07MseOHTsigoSFhVnSmpOT
g6tK48aN33///f/85z8ff/yxp6enVveNaVxeBgwYIOUCW7ZseeCBB1CJq4q/
v3+TJk1ef/116YJz8eJFjIxWXIhwMZFpFV9GvnTpUpcuXXBRwkJwtXnllVdw
IZIyU3NWWeeljIwMGIO00cvLS3QrKSkZPHgw7MGKdu7cabWXBHPmzMGBGK1n
z55XrlxBjSUzWud5USPvPflWq08keB6WYNj27dsPHToUBmM3V65caWGrzK6Z
M9gWN5rbGlveFDY6wcaNk2+1ZUUyW0OIc2KvnwLG+zExMVH6yQ4DcnNzIeOl
W+vGBwKTfwxRvlWhUCBYY3Abja8qpaWluCybm1fGKqu9JE/te8mWMeW9J99q
9Ymk1f1O7NWrV6WfErK8VX7X5A2Wxzo32rLdVjtBa9vGybdavSL5rSHE2eAf
AyKEEEKcEAoAQgghxAmhACCEEEKcEAoAQgghxAmhACCEEEKcEAoAQgghxAmh
ACCEEEKcEAoAQgghxAmpiwKguLg4NTVV/G7qrVu39JtUKlVycnJpaalxE9D/
oVRjsrKyRAc4pKCgoJqNrool8q3mELtTE5Pa4lV5q2xplbcqMzNTGIYO0g8C
C2TOHxnkjbFuTBmsG1D+KFv8acsZa/Ve2PKGte5NRIhTUbcEwI4dO1588cV/
/vOfAwYMeOmll9q2bfvll1+KptjY2G7durVp0wZNnTt3fuGFFx555BGDw9H/
+vXrBpVlZWU//fTTc88998knn3z++ecoYOS1a9deu3atfv36991331tvvXXv
vfc2b9787bffxphNmjSZOXMmmp544gkMiELr1q3btWt39913Dx069LXXXmvY
sOErr7zy9NNP16tXD5a0atUKfQ4dOiTNCBtef/11c2s0bpWxRL/bbB2WD2tJ
q9VetdAq61plrEKIwW7C57169cKG/v3vf0d59+7dotXk+SOzm5YYs3PnThwC
MwYNGgQfvvHGGx9++CHqzZ0JGzZskN9N64w0Z4aN/pSQ32WTrVbshSXDmnvD
VslgQoi2TgkAXANxRfX29hYvcXnBFaBHjx4oX7hw4YEHHujfv7/0q6Tu7u64
6op0RhAaGooaXDr0x0T/jh074rqEa6CoQT6CS8rSpUsjIyNx4RK/VI9r+Gef
fabV/Ug7rloTJkwQf8U+JCQEY+JShvKpU6e++uqrDh06pKWlaf/619lGjBix
d+9eadIxY8agKTg42OQyjVtlLJH6IIdq2bJlixYtkMdZOGylrVZ71UKrrGuV
sQouat++/bPPPiv91iu005NPPunh4aE1f/7I7GalxiCeNmjQwMfHR7xUKpUu
Li4I6CibOxOWLFkis5vWGSljhi3+lPrI77LJVuv2otJhZd6wlR5LCDGgrggA
vN+R7/Tr10+/MiUlpXv37hqNplOnTg8//HBhYaF+K5IL/duAuCQiKUCehYut
VOnq6ooLRUBAgP6Bvr6+c+fOxYXr5MmToka6UIONGzd6eXkhDdH+9WosmoAo
61/2Y2JicEUSZRyI7KxZs2a45Bov02SrjCVSnwMHDmB1mHHPnj0WDivfaotX
LbTKilZ5qxYtWoT+fn5++k0rVqxAeihz/sjsprwxcXFxGHPgwIH6Y+bl5b3/
/vv6hxucCUiBze2mdUbKm2GLP6WX8rtsstW6vah0WJk3bKXHEkIMqCsCACkD
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
EjVFtbLMzs6iVq6843VwXPPkkgBQkF2xec2REL/E0+8lHNoefLG9bzFNmqeX
n3oX/9dVtTSctxFI7M1fkJMHIpC13LkiEZEHoaAolUpPVzYXwxHhuGx+dn1Z
H6+94+rv76+trc01wgRu2nu4Fx8ABiTD61/cp1Jdrne9FwcKsysw0VTXvvHV
Q288syst7ixutrd0+x2M3PX2yQ2r9xfmVIqFM5OK3nx299svH6ivbTPfpkaj
CfVPWvfC3oPbTo2NTGDdU8fiDu84vWbVzvDAFK1Wq78SAHLTSopyq/TGIf+m
1w5j46mx+ab5GrVm29rjQcdi33h2d3hgsjhR8eFZr/915+53/EJOJiIn2Nvp
iX3hzz26EStKeqRZycUBh6PfenFfdVnDwW3BstEJvTFjxIdnY2J0WLZvc+Dr
f911+kS8fPaS+YrWC5/YG4b9rlm1Y3J82uIUWTRAqVAmReUySBCR26Cg2C42
/efVzQkq+aS4pcldv9jqNdKurjq52I3YoinerZoesZiJ47L5zXXuO14HbJ2K
ee7R+rhQoNOs2HvjfvEBoKK4LvBIjJhWzCnxD3kK01teP4ICNzQ4ingwPTnT
0tD54uNbujv7e7r6UcfR5smJadTroYHRxrr3t7xx1Hyb5yub920JRO0rL67D
P6yLklpT3tjfO4SKiS3orwSA1LizOaklYndoycT41Pa3Trzf0i3mIwBgxYLs
ivGxScQDhBMUa1RYTCAwvPTElsqSC/Z2ijmo6eJYUIi3vnF0sH8EG3x37THx
TkdVSX1YQDImIoJSI4PTcIwhfomilJtWtF5476YAnC5Uf6QRi1Nk0QAcy9Y3
j81ML/ZjHkRE82SjIE4N6U58Vxv1sCblGd2Rr6sbYzFPv/k6lVKxmKKn7sjT
Bv3rYrZgj+7AF1Uj71vMXEAAWJrjBW3w/arZcev5Nk/FPPdocVwY7JuK/qSR
6abN1wEWHwBKztYc2x2KCRS11/6y45X/2/bOKwdR9VDlMcDHv23rjosijuGw
WGXzmiPD0rHSgtqdG06KZbCWGCkLSAXYVFxYVnenBDexLkqhuCsxMgfL668O
ACNDMuxULCCG+aYA8NKft4pBdERQCppamFOJCbHk4R2nzQOAxU71VweArORi
MdO6pqN8y8YmzffuOACIt0isT5F1A4iI3Mm6IKI86XZ9UnVp2nBD1q3uLRfl
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
DwCjo6NjY2OeboUjnZ2dExOOfmqwra3NYo5Op7tw4YLpOwmtT7jFAk4bHByc
np5e5EbMXfNgberr66uurlYqldde1CkajUahUCzRxl2Cl/Fi+MJljHM1MjKy
FFsmX+bmALB9+/abb775c5/7HJ6zYk5paem999574403Pvfcc++88w7u/eAH
P/jggw/+6le/+vGPf/zxj3/8oYcesrkptVr98ssvf+ADH4iNjXW6PU47dOjQ
P/zDP1x//fVo5He/+9177rkHjbHZaXzta1974YUXbG5EIpHg2G+99VaL+XV1
ddddd11hYSE6VWz8i1/8or0FnG4/auLjjz+O9ldWVjq9EWsODtaeTZs2vfLK
K3ffffcf//hHF7ZEQLcZGRn5jW98Iz8/f56r4MxccxlexuZ4GeuX+DI+ePDg
7bffjsP86U9/Wl9f7/Ltk89y/ysA6CHxrL///vtNPW1FRcUDDzwgpu+7777b
brvNtDCiuOkua2i5p3pOQFeJA5FKpZjGQObDH/7wI488Yr1YVVWVg69iPnny
pHXPiTOTmZmJo8P0rl27rHtO8wVg3759TrT/4sWLaP98es6ioiIcxXy26fhg
rc3MzOARlMvlGD3V1NTMf8V5Ql0+cuQIDnP+AcDf338+PwfJy9gcL+Olu4zL
y8v/9V//NS8vLzw8/JZbbvnTn/7k2u2TL3N/AECH86Mf/QjP2fXr14s5XV1d
pqv6v/7rvzAkMS2M3bW0tDjY2g033GCz59RqtRav+ope3dTbOJhpva5NW7Zs
wVEMDw+Lm3iSfuUrX7G5pKmgiAmdkZhz6tQp0XNaFx0x58CBA6LntLdAfHz8
pz/9acdNFa+yWrzWioGbqed0UPIwyP3CF76A/sd8aw7Oj/mmLE6sNfSWaIP5
L0PZa7/Tv9GM9i8oAPj5+c1nX7yMeRmbLOllvHHjxqGhITH91FNPffzjH1/o
Fojs8UgAOHfu3D/90z9df/31yP96Y4Z/9NFHxb3mPSeeL7/97W8db030nAje
P/vZz37+859HR0dj5ptvvvniiy/+8z//86pVq3Bz//793/nOdzDnzjvv/NCH
PvTss8/am2m9rgPmPefIyAg6wN///vcWy5w9exYzn3766fHx8RdeeOGzn/1s
YGDg7bff/vnPf765uVl/pefEpnAXOqimpiZ0I8eOHbv33ntTUlL0xp4TC7/+
+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
dAjNmQDAcjB70ESrfyMCVmVmZmIuCQkJzFocoyYGqu4yEQRBEArGir8DgJiO
+Mt/PD116tSlS5caVEMKjGpnzpxhpzNmzPiv//qvX3755a233pqkB8n7q6++
igMW7xgQAGjVokWL5557jj1GFwoAT0/Pf/7znzhAaH777bcbN27cpk2bVq1a
iQoABFkW4tkxQioycSTyLAQbCABfX18csMqlpaWojCDu5+cXFBTEChMTE5kA
gDzw9vbG8b59+xDERQUAZAk+raysZG0R5SEwMCJ77ZD1xl4pRG/QGGjFaQkG
mrMHBwRBEATBsKIAQNhFgOaiNgJcu3bt+GGLgRGffvrpNWvWsNM5c+Z07doV
4mHe3yD69+jRAwf8L9ZBADz//PMIux06dJg2bZpWTAB8/vnn7IXDjz76qH//
/oi5OP73v/8tKgDi4+P37t3LjiEADh48mJ+f7+Liwt5JMBAAYWFh7JUArf4R
BqJzeXl5aGgou4+h1X/zkQmA48ePnzhxAlEe04cSEBUA7IECUxrA1dUVS4AR
YQMrYXICPWCOGCgrKwsG8F8ghOU1/uEFgiAIQpFYWAAgjJ49e5Yls/Pnz2cP
8RkRERHt27fnV75x4wbCOir/9ttv7733Hit85513Vq5cya82atQoiZcAkeY3
atTo2rVrTAAcPnwYwffy5csTJkxo1qwZe6kP+gFDaPXP0Js2bbpu3Tqh5Yiq
CKkIylreS4DsMT16NhAAKEEQRyHkDU5Z3GfP4tEWyuHYsWNMAHh4eFy8eBHS
hd1VuH79uvZvAVBcXIySpKQkeABKIyQkBMEdcRyFJSUlQgGAAy8vL8xIpVJl
ZmaiBDZr9d9QwHF2dnbNlowgCIJQJBYWAAh8CMcvv/zyJ598sn79ev5N+wUL
Fvz444/8yvb29gjHubm5ZWVliNfDhw//8MMPEe5LS0v51b755huDhlq9AOB+
BwDioW/fvvzfAXjqqacGDBiAOqwCwmuLFi1at27dpUuX0aNHN2/eXJgvIwqz
1FurFwDsdwBQiBQeYZe7IY9wHxwcjIDu5+fnpAfl7Pk7Cn19fVkhWrGb9uz2
Po7RYUBAAEvbUcJuR7CnAyi5d+8e6rC2UEpavZTiCwDWW2xsLHQIZAYkBHQF
+xTWurm5cU8QCIIgCEJrjUcASKILCgqE5UhXDX7/BxGTn7fm6zFlaGmrEMTZ
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
0dHR7733nndtFgRBEOoaIgDqHboAaNGixcmTJ4n4+fkx6zf9nTVrVmBg4Pjx
4ydOnBgXF5eenl5aWupl0wVBEIQ6gwiAeocuAF588UU15R8yZMhPP/1k+ou7
X7t2bXZ29sCBA3/44YeAgAAkgZ7JsWPHwjSCg4O///57dMKXX345ePDg2bNn
s3Dx4sVLlizJy8tzZgM5k4CUxl+1lRFjAtbqf93sQsXFxWpD+7KMJVa6yh6j
Mep3+/btbrb/ypUrHdZRLzEiIoLfAwcOuM7n3LlzujGXL192s3Q4f/68sQqQ
mprq/uawbNmyoqKiKm3iRWJiYtLS0pyt3bFjh7OeRuevYdGnT5/Wd25FRYVp
LfmzdunSpTUsxURhYaHe7Y3s3LnTzRwiIyPt+7zeRS9cuOBZgxWxsbHGvWAs
MTc3t9rZ7tmzhxz27t3rQVMFHREA9Y6bbrpJCQBfX9+FCxcS6dOnz8aNG01/
VeIff/xx165dL7/8MvFFixbpmURFRfXWeOWVV2644YYnnnji97//fdu2bfn7
1ltvvfnmmx07dnzwwQcdGjBjxoxrrrnm7bffJqXxl63sF+q/rFWRXr16sTkd
qdKa9uzZ87bbbnORrWmVwpkxCpMx+i8mbdu2zVh6QkKCvZ3Tpk1TdXdhDDpK
ZejCbQEN/pe//IVNWrRowY6otDV0/vSnP3Xo0EGvAruMskzPhrhgzJgxpEcu
ul+iF0FuXaPh8C5WtIF9V1Qt07lz51atWrlf0HXXXcdRYFxCk6qGUnsTFW3a
5I477njsscdYNXLkyGpUzRnPPPPMXXfdpbqTsadRkDt+cOzYsXoXNfLee++R
JzmTvwetVWzdupVCTUeiPpI89NBD1ctWHYOq/U+cOOFZmwWbCID6BqK6UaNG
06dPJ37mzJkePXoQ/+abb+z/Qnp6OqMW82iWBwYGZmZm2mdIGjyR/XJ6BcLA
4TzxvvvuQ1TUpBZPP/30hg0bKk3WsmVLhzZfDYYNG/b9998bl/j5+bVp02bV
qlXGhfiITZs2uZNhv379Zs+e7WxtVlYWQk5NKpnxNWnSxM2TAGxy4403solx
4VNPPbVu3Tp3Ngc8I1VAdbiZ3rv079+frksHDgoKsl87YMCAyZMnO9yQhmre
vHlOTo47pdD4v/rVr1q3bm1cuH79+i5duqj4kSNH7r77buPa06dP33LLLTbN
Sd1///3ulOIOFy9eZP867AxfffUV4s315uXl5WhmF0M0owHHtcevBo4bNw7z
nJX429/+1v65JHdg/jJ06FAidIDly5fXyETBESIA6jumKarDmbWLo8+ZAICu
XbuuXbvWuOTKlSuMikwiqmXp/w8H9U8//eQ6DdNnZlg1LMh9tmzZ8vjjjxuX
MOb8+9///vzzz/Ul+fn5TZs2dXPwnDVr1jvvvONs7ZIlS8hf/4sHVw9uVMqp
U6fatm1rWujr6/uvf/3Lnc3pHoz/+BfcREZGhjubeBcqy4CzbNmye++9NyUl
xbiKXo0LdnGahcl7ZGSkO6Ug8+jt7dq1O3TokL5w4MCBzKb1v8hRY4sFBwe/
8cYbygy0HIrO/Uq5YPXq1d26dXO4ij7zj3/8w/Xm6Oq//OUvrtP8+c9/rqGA
t+e9996bM2eOs7WMGMePH69GttRl69atRDgSKxU/QjUQAWBxXAiA//u///vP
f/5jXILXvuaaaxITE2tYKKPcs88+6zoNY/7f//73GhbkPvhEPKN+npn5I6N6
fHw89Q35BT8/v1dffdXNDJOTk++8805na3EuEydO1P/6+Ph8/fXX7mSLq7I/
e3/w4MF77rnHnc1jY2OVziGTlStXurNJ7UPjl5SUsEeYd6tZOUvefPNN9oWu
AS5cuIAYc+3shg8fbjqrw1YvvfSS/S0TH3/88aRJk8aPH08RONnXX3+dX+LG
lL169TJeRPvggw8CAgJUvGfPnnPnzi3RQCSbMqciGG9/4uighmkh3cDZBQWM
MV3UoLvu3bvXqPk//PBDZ6dEdL744osJEya4TlNV2BEuRAUHclXn76RfvHjx
b3/727KyMv7OnDmTBq+plYIdIgAsjgsBgLNgDMQR60tQ8kePHq15oYWFheT8
ySefML/+9NNPmVPPnz/f5Fu/++473GLNy3IfpuS//vWvH3nkkUcffZTpnroF
guGU0bufRvfu3at0A1Xz5s3vu+8++8sojMBUH4WgL9m3b5+b10lHjx7NbMh+
+e9+97v8/PxKNx81apS6QjRkyJARI0a4UyJ+p0r3KNacd999l/a5TmPevHn6
ciwfNmyYir/22mtvvfWW692xceNGclisERMTw5J//vOfaNqOHTsak6Eubrvt
NiUtoqOjIyMjo6Ki+E1KSjImW7t2LVbRKx7SIH769Gm1Sl2qxlv96le/Uld2
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
Tz6pNJm/v7/6FlWrVq1OnjxZaXryxC+npKTccccd7phx5cqV1q1bL1682Nnb
y51hLGLt2rWTJk2q0uY1pKCg4OWXX1ZfaLVpL1QJDQ21aTJJ3XA1duzYkSNH
JiYmrlixIiwszGEmIgAEQRCsSS0LgKKioh49etx8881t27adMmUK3qdr1642
7avTLH/sscdYNWTIkG+++ebWW2997rnnlLv/9ttvw8PDbb8IgIsXL7Zv375p
06a33367+ljqqVOn/vrXv44aNapTp07R0dHPPPPM6dOn33zzzWuvvZaUb7zx
xvfff697Z5LpzyYr3n33XZVyzJgxFD1s2LBXX331xRdf3LZtG87xxhtvvPvu
u6OiomzalP/rr7/GDASDj4+PsYhly5apb2pTqWeffbZZs2ZdunRRXzuldq+/
/jp/b7vtth9//LHarWdix44djzzyyG9+85uhQ4fatG92qFesYz/NEhsbiz05
OTk0yHvvvecsExEAgiAI1qSWBQBO/+mnny4uLiYTPObx48fbtGlj075Hds89
9+BwExISfvWrX+HxmcLjtkaMGMHaPn36qI+kKwFQWloaExOjMkEGZGRk4Gcb
NWr05Zdfrlu3Do+mkpEVKiIrK+v8+fPMiO+6666KigoqixdmUmy0Kikp6Xe/
+x0p0SdvvfXWfffdt2jRoi1btpDVgQMHSkpK8OBoAJs2ze/YsSM5Y3lAQICx
iFmzZjH1Js2//vWvAQMGZGZmDh48+J133lG1Y3MyPHr06E033eTZ17shA8iT
GrVo0ULpJT8/PyzBnsDAwPHjx0+cODEuLo66OHzbqggAQRAEa1LLAmDVqlW4
WmaseEP+GgUA03CVBvetiggKCmJmbbMTADbti6Ldu3e///77f/3rXzPtRQAY
vZhKZjw/j+tHAGzcuDE8PPypp54yWXXmzBn9veUIgHnz5qn4pUuXMBXFwrZN
mjRhCZ593Lhx+obGInQB8Ic//AHZYNN8K9leuXLFWLvHH38cM6rdgA754IMP
UD4vvviiOgMwZMiQn376CXePXMnOzh44cOAPP/yAXMFCfZOpU6feptGyZUsU
122/UNWLIIIgCEI9pfbvAcArffjhh7fccss333zjUAC0bdtWFREcHKw+EmoS
AIsXL27Xrh1u9Ny5c2gAdwSATTvz37t377/97W8hISEmk5wJgE8++QSvyjT/
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
    "], {{0, 1848}, {683, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Software" -> "Created with the Wolfram Language : www.wolfram.com"], 
      "Comments" -> 
      Association[
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "Creation Time" -> 
        DateObject[{2019, 7, 22, 15, 25, 26.}, "Instant", "Gregorian", -4.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{683, 1848},
  PlotRange->{{0, 683}, {0, 1848}}]], "Input"]], "Text",
 CellID->984259520]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing Transcriptome Mapped Data", "Subsection",
 CellID->964105434],

Cell["\<\
We will next preprocess the imported transcriptome data. We will first \
relabel the data, carry out quantile normalization and filtering and we will \
finally create time series.\
\>", "Text",
 CellID->1926312606],

Cell[CellGroupData[{

Cell["Labeling, Normalization and Filtering", "Subsubsection",
 CellID->433330108],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->62840614],

Cell["\<\
First, we illustrate how to change the outer keys. In this example, we notice \
that the sample numberings do not correspond to actual days, so we may want \
to adjust the outer keys to correspond to real times. \
\>", "Text",
 CellID->1020016945],

Cell["\<\
We form an association between samples to actual days of the study:\
\>", "MathCaption",
 CellID->381670302],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[76]:=",
 CellID->199112125],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1332666250],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "rnaExample"}], "]"}]}]], "Input",
 CellLabel->"In[77]:=",
 CellID->2014709187],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.73998`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[77], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[77]=",
 CellID->2120249074]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantile Normalization", "Subsubsubsection",
 CellID->1747728821],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["QuantileNormalization",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/QuantileNormalization"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "performs quantile normalization of ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->818482745],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileNormalization"]], 
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " can perform quantile normalization across various samples for multiple \
forms of data, including ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " and matrix data."
}], "Caption",
 CellID->1606736180],

Cell[TextData[{
 "We normalize the transcriptome data using the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileNormalization"]], 
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function. The Measurement is located in position 1, 1 in the list."
}], "MathCaption",
 CellID->1093504481],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaQuantileNormed", "=", 
  RowBox[{"QuantileNormalization", "[", 
   RowBox[{"rnaLongitudinal", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[78]:=",
 CellID->364761141],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[78], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[78]=",
 CellID->2073287215]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tag Missing and Low Values", "Subsubsubsection",
 CellID->1673762423],

Cell[TextData[{
 "Next, we will tag values of  less than 1 FPKM as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 ". Additionally, we will treat values of FPKM less than 5 as \"noise\" and \
set them all to a token value of 1."
}], "Text",
 CellID->529597330],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["LowValueTag",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/LowValueTag"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["valueCutoff", "TI"]}], "]"}], Cell[TextData[{
     "takes an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " and tags values in specified position as ",
     Cell[BoxData["Missing"], "InlineFormula"],
     "[] based on provided ",
     Cell[BoxData[
      StyleBox["valueCutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1118958870],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " allows us to tag low values."
}], "Caption",
 CellID->827431311],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], "1", Cell["\<\
Selection of which component of a list to use in the association or \
OmicsObject input values.\
\>", "TableText"]},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], "1", Cell["\<\
Selection of which list to use in the association or OmicsObject input values.\
\>", "TableText"]},
   {"OtherReplacement", 
    RowBox[{"_Missing", " ", ":>", " ", 
     RowBox[{"Missing", "[", "]"}]}], Cell["\<\
Replacement rule for any other kind of replacement in the data.\
\>", "TableText"]},
   {"ValueReplacement", 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell["\<\
Value that specifies how tagged data points will be replaced.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->29072],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->956870455],

Cell[TextData[{
 "We first use  ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to tag values of 0 as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[]:"
}], "MathCaption",
 CellID->1372190648],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaZeroTagged", "=", 
  RowBox[{"LowValueTag", "[", 
   RowBox[{"rnaQuantileNormed", ",", "0"}], "]"}]}]], "Input",
 CellLabel->"In[79]:=",
 CellID->581335803],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 79, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 79, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 79, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[79], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[79]=",
 CellID->1591346998]
}, Open  ]],

Cell[TextData[{
 "We next use  ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " again to set all FPKM values <1 to unity:"
}], "MathCaption",
 CellID->351193473],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaNoiseAdjusted", "=", 
  RowBox[{"LowValueTag", "[", 
   RowBox[{"rnaZeroTagged", ",", "1", ",", 
    RowBox[{"ValueReplacement", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[80]:=",
 CellID->1223638755],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[80], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[80]=",
 CellID->1007655648]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1524282659],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->222118196],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["FilterMissing",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilterMissing"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["percentage", "TI"]}], "]"}], Cell[TextData[{
     "filters out data from ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", retaining data across the datasets with a ",
     Cell[BoxData[
      StyleBox["percentage", "TI"]], "InlineFormula"],
     " of data points not missing."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1425592616],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " allows the removal of data marked as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], and retains only data with measurements available for a certain \
percentage of samples."
}], "Caption",
 CellID->460047533],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"MininumPoints", "3", Cell[
    "Minimum number of datapoints to keep.", "TableText"]},
   {"Reference", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "Select a reference outer key for which should remove dataset if the \
reference point has a ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     " value."
    }], "TableText"]},
   {"ShowPlots", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[
    "Whether to show summary plots.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2081738160],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->969678196],

Cell["\<\
In this dataset we will use a reference point, day \"255\" which was a \
healthy measurement. \
\>", "Text",
 CellID->2046575969],

Cell["\<\
Hence, we filter out data where the reference point \"255\" is missing and \
retain data with at least 3/4 points available:\
\>", "MathCaption",
 CellID->132360816],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaFiltered", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"rnaNoiseAdjusted", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[81]:=",
 CellID->1942659867],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6719999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6719999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.5, 0}, {0.5, 18427.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{35.65072057646116, 
           133.66873498799035`}, {-48.97193256023674, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 18427]& ,
        TagBoxNote->"18427"],
       StyleBox["18427", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18427, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 6841.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{133.16873498799035`, 231.18674939951956`}, {
           24.448647134884688`, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6841]& ,
        TagBoxNote->"6841"],
       StyleBox["6841", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6841, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-0.54, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{-0.5, 1.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[81]:=",
 CellID->1221241714],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "18427"}], ",", 
     RowBox[{"1", "\[Rule]", "6841"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[81]:=",
 CellID->1908272819],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$45449$45555 = False, DynamicChart`click$45466$45555 = 
       False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.440497565477732, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 18427]& , TagBoxNote -> "18427"], 
                    StyleBox["18427", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[18427, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$45449$45555, 
                    FEPrivate`Not[DynamicChart`click$45449$45555]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$45449$45555, {{{1., 0.}, {0., 1.}}, {
                    0.13191433757046722`, 0.15032833247044558`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$45449$45555}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.440497565477732}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 6841]& , 
                    TagBoxNote -> "6841"], 
                    StyleBox["6841", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[6841, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$45466$45555, 
                    FEPrivate`Not[DynamicChart`click$45466$45555]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$45466$45555, {{{1., 0.}, {0., 
                    1.}}, {-0.1319143375704672, -0.1503283324704456}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$45466$45555}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["18427", {}, StripOnInput -> False], 
                    TraditionalForm], {0.43971445856822405`, 
                    0.5010944415681519}]}}}, StatusArea[#, 18427]& , 
                 TagBoxNote -> "18427"], 
                StyleBox["18427", {}, StripOnInput -> False]], Annotation[#, 
                Style[18427, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$45449$45555, 
                  FEPrivate`Not[DynamicChart`click$45449$45555]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$45449$45555, {{{1., 0.}, {0., 1.}}, {
                0.13191433757046722`, 0.15032833247044558`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$45449$45555}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["6841", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.4397144585682239, \
-0.501094441568152}]}}}, StatusArea[#, 6841]& , TagBoxNote -> "6841"], 
                StyleBox["6841", {}, StripOnInput -> False]], Annotation[#, 
                Style[6841, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$45466$45555, 
                  FEPrivate`Not[DynamicChart`click$45466$45555]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$45466$45555, {{{1., 0.}, {0., 
                1.}}, {-0.1319143375704672, -0.1503283324704456}}, {{1, 0}, {
               0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$45466$45555}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}], 
   FormBox[
    FormBox[
     TemplateBox[{"0", "1"}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[81]:=",
 CellID->1820484635]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[81], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[81]=",
 CellID->1685741636]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Transcriptome Time Series", "Subsubsection",
 CellID->267016150],

Cell[TextData[{
 "We can now create time series for each of the genes. MathIOmica provides \
functions to facilitate the process, such as ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CreateTimeSeries"]], "paclet:MathIOmica/ref/CreateTimeSeries"},
   
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeExtractor"]], "paclet:MathIOmica/ref/TimeExtractor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". The functions assume an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " as an input for which times have been used as the sample labels (outer \
keys)."
}], "Text",
 CellID->94668970],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     RowBox[{
      ButtonBox["CreateTimeSeries",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/CreateTimeSeries"], "[", 
      StyleBox["omicsObject", "TI"], "]"}], " "}], Cell["\<\
creates a time series list across an OmicsObject using outer keys as times.\
\>", "TableText"]},
   {
    RowBox[{
     ButtonBox["TimeExtractor",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeExtractor"], "[", 
     StyleBox["omicsObject", "TI"], "]"}], Cell["\<\
extracts a list of sorted times from an OmicObject's outer keys.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1824801338],

Cell[TextData[{
 "We extract the times for the filtered RNA data using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeExtractor"]], "paclet:MathIOmica/ref/TimeExtractor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->2019621014],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesRNA", "=", 
  RowBox[{"TimeExtractor", "[", "rnaFiltered", "]"}]}]], "Input",
 CellLabel->"In[82]:=",
 CellID->643857816],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[82]=",
 CellID->15810684]
}, Open  ]],

Cell["\<\
For each gene we now extract a time series (list of values) corresponding to \
these times:\
\>", "MathCaption",
 CellID->148216279],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesRNA", "=", 
  RowBox[{"CreateTimeSeries", "[", "rnaFiltered", "]"}]}]], "Input",
 CellLabel->"In[83]:=",
 CellID->2137454280],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "2.294595133333334`", ",", "1", ",", "4.676944000000001`", ",", 
              "4.481310666666667`", ",", "4.955066666666666`", ",", "1", ",", 
              "1.2572603333333332`", ",", "2.1476724666666676`", ",", 
              "1.932187333333333`", ",", "1", ",", "2.582170666666667`", ",", 
              "2.3130066666666664`", ",", "4.102843333333334`", ",", 
              "3.8092893333333335`", ",", "1.4547106666666665`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "5.916647999999999`", ",", "4.320814`", ",", 
              "3.195994666666667`", ",", "3.6416366666666664`", ",", 
              "2.7327000000000004`", ",", "2.134606133333333`", ",", 
              "2.1716795999999996`", ",", "3.2342906666666664`", ",", 
              "1.8957593333333331`", ",", "3.0267020000000002`", ",", 
              "4.340044000000001`", ",", "7.270013333333333`", ",", 
              "2.011321133333333`", ",", "9.277005333333333`", ",", 
              "7.5441486666666675`"}], "}"}]}], ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[83], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[83]=",
 CellID->344747750]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Take Log Ratios Compared to Reference in Transcriptome Time Series\
\>", "Subsubsection",
 CellID->1837977213],

Cell["\<\
Next, we want to use log ratios of expression at any time point compared to a \
healthy datapoint. \
\>", "Text",
 CellID->1135789927],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SeriesApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/SeriesApplier"], "[", 
     StyleBox[
      RowBox[{"function", ",", "data"}], "TI"], "]"}], Cell[TextData[{
     "applies a given ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     ", an association of lists, implementing masking for ",
     Cell[BoxData["Missing"], "InlineFormula"],
     " values."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1719166110],

Cell["Applying a function to a series with Missing data.", "Caption",
 CellID->1779824032],

Cell[TextData[{
 "We first use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement the logarithm:"
}], "MathCaption",
 CellID->1087636944],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesRNALog", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Log", ",", "timeSeriesRNA"}], "]"}]}]], "Input",
 CellLabel->"In[84]:=",
 CellID->533314544],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.8305564154590727`", ",", "0", ",", "1.5426449051847884`", ",",
               "1.499915563163511`", ",", "1.6004106221145828`", ",", "0", 
              ",", "0.22893501503264826`", ",", "0.7643846820900576`", ",", 
              "0.6586526945127277`", ",", "0", ",", "0.9486303888715844`", 
              ",", "0.83854826550484`", ",", "1.411680229288034`", ",", 
              "1.3374426450561796`", ",", "0.3748070263246455`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1.7777700723187606`", ",", "1.4634438104320098`", ",", 
              "1.1618983591500285`", ",", "1.2924332142933417`", ",", 
              "1.0052901314367368`", ",", "0.7582821487875812`", ",", 
              "0.7755008773783016`", ",", "1.1738096354916885`", ",", 
              "0.63961946188012`", ",", "1.107473577885762`", ",", 
              "1.46788448630977`", ",", "1.9837581255648373`", ",", 
              "0.698791786422256`", ",", "2.2275387935694635`", ",", 
              "2.0207722517470934`"}], "}"}]}], ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 84, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 84, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 84, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[84], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[84]=",
 CellID->1534941352]
}, Open  ]],

Cell[TextData[{
 "Now we need to compare  to use log ratios of expression at any time point \
compared to a healthy datapoint. We can use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesInternalCompare"]], 
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->440466924],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SeriesInternalCompare",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/SeriesInternalCompare"], "[", 
     StyleBox["associationOfLists", "TI"], "]"}], Cell[TextData[{
     "compares each value in each list of ",
     Cell[BoxData[
      StyleBox["associationOfLists", "TI"]], "InlineFormula"],
     " to an internal reference value in the list, if the reference point \
itself is not ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1719094828],

Cell["\<\
Comparing values in a series to an internal reference point in the series.\
\>", "Caption",
 CellID->581787458],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"CompareFunction", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MatchQ", "[", 
         RowBox[{
          RowBox[{"Head", "[", "#2", "]"}], ",", "Missing"}], "]"}], ",", 
        RowBox[{"Missing", "[", "]"}], ",", 
        RowBox[{"(", 
         RowBox[{"#1", "-", " ", "#2"}], ")"}]}], "]"}], "&"}], ")"}], Cell[
    TextData[{
     "The function is used by a ",
     ButtonBox["Query",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Query"],
     " operation on non-missing input data. Namely: ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Query", "[", 
        RowBox[{"All", ",", 
         RowBox[{
          RowBox[{"CompareFunction", "[", 
           RowBox[{"#", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "ComparisonIndex", "]"}], "]"}]}], "]"}], "&"}]}], 
        "]"}], "@"}]], "Input"]
    }], "TableText"]},
   {"ComparisonIndex", "1", Cell["\<\
List position of list value that will be used as a reference data point.\
\>", "TableText"]},
   {"DeleteRule", 
    RowBox[{"{", 
     RowBox[{"Head", ",", " ", "Missing"}], "}"}], Cell[TextData[{
     Cell[BoxData["DeleteRule"], "InlineFormula"],
     " allows the customization of how to select values for the reference \
data point for which its key should be deleted.  The ",
     Cell[BoxData["DeleteRule"], "InlineFormula"],
     " value takes the structure ",
     Cell[BoxData[
      RowBox[{"deleteRuleOptionValue", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{
            Cell[
             TextData["MatchQ"]], "paclet:ref/MatchQ"},
           "RefLink",
           BaseStyle->{"InlineFormula"}], "first", " ", "argument"}], ",", 
         RowBox[{
          TemplateBox[{
            Cell[
             TextData["MatchQ"]], "paclet:ref/MatchQ"},
           "RefLink",
           BaseStyle->{"InlineFormula"}], "second", " ", "argument"}]}], 
        "}"}]}]], "InlineFormula"],
     ".\nThe ",
     ButtonBox["MatchQ",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/MatchQ"],
     " function referred to here is implemented by ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["SeriesInternalCompare"]], 
        "paclet:MathIOmica/ref/SeriesInternalCompare"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " internally, and uses the ",
     Cell[BoxData["deleteRuleOptionValue"], "InlineFormula"],
     " as:\n",
     Cell[BoxData[
      RowBox[{"MatchQ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"deleteRuleOptionValue", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"reference", " ", "comparison", " ", "value"}], "]"}], ",", 
        RowBox[{"deleteRuleOptionValue", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]], "InlineFormula"],
     "\nThe default removes the corresponding key if the value used for \
reference in the comparison is actually ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     ", i.e. the comparison reference point has ",
     ButtonBox["Head",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Head"],
     " that matches ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1460313503],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesInternalCompare"]], 
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->2045927005],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->1398268181],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesRNALog", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[85]:=",
 CellID->779768946],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.8305564154590727`", ",", "0", ",", "1.5426449051847884`", ",",
               "1.499915563163511`", ",", "1.6004106221145828`", ",", "0", 
              ",", "0.22893501503264826`", ",", "0.7643846820900576`", ",", 
              "0.6586526945127277`", ",", "0", ",", "0.9486303888715844`", 
              ",", "0.83854826550484`", ",", "1.411680229288034`", ",", 
              "1.3374426450561796`", ",", "0.3748070263246455`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.31432626188675084`", ",", "0.`", ",", 
              RowBox[{"-", "0.3015454512819813`"}], ",", 
              RowBox[{"-", "0.1710105961386681`"}], ",", 
              RowBox[{"-", "0.45815367899527293`"}], ",", 
              RowBox[{"-", "0.7051616616444286`"}], ",", 
              RowBox[{"-", "0.6879429330537081`"}], ",", 
              RowBox[{"-", "0.2896341749403213`"}], ",", 
              RowBox[{"-", "0.8238243485518898`"}], ",", 
              RowBox[{"-", "0.3559702325462477`"}], ",", 
              "0.004440675877760203`", ",", "0.5203143151328276`", ",", 
              RowBox[{"-", "0.7646520240097537`"}], ",", 
              "0.7640949831374537`", ",", "0.5573284413150836`"}], "}"}]}], 
           ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[85], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[85]=",
 CellID->1779061158]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Transcriptome Time Series", \
"Subsubsection",
 CellID->384896847],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1747726374],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedRNACompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "rnaCompared"}], "]"}]}]], "Input",
 CellLabel->"In[86]:=",
 CellID->755844152],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.21829331924794013`", ",", "0.`", ",", "0.4054499736632343`", 
              ",", "0.39421951450899434`", ",", "0.4206324102233949`", ",", 
              "0.`", ",", "0.06017048739059012`", ",", "0.20090154784186665`",
               ",", "0.1731122416739286`", ",", "0.`", ",", 
              "0.2493264424569924`", ",", "0.22039379964993433`", ",", 
              "0.3710288154208633`", ",", "0.35151711414050807`", ",", 
              "0.0985097078669049`"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.1564105847744402`", ",", "0.`", ",", 
              RowBox[{"-", "0.15005077872901465`"}], ",", 
              RowBox[{"-", "0.08509587199020531`"}], ",", 
              RowBox[{"-", "0.22797994802620195`"}], ",", 
              RowBox[{"-", "0.3508925636575009`"}], ",", 
              RowBox[{"-", "0.34232442368796406`"}], ",", 
              RowBox[{"-", "0.14412365801429614`"}], ",", 
              RowBox[{"-", "0.40993981010358166`"}], ",", 
              RowBox[{"-", "0.17713286793361294`"}], ",", 
              "0.0022097062671921166`", ",", "0.25891144382253184`", ",", 
              RowBox[{"-", "0.3804953156202253`"}], ",", 
              "0.3802181288269338`", ",", "0.2773298893139476`"}], "}"}]}], 
           ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[86], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[86]=",
 CellID->1063560421]
}, Open  ]],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ConstantSeriesClean",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantSeriesClean"], "[", 
     StyleBox["dataIn", "TI"], "]"}], Cell[
    "removes constant list series from an association of lists.", "TableText"]}
  }]], "DefinitionBox",
 CellID->1164836919],

Cell["Removing constant series.", "Caption",
 CellID->953171581],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1883423327],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaFinalTimeSeries", "=", 
  RowBox[{"ConstantSeriesClean", "[", "normedRNACompared", "]"}]}]], "Input",
 CellLabel->"In[87]:=",
 CellID->786900109],

Cell[BoxData["\<\"Removed series and returning filtered list. If you would \
like a list of removed keys run the command \
ConstantSeriesClean[data,ReturnDropped \[Rule] True].\"\>"], "Print",
 CellLabel->"During evaluation of In[87]:=",
 CellID->1253250375],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.21829331924794013`", ",", "0.`", ",", "0.4054499736632343`", 
              ",", "0.39421951450899434`", ",", "0.4206324102233949`", ",", 
              "0.`", ",", "0.06017048739059012`", ",", 
              TemplateBox[{"20"},
               "OutputSizeLimit`Skeleton"], ",", "0.1731122416739286`", ",", 
              "0.`", ",", "0.2493264424569924`", ",", "0.22039379964993433`", 
              ",", "0.3710288154208633`", ",", "0.35151711414050807`", ",", 
              "0.0985097078669049`"}], "}"}]}], ",", 
           TemplateBox[{"11783"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 87, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 87, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 87, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[87], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[87]=",
 CellID->859442849]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Transcriptome Data", "Subsection",
 CellID->1956292219],

Cell["\<\
In addition to the above, we want to create a resampled distribution for the \
transcriptome dataset prior to classification and clustering. In this \
subsection we first resample the imported and labeled transcriptome dataset, \
Then, we carry out the full analysis in this \"bootstrap\" dataset, to create \
a set of random time series. This bootstrap distribution of time series will \
be used to provide the cutoffs used in the time series classification in the \
following subsection.\
\>", "Text",
 CellID->673780035],

Cell[CellGroupData[{

Cell["Resampling the Transcriptome Data", "Subsubsection",
 CellID->576856357],

Cell[TextData[{
 "First, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["BootstrapGeneral"]], "paclet:MathIOmica/ref/BootstrapGeneral"},
   
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1399228810],

Cell[BoxData[GridBox[{
   {
    RowBox[{"BootstrapGeneral", "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["numberResampled", "TI"]}], "]"}], Cell[TextData[{
     "performs a resampling of the ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " data with replacement, and generates a new association structure with \
numbering corresponding to the ",
     Cell[BoxData[
      StyleBox["numberResampled", "TI"]], "InlineFormula"],
     " of new identities."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1661281776],

Cell["\<\
We can perform resampling of an OmicsObject to create a bootstrap dataset to \
be used for statistical considerations.\
\>", "Caption",
 CellID->2000128109],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->809854710],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"rnaLongitudinal", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[88]:=",
 CellID->2018927283],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "5.5402`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.00246625`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "12.7439`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99990"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99996", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.347246`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "12.2697`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 88, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 88, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 88, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[88], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[88]=",
 CellID->1775673247]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Transcriptome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->1483609541],

Cell[TextData[{
 "We normalize the transcriptome bootstrap data using the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileNormalization"]], 
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function:"
}], "MathCaption",
 CellID->214676973],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapQuantileNormed", "=", 
   RowBox[{"QuantileNormalization", "[", 
    RowBox[{"rnaBootstrap", ",", 
     RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[89]:=",
 CellID->303358251],

Cell[TextData[{
 "We use  ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to tag zero values as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[]:"
}], "MathCaption",
 CellID->375344567],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapZeroTagged", "=", 
   RowBox[{"LowValueTag", "[", 
    RowBox[{"rnaBootstrapQuantileNormed", ",", "0"}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[90]:=",
 CellID->1256666330],

Cell[TextData[{
 "We next use  ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " again to set all FPKM values <1 to unity:"
}], "MathCaption",
 CellID->1035495647],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapNoiseAdjusted", "=", 
   RowBox[{"LowValueTag", "[", 
    RowBox[{"rnaBootstrapZeroTagged", ",", "1", ",", 
     RowBox[{"ValueReplacement", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[91]:=",
 CellID->367863841],

Cell["\<\
Next, we filter out data where the reference point \"255\" is missing and \
retain data with at least 3/4 points available:\
\>", "MathCaption",
 CellID->61312748],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapFiltered", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"rnaBootstrapNoiseAdjusted", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[92]:=",
 CellID->1838688723],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6719999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6719999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.5, 0}, {0.5, 72929.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{35.65072057646117, 
           133.66873498799038`}, {-48.971932560236766`, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 72929]& ,
        TagBoxNote->"72929"],
       StyleBox["72929", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[72929, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 27071.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{133.16873498799038`, 231.1867493995196}, {
           24.454727201168545`, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 27071]& ,
        TagBoxNote->"27071"],
       StyleBox["27071", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[27071, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-0.54, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{-0.5, 1.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[92]:=",
 CellID->793810163],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "72929"}], ",", 
     RowBox[{"1", "\[Rule]", "27071"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[92]:=",
 CellID->1398994377],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$49768$49842 = False, DynamicChart`click$49774$49842 = 
       False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.4406715590832082`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 72929]& , TagBoxNote -> "72929"], 
                    StyleBox["72929", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[72929, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$49768$49842, 
                    FEPrivate`Not[DynamicChart`click$49768$49842]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$49768$49842, {{{1., 0.}, {0., 1.}}, {
                    0.1319274151555435, 0.15031685577598033`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$49768$49842}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.4406715590832082`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 27071]& , 
                    TagBoxNote -> "27071"], 
                    StyleBox["27071", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[27071, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$49774$49842, 
                    FEPrivate`Not[DynamicChart`click$49774$49842]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$49774$49842, {{{1., 0.}, {0., 
                    1.}}, {-0.13192741515554346`, -0.1503168557759804}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$49774$49842}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["72929", {}, StripOnInput -> False], 
                    TraditionalForm], {0.43975805051847827`, 
                    0.5010561859199344}]}}}, StatusArea[#, 72929]& , 
                 TagBoxNote -> "72929"], 
                StyleBox["72929", {}, StripOnInput -> False]], Annotation[#, 
                Style[72929, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$49768$49842, 
                  FEPrivate`Not[DynamicChart`click$49768$49842]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$49768$49842, {{{1., 0.}, {0., 1.}}, {
                0.1319274151555435, 0.15031685577598033`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$49768$49842}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["27071", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.43975805051847816`, \
-0.5010561859199345}]}}}, StatusArea[#, 27071]& , TagBoxNote -> "27071"], 
                StyleBox["27071", {}, StripOnInput -> False]], Annotation[#, 
                Style[27071, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$49774$49842, 
                  FEPrivate`Not[DynamicChart`click$49774$49842]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$49774$49842, {{{1., 0.}, {0., 
                1.}}, {-0.13192741515554346`, -0.1503168557759804}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$49774$49842}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}], 
   FormBox[
    FormBox[
     TemplateBox[{"0", "1"}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[92]:=",
 CellID->100043236]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "4.7468285833333335`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "11.660224000000001`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99992"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "11.26338088888889`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[92], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[92]=",
 CellID->1866962899]
}, Open  ]],

Cell["\<\
For each bootstrap member we now extract a time series (list of values) \
corresponding to the series times:\
\>", "MathCaption",
 CellID->274183705],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesBootstrapRNA", "=", 
  RowBox[{"CreateTimeSeries", "[", "rnaBootstrapFiltered", "]"}]}]], "Input",
 CellLabel->"In[93]:=",
 CellID->1853107120],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "4.7468285833333335`", ",", "1", ",", "204.56655238095237`", ",",
               "1", ",", "1", ",", "1", ",", "3.217454`", ",", "6.863135`", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
              "6.6208108333333335`", ",", "1.1237841555555557`"}], "}"}]}], 
           ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "28.96456190476191`", ",", "1", ",", "1", ",", 
              "9.124801666666668`", ",", "1", ",", "1", ",", "1", ",", 
              "1.018968911111111`", ",", "18.96063425`", ",", "1"}], 
             "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[93], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[93]=",
 CellID->1161877176]
}, Open  ]],

Cell[TextData[{
 "We use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement a logarithm:"
}], "MathCaption",
 CellID->373642571],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesBootstrapRNALog", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Log", ",", "timeSeriesBootstrapRNA"}], "]"}]}]], "Input",
 CellLabel->"In[94]:=",
 CellID->568506969],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1.557476728391234`", ",", "0", ",", "5.320893362054563`", ",", 
              "0", ",", "0", ",", "0", ",", "1.1685903635716475`", ",", 
              "1.9261643344309773`", ",", "0", ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "1.8902178448251994`", ",", 
              "0.11670170060702972`"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "3.3660730794475615`", ",", "0", ",", "0", ",", 
              "2.210996164072526`", ",", "0", ",", "0", ",", "0", ",", 
              "0.018791244561346027`", ",", "2.9423649482715892`", ",", "0"}],
              "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[94], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[94]=",
 CellID->600894861]
}, Open  ]],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->369078912],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesBootstrapRNALog", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[95]:=",
 CellID->1176501448],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1.557476728391234`", ",", "0", ",", "5.320893362054563`", ",", 
              "0", ",", "0", ",", "0", ",", "1.1685903635716475`", ",", 
              "1.9261643344309773`", ",", "0", ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "1.8902178448251994`", ",", 
              "0.11670170060702972`"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "3.3660730794475615`", ",", "0", ",", "0", ",", 
              "2.210996164072526`", ",", "0", ",", "0", ",", "0", ",", 
              "0.018791244561346027`", ",", "2.9423649482715892`", ",", "0"}],
              "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[95], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[95]=",
 CellID->1771820633]
}, Open  ]],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1458062219],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedBootstrapRNACompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "rnaBootstrapCompared"}], "]"}]}]], "Input",
 CellLabel->"In[96]:=",
 CellID->715818816],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.24812700467967763`", ",", "0.`", ",", "0.8476899256853185`", 
              ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.1861721728003447`", 
              ",", "0.3068639024333002`", ",", "0.`", ",", "0.`", ",", "0.`", 
              ",", "0.`", ",", "0.`", ",", "0.3011371428406584`", ",", 
              "0.01859215157747957`"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", "0.`", ",", 
              "0.`", ",", "0.`", ",", 
              TemplateBox[{"5"},
               "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
              "0.0037675423468814012`", ",", "0.5899281714099865`", ",", 
              "0.`"}], "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 96, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 96, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 96, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[96], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[96]=",
 CellID->1492281749]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->841142010],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedBootstrapRNACompared", "]"}]}]], "Input",\

 CellLabel->"In[97]:=",
 CellID->188913869],

Cell[BoxData["\<\"Removed series and returning filtered list. If you would \
like a list of removed keys run the command \
ConstantSeriesClean[data,ReturnDropped \[Rule] True].\"\>"], "Print",
 CellLabel->"During evaluation of In[97]:=",
 CellID->1269750011],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.24812700467967763`", ",", "0.`", ",", "0.8476899256853185`", 
              ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.1861721728003447`", 
              ",", "0.3068639024333002`", ",", "0.`", ",", "0.`", ",", "0.`", 
              ",", "0.`", ",", "0.`", ",", "0.3011371428406584`", ",", 
              "0.01859215157747957`"}], "}"}]}], ",", 
           TemplateBox[{"99965"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", "0.`", ",", 
              "0.`", ",", "0.`", ",", 
              TemplateBox[{"5"},
               "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
              "0.0037675423468814012`", ",", "0.5899281714099865`", ",", 
              "0.`"}], "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 97, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 97, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 97, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[97], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[97]=",
 CellID->1143434638]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Transcriptome Time Series", "Subsection",
 CellID->834625544],

Cell[TextData[{
 "In this subsection we will classify the transcriptome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1375671789],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesClassification",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClassification"], "[", 
     RowBox[{
      StyleBox["data", "TI"], ",", " ", 
      StyleBox["setTimes", "TI"]}], "]"}], Cell[TextData[{
     "takes a ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " association (or list of lists) of values corresponding to intensities \
collected over time and classifies the values into classes (groups) that show \
distinct similar temporal patterns. ",
     Cell[BoxData["TimeSeriesClassification"], "InlineFormula"],
     " takes as inputs:\n",
     Cell[BoxData[GridBox[{
        {
         StyleBox["data", "TI"], Cell[TextData[{
          
          "Association with series as values, or a list of series, where the \
series contain information regarding time intensities/observations. Each \
series may include ",
          Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData["Missing"]], "paclet:ref/Missing"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          " data points and may be entered as list of ",
          Cell[BoxData["N"], "InlineFormula"],
          " signal intensities corresponding one-to-one to the ",
          Cell[BoxData["N"], "InlineFormula"],
          " ",
          Cell[BoxData[
           StyleBox["setTimes", "TI"]], "InlineFormula"],
          " with ",
          Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData["Missing"]], "paclet:ref/Missing"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          " inserted appropriately if the data is absent, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["X", "1"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "1"], ")"}]}]}], ",", 
             RowBox[{
              SubscriptBox["X", "2"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "2"], ")"}]}]}], ",", "...", ",", 
             RowBox[{
              SubscriptBox["X", "N"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "N"], ")"}]}]}]}], "}"}]]],
          
          ". Alternatively, each series data may be a list of pairs of values \
{{",
          Cell[BoxData[
           SubscriptBox["t", "1"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "1"]]],
          "},{",
          Cell[BoxData[
           SubscriptBox["t", "2"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "2"]]],
          "},. ..,",
          Cell[BoxData[
           RowBox[{"{", 
            SubscriptBox["t", "N"]}]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "N"]]],
          "}} for only existing measurements."
         }], "TableText"]},
        {
         StyleBox["setTimes", "TI"], Cell[TextData[{
          "A global complete set of all possible ",
          Cell[BoxData["N"], "InlineFormula"],
          
          " times during which all data series could have been collected in \
the window of the experiment, including times for which no values were \
reported or are missing, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["t", "1"], ",", 
             SubscriptBox["t", "2"], ",", "...", ",", 
             SubscriptBox["t", "N"]}], "}"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]]]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->628162865],

Cell["Classifying a set of time series based on temporal behavior.", "Caption",
 CellID->503663403],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AutocorrelationCutoffs", 
    RowBox[{"{", "0", "}"}], Cell[TextData[{
     "Cutoffs, for \"Autocorrelation\" and \"InterpolatedAutocorrelation\" \
methods, for different lags that will be used to filter out data series for \
which the lags are not within cutoffs. The list length corresponds to cuttofs \
at different lags, with the ith lag cutoff provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "jk"]}], "}"}]}], TraditionalForm]]],
     " up to ",
     Cell[BoxData["k"], "InlineFormula"],
     ", where ",
     Cell[BoxData[
      RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "  ", "n"}]], 
      "InlineFormula"],
     ", and typically ",
     Cell[BoxData[
      RowBox[{"n", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "setTimes", "]"}], "/", "2"}], "]"}]}]], 
      "InlineFormula"],
     ". The classification will only consider lags up to the length of the \
list provided. The cutoffs are user-provided and typically calculated through \
simulation."
    }], "TableText"]},
   {"AutocorrelationLogic", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "Option to return the autocorrelation logic list for each signal, with \
the default set to ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["False"]], "paclet:ref/False"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". If set to True, a logic vector is returned indicating whether or not \
at a particular lag the autocorrelation for a signal is above or below the ",
     Cell[BoxData["AutocorrelationCutoffs"], "InlineFormula"],
     "."
    }], "TableText"]},
   {"AutocorrelationOptions", 
    RowBox[{"{", 
     RowBox[{
      ButtonBox["UpperFrequencyFactor",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/UpperFrequencyFactor"], " ", 
      "\[Rule]", "  ", "1"}], "}"}], Cell[TextData[{
     "Options that are used by the internal Autocorrelation function in the \
case that  the ",
     Cell[BoxData[
      RowBox[{"Method", "\[Rule]", " ", "\"\<Autocorrelation\>\""}]], 
      "InlineFormula"],
     " is set."
    }], "TableText"]},
   {"InterpolationDeltaT", "\"\<Auto\>\"", Cell["\<\
Time step used to grid the time window over which calculations will be \
performed. If set to \"Auto\" the step will correspond to dividing the span \
of the interval into a number of equal steps equal to the number of input \
time points.\
\>", "TableText"]},
   {"InterpolationOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "Options list for the internal Interpolation function used to \
interpolate between data points that have ",
     Cell[BoxData["Missing"], "InlineFormula"],
     " values or uneven spacing."
    }], "TableText"]},
   {"LombScargleCutoff", "0", Cell["\<\
Cutoff value for \"LombScargle\" method, for filtering the highest intensity \
observed in the power spectrum. The cutoff is user-provided and typically \
calculated through simulation. \
\>", "TableText"]},
   {"LombScargleOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PairReturn", "\[Rule]", "  ", "False"}], ",", 
      RowBox[{"NormalizeIntensities", "\[Rule]", " ", "True"}]}], "}"}], Cell[
    TextData[{
     "Options that are used by the internal LombScargle function if the case \
that the ",
     Cell[BoxData[
      RowBox[{"Method", "\[Rule]", " ", "\"\<LombScargle\>\""}]], 
      "InlineFormula"],
     " is set."
    }], "TableText"]},
   {
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], "\"\<LombScargle\>\"", Cell["\<\
Selection of which algorithm to use in the classification scheme.\
\>", "TableText"]},
   {"ReturnAllSpikes", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Option whether each signal may maintain unique membership to each spike \
class, or be allowed to belong to multiple classes. Used in \"Autocorrelation\
\" and \"InterpolatedAutocorrelation\" methods. If set to False, first spike \
maxima are classified, and only signals found not to belong to spike maxima \
are then considered for membership in the spike minima class.\
\>", "TableText"]},
   {"ReturnData", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell["\<\
If set to True will return input keys to data associations in the \
classification. If set to False will only return the keys of the input data \
in the classification.\
\>", "TableText"]},
   {"ReturnModels", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Whether to return the models as well as the classification information for \
the input data. The data is returned as an association with the  key \
\"TimeSeriesClasses\" for classification groups and one of the following: (i) \
\"Models\" for model-based methods, (ii) \"LombScargle\" for periodograms in \
the \"LombScargle\" method, (iii) \"Autocorrelations\" for autocorrelation \
based methods.\
\>", "TableText"]},
   {"SpikeCutoffs", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"1", " ", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{".99", ",", 
         RowBox[{"-", "99"}]}], "}"}]}], ",", " ", 
      RowBox[{"2", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{".99", ",", 
         RowBox[{"-", "99"}]}], "}"}]}]}], "|>"}], Cell[TextData[{
     "Association with number, ",
     Cell[BoxData["n"], "InlineFormula"],
     ", of data points as keys, and values corresponding to cutoffs, in the \
form ",
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{"n", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Cutoff", "n"]}], ",", 
          RowBox[{"Minimum", " ", "Spike", " ", 
           SubscriptBox["Cutoff", "n"]}]}], "}"}]}], "|>"}]], "InlineFormula"],
     " used to call spike maxima and minima for a time series with this \
number of datapoints. The values are provided by the user depending on data \
approach based on simulation. The default values are only place-holders and \
should be replaced by real values. The association must have corresponding \
keys for all lengths of input datasets, so that ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Keys", "[", 
        RowBox[{"OptionValue", "[", "SpikeCutoffs", "]"}], "]"}], 
       "\[Element]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Possible", " ", "lengths", " ", "of", " ", "numeric", " ", "data"}],
          "}"}], "."}]}]], "InlineFormula"],
     " ,  i.e. all possible lengths of series constructed by excluding ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Missing"]], "paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or other non-numeric values)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->495990132],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1722114517],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " uses multiple methods to classify data. The periodogram/autocorrelation \
methods used use cutoffs from simulation/user-provided values, to assess \
class membership based on statistical significance. In this tutorial we will \
use the \"LombScargle\" method, to classify data based on a Lomb-Scargle \
computation of a periodogram. The data is classified based into classes major \
(highest intensity) frequencies based on the generated periodogram for a \
signal, when the intensity of this frequency is above an intensity threshold \
cutoff. Additionally, data that displays spikey behavior in the real \
intensity, that is not classified into any frequency classes, is classified \
as a SpikeMaximum or SpikeMinimum if the spike is higher or lower \
respectively than what one would expect from a random signal."
}], "Text",
 CellID->1268036459],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<LombScargle\>\"", Cell[TextData[{
     "Classification based on periodograms (power spectra) generated by a \
Lomb-Scargle computation as implemented internally by the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function. The data is classified into classes of major (highest \
intensity)  frequencies and spikes (maxima or minima in real signal \
intensity), depending on cutoffs typically provided by simulation and passed \
to the function by the ",
     Cell[BoxData["LombScargleCutoffs"], "InlineFormula"],
     " and ",
     Cell[BoxData["SpikeCutoffs"], "InlineFormula"],
     " option values. The returned {computed classification vector} for this \
method is the intensity list of the periodogram for each signal."
    }], "TableText"]},
   {"\"\<Autocorrelation\>\"", Cell[TextData[{
     "Classification based on autocorrelations generated by a Lomb-Scargle \
approach using an inverser Fourier transform of spectral intensities, as \
implemented through the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Autocorrelation"]], 
        "paclet:MathIOmica/ref/Autocorrelation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function. The data is classified into autocorrelations at different \
lags and spikes (maxima or minima) classes, depending on cutoffs typically \
provided by simulation. The returned {computed classification vector} for \
this method is the autocorrelation list for each signal."
    }], "TableText"]},
   {"\"\<InterpolatedAutocorrelation\>\"", Cell[TextData[{
     "Classification based on autocorrelations generated directly in time, \
with ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Missing"]], "paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " data handled through interpolation. The data is classified into \
autocorrelations at different lags and spikes (maxima or minima) classes \
depending on cutoffs typically provided by simulation. The returned {computed \
classification  vector} for this method is the autocorrelation list for each \
signal."
    }], "TableText"]},
   {"\"\<TimeSeriesModelAggregate\>\"", Cell[TextData[{
     "Classification based on model fitting of time series through ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesModelFit"]], "paclet:ref/TimeSeriesModelFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and all available models therein. The data is classified into \
aggregate model classes. The returned {computed classification vector} for \
this method is the actual input signal."
    }], "TableText"]},
   {"\"\<TimeSeriesModelDetailed\>\"", Cell[TextData[{
     "Classification based on model fitting of time series through ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesModelFit"]], "paclet:ref/TimeSeriesModelFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and all available models therein. The data is classified into model \
classes based on individual model degree parameters.  The returned {computed \
classification vector} for this method is the \"BestFitParameters\" for the \
model fit. If this list is empty an integer list is returned {token integer} \
- this is used in subsequent clustering applications."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1644998689],

Cell[TextData[{
 "Methods for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->788494545],

Cell[TextData[{
 "To create the cutoffs for the classification we will first use the \
bootstrap time series set created in the previous subsection, and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileEstimator"]], 
    "paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->1104163398],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["QuantileEstimator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/QuantileEstimator"], "[", 
     RowBox[{
      StyleBox["data", "TI"], ",", " ", 
      StyleBox["timepoints", "TI"]}], "]"}], Cell[TextData[{
     "obtains the quantile estimator following bootstrap for time series.  It \
takes as inputs:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["data", "TI"], Cell["\<\
Association or list with series as values, from which to generate a \
distribution.\
\>", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["timepoints", "TI"], Cell[
         "Timepoints over which the time series run.", "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}},
      GridBoxDividers->{"Rows" -> {{True, True, True}}}}]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->219567939],

Cell["\<\
Estimating  the quantile value that can be used as a cutoff for \
classification of time series based on bootstrap simulations.\
\>", "Caption",
 CellID->908945433],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AutocorrelationOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Specific options when calculating autocorrelations for the time series.\
\>", "TableText"]},
   {"InterpolationDeltaT", "\"\<Auto\>\"", Cell["\<\
Time step used to grid the time window over which calculations will be \
performed. If set to \"Auto\" the step will correspond to dividing the span \
of the interval into a number of equal steps equal to the number of input \
time points.\
\>", "TableText"]},
   {"InterpolationOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Options list for the internal Interpolation function used to interpolate \
between data points that have Missing values or uneven spacing.\
\>", "TableText"]},
   {"LombScargleOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PairReturn", " ", "\[Rule]", "  ", "False"}], ",", 
      RowBox[{"NormalizeIntensities", "\[Rule]", " ", "True"}]}], "}"}], 
    Cell["\<\
Specific options when calculating LombScargle periodograms for the time \
series.\
\>", "TableText"]},
   {
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], "\"\<LombScargle\>\"", Cell["\<\
Method of calculation. Choices include one of the following: \
{\"LombScargle\",\"Autocorrelation\", \
\"InterpolatedAutocorrelation\",\"Spikes\"}\
\>", "TableText"]},
   {"QuantileValue", "0.95", Cell["Which quantile to extract.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1624929440],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileEstimator"]], 
    "paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->639559181],

Cell[TextData[{
 "Depending on the cutoffs we would like to generate, we select the \
appropriate Method (also considering the Method that the downstream ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " will use)."
}], "Text",
 CellID->67687095],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<Autocorrelation\>\"", Cell[TextData[{
     "List of values corresponding to selected quantile of autocorrelations, \
with the ith lag quantile provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "ck"]}], "}"}]}], TraditionalForm]]],
     " up to k lags, where 1\[LessEqual] k \[LessEqual] n, and typically \
n=Floor[Length[timepoints]/2].  The method utilizes the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Autocorrelation"]], 
        "paclet:MathIOmica/ref/Autocorrelation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function internally."
    }], "TableText"]},
   {"\"\<InterpolatedAutocorrelation\>\"", Cell[TextData[{
     "List of values corresponding to selected quantile for autocorrelations, \
with the ith lag quantile provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "ck"]}], "}"}]}], TraditionalForm]]],
     " up to k lags, where 1\[LessEqual] k \[LessEqual] n, and typically \
n=(Length[timepoints]-1). The method utilizes an ",
     ButtonBox["Interpolation",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Interpolation"],
     " followed by a ",
     ButtonBox["CorrelationFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/CorrelationFunction"],
     " implementation to compute autocorrelations, i.e. missing data or \
uneven sampling is handled by data interpolation."
    }], "TableText"]},
   {"\"\<LombScargle\>\"", Cell[TextData[{
     "Single value corresponding to selected quantile of maximum peak \
intensity of periodogram. The method utilizes the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function internally."
    }], "TableText"]},
   {"\"\<Spikes\>\"", Cell[TextData[{
     "Association with number, n, of data points as keys, and values \
corresponding to quantiles for maxima and minima of the series, in the form ",
     
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{"n", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Quantile", "n"]}], ",", 
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Quantile", "n"]}]}], "}"}]}], "|>"}]], 
      "InlineFormula"],
     " . The keys are generated automatically so that so that ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Keys", "[", "output", "]"}], "\[Element]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Possible", " ", "lengths", " ", "of", " ", "numeric", " ", "data"}],
          "}"}], "."}]}]], "InlineFormula"],
     " ,  i.e. all possible lengths of input series constructed by excluding \
Missing or other non-numeric values)."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->131328315],

Cell[TextData[{
 ButtonBox["Method",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Method"],
 " selection and output for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileEstimator"]], 
    "paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->751094438],

Cell[TextData[{
 "The default output for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " is an ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Association"]], "paclet:ref/Association"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". The general output structure is for M output classes of each having ",
 Cell[BoxData[
  SubscriptBox["m", "i"]], "InlineFormula"],
 " members: "
}], "Text",
 CellID->1062814029],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "11"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "11"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "11"]}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["Member", "12"], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "12"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "12"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      " ", 
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"1", 
         SubscriptBox["m", "1"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   RowBox[{
    SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "21"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "21"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "21"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "22"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "22"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "22"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"2", 
         SubscriptBox["m", "2"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   " ", "...", ",", " ", 
   RowBox[{
    SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "M1"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M1"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M1"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "M2"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M2"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        SubscriptBox["Mm", "M"]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "|>"}]], "InlineFormula"]], "Text",
 CellID->2093893304],

Cell["\<\
Before we classify our transcriptome data, we estimate for the \
\"LombScargle\" Method a 0.95 quantile cutoff from the bootstrap \
transcriptome data:\
\>", "MathCaption",
 CellID->1669899255],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95RNA", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"rnaBootstrapFinalTimeSeries", ",", "timesRNA"}], "]"}]}]], "Input",\

 CellLabel->"In[263]:=",
 CellID->532996142],

Cell[BoxData["0.8602315900893768`"], "Output",
 CellID->177650624]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
transcriptome data:\
\>", "MathCaption",
 CellID->365627628],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95RNASpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"rnaBootstrapFinalTimeSeries", ",", "timesRNA", ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[264]:=",
 CellID->186560353],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"14", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.884016143838748`", ",", 
      RowBox[{"-", "0.3480693290704187`"}]}], "}"}]}], ",", 
   RowBox[{"15", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.858813122520236`", ",", 
      RowBox[{"-", "0.3376351832224358`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[264]=",
 CellID->811386742]
}, Open  ]],

Cell["\<\
Now we can classify the transcriptome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1987903082],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"rnaFinalTimeSeries", ",", "timesRNA", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95RNA"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95RNASpikes"}]}], "]"}]}]], "Input",
 CellLabel->"In[265]:=",
 CellID->136519148],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[265]:=",
 CellID->1026543908],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.08553735041954855`", ",", "0.2041353122187633`", ",", 
                   "0.21930279158524527`", ",", "0.3784958694491304`", ",", 
                   "0.5848999163284979`", ",", "0.34601221698539536`", ",", 
                   "0.5457352214922402`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
                   TemplateBox[{"7"},
                    "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
                   "0.07591897179810148`", ",", "0.`"}], "}"}]}], "}"}]}], 
              ",", 
              TemplateBox[{"821"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}], ",", 
           
           TemplateBox[{"7"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 265, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 265, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 265, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[265], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[265]=",
 CellID->755245404]
}, Open  ]],

Cell[TextData[{
 "The default output for TimeSeriesClassification is an Association with \
outer keys being the classification classes,  inner keys being the class \
members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". The general output structure is for M output classes of each having ",
 Cell[BoxData[
  SubscriptBox["m", "i"]], "InlineFormula"],
 " members: "
}], "Text",
 CellID->673783308],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "11"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "11"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "11"]}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["Member", "12"], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "12"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "12"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      " ", 
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"1", 
         SubscriptBox["m", "1"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   RowBox[{
    SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "21"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "21"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "21"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "22"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "22"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "22"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"2", 
         SubscriptBox["m", "2"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   " ", "...", ",", " ", 
   RowBox[{
    SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "M1"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M1"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M1"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "M2"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M2"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        SubscriptBox["Mm", "M"]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "|>"}]], "InlineFormula"]], "Text",
 CellID->594786925],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->1134620377],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "rnaClassification", "]"}]], "Input",
 CellLabel->"In[101]:=",
 CellID->2057374526],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[101]=",
 CellID->568030100]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->172558847],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", "rnaClassification"}]], "Input",\

 CellLabel->"In[266]:=",
 CellID->1093618079],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "822"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "5963"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "116"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "35"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "61"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[266]=",
 CellID->1781151258]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->47471690],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "rnaClassification"}]], "Input",
 CellLabel->"In[267]:=",
 CellID->1140260793],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"PADI4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AHDC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC28B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AGO1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JAK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C1orf52\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IARS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"URB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HSPA14\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"WBP1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PDZD8\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LOC102288414\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TRMT112\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DRAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CDK2AP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FAM168A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FLI1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EFCAB4B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EMG1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NDUFA12\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ELK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SSH1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C12orf49\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IPO5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TMCO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KIAA0586\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JKAMP\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PCNX\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EHD4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CLPX\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AAGAB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RCCD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FAM173A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LINC00921\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZC3H7A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GLG1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBTPS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TNFRSF13B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZNF207\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ACLY\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PSME3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TEX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKCA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ATP9B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBP\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ADNP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HOOK2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EMR3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SDHAF1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZNF529\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RPL18\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CTU1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GEMIN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GMCL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"COA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MRPS9\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GTF3C3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NDUFS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RALGAPA2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LOC284801\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SAMHD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SERINC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"USP25\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RUNX1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DSCR3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"THAP7\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAPK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PITPNB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EWSR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NPTXR\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TCF20\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ARPC4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STT3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SNRK-AS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC12\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKAR2A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GSK3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PTPLB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DNAJC13\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LRCH3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KLF3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ANTXR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GPRIN3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPP4B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PTGER4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NNT\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC125\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"POC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ERAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TBC1D22B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HACE1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SYNJ2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CYTH3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAG3L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAG3L3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MTERF\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBLAC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TRIM56\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AHCYL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RNF122\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ADAM9\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKDC\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AGO2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ERMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KDM4C\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FOCAD\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CEP78\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RC3H2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GTF3C4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZRSR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PDK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CASK\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DDX3X\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TIMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ARHGEF6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IDS\"\>", ",", "\<\"RNA\"\>"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[267]=",
 CellID->384783444]
}, Open  ]],

Cell[TextData[{
 "We may also want to know what these frequencies correspond to. The \
\"LombScargle\" method uses a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " transformation."
}], "Text",
 CellID->1070903617],

Cell[BoxData[GridBox[{
   {
    ButtonBox[
     RowBox[{"LombScargle", "[", 
      RowBox[{
       StyleBox["data", "TI"], ",", " ", 
       StyleBox["setTimes", "TI"]}], "]"}],
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/"], Cell[TextData[{
     "calculates the Lomb-Scargle power spectrum for time series ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " that runs over specified ",
     Cell[BoxData[
      StyleBox["setTimes", "TI"]], "InlineFormula"],
     ". It takes as input:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["data", "TI"], Cell[TextData[{
          
          "Time series (data as a list; list may be the value of a single key \
in an association). The series may include Missing data points. Data may be \
entered as list of N signal intensities corresponding one-to-one to the N \
setTimes with Missing inserted appropriately if the data is absent, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["X", "1"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "1"], ")"}]}]}], ",", 
             RowBox[{
              SubscriptBox["X", "2"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "2"], ")"}]}]}], ",", "...", ",", 
             RowBox[{
              SubscriptBox["X", "N"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "N"], ")"}]}]}]}], "}"}]]],
          ". Alternatively, the data may be a list of pairs of values {{",
          Cell[BoxData[
           SubscriptBox["t", "1"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "1"]]],
          "},{",
          Cell[BoxData[
           SubscriptBox["t", "2"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "2"]]],
          "},. ..,",
          Cell[BoxData[
           RowBox[{"{", 
            SubscriptBox["t", "N"]}]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "N"]]],
          "}} for only existing measurements."
         }], "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["setTimes", "TI"], Cell[TextData[{
          
          "A complete set of all possible N times during which data could \
have been collected in the window of the experiment, including times for \
which no data was collected,",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["t", "1"], ",", 
             SubscriptBox["t", "2"], ",", "...", ",", 
             SubscriptBox["t", "N"]}], "}"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}},
      GridBoxDividers->{"Rows" -> {{True, True, True}}}}]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1990717933],

Cell["\<\
Calculating the power spectrum of a (possibly unevenly sampled) time series.\
\>", "Caption",
 CellID->201079671],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"FrequenciesOnly", "False", Cell[TextData[{
     "Whether to return only the computation frequencies. An association of \
frequencies \"f\" ordered from low to high by index i is returned in the \
form:\n",
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<f1\>\"", "\[Rule]", " ", 
         SubscriptBox["frequency", "1"]}], ",", 
        RowBox[{"\"\<f2\>\"", "\[Rule]", " ", 
         SubscriptBox["frequency", "2"]}], ",", " ", "...", ",", 
        RowBox[{"\"\<fi\>\"", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["frequency", 
            RowBox[{"i", ",", "...", ","}]], "\"\<fn\>\""}], "\[Rule]", " ", 
          SubscriptBox["frequency", "n"]}]}]}], "|>"}]], "InlineFormula"]
    }], "TableText"]},
   {"NormalizeIntensities", "False", Cell[
    "Whether the intensities list should be normalized or not.", "TableText"]},
   {
    ButtonBox["OversamplingRate",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/OversamplingRate"], "1", Cell["\<\
Rate at which to oversample the time series using zero-padding.\
\>", "TableText"]},
   {"PairReturn", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Whether data should be returned as {frequency list,intensity list} or as \
pairs: {{frequency1,intensity1}, {frequency2, \
intensity2},...,{frequencyN,intensityN}.\
\>", "TableText"]},
   {
    ButtonBox["UpperFrequencyFactor",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/UpperFrequencyFactor"], "1", 
    Cell["\<\
Value \[GreaterEqual] 1,  by which to scale the upper Nyquist cutoff \
frequency and increase spectral resolution. \
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->3905959],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1222943503],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["True"]], "paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->661398041],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"rnaFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesRNA", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[104]:=",
 CellID->741518215],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[104]=",
 CellID->1561171098]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proteomic Data", "Section",
 CellID->1387790784],

Cell[CellGroupData[{

Cell["Importing OmicsObject Proteome Data", "Subsection",
 CellID->1225055698],

Cell[TextData[{
 "We now import the proteomics data example (for details on how to import \
such data please refer to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporter"]], "paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirect"]], 
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirectLabeled"]], 
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObjectCreator"]], 
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->72301240],

Cell["We import the proteomics OmicsObject MathIOmica example:", "MathCaption",
 CellID->1419719176],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", "\"\<proteinExample\>\""}], 
     "}"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[105]:=",
 CellID->458823941],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.937`", "}"}], ",", 
                 RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.073`", "}"}], ",", 
                 RowBox[{"{", "24", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.059`", "}"}], ",", 
                 RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5219"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"9"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 105, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 105, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 105, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[105], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[105]=",
 CellID->647445040]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->1754470356],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", "proteinExample"}]], "Input",
 CellLabel->"In[106]:=",
 CellID->285316335],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"14\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>", ",", "\<\"21\"\>"}], "}"}]], "Output",
 CellLabel->"Out[106]=",
 CellID->309147931]
}, Open  ]],

Cell["\<\
We notice that sample 8 is missing - this is because it was used as a \
reference in the proteomics experiment. Point 18 is missing as there was no \
sample for that time point. We will address this in the next section.\
\>", "Text",
 CellID->460190071],

Cell[TextData[{
 "We can get the expression raw data from any sample and entry. For example, \
the ",
 Cell[BoxData[
  SuperscriptBox["14", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["214", "th"]], "InlineFormula"],
 " entries in sample 12:"
}], "MathCaption",
 CellID->1259531385],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<12\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", "22"}], "}"}]}], "]"}], "@", 
  "proteinExample"}]], "Input",
 CellLabel->"In[107]:=",
 CellID->1197679216],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"A5PLN9\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1.057`", "}"}], ",", 
      RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"A6NGU5\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[107]=",
 CellID->1086334224]
}, Open  ]],

Cell[TextData[{
 "The keys correspond to UniProt accessions, and have been tagged with a \
\"Protein\" label as well. The  values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example: ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "relative", " ", "intensity", " ", "compared", " ", "to", " ", 
       "reference"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "number", " ", "of", " ", "unique", " ", "peptides", " ", "identified", 
       " ", "for", " ", "the", " ", "given", " ", "protein"}], "}"}]}], 
    "}"}]}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1823731250],

Cell["\<\
The measurement for each protein is a relative intensity, i.e. the ratio of \
the value for the protein compared to the reference timepoint that has been \
chosen as the healthy sample \"8\", day \"255\" (in the experiment this was \
TMT reporter with 126 amu). The last list, the \"metadata\", in the \
proteomics OmicsObject was chosen to be the number of unique peptides \
identified for the given protein.\
\>", "Text",
 CellID->220886326],

Cell[CellGroupData[{

Cell["Additional Information: Gene Translation", "Subsubsubsection",
 CellID->237385776],

Cell[TextData[{
 "As an aside, let us consider the form of the protein identifiers. \
MathIOmica can perform basic ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GeneTranslation"]], "paclet:MathIOmica/ref/GeneTranslation"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " going from one kind of identifier to another, using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GetGeneDictionary"]], 
    "paclet:MathIOmica/ref/GetGeneDictionary"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1605734052],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["GeneTranslation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/GeneTranslation"], "[", 
     RowBox[{
      StyleBox["inputIDList", "TI"], ",", 
      StyleBox["targetIDList", "TI"], ",", 
      StyleBox["geneDictionary", "TI"]}], "]"}], Cell[TextData[{
     "uses ",
     Cell[BoxData[
      StyleBox["geneDictionary", "TI"]], "InlineFormula"],
     " to convert ",
     Cell[BoxData[
      StyleBox["inputIDList", "TI"]], "InlineFormula"],
     " IDs to different annotations as indicated by ",
     Cell[BoxData[
      StyleBox["targetIDList", "TI"]], "InlineFormula"],
     ". It takes for inputs:\n",
     Cell[BoxData[GridBox[{
        {"inputIDList", Cell[TextData[{
          "List of ",
          Cell[BoxData["n"], "InlineFormula"],
          " IDs (strings) to be converted in the form ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["inputID", 
               RowBox[{"1", ","}]], 
              SubscriptBox["inputID", "2"]}], ",", "...", ",", 
             SubscriptBox["inputID", "n"]}], "}"}]], "InlineFormula"]
         }], "TableText"]},
        {"targetIDList", Cell[TextData[{
          
          "List of target identifier strings, as used in the gene \
geneDictionary,",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{"target", " ", 
              SubscriptBox["ID", "1"]}], ",", 
             SubscriptBox["targetID", "2"], ",", 
             RowBox[{"...", "target", " ", 
              SubscriptBox["ID", "k"]}]}], "}"}]], "InlineFormula"],
          
          ", e.g. {\"UniProt ID\",\"Gene Symbol\"}. Can also be provided as a \
single string for only one kind of IDs."
         }], "TableText"]},
        {"geneDictionary", Cell[TextData[{
          "Gene dictionary to base translation on in the form generated by ",
          Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData["GetGeneDictionary"]], 
             "paclet:MathIOmica/ref/GetGeneDictionary"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]]]
    }], "TableText"]},
   {
    ButtonBox[
     RowBox[{"GetGeneDictionary", "[", "]"}],
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/"], Cell["\<\
creates an ID/accession dictionary from a UCSC table search - typically of \
gene annotations. GetGeneDictionary uses MathIOmica data for the annotations..\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->730612315],

Cell["Translating gene identifiers using a gene dictionary.", "Caption",
 CellID->69474757],

Cell["We use GetGeneDictionary to define a gene dictionary:", "MathCaption",
 CellID->1155116896],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"geneDictionary", "=", 
  RowBox[{"GetGeneDictionary", "[", "]"}]}]], "Input",
 CellLabel->"In[108]:=",
 CellID->797502192],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"\<\"human\"\>", "\[Rule]", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"UCSC ID\"\>", "\[Rule]", 
              RowBox[{"{", 
               
               RowBox[{"\<\"uc001aaa.3\"\>", ",", "\<\"uc010nxr.1\"\>", 
                ",", "\<\"uc010nxq.1\"\>", ",", "\<\"uc001aal.1\"\>", 
                ",", "\<\"uc001aaq.2\"\>", ",", "\<\"uc001aar.2\"\>", 
                ",", "\<\"uc001aau.3\"\>", ",", "\<\"uc021oeh.1\"\>", ",", 
                TemplateBox[{"121567"},
                 "OutputSizeLimit`Skeleton"], ",", "\<\"uc022cfk.1\"\>", 
                ",", "\<\"uc031tkn.1\"\>", ",", "\<\"uc022cgh.1\"\>", 
                ",", "\<\"uc022cha.1\"\>", ",", "\<\"uc022chb.1\"\>", 
                ",", "\<\"uc022chc.1\"\>", ",", "\<\"uc022che.1\"\>", 
                ",", "\<\"uc022cpe.1\"\>"}], "}"}]}], ",", 
             TemplateBox[{"6"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{
              RowBox[{"\<\"HGU\"\>", "\[Ellipsis]", "\<\"x ID\"\>"}], 
              "\[Rule]", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[108], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[108]=",
 CellID->113335974]
}, Open  ]],

Cell["\<\
The current version of the gene dictionary has accessions for the following \
identifiers:\
\>", "MathCaption",
 CellID->811349928],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Keys"}], "]"}], "@", "geneDictionary"}]], "Input",
 CellLabel->"In[109]:=",
 CellID->1984565093],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"human\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"\<\"UCSC ID\"\>", ",", "\<\"UniProt ID\"\>", 
     ",", "\<\"Gene Symbol\"\>", ",", "\<\"RefSeq ID\"\>", 
     ",", "\<\"NCBI Protein Accession\"\>", ",", "\<\"Ensembl ID\"\>", 
     ",", "\<\"KEGG Gene ID\"\>", ",", "\<\"HGU133Plus2 Affymetrix ID\"\>"}], 
    "}"}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[109]=",
 CellID->19720129]
}, Open  ]],

Cell["\<\
We can now use GeneTranslation (setting the optional InputID to \"UniProt \
ID\") to convert our example \"UniProt ID\" accessions to \"Gene Symbol\":\
\>", "MathCaption",
 CellID->589880236],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneTranslation", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<A5PLN9\>\"", ",", "\"\<A6NGU5\>\""}], "}"}], ",", 
   RowBox[{"{", "\"\<Gene Symbol\>\"", "}"}], ",", "geneDictionary", ",", 
   RowBox[{"InputID", "\[Rule]", " ", 
    RowBox[{"{", "\"\<UniProt ID\>\"", "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[110]:=",
 CellID->557131970],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Gene Symbol\"\>", "\[Rule]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"A5PLN9\"\>", "\[Rule]", 
      RowBox[{"{", "\<\"TRAPPC13\"\>", "}"}]}], ",", 
     RowBox[{"\<\"A6NGU5\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[110]=",
 CellID->723726465]
}, Open  ]],

Cell["\<\
We note that an ID might not necessarily be annotated across all databases, \
as in the above example.\
\>", "Text",
 CellID->1398286274]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing of Proteome Data", "Subsection",
 CellID->1281067914],

Cell["\<\
We will next preprocess the imported proteome data. We will first perform a \
transformation on the data towards a normal distribution, then we will \
re-label the samples with real time and carry out filtering for unique \
peptides present in each protein identification, as well as for missing data. \
Finally, we will create the proteomics time series or relative intensities \
compared to the healthy reference point for each protein.\
\>", "Text",
 CellID->1997801546],

Cell[CellGroupData[{

Cell["Power Transformation, Labeling and Filtering", "Subsubsection",
 CellID->1973203023],

Cell[CellGroupData[{

Cell["Data Power Transformation", "Subsubsubsection",
 CellID->666869090],

Cell[TextData[{
 "To make the data comparable across time points, and as close to a normal \
distribution as possible for each sample, we normalize each time point \
/sample by using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ApplyBoxCoxTransform"]], 
    "paclet:MathIOmica/ref/ApplyBoxCoxTransform"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->611320926],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ApplyBoxCoxTransform",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ApplyBoxCoxTransform"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "for a given ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " set, computes the Box-Cox transformation at the maximum likelihood \
\[Lambda] parameter."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->351641937],

Cell["\<\
Applying a power transformation (Box-Cox) for an optimized parameter for each \
dataset.\
\>", "Caption",
 CellID->171038615],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which component of a list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["HorizontalSelection",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/HorizontalSelection"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Horizontal selection across components for a single level association with \
multi-list values.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1055700668],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ApplyBoxCoxTransform"]], 
    "paclet:MathIOmica/ref/ApplyBoxCoxTransform"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->651235562],

Cell[TextData[{
 "We apply a Box-Cox transformation to the proteomics data measurement in the \
OmicsObject, which is in the first list first component for each identifier. \
The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1312882619],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedProteinData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"proteinExample", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[111]:=",
 CellID->223704608],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.15263837861185456`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.15263837861185456`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->916487219],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.17708643543086405`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.17708643543086405`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1393161984],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4215814241016595`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4215814241016595],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1933820101],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.29228668269327357`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.29228668269327357`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1615625703],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4320423187977895`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4320423187977895],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->944609390],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3466732904603381`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3466732904603381],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1760647747],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3680613181947485`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3680613181947485],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->729347633],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.08340736160903305`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.08340736160903305],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->928300839],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", "0.134129663481085`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.134129663481085],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->200801478],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.16633647201933024`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.16633647201933024`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->584112668],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.08662842477048169`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.08662842477048169],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->805571796],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.199246934668649`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.199246934668649],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->507574800],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.22177775113087478`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.22177775113087478`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1093520098]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5221"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", 
                   TemplateBox[{"21"},
                    "OutputSizeLimit`Skeleton"]}], "}"}], ",", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton"]}], "}"}]}], ",", 
              TemplateBox[{"5223"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 111, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 111, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 111, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[111], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[111]=",
 CellID->627236060]
}, Open  ]],

Cell["\<\
We can plot the data to see what the resulting distributions look like:\
\>", "MathCaption",
 CellID->1190633123],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "transformedProteinData"}], ")"}]}]], "Input",
 CellLabel->"In[112]:=",
 CellID->718275515],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.609], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.609], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.9, 0}, {-1.8, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-82.10026737967915, -73.84625668449199}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.7, 0}, {-1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-66.5922459893048, -58.33823529411765}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.5, 0}, {-1.4, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-51.084224598930476`, -42.830213903743314`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-35.57620320855615, -27.322192513368975`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1.1, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-27.822192513368975`, -19.568181818181827`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-20.068181818181827`, -11.81417112299465}, {
              18.944799262775355`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.9, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-12.31417112299465, -4.060160427807489}, {
              18.944799262775355`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.9, 0}, {-0.8, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-4.560160427807489, 3.6938502673796805`}, {
              18.900813620652837`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 10.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{3.1938502673796805`, 11.44786096256685}, {
              18.592914125795218`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 10]& ,
           TagBoxNote->"10"],
          StyleBox["10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[10, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 18.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{10.94786096256685, 19.20187165775402}, {
              18.24102898881508, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 20.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{18.70187165775402, 26.95588235294118}, {
              18.15305770457005, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 20]& ,
           TagBoxNote->"20"],
          StyleBox["20", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[20, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 41.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.45588235294118, 34.70989304812835}, {
              17.229359219997193`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 96.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{34.20989304812835, 42.46390374331551}, {
              14.810148903258757`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 96]& ,
           TagBoxNote->"96"],
          StyleBox["96", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[96, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 171.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{41.96390374331551, 50.21791443850268}, {
              11.511225744069982`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 171]& ,
           TagBoxNote->"171"],
          StyleBox["171", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[171, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 511.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{49.71791443850268, 
              57.971925133689844`}, {-3.4438925775857925`, 
              19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 511]& ,
           TagBoxNote->"511"],
          StyleBox["511", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[511, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 1161.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{57.471925133689844`, 
              65.72593582887701}, {-32.03455995722183, 19.53277054702039}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1161]& ,
           TagBoxNote->"1161"],
          StyleBox["1161", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1161, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 1073.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{65.22593582887701, 
              73.47994652406418}, {-28.163823450440344`, 
              19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1073]& ,
           TagBoxNote->"1073"],
          StyleBox["1073", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1073, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 514.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{72.97994652406418, 
              81.23395721925135}, {-3.575849503953343, 19.532770547020387`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 514]& ,
           TagBoxNote->"514"],
          StyleBox["514", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[514, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 197.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{80.73395721925135, 88.98796791443851}, {
              10.367599048884541`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 197]& ,
           TagBoxNote->"197"],
          StyleBox["197", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[197, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 85.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.48796791443851, 96.74197860962568}, {
              15.293990966606444`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 85]& ,
           TagBoxNote->"85"],
          StyleBox["85", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[85, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 45.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{96.24197860962568, 104.49598930481284`}, {
              17.053416651507124`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 45]& ,
           TagBoxNote->"45"],
          StyleBox["45", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[45, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 35.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{103.99598930481284`, 112.25}, {
              17.493273072732293`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 35]& ,
           TagBoxNote->"35"],
          StyleBox["35", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[35, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 18.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.75, 120.00401069518718`}, {
              18.24102898881508, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 11.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{119.50401069518718`, 127.75802139037435`}, {
              18.5489284836727, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 7.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{127.25802139037435`, 135.51203208556151`}, {
              18.72487105216277, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 7]& ,
           TagBoxNote->"7"],
          StyleBox["7", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[7, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{135.01203208556151`, 143.26604278074868`}, {
              18.944799262775355`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{142.76604278074868`, 151.02005347593587`}, {
              18.768856694285287`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.5, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{173.78208556149735`, 182.03609625668452`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.5, 0}, {1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{181.53609625668452`, 189.79010695187168`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.522, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-1, 2], 
         Rational[3, 5]}, {All, All}}, {{-0.5, 0.6}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.476], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.476], Thickness[Small]}], 
        RectangleBox[{-1.2, 0}, {-1.15, 1.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 1.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 2.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 4.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 1.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 2.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 5.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 6.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 21.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 30.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 69.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 92.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 102.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 140.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 163.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 207.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 334.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 382.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 434.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 391.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 365.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 372.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 351.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 260.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 147.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 75.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 29.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 12.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 9.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 6.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 5.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 3.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 4.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 1.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 2.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 1.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 1.},
         RoundingRadius->0], RectangleBox[{1.15, 0}, {1.2, 1.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 3.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.78, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-3, 4], 
         Rational[3, 4]}, {All, All}}, {{-0.75, 0.75}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.567], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.567], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.25, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-78.5598007818019, -72.4929943955164}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.95, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-45.1589624640889, -39.092156077803395`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.85, 0}, {-0.8, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-28.458543305232396`, -22.39173691894692}, {
              21.520832192096776`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.75, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-22.89173691894692, -16.824930532661412`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.75, 0}, {-0.7, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-17.324930532661412`, -11.258124146375906`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.65, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-11.758124146375906`, -5.6913177600904135`}, {
              21.594036755152175`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.65, 0}, {-0.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-6.1913177600904135`, -0.12451137380490707`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.55, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-0.6245113738049071, 5.442295012480578}, {
              21.667241318207573`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.55, 0}, {-0.5, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{4.942295012480578, 11.009101398766084`}, {
              21.520832192096776`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.45, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{10.509101398766084`, 16.575907785051584`}, {
              21.594036755152175`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.45, 0}, {-0.4, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{16.075907785051584`, 22.142714171337076`}, {
              21.594036755152175`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.35, 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.642714171337076`, 27.709520557622582`}, {
              20.7155819984874, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.35, 0}, {-0.3, 31.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{27.209520557622582`, 33.27632694390808}, {
              19.544308989601035`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 31]& ,
           TagBoxNote->"31"],
          StyleBox["31", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[31, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.25, 50.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{32.77632694390808, 38.84313333019358}, {
              18.153422291548473`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 50]& ,
           TagBoxNote->"50"],
          StyleBox["50", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[50, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.25, 0}, {-0.2, 79.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{38.34313333019358, 44.40993971647907}, {
              16.03048996294193, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 79]& ,
           TagBoxNote->"79"],
          StyleBox["79", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[79, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.15, 174.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{43.90993971647907, 49.97674610276458}, {
              9.076056472679129, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 174]& ,
           TagBoxNote->"174"],
          StyleBox["174", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[174, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.15, 0}, {-0.1, 313.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{49.47674610276458, 
              55.54355248905007}, {-1.0993777920211834`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 313]& ,
           TagBoxNote->"313"],
          StyleBox["313", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[313, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {-0.05, 558.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{55.04355248905007, 
              61.11035887533557}, {-19.034495740593677`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 558]& ,
           TagBoxNote->"558"],
          StyleBox["558", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[558, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.05, 0}, {0., 758.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{60.61035887533557, 
              66.67716526162107}, {-33.67540835167327, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 758]& ,
           TagBoxNote->"758"],
          StyleBox["758", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[758, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.05, 774.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.17716526162107, 
              72.24397164790656}, {-34.846681360559636`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 774]& ,
           TagBoxNote->"774"],
          StyleBox["774", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[774, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.05, 0}, {0.1, 535.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.74397164790656, 
              77.81077803419207}, {-17.35079079031953, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 535]& ,
           TagBoxNote->"535"],
          StyleBox["535", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[535, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.15, 326.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{77.31077803419207, 
              83.37758442047756}, {-2.0510371117413584`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 326]& ,
           TagBoxNote->"326"],
          StyleBox["326", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[326, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.15, 0}, {0.2, 154.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{82.87758442047756, 88.94439080676307}, {
              10.540147733787087`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 154]& ,
           TagBoxNote->"154"],
          StyleBox["154", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[154, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.25, 81.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.44439080676307, 94.51119719304856}, {
              15.884080836831139`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 81]& ,
           TagBoxNote->"81"],
          StyleBox["81", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[81, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.25, 0}, {0.3, 53.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{94.01119719304856, 100.07800357933405`}, {
              17.93380860238228, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 53]& ,
           TagBoxNote->"53"],
          StyleBox["53", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[53, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.35, 40.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{99.57800357933405, 105.64480996561956`}, {
              18.885467922102453`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 40]& ,
           TagBoxNote->"40"],
          StyleBox["40", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[40, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.35, 0}, {0.4, 22.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{105.14480996561956`, 111.21161635190506`}, {
              20.203150057099617`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 22]& ,
           TagBoxNote->"22"],
          StyleBox["22", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[22, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.45, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{110.71161635190506`, 116.77842273819056`}, {
              20.27635462015501, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.45, 0}, {0.5, 7.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{116.27842273819056`, 122.34522912447605`}, {
              21.301218502930585`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 7]& ,
           TagBoxNote->"7"],
          StyleBox["7", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[7, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.55, 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{121.84522912447605`, 127.91203551076157`}, {
              21.228013939875186`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.55, 0}, {0.6, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{127.41203551076157`, 133.47884189704706`}, {
              21.44762762904138, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.65, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{132.97884189704706`, 139.04564828333255`}, {
              21.667241318207573`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.75, 0}, {0.8, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{149.67926105590357`, 155.74606744218906`}, {
              21.667241318207573`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.85, 1.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{155.24606744218906`, 161.31287382847455`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.95, 0}, {1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{171.94648660104554`, 178.01329298733106`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.41700000000000004`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-2, 5], 
         Rational[9, 20]}, {All, All}}, {{-0.4, 0.45}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.45499999999999996`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.45499999999999996`], Thickness[Small]}], 
        RectangleBox[{-1.45, 0}, {-1.4, 1.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.15, 1.},
         RoundingRadius->0], RectangleBox[{-1.15, 0}, {-1.1, 2.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1.05, 1.},
         RoundingRadius->0], RectangleBox[{-1.05, 0}, {-1., 1.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.95, 4.},
         RoundingRadius->0], RectangleBox[{-0.95, 0}, {-0.9, 2.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 4.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 3.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 6.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 7.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 12.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 19.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 24.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 48.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 75.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 74.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 89.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 89.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 128.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 168.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 245.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 278.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 343.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 377.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 376.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 345.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 335.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 317.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 236.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 130.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 101.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 51.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 34.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 29.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 14.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 11.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 11.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 16.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 3.},
         RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 7.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 2.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 4.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 1.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 2.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 3.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 2.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 1.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.35, 1.},
         RoundingRadius->0], RectangleBox[{1.45, 0}, {1.5, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.883, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-17, 20], 
         Rational[4, 5]}, {All, All}}, {{-0.85, 0.8}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.602], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.602], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-23.29901960784312, -15.691176470588218`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-9.083333333333329, -1.4754901960784252`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{12.240196078431367`, 19.848039215686278`}, {
              16.05669343918261, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{19.348039215686278`, 26.955882352941174`}, {
              16.05669343918261, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.455882352941174`, 34.06372549019607}, {
              15.912841803959392`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 12.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{33.56372549019607, 41.17156862745097}, {
              15.625138533512956`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 12]& ,
           TagBoxNote->"12"],
          StyleBox["12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[12, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 79.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{40.67156862745097, 48.27941176470587}, {
              12.412452013527766`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 79]& ,
           TagBoxNote->"79"],
          StyleBox["79", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[79, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 285.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{47.77941176470587, 55.387254901960766`}, {
              2.5346397282001636`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 285]& ,
           TagBoxNote->"285"],
          StyleBox["285", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[285, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 530.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.887254901960766`, 
              62.49509803921566}, {-9.21324381502927, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 530]& ,
           TagBoxNote->"530"],
          StyleBox["530", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[530, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 1065.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{61.99509803921566, 
              69.60294117647057}, {-34.8667854298364, 16.700545074405824`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1065]& ,
           TagBoxNote->"1065"],
          StyleBox["1065", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1065, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 1057.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{69.10294117647057, 
              76.71078431372547}, {-34.48318106924114, 16.700545074405824`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1057]& ,
           TagBoxNote->"1057"],
          StyleBox["1057", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1057, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 777.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{76.21078431372547, 
              83.81862745098036}, {-21.05702844840751, 16.700545074405827`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 777]& ,
           TagBoxNote->"777"],
          StyleBox["777", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[777, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 158.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.31862745098036, 90.92647058823526}, {
              8.624358952649704, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 158]& ,
           TagBoxNote->"158"],
          StyleBox["158", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[158, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 29.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{90.42647058823526, 98.03431372549016}, {
              14.809979267248059`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 29]& ,
           TagBoxNote->"29"],
          StyleBox["29", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[29, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 11.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{97.53431372549016, 105.14215686274505`}, {
              15.673089078587363`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{104.64215686274505`, 112.24999999999996`}, {
              16.008742894108202`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.74999999999996`, 119.35784313725486`}, {
              15.960792349033799`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{118.85784313725486`, 126.46568627450976`}, {
              15.960792349033799`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{125.96568627450976`, 133.57352941176467`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{133.07352941176467`, 140.68137254901956`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{140.18137254901956`, 147.78921568627447`}, {
              16.104643984257017`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.624, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-3, 5], 
         Rational[3, 5]}, {All, All}}, {{-0.6, 0.6}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.6, 0}, {-1.4, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.45588235294116, 31.69444444444443}, {
              18.670170862552855`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{31.19444444444443, 36.4330065359477}, {
              18.670170862552855`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1., 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.9330065359477, 41.17156862745097}, {
              18.456276284524616`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.8, 29.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{40.67156862745097, 45.91013071895423}, {
              17.17290881635518, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 29]& ,
           TagBoxNote->"29"],
          StyleBox["29", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[29, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.6, 152.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{45.41013071895423, 50.6486928104575}, {
              10.595650541986808`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 152]& ,
           TagBoxNote->"152"],
          StyleBox["152", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[152, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.4, 259.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{50.1486928104575, 55.38725490196076}, {
              4.873970579731397, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 259]& ,
           TagBoxNote->"259"],
          StyleBox["259", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[259, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.2, 452.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.88725490196076, 
              60.12581699346403}, {-5.446442810131167, 19.223644507059916`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 452]& ,
           TagBoxNote->"452"],
          StyleBox["452", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[452, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {0., 877.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{59.62581699346403, 
              64.8643790849673}, {-28.17274172563163, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 877]& ,
           TagBoxNote->"877"],
          StyleBox["877", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[877, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.2, 955.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{64.3643790849673, 
              69.60294117647057}, {-32.343685997182305`, 
              19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 955]& ,
           TagBoxNote->"955"],
          StyleBox["955", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[955, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.4, 656.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{69.10294117647057, 
              74.34150326797383}, {-16.35506628957139, 19.223644507059916`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 656]& ,
           TagBoxNote->"656"],
          StyleBox["656", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[656, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.6, 184.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{73.84150326797383, 79.08006535947709}, {
              8.884493917760892, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 184]& ,
           TagBoxNote->"184"],
          StyleBox["184", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[184, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.8, 44.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{78.58006535947709, 83.81862745098036}, {
              16.37080414874928, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 44]& ,
           TagBoxNote->"44"],
          StyleBox["44", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[44, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {1., 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.31862745098036, 88.55718954248363}, {
              17.921539839454017`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.2, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.05718954248363, 93.2957516339869}, {
              18.509749929031678`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.4, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{92.7957516339869, 98.03431372549016}, {
              18.456276284524616`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.6, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{97.53431372549016, 102.77287581699343`}, {
              18.509749929031678`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.6, 0}, {1.8, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{102.27287581699343`, 107.5114379084967}, {
              18.616697218045797`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.8, 0}, {2., 2.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{107.0114379084967, 112.24999999999997`}, {
              18.616697218045797`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.6720000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1.6, 2.}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.2, 0}, {-2., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.64271417133707, 26.257310195982875`}, {
              18.867915887176146`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.6, 0}, {-1.4, 9.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{33.98650224527448, 38.601098269920286`}, {
              18.1585533606675, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.2, 12.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{38.101098269920286`, 42.71569429456609}, {
              17.89254241322676, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 12]& ,
           TagBoxNote->"12"],
          StyleBox["12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[12, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1., 31.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{42.21569429456609, 46.8302903192119}, {
              16.207806412768726`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 31]& ,
           TagBoxNote->"31"],
          StyleBox["31", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[31, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.8, 99.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{46.3302903192119, 50.944886343857696`}, {
              10.178224937445245`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 99]& ,
           TagBoxNote->"99"],
          StyleBox["99", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[99, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.6, 219.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{50.444886343857696`, 
              55.0594823685035}, {-0.4622129601844307, 19.456586202989726`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 219]& ,
           TagBoxNote->"219"],
          StyleBox["219", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[219, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.4, 349.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.5594823685035, 
              59.1740783931493}, {-11.98935401594991, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 349]& ,
           TagBoxNote->"349"],
          StyleBox["349", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[349, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.2, 466.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{58.6740783931493, 
              63.28867441779511}, {-22.36378096613884, 19.456586202989726`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 466]& ,
           TagBoxNote->"466"],
          StyleBox["466", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[466, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {0., 559.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{62.78867441779511, 
              67.40327044244091}, {-30.61012033680184, 19.456586202989726`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 559]& ,
           TagBoxNote->"559"],
          StyleBox["559", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[559, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.2, 639.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.90327044244091, 
              71.51786646708672}, {-37.703745601888286`, 
              19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 639]& ,
           TagBoxNote->"639"],
          StyleBox["639", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[639, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.4, 548.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.01786646708672, 
              75.63246249173253}, {-29.634746862852452`, 
              19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 548]& ,
           TagBoxNote->"548"],
          StyleBox["548", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[548, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.6, 375.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{75.13246249173253, 
              79.74705851637833}, {-14.294782227103006`, 
              19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 375]& ,
           TagBoxNote->"375"],
          StyleBox["375", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[375, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.8, 191.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{79.24705851637833, 83.86165454102414}, {
              2.020555882595829, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 191]& ,
           TagBoxNote->"191"],
          StyleBox["191", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[191, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {1., 80.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.36165454102414, 87.97625056566993}, {
              11.862960937903276`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 80]& ,
           TagBoxNote->"80"],
          StyleBox["80", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[80, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.2, 40.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{87.47625056566993, 92.09084659031573}, {
              15.4097735704465, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 40]& ,
           TagBoxNote->"40"],
          StyleBox["40", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[40, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.4, 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{91.59084659031573, 96.20544261496154}, {
              17.626531465786016`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.6, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{95.70544261496154, 100.32003863960735`}, {
              18.601904939735405`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.6, 0}, {1.8, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{99.82003863960735, 104.43463466425314`}, {
              18.51323462392182, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.8, 0}, {2., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{103.93463466425314`, 108.54923068889894`}, {
              18.867915887176146`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2.2, 0}, {2.4, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{112.16382671354475`, 116.77842273819056`}, {
              18.779245571362566`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.2920000000000003`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-2.2, 2.4}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.6, 0}, {-2.4, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.63235294117647, 26.224424552429674`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.4, 0}, {-2.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{25.724424552429674`, 30.316496163682864`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.2, 0}, {-2., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{29.816496163682864`, 34.40856777493607}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.8, 0}, {-1.6, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{38.00063938618926, 42.59271099744246}, {
              19.124539917646118`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.6, 0}, {-1.4, 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{42.09271099744246, 46.684782608695656`}, {
              18.202278742559628`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.2, 51.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{46.184782608695656`, 50.77685421994886}, {
              14.882138512248265`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 51]& ,
           TagBoxNote->"51"],
          StyleBox["51", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[51, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1., 85.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{50.27685421994886, 54.86892583120205}, {
              11.746450516954202`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 85]& ,
           TagBoxNote->"85"],
          StyleBox["85", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[85, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.8, 124.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.36892583120205, 58.96099744245525}, {
              8.149631934116892, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 124]& ,
           TagBoxNote->"124"],
          StyleBox["124", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[124, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.6, 184.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{58.46099744245525, 63.05306905370845}, {
              2.6160648835979536`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 184]& ,
           TagBoxNote->"184"],
          StyleBox["184", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[184, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.4, 273.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{62.55306905370845, 
              67.14514066496164}, {-5.592059574671804, 20.085670505189363`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 273]& ,
           TagBoxNote->"273"],
          StyleBox["273", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[273, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.2, 449.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.64514066496164, 
              71.23721227621483}, {-21.82385625619402, 20.085670505189363`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 449]& ,
           TagBoxNote->"449"],
          StyleBox["449", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[449, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {0., 611.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{70.73721227621483, 
              75.32928388746804}, {-36.764487292595156`, 
              20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 611]& ,
           TagBoxNote->"611"],
          StyleBox["611", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[611, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.2, 574.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{74.82928388746804, 
              79.42135549872124}, {-33.352120944775145`, 
              20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 574]& ,
           TagBoxNote->"574"],
          StyleBox["574", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[574, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.4, 520.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{78.92135549872124, 
              83.51342710997443}, {-28.3719105993081, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 520]& ,
           TagBoxNote->"520"],
          StyleBox["520", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[520, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.6, 397.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.01342710997443, 
              87.60549872122763}, {-17.028098145744273`, 
              20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 397]& ,
           TagBoxNote->"397"],
          StyleBox["397", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[397, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.8, 200.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{87.10549872122763, 91.69757033248082}, {
              1.1404470034595704`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 200]& ,
           TagBoxNote->"200"],
          StyleBox["200", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[200, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {1., 76.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{91.19757033248082, 95.78964194373403}, {
              12.576485574532041`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 76]& ,
           TagBoxNote->"76"],
          StyleBox["76", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[76, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.2, 35.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{95.28964194373403, 99.88171355498721}, {
              16.357756392386648`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 35]& ,
           TagBoxNote->"35"],
          StyleBox["35", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[35, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.4, 13.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{99.38171355498721, 103.97378516624042`}, {
              18.386730977576924`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 13]& ,
           TagBoxNote->"13"],
          StyleBox["13", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[13, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.6, 13.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{103.47378516624042`, 108.06585677749362`}, {
              18.386730977576924`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 13]& ,
           TagBoxNote->"13"],
          StyleBox["13", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[13, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.6, 0}, {1.8, 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{107.56585677749362`, 112.15792838874681`}, {
              18.84786156512017, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.8, 0}, {2., 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.65792838874681`, 116.25}, {
              19.03231380013747, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2., 0}, {2.2, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{115.75, 120.3420716112532}, {
              19.401218270172066`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2.6, 0}, {2.8, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{128.0262148337596, 132.61828644501279`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2.8, 0}, {3., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{132.11828644501279`, 136.710358056266}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{4., 0}, {4.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{156.67071611253198`, 161.26278772378518`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.692, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-13, 5], 2}, {All, All}}, {{-2.6, 2}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.7, 0}, {-1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-10.014705882352928`, -5.004901960784309}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{8.024509803921575, 13.034313725490208`}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1.1, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{12.534313725490208`, 17.544117647058826`}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{17.044117647058826`, 22.05392156862746}, {
              18.420171671427592`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.9, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.55392156862746, 26.563725490196084`}, {
              18.158448402172937`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.9, 0}, {-0.8, 9.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.063725490196084`, 31.07352941176471}, {
              17.809484043166734`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{30.57352941176471, 35.58333333333334}, {
              16.76259096614812, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 33.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.08333333333334, 40.09313725490197}, {
              15.715697889129505`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 33]& ,
           TagBoxNote->"33"],
          StyleBox["33", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[33, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 70.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{39.59313725490197, 44.602941176470594`}, {
              12.487777568322112`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 70]& ,
           TagBoxNote->"70"],
          StyleBox["70", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[70, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 139.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{44.102941176470594`, 49.11274509803922}, {
              6.468142375465083, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 139]& ,
           TagBoxNote->"139"],
          StyleBox["139", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[139, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 200.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{48.61274509803922, 53.622549019607845`}, {
              1.1464359006204603`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 200]& ,
           TagBoxNote->"200"],
          StyleBox["200", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[200, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 299.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{53.122549019607845`, 
              58.13235294117648}, {-7.490431984783104, 19.094653850930694`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 299]& ,
           TagBoxNote->"299"],
          StyleBox["299", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[299, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 401.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{57.63235294117648, 
              62.642156862745104`}, {-16.389023139441324`, 
              19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 401]& ,
           TagBoxNote->"401"],
          StyleBox["401", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[401, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 600.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{62.142156862745104`, 
              67.15196078431373}, {-33.75, 19.094653850930698`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 600]& ,
           TagBoxNote->"600"],
          StyleBox["600", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[600, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 619.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.65196078431373, 
              71.66176470588236}, {-35.40758070527947, 19.094653850930698`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 619]& ,
           TagBoxNote->"619"],
          StyleBox["619", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[619, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 533.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.16176470588236, 
              76.17156862745098}, {-27.904846986646074`, 
              19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 533]& ,
           TagBoxNote->"533"],
          StyleBox["533", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[533, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 349.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{75.67156862745098, 
              80.68137254901961}, {-11.852486472360663`, 
              19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 349]& ,
           TagBoxNote->"349"],
          StyleBox["349", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[349, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 159.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{80.18137254901961, 85.19117647058823}, {
              4.723320580434059, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 159]& ,
           TagBoxNote->"159"],
          StyleBox["159", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[159, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 93.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{84.69117647058823, 89.70098039215686}, {
              10.481232504036436`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 93]& ,
           TagBoxNote->"93"],
          StyleBox["93", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[93, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 42.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{89.20098039215686, 94.2107843137255}, {
              14.930528081365544`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 42]& ,
           TagBoxNote->"42"],
          StyleBox["42", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[42, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 27.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{93.7107843137255, 98.72058823529412}, {
              16.239144427638813`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 27]& ,
           TagBoxNote->"27"],
          StyleBox["27", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[27, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 9.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{98.22058823529412, 103.23039215686275`}, {
              17.809484043166734`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 17.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{102.73039215686275`, 107.74019607843138`}, {
              17.111555325154324`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 17]& ,
           TagBoxNote->"17"],
          StyleBox["17", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[17, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{107.24019607843138`, 112.25}, {
              17.896725132918284`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.75, 116.75980392156863`}, {
              18.420171671427592`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.1, 0}, {1.2, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{116.25980392156863`, 121.26960784313725`}, {
              18.24568949192449, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.3, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{120.76960784313725`, 125.77941176470588`}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.5, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{129.7892156862745, 134.79901960784315`}, {
              18.420171671427592`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.04, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1, 1}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.504], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.504], Thickness[Small]}], 
        RectangleBox[{-2.2, 0}, {-2.1, 1.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.7, 1.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.5, 1.},
         RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1.4, 2.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.2, 1.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.1, 3.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1., 6.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.9, 12.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.8, 29.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.7, 46.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.6, 84.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 139.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.4, 156.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.3, 196.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.2, 242.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.1, 321.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 425.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 399.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 386.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 368.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 266.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 144.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 57.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 35.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 17.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 13.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 11.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 7.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 6.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 1.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 3.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 2.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 2.},
         RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 1.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 1.},
         RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.352, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-13, 10], 
         Rational[13, 10]}, {All, All}}, {{-1.3, 1.3}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44099999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44099999999999995`], Thickness[Small]}], 
        RectangleBox[{-2.1, 0}, {-2., 1.},
         RoundingRadius->0], RectangleBox[{-1.9, 0}, {-1.8, 1.},
         RoundingRadius->0], RectangleBox[{-1.7, 0}, {-1.6, 1.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.5, 1.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.3, 4.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.2, 3.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.1, 4.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1., 14.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.9, 25.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.8, 46.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.7, 83.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.6, 109.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 125.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.4, 147.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.3, 165.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.2, 247.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.1, 289.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 384.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 375.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 343.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 327.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 277.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 182.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 86.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 46.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 30.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 21.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 12.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 11.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 9.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 4.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 2.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 2.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 3.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 3.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 1.},
         RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 1.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 1.},
         RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.17, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-21, 10], 
         Rational[7, 5]}, {All, All}}, {{-2.1, 1.4}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], 
        RectangleBox[{-1.95, 0}, {-1.9, 1.},
         RoundingRadius->0], RectangleBox[{-1.85, 0}, {-1.8, 1.},
         RoundingRadius->0], RectangleBox[{-1.75, 0}, {-1.7, 1.},
         RoundingRadius->0], RectangleBox[{-1.35, 0}, {-1.3, 1.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.25, 1.},
         RoundingRadius->0], RectangleBox[{-1.15, 0}, {-1.1, 1.},
         RoundingRadius->0], RectangleBox[{-1.05, 0}, {-1., 1.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.95, 1.},
         RoundingRadius->0], RectangleBox[{-0.95, 0}, {-0.9, 4.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 4.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 6.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 9.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 4.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 8.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 19.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 29.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 30.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 34.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 46.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 84.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 116.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 106.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 153.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 196.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 224.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 269.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 297.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 310.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 344.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 284.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 253.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 175.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 101.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 78.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 43.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 27.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 25.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 19.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 21.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 13.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 10.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 5.},
         RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 5.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 3.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 4.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 4.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 2.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 3.},
         RoundingRadius->0], RectangleBox[{1.05, 0}, {1.1, 3.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.15, 1.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 1.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 2.},
         RoundingRadius->0], RectangleBox[{1.35, 0}, {1.4, 1.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.45, 1.},
         RoundingRadius->0], RectangleBox[{1.45, 0}, {1.5, 1.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.55, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.884, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-17, 20], 
         Rational[17, 20]}, {All, All}}, {{-0.85, 0.85}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.1, 0}, {-2., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-28.053921568627445`, -23.044117647058812`}, {
              20.120823987220888`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.3, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{3.5147058823529562`, 8.524509803921575}, {
              20.214253458771424`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{8.024509803921575, 13.034313725490208`}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1.1, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{12.534313725490208`, 17.544117647058826`}, {
              20.120823987220888`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{17.044117647058826`, 22.05392156862746}, {
              20.214253458771424`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.9, 11.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.55392156862746, 26.563725490196084`}, {
              19.279958743266057`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.9, 0}, {-0.8, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.063725490196084`, 31.07352941176471}, {
              18.34566402776069, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{30.57352941176471, 35.58333333333334}, {
              18.34566402776069, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 41.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.08333333333334, 40.09313725490197}, {
              16.477074596749958`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 61.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{39.59313725490197, 44.602941176470594`}, {
              14.608485165739227`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 61]& ,
           TagBoxNote->"61"],
          StyleBox["61", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[61, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 90.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{44.102941176470594`, 49.11274509803922}, {
              11.899030490773665`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 90]& ,
           TagBoxNote->"90"],
          StyleBox["90", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[90, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 181.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{48.61274509803922, 53.622549019607845`}, {
              3.3969485796748344`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 181]& ,
           TagBoxNote->"181"],
          StyleBox["181", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[181, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 290.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{53.122549019607845`, 
              58.13235294117648}, {-6.786863819333654, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 290]& ,
           TagBoxNote->"290"],
          StyleBox["290", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[290, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 392.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{57.63235294117648, 
              62.642156862745104`}, {-16.31666991748839, 20.80768293032196}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 392]& ,
           TagBoxNote->"392"],
          StyleBox["392", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[392, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 515.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{62.142156862745104`, 
              67.15196078431373}, {-27.80849491820439, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 515]& ,
           TagBoxNote->"515"],
          StyleBox["515", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[515, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 578.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.65196078431373, 
              71.66176470588236}, {-33.694551625888195`, 20.80768293032196}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 578]& ,
           TagBoxNote->"578"],
          StyleBox["578", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[578, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 510.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.16176470588236, 
              76.17156862745098}, {-27.34134756045171, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 510]& ,
           TagBoxNote->"510"],
          StyleBox["510", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[510, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 306.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{75.67156862745098, 
              80.68137254901961}, {-8.28173536414224, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 306]& ,
           TagBoxNote->"306"],
          StyleBox["306", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[306, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 154.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{80.18137254901961, 85.19117647058823}, {
              5.9195443115393225`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 154]& ,
           TagBoxNote->"154"],
          StyleBox["154", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[154, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 78.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{84.69117647058823, 89.70098039215686}, {
              13.020184149380105`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 78]& ,
           TagBoxNote->"78"],
          StyleBox["78", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[78, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 43.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{89.20098039215686, 94.2107843137255}, {
              16.290215653648886`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 43]& ,
           TagBoxNote->"43"],
          StyleBox["43", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[43, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 25.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{93.7107843137255, 98.72058823529412}, {
              17.971946141558544`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 25]& ,
           TagBoxNote->"25"],
          StyleBox["25", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[25, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 24.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{98.22058823529412, 103.23039215686275`}, {
              18.065375613109083`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 24]& ,
           TagBoxNote->"24"],
          StyleBox["24", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[24, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{102.73039215686275`, 107.74019607843138`}, {
              19.560247157917665`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 10.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{107.24019607843138`, 112.25}, {
              19.373388214816593`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 10]& ,
           TagBoxNote->"10"],
          StyleBox["10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[10, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.75, 116.75980392156863`}, {
              19.74710610101874, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.1, 0}, {1.2, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{116.25980392156863`, 121.26960784313725`}, {
              20.120823987220888`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.3, 3.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{120.76960784313725`, 125.77941176470588`}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.3, 0}, {1.4, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{125.27941176470588`, 130.2892156862745}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.5, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{129.7892156862745, 134.79901960784315`}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.5, 0}, {1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{134.29901960784315`, 139.30882352941177`}, {
              20.214253458771424`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.04, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1, 1}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[112]=",
 CellID->2106720944]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->528878766],

Cell["\<\
As with the transcriptome, we notice that the sample numberings do not \
correspond to actual days, so we may adjust using the sampleToDays \
association created before and reproduced here for reference:\
\>", "MathCaption",
 CellID->1740422649],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[113]:=",
 CellID->750369086],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1712427223],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "transformedProteinData"}], "]"}]}]], "Input",\

 CellLabel->"In[114]:=",
 CellID->188499867],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[114], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[114]=",
 CellID->2096017719]
}, Open  ]],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->292613774],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinRawData", "=", 
  RowBox[{"TimeExtractor", "[", "proteinLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[115]:=",
 CellID->222147988],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380", ",", 
   "400"}], "}"}]], "Output",
 CellLabel->"Out[115]=",
 CellID->448057845]
}, Open  ]],

Cell["\<\
We notice a small complication: there are two timepoints missing, compared to \
the transcriptome: (i) the reference time point \"255\" does not appear \
explicitly in our computation (corresponding to a zero value about which \
other timepoints are computed for proteins with at least 2 unique peptides). \
(ii) there is no sample for day \"329\". \
\>", "Text",
 CellID->1796883614],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantAssociator"]], 
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed data. Timepoints \"255\" (zero \
measurement assumed to have at least 2 unique peptides available per protein) \
and \"329\", assumed to be Missing data:"
}], "MathCaption",
 CellID->306227952],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinLongitudinalEnlarged", "=", 
  RowBox[{"ConstantAssociator", "[", 
   RowBox[{"proteinLongitudinal", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<255\>\"", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
      RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}]], "Input",
 CellLabel->"In[116]:=",
 CellID->1402371052],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[116], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[116]=",
 CellID->1430534533]
}, Open  ]],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->136402831],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProtein", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinLongitudinalEnlarged", "]"}]}]], "Input",
 CellLabel->"In[117]:=",
 CellID->1157329268],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[117]=",
 CellID->1914467966]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Unique Peptides", "Subsubsubsection",
 CellID->1560572010],

Cell[TextData[{
 "Typically, proteomics data from mass spectrometry is filtered to retain \
only identifications of proteins that are supported by at least 2 unique \
peptides having been identified per protein. We can use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilteringFunction"]], 
    "paclet:MathIOmica/ref/FilteringFunction"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement the filtering:"
}], "Text",
 CellID->1315991259],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["FilteringFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilteringFunction"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["cutoff", "TI"]}], "]"}], Cell[TextData[{
     "filters OmicsObject data by a chosen comparison (by default greatr or \
equal) to a ",
     Cell[BoxData[
      StyleBox["cutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->391089394],

Cell["\<\
FilteringFunction can be used to filter data in an OmicsObject.\
\>", "Caption",
 CellID->1739485138],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which component of a list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["SelectionFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/SelectionFunction"], 
    ButtonBox["GreaterEqual",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqual"], Cell[
    "Selection of comparison to use for filtering.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2083543412],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilteringFunction"]], 
    "paclet:MathIOmica/ref/FilteringFunction"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1245777502],

Cell[TextData[{
 "We filter out proteomics data with less than 2 unique peptides per protein. \
The unique peptides is reported as the second list, first component in the ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " values in this case:"
}], "MathCaption",
 CellID->178778395],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinUnique", "=", 
  RowBox[{"FilteringFunction", "[", 
   RowBox[{"proteinLongitudinalEnlarged", ",", "2", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "2"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[118]:=",
 CellID->398862612],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y616\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[118], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[118]=",
 CellID->715621561]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1066609228],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1455293487],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredProteinData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"proteinUnique", ",", 
    RowBox[{"3", "/", "4"}]}], "]"}]}]], "Input",
 CellLabel->"In[119]:=",
 CellID->1426380326],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.588], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.588], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 2475.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{28.785228182546035`, 
           43.69675740592474}, {-50.75544747610698, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2475]& ,
        TagBoxNote->"2475"],
       StyleBox["2475", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2475, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.5, 0}, {5.5, 443.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{86.43134507606085, 101.34287429943956`}, {
           48.42148648390962, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 443]& ,
        TagBoxNote->"443"],
       StyleBox["443", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[443, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.5, 0}, {6.5, 143.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{100.84287429943956`, 115.75440352281827`}, {
           63.06375035595931, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 143]& ,
        TagBoxNote->"143"],
       StyleBox["143", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[143, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.5, 0}, {9.5, 499.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{144.07746196957567`, 158.9889911929544}, {
           45.68826389446034, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 499]& ,
        TagBoxNote->"499"],
       StyleBox["499", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[499, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9.5, 0}, {10.5, 345.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{158.4889911929544, 173.40052041633308`}, {
           53.204626015445854`, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 345]& ,
        TagBoxNote->"345"],
       StyleBox["345", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[345, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{13.5, 0}, {14.5, 1320.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{216.1351080864692, 231.04663730984788`}, {
           5.617268431284344, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1320]& ,
        TagBoxNote->"1320"],
       StyleBox["1320", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1320, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{0.21999999999999997`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{0.5, 14.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[119]:=",
 CellID->1543152527],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "2475"}], ",", 
     RowBox[{"5", "\[Rule]", "443"}], ",", 
     RowBox[{"6", "\[Rule]", "143"}], ",", 
     RowBox[{"9", "\[Rule]", "499"}], ",", 
     RowBox[{"10", "\[Rule]", "345"}], ",", 
     RowBox[{"14", "\[Rule]", "1320"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[119]:=",
 CellID->604516470],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$165560$165694 = False, 
       DynamicChart`click$165566$165694 = False, 
       DynamicChart`click$165572$165694 = False, 
       DynamicChart`click$165578$165694 = False, 
       DynamicChart`click$165584$165694 = False, 
       DynamicChart`click$165590$165694 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.16534698176788387`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 2475]& , TagBoxNote -> "2475"], 
                    StyleBox["2475", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[2475, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165560$165694, 
                    FEPrivate`Not[DynamicChart`click$165560$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165560$165694, {{{1., 0.}, {0., 
                    1.}}, {-0.016515869094466458`, 0.19931689860133397`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165560$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.9965728, 0.58382944, 0.22525344]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.36737093040064384`, 
                    0.16534698176788387`}]}], "DelayedMouseEffectStyle"], {}},
                     StatusArea[#, 443]& , TagBoxNote -> "443"], 
                    StyleBox["443", {}, StripOnInput -> False]], Annotation[#, 
                    Style[443, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165566$165694, 
                    FEPrivate`Not[DynamicChart`click$165566$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165566$165694, {{{1., 0.}, {0., 1.}}, {
                    0.19898052539076774`, -0.020168056803123918`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165566$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8704000000000001, 0.50272, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.5393317914392433, -0.36737093040064384`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 143]& , 
                    TagBoxNote -> "143"], 
                    StyleBox["143", {}, StripOnInput -> False]], Annotation[#, 
                    Style[143, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165572$165694, 
                    FEPrivate`Not[DynamicChart`click$165572$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165572$165694, {{{1., 0.}, {0., 1.}}, {
                    0.17979686437075768`, -0.08759616180200691}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165572$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.1393910198186905`, -0.5393317914392433}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 499]& , 
                    TagBoxNote -> "499"], 
                    StyleBox["499", {}, StripOnInput -> False]], Annotation[#, 
                    Style[499, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165578$165694, 
                    FEPrivate`Not[DynamicChart`click$165578$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165578$165694, {{{1., 0.}, {0., 1.}}, {
                    0.13358764292344796`, -0.14884334603252297`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165578$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.5542616286181081`, -1.1393910198186905`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 345]& , 
                    TagBoxNote -> "345"], 
                    StyleBox["345", {}, StripOnInput -> False]], Annotation[#, 
                    Style[345, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165584$165694, 
                    FEPrivate`Not[DynamicChart`click$165584$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165584$165694, {{{1., 0.}, {0., 1.}}, {
                    0.04442044170887618, -0.19500467778591452`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165584$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.5542616286181081`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 1320]& , 
                    TagBoxNote -> "1320"], 
                    StyleBox["1320", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[1320, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165590$165694, 
                    FEPrivate`Not[DynamicChart`click$165590$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165590$165694, {{{1., 0.}, {0., 
                    1.}}, {-0.1402473568544977, -0.14258568965827945`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165590$165694}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["2475", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.055052896981554855`, 
                    0.6643896620044465}]}}}, StatusArea[#, 2475]& , 
                 TagBoxNote -> "2475"], 
                StyleBox["2475", {}, StripOnInput -> False]], Annotation[#, 
                Style[2475, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165560$165694, 
                  FEPrivate`Not[DynamicChart`click$165560$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165560$165694, {{{1., 0.}, {0., 
                1.}}, {-0.016515869094466458`, 0.19931689860133397`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165560$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["443", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.6632684179692258, -0.06722685601041306}]}}}, 
                 StatusArea[#, 443]& , TagBoxNote -> "443"], 
                StyleBox["443", {}, StripOnInput -> False]], Annotation[#, 
                Style[443, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165566$165694, 
                  FEPrivate`Not[DynamicChart`click$165566$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165566$165694, {{{1., 0.}, {0., 1.}}, {
                0.19898052539076774`, -0.020168056803123918`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165566$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["143", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.5993228812358589, -0.29198720600668965`}]}}}, 
                 StatusArea[#, 143]& , TagBoxNote -> "143"], 
                StyleBox["143", {}, StripOnInput -> False]], Annotation[#, 
                Style[143, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165572$165694, 
                  FEPrivate`Not[DynamicChart`click$165572$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165572$165694, {{{1., 0.}, {0., 1.}}, {
                0.17979686437075768`, -0.08759616180200691}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165572$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["499", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.44529214307815984`, -0.4961444867750765}]}}}, 
                 StatusArea[#, 499]& , TagBoxNote -> "499"], 
                StyleBox["499", {}, StripOnInput -> False]], Annotation[#, 
                Style[499, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165578$165694, 
                  FEPrivate`Not[DynamicChart`click$165578$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165578$165694, {{{1., 0.}, {0., 1.}}, {
                0.13358764292344796`, -0.14884334603252297`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165578$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["345", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.14806813902958724`, -0.650015592619715}]}}}, 
                 StatusArea[#, 345]& , TagBoxNote -> "345"], 
                StyleBox["345", {}, StripOnInput -> False]], Annotation[#, 
                Style[345, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165584$165694, 
                  FEPrivate`Not[DynamicChart`click$165584$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165584$165694, {{{1., 0.}, {0., 1.}}, {
                0.04442044170887618, -0.19500467778591452`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165584$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["1320", {}, StripOnInput -> False], 
                    
                    TraditionalForm], {-0.4674911895149923, \
-0.4752856321942648}]}}}, StatusArea[#, 1320]& , TagBoxNote -> "1320"], 
                StyleBox["1320", {}, StripOnInput -> False]], Annotation[#, 
                Style[1320, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165590$165694, 
                  FEPrivate`Not[DynamicChart`click$165590$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165590$165694, {{{1., 0.}, {0., 
                1.}}, {-0.1402473568544977, -0.14258568965827945`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165590$165694}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}], 
   FormBox[
    FormBox[
     TemplateBox[{"1", "5", "6", "9", "10", "14"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9965728, 0.58382944, 0.22525344], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6643818666666668, 0.3892196266666667, 
                    0.15016896000000002`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9965728`", ",", "0.58382944`", ",", "0.22525344`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8704000000000001, 0.50272, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5802666666666667, 0.33514666666666665`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8704000000000001`", ",", "0.50272`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.49372288, 0.31936, 0.27266112000000015`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.74058432`", ",", "0.47903999999999997`", ",", 
                    "0.4089916800000002`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.42680576000000003`, 0.3325866666666667, 0.49611296], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.64020864`", ",", "0.49888000000000005`", ",", 
                    "0.74416944`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[119]:=",
 CellID->363177333]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"2471"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6W5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.05149461539056731`"}], "}"}], ",", 
                 RowBox[{"{", "14.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.026397012306561926`"}], "}"}], ",", 
                 RowBox[{"{", "10.`", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[119], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[119]=",
 CellID->772910957]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Proteome Time Series", "Subsubsection",
 CellID->1796762249],

Cell["We can now create time series for each of the proteins. ", "Text",
 CellID->1723717413],

Cell["\<\
For each protein we now extract a time series (list of values) corresponding \
to these times:\
\>", "MathCaption",
 CellID->141883528],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesProtein", "=", 
  RowBox[{"CreateTimeSeries", "[", "filteredProteinData", "]"}]}]], "Input",
 CellLabel->"In[120]:=",
 CellID->929606926],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.06539623262957527`"}], ",", "0", ",", 
              "0.002994714615415848`", ",", 
              RowBox[{"-", "0.03484490076135003`"}], ",", 
              RowBox[{"-", "0.01821227311815761`"}], ",", 
              "0.06270726568914738`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.08295938346569019`", ",", 
              "0.06898558805479732`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.050132042020201786`"}], ",", 
              RowBox[{"-", "0.13767416728731544`"}], ",", 
              RowBox[{"-", "0.012088757412992066`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[120], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[120]=",
 CellID->185873596]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Proteome Time Series", "Subsubsection",
 CellID->1908271188],

Cell[TextData[{
 "Next, we normalize each protein series, using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1758442397],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedProteinAll", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "timeSeriesProtein"}], "]"}]}]], "Input",
 CellLabel->"In[121]:=",
 CellID->471416365],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.20512151369766354`"}], ",", "0.`", ",", 
              "0.009393207686535883`", ",", 
              RowBox[{"-", "0.1092943507816164`"}], ",", 
              RowBox[{"-", "0.05712452965038666`"}], ",", 
              "0.19668731272116724`", ",", "0.5296378663769438`", ",", 
              "0.07400932770616492`", ",", 
              RowBox[{"-", "0.539240654836878`"}], ",", "0.2602100094709663`",
               ",", "0.21637986893336714`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.15724392568889564`"}], ",", 
              RowBox[{"-", "0.4318281414007336`"}], ",", 
              RowBox[{"-", "0.03791753927664883`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.05027722328878657`"}], ",", "0.`", ",", 
              "0.09612084857400716`", ",", "0.08485184825964483`", ",", 
              "0.2073722042772388`", ",", "0.18814267853211547`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.13483525476760364`", ",", 
              
              RowBox[{"-", "0.13334802450732536`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.18513498512557355`"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3695191728536936`"}]}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 16201641659859159471, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 16201641659859159471, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[121], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[121]=",
 CellID->1536305234]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->2143452651],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinFinalTimeSeries", "=", 
  RowBox[{"ConstantSeriesClean", "[", "normedProteinAll", "]"}]}]], "Input",
 CellLabel->"In[122]:=",
 CellID->970526932],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.20512151369766354`"}], ",", "0.`", ",", 
              "0.009393207686535883`", ",", 
              RowBox[{"-", "0.1092943507816164`"}], ",", 
              RowBox[{"-", "0.05712452965038666`"}], ",", 
              "0.19668731272116724`", ",", "0.5296378663769438`", ",", 
              "0.07400932770616492`", ",", 
              RowBox[{"-", "0.539240654836878`"}], ",", "0.2602100094709663`",
               ",", "0.21637986893336714`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.15724392568889564`"}], ",", 
              RowBox[{"-", "0.4318281414007336`"}], ",", 
              RowBox[{"-", "0.03791753927664883`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.05027722328878657`"}], ",", "0.`", ",", 
              "0.09612084857400716`", ",", "0.08485184825964483`", ",", 
              "0.2073722042772388`", ",", "0.18814267853211547`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.13483525476760364`", ",", 
              
              RowBox[{"-", "0.13334802450732536`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.18513498512557355`"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3695191728536936`"}]}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 16201641659859159471, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 16201641659859159471, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[122], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[122]=",
 CellID->1486179957]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Proteome Data", "Subsection",
 CellID->1059869896],

Cell["\<\
In addition to the above, we want to create a resampled distribution for the \
proteome dataset prior to classification and clustering. In this subsection \
we first resample the imported and labeled proteome dataset, Then, we carry \
out the full analysis in this \"bootstrap\" dataset, to create a set of \
random proteome time series. This bootstrap distribution of time series will \
be used to provide the cutoffs used in the time series classification in the \
following subsection.\
\>", "Text",
 CellID->214174283],

Cell[CellGroupData[{

Cell["Resampling the Proteome Data", "Subsubsection",
 CellID->444582009],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->168882663],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"proteinExample", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[123]:=",
 CellID->1585019354],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.061`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.053`", "}"}], ",", 
                 RowBox[{"{", "10", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.13`", "}"}], ",", 
                 RowBox[{"{", "8", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"6", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.888`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
              RowBox[{"7", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99987"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99995", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.027`", "}"}], ",", 
                 RowBox[{"{", "15", "}"}]}], "}"}]}], ",", 
              RowBox[{"99996", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.926`", "}"}], ",", 
                 RowBox[{"{", "6", "}"}]}], "}"}]}], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.993`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.325`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 123, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 123, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 123, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[123], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[123]=",
 CellID->844239042]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Proteome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->1807183132],

Cell[TextData[{
 "We apply a Box-Cox transformation to the bootstrap set proteomics data \
measurement in the OmicsObject, which is in the first list first component \
for each identifier. The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1847604807],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedProteinBootstrapData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"proteinBootstrap", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[124]:=",
 CellID->80455629],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.15017066817014188`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.15017066817014188`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->534263066],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2228174692911122`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2228174692911122],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->2122200127],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.3687984643437591`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.3687984643437591],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->840909824],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2879300846458019`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2879300846458019],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->53150085],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4791399700665757`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4791399700665757],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1067283359],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3408826705882606`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3408826705882606],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1639847900],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.36683619844100357`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.36683619844100357`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->961166574],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.06735147105718207`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.06735147105718207],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1489251853],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.13961988867477013`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.13961988867477013`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1713518480],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.15632482895988384`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.15632482895988384`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->499513137],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.1004790270547353`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.1004790270547353],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->406807222],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.1867068807032459`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.1867068807032459],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->690439218],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.21520312209478668`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.21520312209478668`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->820946473]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.05894938566154792`", "}"}], ",", 
                 RowBox[{"{", "1.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.05144349547436535`", "}"}], ",", 
                 RowBox[{"{", "10.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.12110290200091585`", "}"}], ",", 
                 RowBox[{"{", "8.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99991"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.0070283213420885195`"}], "}"}], ",", 
                 RowBox[{"{", "1.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.27554911350071687`", "}"}], ",", 
                 RowBox[{"{", "1.`", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 124, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 124, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 124, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[124], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[124]=",
 CellID->2128264267]
}, Open  ]],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys to actual days:"
}], "MathCaption",
 CellID->1446718475],

Cell[BoxData[
 RowBox[{
  RowBox[{"proteinBootstrapLongitudinal", "=", 
   RowBox[{"KeyMap", "[", 
    RowBox[{"sampleToDays", ",", "transformedProteinBootstrapData"}], "]"}]}],
   ";"}]], "Input",
 CellLabel->"In[125]:=",
 CellID->1187557991],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->918869862],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinBootstrapData", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinBootstrapLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[126]:=",
 CellID->890865057],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380", ",", 
   "400"}], "}"}]], "Output",
 CellLabel->"Out[126]=",
 CellID->1249911037]
}, Open  ]],

Cell[TextData[{
 "As with the regular protein data above use the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantAssociator"]], 
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed bootstrap data. Timepoints \
\"255\" (zero measurement assumed to have at least 2 unique peptides \
available per protein) and \"329\", assumed to be Missing data:"
}], "MathCaption",
 CellID->916506595],

Cell[BoxData[
 RowBox[{
  RowBox[{"proteinBootstrapLongitudinalEnlarged", "=", 
   RowBox[{"ConstantAssociator", "[", 
    RowBox[{"proteinBootstrapLongitudinal", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<255\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
       RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[127]:=",
 CellID->1973625881],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->19000568],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinBootstrap", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinBootstrapLongitudinalEnlarged", 
   "]"}]}]], "Input",
 CellLabel->"In[128]:=",
 CellID->1514966620],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[128]=",
 CellID->569763905]
}, Open  ]],

Cell[TextData[{
 "We filter out proteomics bootstrap data with less than 2 unique peptides \
per protein. The unique peptides is reported as the second list, first \
component in the ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " values in this case:"
}], "MathCaption",
 CellID->1183809265],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrapUnique", "=", 
  RowBox[{"FilteringFunction", "[", 
   RowBox[{"proteinBootstrapLongitudinalEnlarged", ",", "2", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "2"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[129]:=",
 CellID->1993811047],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.05144349547436535`", "}"}], ",", 
                 RowBox[{"{", "10.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.12110290200091585`", "}"}], ",", 
                 RowBox[{"{", "8.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"8", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07468549415355666`", "}"}], ",", 
                 RowBox[{"{", "4.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"9", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.150168186299147`"}], "}"}], ",", 
                 RowBox[{"{", "14.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99992"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"88851", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"47564", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"39785", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"81335", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"2", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99998"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"81335", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[129], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[129]=",
 CellID->1808037231]
}, Open  ]],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
bootstrap samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1212150445],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredProteinBootstrapData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"proteinBootstrapUnique", ",", 
    RowBox[{"3", "/", "4"}]}], "]"}]}]], "Input",
 CellLabel->"In[130]:=",
 CellID->1582653673],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.595], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.595], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 142.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{35.65072057646117, 51.15349202438874}, {
           67.05973819184112, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 142]& ,
        TagBoxNote->"142"],
       StyleBox["142", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.5, 0}, {2.5, 1220.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{50.65349202438874, 66.15626347231631}, {
           61.43907938575053, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1220]& ,
        TagBoxNote->"1220"],
       StyleBox["1220", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1220, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.5, 0}, {3.5, 5012.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{65.65626347231631, 81.1590349202439}, {
           41.66770814948383, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5012]& ,
        TagBoxNote->"5012"],
       StyleBox["5012", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5012, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.5, 0}, {4.5, 11693.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{80.6590349202439, 96.16180636817145}, {
           6.833179871662658, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11693]& ,
        TagBoxNote->"11693"],
       StyleBox["11693", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11693, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.5, 0}, {5.5, 18728.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{95.66180636817145, 
           111.16457781609904`}, {-29.8470935057467, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 18728]& ,
        TagBoxNote->"18728"],
       StyleBox["18728", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18728, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.5, 0}, {6.5, 22396.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{110.66457781609904`, 
           126.1673492640266}, {-48.97193256023675, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 22396]& ,
        TagBoxNote->"22396"],
       StyleBox["22396", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[22396, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.5, 0}, {7.5, 19536.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{125.6673492640266, 
           141.17012071195418`}, {-34.05998062571069, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 19536]& ,
        TagBoxNote->"19536"],
       StyleBox["19536", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[19536, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.5, 0}, {8.5, 12532.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{140.67012071195418`, 156.17289215988177`}, {
           2.458659706254494, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 12532]& ,
        TagBoxNote->"12532"],
       StyleBox["12532", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12532, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.5, 0}, {9.5, 5943.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{155.67289215988177`, 171.17566360780933`}, {
           36.81350281695104, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5943]& ,
        TagBoxNote->"5943"],
       StyleBox["5943", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5943, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9.5, 0}, {10.5, 2117.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{170.67566360780933`, 186.1784350557369}, {
           56.76214900628554, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2117]& ,
        TagBoxNote->"2117"],
       StyleBox["2117", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2117, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10.5, 0}, {11.5, 573.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{185.6784350557369, 201.18120650366447`}, {
           64.81251746324646, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 573]& ,
        TagBoxNote->"573"],
       StyleBox["573", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[573, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{11.5, 0}, {12.5, 96.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{200.68120650366447`, 216.18397795159206`}, {
           67.29958077540343, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 96]& ,
        TagBoxNote->"96"],
       StyleBox["96", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[96, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{12.5, 0}, {13.5, 12.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{215.68397795159206`, 231.18674939951964`}, {
           67.73755418886503, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 12]& ,
        TagBoxNote->"12"],
       StyleBox["12", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{0.24, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{0.5, 13.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[130]:=",
 CellID->1368119989],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "142"}], ",", 
     RowBox[{"2", "\[Rule]", "1220"}], ",", 
     RowBox[{"3", "\[Rule]", "5012"}], ",", 
     RowBox[{"4", "\[Rule]", "11693"}], ",", 
     RowBox[{"5", "\[Rule]", "18728"}], ",", 
     RowBox[{"6", "\[Rule]", "22396"}], ",", 
     RowBox[{"7", "\[Rule]", "19536"}], ",", 
     RowBox[{"8", "\[Rule]", "12532"}], ",", 
     RowBox[{"9", "\[Rule]", "5943"}], ",", 
     RowBox[{"10", "\[Rule]", "2117"}], ",", 
     RowBox[{"11", "\[Rule]", "573"}], ",", 
     RowBox[{"12", "\[Rule]", "96"}], ",", 
     RowBox[{"13", "\[Rule]", "12"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[130]:=",
 CellID->885246694],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$168596$168835 = False, 
       DynamicChart`click$168602$168835 = False, 
       DynamicChart`click$168608$168835 = False, 
       DynamicChart`click$168614$168835 = False, 
       DynamicChart`click$168620$168835 = False, 
       DynamicChart`click$168626$168835 = False, 
       DynamicChart`click$168632$168835 = False, 
       DynamicChart`click$168638$168835 = False, 
       DynamicChart`click$168644$168835 = False, 
       DynamicChart`click$168650$168835 = False, 
       DynamicChart`click$168656$168835 = False, 
       DynamicChart`click$168662$168835 = False, 
       DynamicChart`click$168668$168835 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.132670530453598, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 142]& , TagBoxNote -> "142"], 
                    StyleBox["142", {}, StripOnInput -> False]], Annotation[#, 
                    Style[142, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168596$168835, 
                    FEPrivate`Not[DynamicChart`click$168596$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168596$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.199998009896269, 0.0008922093542924382}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168596$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.988576, 0.6767648, 0.2841781333333333]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.056015669706007, 
                    3.132670530453598}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 1220]& , TagBoxNote -> "1220"], 
                    StyleBox["1220", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[1220, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168602$168835, 
                    FEPrivate`Not[DynamicChart`click$168602$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168602$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19977678950077757`, 0.009446394908218388}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168602$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.994288, 0.6103824, 0.24208906666666669`]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.741102422110166, 
                    3.056015669706007}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 5012]& , TagBoxNote -> "5012"], 
                    StyleBox["5012", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[5012, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168608$168835, 
                    FEPrivate`Not[DynamicChart`click$168608$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168608$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19412248198905793`, 0.04812963729769719}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168608$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.006409564141657, 
                    2.741102422110166}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 11693]& , TagBoxNote -> "11693"], 
                    StyleBox["11693", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[11693, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168614$168835, 
                    FEPrivate`Not[DynamicChart`click$168614$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168614$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.14388299307930927`, 0.13891610526695403`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168614$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.928, 0.5210666666666667, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.8296946198130639, 
                    2.006409564141657}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 18728]& , TagBoxNote -> "18728"], 
                    StyleBox["18728", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[18728, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168620$168835, 
                    FEPrivate`Not[DynamicChart`click$168620$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168620$168835, {{{1., 0.}, {0., 1.}}, {
                    0.03043019727813825, 0.19767145239921113`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168620$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.5774875615828763, 
                    0.8296946198130639}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 22396]& , TagBoxNote -> "22396"], 
                    StyleBox["22396", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[22396, {}], "Tooltip"]& ], 
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168626$168835, 
                    FEPrivate`Not[DynamicChart`click$168626$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168626$168835, {{{1., 0.}, {0., 1.}}, {
                    0.19841189618432042`, 0.02515391525274853}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168626$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8049706431934798`, -0.5774875615828763}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 19536]& , 
                    TagBoxNote -> "19536"], 
                    StyleBox["19536", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[19536, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168632$168835, 
                    FEPrivate`Not[DynamicChart`click$168632$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168632$168835, {{{1., 0.}, {0., 1.}}, {
                    0.07410370626023725, -0.1857650147861445}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168632$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.5923794258892263`, -1.8049706431934798`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 12532]& , 
                    TagBoxNote -> "12532"], 
                    StyleBox["12532", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[12532, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168638$168835, 
                    FEPrivate`Not[DynamicChart`click$168638$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168638$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.11748587423872935`, -0.1618550875146082}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168638$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.965789128694909, -2.5923794258892263`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 5943]& , 
                    TagBoxNote -> "5943"], 
                    StyleBox["5943", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[5943, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168644$168835, 
                    FEPrivate`Not[DynamicChart`click$168644$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168644$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.18700204879205642`, -0.0709241407954538}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168644$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.0988041616479007`, -2.965789128694909}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 2117]& , 
                    TagBoxNote -> "2117"], 
                    StyleBox["2117", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[2117, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168650$168835, 
                    FEPrivate`Not[DynamicChart`click$168650$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168650$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19880662692911488`, -0.021815707393246214`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168650$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6167072, 0.5082666666666666, 0.7586295999999999]], 
               
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.134806813458039, -3.0988041616479007`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 573]& , 
                    TagBoxNote -> "573"], 
                    StyleBox["573", {}, StripOnInput -> False]], Annotation[#, 
                    Style[573, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168656$168835, 
                    FEPrivate`Not[DynamicChart`click$168656$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168656$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19993856278568675`, -0.004956925578824368}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168656$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.5579536, 0.5317333333333334, 0.7947799999999999]], 
               
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.140838671352932, -3.134806813458039}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 96]& , 
                    TagBoxNote -> "96"], 
                    StyleBox["96", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[96, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168662$168835, 
                    FEPrivate`Not[DynamicChart`click$168662$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168662$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19999857877864946`, -0.0007539804509012958}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168662$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.140838671352932}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 12]& , 
                    TagBoxNote -> "12"], 
                    StyleBox["12", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[12, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168668$168835, 
                    FEPrivate`Not[DynamicChart`click$168668$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168668$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19999998578776984`, -0.00007539822190018135}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168668$168835}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["142", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666600329875633, 
                    0.0029740311809747936`}]}}}, StatusArea[#, 142]& , 
                 TagBoxNote -> "142"], 
                StyleBox["142", {}, StripOnInput -> False]], Annotation[#, 
                Style[142, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168596$168835, 
                  FEPrivate`Not[DynamicChart`click$168596$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168596$168835, {{{1., 0.}, {0., 
                1.}}, {-0.199998009896269, 0.0008922093542924382}}, {{1, 0}, {
               0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168596$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["1220", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6659226316692585, 
                    0.031487983027394625`}]}}}, StatusArea[#, 1220]& , 
                 TagBoxNote -> "1220"], 
                StyleBox["1220", {}, StripOnInput -> False]], Annotation[#, 
                Style[1220, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168602$168835, 
                  FEPrivate`Not[DynamicChart`click$168602$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168602$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19977678950077757`, 0.009446394908218388}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168602$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["5012", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6470749399635264, 
                    0.1604321243256573}]}}}, StatusArea[#, 5012]& , 
                 TagBoxNote -> "5012"], 
                StyleBox["5012", {}, StripOnInput -> False]], Annotation[#, 
                Style[5012, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168608$168835, 
                  FEPrivate`Not[DynamicChart`click$168608$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168608$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19412248198905793`, 0.04812963729769719}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168608$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["11693", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.4796099769310308, 
                    0.46305368422318005`}]}}}, StatusArea[#, 11693]& , 
                 TagBoxNote -> "11693"], 
                StyleBox["11693", {}, StripOnInput -> False]], Annotation[#, 
                Style[11693, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168614$168835, 
                  FEPrivate`Not[DynamicChart`click$168614$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168614$168835, {{{1., 0.}, {0., 
                1.}}, {-0.14388299307930927`, 0.13891610526695403`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168614$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["18728", {}, StripOnInput -> False], 
                    TraditionalForm], {0.10143399092712749`, 
                    0.6589048413307037}]}}}, StatusArea[#, 18728]& , 
                 TagBoxNote -> "18728"], 
                StyleBox["18728", {}, StripOnInput -> False]], Annotation[#, 
                Style[18728, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168620$168835, 
                  FEPrivate`Not[DynamicChart`click$168620$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168620$168835, {{{1., 0.}, {0., 1.}}, {
                0.03043019727813825, 0.19767145239921113`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168620$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["22396", {}, StripOnInput -> False], 
                    TraditionalForm], {0.6613729872810681, 
                    0.08384638417582842}]}}}, StatusArea[#, 22396]& , 
                 TagBoxNote -> "22396"], 
                StyleBox["22396", {}, StripOnInput -> False]], Annotation[#, 
                Style[22396, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168626$168835, 
                  FEPrivate`Not[DynamicChart`click$168626$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168626$168835, {{{1., 0.}, {0., 1.}}, {
                0.19841189618432042`, 0.02515391525274853}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168626$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["19536", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.24701235420079082`, -0.6192167159538149}]}}}, 
                 StatusArea[#, 19536]& , TagBoxNote -> "19536"], 
                StyleBox["19536", {}, StripOnInput -> False]], Annotation[#, 
                Style[19536, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168632$168835, 
                  FEPrivate`Not[DynamicChart`click$168632$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168632$168835, {{{1., 0.}, {0., 1.}}, {
                0.07410370626023725, -0.1857650147861445}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168632$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["12532", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.3916195807957644, \
-0.5395169583820272}]}}}, StatusArea[#, 12532]& , TagBoxNote -> "12532"], 
                StyleBox["12532", {}, StripOnInput -> False]], Annotation[#, 
                Style[12532, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168638$168835, 
                  FEPrivate`Not[DynamicChart`click$168638$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168638$168835, {{{1., 0.}, {0., 
                1.}}, {-0.11748587423872935`, -0.1618550875146082}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168638$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["5943", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.623340162640188, \
-0.23641380265151263`}]}}}, StatusArea[#, 5943]& , TagBoxNote -> "5943"], 
                StyleBox["5943", {}, StripOnInput -> False]], Annotation[#, 
                Style[5943, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168644$168835, 
                  FEPrivate`Not[DynamicChart`click$168644$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168644$168835, {{{1., 0.}, {0., 
                1.}}, {-0.18700204879205642`, -0.0709241407954538}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168644$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["2117", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6626887564303829, \
-0.07271902464415403}]}}}, StatusArea[#, 2117]& , TagBoxNote -> "2117"], 
                StyleBox["2117", {}, StripOnInput -> False]], Annotation[#, 
                Style[2117, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168650$168835, 
                  FEPrivate`Not[DynamicChart`click$168650$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168650$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19880662692911488`, -0.021815707393246214`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168650$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["573", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6664618759522891, \
-0.01652308526274789}]}}}, StatusArea[#, 573]& , TagBoxNote -> "573"], 
                StyleBox["573", {}, StripOnInput -> False]], Annotation[#, 
                Style[573, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168656$168835, 
                  FEPrivate`Not[DynamicChart`click$168656$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168656$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19993856278568675`, -0.004956925578824368}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168656$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["96", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666619292621648, \
-0.0025132681696709855`}]}}}, StatusArea[#, 96]& , TagBoxNote -> "96"], 
                StyleBox["96", {}, StripOnInput -> False]], Annotation[#, 
                Style[96, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168662$168835, 
                  FEPrivate`Not[DynamicChart`click$168662$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168662$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19999857877864946`, -0.0007539804509012958}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168662$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["12", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666666192925661, \
-0.00025132740633393777`}]}}}, StatusArea[#, 12]& , TagBoxNote -> "12"], 
                StyleBox["12", {}, StripOnInput -> False]], Annotation[#, 
                Style[12, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168668$168835, 
                  FEPrivate`Not[DynamicChart`click$168668$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168668$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19999998578776984`, -0.00007539822190018135}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168668$168835}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13"}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6590506666666667, 0.4511765333333334, 
                    0.18945208888888887`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.988576`", ",", "0.6767648`", ",", 
                    "0.2841781333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6628586666666667, 0.4069216, 0.16139271111111114`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.994288`", ",", "0.6103824`", ",", 
                    "0.24208906666666669`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.544`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6186666666666667, 0.3473777777777778, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.928`", ",", "0.5210666666666667`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.928, 0.5210666666666667, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.928, 0.5210666666666667, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5706666666666668, 0.3320888888888889, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8560000000000001`", ",", "0.4981333333333333`", ",", 
                    "0.2`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.784`", ",", "0.47519999999999996`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.49854684444444447`, 0.31893333333333335`, 
                    0.24943982222222214`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7478202666666667`", ",", "0.4784`", ",", 
                    "0.3741597333333332`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4744270222222222, 0.32106666666666667`, 
                    0.36554631111111113`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7116405333333333`", ",", "0.4816`", ",", 
                    "0.5483194666666666`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6754608`", ",", "0.4848`", ",", "0.7224792`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4111381333333334, 0.33884444444444445`, 
                    0.5057530666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6167072`", ",", "0.5082666666666666`", ",", 
                    "0.7586295999999999`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37196906666666674`, 0.35448888888888896`, 
                    0.5298533333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5579536`", ",", "0.5317333333333334`", ",", 
                    "0.7947799999999999`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13}], 
             "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None", ",", "None", ",", "None", ",", "None"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[130]:=",
 CellID->574479642]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"10", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.0440972546516367`"}], "}"}], ",", 
                 RowBox[{"{", "15.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"15", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.09820855580560213`", "}"}], ",", 
                 RowBox[{"{", "2.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"83", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.26095238819475913`", "}"}], ",", 
                 RowBox[{"{", "4.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"131", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.05787920075595823`"}], "}"}], ",", 
                 RowBox[{"{", "3.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"6366"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"88885", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"91871", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"92952", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"96125", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"10", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              TemplateBox[{"6372"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[130], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[130]=",
 CellID->314696655]
}, Open  ]],

Cell["\<\
For each bootstrap protein we now extract a time series (list of values):\
\>", "MathCaption",
 CellID->1388846014],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesProteinBootstrap", "=", 
  RowBox[{
  "CreateTimeSeries", "[", "filteredProteinBootstrapData", "]"}]}]], "Input",
 CellLabel->"In[131]:=",
 CellID->1335198055],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[131], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[131]=",
 CellID->2001941671]
}, Open  ]],

Cell[TextData[{
 "Next, we normalize each protein series, using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1164916883],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedProteinBootstrapAll", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "timeSeriesProteinBootstrap"}], "]"}]}]], "Input",\

 CellLabel->"In[132]:=",
 CellID->149642882],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"10", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.03144802637947889`"}], ",", "0.`", ",", 
              "0.06407161618429313`", ",", 
              RowBox[{"-", "0.11500814497472765`"}], ",", 
              "0.02030351406722126`", ",", 
              RowBox[{"-", "0.05862659638869126`"}], ",", 
              RowBox[{"-", "0.023784381510738785`"}], ",", 
              TemplateBox[{"20"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", 
               TemplateBox[{"19"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"-", "0.06295888538654712`"}], ",", 
              RowBox[{"-", "0.17115950215528627`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.7173193068037694`", ",", 
              
              RowBox[{"Missing", "[", "]"}], ",", "0.3749107966117535`"}], 
             "}"}]}], ",", 
           TemplateBox[{"6372"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 132, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 132, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 132, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[132], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[132]=",
 CellID->2007366948]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1523959247],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrapFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedProteinBootstrapAll", "]"}]}]], "Input",
 CellLabel->"In[133]:=",
 CellID->145606560],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"10", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.03144802637947889`"}], ",", "0.`", ",", 
              "0.06407161618429313`", ",", 
              RowBox[{"-", "0.11500814497472765`"}], ",", 
              "0.02030351406722126`", ",", 
              RowBox[{"-", "0.05862659638869126`"}], ",", 
              RowBox[{"-", "0.023784381510738785`"}], ",", 
              TemplateBox[{"20"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", 
               TemplateBox[{"19"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"-", "0.06295888538654712`"}], ",", 
              RowBox[{"-", "0.17115950215528627`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.7173193068037694`", ",", 
              
              RowBox[{"Missing", "[", "]"}], ",", "0.3749107966117535`"}], 
             "}"}]}], ",", 
           TemplateBox[{"6372"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 133, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 133, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 133, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[133], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[133]=",
 CellID->848200666]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Proteome Time Series", "Subsection",
 CellID->2003973854],

Cell[TextData[{
 "In this subsection we will classify the proteome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileEstimator"]], 
    "paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for the \"LombScargle\" method to provide a cutoff for the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " inputs."
}], "Text",
 CellID->1328457457],

Cell["\<\
First, we estimate for the \"LombScargle\" Method, 0.95 quantile cutoff from \
the bootstrap proteome data:\
\>", "MathCaption",
 CellID->1629616244],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95Protein", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"proteinBootstrapFinalTimeSeries", ",", "timesProteinBootstrap"}], 
   "]"}]}]], "Input",
 CellLabel->"In[268]:=",
 CellID->2101262717],

Cell[BoxData["0.8350640860442666`"], "Output",
 CellLabel->"Out[268]=",
 CellID->384258966]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
proteome data:\
\>", "MathCaption",
 CellID->218785383],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95ProteinSpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "proteinBootstrapFinalTimeSeries", ",", "timesProteinBootstrap", ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[270]:=",
 CellID->633928417],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"12", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.804264750066626`", ",", 
      RowBox[{"-", "0.8380547398330289`"}]}], "}"}]}], ",", 
   RowBox[{"13", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.8027925581149449`", ",", 
      RowBox[{"-", "0.8174904385249819`"}]}], "}"}]}], ",", 
   RowBox[{"14", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.7877720084250821`", ",", 
      RowBox[{"-", "0.8216094289485545`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[270]=",
 CellID->1148116342]
}, Open  ]],

Cell["\<\
Now we can classify the proteome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1746502806],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"proteinFinalTimeSeries", ",", "timesProtein", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95Protein"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95ProteinSpikes"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[271]:=",
 CellID->1666173246],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[271]:=",
 CellID->1621576223],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 271, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 271, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 271, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[271], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[271]=",
 CellID->116615884]
}, Open  ]],

Cell[TextData[{
 "As discussed above, the default output for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " is an ",
 Cell[BoxData["Association"], "InlineFormula"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". "
}], "Text",
 CellID->808687274],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->690387281],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "proteinClassification", "]"}]], "Input",
 CellLabel->"In[137]:=",
 CellID->484887026],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",\

 CellLabel->"Out[137]=",
 CellID->459471277]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->1931356472],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "proteinClassification"}]], "Input",
 CellLabel->"In[272]:=",
 CellID->1092900499],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "124"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "48"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "77"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "7"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "36"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "18"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[272]=",
 CellID->1294671978]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->642146293],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "proteinClassification"}]], "Input",
 CellLabel->"In[273]:=",
 CellID->1447420276],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"O00160\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00267\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00273\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00571\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O15031\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43143\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43175\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43312\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43516\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O60271\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O60879\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O75643\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O75792\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O95498\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P00488\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P00915\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P02042\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P02671\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P04844\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P08174\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P09326\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P09496\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P11021\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P12956\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13501\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13611\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13667\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P19387\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P23141\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P23368\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P32119\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P32189\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P33176\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P40306\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P42892\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P50225\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P51531\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P52888\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P54920\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P55036\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P60660\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P84095\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q01518\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q07021\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q08722\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q09666\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13151\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13217\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13488\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14165\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14643\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14653\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q15084\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q5H9R7\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q6NYC8\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q709C8\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q86YP4\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q92499\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96AT9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96L92\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96RT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q99439\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BTE3\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BTV4\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BWS9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9C0I1\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H0D6\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H2U2\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H444\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H4Z3\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NS69\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NUP9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NVJ2\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NYB0\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9UQ35\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9Y277\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9Y2Q0\"\>", ",", "\<\"Protein\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[273]=",
 CellID->157992455]
}, Open  ]],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["True"]], "paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1243280944],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"proteinFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesRNA", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[140]:=",
 CellID->806940498],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[140]=",
 CellID->1715219372]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metabolomic Data", "Section",
 CellID->779816621],

Cell[CellGroupData[{

Cell["Importing OmicsObject Metabolome Data", "Subsection",
 CellID->1971981026],

Cell[TextData[{
 "We now import the metabolomics data example (for details on how to import \
such data please refer to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporter"]], "paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirect"]], 
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirectLabeled"]], 
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObjectCreator"]], 
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->1838680125],

Cell["\<\
We import the metabolomics OmicsObject MathIOmica examples for each of \
positive and negative mass spectrometry aligned mass features:\
\>", "MathCaption",
 CellID->902655240],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesNegativeModeExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", 
      "\"\<metabolomicsNegativeModeExample\>\""}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[141]:=",
 CellID->1102136272],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"23444", ",", "16317", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"2289"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"421.948`", ",", "0.39287496`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "115528", ",", "130042"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C11 H12 Cl2 O11 S, db=0.00, overall=48.58, \
mfg=97.17 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[141], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[141]=",
 CellID->1616524567]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesPositiveModeExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", 
      "\"\<metabolomicsPositiveModeExample\>\""}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[142]:=",
 CellID->1021092447],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "202.0329`", ",", "0.33260712`", ",", "\<\"Meta\"\>"}], "}"}],
                "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"263741", ",", "276622", ",", "337241"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "174.0375`", ",", "0.33451426`", ",", "\<\"Meta\"\>"}], "}"}],
                "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"78435", ",", "88529", ",", "121073"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], 
              ",", 
              TemplateBox[{"3670"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "36919", ",", "102737"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"8"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"19\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[142], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[142]=",
 CellID->1548290285]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->969019879],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", 
  "metabolitesNegativeModeExample"}]], "Input",
 CellLabel->"In[143]:=",
 CellID->1948611152],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>"}], "}"}]], "Output",
 CellLabel->"Out[143]=",
 CellID->1243364280]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", 
  "metabolitesPositiveModeExample"}]], "Input",
 CellLabel->"In[144]:=",
 CellID->619818574],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>"}], "}"}]], "Output",
 CellLabel->"Out[144]=",
 CellID->1440862894]
}, Open  ]],

Cell["\<\
We notice that sample 7, 18 and 21 are missing as there was no sample for \
these time points. This will be addressed further below.\
\>", "Text",
 CellID->1900924848],

Cell[TextData[{
 "We can get the intensity data from any sample and entry. For example, the \
",
 Cell[BoxData[
  SuperscriptBox["77", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["155", "th"]], "InlineFormula"],
 " entries in sample 14:"
}], "MathCaption",
 CellID->729703917],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<14\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"77", ",", "155"}], "}"}]}], "]"}], "@", 
  "metabolitesNegativeModeExample"}]], "Input",
 CellLabel->"In[145]:=",
 CellID->2002108649],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"322.0892`", ",", "0.4402413`", ",", "\<\"Meta\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"31950", ",", "29801", ",", "27440"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Isosorbide-2-glucuronide [ C12 H18 O10, db=60.03, \
overall=60.67, mfg=61.31, KEGG ID=, CAS ID=29542-01-6 ]\"\>", 
        ",", "\<\"29542-01-6\"\>"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"146.0588`", ",", "0.7426923`", ",", "\<\"Meta\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"62667", ",", "1", ",", "60382"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Adipic acid [ C6 H10 O4, db=45.74, overall=46.59, \
mfg=47.44, KEGG ID=, CAS ID=124-04-9 ]\"\>", ",", "\<\"124-04-9\"\>"}], 
       "}"}]}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[145]=",
 CellID->81485738]
}, Open  ]],

Cell[TextData[{
 "The outer keys correspond to the identified features in the form {mass to \
charge ratio (m/z), retention time, \"Meta\"}, i.e. each m/z and retention \
time has been tagged with a \"Meta\" label as well to indicate these are \
metabolomics data. The  values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example: ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "1"}], 
       ",", 
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "2"}], 
       ",", 
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "3"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Annotations", ",", " ", 
       RowBox[{"CAS", " ", "Number"}]}], "}"}]}], "}"}]}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->527526154],

Cell[TextData[{
 "We would like to combine the positive and negative mode metabolomics data. \
We will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["EnlargeInnerAssociation"]], 
    "paclet:MathIOmica/ref/EnlargeInnerAssociation"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->449223127],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesExample", "=", 
  RowBox[{"EnlargeInnerAssociation", "[", 
   RowBox[{"{", 
    RowBox[{
    "metabolitesNegativeModeExample", ",", "metabolitesPositiveModeExample"}],
     "}"}], "]"}]}]], "Input",
 CellLabel->"In[146]:=",
 CellID->1688076284],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"23444", ",", "16317", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "36919", ",", "102737"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], "}"}], ",", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton"]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 146, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 146, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 146, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[146], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[146]=",
 CellID->2034427395]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing of Metabolome Data", "Subsection",
 CellID->1357359281],

Cell["\<\
We will next preprocess the imported metabolome data. We will first perform \
calculate the median of the technical replicates, transform the data towards \
a normal distribution, then we will re-label the samples with real time and \
carry out filtering for missing data. Finally, we will create the \
metabolomics time series or relative intensities compared to the healthy \
reference point for each mass feature identified.\
\>", "Text",
 CellID->1802528277],

Cell[CellGroupData[{

Cell["\<\
Medians of Technical Triplicates, Data Transformation, Labeling, Filtering, \
Matching Mass\
\>", "Subsubsection",
 CellID->524759768],

Cell[CellGroupData[{

Cell["Median of Technical Triplicates", "Subsubsubsection",
 CellID->1551861331],

Cell["\<\
The metabolomics intensities have three measurements, corresponding to \
technical triplicates. Typically we would like to use the median of these \
values. An additional complication is that some of the triplicates have \
intensity values of 1, which should be taken as a Missing value. We can use \
MeasurementApplier to perform the calculation:\
\>", "Text",
 CellID->944497302],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["MeasurementApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/MeasurementApplier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", 
      StyleBox["omicsObject", "TI"]}], "]"}], Cell[TextData[{
     "applies a ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to the measurement list of an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", ignoring missing values."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1659581078],

Cell[TextData[{
 "Applying a function to the measurements in an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 "."
}], "Caption",
 CellID->1061570710],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ComponentIndex"]], "paclet:MathIOmica/ref/ComponentIndex"},
       
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for MathIOmica functions, such as ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Applier"]], "paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", that allows selection of which component of a list to use in an \
association or ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input or output values."
    }], "TableText"]},
   {"IgnorePattern", "_Missing", Cell[TextData[{
     Cell[BoxData["IgnorePattern"], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["MeasurementApplier"], "InlineFormula"],
     " specifying a pattern of values to delete prior to applying the \
function to the measurement list."
    }], "TableText"]},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], "1", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ListIndex"]], "paclet:MathIOmica/ref/ListIndex"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for MathIOmica functions, such as ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Applier"]], "paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " that allows selection of which list to use in the association or \
OmicsObject input or output values."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->524783694],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["MeasurementApplier"]], 
    "paclet:MathIOmica/ref/MeasurementApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->324206829],

Cell["\<\
We implement a Median calculation, and ignoring entries with missing and \
values of 1:\
\>", "MathCaption",
 CellID->873132756],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metaboliteMedians", "=", 
  RowBox[{"MeasurementApplier", "[", 
   RowBox[{"Median", ",", "metabolitesExample", ",", 
    RowBox[{"IgnorePattern", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"_Missing", "|", " ", "1", "|", "1."}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[147]:=",
 CellID->986470141],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "19880.5`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "69828.`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "16606.5`", "}"}], ",", 
                 RowBox[{"{", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[147], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[147]=",
 CellID->469857818]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Power Transformation", "Subsubsubsection",
 CellID->128983684],

Cell[TextData[{
 "We apply a Box-Cox transformation to the metabolite median data in the \
OmicsObject, which is now the first list first component for each identifier. \
The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1069961234],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedMetaboliteData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"metaboliteMedians", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[148]:=",
 CellID->1957883507],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2888569651995717`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2888569651995717],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->64325918],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.28237388560304527`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.28237388560304527`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->107170713],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2762019481112037`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2762019481112037],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->95796752],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2620754231729624`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2620754231729624],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->824325630],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27130818835487147`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27130818835487147`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->524837664],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27702965627620246`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27702965627620246`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1492609609],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.29539457602287605`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.29539457602287605`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1812054345],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2648334191658074`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2648334191658074],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1204774573],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2785561129338028`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2785561129338028],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1653787195],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26951291666846366`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26951291666846366`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1967842748],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2657839634539137`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2657839634539137],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1388283531],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2627686191517685`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2627686191517685],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->66431071]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.263454850806397`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3238554275098924`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[148], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[148]=",
 CellID->637169717]
}, Open  ]],

Cell["\<\
We can plot the data to see what the resulting distributions look like:\
\>", "MathCaption",
 CellID->2078239195],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "transformedMetaboliteData"}], ")"}]}]], "Input",
 CellLabel->"In[149]:=",
 CellID->144631910],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.518], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.518], Thickness[Small]}], 
        RectangleBox[{3.21, 0}, {3.22, 3.},
         RoundingRadius->0], RectangleBox[{3.22, 0}, {3.23, 8.},
         RoundingRadius->0], RectangleBox[{3.23, 0}, {3.24, 17.},
         RoundingRadius->0], RectangleBox[{3.24, 0}, {3.25, 55.},
         RoundingRadius->0], RectangleBox[{3.25, 0}, {3.26, 97.},
         RoundingRadius->0], RectangleBox[{3.26, 0}, {3.27, 169.},
         RoundingRadius->0], RectangleBox[{3.27, 0}, {3.28, 254.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 322.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 352.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 461.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 502.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 528.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 549.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 496.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 452.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 440.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 369.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 292.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 181.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 154.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 91.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 68.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 37.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 9.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2052, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.21, 3.45}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.504], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.504], Thickness[Small]}], 
        RectangleBox[{3.27, 0}, {3.28, 3.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 6.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 23.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 44.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 88.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 142.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 209.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 249.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 328.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 411.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 441.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 466.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 482.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 500.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 486.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 431.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 388.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 353.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 284.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 185.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 145.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 106.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 68.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 44.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 23.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 3.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2648, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.27, 3.53}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{3.32, 0}, {3.33, 1.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 3.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 13.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 21.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 50.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 85.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 134.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 188.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 225.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 281.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 370.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 397.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 428.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 446.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 447.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 422.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 445.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 377.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 359.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 320.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 262.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 201.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 141.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 97.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 70.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 63.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 30.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 11.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3144, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.32, 3.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], 
        RectangleBox[{3.45, 0}, {3.46, 1.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 9.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 10.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 17.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 33.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 52.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 82.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 138.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 149.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 171.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 199.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 242.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 274.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 312.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 299.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 323.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 297.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 301.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 300.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 298.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 281.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 262.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 244.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 241.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 185.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 156.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 108.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 76.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 70.},
         RoundingRadius->0], RectangleBox[{3.74, 0}, {3.75, 54.},
         RoundingRadius->0], RectangleBox[{3.75, 0}, {3.76, 44.},
         RoundingRadius->0], RectangleBox[{3.76, 0}, {3.77, 21.},
         RoundingRadius->0], RectangleBox[{3.77, 0}, {3.78, 14.},
         RoundingRadius->0], RectangleBox[{3.78, 0}, {3.79, 3.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4432, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.45, 3.79}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.469], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.469], Thickness[Small]}], 
        RectangleBox[{3.36, 0}, {3.37, 1.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 4.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 5.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 21.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 32.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 50.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 94.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 165.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 184.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 203.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 288.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 317.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 344.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 351.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 364.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 393.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 416.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 369.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 368.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 368.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 338.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 258.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 226.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 172.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 150.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 129.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 114.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 74.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 47.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 31.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 6.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3537999999999997`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.36, 3.67}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{3.31, 0}, {3.32, 1.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 5.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 9.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 23.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 43.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 71.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 164.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 197.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 255.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 280.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 321.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 373.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 378.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 403.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 444.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 429.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 391.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 385.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 378.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 319.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 272.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 191.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 151.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 144.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 114.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 77.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 48.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 26.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3042000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.31, 3.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.518], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.518], Thickness[Small]}], 
        RectangleBox[{3.14, 0}, {3.15, 1.},
         RoundingRadius->0], RectangleBox[{3.15, 0}, {3.16, 1.},
         RoundingRadius->0], RectangleBox[{3.16, 0}, {3.17, 7.},
         RoundingRadius->0], RectangleBox[{3.17, 0}, {3.18, 23.},
         RoundingRadius->0], RectangleBox[{3.18, 0}, {3.19, 53.},
         RoundingRadius->0], RectangleBox[{3.19, 0}, {3.2, 118.},
         RoundingRadius->0], RectangleBox[{3.2, 0}, {3.21, 193.},
         RoundingRadius->0], RectangleBox[{3.21, 0}, {3.22, 277.},
         RoundingRadius->0], RectangleBox[{3.22, 0}, {3.23, 379.},
         RoundingRadius->0], RectangleBox[{3.23, 0}, {3.24, 467.},
         RoundingRadius->0], RectangleBox[{3.24, 0}, {3.25, 513.},
         RoundingRadius->0], RectangleBox[{3.25, 0}, {3.26, 530.},
         RoundingRadius->0], RectangleBox[{3.26, 0}, {3.27, 559.},
         RoundingRadius->0], RectangleBox[{3.27, 0}, {3.28, 526.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 512.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 449.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 390.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 319.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 240.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 162.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 93.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 76.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 29.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.1352, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.14, 3.38}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.44, 0}, {3.45, 2.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 16.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 23.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 28.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 60.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 83.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 143.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 186.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 205.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 243.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 272.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 315.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 338.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 392.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 368.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 355.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 361.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 333.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 366.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 291.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 301.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 286.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 220.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 177.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 142.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 121.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 108.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 67.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 55.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 32.},
         RoundingRadius->0], RectangleBox[{3.74, 0}, {3.75, 18.},
         RoundingRadius->0], RectangleBox[{3.75, 0}, {3.76, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4335999999999998`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.44, 3.76}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{3.29, 0}, {3.3, 1.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 2.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 5.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 17.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 28.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 61.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 100.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 166.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 194.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 307.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 324.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 403.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 383.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 416.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 425.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 437.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 410.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 371.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 393.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 338.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 311.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 220.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 172.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 161.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 124.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 78.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 43.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 29.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2842000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.29, 3.58}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.37, 0}, {3.38, 2.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 1.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 5.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 8.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 29.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 46.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 92.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 118.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 119.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 190.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 234.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 293.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 306.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 359.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 309.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 394.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 366.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 333.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 389.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 334.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 335.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 313.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 268.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 209.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 158.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 133.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 135.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 98.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 54.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 58.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 28.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 10.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3636, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.37, 3.69}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.42, 0}, {3.43, 1.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 3.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 12.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 11.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 26.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 56.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 102.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 115.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 155.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 218.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 244.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 284.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 354.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 356.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 358.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 351.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 371.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 363.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 396.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 319.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 361.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 294.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 253.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 218.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 165.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 133.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 115.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 90.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 56.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 39.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 25.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 10.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4135999999999997`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.42, 3.74}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5529999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5529999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.42, 0}, {3.44, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.504901960784196`, 26.62306501547971}, {
              18.560274912575586`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.44, 0}, {3.46, 2.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{26.12306501547971, 31.24122807017534}, {
              18.485439040025405`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.46, 0}, {3.48, 18.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{30.74122807017534, 35.859391124870854`}, {
              17.28806507922253, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.48, 0}, {3.5, 58.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.359391124870854`, 40.47755417956637}, {
              14.294630177215344`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 58]& ,
           TagBoxNote->"58"],
          StyleBox["58", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[58, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.5, 0}, {3.52, 149.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{39.97755417956637, 45.095717234262}, {
              7.484565775148994, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 149]& ,
           TagBoxNote->"149"],
          StyleBox["149", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[149, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.52, 0}, {3.54, 307.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{44.595717234262, 
              49.71388028895751}, {-4.339502087779394, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 307]& ,
           TagBoxNote->"307"],
          StyleBox["307", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[307, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.54, 0}, {3.56, 442.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{49.21388028895751, 
              54.33204334365314}, {-14.44234488205365, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 442]& ,
           TagBoxNote->"442"],
          StyleBox["442", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[442, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.56, 0}, {3.58, 591.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{53.83204334365314, 
              58.950206398348655`}, {-25.592889892030417`, 
              19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 591]& ,
           TagBoxNote->"591"],
          StyleBox["591", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[591, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.58, 0}, {3.6, 667.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{58.450206398348655`, 
              63.56836945304428}, {-31.280416205844073`, 
              19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 667]& ,
           TagBoxNote->"667"],
          StyleBox["667", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[667, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.6, 0}, {3.62, 702.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{63.06836945304428, 
              68.1865325077398}, {-33.89967174510036, 19.13511078512576}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 702]& ,
           TagBoxNote->"702"],
          StyleBox["702", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[702, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.62, 0}, {3.64, 681.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{67.6865325077398, 
              72.80469556243531}, {-32.32811842154659, 19.13511078512576}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 681]& ,
           TagBoxNote->"681"],
          StyleBox["681", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[681, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.64, 0}, {3.66, 625.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{72.30469556243531, 
              77.42285861713094}, {-28.137309558736522`, 
              19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 625]& ,
           TagBoxNote->"625"],
          StyleBox["625", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[625, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.66, 0}, {3.68, 560.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{76.92285861713094, 
              82.04102167182646}, {-23.27297784297485, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 560]& ,
           TagBoxNote->"560"],
          StyleBox["560", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[560, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.68, 0}, {3.7, 458.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{81.54102167182646, 
              86.65918472652208}, {-15.63971884285652, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 458]& ,
           TagBoxNote->"458"],
          StyleBox["458", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[458, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.7, 0}, {3.72, 296.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{86.15918472652208, 
              91.2773477812176}, {-3.516307489727417, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 296]& ,
           TagBoxNote->"296"],
          StyleBox["296", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[296, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.72, 0}, {3.74, 191.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{90.7773477812176, 95.89551083591311}, {
              4.341459128041448, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 191]& ,
           TagBoxNote->"191"],
          StyleBox["191", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[191, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.74, 0}, {3.76, 106.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{95.39551083591311, 100.51367389060863`}, {
              10.70250829480672, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 106]& ,
           TagBoxNote->"106"],
          StyleBox["106", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[106, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.76, 0}, {3.78, 41.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{100.01367389060863`, 105.13183694530414`}, {
              15.566840010568399`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.78, 0}, {3.8, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{104.63183694530414`, 109.74999999999977`}, {
              18.560274912575586`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4124, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.42, 3.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[149]=",
 CellID->841573546]
}, Open  ]],

Cell["We may also wish to standardize the distributions:", "MathCaption",
 CellID->1914505686],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesStandardized", "=", 
  RowBox[{"Returner", "[", 
   RowBox[{"transformedMetaboliteData", ",", 
    RowBox[{"Applier", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StandardizeExtended", "[", 
        RowBox[{"#", ",", "Mean", ",", "StandardDeviation"}], "]"}], "&"}], 
      ",", "transformedMetaboliteData", ",", 
      RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
      RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}], ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[150]:=",
 CellID->1349581601],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[150], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[150]=",
 CellID->1805328114]
}, Open  ]],

Cell["\<\
We can again plot the data to see what the standardized distributions look \
like:\
\>", "MathCaption",
 CellID->2141940815],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "metabolitesStandardized"}], ")"}]}]], "Input",
 CellLabel->"In[151]:=",
 CellID->1785374157],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 2.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 7.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 10.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 27.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 48.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 82.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 134.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 188.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 228.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 292.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 298.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 386.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 423.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 414.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 461.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 416.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 412.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 381.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 376.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 335.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 270.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 214.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 143.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 142.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 74.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 62.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 51.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 25.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 5.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.116, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 5.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 13.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 30.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 43.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 92.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 134.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 183.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 226.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 278.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 328.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 399.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 384.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 412.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 436.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 448.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 433.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 379.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 377.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 329.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 269.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 197.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 149.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 134.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 93.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 64.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 35.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 31.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 6.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.116, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 6.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 12.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 23.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 49.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 93.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 131.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 181.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 216.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 268.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 348.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 383.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 397.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 455.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 421.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 402.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 440.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 383.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 340.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 343.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 268.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 231.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 161.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 110.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 87.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 64.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 42.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 26.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 6.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.116, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-2.8, 0}, {-2.6, 4.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 14.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 18.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 39.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 67.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 136.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 172.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 204.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 247.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 304.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 354.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 344.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 404.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 359.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 361.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 367.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 343.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 316.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 307.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 260.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 206.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 143.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 98.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 75.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 63.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 36.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 21.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 4.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.912, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-2.8, 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 2.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 4.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 9.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 25.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 45.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 82.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 122.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 197.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 229.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 296.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 353.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 374.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 386.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 414.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 449.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 423.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 391.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 418.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 373.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 309.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 243.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 189.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 159.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 151.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 108.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 67.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 46.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 18.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.112, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 5.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 7.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 22.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 41.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 69.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 158.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 192.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 255.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 283.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 333.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 376.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 385.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 409.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 452.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 428.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 401.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 385.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 379.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 320.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 262.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 192.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 156.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 138.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 113.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 68.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 47.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 16.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.112, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.476], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.476], Thickness[Small]}], 
        RectangleBox[{-3.2, 0}, {-3., 1.},
         RoundingRadius->0], RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 3.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 9.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 28.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 43.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 84.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 130.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 178.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 237.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 298.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 350.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 382.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 401.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 429.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 438.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 417.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 421.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 368.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 361.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 310.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 279.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 222.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 178.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 137.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 79.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 65.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 46.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 22.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.3200000000000003`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3.2, 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-2.8, 0}, {-2.6, 2.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 16.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 28.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 38.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 71.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 146.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 197.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 237.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 289.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 307.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 397.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 426.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 442.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 411.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 417.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 392.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 389.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 357.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 332.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 279.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 202.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 170.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 138.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 93.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 71.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 39.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 21.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.912, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-2.8, 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 2.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 3.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 9.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 20.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 44.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 76.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 137.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 178.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 252.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 295.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 362.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 392.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 409.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 398.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 436.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 434.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 384.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 365.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 374.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 327.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 278.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 205.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 171.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 134.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 106.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 70.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 41.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 18.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.112, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 3.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 2.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 6.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 25.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 43.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 104.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 126.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 146.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 232.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 292.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 342.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 377.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 356.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 442.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 410.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 381.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 424.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 380.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 363.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 319.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 239.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 195.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 151.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 143.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 97.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 64.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 42.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 22.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.112, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 5.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 12.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 15.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 49.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 93.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 129.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 172.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 233.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 293.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 343.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 391.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 415.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 381.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 416.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 414.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 444.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 369.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 359.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 332.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 252.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 221.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 160.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 130.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 96.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 66.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 39.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 20.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 4.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.116, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.469], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.469], Thickness[Small]}], 
        RectangleBox[{-3.4, 0}, {-3.2, 1.},
         RoundingRadius->0], RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 4.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 12.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 14.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 52.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 84.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 117.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 187.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 266.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 279.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 347.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 385.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 402.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 436.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 410.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 439.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 392.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 355.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 350.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 325.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 296.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 211.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 177.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 128.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 96.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 69.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 43.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 17.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.524, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3.4, 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[151]=",
 CellID->628044284]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->418653686],

Cell["\<\
As with the transcriptome, we notice that the sample numberings do not \
correspond to actual days, so we may adjust using the sampleToDays \
association created above:\
\>", "Text",
 CellID->1156073030],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[152]:=",
 CellID->38250836],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1834860801],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "metabolitesStandardized"}], "]"}]}]], "Input",\

 CellLabel->"In[153]:=",
 CellID->640311487],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"5963"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 153, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 153, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 153, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[153], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[153]=",
 CellID->658156183]
}, Open  ]],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->571106757],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetaboliteRawData", "=", 
  RowBox[{"TimeExtractor", "[", "metabolitesLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[154]:=",
 CellID->1486846456],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380"}], 
  "}"}]], "Output",
 CellLabel->"Out[154]=",
 CellID->2090185631]
}, Open  ]],

Cell["\<\
We notice a complication: there are three timepoints missing, corresponding \
to the three samples for which we had indicated above that there were no \
measurements (compared to the transcriptome samples). These are samples on \
days \"186\", \"329\" and \"400\".\
\>", "Text",
 CellID->280773926],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantAssociator"]], 
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed data, tagging these data as \
Missing data:"
}], "MathCaption",
 CellID->945801823],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesLongitudinalEnlarged", "=", 
  RowBox[{"ConstantAssociator", "[", 
   RowBox[{"metabolitesLongitudinal", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<186\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{"\"\<400\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}]], "Input",
 CellLabel->"In[155]:=",
 CellID->417284067],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 155, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 155, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 155, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[155], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[155]=",
 CellID->1212402591]
}, Open  ]],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->430709602],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetabolites", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesLongitudinalEnlarged", "]"}]}]], "Input",
 CellLabel->"In[156]:=",
 CellID->1916390424],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[156]=",
 CellID->1525504201]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1084739385],

Cell[TextData[{
 "We will next remove values that have been tagged overall as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Additionally we remove data where the reference healthy sample \"255\
\" was missing. We use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for this implementation:"
}], "Text",
 CellID->1226164312],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredMetaboliteData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"metabolitesLongitudinalEnlarged", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[157]:=",
 CellID->890515172],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.651], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3., 0}, {4., 4601.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{28.785228182546035`, 
           69.63751000800642}, {-50.75544747610698, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4601]& ,
        TagBoxNote->"4601"],
       StyleBox["4601", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4601, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4., 0}, {5., 1158.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{69.13751000800642, 109.9897918334668}, {
           39.64008495588685, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1158]& ,
        TagBoxNote->"1158"],
       StyleBox["1158", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1158, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0}, {6., 172.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{109.4897918334668, 150.34207365892715`}, {
           65.52739107785777, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 172]& ,
        TagBoxNote->"172"],
       StyleBox["172", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[172, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6., 0}, {7., 31.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{149.84207365892715`, 190.69435548438756`}, {
           69.22932836304835, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 31]& ,
        TagBoxNote->"31"],
       StyleBox["31", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[31, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7., 0}, {8., 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{190.19435548438756`, 231.0466373098479}, {
           69.9907197195769, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{2.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{3., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[157]:=",
 CellID->341844674],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "4601"}], ",", 
     RowBox[{"4", "\[Rule]", "1158"}], ",", 
     RowBox[{"5", "\[Rule]", "172"}], ",", 
     RowBox[{"6", "\[Rule]", "31"}], ",", 
     RowBox[{"7", "\[Rule]", "2"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[157]:=",
 CellID->864680193],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$182320$182439 = False, 
       DynamicChart`click$182326$182439 = False, 
       DynamicChart`click$182332$182439 = False, 
       DynamicChart`click$182338$182439 = False, 
       DynamicChart`click$182344$182439 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.7056467156813797`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 4601]& , TagBoxNote -> "4601"], 
                    StyleBox["4601", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[4601, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182320$182439, 
                    FEPrivate`Not[DynamicChart`click$182320$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182320$182439, {{{1., 0.}, {0., 1.}}, {
                    0.1506281553794014, 0.13157187696084188`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182320$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.925621327638784, -1.7056467156813797`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 1158]& , 
                    TagBoxNote -> "1158"], 
                    StyleBox["1158", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[1158, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182326$182439, 
                    FEPrivate`Not[DynamicChart`click$182326$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182326$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.1355704985970502, -0.1470395862009521}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182326$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.106826537704997, -2.925621327638784}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 172]& , 
                    TagBoxNote -> "172"], 
                    StyleBox["172", {}, StripOnInput -> False]], Annotation[#, 
                    Style[172, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182332$182439, 
                    FEPrivate`Not[DynamicChart`click$182332$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182332$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.19843032592021287`, -0.02500811378729119}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182332$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.1394856162634417`, -3.106826537704997}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 31]& , 
                    TagBoxNote -> "31"], 
                    StyleBox["31", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[31, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182338$182439, 
                    FEPrivate`Not[DynamicChart`click$182338$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182338$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.19996601022710422`, -0.003687106433730781}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182338$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.1394856162634417`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182344$182439, 
                    FEPrivate`Not[DynamicChart`click$182344$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182344$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.1999998890098529, -0.00021070369365843502`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182344$182439}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["4601", {}, StripOnInput -> False], 
                    TraditionalForm], {0.5020938512646713, 
                    0.4385729232028062}]}}}, StatusArea[#, 4601]& , 
                 TagBoxNote -> "4601"], 
                StyleBox["4601", {}, StripOnInput -> False]], Annotation[#, 
                Style[4601, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182320$182439, 
                  FEPrivate`Not[DynamicChart`click$182320$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182320$182439, {{{1., 0.}, {0., 1.}}, {
                0.1506281553794014, 0.13157187696084188`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182320$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["1158", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.4519016619901673, \
-0.49013195400317355`}]}}}, StatusArea[#, 1158]& , TagBoxNote -> "1158"], 
                StyleBox["1158", {}, StripOnInput -> False]], Annotation[#, 
                Style[1158, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182326$182439, 
                  FEPrivate`Not[DynamicChart`click$182326$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182326$182439, {{{1., 0.}, {0., 
                1.}}, {-0.1355704985970502, -0.1470395862009521}}, {{1, 0}, {
               0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182326$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["172", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6614344197340428, \
-0.08336037929097062}]}}}, StatusArea[#, 172]& , TagBoxNote -> "172"], 
                StyleBox["172", {}, StripOnInput -> False]], Annotation[#, 
                Style[172, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182332$182439, 
                  FEPrivate`Not[DynamicChart`click$182332$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182332$182439, {{{1., 0.}, {0., 
                1.}}, {-0.19843032592021287`, -0.02500811378729119}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182332$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["31", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6665533674236807, \
-0.012290354779102602`}]}}}, StatusArea[#, 31]& , TagBoxNote -> "31"], 
                StyleBox["31", {}, StripOnInput -> False]], Annotation[#, 
                Style[31, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182338$182439, 
                  FEPrivate`Not[DynamicChart`click$182338$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182338$182439, {{{1., 0.}, {0., 
                1.}}, {-0.19996601022710422`, -0.003687106433730781}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182338$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["2", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666662966995096, \
-0.0007023456455281167}]}}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
                StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                Style[2, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182344$182439, 
                  FEPrivate`Not[DynamicChart`click$182344$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182344$182439, {{{1., 0.}, {0., 
                1.}}, {-0.1999998890098529, -0.00021070369365843502`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182344$182439}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}], 
   FormBox[
    FormBox[
     TemplateBox[{"3", "4", "5", "6", "7"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.544`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.784`", ",", "0.47519999999999996`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6754608`", ",", "0.4848`", ",", "0.7224792`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[157]:=",
 CellID->658164502]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"4599"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"406.3805`", ",", "14.560919`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.3484220998264644`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"2,4,6-trimethyl-2,15\"\>", 
                    "\[Ellipsis]", "\<\"ipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 157, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 157, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 157, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[157], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[157]=",
 CellID->82519417]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matching Unique Mass", "Subsubsubsection",
 CellID->1252715262],

Cell[TextData[{
 "We may want to match a unique mass to the metabolites. This is a putative \
mass identification based on the uniqueness of the mass feature. If matched, \
a KEGG compound identity can be prepended to the identifier using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObjectUniqueMassConverter"]], 
    "paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->1581980320],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["OmicsObjectUniqueMassConverter",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"], 
     "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["massAccuracy", "TI"]}], "]"}], Cell[TextData[{
     "assigns a unique putative mass identification to each of ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     "'s inner association keys, using the ",
     Cell[BoxData[
      StyleBox["massAccuracy", "TI"]], "InlineFormula"],
     " in parts per million."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->472784104],

Cell[TextData[{
 "Matching putative mass identifications to mass features in an ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObject"]], "paclet:MathIOmica/ref/OmicsObject"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " of metabolites."
}], "Caption",
 CellID->392942028],

Cell["\<\
We match our identities to KEGG compound identifiers, using a 2ppm accuracy \
(this may take some time depending on the number of matching data):\
\>", "MathCaption",
 CellID->1324534886],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"massMatchedFilteredMetabolites", "=", 
  RowBox[{"OmicsObjectUniqueMassConverter", "[", 
   RowBox[{"filteredMetaboliteData", ",", "2"}], "]"}]}]], "Input",
 CellLabel->"In[158]:=",
 CellID->642344200],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"4599"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"406.3805`", ",", "14.560919`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.3484220998264644`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"2,4,6-trimethyl-2,\"\>", 
                    "\[Ellipsis]", "\<\"id ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[159], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[159]=",
 CellID->524174621]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Metabolome Time Series", "Subsubsection",
 CellID->1109625018],

Cell["We can now create time series for each of the proteins. ", "Text",
 CellID->719686978],

Cell["\<\
For each metabolite feature we now extract a time series (list of values) \
corresponding to the set of times:\
\>", "MathCaption",
 CellID->1151139342],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesMetabolites", "=", 
  RowBox[{
  "CreateTimeSeries", "[", "massMatchedFilteredMetabolites", "]"}]}]], "Input",\

 CellLabel->"In[160]:=",
 CellID->518745171],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[160], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[160]=",
 CellID->824935153]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Take Difference Compared to Reference in Metabolome Time Series.\
\>", "Subsubsection",
 CellID->1009763177],

Cell[TextData[{
 "Now we need to compare  to compare the difference of each intensity for a \
given metabolite's time series to the intensity of the ratios of expression \
at any time point compared to a healthy datapoint. We can use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesInternalCompare"]], 
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->278067401],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->96962883],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesMetabolites", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[161]:=",
 CellID->1862570155],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.32665866089642104`"}], ",", 
              RowBox[{"-", "0.24484346068429885`"}], ",", 
              "0.03077460777441865`", ",", 
              RowBox[{"-", "0.11284688855970915`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6407940659720814`"}], ",", 
              RowBox[{"-", "0.16561264066131298`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.3404546845684606`"}], ",", 
              RowBox[{"-", "0.14390369162531425`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4599"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[161], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[161]=",
 CellID->530691439]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Metabolome Time Series", \
"Subsubsection",
 CellID->1412731195],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->966741969],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedMetabolitesCompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "metabolitesCompared"}], "]"}]}]], "Input",
 CellLabel->"In[274]:=",
 CellID->170999781],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3437843266552544`"}], ",", 
              RowBox[{"-", "0.2576798179368774`"}], ",", 
              "0.0323880217434761`", ",", 
              RowBox[{"-", "0.11876308894482825`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6743888433582577`"}], ",", 
              RowBox[{"-", "0.17429518017096568`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.35830363159453466`"}], ",", 
              RowBox[{"-", "0.1514481005734021`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4600"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 274, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 274, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 274, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[274], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[274]=",
 CellID->1856841682]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->245953314],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolomeFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedMetabolitesCompared", "]"}]}]], "Input",
 CellLabel->"In[275]:=",
 CellID->1978811570],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3437843266552544`"}], ",", 
              RowBox[{"-", "0.2576798179368774`"}], ",", 
              "0.0323880217434761`", ",", 
              RowBox[{"-", "0.11876308894482825`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6743888433582577`"}], ",", 
              RowBox[{"-", "0.17429518017096568`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.35830363159453466`"}], ",", 
              RowBox[{"-", "0.1514481005734021`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4600"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 275, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 275, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 275, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[275], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[275]=",
 CellID->1324492706]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Metabolome Data", "Subsection",
 CellID->453326653],

Cell["\<\
We also would like to create a resampled distribution for the metabolome \
dataset prior to classification and clustering. In this subsection we first \
resample the imported metabolome dataset. Then, we carry out the full \
analysis in this \"bootstrap\" dataset, to create a set of random metabolome \
time series. This bootstrap distribution of time series will be used to \
provide the cutoffs used in the time series classification in the following \
subsection.\
\>", "Text",
 CellID->184556424],

Cell[CellGroupData[{

Cell["Resampling the Proteome Data", "Subsubsection",
 CellID->633718938],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->1542785493],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"metabolitesExample", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[164]:=",
 CellID->878226973],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"88478", ",", "100725", ",", "59680"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99998"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"44327", ",", "153862", ",", "33442"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid\"\>", 
                    "\[Ellipsis]", "\<\".87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[164], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[164]=",
 CellID->1614351122]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Metabolome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->360522749],

Cell["\<\
We implement a Median calculation, and ignoring entries with missing and \
values of 1 for the bootstrap set:\
\>", "MathCaption",
 CellID->677226397],

Cell[BoxData[
 RowBox[{
  RowBox[{"metaboliteBootstrapMedians", "=", 
   RowBox[{"MeasurementApplier", "[", 
    RowBox[{"Median", ",", "metabolitesBootstrap", ",", 
     RowBox[{"IgnorePattern", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"_Missing", "|", " ", "1", "|", "1."}], ")"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[165]:=",
 CellID->480725279],

Cell[TextData[{
 "We apply a Box-Cox transformation to the bootstrap metabolite median data \
in the OmicsObject, which is now the first list first component for each \
identifier. The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->700277754],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedBootstrapMetaboliteData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"metaboliteBootstrapMedians", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[166]:=",
 CellID->1357825918],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2871523055287482`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2871523055287482],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1877585153],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.28037607704250345`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.28037607704250345`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->163355591],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2763466764965233`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2763466764965233],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->259759008],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26024284466383885`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26024284466383885`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->778641117],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27025675415129474`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27025675415129474`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->617410823],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2739743911493624`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2739743911493624],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->71021389],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2947078607539085`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2947078607539085],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->901761449],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2650660721998507`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2650660721998507],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->932516019],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2801283174874604`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2801283174874604],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1175383913],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26904171465531007`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26904171465531007`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->290081537],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2651084328101397`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2651084328101397],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1628114812],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26292251438570274`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26292251438570274`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->458717401]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3502234334097394`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"99996"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99999", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3211903759895276`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid [ \"\>", 
                    "\[Ellipsis]", "\<\"96.87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[166], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[166]=",
 CellID->197065877]
}, Open  ]],

Cell["We may also wish to standardize the distributions:", "MathCaption",
 CellID->1180721070],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesBootstrapStandardized", "=", 
  RowBox[{"Returner", "[", 
   RowBox[{"transformedBootstrapMetaboliteData", ",", 
    RowBox[{"Applier", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StandardizeExtended", "[", 
        RowBox[{"#", ",", "Mean", ",", "StandardDeviation"}], "]"}], "&"}], 
      ",", "transformedBootstrapMetaboliteData", ",", 
      RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
      RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}], ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[167]:=",
 CellID->1630125210],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.023749550672516283`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"99996"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99999", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.7142620049001477`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid \"\>", 
                    "\[Ellipsis]", "\<\".87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[167], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[167]=",
 CellID->666411065]
}, Open  ]],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys with labels corresponding to days:"
}], "MathCaption",
 CellID->314732997],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapLongitudinal", "=", 
   RowBox[{"KeyMap", "[", 
    RowBox[{"sampleToDays", ",", "metabolitesBootstrapStandardized"}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[168]:=",
 CellID->465258018],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->1296207012],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetaboliteBootstrapData", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesBootstrapLongitudinal", "]"}]}]], "Input",\

 CellLabel->"In[169]:=",
 CellID->1277135516],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380"}], 
  "}"}]], "Output",
 CellLabel->"Out[169]=",
 CellID->1243550350]
}, Open  ]],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantAssociator"]], 
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append the \"186\", \"329\" and \"400\" missing days to the \
transformed bootstrap data:"
}], "MathCaption",
 CellID->115749397],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapLongitudinalEnlarged", "=", 
   RowBox[{"ConstantAssociator", "[", 
    RowBox[{"metabolitesBootstrapLongitudinal", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<186\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}], ",", 
       RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}], ",", 
       RowBox[{"\"\<400\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[170]:=",
 CellID->1927414844],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->889199561],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetabolitesBootstrap", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesBootstrapLongitudinalEnlarged", 
   "]"}]}]], "Input",
 CellLabel->"In[171]:=",
 CellID->438322254],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[171]=",
 CellID->1039879846]
}, Open  ]],

Cell[TextData[{
 "We next remove values that have been tagged overall as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Additionally we remove data where the reference healthy sample \"255\
\" was missing. We use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for this implementation:"
}], "MathCaption",
 CellID->107474856],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"filteredMetaboliteBootstrapData", "=", 
   RowBox[{"FilterMissing", "[", 
    RowBox[{"metabolitesBootstrapLongitudinalEnlarged", ",", 
     RowBox[{"3", "/", "4"}], ",", 
     RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[172]:=",
 CellID->1335914459],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.651], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {4., 75579.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{35.65072057646118, 
          75.1579263410729}, {-48.97193256023675, 68.30012181935953}}],
        StatusArea[#, 75579]& ,
        TagBoxNote->"75579"],
       StyleBox["75579", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[75579, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {5., 21924.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{74.6579263410729, 114.1651321056846}, {
          33.926816797881756`, 68.30012181935953}}],
        StatusArea[#, 21924]& ,
        TagBoxNote->"21924"],
       StyleBox["21924", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21924, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5., 0}, {6., 2352.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{113.6651321056846, 153.1723378702963}, {
          64.16620403927763, 68.30012181935953}}],
        StatusArea[#, 2352]& ,
        TagBoxNote->"2352"],
       StyleBox["2352", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2352, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6., 0}, {7., 142.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{152.6723378702963, 192.17954363490804`}, {
          67.58072712345323, 68.30012181935953}}],
        StatusArea[#, 142]& ,
        TagBoxNote->"142"],
       StyleBox["142", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7., 0}, {8., 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{191.67954363490804`, 231.18674939951973`}, {
          67.79548672015025, 68.30012181935953}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{2.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{3., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->1038652436],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "75579"}], ",", 
     RowBox[{"4", "\[Rule]", "21924"}], ",", 
     RowBox[{"5", "\[Rule]", "2352"}], ",", 
     RowBox[{"6", "\[Rule]", "142"}], ",", 
     RowBox[{"7", "\[Rule]", "3"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->1884409036],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$593535$593641 = False, 
       DynamicChart`click$593540$593641 = False, 
       DynamicChart`click$593545$593641 = False, 
       DynamicChart`click$593550$593641 = False, 
       DynamicChart`click$593555$593641 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.6071759697234667`, 
                    3.141592653589793}]}], {}}, StatusArea[#, 75579]& , 
                    TagBoxNote -> "75579"], 
                   StyleBox["75579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[75579, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593535$593641, 
                    FEPrivate`Not[DynamicChart`click$593535$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593535$593641, {{{1., 0}, {0, 1.}}, {
                   0.1439702482353572, 0.13882567350115624`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593535$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.984701516469519, -1.6071759697234667`}]}], {}}, 
                    StatusArea[#, 21924]& , TagBoxNote -> "21924"], 
                   StyleBox["21924", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[21924, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593540$593641, 
                    FEPrivate`Not[DynamicChart`click$593540$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593540$593641, {{{1., 0}, {
                    0, 1.}}, {-0.1326484068914845, -0.1496809946157199}}, {{1,
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593540$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.132482034894383, -2.984701516469519}]}], {}}, 
                    StatusArea[#, 2352]& , TagBoxNote -> "2352"], 
                   StyleBox["2352", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2352, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593545$593641, 
                    FEPrivate`Not[DynamicChart`click$593545$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593545$593641, {{{1., 0}, {
                    0, 1.}}, {-0.19931148083858252`, \
-0.016581121974442822`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593545$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 
                    1., {-3.1414041580305785`, -3.132482034894383}]}], {}}, 
                    StatusArea[#, 142]& , TagBoxNote -> "142"], 
                   StyleBox["142", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[142, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593550$593641, 
                    FEPrivate`Not[DynamicChart`click$593550$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593550$593641, {{{1., 0}, {
                    0, 1.}}, {-0.19999783816574662`, \
-0.0009299080749361384}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593550$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.1414041580305785`}]}], {}}, 
                    StatusArea[#, 3]& , TagBoxNote -> "3"], 
                   StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593555$593641, 
                    FEPrivate`Not[DynamicChart`click$593555$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593555$593641, {{{1., 0}, {
                    0, 1.}}, {-0.1999999991117356, \
-0.000018849555893581826`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$593555$593641}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["75579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.47990082745119067`, 
                    0.46275224500385403`}]}}}, StatusArea[#, 75579]& , 
                TagBoxNote -> "75579"], 
               StyleBox["75579", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[75579, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593535$593641, 
                 FEPrivate`Not[DynamicChart`click$593535$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593535$593641, {{{1., 0}, {0, 1.}}, {
               0.1439702482353572, 0.13882567350115624`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593535$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["21924", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.4421613563049483, \
-0.4989366487190663}]}}}, StatusArea[#, 21924]& , TagBoxNote -> "21924"], 
               StyleBox["21924", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[21924, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593540$593641, 
                 FEPrivate`Not[DynamicChart`click$593540$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593540$593641, {{{1., 0}, {
                0, 1.}}, {-0.1326484068914845, -0.1496809946157199}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593540$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2352", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6643716027952751, \
-0.05527040658147607}]}}}, StatusArea[#, 2352]& , TagBoxNote -> "2352"], 
               StyleBox["2352", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2352, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593545$593641, 
                 FEPrivate`Not[DynamicChart`click$593545$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593545$593641, {{{1., 0}, {
                0, 1.}}, {-0.19931148083858252`, -0.016581121974442822`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593545$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["142", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666594605524887, \
-0.003099693583120461}]}}}, StatusArea[#, 142]& , TagBoxNote -> "142"], 
               StyleBox["142", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[142, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593550$593641, 
                 FEPrivate`Not[DynamicChart`click$593550$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593550$593641, {{{1., 0}, {
                0, 1.}}, {-0.19999783816574662`, -0.0009299080749361384}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593550$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666666637057853, \
-0.00006283185297860608}]}}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
               StyleBox["3", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[3, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593555$593641, 
                 FEPrivate`Not[DynamicChart`click$593555$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593555$593641, {{{1., 0}, {
                0, 1.}}, {-0.1999999991117356, -0.000018849555893581826`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$593555$593641}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}], 
   FormBox[
    FormBox[
     TemplateBox[{"3", "4", "5", "6", "7"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1., 0.544, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.6754608, 0.4848, 0.7224792]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->173842096]
}, Open  ]]
}, Open  ]],

Cell["\<\
For each bootstrap metabolite feature we now extract a time series (list of \
values) corresponding to the set of times:\
\>", "MathCaption",
 CellID->40883495],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeSeriesMetabolitesBootstrap", "=", 
   RowBox[{
   "CreateTimeSeries", "[", "filteredMetaboliteBootstrapData", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[173]:=",
 CellID->2081617072],

Cell["\<\
We compare every value in each bootstrap series to the healthy \"255\" time \
point, which is the second element in each series: \
\>", "MathCaption",
 CellID->1475115608],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapCompared", "=", 
   RowBox[{"SeriesInternalCompare", "[", 
    RowBox[{"timeSeriesMetabolitesBootstrap", ",", 
     RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[174]:=",
 CellID->1716802688],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->454276768],

Cell[BoxData[
 RowBox[{
  RowBox[{"normedMetabolitesBootstrapCompared", "=", 
   RowBox[{"SeriesApplier", "[", 
    RowBox[{"Normalize", ",", "metabolitesBootstrapCompared"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[175]:=",
 CellID->725274691],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1396633943],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolomeBootstrapFinalTimeSeries", "=", 
   RowBox[{
   "ConstantSeriesClean", "[", "normedMetabolitesBootstrapCompared", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[176]:=",
 CellID->1230418291]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Metabolome Time Series", "Subsection",
 CellID->298821825],

Cell[TextData[{
 "In this subsection we will classify the metabolome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileEstimator"]], 
    "paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for the \"LombScargle\" method to provide a cutoff for the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " inputs."
}], "Text",
 CellID->1481646089],

Cell["\<\
First, we estimate for the \"LombScargle\" Method, 0.95 quantile cutoff from \
the bootstrap metabolome data:\
\>", "MathCaption",
 CellID->1952930858],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95Metabolites", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "metabolomeBootstrapFinalTimeSeries", ",", "timesMetabolitesBootstrap"}], 
   "]"}]}]], "Input",
 CellLabel->"In[276]:=",
 CellID->768869658],

Cell[BoxData["0.8461247616777212`"], "Output",
 CellLabel->"Out[276]=",
 CellID->1856700619]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
proteome data:\
\>", "MathCaption",
 CellID->1337236679],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95MetabolitesSpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "metabolomeBootstrapFinalTimeSeries", ",", "timesMetabolitesBootstrap", 
    ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[277]:=",
 CellID->1520498098],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"12", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"0.6705198068392632`", ",", 
     RowBox[{"-", "0.651832513904884`"}]}], "}"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[277]=",
 CellID->1886752990]
}, Open  ]],

Cell["\<\
Now we can classify the proteome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1474915870],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metaboliteClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"metabolomeFinalTimeSeries", ",", "timesMetabolites", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95Metabolites"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95MetabolitesSpikes"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[278]:=",
 CellID->507289769],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[278]:=",
 CellID->1019182225],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "1514.0966`", ",", "0.36623535`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.15009402640884575`", ",", "0.15075945952409445`", ",", 
                   "0.33651460690487767`", ",", "0.1975579977785776`", ",", 
                   "0.43038474234090673`", ",", "0.6678462629237746`", ",", 
                   "0.41379036735122116`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
                   TemplateBox[{"12"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"Missing", "[", "]"}]}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"134"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"6"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 278, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 278, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 278, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[278], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[278]=",
 CellID->1066388514]
}, Open  ]],

Cell[TextData[{
 "As discussed above, the default output for TimeSeriesClassification is an \
",
 ButtonBox["Association",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Association"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". "
}], "Text",
 CellID->754816834],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->1020626209],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "metaboliteClassification", "]"}]], "Input",
 CellLabel->"In[180]:=",
 CellID->1712806074],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", 
   ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[180]=",
 CellID->497917949]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->1056863292],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "metaboliteClassification"}]], "Input",
 CellLabel->"In[279]:=",
 CellID->864104307],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "136"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "713"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "63"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "38"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "43"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "15"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "33"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[279]=",
 CellID->2040720583]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->575017700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "metaboliteClassification"}]], "Input",
 CellLabel->"In[280]:=",
 CellID->646072400],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"373.8593`", ",", "0.4113235`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C11821\"\>", ",", "184.0236`", ",", "0.6534444`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"221.1087`", ",", "10.306158`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C18218\"\>", ",", "272.2353`", ",", "12.773695`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"294.1655`", ",", "13.049499`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"631.3846`", ",", "13.522097`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"563.3196`", ",", "13.700788`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"779.6037`", ",", "13.962242`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"362.2657`", ",", "14.001`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C17873\"\>", ",", "384.3602`", ",", "14.298198`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"390.2971`", ",", "14.359208`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"420.3606`", ",", "14.665766`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"434.3762`", ",", "14.779639`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"392.366`", ",", "15.017344`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"394.3811`", ",", "15.151882`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1599.146`", ",", "15.281029`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"693.6282`", ",", "15.692093`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"874.7147`", ",", "15.911758`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"281.9862`", ",", "0.39045456`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"504.3091`", ",", "14.391079`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"416.3126`", ",", "14.462658`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"735.5212`", ",", "15.179166`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"571.9606`", ",", "0.3881667`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"489.9575`", ",", "0.38891178`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"325.9501`", ",", "0.3924723`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"465.9127`", ",", "0.39305556`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"383.9092`", ",", "0.39772224`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"301.9058`", ",", "0.40786114`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"219.9025`", ",", "0.4121111`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"161.944`", ",", "0.4130858`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"139.0609`", ",", "0.45847225`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"115.0636`", ",", "0.4639722`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"71.074`", ",", "0.48255876`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"253.165`", ",", "9.127285`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"298.1321`", ",", "9.309667`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C20605\"\>", ",", "411.1791`", ",", "9.316696`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"440.2009`", ",", "11.290919`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"355.2179`", ",", "12.744277`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"338.2438`", ",", "12.854486`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1061.1475`", ",", "13.061242`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"210.198`", ",", "13.161266`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"501.3666`", ",", "13.296033`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"594.3745`", ",", "13.370138`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1538.0292`", ",", "13.379565`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"404.3139`", ",", "13.602781`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"692.323`", ",", "13.76518`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"670.265`", ",", "13.873167`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"814.5844`", ",", "14.151257`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"366.3494`", ",", "14.30147`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"442.4017`", ",", "14.35682`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"406.3808`", ",", "14.358058`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"278.1517`", ",", "14.363973`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C19658\"\>", ",", "344.2712`", ",", "14.433056`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"420.3577`", ",", "14.4446125`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"311.3186`", ",", "14.611917`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"791.5832`", ",", "15.4236`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1553.1772`", ",", "15.442857`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1545.174`", ",", "15.501686`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"352.0515`", ",", "0.53367996`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C17237\"\>", ",", "254.0726`", ",", "12.292558`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"336.228`", ",", "12.510321`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"638.4015`", ",", "13.413879`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"668.3243`", ",", "13.987971`", ",", "\<\"Meta\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[280]=",
 CellID->1348085108]
}, Open  ]],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["True"]], "paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->861507568],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"metabolomeFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesMetabolites", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[183]:=",
 CellID->1022947302],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[183]=",
 CellID->603088833]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combined Data Clustering", "Section",
 CellID->1340833355],

Cell[TextData[{
 "In this section we will combine the omics data classes from the individual \
classifications above using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["JoinNestedAssociations"]], 
    "paclet:MathIOmica/ref/JoinNestedAssociations"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "  and hierarchically cluster the information to obtain a second level of \
classification using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will visualize the results in the following section."
}], "Text",
 CellID->834349127],

Cell[CellGroupData[{

Cell["Combining Multi-omics Classified Data", "Subsection",
 CellID->1502510612],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["JoinNestedAssociations",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/JoinNestedAssociations"], "[", 
     StyleBox["associationList", "TI"], "]"}], Cell[TextData[{
     "merges the nested ",
     ButtonBox["associationList (",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/associationList"],
     "an association of associations",
     ButtonBox[")",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/associationList"],
     " by joining the inner associations for each matching key."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1289482141],

Cell["Joining classification data.", "Caption",
 CellID->2068861910],

Cell[TextData[{
 "We combine the classification data using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["JoinNestedAssociations"]], 
    "paclet:MathIOmica/ref/JoinNestedAssociations"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->681556684],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"combinedClassification", "=", 
  RowBox[{"JoinNestedAssociations", "[", 
   RowBox[{"{", 
    RowBox[{
    "rnaClassification", ",", "proteinClassification", ",", 
     "metaboliteClassification"}], " ", "}"}], "]"}]}]], "Input",
 CellLabel->"In[281]:=",
 CellID->245414890],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.08553735041954855`", ",", "0.2041353122187633`", ",", 
                   "0.21930279158524527`", ",", "0.3784958694491304`", ",", 
                   "0.5848999163284979`", ",", "0.34601221698539536`", ",", 
                   "0.5457352214922402`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
                   TemplateBox[{"7"},
                    "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
                   "0.07591897179810148`", ",", "0.`"}], "}"}]}], "}"}]}], 
              ",", 
              TemplateBox[{"1081"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}], ",", 
           
           TemplateBox[{"7"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 281, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 281, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 281, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[281], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[281]=",
 CellID->808884430]
}, Open  ]],

Cell["We can check the keys before and after the combination:", "MathCaption",
 CellID->1179244319],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Keys", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "rnaClassification", ",", "proteinClassification", ",", 
    "metaboliteClassification"}], " ", "}"}]}]], "Input",
 CellLabel->"In[282]:=",
 CellID->764718377],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", 
     ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f2\"\>", ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", 
     ",", "\<\"f7\"\>"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[282]=",
 CellID->729829850]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "combinedClassification"}]], "Input",
 CellLabel->"In[283]:=",
 CellID->432691270],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[283]=",
 CellID->1950743689]
}, Open  ]],

Cell["\<\
We can also check the membership counts before and after the combination:\
\>", "MathCaption",
 CellID->2090161703],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Length"}], "]"}], "@", "#"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "rnaClassification", ",", "proteinClassification", ",", 
    "metaboliteClassification"}], " ", "}"}]}]], "Input",
 CellLabel->"In[284]:=",
 CellID->810244695],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "822"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "5963"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "116"}], ",", 
     RowBox[{"\<\"f2\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
     RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "35"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "13"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "61"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "124"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "48"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "77"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "36"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "18"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "136"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "713"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "63"}], ",", 
     RowBox[{"\<\"f2\"\>", "\[Rule]", "38"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "43"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "15"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "33"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[284]=",
 CellID->1387605075]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "combinedClassification"}]], "Input",
 CellLabel->"In[285]:=",
 CellID->75235690],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "1082"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "6724"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "256"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "41"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "85"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "64"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "112"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[285]=",
 CellID->916666016]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clustering of Classified Data", "Subsection",
 CellID->1764557057],

Cell[TextData[{
 "Now that we have combined the classes for the various omics, we can cluster \
them together to obtain the various trends using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". A two-tier hierarchical clustering of the data is performed, using a set \
of two classification vectors, ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"classification", " ", 
      SubscriptBox["vector", "1"]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"classification", " ", 
      SubscriptBox["vector", "2"]}], "}"}]}], "}"}]], "InlineFormula"],
 " for each time series to cluster the data pairwise. The vectors are \
typically the output from ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". Similarities at each clustering tier are then computed using in \
succession from each time series first ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"classification", " ", 
    SubscriptBox["vector", "1"]}], "}"}]], "InlineFormula"],
 ", and subsequently ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"classification", " ", 
    SubscriptBox["vector", "2"]}], "}"}]], "InlineFormula"],
 " (which corresponds to the ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"input", " ", "data", " ", "time", " ", "series"}], "}"}]], 
  "InlineFormula"],
 " if the input is from ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ").  "
}], "Text",
 CellID->32166003],

Cell[TextData[{
 "The number of groups and subgroups for each tier of clustering is \
automatically determined by using internally the \"Silhouette\" (default) or \
\"Gap\" as \"SignificanceTest\" methods (see also ",
 ButtonBox["Partitioning Data into Clusters",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/PartitioningDataIntoClusters"],
 ")."
}], "Text",
 CellID->58096227],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesClusters",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClusters"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "performs clustering of time series data using two tiers of hierarchical \
clustering to identify groups and subgroups in the data. TimeSeriesClusters \
takes as input series data, where each data is comprised of two lists and \
performs clustering of the data to identify groups and subgroups based on \
similarities between the input series. The form of the input data is either \
an association of classes and members, where each member must have a list of \
two components, typically two vectors used in classification: ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"classification", " ", 
          SubscriptBox["vector", "1"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"classification", " ", 
          SubscriptBox["vector", "2"]}], "}"}]}], "}"}]], "InlineFormula"],
     ".\n",
     StyleBox["I", "Notes"],
     "n the most common case of using as input data that came from performing \
a ",
     ButtonBox["TimeSeriesClassification",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClassification"],
     ", the ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{"classification", " ", 
        SubscriptBox["vector", "2"]}], "}"}]], "InlineFormula"],
     " will correspond to input original data for the corresponding time \
series."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1813135289],

Cell["Clustering of classified time series.", "Caption",
 CellID->571851293],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"ClusterLabeling", "\"\<\>\"", Cell["\<\
Additional label to append to each cluster being computed to prepend to the \
inbuilt G#S# labeling.\
\>", "TableText"]},
   {"DendrogramPlotOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Options passed to the DendrogramPlot function used internally to generate the \
dendrograms.\
\>", "TableText"]},
   {
    ButtonBox["DistanceFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/DistanceFunction"], 
    ButtonBox["EuclideanDistance",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/EuclideanDistance"], Cell[TextData[StyleBox[
    "Distance function to be used in calculating the similarities between \
different time series in the first tier of clustering.", "Notes"]], 
     "TableText"]},
   {"LinkageMeasure", "\"\<Average\>\"", Cell["\<\
Which linkage measure to use in computing fusion coefficients.\
\>", "TableText"]},
   {"PrintDendrograms", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[
    "Option to print dendrograms for the clustering computed.", 
     "TableText"]},
   {"ReturnDendrograms", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[
    "Option to return the dendrograms as output.", "TableText"]},
   {"SignificanceCriterion", "\"\<Silhouette\>\"", Cell["\<\
Method used in determining the number of groups and subgroups at each tier of \
clustering.\
\>", "TableText"]},
   {"SingleAssociationLabel", "\"\<1\>\"", Cell["\<\
Label to use in case a list is provided to name the class of data produced.\
\>", "TableText"]},
   {"SubclusteringDistanceFunction", 
    ButtonBox["EuclideanDistance",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/EuclideanDistance"], Cell[TextData[StyleBox[
    "Distance function to be used in calculating the similarities between \
different time series in the second tier of clustering.", "Notes"]], 
     "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1454392793],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1320801797],

Cell["\<\
The output of TimeSeriesClusters is always an association of associations, \
providing a summary of the two tier clustering results for each class \
provided in the input. The output has the form:\
\>", "Text",
 CellID->416113495],

Cell[TextData[Cell[BoxData[
 RowBox[{"output", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"<|", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "1"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "11"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "12"], "..."}]}], "}"}]}], ",",
        " ", "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", "11"], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "12"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "11"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "12"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "11"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "11"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "2"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "21"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "22"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", "21"], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "22"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "21"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "22"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "21"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "21"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "M"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "M1"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "M2"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", 
           RowBox[{" ", "M1"}]], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "M2"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["subsplitClusters", "M1"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["subsplitClusters", "M2"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "M1"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "M1"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "|>"}]}]]]], "Text",
 CellID->1412755833],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<Cluster\>\"", Cell[TextData[{
     "Cluster generated using the input ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{"classification", " ", 
        SubscriptBox["vector", "1"]}], "}"}]]],
     " for similarity calculations. "
    }], "TableText"]},
   {"\"\<InitialSplitCluster\>\"", Cell["\<\
Clusters resulting from splitting the initial cluster (reported by key \
\"Cluster\") into groups using the SignificanceCriterion to determine the \
number of clusters.\
\>", "TableText"]},
   {"\"\<IntermediateClusters\>\"", Cell["\<\
Aglomerative clustering result of hierarchical clustering of each of the \
initial split clusters (reported by \"InitialSplitCluster\")\
\>", "TableText"]},
   {"\"\<SubsplitClusters\>\"", Cell["\<\
Custers generated from splitting the clusters following the second tier \
clustering (reported by \"IntermediateClusters\") into subgroups using the \
SignificanceCriterion to determine the number of clusters.\
\>", "TableText"]},
   {"\"\<Data\>\"", Cell[TextData[{
     "Data reported in the order of clustering results as rules of ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"classification", " ", 
         SubscriptBox["vector", "2"]}], "}"}], "\[Rule]", " ", "label"}]]],
     " for each time series, sorted in order of the clustering results."
    }], "TableText"]},
   {"\"\<GroupAssociations\>\"", Cell["\<\
Association denoting membership of each initial data label to groups and \
subgroups generated by the two tier clustering.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1608083999],

Cell[TextData[{
 "Output keys for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provide clustering information."
}], "Caption",
 CellID->986073698],

Cell["\<\
We now cluster our combined data (a printout of the clusters is included as a \
default option):\
\>", "MathCaption",
 CellID->565513990],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"combinedClusters", "=", 
  RowBox[{
  "TimeSeriesClusters", "[", "combinedClassification", "]"}]}]], "Input",
 CellLabel->"In[286]:=",
 CellID->1978491955],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"5"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f6\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"\<\"Cluster\"\>", "\[Rule]", 
               RowBox[{"Cluster", "[", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "]"}]}], ",", 
              TemplateBox[{"4"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"\<\"GroupAssociations\"\>", "\[Rule]", 
               RowBox[{"\[LeftAssociation]", 
                RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\<\"MIR6723\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"ZNF324\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"CBX6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
                   
                   TemplateBox[{"106"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"O60884\"\>", ",", "\<\"Protein\"\>"}], "}"}],
                    ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"RTFDC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "246.1213`", ",", "0.9403793`", ",", "\<\"Meta\"\>"}], 
                    "}"}]}], "}"}]}], "\[RightAssociation]"}]}]}], 
             "\[RightAssociation]"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 286, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 286, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 286, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[286], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[286]=",
 CellID->92211928]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization", "Section",
 CellID->1200455778],

Cell[TextData[{
 "After our data have been clustered, we would like to visualise the results \
in heatmaps and dendrograms. For the two-tier clustering we have performed \
MathIOmica can output all the clusterings in labeled dendrograms and heatmaps \
using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesDendrogramsHeatmaps"]], 
    "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", which iteratively calls ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesDendrogramHeatmap"]], 
    "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " on each class."
}], "Text",
 CellID->944139540],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesDendrogramsHeatmaps",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "generates  dendrograms and associated heatmap plots for clustered time \
series data, typically the output of all classes generated by implementing  ",
     
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesClusters"]], 
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". "
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["TimeSeriesDendrogramHeatmap",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "generates a dendrogram and heatmap plot for one set of time series ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " clusters, typically the output of a single class of  ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesClusters"]], 
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->581300403],

Cell["Visualizing the results of classification.", "Caption",
 CellID->1012763018],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"FunctionOptions", 
    RowBox[{"{", 
     RowBox[{
      ButtonBox["ImageSize",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/ImageSize"], " ", "->", " ", "200"}], "}"}], 
    Cell[TextData[{
     "Options list passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesDendrogramHeatmap"]], 
        "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2015411944],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesDendrogramsHeatmaps"]], 
    "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->768978677],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"ColorBlending", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CMYKColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "1", ",", " ", "0"}], "]"}], ",",
       " ", 
      RowBox[{"CMYKColor", "[", 
       RowBox[{"0", ",", " ", "1", ",", " ", "1", ",", " ", "0"}], "]"}]}], 
     "}"}], Cell[TextData[{
     "Color scheme for the plot. The color list is passed to an internal ",
     ButtonBox["Blend",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Blend"],
     " function to create a ",
     ButtonBox["ColorFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ColorFunction"],
     " for an internal ",
     ButtonBox["ArrayPlot function",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ArrayPlot"],
     "."
    }], "TableText"]},
   {"DendrogramColor", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"1", ",", " ", "1", ",", " ", "0"}], "]"}], Cell[
    "Color to highlight the dendrograms.", "TableText"]},
   {"FrameName", "\"\<Dendrogram and Heatmap\>\"", Cell[
    "Label for plot frame.", "TableText"]},
   {"GroupSubSize", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", " ", "0.1"}], "}"}], Cell["\<\
Relative size of group and subgroup reference column in plot.\
\>", "TableText"]},
   {"HorizontalAxisName", "\"\<Time (arbitrary units)\>\"", Cell[
    "Label for the horizontal heatmap axis.", "TableText"]},
   {"HorizontalLabels", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[
    "Labels for horizontal axis for each column.", "TableText"]},
   {"IndexColor", "\"\<DeepSeaColors\>\"", Cell[
    "Choice of color for labeling the group/subgroup index.", "TableText"]},
   {
    ButtonBox["ImageSize",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImageSize"], "200", Cell[TextData[{
     ButtonBox["ImageSize",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ImageSize"],
     " is an option that specifies the overall size of an image to display \
for an object. "
    }], "TableText"]},
   {"ScaleShift", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "Option to reset the blend of the colors used overall. The option is a \
real positive number, and is used as a multiplier for an internal ",
     ButtonBox["Blend",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Blend"],
     " function's second argument."
    }], "TableText"]},
   {"VerticalLabels", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[
    "Labels for vertical axis for each row.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1299131947],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesDendrogramHeatmap"]], 
    "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1044394180],

Cell["\<\
For each class a separate plot is generated: dendrograms are represented on \
the left, and are highlighted to represent the grouping level. The G, S, \
columns represent the groupings and subgroupings generated by the clustering. \
 The legend shows the corresponding groupings and subgrouping, and the number \
of elements in each group subgroup.\
\>", "MathCaption",
 CellID->1376228890],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimeSeriesDendrogramsHeatmaps", "[", "combinedClusters", 
  "]"}]], "Input",
 CellLabel->"In[287]:=",
 CellID->1880076040],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QeUE9Xbx/FBehcBqaIUaVKUooB0EQuISBMRRUG6IiAgVQWkV0EREERB
pKt0QTpIlc5K71V6XxbY3ffJ3r/zjpPCJJPdbLLfz3nOnuzkZnInk0zml2m5
m35cp8VDmqZ9kkL+1Hn/0yodO77fre7D8k/9dp+0btmu+QevtOvUvGXzjmWa
JpaBSbJp2qtJNc1xOxoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AACIl7Zs2XL+/PlA9wIAAAAAAPji8OHDefPm1TQtSZIk7dq1M917//790/+6
ceNGQHoIAAAAAEAouXTp0rZt265cueLHcUqi1/6VOHHiU6dOGe/99ddf9Xv7
9Onjx+cFAAAAACBBuXr1ateuXTNnzqwH7SeeeOK99947ffq0/ZG3bdtWM9i+
fbvx3lhK9z169HjkXzNnzlQD79+/L9OlBmbJksVfzwUAAAAAQMCdOXMmR44c
mivp06cfP368zfGHhYVlyJBBjbBOnTqme2Mp3Rt/UnjnnXfUwI0bN+oDkyZN
6q/nAgAAAAAg4CpWrOgy2istWrSw/xQRERErV648cOCA811xkO4fffTRqKgo
GSjjJ90DAAAAAELPmTNn9MCbPHnycePG/fXXX3Pnzv3ggw8SJ05ctmxZCeaq
5cWLF3fGOHToUHTMzvy///778OHDFy9efPnyZdNoDx8+vNOV48ePm1q6S/f6
04kTJ06YHnX79u1NmzZJb7/99ts///zz+vXrpgamwwG2bNkiAytUqOAh3cs4
t2/fPn369KFDh86YMWPHjh2mBv/884/LCZGXSB9+9OjRB7ziAAAAAAD426JF
i/TAW6JECeNdu3fvPnfunP7vmDFjVLMsWbJ89dVXadKk0R+YKlUq/dh2pUqV
Ki73BChcuLCpAy7T/ZkzZ9Rp9pURI0YYHzJp0qSMGTMaR5s6deqxY8ca25jS
vYz5+vXrSZIkcZnuJdQ3adIkefLkpt5WqlRJXgS92fr16x966CF11yOPPCJh
Xw0fNGiQ/pD33nvP21kAAAAAAIBNu3btMubZDz74YO/evS5b6unenUWLFumN
3aX7QoUKmUbrnO4vX75cpEgRfWC3bt2M7d9//313HejZs6feTE/36pQCZcuW
nTt3rtxIlixZpkyZjOn+8OHDiRIlcjfO7NmzX716VR9tly5d9LsaNmwYHXOV
gYcfflgNkTFfvHjR1vwAAAAAAMB79+7dy5MnjynSVqtWbd68eepYdZ0p3adN
m7ZMmTKpU6fWh5QuXVpv/M477+Qz0OPzA9P9zZs3n3vuOX2I6aj/6dOn63cl
Tpz4hRdeqFGjhr5FPnny5BLVVUs93deqVUv+ShsZldyoWrWq9Fz777Z7yemq
cd68eWWEhQsXNk7pJ598ore8c+fOU089pd+1fPnynj176v9OmTLFX/MFAAAA
AACvrFy50hjSdRUqVNi3b5/ezJjuJVZfunRJBu7duzdlypT6cHVIvrMUKVJY
Sfc9evSoVq2a/m+9evUiIyONjY0/RPzxxx9q4Pbt2/WBAwcOVAP1dN+3b1/j
RA0YMEDdMKZ76XazZs3++usvfYja0K88//zzxj5IM/33BOlP+vTp1e3q1at7
+8oDAAAAAOBHO3fuNMZqXfLkyX/44QfVxpjujZfJq1+/vj586dKlLsdvMd0n
TpxYv12+fHn9hH7KpUuX9HtTp049xECP202aNFGN9XQ/atQo437+69atc073
yq5du2RUzZs3f/HFF/Pnz68/JHPmzKaWvXr1Mr1QqVKlOnLkiHcvOgAAAAAA
sWDr1q2SjvUkrqRNm1ZtpneX7o2Hok+YMMHlmC2meyOJ5Hfu3DG2XL16tcuW
RtWqVVON9XTfv3//zz77TN0uXLjwsWPHnNP9wYMHS5Ys6W6czr8D3L17N3v2
7MY2Q4YM8fVVBwAAAADA/y5fvty3b1/j6eWXLVsW7T7dt2nTRh/+22+/uRyn
D+le++8B7+LPP/98YLqvV6+eaqyn+88//3znzp3qdq9evfbv32/K7EeOHMma
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
sal+Cli6dKne8uTJk/qnSXr77LPPquycOHHisWPHGscZERFRqlQptcRr2rTp
+++/r2K1+qgK40Fn1jug9m5ScufOLUsheR3Uvx9++KHe7K+//lKfd+3fLWVC
/ZCur5nXq1fP+jwFEFjepnuLy1VZ5mTLlk21lMWpNCtatKgs0ORfWWQZT4L0
zTffqNUt/UDaB6b70aNHa//unL9p0ya5/dFHH0lC1/6b7i0u1oRaqsvqlvoe
kdUYdQYAIatGnvfjAhBnevbsqT7OFjcTv/POO9Jecr3au1iLCVayuiUZp1y5
csaWvXv31pdXZcuW1VfJnnrqqatXr+rNFi5cqMWchtT5udTyTbKhPkStXsqS
UC3c5Ia+0ijdmDx5smkMEovUkkfFrjx58shtCVCmZhKBVUaTBVrdunUlf8ki
S227yZgxo2kXKWmgJkSmV16N6tWrqzVAMXDgQGNL6yui0TGbtmWEqrEs0mW9
VCZNvQKydmr8CdcUrtVDXn/9decX0PoSW+K/cWxepXsPHYi2/DaI/vdb4/PP
P5dnly9BaaC+QUSGDBmMPwt7Nb984DndW++n6NChg7pLZn3JkiUfffRRfY44
p3uLKwOyaqE2m7744ov6x1be4erd4vz29kAzsP4oxHMe0r1+3OWhQ4fUEFkW
qYXS+PHj9bfTunXrVAiVRb3+WLX4FcmTJ//qq6/UjiiXLl2Sz7X6MBqfqFq1
alrM6fr1313/+ecfWUqoMbhM9/IZUT9ttWnTRlak1Y9aR48eNf4SWLNmTfVc
y5YtU0MuX74sHxAZKMuEgwcP6i3VKUTks3zgwAE1JCwsTBatMqXbtm0zvSzW
O7By5Up5ZWSxpu+xL/c2a9ZMi1nXPXLkiBqo0r2QBZS8UOpHFSELhMjIyO7d
u8vtnDlzup2FAOIZPd3Lmt7o/5Ivd+2/6d76clVUrly5SpUqsmzRf8mXJK42
yjRt2tS5J1u3blU9eeCe+StWrMifP7/aOb9z585azCmC1WqYMd1bXKxF/7v+
I1q1aqU/+6BBg9TAMWPGePWSAogl6lRLr776qsX2Kt0XL15c/sqKkCy41AGV
sugwbmKWrKGCSaNGjfSrh8ycOVNt6GnevLne0od0r9aLZHGkBh47dkwdU//Y
Y4+ZfjmUNUAZLosjtXRVlwKpX7++6YlatGihxWxYMW7WP378+AcffPDDDz8Y
W54+fVp14KefftIHytrazz//XKtWLVOutL4iKmQZrhakPXv21FcmZX1YZlD1
6tU9XPdE5UeX4dr6ElunvhG82jPfQwesvw2iDd8aEhb279+vBkrEVgO//vpr
vaX1+eUbK+neSj/Xrl2rtsLLi6OnfnmrqG9tU7r3amVg8+bN6teMoUOHRsfs
T6J+jXe5JuAB6T4keUj3+l1qe3R4eLj6MPbr18/UUh3KJKud+hC1+JUIbFwm
R8fsf6XGefHiRTVEljxqyKRJk0yjVb8Hukz3iumtbqSvXc+YMcM4XN7/2bNn
N61dq9/K2rZta2ypFrO9evUyjdliBxTn7VOycFPTNX36dDVEpXtZ+qm9iU6e
PCn/SifVsl1eQC3mR1TPTwQg/tCXP+7oyx+vlqvRrhYp4ssvv5SWBQsWdL7L
erqXlU+1heX333+XmJ87d265S50237Tvn5XFWvS/6z/O0/XCCy84r9UACJQS
JUqYVoEksIwwkDU6Y3uV7kXp0qUlq7obbZUqVaRNkSJFTLF05MiR6uH69hQf
0n3WrFn11UhFYpQarWmlUfKjZrgIqVqnSpUqlelypWpz/LPPPvvA4+J3796t
nmjOnDmeW3q1IiopWDXu06eP86g871bhIVxHW15i6/yb7q2/DaL//daoWbOm
qc9qy6BxZwPr88s3VtK9lX5WqlRJhkjuNp3OS53czPg96O3KgBgyZIiKWmFh
YZ06ddJi9jf2dr8F45qJVw9EfOYh3R8/flzdpX4d3bx5sxbzW5/zwnz79u1a
zE+j+hC1+C1UqJCppYquYteuXWqIenPKgs75Z0mX58zXw7VpnyKTYcOGSZtc
uXI5LxLV0S4FChTQh9SrV0+GvPnmm8Zm6ijUNm3amB5usQMm8l3566+/Dhgw
oGXLlmqh2r9/f3WXSvd6fpelrhZzchv1r3pt5WW3/lwAAktfqZMVyzb/pX5d
11fqvFquGt24cUPWZr/77rvOnTtXrFhRc/MboFfp/uDBg1rMpVLkb8+ePaPd
pHudh8Va9L/rP6bVWiF91mJ21nLXHwBxSaV749qOfGyN6/wZMmQwtlfpXuKP
yy2/OrVMmDBhgmn4nTt31MGPenTyId07r16KHDlyyF2Sm/Qh9+7dUzui67uG
yhB1xmbTokn6oDYx582b94svvti7d6+HSStTpowWs41V1h5nzZrl8ij+aC9X
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
e2z8+PGB7lccuXjx4kcffZQsWTJ98tOnT9+gQYMzZ874NkLSfZzxYd7NmzdP
tUySJMnNmzfjsrfxCukeAAAACDEjR47Uw1HmzJmLFi0qqUf9++mnnwa6d7Eu
PDy8ZMmSanqTJk1avHjxDBkyqH/lxrJly3wYJ+k+bvg27yIiIurWrZs3b95B
gwbFcYfjFdI9AAAAEEqWLl2qVu8liu7YsUMNvH37dq9evVKlSrVu3brAds9n
W7ZsadasmfPw3377rWfPnsYhgwcPlslPlizZTz/9dOPGDTVQXopy5cplyZLl
5MmTPjw76V6xPhd8ExvzLuEg3QMAAAAhIzIyslixYrJuX7Ro0WvXrpnuvXTp
kueHR0VFnTp1atOmTXv37r1//77LNjdv3ty6das080+PDe7cuSNjPn/+vMt7
f//992eeecZ5+DfffPPGG28Yh9SsWVNegYYNG5payovjrz3zw8PDpasXLlzw
/Ki7d+/u2bMnLCxMblh/rlu3bu3evVtytIfxHz16dPv27dIN66O1wvMsiPZm
LvgmNuadz+QTJHPh3Llzcfy8PiPdAwAAACFj9uzZat3+119/tdK+bdu26dKl
W7RokdyeMmVK/vz5jcfpmxovX768WLFi6vRlIlOmTD169JA8aGyzZMkSGWHG
jBmdnytDhgxy1+rVq/UhEydOlCHdunXbtWvXCy+8kDx5cjXmxx9/fN68eXqz
NWvWTJ48uWPHjjlz5pzspHHjxpI35Yb0X4XoV155RUZSqVIlz9PuVVdVupfJ
l6hetWpV/cCH3LlzL1iwwHkMFy9ebNmyZdKkSfXjwdMZvPPOO3rLEydOPPzw
wxUrVpTbZ8+elcnRHyUv9XfffWcc7fXr12WWpU+fXh9tmTJlJIHG9iyI9n4u
+MbivBNZs2ZN5+Stt95ybnnz5k3nlkZ79+41PWTWrFkFChRIlCiRfnjLgAED
3P3eFX+Q7gEAAICQ0bNnTxU5LZ4iXmKmtJdENmLECBUKJNHkypUrZcqU5cqV
M7bs3bu3apA6deqyZctKG/XvU089dfXqVb3ZwoUL1RHTzs+VOHFiuWv58uX6
EBWZs2XLpsKy3JD4rE4RIN2QqKiaffnlly+99NLTTz8tT/2Sk/z582fKlEnd
VhdEk/aqb61atTL2zcSHrgp1okJ3XVUiIiJKlSold6VJk6Zp06bvv/9+qlSp
1MPzxzCe/eDw4cMyPG/evBLtCxYsqJpJfpf0KjeWLl2qtzx58qT+sufLl+/Z
Z59VnZHejh07NlZngQ9zwR2J0v369XN3r8V5F+2U7tWjXn/9deeW4eHhEs9N
iV7/CUW6bdpH4u2339Zf5DfeeKNMmTLqF62XX37ZQ3/iA9I9AAAAEDIaNGgg
K/avvvqqxfYq3RcvXlz+FihQYPz48Wr/Z8mnR48e1Ztt3LhRBZxGjRrdunVL
DZw5c6YEPRnYvHlzvaVvkTlnzpwrV65UA48dO1a4cGEtZucB6Ybe2Po+4dJD
NQaRNm3adu3aHTx40PmBsddV6ZJ66gMHDqghYWFhEvBltNu2bTM9l0r3ktPV
xuI2bdqsXr1abSaWWWDcNULttS5pVD+53OXLlyVyysCUKVPq0xh70xXtjz3z
V61aJRPboUMHl/danHfOZITu0r2zyMjIunXrSnuZKRs2bDDeNXbsWPWDiXwW
9J/I1q1b9/DDD6vfwayMP1BI9wAAAEDIKFGihKzYt23bVh+yf//+EQaS5ozt
VboXpUuXlqjobrRVqlSRNkWKFJFYZBw+cuRI9XA9xvoQLbNmzXrx4kVjy7Vr
16rRzp07Vx/oVa68cuVK48aN9YMIJDXXqlVr48aNxjax11W18dc4F0TTpk1l
YK9evUzPpdK94iE8SuRXbWbMmGEcfvv27ezZs8twedLYnq5oPx13LyNJnjx5
x44dXd5rZd458yrdf/TRRyrCm44+CA8PVz9YOe9dMHToUBleuXJlK+MPFNI9
AAAAEDJUum/Tpo0+RMKgcZ0/Q4YMxvYq3adNm/bIkSMeRqv2fJ4wYYJp+J07
d9Q+59OmTVNDfIiWLk9EnyNHDrlr+PDh+hAfcuX+/fvlpVB5TZFEqf9A4d+u
Dhs2TB9Sr149GfLmm28am9WuXds0axQ93X/44Ycup0KR8UubXLlyOR9z0bdv
Xy1m14vYmC7jLIj231n1Fi1aJAG/U6dO7hp4nnfOrKd7dVp+MW7cONNdmzdv
1mLOZuD8S9f27dvlrixZsjxw/AFEugcAAABCRv369WXFvkaNGvqQPXv29I7R
smVLd+n+/fff9zDO48ePq7ywfv1653vVKfq7deum/vVXtCxTpozc9fHHH+tD
fM6VV65cGThwYKZMmdRUfPXVV7HR1Xbt2ulDJBHLEEmv+gbxc+fOqQO9J06c
aHq4nu7ldfYwFTKPpE316tWd7/rll1+0mFPw3b592+/TZZwF0ZbnQqQF8+bN
k0527tzZw1S7m3fOLKb7qVOnqnPlOe9EIcaPH6+eKJkTPTXH53Prke4BAACA
kNG9e3fNzVn1tm7d6i7du7yCue7YsWMqL5iOUFYk68ldekbzV7QsWrSo3NWj
Rw99iM2txhK0n3rqKRlnwYIF/dvVIkWKyF3Gq71funQpX758MvDRRx+V1Nm+
ffvMmTOrp9av4a7T073ni7m/99577tL93LlztZg92G/evOnH6XKeBdHW5sLO
nTs1b/zyyy8eJjza1bxzZiXdy4SrnN60aVOXDdRB96KFG867XsQrpHsAAAAg
ZOj74Ttfps3ndB8ZGal2kHY+Kvz+/ftp06Y13rV48WLVAdOV8qK9iZZ3795N
kyaN3DV16lR9oP19wseNG6fFHG2tdvD2S1cjIiLUsQnGrsrAatWqmTKsBE/j
iQp1FtP9oEGDtJhT6z/wrtibBdHW5sK9e/cOWDBt2jQt5nQBHva315nmnbMH
pvudO3eqA0xeffVV6aHLNuvWrVMv3alTpx7YpXiIdA8AAACEDInbktRk3b5U
qVKmzcQ+p3vx/PPPazFn3jMN/+6771SU2LNnjxqib7eVG8aWEyZMUMOtREt9
E2pYWJj8O3v27D59+kgMfPTRR/s4eeWVVwoUKCA3+vbtGx4eHh1zArRZs2Y5
T4W0kXE+8cQTfuzqmDFjjF1V1BnY2rVrd/78+WXLlq1evfqff/5x99paTPd/
/PGHy99tIiIicufOLcPr1avnx+kyzYJo7+eCZ9u2bXvkkUfeeust047uFued
M8/p/vjx4+rcg/IeVns4uCQfGXUAhedzIMRbpHsAAAAglMyfP1+t3hcvXnzX
rl1q4O3btzt27Ohzupc8qI5WbtOmjX6JtN9//13GJgMbNmyot7x27Zq6Wnqd
OnVUy1u3bqnTvrmLljLmFi1aXLlyRQ2UGKtGq8fV8ePHt2zZ8qWXXpLhLZ2U
LVs2V65c6rY818yZM9UTyaTJ5KtNvWfOnJFsqzayy3PZ6Wrz5s31U64tXbpU
XSitfv36xpdLQqv23wsFemAx3UdFRVWuXFma5ciRQz+BvARVdQ1EyaT6vI6N
WeDtXPA8ydu3b5doLz03RXvr886Zh3Qv80tdZS9v3rwefmZRBgwYoPrQp08f
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
r1tQs+ZzVavmypPnkf790xmra9e0GTNqNWtqDRtqjRp5XfXrOxK6c6VO7YjV
emw3lgzXS/516amntKJF/7+KFNGyZnX8LVbMuypUSEue/H8BP1GiRF988UVs
z98EnO4DH5qoOC7SvW9FugcA2ES6B7xyNcYVf7t8+ezRo2GLFi385Zef7Vff
vp/XqPFy/vx5nn32aZdVqtT/19NPZy1Y0LHdvGvX/1SbNpqk+2rVtBo1HBnf
23r5ZR/3k/csNtJ9kiRJ+vTpE9vvHNI9lXCKdO9b/fyWrer9ma0i3QNACCDd
A16ZMGHCyJEjh/tbv35vNmuWK3fubLVrZ7FfpUplKFQo1VNPJSldOpmpSpVK
9swzyfLm/f/KkydxzpyObeWmXeUl78vAlCkdO9L7VrEhNvbMz549u8yC2H7n
kO6phFMJNt3372arFr5qq2w+O+keAEIA6R6wLOratWMDB372xRcdPv/8Y/9W
p07P1a6tpUihVanihypUSMuXz7GZu1Qpc5Uo4djk/dhjWt68jjZSciNXLseG
bKkkSf5Tpr3lva1gkTNnzpEjR8b2u4d0TyWcCup0bycgj2ltq6Y2slU2J5x0
DwAhwLiKG+i+APFaRMTVMWPSN2yYonPnFJ9/nty/1blz4jfecKT7ypX9UOXL
O4J8sWJa8eLmKlzYsSu7JPfnn9cqVnRUhQqOkodI5c+v5c79v3r8ccee+alS
/f957PWz2auz3ulnwJMhUnKXNE6Z8n8l05I8uWMTedKkjqdLnDhQ2f3BuCIe
6Z7ybwV1ug9gLahhq75ua6tI9wAQAoyruIHuCxBI+/fvX79+/dq1a92dqm7l
yiXt2jlOMTdsmDZpkp/r22+1bt20smW1Jk1c17vvam++qTVoYKnq1dNq1dJe
ecVFVa3qCPgSukuW1J599j9VqpT2xBOOUK/+PvaYI927vLK8RHvj+e1VupeS
RK9Cvcr1erSP5+k+R44cpPvYq1EfaXbKZlwa3NlWBTzu+Vw2d9K2+exBne4D
+IYZ39xW2Xx20j0AhADjKm6g+wIEUocOHQoUKJAzZ868buTJk1vSbrNm2p49
2p07fq7wcO38eW3tWm3xYtc1b542bpz2zTeW6uuvHTV6tIsaONDxW8HDD2vZ
s5srUyZHBs+c2XFDP/peJvmRR8zXrVN/9VLb8SXdB9He+EbZsmXjuPvYq3mv
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
b27cuDFx4sTp06f70JmwsLCpU6eOGTPm119/3bdvX2x2M4iR7hGkSPfuinRv
pUj3pHsq9op0H4wVqnkKwSj0vjH16XI5vZLTJdS73Nb/5Zdfnj171vkhERER
cpc0+OGHH4zDo6Ki5syZ43JUs2fPjoyMdB7Vli1bVINLly7ZnnUPJtlcnqtL
ly4u7/XQmQULFpimaOHChbHf3+BDukeQIt27K9K9lSLdx1kFPLNQcV+k+2As
0j3ij9D7xtSny3liw8PDu3btquLqlClTtm/ffu7cuYMHD0p0bdu2rQyUe01b
8C9cuDB06FD1EFO6379/vxo+YcKEffv2nT17VoZIGzVw2bJlxsZRUVGrVq1S
zxI36X7t2rXquZzTvefOnDp1qnXr1i1btlyyZMmJEyfmz5+vmnneJyFhIt0j
SJHu3RXp3nNFRTnq2jVt0iTtzTdJ97FeAc8sVNwX6T4Yi3SP+CP0vjH16XKe
2J9++kmGt2nTZu/evaa7JNLKcLl3w4YN+sDly5d/+OGH+vZrU7qfOXOmDOzd
u7eEZeNwtW/AkCFD9CHnz5+Xf42bwmM73f/zzz96z03p/oGdUfdOmzZNHzJj
xgwZMmrUqFjtczAi3SNIke7dFenec926pV29qh07pn39Nek+LirgmYWK+yLd
B2OR7hF/hN43pj5dpikNDw9XW6vnz5/v8qWYOnVq69atjam2ZcuW0l7S+pQp
U5zT/bhx42Tg6NGjTeMJCwv7/PPPhw0bpu+cr3Z0b9OmzYoVK+QpfE73Bw8e
lJ643Off6P79+wMGDFA7FTine8+diYiIUFN97NgxfeCJEydkiAy/ffu2D90O
YaR7BCnSvbsi3Xuoe/e09eu1BQu0WbO0jh21evVI97FeAc8sVNwX6T4Yi3SP
+CP0vjH16TJN6ebNmz1vNw+PYRwiuX7Tpk2SphcvXuyc7letWqUy76xZs1we
sK9buXKlpPILFy7IbbWHgG/pvn///vLYSZMmmfYWMJk7d640GzZs2NGjR53T
vefOqIfIRJmeQv0OcOTIER+6HcJI9whSpHt3Rbr3UNeuaS+/rGXOrOXJo2XP
rr32mlaqFOk+divgmYWK+yLdB2OR7hF/hN43pj5dpilV26zbt2/vw6u0aNEi
53R/+/btwYMH6/u3d+3a9ccff9y8efONGzc8jMrOtvuTJ0+q/e2nTp3qrs2h
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
g9Kny+X0Sk6XUN/ClS+//PLs2bPOD4mIiJC7nM+qFxUVNWfOHJejmj17tnEX
/dWrV6vz1+latmy5cOFC/81GF7Zs2aKey8MZ/MaMGeP5tHvwjHSP4KLS/Tvv
aGvWaPHwrHqk+/hTYWFamzaOU+JXqeIp3VeqRLon3VN+LtJ9MBbpHvFHgkr3
4eHh6gzwYsqUKdu3bz937tzBgwclaLdt21adJd60Bf/ChQtDhw5VDzGl+/37
96vhEyZM2Ldv39mzZ2WItFEDly1bppqdPn1aRfthw4Zt2rRp27ZtX3/9tWoj
7WNjnkZFRa1atUpNkYd0v3btWtWAdO8z0j2Ci0r3TZpomzdr8fCKeKT7gNT9
+1p4uGNLvbFWrXKcQ++ZZxxb50n3pHsqLot0H4xFukf8kaDS/U8//STD27Rp
s3fvXtNdp06dkuFy74YNG/SBy5cvN14vz5TuZ86c2SLm0vOmk86pfQOGDBmi
/p03b16LmEvv6b8bREZGdu/eXQbGxi7x58+fl6c27ifgMt3/888/+qSR7n1G
ukdwId0/sBJguj9zxnF8/ZIl/6kPPnC8nq1ba++9R7on3VNxWqT7YCzSPeKP
hJPuw8PD1ebs+fPnu3wppk6d2rp162nTpulDWrZsKe0lrU+ZMsU53Y8bN04G
jh492jSesLCwzz//fNiwYWrn/BkzZkh8lr/GNrNmzZLHfv31117NrIMHD0pP
PJ+Wf8GCBeoXjBUrVri8nL24f//+gAED1F4HpHs7SPcILqT7B1YopXt5GeXV
eGBt2aLNnKlNnqxNmfL/9frrWteuWufOWqtWWv/+2t27jjp5UnvlFcd1DY4f
1775xpH0y5TRkiUj3ZPuKX8W6T4Yi3SP+CPhpPvNmzd73lM9PIZxiOT6TZs2
SZpevHixc7pftWqVOoJeorrLA/Y9UNv3f/nlF68e1b9/f3nUpEmTPFyibuXK
lVOmTLlw4YLcVnsjOE/v3Llz1ZECR48eJd3bQbpHcCHdP7BCKd2fOuU40f1f
fz2g8ufXSpVyXO2ufv3/r6JFtZ49tcGDte7dtW7dtN27HbVqlfb001q2bI63
UNWqWtKkWrp0WqJEpHvSPeXPIt0HYyXMdH/v3r1p06Zt2bIl0B3BfyScdK82
ardv396HV2nRokXO6f727duDBw/Wd4Dv2rXrjz/+uHnz5hs3bngem/6zwJEj
R7zqxsmTJ9Xu9FOnTrXS3uW2+0OHDslTf/zxxzL82LFjpHs7SPcILrGX7suX
16ZNc2zbvXHD99qwwXE+f9K9lYqKckzpuXNu6/Rp7ddftalTNZnjnitzZke0
b9vWcWl7KXkZ27VznE+vWTPHifXeeUd7+21t4kRHDR+u5c2rPfyw41R7Ev9F
ypRaihTJ+/btG9tvXdI9lXCKdB+MlTDTvTrk2bR/MgIu4aR7ScRqN3vjwL//
/nvSpEnfx5gYQ96ozq+Sy3Qv7t69K2/p9u3bG49zb9Wq1YIFC9xtXt+6dava
4d+3z4K+B8KsWbMe2Ng53YeHh/fo0UMGbty4Uf4l3dtEukdwib10X6KENnas
Y7SSi32umTO1V18l3VuqyEjH8fLTprmtCRO0xx93zJeKFR9Q6dJpkyZpf/+t
7d/vqL17HdvoJdrnzq2lSSPh3XFkfdq0jkqdWnvoIcfG+qRJtSRJ/rfoy5o1
67Bhw2L7rUu6pxJOke6DsRJaur99+7Z+InHSfXwTSum+xX+ZpnT27NkysHPn
zsaBK1asMD1KErHzq+Qu3SuRkZGHDh2aN2/ekCFDJNqr8YwdO9a55apVq1S0
HzVq1L1791yOLSwsbJNH6ox8Qp7R88x1Tvfqkzhu3Dj1L+neJtI9gkvspfvq
1bU+fRzHbv/8s+81aJBjf+8EmO7Dw7VduxwXobNe27ZpCxZovXo5ZqLL6tfP
sZG9dGnHrDFV+fKOHeyLFtWKFdOKF3dE+M8+06ZP12bNctTMmdq33zqOqc+c
2RHhJc57liNHjhEjRsT2W5d0TyWcIt0HYyWodL9r1y7JDnp0It3HN6GU7j1v
u1++fLl6E165ckUfeO7cuXX/+uWXX7xK9xLqb926ZWp59epVyfXqidTB7zo1
fjF+/P+xdx5gUR3rH5500zQ9xljS/KeY3FQTvTeJ6TfVNFM0xagJvQsGhBBR
QBHBAoooZiMluIItgo0SCEYDakhEVIKCBQKCIipShMX/Nwz3eDy7nC0fy+5h
5/e8Tx6YPbtntmD2PTPzzZJz58519Y5MmzbNzuDs2rVL5s2V2H1xcTG7V0ZG
xraOsAX4bm5u8DP8qco8FI/OcLvnUVbMZ/dBQVQbR46kM7pN5sknqXXamt23
t5NDh2j9+S++oG+NgYB9g5iDgE+YoJtPPiHXXEN3tZsyRcro0eSee+jy+cGD
yV130UH5vn3JjTdSbriBctNNdMo9G6aHsP92lbvuumvBggXm/uhyu+fYDtzu
lYhN2T2btBwZGblmzRpu91YY27H7yspK5rb5+fk6X4qysjLD7R4ezd7eHg5u
aGiQHNze3u7t7Q3H5+bmCi1sXQAkNTVVpibe+Y76APGyYQ8OCQsLa25ulnko
id2z9f5dJSgoSOaheHSG2z2PsmI+u//1Vzq7OyaGzs83me++o9X5rN/um5po
CcFVq8jq1d0APFRICPVxf38jvklCP599ltarf+IJ3fzrX3RG/WOP0U3rJDz4
IPX3fv06Xb5PH3LZZdTlmc4D8Cv7wRC7v/nmm2fPnm3uj64N2z0ylrcejrFw
u1ciNmX38+bNY8OLbAo0t3tri+3YPSQkJATaXV1dS0tLtW8tKioy3O41Go2X
lxc0ZmZmSg6Gmzw9PeEmYTQclNyuo4ye4Psmp7KyEvoPjwbPpbGxUf5gid0f
PHgw+eLExMTYdWyfBz9v3rwZ2TcbDLd7HmXFfHbfLSiiZn57Ozl5kg61f/YZ
HW3HM24cefhhWs4uIYGo1YYSGUlH58G7wc27Atz/8sv1ACIvcXljc8UVV0yf
Pt3cH10btnvLawunh+F2r0Rsyu6FcLu3ztiU3R8+fJgJLwhyXl5eTU3N+Q4Z
B2VOSUlhNxk+M1+lUrFR77Vr1546dYo1gkpHRUVBo4uLC5t+v2fPHnbY1q1b
2y6O/M712gGdDwgIYOPs2nMGtNPVfvdC+Lp7ZLjd8ygr3O718s03xNOTbub+
88+6WbuWvm5g5UYNtcsAj/Pcc+Srr8iMGWTmTEPx86N9ePxxurJeJ3ffTWvf
gbmLXf7SS+mAvpgrr6SHgdfDTcIIvjAnnw3cy3PppZf2wNQvbvcc24HbvRLh
ds9jPbEpu4cUFha6u7sL09G9vLzYHnMsgYGBRUVF2vfSafenT58W74jn4eHB
RvPZJYJt27axw+BrT1eT4efNm2fUm8VW9EMnhYsJ8uF2b+5wu+dRVrjd6+Xr
r8mHH9JxeTs73UyaRHeHnzCBxMaS5cu7gaVL6SJ6AB65q5Pq5JtvyMSJXTJy
JDV3NjQvAOnTh66pv+aaC0ALU3s2lC9cB2BqL/i+TthFAL7fPbd7TjfC7V6J
cLvnsZ7Ymt1Djh8/npycLJg4xNnZOSQkJCMjo62tTeddNm3aBIfFx8dL2ltb
W+EjzfaYY3FxcQkLCxNm/ms0GqGKPt7u09PT4VziqoDyYRcuZI4/cuQIHODn
52dUN3iEcLvnUVa43eulsJBWAAgLI+Hhupk5k7zxBhk4kDg40DN2hZMTXd7O
lsA/+STlqac6GT6cPP00eeaZTuDne+4hgwbRMnfG0r9/l/Ttq3umvU5JF8bo
xT8YmFtuuSU8PNzcH11u9xzbgdu9EuF2z2M9sUG7ZwHvrqurA72tqqoydoa8
dhobG8vLy7vloeQjU2yfp+fD7Z5HWenFdn/gAHXqefPI8ePkzBmjOXWK1NdT
KioIvERz53YJCP5bb9HR7Q8/JF9+2SVwK4RtEw+i3a9fJzfcQP974420rh1w
882dwGGmLXu3eAYMGBAZGWnujy63e47twO1eiSjO7n/++WfVCy/IYMgz4nZv
nbFZu+fhwUf8FdfSfeHh0Z9ebPeHD9MF7C+8QKfW29sbx4QJ5M03O+vJP/ss
rXH3f//XJUOHkttvpyZ+221yo+pwK0Q8K15nUbsrruiETZtXYu644w5u99zu
Od0It3slojjvALuX/yD5jR2r90G43VtnuN3z8Jgc8VdcS/eFh0d/rN/uoVdb
ttAt50DwjeLQIRIURKe4i+fAG8iwYXR43fDIm7jJxecVGj52z+2e071wu1ci
ivMO89n92bNnDxw4UF5ebq6u8+iLDdq9RqPZs2ePSqWaNWuWn59faGhofHx8
bm5uV4vuIXV1ddHR0fAZ1r6ppKQEPtURERHwUPANB37WWZevurp69erVMTEx
SUlJ+fn5ejez65Zs2bIlKipKprr+mTNnli1btmLFih7oTK+M+CuupfvCw6M/
Vm73u3aR116j+8jn55MdO4wjN5csWEALxYOqG8VDD9F7iYfRBXRuHieGLVqX
NF5zDZ17L5SjF4rUseXtvS8DBw40toaMCeF2z7EduN0rEW73Qnbv3s2KjZut
7zx60pP/x3zh6oAeQHheOp8veDpIvc4ad8HBwVVVVdp3aWlpgZu0a+a3t7ev
WrVK50OlpqaKF+Bv376dla8XEhQUVF9f331vo47s2LGDnUumZv6iRYt4zXxM
xF9xLd0XHh79sXK7//NPWjo+Lo6sXElSUowjOZnMnk0GDyYPPEDL2RkOHD9k
CNXwq6+WItk+XrKXXFd2f911dEG9eL85dmVAvM1cb8qgQYO43XO753Qj3O6V
iG3a/S+//NKV3Xt6epqt7zx6YlN239TU5Ovry5w3ISGhsLCwurq6tLQ0PT3d
2dkZGuFWyQh+bW3tnDlz2F0kdl9SUsLa4+Li9u/fX1VVBS1wDGvMzMxkh9XU
1Dg5OUFLVFRUUVHRtm3bAgMD4VfzTWVsb2/Pyclhz0jG7vPy8tgB3O5Njvgr
rqX7wsOjP1Zu9//8Q7sEgv/BB7QqnVG89x7dNR6E+tFHOyvVG8jjj9OF9iD4
RhWrv+22Lsfime9rizzba773hY/dc7vndC/c7k1jRgAK5Nlt0+55rDM2ZfeJ
iYnQDq69b98+yU0VFRXMwbdv3y40ZmVlsU3ldNr9ypUr2Sg82LS4nc0NEHYI
Sk9PZ5ewWlpaWAu7qOXo6NjU1IR793SkpqYGTi2eJ6DT7o8dOyY8NW73Jkf8
FdfSfeGxxrS1tZ2xplRXF8fFkS++sAq712hIW9tFHDtGkpLImDHk00+N5qOP
yKuvkgEDaGW8l166ACuUJ8+IEfSawAMPSLn/fnLvveSuu6j7w3/FDB5MR/N1
FsrTCds4ntu9yeF2z7EduN2bRshUFMizc7vnsZ7Yjt2DSrPh7PXr1+t8KZKS
ksC4k5OThRZ7e3s4Hmw9ISFB2+5jY2PZiLzkcYqLi7///vuIiAg2OX///v2p
qalbt24VDjh9+rTeOfM6U1paCj2R33QvLS2NXcHIzs5mywG0zwLGMXPmTDbr
gNs9JuKvuJbuC4/VBf7QKioqUqwpCQmL3NzIJ5/Qhe2WtfvWVnLyJKmuvojK
SnLwIPnrL1P48096yeLHH+nE/qVLO4mNJXPmEE9PPXh4EHd3Aq+MBGdnOiXg
ySfplvTaPPggdf+779bPnXfS6fqE6J+ZzybwKyt8Zj63+66Y9S0Ki/ffUnC7
VyLc7nmsJ7Zj9wUFBfJO3dQRcQt4fX5+Ptj0xo0bte0+JycHGu3t7eE7s84F
+zrT2Ni4fPlyuGNgYKCBdxESGhoKd1SpVJLZAuL88ssvCQkJtbW18DObjaD9
fNetWwftERER5eXl3O4xEX/FtXRfeKwutbUHc3JW+vn5zp1rLYSFOX7+OR0c
37mTvP023SAejNgi5OWRdetIamp3smIFXXo/bdoFvvuOeHsTeMqmMXYsHf0H
ix82jM7elwBqP2gQGThQP7ffTkvtGRJu912F2z3HduB2bxHmTEbB7Z7HemI7
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
ahTdF69vX1olD1RdG7ipT59OfxfvUw9Sf9VV5MordWxpZ/HwsXuzgtRzy5L9
IgqL999SIO3e4v23FMiF88izc7vnsZ705P8x3+ob3QMIz0vn8wVPB6nX2uyd
Jjg4uKqqSvsuLS0tcJN2Vb329na2sZ12UlNTu5qiD0LdY4XsdJ7r9OnTERER
kg7Tv3Ee4yP+imvpvvBYXbjd9wDl5bQm3pIlZOlS3cTGUn8fNIjs30+fvjZb
ttDxdFdXsnAhiuhoOvIOYg7mrr3dPGPo0M6182Dx/frpwArlXW/42L1ZQdYZ
QwoL8uyJn6FAnl25IO3e4v03mSXfoECWoER2nts9j/XEpuy+qanJ19eX+WxC
QkJhYWF1dXVpaWl6erqzszM0wq2SEfza2to5c+awu0jsvqSkhLXHxcXt37+/
qqoKWuAY1piZmandgby8PHZrD9h9V+eC3kLj5MmTt23bVlxcLJT7O3z4sLm7
1Psi/opr6b7wWF243fcAH39M948bPZrY2+vGzo5uM3fHHeTwYTqNX5tTp0he
Ht1EHgQfg7MzHWe/9FK6aV2fPrq56ir6b4VQKE9AKKBn7F7z1hBu92bF4uOh
GHKfR2HBnsdNQoE8O9LuZ/ugsPjHRqFwu+exntiU3ScmJkK7k5PTvn37JDdV
VFRAO9y6fft2oTErK0u8X57E7leuXGnXsfV8e3u7uJ3NDQgPD5ec4tixY8Kj
mdvuuzpXbW2tvb09NO7du1donDZtGh++Ny3ir7iW7gtPT+ecvvz883fe3tzu
Tae1lTQ16R5wFxg1ijz9NPnoI1r3XiceHlTw+/cnO3eSf/7RwaFDJCODfPkl
nZ9vMvCSAtdeS/0dAMGX+LsAERXDl0i9gLLCZ+abFeSedEhhQS6cz3gFBbKi
IKbePnKON/J1Q9o9pq4d8HkCCkzBgVg7FMj97n1nouB2z2M9sR27b2pqYgP0
69ev1/lSJCUlOTo6JicnCy1MhMHWExIStO0+NjYWGqOioiSPU1xc/P3330dE
RIgn57e1tc2cOZMN9Jts96WlpdATvRX+Zc61Zs0aaFm2bJn4+IqKCujziRMn
TOiSjUf8FdfSfeHpubS3tzc0NJToy9Klrk5O3O5N5/BhOqq+erUczzxD5swh
O3bQZ6STY8fonPx+/chrr5F339XB6NHkzTfpVvV4HnuM/OtfdPr9rbdaSrUt
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
FMj97jEfGOS1LOTQv/pjFNzueawnNmv3PDz4iL/iWrovPKi0traeMziFhZmf
faZIu+9Jdu8mQ4eSl1+mm9Z1Fx9+SN5/n7z3npS336aCL6ydR3LddXRuA7P7
yy+nLTwy4VX1zAp6INWSIMfuLd5/S4G0e+TZMdUIAYu/epZCcd7B7b4Xh9s9
D4/JEX/FtXRfeEyPRqP566+/fjU48fELRo/mdq+HM2eISkUWLSIxMRdYsICu
xI+MNBF/f2Jvr8P6P/iAluW/666LJuebjDDVn832HzCADu5DwPTFQ/xChXwx
V17ZebDtZMCAAZGRkeb+I+V2z7EdLGv3FuTH8Sgs23nFeQe3+16cnvw/5ptD
knsA4Xl19ZThm/yePXtUKtWsWbP8/PxCQ0Pj4+Nzc3O7WnQPqauri46Ozs7O
1r6ppKRErVZHRETAQ8E3HPhZuy7fmTNnNutKbW2tSW+antTX16elpS3tCPwA
v0oOqK6uXr16dUxMTFJSUn5+vmRnPR7DI/6Ka+m+8Jiepqb6TZs2/PRTolpt
EBER/m+80Tvtvq2Nrs3vrk3xtm+nr9KqVRf48UeydClZssREZswgzs66x/Th
HXnkkc697Yzi/vvpHAMZwPRZXf0rrrhok3pAqMUnLsrHDrad3HnnnXzsvrfa
PWZyO5D8KQqLy6alsKzdx3+BAnNq5AcGObUe+bop0e7bLyEycLtXbmzN7sHT
QertdCU4OLiqqkr7Li0tLXCTds389vZ2of68JKmpqeL17H/88YfOwwoLC7vv
nezMvn373NzcxGdxd3eHRuGA7du3s73/hAQFBWlfAeAxJOKvuJbuC4/p+fnn
T95887E33hhmb28Qn35697//3TvtvqiIFtVfsaJ7iIsjCxeS6OhOoqI6N6Yf
PtxE7ruPPsKLL9KReoHnnyf/+Q9dff/oo+Rf/zKagQOplWtvlnfddZ2AxbOq
evBfA+f229T2eXxmvllB+jVSWIL9UQTMQIGsPL/7EdOZ544ixgEF0u6Rjpw0
DgWmqh5mE0MAudMB8uzc7nmsJzZl901NTb6+vkxpExISQK6rq6tLS0vT09Od
nZ2hEW6VjODX1tbOmTOH3UVi9yUlJaw9Li5u//79VVVV0ALHsMbMzEzhyHXr
1kHLjBkz1Bfnn3/+6d53Ezrv4+PDrlTs2LFj586dISEh8Cs0snJ8NTU1bL/7
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
6CPlMWYM+fBDWtgf/P2998jo0eTtt8k779CfoRHo35888QT5+msyeXInXl46
8PTsxNWVVht47jk9sKsK7MKCPI89RqdGQLqq0ccjhNfMNyvI8USk3f84HoVl
JTdsiun8+hyK4odQbH4NxUxfFMh5C5gP67trCQZkmQjkX5oS7f74zUQGbvfK
jU3ZfWJiIrQ7OTlpD1VXVFRAO9y6fft2oTErK0u8X57E7leuXGnXsfV8e3u7
uJ3NDQgPD2e/1tbWsgr2e/fuFY6ZNm2aOYbv9Z7r0KFD7LnA82W3VlZWspaD
Bw92b2dsIeKvuJbuixExwe6HDSPp6dQoLU5iIvn4Y6qHILa2DBjx0KFk+nSS
kNAbiI+nCL++/DIZNIgO3z/0kBwPPtjJvffSEXl4WRwc5Bg1is4QAMeXgc0u
eOIJaveXXNKl3bMVAX36XAB+1S6nbwuFCGxh3f3wy7+2FEjjQNr9faUoIj1R
IDed/+UF05n+HQrkdQnkxuvB/ijCvVFgPqwjtxEMfGa+UQEvqLmVyMDtXrmx
HbtvampiA/Tr16/X+VIkJSU5OjomJycLLcyUwdYTEhK07T42NhYao6KiJI9T
XFwMf+YRERFscv6aNWvgsGXLlomPAbmGw06cOGHUm1VaWgo9kSm5r/dc5eXl
zOWFtfaNjY1sy3vxBQEeAyP+imvpvhgRY+3+n3+oSf34I52+bnFCQ8mrr1Je
f92mef55OsA9dSpZtsxQ4uIUw0sv0UX9d95JHd8Qbr+dlk147z0yYYIcI0aQ
Rx8lTz0lx/DhlIcfpmfndm9IwO57fc18m7X72T4o5Ff16sVpIQpMRT7LzjrY
8ioKZMV+ZM18zIf1u+kEw8RlKJB/aUq0+2O3ERmmcLtXbGzH7gsKCpjYduXU
TR0Rt4DX5+fng01v3LhR2+5zcnKg0d7ePiUlReeCfZalS5eyKQHV1dXZ2dmg
51u2bIGfTXizQkND4aFUKpVktoDh54Ln4uXlxRYmNDQ0wPNVq9Xwq6urK5+Z
b0LEX3Et3RcjYqzdnz5NVzQ/8AA1I4szYABxdqZWGxBg07i60lp2991n0IsG
b9+DD9KDtRk61Brp358uvb/xRkNhpfuvuYZcf70crLa/gWX6Lr9cTmlB2yXY
bGxhRzyL2j127Tyn50HavcX7j2HFJ6Zj8c5jUKLdV/UnMnC7V25sx+7T0tKg
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
8pgWbvccjrnhdm+1cLvv9XYfMhXFt7NQIO0eUzf+KxUKlygUyKp6SD1/4RcU
mA9rVX+CYfQ6FMi/NCXaff7TRAYvbveKTW+ye4mnS55pVlYWaz958qTQWF1d
vfV/Wb16tVF2Dyp99uxZyZH19fVsejyktrZWfJNKpbKTraXPAl+T7AzOrl27
JHdvbGyEE7EJ/B4eHkuXLmXD9yEhIfLn5TEh3O45HHPD7d5q4Xbf6+0+0hPF
gXtRIO0eU9Bv039RIKeIL/0aBXLZvgXX3SM3IuRV9YwK2P32EUQGbvfKTW+y
e/mx+8rKSmbE+fn5Ol+KsrIyw+0eHs3e3h4ObmhokBzc3t7u7e0Nx+fm5gqN
LS0tzLh37twp/46kpaXFy4Y9OCQsLKyrPfU0Gs3x48dZdX1WcCAuLk7+vDwm
hNs9h2NuuN1bLdzue73dx9qhkHcHvSDt3j/YdJBl5395AQWyYj+y8jxy4gHm
w4qcdWDBNQXfK9Put40kMnC7V25sx+4hISEhdh1F7UpLS7VvLSoqMtzuQZy9
vLygMTMzU3Iw3OTp6Qk37d69W2g8dOiQXceKeGEnetNSWVkJ/Wdj8dql+QoK
CiIiItatWyduZPvd5+TkYM7LozPc7jkcc8Pt3mrhdt/r7R65Yf1f/0KBtHvf
maYTMAMFspwgcl3AxGUontiFAvNhDfYnGNzmo0D+pSnR7rf+h8jgNYHbvVJj
U3Z/+PBhtggdBDkvL6+mpuZ8h4yDMqekpLCbDJ+Zz2baQ9auXXvq1CnWeOLE
iaioKGh0cXERi/z27dvxi99B55mqBwUFac8ZOP+/mntOTk7C6gM2cA/36mqU
nwcTbvccjrnhdm+1cLvv9Xaf/SIKzOg5gLT7lzNNZ/p3KBbbo3BaiOKTFSju
348C82HFLKYAkLUQkX9pSrT7X58lMnC7V25syu4hhYWF7u7uwrp1Ly8vNmGe
JTAwsKioSPteOu3+9OnT4h3xPDw82Gg+u0Swbds28cFsUX9MTAzmzWIr+qGT
wsUESUDhmf67urouWrSIVdiDzpSXl2POy9NVuN1zOOaG273VYjt2/+aQZEsx
24dgQNo9UnKRy/ajXFDMczcd5IUF5JyHF7NR+MxGMSkOBUaQHRcRDMg5D1/E
o1Ci3ec+T2Tw5Hav2Nia3UOOHz+enJwsmDjE2dk5JCQkIyOjra1N5102bdoE
h8XHx0vaW1tb1Wo121CexcXFJSwsTHvm/5IlS+BWyZx5Y5Oeng7nElcF1E5V
VZX4msOUKVOE3fF4uj3c7jkcc8Pt3qpoayOtrZ00NHC7NzthUwgGpN1jBBlA
rh9HrvoPCjQdpN0jl+0jd3ZDbqiHLG2HsXvMWwY4xKBAltxXot3/MorIwO1e
ubFBu2fRaDR1dXVHjhwBHWbV5zBpbGwsLy/vloeSj4HL9uvr6w8fPnzs2DFz
98fGw+2ewzE33O6tCngXmpvpPx1AfT3p14/bvXlB+jXS7pEgV68jZw54zDUd
pN0jZ+YjV75/swSFBcfukRUDvlyO4q00FEq0e/mVNdzulRubtXseHny43XN6
PSUlZMcOUlBgMTZvJm++ye3eKjh5kixeTAICOt3N359cdRW3e/PiF0owIPUc
ud99YBAKpN1jRs+Rdo8s74apBwggz+4cjQJj98idBJHr7m1w7D7rJSKD50Ru
90oNt3seHpPD7Z7T60lLI7GxZOFCixEWRp57jtu9VVBeTp5+mlxyCZV64Mor
O//143ZvPpCih7R7ZHm3lDEopn2PYs17poO0e9VXKD5MRYHcEQ95UQVj98iV
7+N/RIFctq847wC7z3iFyMDtXrmxQbvXaDR79uxRqVSzZs3y8/MLDQ2Nj4/P
zc3tatE9pK6uLjo6Ojs7W/umkpIStVodEREBDxUZGQk/66zLV19fn5aWtrQj
8AP8avx7ZWhqamrgbzYuLi42Nnbt2rVHjhwRbvrjjz82dZG8vDzzdam3hts9
p3ezYQMdN3/nHeLtbTGcncnw4dzurYL8fPLJJ5TcXJKTQzIyyHXXcbs3L8g6
Y9jZ9dNQIMfuvSJQxDiYDtLukYKMnLCR/CmKMSkoMHb/7lqCAbmhnnc4CiXa
/eZXiQwe3O4Vm578P+bzE/7uAYTnpfP5gqeD1NvpSnBwcFVVlfZdWlpaWPF5
Sc389vb2VatW6Xyo1NRU8YL3ffv2ubm5iQ9wd3eHxu57Gy8kNzeXbe0nxN7e
Pj09nd06b948nR2G+Pr6mqM/vTvc7jm9mx9+IMOGkWefJV5eFsPRkdu9tfDr
r2TCBPqmsF95zfweAFlnDGn3yJp+yCpnyKJ8mFNbdmb+gEoUS79GgayWgLH7
CC+CAVmNEPm3pkS73/RfIgO3e+XGpuy+qakJHJbJbEJCQmFhYXV1dWlpKciv
s7MzM1zJCH5tbe2cOXPYXSR2X1JSwtrj4uL2799fVVUFLXAMa8zMzGSHwQP6
+Piwqwc7duzYuXNnSEgI/AqNBpbIMzyVlZVM7SMiIvLz8//444/o6GjWH+gb
HJCXl6e+OPA6CM+ieztjC+F2z+ndLF5MJk0iMTHk778txu+/k3ff5XZvFXC7
73kwpeEApN0jB0MXuKJAzhyY72Y6SLtH1it4PhfFXA8U8pXW9IKx+1+fIxiQ
Fwds0O43vEFk4Hav3NiU3ScmJkK7k5OT9rh5RUUFtMOt27dvFxqzsrJcXFyE
0W2J3a9cuRIag4KC2tvbxe1sbkB4eDj79dChQ+zucArWAg7OWg4ePIh796SB
P1V4WC8vL+EahUajmTp1KjSuWLFC512gnT2L5ubm7u2MLYTbPad3s2gR+fZb
snGjJfvAa+ZbD9zue57PEwgGpN0jd5z/dhYK5Pz2cUmmg7T7Wd+ieG0zCuRn
Btl5jN0v/5JgQF4K+2ECCiXaffqbRAaPSdzulRrbsfumpiY2QL9+/XqdL0VS
UpKjo2NycrLQYm9vD8eDrbMBbondx8bGQmNUVJTkcYqLi+n8oogINjm/vLyc
ubyw1r6xsZGNsO/du9eoN6u0tBR6IrPJnVqtnjJlCvxX3JiSkgLnio6O1j6e
TT9wcHA4evSoUT3hYeF2z+ndcLvniOF23/OEexMMSLtPGosC6YnIonzxX5gO
0u7VH6N4bw0K+8Uo1r+NAmP3sXYEA/JyEPJalhLtXv6t5Hav3NiO3RcUFDDL
PnHihM6Xoqkj4hbw+vz8fLDpjRs3att9Tk4OW9UO+qxzwT4L3N3Ly4utBWho
aIBTgH3Dr66ursbOzA8NDYU7qlQqyWwB+bC5BKtXr5a0Nzc3s2F96L9R3eAR
Yj12Dx+Jtra2VsNSUXHgzTe53XP0w+2eI4bbfc8zeQ7BgLR75Mr3lR+hSPgc
BeaqCNLu57mjQL5rSLvH7DUAYOx+3WiCIfVDFMhPuxLt/ud3iAzc7pUb27H7
tLQ0aPTw8DDhVdqwYYO23Tc2Ns6ePVtclW758uUFBQVnzpyR3L24uJgJvlNH
4AcXFxcTatQfPXqUrRRISkoy8C7CJYiysjLJTRkZGewiAzwRY3vCw2I9dn/2
7Nljx44dMiw7dmx97TVu9xz9cLvniOF23/MgTQ3piUg9Ry7bR46lbn7NdJB2
jzk1gKxrh5zvsWwiCozdIxfOI8sdIF92Jdr92neJDO7c7hUb27F7MGI2zV7c
uHfvXpVK9UNHlnUkMTFR+1XSafeQc+fOqdVqDw8PcfF5BweHtLQ08fA6iDxb
FCDEx8fHtEX3wgwEQwbcd+3axRYXSObqs8A/pEZdKODRjpXYvUZTVVm5t6Ag
/7ffcg0hLU39wgvc7jn64Xbfu9FoSH29EWzaRL78ktt9j4LcOR1p98iyeJGe
KJBnxywKsGxVvQf2oUBeEfpxPAqM3SMLNSB3YETOuFCi3ctPw+B2r9zYjt2n
pqYyrRY3Zmdn210cR0dH7VepK7tn0Wg0Bw4cgD+T8PBwUHv2OIsXL2a3lpaW
shZQ7BMdYQvhwbtZHXtJiouL82XDptND4Iwy72xOTg5T+wULFrS2tkpuhQ6z
B6msrJR5EB75WInd19d/Ehw8+L77Bo4ceachDB/ef+hQbvcc/XC778WA2h87
RhYuNAJPT/LGG8TVtfMRuN33AN9NJxiQdo+8tpA0DgWyxhrG1Cy77v7fv6FA
jkH7haLA2D1ysgdmlwTAaSEKJdr9qg+IDO5fc7tXanqT3Us8XfJMs7KyWPvJ
kyeFxurq6q3/y+rVq42ye5D6s2fPSo6sr68Hr2cnqq2tPf+/onaxsbHiw1Qq
VVfj5vA1yc7g7Nq1S+fbyp4LZMmSJTpX97MOCIX9eUyLldh9be0oULCBA8nY
sQbxwQd0E3Nu9xy9cLvvxYCbZ2YSNzdwczJjhkFMmkReeYW4uFx4BG735kZ+
yyq9IO0eU5gOQJbF2/ofFJgnblm7n+mLArnt+4wAFBi7R46ez/ZB4TYfhRLt
Xr4QAbd75aY32b382L2wD11+fr7Ol6KsrMxwu4dHs7e3h4MbGhokB7e3t3t7
e8Pxubm58Ov06dOFn4UUFhZCo7+/v/a50tLS4mXDHhwSFhamvY0dnJ2tQYCk
pqbqrL/X0tLC1u/v3LlT50vBY2CsxO4rKkYFBpKPPiKnTxvEgQPk9de53XP0
w+2+F3PsGHn7bXqhz92d+PkZxOefk5df5nbfoyD9Gmn3SEtFzsxHFm9P/Mx0
kHa/9GsUyNFz5L7t6AtKpmf1+wQDcqrJnMkolGj38nUzuN0rN7Zj95CQkBC7
jjpypaWl2rcWFRUZbvdCJfzMzEzJwXCTp6cn3LR79274NTIyEn5es2aN+BiQ
fWgE8Tfy7aJXFaD/cF94Ljqr4YH+s2n/kusJ4hw6dIgdY2zRfh5JrMfu4WvY
uHGGfquvriZ8RzyOIXC778WA3b/+OnntNRIZSWJjDcLHh/7T4ebW+Qjc7nsA
n9kEA9LuF9ujmPY9CqQjY8qnI+0e+bo5xKBAjoDnPo8CY/fIUyOL3iPrPCjR
7uWvzrlxu1dsbMruDx8+zDaaB0HOy8urqak53yHjoMwpKSnsJsNn5rPJ7ZC1
a9eeOnWKNZ44cSIqKsquoyo+c2f484Ff3d3d4ezsmJMnT/r6+kLjihUrjHqz
QOcDAgLgjkFBQdpzBiB79uxhXdq6dWvbxYGnKRy2fft2OAYeyqiz82iH2z2n
d8PtvhcDL+zYsWT5cnLiBP2nwBAyM8lXX/Gqej3KF/EEA9LukZo51wMFcvty
zKIApN0jqyUgL2sgF0SgCzmanoxXCAbkhnrIOg9KtPvkT4kM3O6VG5uy+/Md
U+JBtIV1615eXmyOOktgYGBRUZH2vXTa/enTp8U74nl4eLDRfHaJYNu2beyw
lpYWpuTOzs7z589funQp68CUKVN0GrpM2Ip+6KRwMUESsP6uVujPmzdPOIyt
yo+JiTHq7Dza4XbPURbt7eTUKToIq1JRrdPL+PHEwYFs2GDJPnO7NwSNhhQU
kM2bjWDlSjp2r1aTs2cNPQvfEa/nQc6yRtp92BQUyLF75MUBDEi7R57dYy6K
hU4oNr6OAmP3v7xAMCB7jlwJokS7/2kskYHbvXJja3YPOX78eHJysmDizLtD
QkIyMjLa2tp03mXTpk1wWHx8vKS9tbVVrVb7+/sLD+Xi4hIWFiaZ+Q8yDlLP
KtizLFq0qK6uztg3Kz09Hc4lrgoojkajESr2y9v9kiVLoGXdunXGdoBHEm73
HGXR1kaOHiVPPklGjaILqPVy//10eDc93ZJ95nZvCPDiREdT75482VCcnMjT
T3O7t3a7R+5djrT7Jd+gQG4MFzcJBaZeAdLuFzmiyHwZBfKaDLLYAsbut7xK
MES5oAj1Q6FEu5evPuH2Dbd7pcYG7Z4FXBj8+siRI1VVVeJZ66alsbGxvLxc
/qHOnTtX0ZGWlhaTT8RXyltVuN1zlEVjI0lLI+++SyukGfLd/s03ycSJ3O4V
wPbt5LvvqHcbLm5TppARI7jdW7vdf5hKMCDtPtYOhV0sCqRtWbCqHnIFd/aL
KJCSK19pTS8Yu/9hAsGA3BEPeS1LiXYf/zmRgdu9cmOzds/Dgw+3e46yqK8n
wcHE2ZmsW0cyMvTj6koLpPOZ+dbPokXw3ZKOyIeHG8q0aeTZZ7ndW7vdJ3xO
MCDtHjmM6xWBArn8fNlE00HaPXJuvPx8ab0gPzPI0vEYu0ee+sfxKJAzLhTn
HWD38pUEXLndKzY2aPcajWbPnj0qlWrWrFl+fn6hoaHx8fG5ubldTcuH1NXV
RUdHZ2dna99UUlKiVqsjIiLgoSIjI+FnnSv3jx07lpaWFhsbCwfs3bu3tbXV
+PdKf/74449NXSQvL084rKGhIT09fcmSJfAiwBM/c+aMOTpjC+F2z1EWzO7B
zv78kxw8qJ/p0+nBvKqe9QN27+FBYmLIb78ZSno6/XcAaff9+nG7Ny/I0Uyk
3SeNQ4Hc2Q257bt8xTB5kHYf44ACWd4N+a6teh8Fxu7T3iIYkAvnkQtJlGj3
qvFEBm73yk1P/h/zRf/KHkB4XjqfL3g6SL3OlenBwcFVVVXad2lpaYGbtKvq
tbe3r1q1SudDpaamiqfo//777+LafXYd9eqNLalnSObNm9fVuntfX192DLj8
5MmTxTf5+/vX1tZ2e2dsIdzuOcqC2b2/Pzl50qDjec18K6etjZZJPH2a7mo3
dSqdbmHUCwv/aCQkkNpaKvhAQwP9hMADdsWmTXTLexcXehh8hI4dI337crs3
L0g955gG0u4t3n9Oz6NEu5e/NsjtXrmxKbtvampiW9FBEhISCgsLq6urS0tL
09PTnZ2dmQJLRvBBe+fMmcPuIrH7kpIS1h4XF7d///6qqipogWNYY2ZmJjus
pqaGPfisWbP+/vvvsrIy5uBz587Fr/eXJC8vT31x4GkKnWTHLF26FH4NCQmB
J75v3z74Vga/hoaGdm9PbCTc7jnKgtt9b6KlhRQVkdGj6S51I0eSSZNoJXyj
XtgPP6T3mjGDzJxJ8fEhL71EPviAtjPGjKF89BH5+GPKK6+QQYMoL75IeeEF
cvnl5LLLLgsKCjL3v3Lc7jk9Cbd7jrEo0e7jJhIZXO243Ss1NmX3iYmJ0O7k
5ARWK7mpoqIC2uHW7du3C41ZWVniMXeJ3a9cudKuY+v59vZ2cTubGxAeHs5+
XbFiBfw6depUoSBeW1sb2yNv69atuHdPf9jZoZPNzc3w6/79++FXBwcHYU89
+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
eOnp6STHHRfe3t5NrdXBwcFkZT2/8NSpU1OnTuX3xMHBAQqbtCfyDf5XXJp2
ZGH3q1bhWdCgQkOHNh9gcM7OLc7uzcjff6OYGLzlvatrE/L553hw/KOP0I8/
Ni3ffIMH5cFqQbrNwkMPYVnWtxUguDkEqDQNoPbwk1i5IUYvsHt9zcJJUEhq
vh49erB199Zq95GjqaC0+9NPUfHUadNZNYGKqP9QQTn47uJPBeXMAZpf1jme
iAYLzjqYKU+7f+UwkoDZvXxDUXZfWVnp7u5OpDUiIuLo0aPFxcW5ublJSUl2
dnZQCI8KRvBLS0sXLlxIDhHYfU5ODikPDQ09ffp0UVERlEAdUrh7925+5bq6
utTUVPIsArsvKSmZPHkyFAYFBWVlZR04cMDLywvuBgYGmu1t1om9e/dyefO4
Qnjtrq6u5ELHoUOHDh8+7OPjA3eh0Fwr+q0s+F9xadqRhd0vXYqTmP3wAwoL
az6+/hrNmGHNdn/jBjpxAi/kb1IiI9H8+cjNTeTbO5xeZ2ezMXUq+uknPG7O
nx5P6NYNPfqo0ZCRd93yRx7Rjte3aSPkwQcxgpn20pPtwdO5G6DkhiO97p6N
3ZsxLGv3Hy4vsxSUxmFZu/9lLRVfJlARPMl0KNfdr/+BCsqtAFfaUpH+BhU0
v6yUl4OC7Kmg/KTJ0e5fPoIkYHYv31CU3UdGRtrU7+euOxhdUFBAFDs9PZ0r
TE5O5u+XJ7D7DRs2kEF2MHd+OZkb4O/vz5WAv8Nd/oA43+6TkpKgxNHRkdsv
/vjx4zb1W9FVVlaa8qY2FpcuXeJeF9/uz58/TwrhbJCSwsJCUnL27Nmm6Inc
g/8Vl6YdWdj9ggXI0RGtW9es8uvtjbPq7d+PE/q1fKqrUUUFunWrxXHjBs6Z
/8cfQtaswXnwfHzwSTYL8H6pVKhPnwYT6clcehB8ouRG8dhjeIF8584YbkC/
UyctoPn8GfjcPHwy5Z7joYcwbdsK4a4G8K8AsDA2mN1bsd1v+4SK5ZOpoJQ1
muTt5/tQQWn3lOkEKXc6oE7KZ3pQ2n3ye1RQftLkaPcvHkUSjGF2L9tQjt2D
KZOh8y1btoieiqioKBDq6OhorsTW1hbqg61HRETo2n1ISAgZcBe0k52dDR/z
gIAAbnJ+YmIiuaqQkpKiu8v86dOn4+Li9u3bx5WUl5eLTuCXjtzcXOhno0n7
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
L1++DHc9PDxM7pKiQlF2n5+fT+QaFHjv3r0lJSV36mUcpDg2NpY8ZPjMfLVa
TUbJExISrl+/TgpB24OCgqDQ3t6+urpatyl9+91zYXJWPdB5YuLe3t66Mwru
/PPJmjp1Krxe7rlImv2kpKQ79fn9HBwcbHiJ9fbv3w93nZycpDcCUGzwv+LS
tKM0uwfKy9GVK+jy5ZZFaSnKzcWDy66uyNOTYQSffIIzDwwahCcM6PL001io
uVkBUO3559ELL2iB2wCpSWYUCCYGPPNMg4wEwMCBmAEDMP37o379cJoCkmeA
rDLgFhoI0g4QuJkGHK1b408xZRpDZUbv3r2bYctUZvcMBqNJUaDdt6lAEvzH
VLsHHyc2wV8KDaJka2sL0lFbWyuoDyIGbgKPlpeX88uPHz9+5swZcvvo0aM2
vBxlLKRDUXZ/p/7Xg/zKkQBvJXpLwsvLi0sgzw9Ru4dfQv6OeCqViozmk0sE
gszzXDSd3ZP1/vASuEsNgrh9+zY8Snro7+8fHBxMOjN79mzuQkRCQoJN/eqY
JfUBNyTWMrDgf8WlaUeBdt9iuXIFv5sBASg4mIH8/PAuCXPnNs4336C330Zv
vIHefFOEV17BI/ivv64Fqg0diuuTdQ1wm/DWW7gyPMrVJAwZgl57DfPqq5gX
XzSP3T/yyN3cAu3b4/ed2b0J0adPH2b3zO4ZDLmjQLtvfRtJYLLdX7p0yaZ+
x21BOVk7XFxcLCgvKiqC8jlz5tTV1Z06dQqcKzk5+ezZs4LeQp0NGzZs2bJl
xYoVarV6z549oqOoLO4oz+7v1M/uiI6O5kwcws7OzsfHZ9euXboXlEhs374d
qoWHhwvKa2pqYmJiyH52JOzt7f38/ERn/pMgFxP4l7MEceHCBagwbdo0iXdN
NJKSkqAnEi1DXL16lcz8JzFx4sTIyEj+HH74ZCUmJpLFL2SBwKZNm4ztiXKC
/xWXph1m9y0HsPtWrXB6gdu3lc6tW2jRIvT778jRsXGmTm0kocGkSdq0BgTD
0yAImDABzxMQnWxv1A6AEG+9ha8wAHBj0CBayVVs1j42ds/snsGwAhRo9w9U
IQlMtnuSxwxsXVAOJVCuq0hkZXRAQEBgYKANL0JDQzl/X758uY1OzJw5UzSB
OQsF2j0JjUYDqgsqXVRUBLcpTyMIcl5enlmaogkDr2JBb+GjV1BQUFNTI1oB
XsXff/8NFfjJKlnoBv8rLk07zO5bDsTuy8os3xPLUleHTwWovZsb/tlycHRE
X3+NV+XrZuZvFG7PPuDee/EcgFdewbz0Ep4DoO+KgYHarli779WrF1t3z+ye
wZA7CrT7+2qQBP+ZZqLdnzp1Cs7GvHnzBOV+fn5QfvLkSUH5oUOHiK3b2tqG
h4fD3S1btpDBUC5X2LRp0+DurFmz/vrrr5KSkiNHjri7u5NrAoKN81jcaew/
pnn/n+rzcXiW5rd7Fizog/8Vl6YdZvctB2b3hNpatHcvnifv6orXKbQc5s/H
myp27oy3+TMKbkNAsiegYEe/9u0bLMMXYHimPgUGy6rH7J7BsAIUaPetNEgC
fXafk5NzWk+QvF7E7ufPny84EEqgHKoJyjMyMojdkyRgJE6cOEFWOpNxxqys
rNTUVH5WsYKCArK+WF8efiUHs3sWLEwO/ldcmnaY3bccrM/u4bUcOoRSU40j
ORktXowHtf39UWxsCwI+KYGB6Kuv0A8/SPHtt+j999HLL2tH5wEQ/K5dsdeD
4wOPPoq13cBB//vuwzn5G83nr8/6rTvY2D2zewbDClCg3d9ThyT4UczuNRqN
7gx5LoKDg6FOXl4eGWcXHDtz5kwov3DhgqD82LFjZOBesJE3SRV+7tw5fS9h
3rx5UCE9Pd3EU2C9weyeBQuTg/8Vl6YdZvctB+uz+7Q0nJHetBg0CF8ZsPhL
MAF4BzdsQJMnIwcHLb16oXbtcD49Yvdg+oYPtbdujY/lBvr5kD3+CPw8/G3a
3MW6Bf+JJ55YunSpuf6o6gtm9wwGo0lRmt1D/NFYiB4VHh6+Vk+Q3efLy8vh
bDg4OAjmzE+dOhXKBYnx7/yTcGzixImC7GdkJj/ZXhzEv6ysTHDgokWLsELu
3093GqwwJK7AyD0sfWpZWH/wv+LStGNGu6+tbYk7zckFsiMeSJ812f26dXgs
e+xY477neHnhQ8CCV69G6emmkJKC5s1Dc+ZYBk9PnOjPxgY5O2t58kks2uDd
xMrB1g2P++5rsGZfH/rG9K17xj7LqsfsnsGwAhRo900XZFE8f5heImd4TU0N
WWV//vx5rhBMn+TYLygoyM/Pt6nfzZyfLgxukwrcrnksWLBgQR/8r7g07ZjR
7quqsJ/m5DBM4fRplJFhbXbv74+8vfEIvlFH1dbi+fmgwPb2OHO+CYBfd+wo
nNDebDz4IJ6WP24czgpIGDgQlyOk6N3rmiLYuntm9wyGFcDs3owRGxsLJyQo
KIgMx8PPpUuX2vCy5N26dQusPC8vj9wNCwuzqV+qz6UH37FjB5R4eHjU1dVp
NBpHR0e4u23bNu4p4uPjber3AbdsPnMWLFhYWfC/4tK0Yy67r6lBCQk4qfiM
GZb/RylTQAOZ3QMaDTp3Dn3xBf51Mu1M2ttrJ6uLTmg3L4JZ8YRevfBy++HD
tXTurE2Vz3HffSLp8kQxaq896W34rC+Y3TO7ZzCsAGb3Zozy8nJnZ2eb+sz5
YPS+vr5w283NjZuWf/z4cShRqVTk7pUrV0j9OXPm/PnnnytXrrSpX4l/7Ngx
UiE9PZ1MzA4ODoYKAQEBNvWT+XUz8LNgwYIFTfC/4tK0Yy67r6jA6cQfeAD1
7Yt3+GL8P3v3AR5FtbBx/ISWUEOAAKGFJkhvIiBdQPSigIoKKKAfXRAFBaSI
gQhBelVBVEQsgF6KCIIgRVDpXYqGJh0CAUICaXznMLnDstlsNjuz2ezm/3ve
hyeZneycbJJl352ZM06kbFnafVLi49XEekOG3D91PU155RXVuAMCROHCLk/B
gg9MgK8deO/nZ/s4eT3asfSpzpUno70PYOeSeZm83U+dOtWsJ9WU0O4JIS4N
7d5cV65cGT9+vGzoWiuXNV+bUV+jtfuBAwfqSy5cuDBp0iR9/aFDh+7cudPy
Dv/888/Bgwfr51+/9957hw4dSr/vB0DmYPkS18j9mNXub90SHTuqM6Y3blRH
mJO05s8/xdq13jarntPtXubff0V4uDrXw4n89Zf46SexYoXz+eorMXt26tfI
GzZMNGyo5sBv2vSBNGkiGjc2Jw0aqHcM0pl2HkHGFxgYOHHiRLOeVFNCuyeE
uDS0e1eIioo6efLk1atXHVw/MjLyxIkT586ds5phT5OYmBgRESFXuHjxoqnD
BIAkli9xjdyPie3+uefUJcPkB24vlR4a+3PmJySoAyTkrR6UDz4QISFOtnsn
kph4P1evigsXxLlzzuTsWfV+y6pV4ocfUsnMmeKJJ9Qc+J06mZmXXhLPP5+U
du1EUJCjl88zmGzZ1POJj4/62COO+S9QoMCECRPMelJNCe2eEOLS0O4BAJYv
cY3cD+0+48R+u5eVc8oU0ayZJ6V8edGvXzq1++hodemBS5eSIn+lz5xxMidO
iC5d1DXrX3ghlbRuLWrUUAV/61bTIh+uH34Qw4cn5d131WPYq5fL07GjqFxZ
tfX8+ZPi758U7XQDyxMQtMvwyYV6cue+P/9AzpxJbxdYXpvPwdh828HmZQKy
ZhXZs2cfM2aMWU+qKcnE7d4g95cmQjwitHsAAO3e+2K/3f/9t7qEumw6evnK
+JFFr2fP9Gj38fGq0R8+rI7JN569e8Ujj4jSpUXz5qmkXj1RpYpo3169IWBK
jh9XF1D49Vd1zMPo0alHrmbWy8sBA0Tduuo3sEAB62g/TflBQICKVfe32fpl
T5dl37L+W70PkFKs5ifU3y5IHtnupZCQELOeVFNCu6fdE+LS0O4BALR774v9
di8b38iR6uLpsgB6SoYNU9dQSId2f+CAmmA/OFi1cuOpVUs11nfeSX0v/8GD
om9f1WqrVjUnlSuLhx9W8ysWKqQuq5dqqldXazr4ZovWzfVYLZGf+vmp5xM7
M/gZmdbP9Ejsu6fdE+IFod0DAGj33hf77X7tWvUa4IMP1An4npIJE2zMqie/
wUuXxMWLZuaXX9Q8+bKi1qtnQurWVVV34MDU377YvVv06KF2IlvuyDYSbe92
zpzqFHjZ8VNNqVJJJ8s7Ink7zlAn0TvB19f3gw8+MOtJNSW0e9o9IS4N7R7e
6tq1a6tXr542bZr8L2HEiBGzZs1aunTpqVOnTN/Q0aNHFy1aNHny5GHDhk2Z
MkV+fODAAdO3AriU5UtcI/dDu884cbDdu32cjsfmnPkzZqgTybt3NzOtW4un
n1Z3+++/JuTkSdXxZcEvXTqVyHItK7ksxQ5evF6/hH2q+8ElWdsdSWYWFBQk
/xM360k1JbR72j0hLg3tHl5p48aNr7/+eq9k+vbtKyt/QkKCKVtJTEz84Ycf
km9F+v77783aCpAOLF/iGrkf2n3Gidbujx5VP47k+e47df330FD3j9Px2Gz3
Q4eqOes6dzYzjRuLp54SgwapufUMJipKnD6trnNndT16E+M0j9u37mpc797F
7d79rYeQzBDaPbzP+vXrtYo9YsSITZs2hYeHnz9/fufOnRMnTtSWy4WmbOjo
0aPaHc6bN+/IkSNyK3LJ/PnztYXr1q0zZStAOrB8iWvkfmj3GSdXr6qfZrt2
okMHG2nSRLRsqU5jd/s4HU/ydh8fr84uHzVKLFxoZt56S01c37y52LDBaJYv
F08+qebKq1DBJSlfPmmHe1rPXs+aVU06Z0lb6Oub9KZBJuz+tHvaPSFeENo9
vMzly5f79esnfzNnz559+/Zty5sSEhI+//xzedPIkSNN2bG+ePFieW+jR49O
TEy0XD5+/Hi5fOLEicY3AaQPy5e4Ru6Hdp9xcv26qF9fvPyy2rWdPLLay9Yp
e7Hbx+l45swRb7yhDsXfuDEpv/4qihRRl4nfssXMfPSRuqBbgwbi00+NZtIk
8dBDamq76tVdkqpV1cH8fn4PTAgvG7oj7V6uaUlbKHt99uwqtHsXod0TQlwa
2j28zLJly+Sv5aBBg27evJn81qtXr/bt23fIkCHnz583vq05c+bIbc2cOdNq
+aFDh95///3JkydzcD48heVLXCP3Q7vPOElIEPv3qwni1qyxkfHjRe/eale4
28fpeGSXr1NHXSJNv7ZaQIAqpOvXi7g4MyN/gWUrl+2+XTujadZMleiKFc2Z
fj955ANSrZqa3r9UqaSULCkCA93Vjz1b8eLFafe0e0I8PbR7eJlRo0bJX8v5
8+entEJkZKRZ29q4caPcVu/evZcsWWLK2wWAu1i+xDVyP7T7jJPERPWDkAV/
3z4b+eQTdUVyz2r3e/eK114TTZvev0C81p1//FGdhuBcIiLE2bPi77/FsWP3
s2uXCAtTB+e3b+9otC7/zDPWefxxUbSoqFFDvVfgYOrXV9PsV6pkncqVbadC
BVlLRbFiSQkKEgULevbc9e5Cu6fdE+IFod3DmyQmJvbt21f+Wq5fvz4dNhcd
HT1hwgR9Jr133333yy+/3L59u83DBoCMzPIlrpH7od1nqMiCHx9vO6tXq8Py
PWvO/Lg4ce2auHLlfi5eVLuqp05Vu/Wdy9q1Yu5cMWyYuh69ZQYMEH36qKvP
Oxi5crdu6jwIq3TurCboa9lStGhxP/JTO2neXO2Uz5nz/sH2WnLnfiDa1e60
WN0kV7acdi97dnWEA1LFkfm0e0K8ILR7eJMbN25oRfvQoUOWy7/55pvP/+ez
e6xWcFpsbOyiRYveeustywnz+/Tps3LlSquT8YGMzPIlrpH7od17Sn75RXXS
Z59VH3hQrM4vWL1aTVj30kuif38nIx+E9u3V7vJHHzWamjXVPvrkp8ZXqCDK
lXvgsvLyUzuRKxQrpvp4qlev006Qt5nkV81Dqmj3tHtCvCC0e3iTO3fuaP16
8+bNlssHDhxodcW6VatWmbjdhISEf/75Z8WKFRMnTpTVXtvEJ598YuImAJey
fIlr5H5o956S9evF88+rHd9Dh3p2ZDEvX16deO5cihdXJ/IDgnZPuyfEK0K7
h5fRdqMvWLDAcuH27du3/I92Yr4p7V6W+lu3blktjIyMlL1eK/iXL182vhUg
HVi+xDVyP7R7T8nx4+qA9o4dnXzxMHKkGD5cDB7swrz5ZtJh7cmnqnvmGXV8
e6NGKiVKqOn18ud3MvnyqRnmMzmO29fQ7mn3hHhBaPfwMlqzlhU+Pj7e5grT
p083pd2fPXu2d+/effv2jYqKsropMTHxnXfekVvZtGmTwa0A6cPyJa6R+6Hd
e1B27FDXkgsLcyYhIWLECPH22y5Mr16iSRNV3pNf5L1MGXUZOJhFu4IemFWP
dk+IF4R2Dy+zf/9+bb/5nDlzkhf8hIQE7WL0xtu9vKtBgwbJu1q3bl3ym7Rz
AeRgDG4FSB+WL3GN3E8mb/cJCeLoUbFunZqrLePnyy/F2LFqbj0n0q6dmg3+
qadEmzauStOm6qT1hx9WE+NbpXFjUa+euhicVWrXVqlZU00lZ3XiuenJli31
a8qnT4xj372Gdk+7J8QLQruH99EuQy/Nnj376NGjd+7ckQujoqL27NkzevRo
E8+7/+KLL7R7W7Zs2fXr17WFERERM2fOlAv79+8fGxtrfCtAOrB8iWvkfjJ5
u4+NFd99pw5Zd/vZ6K5OyZJqh29w8AOTxZmbIkXUVmRbf+EF67z4ojpo/9VX
k9KtW1K6dlWRN+XOncqkc8bj56emqpPlWv5rPO5t99AUK1ZsypQpZj2ppoR2
TwhxaWj38D7R0dGzZs3SJ9Dr27fv4MGDLSe0//bbb5MfTu+EGzduWF4R7623
3tL25msb/f33341vAkgfli9xjdxPJm/3N26IqlXFe++J0FAvj2zfOXKo66oX
KuSqFCggAgLUB7LjJ09wsChd2nbkTdq++1TnnDcYbS56s5Lxd/F7vdy5c48b
N86sJ9WU0O4JIS4N7R7e6o8//rCs3tLQoUPnzJlz9uxZE7cSFxe3aNGiESNG
6Fvp37//hx9++Pfff5u4FcDVLF/iGrmfTN7uIyPVAzhunJqwzrtTs2aKvdvE
FCum9uCnNYULq7cFXB2n5/GzE39/FyZfPg+On5/5yZ5dvUXj65v0aZYsIkeO
HKGhoWY9qaaEdk8IcWlo9/BuMTExss6fOnXKlJ31dkRHR584ceL8+fMJCQku
3RDgCrR7s9q9j4/Yv1+cOiVOn/bmbNmiLje/apW64ryLIu9c5qefnMmPPxLv
ydKl4p13RP/+Jqd5c9GggWjfXrz2mkrp0rLs+4SEhJj1pJoS2j0hxKWh3QMA
aPcmtvurV90/Elfnzh0RHa2+X+IFuXxZXLig/mzNypkz4u+/xZEjapJJ49m7
V4wfr67UMGGCmZHPMP/5j6r58s5lqlRRu/Jp97R7Qjw9tHsAAO3elERmmnaf
mKiSkEC8IYcOiU2bxPr1pkX+5Xbrpv6EX3nFhDRrps62ePZZdZFEE9Okibru
w8iRYvlylQYN1HQNtHvaPSGeHto9AMCsdv+f/wTPnq0upH7ypKH89ZfarfbN
Nya0e1leYmNFTEx65MKFzNLuiZHEx6tflXPn1L9O5PRpo39fVvn5Z/H11+oK
iWZl4kRVnB95RF3W0HjKlVN71WXHT371BCORw5ON/s03k8Zct646E592T7sn
xNNDuwcAmNXuO3UKLl9elCqlXpAbSdmyomhR8dVXJrT769fVQcK//ZYeWb1a
PYC0e2I/sqF37qx2bWuX8EtrqldXfyDBwaYlKEiUKSPkX65ZkfeZJ4+aqi53
bhOSI4f6s8qZU92nifH1VfH3T5qM8d6nvsyqR7snxNNDuwcAmNXu33oruEYN
1RQyTrs/fVodKrxkifj+e5dnwQLaPUk9x46Jp54SrVo5udNZ1ucCBcyckV42
6EKFnLk8QUqR9ybvU/ZxU9p9rlwOzYGfI4fa+W6ZLFnSdkU82j3tnhAvCO0e
AGBWu4+KCo6IUJN0GcypU+Lpp805Mn/cOFG8uGjdWh3q7+o88QTtnqSeyZNF
v35i0iSxbJkzmTdPDBsmBgwwLR07imeeMfMP4amn1Iz0TZqkXxo3FjVqiIcf
FhUrJuWhh9R7ID4+1pU/pWhvBXBkPu2eEE8P7R4AYFa7T0x8KT6+aVyc0Vy/
3qh9e3Nm1QsJESVKqLNrBw1yeWRlo92nZ2JjxZ9/qsvzbd3qSenTR3Xqzz4T
27Y5k3XrxPz54uOPTcvYsWpyueHDU8ywYep3u1cv0bOnQ+nRQ51BYDkzXseO
6gz6Ro1c1e4bNhQVKoiaNUXt2kmpXl3NxZcvnyhYUB1LICM/kH1fu8a9Hn3X
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
oaGhrn5qo90TQuznZLCh0O4BABmv3ccnJGy8edOEjBz5KrPqEecSEyPmzxeT
J6sT2+1n7FhRtapYvtx72v3MmWr399ChYuFC0zJliujb1+i++7g4sX69Ogwg
LMx25M+ie3d18fp8+VQKFBC5cqlz6rVkz67+ldVekuvIgp8tW9JTX548ecaN
G+fqp7ZM2+77zRJGYrQxhRhK348MZdg4Q5n2pvOZ8YahDJhuKG/MMJRZ/QzF
4Pf+bpjzeXOaoWx9zFBo9wCAjNfuTTNmTAjtnjgXWdVla5aFtE+fVNKjh9pN
7MZ2L5v4zz+r5mtW3ntPVfuPPhI7d5oW+fiEhIiXXjL0zSYmqiMlPv1Ujc1m
Zs8WgwapvfOBgSolS4qCBdUOei1a5c+TJym5c99v9/ny5QsLC3P1M1Kmbff9
ZwojMdjuDW7dvVnbyvkYqagy7v3GJ71tKG4c+dDxhvLeGEOh3QMAaPeEWEU2
3H371CXsw8JUfbafcePcvO/+qadEaKjYutW09OypjnL/+mtx44Zp2b9fte+O
HY1+v7Gx4swZcfq0OHVKnDxpI3/9pebNW7NG5ddf1b5+mXXr1BsgP/wgvvxS
XU1jzhzxySfqYvcNGqjnvSxZZM3PNmbMGFc/I2Xadu/2o51JZsu+6obi9vE7
Hdo9AIB2T4hVZIWUJbdkSdUEv/gilcieWLOmmufNLe1+xgw16/sbb4glS0xL
p05iwAD1gYnjTGnO/MRE9V6K/CNNU+RDfe2aiIiwkStX1Jz5586pyA/kp3Lh
5cvq0yNH1JQCsulv2KCyeLF48km1Bz9HDvXsx5z5tHtimX/KGYrbx28kn7/m
fNw7cto9AIB2T4hVZLv//XdRpYqqhDdvppLz50WLFuLHH93T7mVrbtNGtVRZ
nM1KrVqiS5d0aveRkapop/Us/ieeUMdLlC4typSxHXmT1a3BwWpivRIlRLFi
onhxlaAgtfDzz9WVNTLD9e6/OJLgrri9rBHiKTFYzw1unXYPAF6Adk8yQxIS
xK1b6sjtU6dSzz//iKVLVbu/cSP1e3bvFfEuX1bzyMnW/H//Z1oefVR062Zy
uz9xQvXodu2sH+r9+9XR8pMnpy0PP6zOoM+aVZ0473SyZ1fT5tPuafeEZJzQ
7gEABtHuSWbItWuqsJcpozp7qqlcWZQrp1bO+O0+IUEdf37hgvrXrAwZomYU
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
Q/THjlVvEdiZDLByZRceQlCwoCrOxYurOQDdHm02QjmwChXUCQvapQcCA5MO
Y8iXT1X+VN8okOtYJUeOpMMSMoKgoCDaPe3eZia9bShuHz9xIrR7AIDnsnyJ
6+6xQImK2rh+vXjkEdGjhzekY0f1q/Xrr6rgp0+2bxebN4tFi8R336U5U6eq
ifXeekvNrdeokXj8cXUFQJtp2VLdmmrq1Us69cDx1Kiher0sv0WKqMMe3Jvg
YHUMgyz1MvJjOTDZ6wsWVGcuBASI/PnVoQW+vtbNXS6xSvKLDmg7/TMI9t3T
7gnR48Z2f6CqoRjcOu0eALyA5Utcd48Fmo1RUWL1avHf/3pD5sxRv1rDh4sx
Y9Ipo0aJ115TR7nLHprWFCp0v7dmz64m2QsNNZTOndUB/3rZb9HCXlq2THrT
oHLlpEacfJe3c0let52Idky+j8/9JdoUAV6gZMmSzJnvuowfKozEYGEZ8qGh
/NzaUEaNNpQpA53Pl10NxcimjafnXEP58WlDMdLuP+ltKBMGG8q87oZCuwcA
L2D5EtfdY4FmT2xs0337mv7xhzfkp5/q16ypavJ776VT5LZkp5bsX7A+1Uiv
vip69zaUJ55Qu+/r1EnKI4+kkrp11WplyiSd0m55hruRaPvKjUfr8lYn3XuB
cuXKzZo1y9V/2Jm23bt9V6znZtww5+P2wXtujLT7vTUMxb3fOO0eALyA5Utc
d48FXuj27ZObN4uwMKM7wR2PfInSrZu7amIGlTNnxprFLqOpVavWvHnzXP23
QLsnac03nZzPtkcNxe3fuxvjxiPzl7UzFINbp90DgBewfInr7rHAC8XHXzt5
8v3ffnt/06Z0yoYN7//3v+9DFxLybmiob0iI+18zW2bUqPvRj7sYOfKBjBhx
P8OHJ2XYsPt59937GTr0foYMScrgwffzzjv38/bbSRk0SGXmzLE7duxw9d9C
LwDI2Fz9NAgAcDXaPeDtIu/e9Zd/6xkkiYkqCQlJiY8XcXEqsbHizp2k3L6t
EhMjoqOTcuuWiIpSuXlT5cYNlevXVSIjVa5dE1evJiUiQly5kpTLl8WlSyoX
L6pcuKBy/rzKuXPi7FmVW7eOxsXFufvHBAAAABhCuwe83e27d8Pu3g3JUElM
vJ+EhKTExz+QuLj7iY1Nyp0793P79v3ExNxPdHRSbt26n6io+7l5Myk3bqjE
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
L9vKgQMHLD/dvXv37du3U1r/+vXrO3bsuHDhglkDsDRr1qzixYvHxcWltEJ8
fPyJEye2bdt2+vTpxMRER+5TrnbmzBn5JYcPH7Y8JMCq3cfExOzatevy5csG
vwVdv379nGj3KY1W58QjIN26dUv+lOUPzsRv0BXkL97OnTvN+u2S36z2GsmR
di8fTLld+RCFh4fbf2BHjx5dpUqVdDh5BACQqdDuASCzsd/uixYtmi+ZTp06
Wa128OBBf3//bt26DR8+3M/PT95huXLlrly5MmLEiFy5cslPg4KCDh06ZPVV
S5YsqVixoo+Pj/b/TmBgYFhYmImH0EdFRRUpUiQ0NNTmrdu3b+/atWuBAgX0
//jy5MkzduzY5G8FyFotv+tVq1bJj7/66qsKFSroX1KyZEl9Na3dV69eXX6n
jz/+eI4cObR1ypQps3LlSqv7dPCBlapWrRocHFy4cGHtDuW/Vl+1ceNGJ0ab
pkdAFv/8+fM3adJEfnz+/PlXXnkle/bs2pdkyZLl008/1VZr2LCh3LTNBzwm
JkZuXd66YcMGmz8OO9asWSO/sGDBgslvCggIkDdt2rRJX1K5cmW55NatW1u2
bGnVqlXOnDm1ccrH4c8//7T82unTpyf/EUj79u2z2sqcOXPKly9fvHhx/UwW
+Vdj+SWtW7e2XD86Ovqdd96xfGBz587drFmz5L8GmoiICPnIz58/P62PDAAA
dtDuASCzSVO71/6DaNeundVqO3fulMu1Xi9rvraa7Lna6fzapx06dLD8kpdf
fllbLnvTs88+W79+fe2Y5yeffNKsb23q1KmyhF68eDH5TdpR7nr7bty4caFC
hbRP+/fvb7Vyly5d5HLZlOUdauv4+PiUKlVKNkfLM6a1dq8/DkFBQfIRyJYt
m7b+ggULLO/TwQdWkiXRcp1U272Do03TIxAeHi7uvWMjq/3DDz+srSZ/0PK7
kB+sXbtWW23WrFny08KFC8sub3UPCxculDcFBwc7sYf6p59+kl8rf5TJb8qa
Nau8af369fqSIkWKyCXvv/++fKDkb1SVKlVKly6tDTggIOD69ev6mlbtXvtD
kPbs2WO1ldmzZ2vr6O/Y2G/3zz//vLaafMDlj+OJJ57QHihp/PjxNr/HgQMH
yj+EtD4yAADYQbsHgMwmTUfmyw5ip91LstfExsZ+/vnn2qdyfdnmhg8fLj8u
UaKEvv4nn3wil8hqNnfuXP2g5S1btmhvBchmasq31rBhQ1msbN60YcMGua3R
o0frB5bfvn27e/fu4t7E9Vbzqml9uUaNGvLfihUryjGfO3fu7r3Z8E6cOKGv
prd7+Z3qe6hPnjxZuXJlcW+/uVw/paGm9MBaeuaZZ4QDR+Y7ONo0PQJau/fz
89OOtXj99dc3bdqkHWUh71M/7SI6OlqbdG7evHlWo2rWrJlc/sEHH9gfvE1O
tHupQYMGR48e1RbKX29t4axZs1Laiiz+KbV73a5du7R17ByZf/bsWW2dhQsX
6gvlX8E333zTtm3blK6JsG3bNvklyQ8bAADAabR7AMhsTGz3WbJk0XaU//vv
v/LTYsWKab1Pli9tp7O2ckxMTO7cueWSsWPHWt3PpEmT5HLZBI1+V3fvypHI
8cjGndIKybv2rVu3tF3k3333neVyrS9LdevWvXr1akp3qLX7okWLXrlyxXL5
b7/9pn25nZnTTG/3qY72bloeAa3da+y/9zJmzBi5TtWqVS0XHjt2TKvn58+f
tz94m5xo908//bTVdyfLvrB1WILOrHZ/4MABbZ0ffvghlW/MQmJiovx7kY+e
418CAIB9tHsAyGxMbPd6f5clUX5arVo17VNZl7Q9wtqn27dv1z5N3j21NWVB
c/77+Z8NGzbIu5K1NNU1jx49unTp0rCwsN69e2vddty4cZYraH1ZPlD2r5Vm
Z8784sWLy5smT56c0tea3u5THa2lVB8Bvd3bacca7RRyYXG4vjRkyBCR7NQM
xznR7hctWmS1pnZYwnPPPZfSVsxq91L9+vXFvUNT5Le8ZMmS6OhoOyvr5Mov
vPCCI2sCAOAI2j0AZDbp3+7nzp2r/UeTIxn9/yDjc+t9/fXXsl7ZmS3/xIkT
ffv2DQoKEsmEhIRYrqn15ddee83+Fu20e63uDRgwIKWvNb3dpzrau2l5BPR2
f+rUqVTvVvtennrqKe3T2NjYwoULyyXr1q1L9WttMqXda6Nq27ZtSlsxsd3L
u+ratas2j4S4N6Ve+/btv/vuO/u/1fLXo2HDhnZWAAAgTWj3AJDZpH+71066
l3ql4PXXXzf+fU2bNs3OMQAbNmwoWLCguHecQO/evZcuXXrw4EE5bO30cJvt
vnv37va3aKfdV61aVd40cuTIlL7W9Haf6mjT9Ajo7f7ff/+1f7d3752XIZu4
j4/P4cOH5ac//PCDuDdlveOX27NiYru38wib2O418kGbOHFi48aNtUGKe9MS
/vbbbymtHxoaWqVKlVTvFgAAB9HuASCzSf92v2XLFu0/mjNnzpj0Tdgwf/78
nDlzpnRrmTJl5ABeeOEFOVTL5a5o93fu3NEuC/j111+n9LWOtPvnnntOrpPq
Wx8OjjZNj0Ca2r306quv6kNt27atsHtWQqpWr16tbV2fvk+Xzu1+//792jqX
Ll1yfPxXr16dOXOmNjB/f3+rB1w3ePDgevXqOX63AADYR7sHgMwm/dv9zZs3
taulp3oStxFr1qyRm7C8AppOm/RPsjozPT4+vnbt2qa3+48++kjb3KFDh1L6
WkfavXy4hANXDHRktGl9BNLa7uV36uPjkydPnr///lv+rP38/CIiIhz5Qpv2
7dunbd1qSvl58+Zpy9Ot3V+5ckVb588//7QzYJsT48sv0b72999/t/lV3bp1
a9++vZ27BQAgTWj3AJDZpH+7l8LCwrT/a8aMGWO5Q/bIkSNyEw7OQmbfiRMn
5P3rV6azdPnyZW3r8+fP1xfu3bu3Tp062nIj7V622p49e+oTBq5du1a7zJ/9
CdMcafdz5swR9y5MsGXLFn1hbGys1b5gR0ab1kcgre3+7v922VesWFH+K4fk
4FfZJHu3/OUR9+bE02bCl99yaGio/ool3dq9VKxYMXHv/H3L39tr167pH3/y
ySf+/v7yN9zq13jkyJHa/V+4cMHmPcsHf8iQIXY2DQBAmtDuASCzcUu7T0hI
aNOmjfbfTVBQ0NNPP92xY8fatWtrE5FNnz7djO/sbqVKlQYPHmzzpscff1xr
4s2aNevUqZN2GXdfX98KFSoYbPfaseK5c+du1KiRfATk3Yp757bbn4/OkXYv
26JWXeUmmjdv3rlz51atWskfn9Vl1BwcbZoeASfa/e+//66/oti6dauDX5WS
//u//9PuqmjRovXq1ZPjFPcOY9CONEjPdj958mRtteDg4OfvqVq1aq5cufSy
/+qrr2o/9Dx58tStW7dr1659+/Zt2LCh9lU9evSwebfnz5+XX7Vx40ZHHxEA
AFJDuweAzMbf318+53///feOrKxd2kw2GqvlWn+3aveyeVneatnuNV999ZV2
9reubNmystqbsu/+7r0TmVOazO3SpUvt27fXtys78rPPPnvs2LGpU6cm77bd
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
1FfT2702pUCDBg2WL18uP5B9vFChQsKxdr9o0SKr0ert3vLNDV2BAgWioqKc
/VEAAAAAAOCkuLi4smXLWrXUli1brlixQjtXXWfV7vPmzVu/fv3cuXPrS+rW
rauv3KVLl/IWfHx8HGz3sh3Xq1dPX2J11v93332n35Q1a9YWLVq0adNG3yPv
6+sbHh6uram3+7Zt28p/5TradHmPP/64HLllu9++fbvlUC2PCrDT7jU5cuTI
lSuX5ZKFCxea8nMBAAAAACBNNmzYYFnSdY0bNz5y5Ii+mmW7l7U6IiJCLjx8
+HDOnDn15dop+cn5+fk50u5HjBjRsmVL/dMOHTokJCRYrmz5RsQvv/yiLdyz
Z4++cPz48dpCvd2HhoZaflNhYWHaBynNqifvwcF2P2DAgOjo6Js3b7700kv6
wpCQEEcfdwAAAAAATLVv3z7LWq3z9fWdP3++to5lu7e8TN4LL7ygL1+7dq3N
+3ew3WfNmlX/uFGjRvqEfpqIiAj91ty5c0+0oO++79atm7ay3u5nzJhheZz/
li1bTGn3xYoV0xdaHlHQp0+fVB9tAAAAAABcZ9euXbId601ckzdvXm03fUrt
fsiQIfryefPm2bxnB9u9JVnJraast3OCvK5ly5baynq7Hzdu3KhRo7SPK1eu
fPLkSdPb/fbt2/UvMeUCggAAAAAAGHT16tXQ0FDL6eXXrVt3N+V2//rrr+vL
ly1bZvM+nWj30ttvv2255tatW1Nt9x06dNBW1tv9+++/v2/fPu3j99577+jR
o7R7AAAAAID3OXHihOzR2g56nTYZneb777+/m3K7r1Onjr5cdmebm3C83Rcp
UqREiRLaxz4+Phs2bNDXjIqKypIli3ZTnjx5/v3334Rk9JkA9XY/atQo+WnL
li2rVau2f//+I0eO0O4BAAAAAF7m+vXrVapUkbW0UKFCYWFhW7ZsOXbs2IIF
CyyPzz9+/PjdB9t9u3btLl26JNv01KlT9YX+/v5xcXE2t+Jgu5eV+fDhw5s3
b9ZbfKlSpSIjI/WVa9Sooa/cvn37c+fOactjYmK+/vrrkydP6mtatXsd7R4A
AAAA4H2efvppYVeDBg20Na2uiOfj42N1MbiJEyemtBUH2/3o0aO1hQMGDNAX
dunSRV95y5YtljPvSVWqVJEj9Pf3lx937NhRX5N2DwAAAADIPFauXJn8eve6
IkWKnD59WlvTqt1bqVOnjtUU95YcbPdjxozRFkZFRVmOasmSJfr6kyZNsir4
Oh8fH/0SfrR7AAAAAECmEhMTM3r06MqVK1u25rx587799tvXrl3TV7Ns9y++
+GLBggW1j3PkyNGzZ095J3Y2YafdL1++XL/bsLAwffmGDRtkW9eWy23duHFD
v2nv3r0tWrSQ9Vz/Qvlx27ZtN2/erK+j7/0PDQ213Fx4eLi2PFeuXDaHar/d
BwUFaTcFBwfrC/fs2aN/Sb9+/ew8DgAAAAAAuJps6Lt27dq4cePZs2eT32rZ
7j///PO4uLh9+/bt3r3bfq93ndjY2L/++mvr1q3Hjh1L6Xx/AAAAAABgKaU5
8wEAAAAAgKeg3QMAAAAA4Olo9wAAAAAAeLqDBw/O/p8TJ064ezgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4E4CAAAAAAAAAAAAAABkAO4+
ggAAAAAAADiDdg8AAAAAgKej3QMAAAAA4Olo9wAAAAAAeDraPQAAAAAAno52
DwAAAACAp6PdAwAAAADg6Wj3AAAAAAB4Oto9AAAAAACejnYPAAAAAICno90j
nS1fvnzBggX//vuvuwcCAAAAZDjHjx9fvHjxjRs3Mu0APM7JkydlwVm5cqW7
B0K791qxFtw9lgf4+/vLXzbZ8d09EABIg8TERPl0GhcXl/ym+Ph4eVNCQkL6
jyolcpw2RysHmQH/XwDgUvKpYO/evatWrdq/f3+GeqYySHs286bvSBMeHp4l
Sxb5arlmzZqZcwBmibXL3G1NnTpVPmK1atUy926dQLv3SufOnbP8yebLl+/R
Rx/t1q3bTz/95O6h0e4BeKRNmzbJ567s2bPfunXL6qZOnTrJm7p3755ug5Ev
0Xfs2GHnNe0zzzwjhySfb+/cuWO5/M0339T+Xzh//rzrhwnAzXbv3t2oUSM/
Pz/9NWHJkiXnzp3r7nGZQHtOljp37uzusZhsxYoV2reWLVu2qKgo43d45coV
+V/G6dOn3TUAdylfvrxI2datW03cFu0eLqW3e/nSLigoyMfHR/8pv/LKKxER
EW4cG+0egCfSX0kmP1JRa/cvv/xyug0mMDDQ5kh0WruXfvzxR31hYmJiiRIl
aPdAJjFt2rQcOXJof/LySaNatWqyrGmfDh061N2jM6pfv37a95I3b96YmBh3
D8dMd+7cef7558uVK/fhhx+acoezZ8+WD9SgQYPcNQB3qV27dv7/0auQvkT+
t27itmj3cCm93R88eFB+GhUVtWPHjhdffFFb2Lx5czeOjXYPwBNlnHafkJCg
HTPpSLvv2rWrvvD333/X/8en3QPebe3atdofe6VKlfbu3astjI6Ofu+993Ll
yrVlyxb3Ds+g+Pj4IkWK+Pj4VK5cWX6P//3vf909ogwtJCQkTe3eK+XNm1c+
CN9++62L7p92D5eyave6KVOmaMuXLVtm8wuvX7++Y8eOCxcuOLihEydOHDhw
wOrITyuxsbF79uyRQ9I+DQgIcKTd37p1S96zHMzly5ftbF3ec6pv2MoByMfh
0KFDaTrFJtUByP9Z5AC2bdt2+vTpxMREO3cVFRUl78ry0927d9++fdvxwQBw
O6fbvePPq9euXdu/f798WrN/JKR8UkppJDqt3RcoUMDy4Hz50k47piuldu/4
05pGriYHbHMuAgBulJCQUL16dfmXXq1aNfkUZHVrqsdwyj//M2fOyKeCw4cP
y6cFm+vIp6ldu3bJ1cwZsQX5Akne86VLl+ys8+uvv8rvrnbt2pMmTZIfdOzY
0c7K0dHRR44c2blzZ6pzxMlvXD5Xy2fs8PBwR54DHXwhqpGr7du37++//3bk
nh3h+DO2dpyDK9p9Wn8N5A9X/iDs/4fo+M8rTdLU7h0Z5917hUv+Amj9Yvr0
6fbbfVpLltNo914ppXYv//bl87xcXqNGDasvWbJkScWKFfVj+AMDA8PCwqye
0hcsWJAvX76RI0fK14pDhgwpV66ctnK2bNkGDhyYvONfvHjxueee08/2Kl26
9OLFi4sWLZq83cvnpfz58zdp0kR+LF9zvvLKK9mzZ9e+KkuWLJ9++qnlyvKP
XT5NaS9Qta3Xr19f/r0kfxyuXLnSu3dv/a7kmvksdOnSxbkBbN++vWvXrvJl
s/63kydPnrFjx1q+xJWPvBxht27dhg8frj0C8uGS4xkxYkSuXLnkp0FBQYcO
HbL98wOQ8TjR7h15XpVu3rw5Y8aMOnXq6GvKD+TTmuW7gtKcOXPKly9fvHhx
/QhD+VrF8jmtdevW+spau2/fvr2wODg/ODi4VKlS8rVH8nbvyNOa9NBDD8kN
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
nSpmzJiG5UpVd3yBAgXCnRd//PhxdaC1a9c6TulURZRcsEo8bNgw6105Hlbh
wFyHmS6xNdzr7s0/BmFvfzWqVatmyLPqGdQPNjB/v1zDjLs3k8+SJUvSFvLd
hnBeKriZ/nfQ2coAMW7cOGW1Tp482atXL2EZb+zsuAV9zcSpD4KIjAN3f+nS
JfWWah09dOiQsLT1WRfmv/32m7A0jWpbVPGbOXNmQ0plXYljx46pLerhpILO
ulnSZsx8zVwbxhQZmDBhAqVJlSqVdZGoZrtkzJhR21K3bl3a0qBBA30yNQs1
KCjI8HGTGTBAv5Xr168fPXp0+/btVaE6atQo9ZZy95p/p1JXWILbqH/VtaXL
bv5YAADfolXqqGIZ9F9U67pWqXOqXNXz4MEDqs3OnTu3d+/eJUqUEHbaAJ1y
92fPnhWWpVLo78CBA8PsuHsNB8Va2Nv6j6FaS1CehWWwlr38AAC8iXL3+toO
fW31df7AwEB9euXuyf7Y7PnVUGXCvHnzDNufPn2qJj9q1skFd29dvSSSJ09O
b5Fv0ra8ePFCDUTXhobSFhWx2VA0UR5UF3PatGmHDBly6tQpB6dWqFAhYelj
pdrj6tWrbc7iD3OyIqqmOSROnNipqM4Kx+5ew3GJreFed2/+MQiz/6uhBhvU
rl1b2+LU/XIBM+4+3HzSfVf7MbSPhdmKme9CZYD2X7FiRWGZ1ExXg75BZCic
PVO4e7/EgbvXKqhqOuecOXPUv9Gs0B4MbbCoveL33r17KqU24r1Fixb0b7ly
5azz5tjdX7p0ycF5tWzZktJUqFDB+q1169YJS1+5ViCrNrTo0aNrTcHXr19X
I17mz59v+LjJDCguXLjQsWNHbaqsHiqOVBq4ewD8DPPz7p0qVxUrVqyoWbOm
FoPU8U+zU+6eXhcsWFClV5Ulm+7eTLEWZr/+s2XLFpXYfNgfAIDnqFevHn0f
q1atqm2hCuFQC2QDhR13T7UsB/vUuod+/vln63dVZKF+/fqpf93l7pXp7tq1
q7ZFGy9KJqjmW2LHji0scyENH6faZurUqbXSLEuWLF988YUhnJ2CqrLNmjXT
YsTFihWLdksls6Gsdqoiqq6qzcTh4tjdmyyxNdzo7p16DMLs/2qo/VevXl2/
0fz9cgHX3L0hnxcvXlR5s15T0trdu1AZCLNM3FBZJUaPHu3CmeqfBxc+DiIm
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
babZu3evunR///13uFmKgMDdAwAAAAAA4DeQ3SanRnX7fPnyGbqJXXb3RNGi
RYUl8p5h+9y5c5WVOHHihNqi9dvSC33KefPmqe1mrKXWhXry5En6d82aNcOG
DSMbmCRJkmFWVK5cOWPGjPRi+PDhT548CbMEQFu9erX1WVAa2uenn37qxqzO
mDFDn1WFisDWpUuXGzdubN++fffu3f/884+9a2vS3f/www82222ePXuWOnVq
2l63bl03npfhFoQ5fxccc+TIkQQJEjRq1Mgw0N3kvbPGsbu/dOmSij1Iz7Aa
4WAT+sqoCRSOYyBEWODuAQAAAAAA8Cc2bdqkqvc5c+Y8duyY2vj48eMePXq4
7O7JD6rZykFBQdoSaVu2bKG90caGDRtqKe/du6dWS69du7ZK+ejRIxX2zZ61
pD23a9fu7t27aiPZWLVbza7OmTOnffv2FStWpO3trShcuHCqVKnUazrWqlWr
1IHo1Oj0VVfv1atXyduqTnY6Fierbdu21UKubdu2TS2UVq9ePf3lItMq/rtQ
oANMuvvXr1+XKlWKkiVPnlwLIE9GVa2BSJ5Uu9eeuAXO3gXHp/zbb7+Rtaec
G6y9+XtnjQN3T/dLrbKXNm1aB80sitGjR6s8DBs2TD/44fTp03QIFdkgwgJ3
DwAAAAAAgJ9BDkX5O4JsVLZs2QICAtS/lStX1qc06e7D3ronYZlLXqlSpezZ
syu//+mnn968eVOfUi39JizrrBUsWDB69Oj0mj6i4vnbXGydiBUrVokSJWi3
aim0pEmTGqLMmRyZf+vWrYYNG2q7jRMnTvr06bV/6TWZX5ezqka2U1aLFSum
XQHrrC5atEi7+MWLF69koVq1as2aNQsJCTEsT2DS3RPnzp1T8/cpG5TD8uXL
Kw9O0G69cAvM3wUHHD16NGHChHXr1rUeHu/UvTPgwN2XKVNG20lKW6xdu1ZL
/OrVq6pVq6rEyZIlo7tGWaLrpq6Jg7B+EQG4ewAAAAAAAPyPffv2abZOWDpn
M2TIQFbOEG2vefPm9G6HDh3M7JNMEHl5zT7EiBEjODjYOkzc7du3yehpyT7+
+OM+ffqQlVPrxO3cuVNLqaxljhw56AUZYZWebBTZq+vXrxt2u23btrx581rn
ij5bp04dw8Y1a9aQAVczxxUBAQE9e/Y0rHRmPqsqmnq/fv1mz56tLLaDrN6/
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
S+wZlDu3XLDPOiB/5cqy5/2994zr3TulePFkSH/rSffvv+89Zwr4wN17Tv1G
CY6YhcO+IiwxJ84zF16f2cF1MXvPmfb8QEGWmC6V+cxwhprMbscSM5wgM+Q+
3D0AAPgB+vqtr/PiSyKRu1+/XkycKEaN8oEGDhSpUomECcVnn0UsVakiB9i3
bi1t/qBBRpGRL1NGzrvPmfM/ypBBrpfnITBQP3IBd+85TQ8SHDGd2paKLDHH
eG+twBKn7565VAHTZjIDDjDFDFzfYabrYi6ywAx3UHoHS3D3AADgB+jrt94/
+qtXr44dO7Z169bvfM2yZQtKl3abu1+4UA7Ynj/fzZo3T4wcKXuo27eXNtb7
6tFDjkVPkkQube9G1asn+9wTJnROH330buw9vY4dW+YtdWqRJo1RH38sl7aP
F08Gt9crIEAO2vcQ//ufp/YMPAHcvefE9IlMd8/sS11Xi6XxPX0mZuc7c8H6
FJdZYsamW9SMJY67Zwb06z6RJWa8Arh7AADwA/T1W68f/PXz57fI2s+fP2vO
nGm+1YQJw4oUcY+7/+cfsWiR9JtffulmDRwoY8GRLW3cWPTt6wN17y4++USa
5c8/d0WUbfLyDRoYVbeu7Ft3lujRjfrgAxt6/30peoHOdOAAuHvPybcx85ke
eeBwX4oT9L7BCpaYjQPM8G4cf01irmPYdLHrYh6aGagBffcAAAD09VsvH/rl
y2vnzpUsWjRXhw6Zu3XL6Fu1b582d273uPtnz8SpU2QW3C8y+C1ayE5q8si9
e/tAPXqIGjVEhQoy2rwLqlxZjofX97lrPe8JE8rObvMi3nvPlKJF+8+nALAJ
3L3nxAwUxnT3zM7QGR1ZYrp7zvBy5op4zGgJWU6y1HO8L8Xx18x4gAUPsNRp
Kktw9wAA4Afo67dePvSLFxePHZPjpZs2FUFBPlbLlnJetlvcPenmTRnFfcwY
N2vUKJnVJElkJ7hP3D2pdWvRqJGLs+MrVJDj5IV4059ukEm3rkRW3eZGa8WI
YSPkHQAG4O49J+YaYUx3H9KbpcahLLWdwxJnlDXT4fYfyVKc+ywxZ68zG5QG
jHBdzBkNzAdm8BCW4O4BAMAP0NdvvXxocvdHj8rIZrt2+X7B9H37ZBw8d7n7
58/l+PyLF92sCxdkVkNCxPDhcgK+TzRkiIxT17//G5Hf79VL9OxpSh06yKAB
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
Ll30p9O1a1f9XBvV6GfNb7/95tlTMoG+fuvlQ8PdR3yRE+/cWY48J9fsFjVv
Lof6x4snl6Jzu0qXlr3wqVKJ1KmdNubk6xMmlEqUSIpexI5tezS+PWmj99WA
/1ix3oz2V4vdw+lHcODuPSfm2mpMd8/sPQ+exhIzpl+Xya6r3yiWmH33ZzKw
1HoeSx1nsMRZjI952Zl996V3sBRF3D2ZEaql08nevXtX23jv3r327dt36tTJ
ZsfltGnTKP3u3bu1LYcOHaItEyZMUP9SfZ7+nT17tqcz7yvg7iOXDHfNwJMn
T/r27aus6JIlS+jpvX79+tmzZ7/77rvg4GDaSO8avgg3b97U5p4Y3P2ZM2fU
9nnz5p0+ffratWu0hdKojdu3b9cnpm/frl271FE87e7DPZaDBHT6vXv3Vm0d
ZP9//fXXkSNH0r+08fnz5yrNhg0baMvw4cNX/perV6967qRMoq/fevnQcPcR
X5cvixUrRPXq3Aq2po4d5Vz+6NFFrlzuVM6cUuTr06WT1p6UMaNzInefPLn4
+OM3SpZMzqMPDJTDAPSiLQEBNhQz5hvRazo7krbSvXL0cPcRHLh7z4k5g5tZ
5jDnQXf7iiXmuu1B013XhB4sDR7C0tEcLPl2HUNO3329VSwxR1zUXstSFHH3
//zzD51pz549Ddt79epF28nmWH9E9exTNf7Ro0f079OnT1W/57p161SCjRs3
0r+rVq3atGnTzJkzFyxYsHPnTs0F+AFw95FLhrtmYOnSpfRWUFCQddTHv//+
m7bTu/v379c2/vjjj2oqik13T489bRw6dCiZZf129R0ZN26ctuXGjRv0r76b
23PuPtxjOU5w8eJFtZEuiNpy5coVteX8+fNqi2r027Vrl4dOgYO+fuvlQ8Pd
RwpduSKj2E2b5h4NHCgaN5YWWPPR7hL5cfLOWbK8sepMpUkj++Jpnx999B8l
SSJtu/LvetFGTSAyAnfvOTEXH2e6++obWCr3A0tVv2Wpxjeuq91slpj+mtmo
whw50HM8S5yx8cwwjMxGFc4SiqQo4u7/+usvZdUN22kLbT979qz1R549ezZl
yhR6t0ePHl999ZVqB6AXyuwT06dPtx6gO3jw4IgwA9ctwN1HLhnump4nT56o
3upNmzbZvNehoaEdO3Zcvny5tkXFkyS3vmTJEmt3P3v2bNo4depUw35OnjxJ
X4EJEyZog/O//fZb1aqwY8cOOoTL7p6+pJQTm2P+NcI9luMEFy5cUN9iba79
48ePVbI//vhDbVHjH6g8ceEUPI2+fuu1g1J5SCXelSu/7twpZzfD3UdAPX8u
9u0TGzaIRYtE//6iXz/3qHNn6e5z5rS7nD29lTixcQV5M4odWz7D9NmECd2z
Ul6MGHKfBsWKZWNdPINAZATu3nNi2kymu2cevdgelpgLw3FGpzOHiDNnvi9q
xhJzZD5z8nuPCa6r7mqWmI9rrXUsRRF3f+rUKTrT0aNHG7aPHTtWX3XX8/Tp
UzI7BvO+bNkyrXe+X79+tIV+R44cOXLjxo3Dhw+rmj9ZG0OHZiQF7j5yyXDX
9KhJJQ6c9RML+i3k6w8ePEhuWg1iMbj7Xbt2tbOsIrF69WqbE/Y1du7cSa5c
NXmpEQKuuftRo0bRZxcsWODgyxXusRwnoJPt0aNHO8vMhYcPH9IFWblyJf3b
uXNn9a2njeoybtmyZcqUKSNGjJg3b54+zKZv0ddvvXbQW7dunTlz5vfft61d
KwOawd1HQD15IsaNE61aiaZN3awmTUSdOnZVtqx01gB4Gbh7z6nUTsER0903
WMFSxS0scYLekzgzGpY1Yom5ZDyz93xFA5aYk0F8GEdxUleWmCtERCl3T4bF
sF0NJD59+rT1R2bOnKn64qnu+ujRI/o7dOhQ2kLbVYLjx4+Tx9HH3P77779V
T5+9OPyRC7j7yCXDXdOj+qy7devmwmOggkka3P3jx49DQkK0Vq++ffsuWrTo
0KFDDx48cLArTt/95cuX1UyB0NBQM+nDPZbNBCdPnlQGP8hCO8uqGXv27FHv
qmLEmgULFrhwRm5HX7/1zhH//PPPYcOGlShRom7dquXLi5Qp5eRun5tZ7+vX
X+Vic2XKiKpVI6IqVJBD3GvVEiNGuF9Dh0o1aCAyZJAR7dSseaUcOeTGwEAf
+DtMjY/KwN17Tsw1uLmxPngB1pgmt/9IljgzuP+fvfMAj6Lq/vD9WxFBioAC
UqSKfhZAEEGqKAgWei/SEggBktAhREESSghSQgdDCSUkNImCNEERDIogoX4g
GIpEEKQmEEj4n5ubbzLMbmY3+5vdzWTved4nz2Z2dmZ2ZwPzzj33HLB8utL4
3jGi20CADfXA/HYk3QJMmaj+KwRSqIHwELsXObeW/+aTvNPys2fPapZfvnzZ
29ubrv8vXbqkLCQRGDBgAK2vM1g5YcIEr4fnL5s3pN2bC81ZUwcZseXdraNH
j5KWfpUei9IjMjLS8rVW7Z4iJSUlKirKz89P7bl9+/aNjY3NangdsfsHqgyE
6Ohomys7Zvck8krBPRFDhw5VJt1v2bJFLFy9ejX9k5KQkEAfmliSE/7k1de3
rtnjr7/+2qNHj8KFC9esWZVUrnhxD7X7775jbdvy4uqlSuVEnn+eZ6F/8AEf
wXcS9PZpL2XLPtR3/qWXuODT8kceMYBshbR7Tw5p984DFGTQ7sEM8ypHIcCS
+4gnThgBETQWApw4PyQUAryzgUxdB3PjwUaE6LwAs9n9119/PbdJAx2svqMb
N254pTe30niH6H5Fz2rWP3LkiNW7AaIkF13TPkhP3df0wqb48ssvaYWffvoJ
fZ85IKTdmwXNULLlqYyJiRGiql64Y8cOzQtJeC1fm5Xdi0hNTT116hT9VdKf
Bqm92M7cuXOtrmzTuOnvLk43Ro0aJXZBe8xqI3buy3KFkydPio1HRUVdSY/o
6Giv9AkIJ06ceJBelI8sXtP8bubMmbTO5MmT9Y/HBaG+vnXNHrdu3Tp8+HD6
JPfs2bB8Obc5z7T7uXNZQAAfwt60KSeyejUfwa9fXy+LHqRGDV7l/tVXWfXq
D/Hmm7waQ5ky2op22eW551yn6vKegNlD2r3zQGYxE+7NzAdlDaxhjmjmlMEQ
YFW9DzdCgAnqHVZCIKn1oF+DHzs4L8CMdn+5CNNheJeOVl8oJsWrh+npMS0Z
OXKk5crnzp2zejdg3LhxtPzYsWMJCQle6RNy7927pzxLj0XxPfIdg96uO0Pa
vbnQnDV1bN++XXiruiNkYmLi7v/F2rVrs2X3JPVKeUklrl27Rl4vdmS1tqRN
46arMi+7Q3/CuwN2L1xe0+MyIiLCS3c6wK+//url6KwHY0N9feuaPX7zzTef
ffbZxIkTPbxm/pQpPDM/Oppdu5YTOXuW+fry7nXNmjkLsvuXX2a1a/N7CBpo
YbVqvCYDQuXKGa3n1VjW4lPK5alROtyJJndq8uTJ7HanQL9qlmTFI4/IWwE5
MaTdOw+w47x77R4pn06AQ7GIqYEz38F6gIOmQYDzKcC270irAvDGApjsAZYT
NKPdXyrKdMjK7sWl+8yZM0VTb/opSuKvWbNGrEC2QlZ+5swZ8ay/vz89Gxsb
q2zhl19+8Uqfh5ucnEx2I1bYtGmTsoJQpKCgIP3K3mYJaffmQnPW1KF0douL
i7N6rkVTCTvtnrYm5q2oi06ISEtLEze4du3aZbkpm8ZNf25LdUNsnGLSpEl3
7tzJajv27MtyBXHvTnPkBw4coIWjR49+kH77IiEhQZOx8/vvv0u7l3YfFMTW
r2f37uVE7txhx4+z335jBw44i59/5gkMs2fzjnsaaGF4OJsxA+Wrr9i6dZw1
a/iNlJUr2fLlbOlStngxW7iQzZ+fcQAzZ7Jp09jUqXy+wMSJbMKEjOIApAaj
R7MRI9jw4WzoUObvzwYN4jc9mjdntWqxqlUzCgW88gr/Giv85z98ycsvc+iB
QPxapQqffVC4MP9zc2AigCzI77yQdu885nkxBNDuwR5hYOd0MEF94nDHWdgL
IvALiHFjIGKbQ4BD2Ihfg/NQasZBeGBm/t/FmA7DsrD7GzduDB482Cu9cj4Z
vSjBPWzYMCUt/9ChQ+qrdGWS79SpU9evXz9//nzRI0xpdb13716xwuzZs+mo
wsLCvNLnHVutwG/GkHZvLjRnTRPBwcEi28Rq/8f4+Hj77V6pLb9t2zbNyspd
L/prstwUOO/+woULovAFvZekpCT9lR2we/pLpyXr1q1Tr0ayTwtJ/JUVZs2a
pV5B3NOzrNjp+lBf37pmj9LuFbunK88NG9x/JO4iLY3t3ct27nQWu3axY8fY
lSvs8mX299/sr7/4HJAzZ9gff7ATJ9jRoyw+nh8AuX9MDIuKYitWsGXLuPh/
9RVbsIDfZAgPz7B+Ollk/SEhbNw40kBeD7BpU1548L33eF3EBg1Yw4b8Af0k
RPpBvXocJRtB/Fq3LqtZk5Uowf/cHLD7xx6T4/7OCmn3zmNlB4YA2j2YGw/K
GjgGjRw5WNAP/NzAsnjgvHvQ7pE3PqcvBPixg5jR7i8+x3TIyu4fpDdvogtR
IelC88kXlGeF3ZObKEsOHjwo2t6JGDZsGCm/eoM///zz0KFDlRXGjBlz5MgR
Z7xrt4S0e3OhOWuaSEhIED5Lgvzjjz+KcpEk4/QnEB0dLZ6yPzNf5KtTrF+/
/vr162IhmbKYhO7r66s0jlQHYvek84GBgfTysWPHWuYMOLAvyxXo3xav9Pk4
Ss+Lf//9V8zoWbVqFf26ceNG8a6Vfvf0QFThU276uTHU17eu2aO0e4G0e+LO
Hd56z3mkpLDUVM79+xmIzARaTty6xbZu5RP8y5dn5cpxXnwxg7JlM6BnS5fO
QNQbLF6cZ/i/9Rbr1St79OzJ6diRD+WTpD/5ZAaPP24lq1+k+ltCK6thcsq/
QSHt3nkEj2IIoN2Dnth9MQSYaN17geOAEyIGTocAJbfTcgiwj6Ebew2AEyKa
fQNhRrv/qzjTQcfuRZAa/Pnnn1evXrVzjyQvtL5lAT0RaWlpJAhnzpz5+++/
s/dOcnxIuzcXmrNmGQcOHCB1VW5GBQQEiB5zIoKCguLj4y1fZdXub9y4oe6I
5+fnJ0bzxS2CPXv2WD0AxO7FjH46SOVmgn44YPd3794VNxBI2KdPn75gwQLx
cQ0bNkzcT0hKSho9erR4m/T2Z8+eLTYSGhoq5vu4N9TXt67Zo4fbPallQgKf
1T5mDBs1ytPtXgPZ919/sYsXXQSdhZUr+aT7bE3nr1iRFSnCKwP06cN69Mg2
ZPevvcalXpnynzcvn8uvg3IfwJJHHpFz+Y0JaffOAxQ90O7BfnzNYyHAeQHI
4DvYMh6sawdq5tggiEbbIXxnOg5YqAFsaQd+Xc1o9xdKMB2GdbVh9zLsDGn3
5kJz1qzGP//8s3LlSsXEhckGBwdv3bo1Kz/dvHkzrbZ06VLN8nv37kVFRSm2
K4bsJ02aZDXzX4S4maCu7Gd/kEjSvux/rc19WV3h+vXrJPVKeo+Yd6O+E3j5
8mVaojw7YMCAFStW5AS1p1Bf37pmj55s96T2p09nTNN+8UXWqZO0+0zS0til
S6xVK07btq6AdlSvHi++d+RINjh4kCfnd+vGPv6YT73XFPy3Cb2EvgCVKmVS
pUrGrPyXXuIHU7FiRi6ByBwgXniBU6JERiOAokU5zz7LChViBQuyAgX4LYI8
eTL+imVfP8dC2r3z8PuSIYB2DxaX+3gDBChrSIU0MOsAPGvuraoHgggyWMWx
dQyEB9r9+ZJMB2n3RoW0e3OhOWs6kZqaSsZ69uzZixcv4hUgk5KSzpw5Y8im
9MNqtr+TdnQ+Pe7evWt1heTkZHrWBW85W6G+vnXNHj3Z7u/eZfv3c2tr1Ii/
cTLEHGX35Neinp5bSEpi9H1o0IC1acM/GRfQsSM/EWTTtF/7oTM4aRJ/eZMm
/OZA48Y2ePddDu1IoX599vbbXPMFSh9A4f6vv85RqvMRZP1EpUr8UCtUyHB/
If7C7vPn58X8WbraP/JIBlLwsxXS7p3H8IkMAbR7sB9f16UQYGZ+3zmOM2Yc
BPi5gTdVwMx8sGY+WJsOASy533QThBnt/twLTAdp90aFtHtzoTlrMjwt1Ne3
rtmjJ9v97du8elvbtuzXX1lgYI7LzCe1v3qVTxxwC6dO8Sr3rVqxRYvY5s2u
YN063raA7Hj48GwwbBgvnv/RR7xE3tChvMC+PiEh7IsvHh5MHMy6duX3MezE
smOggmjq9/TTPEtfM1ufBF+G/SHt3nmALbxBu0eyrAnw1sSAGRCIIPdaCAEe
edBYCHDvb++BQPwaTJkAh/7r7YIwnQuQ3Z8txXSQdm9USLs3F5qzJsPTQn19
65o9erLd37rFC7N36sRNNjiYT73POXYvEuO//jqjhZzriY5mAwawli15l8CD
B11BXBy/k1CrVvbsXtCiBatThwUE8N55+tDKPj6sd28+T1/QuTP78EPu5mJY
X59Gjdg771jx+tq1+QGIaftPPcXtXlOaT47dZyuk3TuPtqsZAmj3YAdwcBDZ
ey4EYvdgdjpS0I8ApySEjIQAh7CRdIsPN0KA92TAiSSmcwGy+4TSTIeh0u4N
Cmn35kJz1mR4Wqivb12zR2n3Xbtyjw4N5VeeOcfuU1LYtm28FbvSot3FvPwy
L0f/8cc8+10pce9U7t1jiYlszRoWFpZtunXjfk2e7utrgwYN+Bz5PHl4pX0B
+Th9zm+/bTurn6hbl6fov/VWJrVqsRo1eH5+5cp81F5ddk9JyxfV9hyQfY+9
JyDt3nmA2emg3beLgvCaB9FzEQQy8x2svg5+buCMhgkjIMC9IzPfwZr5YEs7
8GaU6VyA7P7PMkwHafdGhbR7c6E5azI8LdTXt67Zo7R7svvLl3NcR7y7d9mm
TTzTu10799CmDe8FX78+z5l32XSAw4d5zoBVfx83jo0cyUaMyIR+VRBH27w5
69DBCh078iQEAX3DRck7pY0dqTcJ/ssv21WF77XXeAFGddF+UX+veHFeao+2
/MQTmUi7dzik3TsPMFcZtHv/qRBgyX3w5gDSSRBsaddyLQTYj2/SMAjQ7pGJ
82DOQ90fIN7dBmE6FyC7P1OW6SDt3qiQdm8uNGdNhqeF+vrWNXuUdp8z7T45
mds9nQ53HUBKClu8mGtvr162092dzdix3NBJrqtVy0AUviNq1OBeTw/osypb
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
Wf7ZZ1nRotlAWLxCnjx8ydNPZ6J+VgzKi3J5jz7qLqeUkVNC2r3zCAhjCKDd
g5ILjt1//hkEcmcAbLwOjt0jLeMJcO/gDSWkqh44laPObojmsRCmcwGy+99f
YzoMlnZvUEi7NxeasybD00J9feuaPXqy3d++zaect27N6I3Tu3Yjp0+zjRv5
cHbFinZRtiyfxh4YyEJDHWHChIeg7dSpw+rXz5IaNfhOcbsXY/rqhdLuZVgN
affOA8yyBu0e1HPQE8Gm88iuwSn/4F2Rqr9BgO38fGdCIIPv4H2JersgwCkJ
pnMBsvuDrzMdpN0bFdLuzYXmrMnwtFBf37pmj55s93fusN27ea74f/7DqlVz
J2+8wQfHq1fnE+ptcvEii4/nzemaNWMffeQINWvyPb7+Oue117i5P/aYDci4
NS3jbaIJkncZMuwMaffOA8xOB+0eKUxHgJ4IgszZB8u7gTcHwPnjQye7EyS5
Hfy2I5MCCHAeiulcgOz+wBtMB2n3RoW0e3OhOWsyPC3U17eu2aMn231KCjt8
mGvyxx+zVq3cCR1A3brs5ZfZvn22iYtj333H3n2XN6l///1sQ++XdL5GDVar
Fuett7jplyhhg6JFM0bVs4Klt5wTneuVuwHqkHYvw/6Qdu88wPJuoN2DmdKg
rIH9ApDxa/DIwfsSoKWCI+A9voJQGt87gM8sCLBmvgdm5v9Wlekg7d6okHZv
LjRnTYanhfr61jV79GS7J+7f54J/4ACf9u5GfvqJzZ7NvdjOwfcPP+SS3qhR
tmnQgLs8eXqnTnTlkEGfPqx3bxu0aMEFX6cxPbl8sWIZjfMKFmT58vG9yJDh
WEi7dx5g3XjQ7nsvgFjUE2LicAjkyPvOgfh4gzsZGQIBtn1Hjhyc0eDej910
LkB2v78a02Hwp9LujQlp9+ZCc9asRmpq6uHDhyMiIsjIRo4cGRISsnTp0l27
dt2/fz+rl1y9ejU8PHzHjh2WT504cSIqKiosLIw2NXXqVHocHx9vudqlS5fo
z3bhwoXz5s1bv3792bNns/EtzGbY3FdiYuLatWvnzJmzfPnyuLi4pKQkzQp/
//13bGwsvZzeztGjR+/du+e8ozU21Ne3rtmjh9s9kZjIzp51MydP8i72NWuy
Hj2cS7durHlzPrbetGn2sgvefZfPu8+fnws+QQ80PPII73ZXtCj/SbKfN+9D
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
G1SsyIoXZ889xylaVFtGTyGrrnlZ9dGT4Qkh7d55gL4D2v0XgRDTBkEMCYVA
Jo+DPenAqnrI8DcBVp5HUuuJ5rGOA+aKILvGMaPd767DdJB2b1RIuzcLXg+H
5amMiYmh5UOHDlUv3LFjh+aF/fr1s3xtVnYvIjU19dSpU/RXGRoaSmovtjN3
7lzLNXfu3Cl0e8aMGVk1kT9y5EicbogqeRS0R52vrv6+UlJSLl++TPsSg/UU
hw8fFu9FtP+jGJke4jPxSu+Lp7O7HBLq61vX7FFl93foU09L23n/fi4hIiKf
i6vq3bjBK9K3bcv27mXHjjmRI0dYp058Cnzv3i6C1P7557mwk9fTzwoVWPny
tilblpUpkwE9Fr+WKsVeeIGVLMkL79M2ixVjBQqwwoU5BQvyxwrPPJNJ/vx8
qoUorf/oo+6SThkuCmn3ziOyM0MA7R7U8y3vQUwcDoFM+V/YCwIsuQ/WK+gz
HwLMHEDovQACnNHggfPuf3yH6SDt3qiQdm8uNGdNHdu3bxfS+u+//yoLExMT
d/8v1q5dmy27JxG+ffu2Zs1r164pvkz6rH5KbN8rvTydUpHeMuiqzMvu2L9/
v9WN2LkvESSnXqps/KSkpIiICDEFwM/Pb8GCBWL4Pjg4WH87OSHU17eu2aPK
7nNbLFlSwPV2P2MGGzSIXbni3B2lpfECdx06sDZt9Gjd2vbseDtp2JCrN6n9
yy9nUKUKH6AnYbenEV65cvy14iXKzQFF9p99NmOIv0gR/liYPlGoUCa09zx5
eLUBcnxZcj/Xh7R759FzEUMA7R4cg17SDWL0eAiveY4DFqYDAWc0gGet/SqI
Bt87DjKZgnjrZwjwjZvR7n+oy3SQdm9USLs3F5qzpo4LFy4I4Y2Li7N6rk+f
Pm2/3dPWvL29aeVbt25pVk5LSxsyZAitv2vXLmWJmBdAERMTo18TLzY2dqlu
iI1TTJo06c6dO5Z719nX5cuX4+Pjr169ql4oagZqhuZTU1P/+ecfUZ9flCxY
uHChzmHnkFBf37pmj9LuzWj3xB9/sPh4duhQlhw8yH74ga1fbwyrVrGpU3kn
gpCQDIKCeIUB0u1ixWxD5v7885kIlxdPFS2a4fKiEOKTT2bJI4/w+QhiFj+Z
vjKOL5P2c19Iu3ceYHk30O7BmcgzBkCANdaQav+ffwYB5sbP84IAMwdax0Ag
henAZnxNNkN0WQZhRrvfWY/p4C/t3qCQdm8uNGdNE8HBwfTUgAEDlCJy6iDt
td/uSXsDAgJo4bZt2zQr01P+/v701KFDh8QSUnKv9Mnsiu87HBcuXKDjFyPp
SUlJlivo72vatGn07Jo1a9QL6VdaGBoa+iB9Xn9YWNiGDRvUK4h+9zt37gQP
3gWhvr51zR6l3eMkJ3Ov//dfdu4c7wg/cKAr7N4md+/yxnnbtrHt2w3gu+9Y
dDSffa9Ast+rFx9G1x+1L1uW5+EXKsQH5XWgFcjZSdVJ2LOCnhUp+gRpvnB8
MZSvzOKXSfu5I6TdOw9QM0G7B2u/TxoGAdZ+RzwRbMYH+nV0GwjQUmv/BIEk
t4NHDt4K88B59983YDpIuzcqpN2bC81Z00RCQoKYQk6C/OOPP166dOlBuoyT
MkdHR4un7M/Mj4iIEEPk69evv379ulh45cqVmTNn0kJfX1+REn/48GGx2u7d
u+8/HDqd660G6bwQ7bFjx1rmDNizLzFMP3DgQHrL4iV//vmnSMInS33wv6p9
Pj4+yvwFMXBP+7XME8iBob6+dc0epd3j/PwzW7aMffklLyzfsiXvRJ8T7P7c
OZ73Xrs2a9CA59WD0Ebq12fvvJPJm2/yfPsCBdjIkXoEBPAmeiTvxYvr8fzz
PC1fZODroM7Vt1yZlpQoIYfyc0NIu3cegV8wBNDuwRnc8/tAIKn1xJTBjgNm
HYDzx8MCIMCiAeAIeI19jgPeTQLrAYKNEsxo9zsaMh2k3RsV0u7NheasWcaB
AwcGDRqkzFsPCAgQbisiKChIqR6vDqt2f+PGDXVHPD8/PzGaL24R7NmzR6xG
Jp7VrPlp06Zl69soZvTTQSo3EzRhc19k6PRysSQ0NHT27Nninsa4cePEvQha
QdxAGDBgAD0rKuzROmfOnMnWobor1Ne3rtmjtHuQe/f4Lqakl5ImmW3alP5H
zhF2/+effFC7Xj323nvs/feNh3z/jTdY6dI8XZ8YP5598QVv0qdh1CjWtSsf
cxfZ+DrYY/c23V/afe4IaffOY3knhgDa/fpPILa9C/FpBARi92ODIMBq/2DS
wux+ED6zIBrucBxw1+BEEnDo34x2v70R08G/p7R7Y0LavbnQnDWr8c8//6xc
uVIxcYr+/fsHBwdv3br1/v37Vl+yefNmWm3p0qWa5ffu3YuKihLt4EX4+vpO
mjRJyfxPTU1Vqujjdk8iSftSVwVUh537unr16pw5c5Tl9JLIyEh1kv/FixfV
dy2GDRumdMfL+aG+vnXNHqXd4xIt6s7p231qKr8P4Er++IMr8/Hj7Px5duGC
8Zw9y3bvZoMHZzBoEK/h362blvbt+X0AMu5HH7VNVl3z7Edm5ueOkHbvPD7e
wBBAuwcT1MHp52CNNWT0HJmzT6zoCAGedLBeAdg1HrmtsbotBPi5gZjR7vVv
r0m7Nyqk3ZsLzVnTCXJh8tyzZ8+SzGY3Q94yyI7PnDljyKb0w2YBfDuDDvj0
6dPnz5/PqjHftWvXEhIS/v77b2e/I2NDfX3rmj1Kuwc5dYoPjrdsqZeZT2r/
5598TVfyww884/3GDV5g37G3Ri9MTs6S27fZiRP8LYsMfC8vXqK/RQv+U81H
H/HZAU88YRul1Z099wGyQkbuCGn3zuMzNCC7nzACAszMB7ufh4x0nHFjIMDi
7eD0c3Dov9wfEMiXFcx56B8OAf6lmdHutzZmOki7Nyqk3ZsLzVmT4Wmhvr51
zR6l3eN236oVLzFHwnvpEgsL01bVI0e+fJn3fStUKLPXmwsoWJDnuiN2f+sW
++knfpcgK3buZFu3si1bOM2a8bnz5cqxmjUfokYNPkO/alXbVKnCt0CGTp+V
Y5QoIZvl5ZKQdp9b7R4cu+83G6L7Yggkq/+LQIhZPhBdl0KAMxpKXIBAvqxg
vQKwFSD4l2Y6FyC73/Ie00HavVEh7d5caM6aDE8L9fWta/Yo7R63+9at2cyZ
/LHVjngk1xcucG+tU4c1auQ6atfm/eYctvv793nJfXpfCxawiAjbvPMOe+01
noSvGbu3n48+YnXrskqV2NtvW6dyZVa+vB4vvpg5B79AgUyeeYb30ZPz8U0U
0u5zq92v7AAxbRDEN80gkCMHCw6E94cAkxbAPgtVjkIgX1YwZQKcygH+pZnO
Bcjuv3uf6eAn7d6gkHZvLjRnTYanhfr61jV7lHbvbLtPTWXHjvGx6aNH2bVr
riM+npUs6bjdJyWx3r356D9pdZMmtqF9DR/OFi9mUVGOExGRUZ3PKg0b8o/x
jTf0qFYts6p/nTr8Fgcdf61a/M7D44+7S1VlZDuk3TuPL/0YAmj3oC7trA8B
Zg4gzfgmDocAc+P1a53ZBLwn03EFRLNvHAfsENFyLcTIEAjTuQDZ/eYmTAdp
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
JiauXbt2zpw5y5cvj4uLS0pKysa30NHYsmXLzJkzb926pVl+6dIl+jdk4cKF
8+bNW79+/dmzZ7O7BVpCVjt//nz6GOmju3nzpvFH71Cor29ds0dp9wYG/Q2e
P3+ePtKvjY4NG5avXr1s1aplK1YsXbhwbrt2LXv37t6nz6c69O7drX37Vur6
80o9OntGzK1CWyhcmP/MajzdJlmNp8sBdxnqkHbvPD4PYgig3Q+cDjFoGgTS
sJ5A7gz0XgABHvl/4iH8voQAZyUMmOE4PRdBvLcFotk3EGa0++WdmA4D+0i7
Nyak3ZsLzVmzDPJ0EjEvazF+/PiLFy9avuTu3bv0FK2wePFi9fK0tLQ1a9ZY
3VRMTExqaqqy5t69e/v166deYezYsdeuXTPgC5p1/PLLL2JfV65cUS8nGdcc
jLe3N/mU/Vsglx88eLB6C6NHj758+bJT346dob6+dc0epd07EPTXcevWrRsW
8ffff69bFz1t2vhZs8bNnu0UwsPHTpo0qmHDhh/Zig8//JBWM1y78uVzindL
u5ehDmn3zgMchwXtHhw9b7wVAry3gGQdgIIM1isANRMcAQfvySCfm9c8iCab
IcCvqxntfllnpoO0e6NC2r250Jw1TSQnJ48YMUII6bJlyw4cOJCYmHjy5EkS
tP79+9NCelYzgk/SOmXKFPESjd2fOHFCLF+4cOHx48cvXrxIS2gdsXDbtm1i
tUuXLvn4+NCSmTNnxsfH79mzJygoiH6dOnWqwV/W/0VaWtrOnTvFO9K4+YUL
F4Tah4WFxcXF/fbbb+Hh4WI1Onh7tkCxYMECWhgcHEwf3bFjx+gykn4NCQlx
0tvJVqivb12zR2n3DgSp/e+//77fIjZt+qZUqWdq1szbunXedu2cQqtWed99
N+/jjz/+hB1Bq1mdnO7YULtAZ267GtGnXoYMx0LavfNY1JMhgHbf4yuIlmsh
wL7t/WY7Dlg3vnMkBNjZDbwjBCaoI/3ug8ZCgGcNqRhAmNHul3ZlOki7Nyqk
3ZsLzVnTRGRkJD1Frk1Oqnnq/PnzwsH37t2rLNy+fbuvr68yQq2x+9WrV4tR
eHJh9XKRGxAaGip+JfujX/39/e/evSuWHDp0iJaQZScnJzv4vcw6Ll26RLtW
D6yr3Zz+6aAlAQEByk2M1NTUUaNG0cJVq1bZs4Xjx4/Tkr59+16/fl0soQfi
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
1XjHN7cbOsJrr7GRI9nChcbQogWvhN+xI0+5x+nalTVqxIfgy5Th1fUF5cvz
rHtlPr4O6qx7GSYNaffOA+ycDto9OHoODsUiek4gVfXAmyrI3HOi2N8QfeZD
gEP/yBkH+92DbxycCWJGu9c/HdLujQpp9+ZCc9asxj///LNy5UrFxCn69+8f
HBy8devW+/fvW33J5s2babWlS5dqlt+7dy8qKmr06NHKpnx9fSdNmqTJ/L96
9aooRieib9++kZGRNvPqLYNEkvalrgqoH+LGhbJ+amqqUtLfTrvXbEFEWlpa
bGwsfWjihT4+PuvWrcvue3FSqK9vXbPHXG33BUgPX3wxywJujvHmmxwD7f7u
XXbzJrtxw6WULs1b5q1fbww+PlzwO3dmn35qDLS1vHn5QZLXi4F7Oo9k7nJE
3kNC2r3zGD2eIYB2D2aYg8Xlpg2CQMr1g8O44G2NQlchwI544ElHbshEfAoB
NlkAO0SY0e710zB8vaXdGxPS7s2F5qzpBKkuSffZs2cvXrxoNSk9W0GqfubM
Gf1N0TqnT58+f/58Vu3n7InsDvc7L+id/vXXX/R2kpOT3X0smaG+vnXNHnOx
3aekFChfnk+QP3/eSDZtIvVgQ4caZve//84iI11NkSL8jdy6ZQwXLvBtLlrE
vvrKGKZOZS+8wOfalyvHypblCfmFC/OUe9EXzyr58vEGeUbFI4/w+nuiEJ/I
B1Dm7MtwQUi7dx7gzHfQ7sG272D7cmTwnUAKrIUOgQAttfqvEJ0jIcDEfqTF
w4QREJ9GQLy3BcKMdq9/OqTdGxXS7s2F5qzJ8LRQX9+6Zo+53u7HjTM4p33/
fmZgRzxS461b+Sz46dNdCsny99+ztDS7DpJWS0piCQns7Fnr/PEHi4gwYNK9
An0gpPYlS2bU1qOjpcdEiRJZUrw4n3f/9NOZ5MljpfB+VqgL7wuXl3bvxpB2
7zzACeCg3YNTsNtFQYBF+ZCxe7AVIDinAKyZ3+MrCLBmPgJ4xgdOhwDvipjO
Bcju9Wc6SLs3KqTdmwvNWZPhaaG+vnXNHqXdu9fu165lH3/M0859fFxK/vzZ
sPvbt9m333J9ps8zK0jDS5c2DFEhn2z92Wf5kD0ptrc3XerYoE8f1qEDa9cu
gwYN2Cuv8Nz+KlVsQOtUqJD5XgoV4r6vCZn/78qQdu88QONwb2Y+WDRAvxm3
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
MWKEMNZly5aRzyYmJp48eZIErX///rSQnlVG8BcuXEhL/Pz8SOFPnDixcePG
IUOG0BJyZ7ECLRSbojWPHz9OJkhLFi9eLBZu27ZNveu0tLSdO3eKvTjV7sVh
k57v2bPnyJEjc+bMEXtMSEgQK2zYsIF+/eKLL6Iejr/++kussGDBAlohODiY
Ppljx47RVSL9GhIS4qQDNjbU17fIdqTdE/fu8WLvnTuzBQvMx0cf8WH6iRPZ
pEmZeHlxte/WjT8A6dWLdeqkdfk2bdiHH/Ip8LQXwQsvsMKFefH86tVZ1ap8
7N7wEBPhNSjJ+WJGPIWYC69GRi4OaffOA5wLDNo9WB0usjPE1sYQyKSABb0h
QodAgIPvi7tDIKn1BPJlXdKNIYAzQcC/NDPavX5jR2n3RoW0e3OhOWuaiIyM
pKd8fHxIWjVPnT9/npbTs3v37qVfU1JSxK9bt25V1iFfFqYs8upXr15Nj8eO
HUvmrt6UyA0IDQ1Vlly6dIl+VY+GO8nuL1++7O3tTds/evSoslDouTJ8Hx4e
Tr/u3LnT6haOHz9Oz/bt2/f69etiCT3o168fLTxz5owzjtnYUF/fItuRdk+k
pfG0/I4deQt101G5MqtRgx05wo4ezSQujq1bx0JD2ZQpKJ9/zu8StG79EOT1
VarwzH8BSX3Bghn15cRwueLUcp67DKdGrrf7Ht+muIsNHzME0O5BvwYnMoND
sUNCHQcsizd9IATYUK/VGgiwG+CEEY6ztiVEm2iIfrMhzGj3+sUhpd0bFdLu
zYXmrKkjOTlZDJ1v3LjR6rlevnw5aSw5HT0mrQsKCvL391ckl+LOnTvqcfB5
8+bR45kzZ2q2c+TIEdK9sLAwJTk/NjZW3FXYsWOHMGXH7P7kyZPLli2zmvMv
Yt26dbTxRYsWqReeP3+eDknZo8heOH36tNUtrF271vJNzZo1ixZGR0c7cMwu
DvX1LbIdaffC7nfs4FXfly0zH92783J2QUEPXRiPGsUGDGAdOhhA06b87kG1
avynwhtv8ISBUqUyKVqUC/4zz2QiStPnz8/Jm1favQynhLR757GmFUMA7R4c
wgbH7sEh7MAvHGf8aAjEcAkwQb3SCYhB0yCQzHxw7B4sud97AYQZ7X5kCNOh
r7R7g0LavbnQnDV17Nu3T3/cPDk9dL4Mhw8fppd7e3vfvXuXft25c6f4lbRX
XwO///57snIxdV2kBDhm9yEhIfTaiIgITbaAEiKpfu/evYmJiTt27KCdbtmy
hR4rK9y6dUt8CJs3b54xY8b48eMXLly4f/9+ZQVaSM/GxsaqN0sCSwunT5/u
wDG7ONTXt8h2pN2bnfnzeSb8iy86CyHphQvzafUKxYuz0qV5sQKCHgjBf+EF
jqhvX6IEX4d4/nnOs8+6S/5k5PKQdu88wDpjoN2Dtd/BicxgBXWkbnyf+RDg
2H25PyB8Z0Igeg4CVgwAy0Q02QxhRrsfMYHpIO3eqJB2by40Z00dYgDdz8/P
sW/C7du3g4KC1OPaSUlJkydPVpLtR4wYsWTJkn379ulXmEfG7s+dO+fr60sv
X758udUVRP6/SEJQDszHx2f37t1ihWPHjnlZi4iICLGCmFagydsX9zFMMfVe
fX2LbEfavdn59Vc2dy6bNs1ZfP45GzSIT8Dv0SNzQL9jR16moEsXDj0QdOqU
Ca0gECvTat26ZawsFrZvz9q147X9W7dmrVqxFi04n3zC5xo0b85q1eJJ/nny
ZPadt5xoL3jiCev96Cnop2Zl5SUiZIZALghp985jpi9DAO0eLEIOjgJ/1QNC
31z0AXvSLeoJ8cYBCPBjB1Mm/L50HLCXH1gPsMNKCDPavf7nKe3eqJB2by40
Z00d5Ly0XGNhR48eJbH9Kj0WpUdkZKTla5OTk4XIDxw48OrVq8rylJSUqKgo
Pz8/tSn37ds3NjY2q+F1xO4fqDIQrObJjxo1Sjw7bNiw7du3k9RPmDCBfqWd
nj9//kF6Pz6xwurVq8+cOZOQkEBvWSwRBQfGjx9Pj/fs2WO5UxdcLuKhvr5F
tiPtXqLP9evs99/Zd9+x1avZvHmOsGABi4xk27bxjXz7Ldu4ka1fz9auZWvW
8G2uXMmfXbKELV7MIiLYwoVs9mzm788lvUABVqQIH/cXFC7MKVQoE81cAIX8
+bm200+xjoZ8+TL+cJQmesyiPoAMs4S0e+cRMpIhgHYPzgsICIMA72z0+Mpx
wKnrYHm397+D6LUQApnRQCDlDsBmfB99DdFwB4QZ7X7YJKaDtHujQtq9WdAM
RlueypiYGFo+dOhQ9cIdO3ZoXkgirHnhtWvXhPP6+PgcOXLEcsupqamnTp2i
v8rQ0FBSe7GduXPnWv1G2bR72kWcbigKr+5zJ4KknpYPGjSIjlksuX//vmhv
t3jx4gfp9f3I4pXmdyJmzpxJK0yePJkei7sBwvSVEOUE6UPI6phzTqivb5Ht
SLv3EO7d443/7t7NNjdvslOnuHF37Mj69nWEfv3YwIG8FMCIEWz4cDZ0KBsy
hA0ezAICePO+QYP4s76+nP79mY8PzxNo0oS9/DKrXZvVq6elbt2HqFOHvfOO
FlpIL69Y0QoVKvAygIUL8z+cbBUBeOQRaf05MaTdOw8w1Rm0e6SpHAHemgDt
HhlE7h8OAc4peOdHCLCToH6lNZsgPRD1p4HbBNTzppsgzGj3+gUc+vaXdm9M
SLs3F5qzpo7t27cLKf7333+VhYmJibv/F6KgnMbuaQVRho6U+cSJE+qnSOpv
376t2QtpNXm92JHVHvE27V6UuLcz1FPmH/zPzTV5+yJpgZ7Kao+//vqr1//m
LIgOepp2flu3bvVStQLMyaG+vkW2I+3eE7h/n/3zD/vrL3b+vCP897/cu/Pk
YY0bP0SjRlbM2k5IwLOCpL58ed5xr0cP5u3tIC1a8FsBb7/Nk/xr1nyIatX4
9tXabsmjjz4ELXnsscyBfhk5J6TdOw/Qd0C7D+8PAWomOIiMdIXruhQCvCfT
4HsI8OaAG6vqRbeBAAsOtF8FYUa710+lkHZvVEi7Nxeas6aOCxcuCCOOi4uz
eq5Pnz6tsftz586JgW8SfHq5Zmve3t60suiOp460tLQhQ4bQq3bt2mW5F5t2
Hxsbu1Q3xMYpJk2adOfOHfVrhZtr7J7er1d6574H6TcfEhISlJF9Eb///rti
9ytWrKDHMTEx6hVE2oOmFH/ODPX1LbIdafeewIkTvG19/frsvfccgSy+YkVe
Ye+33zLZuZOtWOHgaH737hlz9rOiTRvWoAF7910bB/b++1lCLxc3Ct58k2f4
P/98RpU/QdGifKElIqufELUENTz99ENz/2XkhJB27zzAGdyg3X8RCBEWAAF2
jUey08GxezDDvHksROdICHD6OTLzHfy+gTMaWq6FMKPdB0xhOki7Nyqk3ZsL
zVnTRHBwMD01YMCAkydPWj4bHx+vtvvz58+LCfXjx4/X6PCD9IH7gIAAy2Fu
8ZS/vz89dejQIcu9gPPuL1y4QMdPW6D3kpSUpHlWdMTTDNNv2LCBFi5dupQe
T506lR7PmjVLvYJIWhB+KgrojRkzRr1CYGAgLdyxY4djx+zKUF/fItuRdu8J
7NvH29iRnJYo4Qikw88+yxvcX7+eSUIC++EHNmwYz7cXDBnC58v7+dmmTx8+
Li/o2dMKn37Kh901Y+6WvPWWbapW5X8jJOxiSr6w+IIFtdP5lUn9yvR8q+JP
nyGRNy9HRk4IaffO4zM0ILv3mQUBFuVDyuIRSHp5vV0Q4JSE2f0gqhyFAO/J
IF9WsEdDtyUQ4F+aGe3efyrTwVvavUEh7d5caM6aJhISEoRckyD/+OOPly5d
epAu46TM0dHR4ilh92lpaaJ6PP37cPPmzfsPh9haRESEGENfv3799evXxULS
djGN3dfXNyUlxfIYELsnnReiPXbsWMucgQdcEv8VHfe2bNkiliQmJg4aNEiZ
Sr9x40ZxzEq/e3rQv39/r//VyU9OThbrK4X1fvrpJ/o1ICBAvxdADgn19S2y
HWn3nsCaNXzsvn9/7uMOsGUL69qVu2379pl8+CHPfu/XL9PuGzZklSpldMfT
oWxZ3jJPGUbP6n6CEGocOmwKdZr9Y49xHn88A/GrPposfXU5PhnuDWn3zgNs
KufeefddlkEs6A3xpZ/jgDcWkEkBxKr2EOA9GeRzI5CCA2CrgtHjIcqegTCj
3etXn5B2b1RIuzcXmrNmGQcOHBD2KoKkVfSYExEUFBQfH0+r7d+/X2e2+6lT
p2idGzduqDvi+fn5idF8cYtAU3ZeCcTuxYx+OkjlZoJlrFmzRhxDcHDw/Pnz
xUB/eHh4amrqg/T7A6NHjxYr0MHPnj1bHE9oaKhy12L9+vW0xNvbe3p60AOd
6Qw5LdTXt8h2pN27kdTUh0bDnceCBXxUPSzMweO8fZv3xStcmL3ySiZlyrD/
/IcPvg8ZkgH9SjadJ4+2h50GWseyz52d0MZFdTvNvHiriOnzip4rVi6r4uem
kHafW8fu9Utq2wScB+09F+KlY47T7BsIsGIAmBsP2j04KwH5soK58eD3DfxL
M6Pd65dQkHZvVEi7Nxeas2Y1/vnnHxI3xcQp+vfvTy68detWxXCVMW6r8ccf
f4jV7t27FxUVpfiyGLKfNGmS1cx/EeJmgrqyn/1BIkn7svnanTt3iqkBXunF
ABcuXHj37l3l2cuXL5PUKwdM+r9ixQrljT9Iz1uIjY0VA/pe6Z0C1q1b58DR
uiXU17fIdqTdu5GEBF7zrVo1noXuVCpUYC1bsokTHTzOtDR28SKfa793byaL
FrGRI/nGGzTIgPS/bl2+ELyq12HwYPbCC3xwv0YN27z0Er8L0bAh/5CrVuVV
9MuX58kDzz3HEwOefNJdPirDyJB27zze3cYQ3Gv34Nj9wOkQyJGDZfHAMegz
ZSHAovdLu0IgWf3gkYNnDaxgaUa71/8LknZvVEi7Nxeas6YTqampV69ePXv2
LBmcGNdGIikp6cyZM4ZsSj+sZvtbDbL4CxcuZHU8ycnJ58+f1zlgWv7XX3/R
OrSmg8fqjlBf3yLbkXbvRo4d475JBmpzgjlIuXLsk0/YhAmOH2pyMrt6lZ07
l8mWLSw8nDVvzvPzBZUqsY8+YiEhbMoUZ/H55zxnoGxZ7uwa6tfnZfSk3Xta
SLt3HjsaMgTQ7pGW8UTHFRA9F0EgzdEGzIBAusIR87wgkFaABNjODymLN2kY
RJtoCHBKghntXv9r7O0r7d6YkHZvLjRnTYanhfr6FtmOtHs3sm4dn8C+ahX7
+WfnMnYsn3T//+ydB3gU5faHv6uCSFEEBSkCAoqgKCJ2RFERFK8FBKRJkxpK
IJRAAGmhCtI7hC6hKEoUqcJFQFBEpQvS4XJBOiRASPyfw5f/ZphsZjf7m81m
suc875NnM5n9dnZn0XnnO985Pmfm/3Nz+j4hQcXHJ3PlCp/EEyeSWbaMBTw0
lBvZ+4kWLXhJ/hNPuCmz/+9/s8WTs+uC9kTWrIxeBUDb6bFeZa/z9v0RkvCf
/iF2n1kz88Hc+E/7QICv/u9vfAecRB7TFqLeXAhQz0e1h0C+rGBqfaFjEOC/
NMe5ANm9h6UxYvc2hdi9szCdNYlgC+P1LTKO2H0AIa9v3Jhby/nWht57xo7l
FvB0wXzypB9Zs4bt3rceeSboY3FL7drczK5MGVWrlpmqVZPK47sa2VvjjxC7
T/8Qu/cfYBVx0O7B3mrgsgJwATgyfw1WX0duLBCdhkNE9oAY2gUigI0IX/oR
AkzYcJwLkN1bf55i93aF2L2zMJ01iWAL4/UtMo7YfWDt/pNP1M6dPDPuV777
TpUrx7PeNWr4kffe40L6b72FUqVK0rS7W3RJvZTb9aS8RLCF2L3/AMu7gXY/
uh1E394QYL/7QeG+A87dIy9NgCcdbGmH6DmBlMUDCzWAnxuI41yA7N66vqLY
vV0hdu8sTGdNItjCeH2LjCN2H3C737XL7y+0ebP68ENVsSL3xQsUjRqpjz7y
ilq1uAzgo48ypUol8cgjzMMPJ0P7ECVKJFO8OPPQQ0kUK8YULZpMkSJJ6N58
hQu7b3CfKxfn8Ltq7KcVifQMsXv/MaKjQgDtHvREsO07soKb6DzMd3KfgwDf
OFjM8L0lEP16QSDJ7WCvAbAsXuMoCMe5ANl9qwnKghZi9zaF2L2zMJ01iWAL
4/UtMo7YfTDY/fXrasMGtXSpWrIkMCxapKZPV5GR3jJkiBo/PomxY9WYMWrU
KDVypBoxgpP/hw1jaJ/Bg7lU4MCBasAA1b8/f6/69GEv6N1b9ezJRERwDf/w
cNW1q+rShdv26fX7HTowrVur115TlSpxqX+iYkXmxRe5It/99/OC/Rw5eM0+
PdDQr4TrgVvoryL46Rli9/4DXAsM2n2NxRCgLoGrEt5Z6jvF/4IA74qAmQN9
PoX4ZAoE8mUF3/iEVhDgvzTHuQDZvXXlCrF7u0Ls3lmYzppEsIXx+hYZR+w+
GOye+PNPtXUrT+LjbNigpkxJtm9vIDEn127Vip06NNQz3bpxJUDCZesEqbq2
dYJ2IFzOHhamOnZktLa3b6/atmVCQlSbNvy6H3+cvHi/USP+tWFDLmlYoQJ3
JHzqKaZcOebJJ3ldf+7cSaX5jGX6yPQJ1wO30F/F7tMzxO79B1ifLbDr7kHJ
rR0Ngcz7g2sKwOR2sFECKLngSW8+2XfAegVgR7zvq0I4zgXI7j00ZxS7tynE
7p2F6axJBFsYr2+RccTug8Tub9y4peI9wpkz6t131XPPcY16LylbVuXMyRnv
JM6PP+4Z2v+JJ/inR7wZrXRplvT771cPPMDFB1zQFr1g34Uup0+40uwDUp1P
wvsQu/cfgV13DxZvr7kIAnx1pEIaWHYerM+24UWIboMhwIqCSBNDMNkDXMYC
rgtwnAuQ3VvfbGnRTuzenhC7dxamsyYRbGG8vkXGEbsPEru35vp1NXeumjhR
TZjgmWHDeMq7des0XKiHham33+b58VdfddOq3hvoia+8kpQ8n1ZefFHlyXNL
jr3GouW9l4X3xe4DHmL3/gMsnw7aPVIhjQj7DAJ874O7+Y71emSPVI+B2Foe
YlwbiLrzIBrO8p2RHSCaTIcAv2+OcwGye+tFFmL3doXYvbMwnTWJYAvj9S0y
jth9AMk4dn/5sqpene37iSc8U7Ik16ybPVv9+qu3rFvHC+cbNOB8eJ+pXdv3
Yv4PPywJ85kzxO79x7tfKwTQ7iutgwCL3oMV1JHScNOaQoDT39+9BTHlEwjw
Y7deym0NeFMFbFWAlGEkHOcCZPfWK0TE7u0KsXtnYTprEsEWxutbZByx+zQR
G8uN3Y8etYfx43kZuPd2f+OGOnCAp84/+8xmBg5k/w0L8+qqu21bVaiQatpU
0an0kq5dean7G29Y8dprSXP0KXnlFa59p3PsfeDRR3nuXubZM2WI3fuPAREK
AbT7Z7ZArH4NwsOiYE9EDPCd9qMgOoyEmNQCIqoxBJhxgaTWWzdo8wh4X2Je
XQjHuQDZvfVCCbF7u0Ls3lmYzppEsIXx+hYZR+w+TZw9q37/XW3aZA8DBvB0
tvd2f/26WrPGvHjcFmhMiu++U9u2qd9+80BMjMqXj6fvvVnz7j2lSt3S4U43
vHNRtKhMvku4CbF7/xHYqnpg5gAoueBM7rpKvgO2tANzvP8oC4EsSSA+D4UY
1d53kDX7BFhyH/zcHOcCZPfWSxWai93bFJnb7gP4/0c/YTprEsEWxutbZByx
+zTRqpV66y31/vuqfn0bqFiRh9qxw9tXv3SJu9o99pj65hub+eILLiX35JNc
K88j5crxivXs2blKno3o1vOmAvXGWvQSEilD7N5/wO3JIMD14yFjIcBXR8qn
gykTYMv4oV0gwIL/YOF6RJDBL8yKKhDL34RwnAuQ3VunUojd2xVi987CdNYk
gi2M17fIOGL3aeKll9Qjj3A/9Ndft4GyZdU776TB7i9c4N7xJNcnTtjM3r0q
b1726zx5vIL2tB2dQnDPPalCjm97dj0NmDVr8i2FNHHnnUyWLMmV9o0l9yXS
J8Tu/cfiGgoBtPvnfoJoNAMCqc9GIGuowV5+4YMgkKXrBGj34E0VJDcebMYH
JnuAvQYc5wJk9x/PUBaI3dsVYvfOwnTWJIItjNe3yDhi92micmU1aJBasYJ7
x+PQUB9/nIbMfLL7r7/mewvXrtlMbKxau5bT/levDhjr1qn//IcPwy0rV/L6
fe34OXKkGVO1fA15fe7cqlYtFRKi2rThLgBEq1ZMixbJfPIJ06xZEk2bqiZN
uGAC0agR9wJ4+unkkoNPPsn3f/Lk4X+YrrZ6XnbWS3mXICV0zFJAwBhi9/4D
bOEN2j3Y0u7N5RCg5CI5D63HQ9SOhphfB6J/T4jefSEQvwZvB4FFIEM/h3Cc
C5DdW98fa95e7N6eELt3FqazJhFsYby+RcYRu08Tr72mFi5Up0/bM1paa+Zr
u3/2Wb+8tcTENDe+N0In9Nw5CHp3Fy/y6gO3nDmjpk1TBQvy/P6DD6aZwoWT
KVQoKU/g3ntV/vxcJHDQIGbgQBUZycUQ+vfnr6imT58k1+jdm6Fvb8+eKiJC
9ejBhIdzMf9XX+Wme5qXXuLkChpW+cfu77xT7P6WELv3H+AsMGj3oJ53HQJR
awEE0rscrPYPZh2AK98ntoQAFfulH30H7Hf//lcQQdgRzzqVQuzerhC7dxam
syYRbGG8vkXGEbsXuzcKvm/ExanOnVXz5knT3L5BT7egaVOunB8SoubNU8uW
QdBnOH06d+jr25cr6pOPV6mSRMpK/saVFHT2jVSurF5+mYsB5s59ywqCnDl5
hl0pK5H3OUTtTSF2n1ntHlyCDerSR19AWHf7sgbM8QZbxo9vDYHc1iDeWwKB
3JAB7yaBH/unfSAc5wJk99YrHcTu7Qqxe2dhOmsSwRbG61tkHBvtPjEx8ezZ
s6ctY//+X8PCxO4zqN37zKVLSbbr0mTbIbl++GGeSf/pJ7V/P8Qff6hvv+Xz
OHkyJ9KT4Jct6yOk9vfd536S/Y473EN/8jiPb+PdgEwfYvf+o95chQDaPajn
YF+5AK67BxvWg5PIU5tBgCcdzLh44nffAddigMUMwVwRx7kA2b31fz3E7u0K
sXtnYTprEsEWxutbZBwb7T4uLm7AgAGdOnXqmHq0adPs5ZfF7pPIHHafmKiO
HGFHHj1aLV/uL5YuVbVrcxHCJk2SFsj7Bn3g777LufqVKnHPgscf5x4EPnfx
K1GC8/zz508DefLw5P7ddyeh+wXQFlN9AN0mQOO6LZDyzoCE2L3/eH6TQgBF
DxFkwrrflkdAxUaa8X3wJQToieDHDnaNB28oIXQZCgGuaJhTH8JxLkB2b53M
8InYvU0hdu8sTGdNItjCeH2LjGOX3ScmJpw7tyckpHmLFjVbtKiRGo0bV3vu
ObH7JBxq9wkJ6tgxdfRoEocPq40bVfHiavZsnhYH+f13tW2b+vlnMxs2cOG7
6tW5h+CHHyZTq5ZnatdO5oMP1AsvcOZ86dLMo49CFC3KS/jF7gMYYvf+o/lk
hQDaPVL/nPhwIQRo90g1wmlNIdqOgVhTGWJQOMQ7SyGQMw6m1g/pChGEVfWs
17aI3dsVYvfOwnTW3EZCQsKOHTuioqLIyLp37z5w4MBZs2atW7fuxo0bKff8
6aef5s2bN27cuDlz5tA+8fHxpn327t0bHR09fPhwGmrEiBH0ePv27Slf9NSp
U/TPdurUqZMmTVqyZMmRI0d8/EZ6ER5f6/z58zExMVNuBj2gX9M6wuXLl8lq
J0+eTB8jfSyXLl3y39tJUxivb5Fx7LL7+PgLP/xQ5PXX7/7ssxwTJ6bKiBHZ
33tP7D4Jh9r9mTOchF++PFfvJypU4Frx99/Ple1tqd5/+DC7vIkff+T33rOn
+ugjnnynbxFpvosaNZKoWTPZ+rXO16mTBD2xbl3eQieRhPq++xhjSz4vuwG6
uOcevkuQJUtSazwNbbGG9jfhMWNfwiLE7v0HWH0dtPvIHhBL34EAE61Htfcd
sN/9jEYQ4Bx0j0iIKisgkKwD8KW7D4QAX92Jdl9nvrJA7N6uELt3FqazljLO
nj1LItbCXQwYMMBoc1euXOnXr59pn549e545c0bvkJiYuHjxYrdDLVq0KCEh
wTUU+W/r1q2NO7Rs2ZKs0P7vqxevtXv37vbt2xt36NChA230fgRy+bCwMOMO
ERERp0+f9sfbSWsYr2+Rceyz+/Pff8/Fw8lY6UFqLFrEPeDE7jUOtfujR3m5
eqVKnCevoY+lQAF2cHzwK1f4SzJ9upoxQ82cmQz9Om0a1+4jc69enXn7beat
t1S1akk/q1Zl3nzTzZp9OkJXZbzy5XlyXE+aGxvkpbXLXrZsSfXwval17xEa
R8KHELv3H+DS9cBW1QOLt4OJ/ePa+M7QLhBgZj54WwN540S1ZRDI3D3YgRGs
BxiE/e5rRSsLxO7tCrF7Z2E6a6aIi4sLDw/XQjp79uxt27adPHly3759JGgh
ISG0kf7qmsGfOnUqbQkNDSWF37t379KlSzt37kxbhg8frnegjXoo2nPPnj1k
grRlxowZeuOqVav0bsePH9eyTE/cvHnzr7/+OnbsWL0P7W/v19Xja9G769Kl
i76V8fPPP//yyy+RkZH0K228fv26l0c7ZcoU+pWeSB/d7t276TKSfh04cKC9
78W3MF7fIuPYa/ckeqR+16+nyqlT3EdM7F7jULvfupU/h8WL1Z49DB3/6tVc
X27TJhsGP3yYp9Gfey7Zx40l60neyeK1sL/yCpe7pz2ffpqb0JUty5n2jzzC
awR0wvz996u8ebmgfc6cPKtunCtXSqbFM0mI3fuPER0VQmDX3S/8EAIsXI/U
AwRva4Bn7denIELGQozsAIHc1gAL+oEFB+bXgXCi3VvfbPmkg9i9PSF27yxM
Z80Uc+bMoT+1adPGOFWt49ixY7Sd/rpp0yb6lVRX/7py5UrXPhs3btSee/ny
Zfp1wYIF9Lhv376JiYnGoXRuwLBhw/Sv9K+Vfu3UqZPrvkFCQkKPHj1o4/z5
88Hvpyk8vtahQ4f0W6D3q3cgnddb/vrrL29G2LNnDz1u1arVhQsX9A70QN8Q
OHjwoL1vx4cwXt8i49hr9//+tzp50srdzp1T0hHPxYIFvAz8u++8Lfb+229q
0iROhg/sh/Dzz+zXZPT0ORCnTvFieXLqceM4OR9k/nxOX2/YkFfZh4SY6dSJ
p++Jjh1Vhw68pWVLvkPSpAnnhNCz6tXj3PuaNTld/513+FbA88+z2ufIwSvZ
vce15t0jOiE/S5ZA2W2wh9i9/3j3a4UA2j1YJO211RDW7bo8MvNj35lXFwKs
/Q5m5s+tB9G3F0Tvvr4D6vmshhDIF4Zwot1b50KI3dsVYvfOwnTWjBEXF6cn
6JcuXer2XM+dO5cslZyOHpPW9e7du2PHji6Hpbh69aoW4cOHD9OvkyZNosdj
xowxjbNz507SveHDh+vk/Ojo6K5du9JP4z4LFy6k544dOzZN38Z9+/bNnj3b
mPNvCo+vRQKu34JrrX1sbKx28127dnkzwpdffpnyXY8bN4420m5pejv+COP1
LTKO2H2asNfuv/xSFSyo6tdX4eFeQW5L6vrUUwH+EMju33pL/fJLUrP7hARe
ia/7vOfOjXL33TznfviwuniRG+2ZuHw5CdN22tnFhQvJ0Lfx22/ZvosXTxsP
PcQULcoUKcI/6ddixRi9UW/XFC7My/AlAhJi9/4DKQ1HgHb/+iqIwHbEQyoG
zG4A0W40BPi5gZYK3pNBkj0qrYMAqyUM6wzhRLuvsVhZIHZvV4jdOwvTWTPG
li1btNi6Fs6bIu5mWHwZduzYoRehX7t2jX5du3at/pWs1hsNNIae3ydTTtOz
Bg4cSM+KiooyZQt4/1oJCQmdOnXSCxMuX75M75dEnn5t166dzsz3OMLo0aPp
cUxMjHEHMlzaOGrUqDS9HX+E8foWGUfsPk3Ya/f/+Y968UXVrJnq1s0rQkO5
WFwGsfutW5O3kF9Xr86p8q++ivL882zKa9dy5XycTZvU1Knc/+6DD3zhvfcY
+laXK5dcYL9UqSQeeSSJkiVZ8HWhe1MCQNasXinqbbfJMgEfQ+zef4B140G7
BzOlB3eDQGaBidbjfQecfA/7DAJcAP5pHwjwpgqSmV/8L4hJLSCsS8x5xIl2
b93YsZnYvU0hdu8sTGfNGCSkeh29b9+EK1eu9O7d2zhtHRsbO3ToUFdlufDw
8JkzZ27ZssVjAXnXbYEDBw6k6RiOHj3atm1beu7cuXO9fErK19q5c6cW/DY3
gx7QmOvXr/dyBG36tDHlPhlh6b3x+hYZR+w+Tdhr9//cTM4fPVqNGOEVAwdy
Fnr58gH+EFLa/T//JE3i4xw4wCXmXnxRvfyyDTz3nCpThpP2//zTd3bt4nr7
NBodVWo8//wt4u/S/4IFPWs77ZA9O+f2i+P7EGL3/uNTNCC7Bzu7gXOpYKL1
wO6+s6waRMcREKPbQYAV+8Hl58iXtcR+hdC3NwT4L82Jdv/+V8oCsXu7Quze
WZjOmjHIiGm7ycJ27doVFRU1/WZMuxlz5sxJ+dy4uDgt8u3btz979qxr+/Xr
16Ojo0NDQ1sYolWrVjExMalNr2/dupVMmXYzZb97Ga4MBG/S4N2+Fom8XqHg
ii5duuhF996MMGDAAPp148aNKY8qHa4nPYbx+hYZR+w+Tdhu9zt2qJ9+4n7x
3rBqlRo2jDvQBfZDSM3ubeHMGV6AQF8SUA2SCnN15u9k+fJq4kTfGT2aR+jQ
QXXvnirh4ZxZYaJ9e07MePZZPmWap59Wjz/OuQRGihThtQA651+vAnBl/hcu
rAoV4lsEBQqo/PkZXSrw3ns5N8BVJ/Bf/0qq3q/vDwRVwUCxe/8BeiL4jxec
fG80AwJclYBMf4NHDk6+P7IXAmwMB6ZMhA/yHfBze+s7iLe/hXCi3Vs3ERC7
tyvE7p2F6awZY9GiRdpkjRvXrFnT4tZo3bq16Ynnz5/XStumTZudO3emHDkh
IWH//v30r3LYsGGk9nqciRMnptxz7dq1WpZHjx4dHx/v9itHL7HZMnSNOwp6
RYuvrtvX2rdvn34u2fqZm6HX1NOeKQv4ux1h0KBBLf6/9qArdL1B+pQsjid9
wnh9i4wjdp8mbLf7NJFBaua7tXu7uHGD2y6sW2cP9HGRZZP/1q7tI7VqqXff
5aJ8s2ap5cvTxrJl3N0vJES1aqVat2ZatlR163KpfwtefpnXOBAVK6oXXuCs
gAoV+PZCuXLciPCxxzgroEQJXr+QMycfWPbsLPV33MFvU3fW0wRJiN37D7DO
GGj3YGM4MEF9UDhEl6G+A2bmg4Jc9g+I5pMhWkyC+OgL3wFXgljPRHsEvDng
RLu3rskpdm9XiN07BZOkpzyVq1ev1n86d+6ca+PJkyd//P/Q9eJMdk876CZ6
HTp0MPkvSf2VK1dMr3L+/Hnyev1CphbwenyKyZMnWyxy1w3mvIytW7e6HSS1
19IuP2nSJOPOUVFRLVJk+6c2woQJE1oY+v3pWLlyZQtDr8AAhvH6FhlH7D5N
ONrur1xRmzeTDakhQyDat+eMd3J8f7zHxER+m4cO2cOePWrpUq5biFhGly5s
0L17q88/TzP0cZHaN26sKlVKmrsvW5YXC7z4Yqp2T1KvlxXQA9pNCz594HTe
n3mGRyhYUOXLl5TML3P3Yvf+A2nrRoB2DzZHQ1a+E0hqPYHYPSjI/XtClN4F
0WA2RI9ICORmFHg7CLT7assgnGj31o0dm4WK3dsTYvfOwnTWjOFq/bZ582a3
5/rAgQMmuz969GhYWFiLm2vq6emm0Vq2bEk76+54xkhMTOzcuTM9a926da4t
el0AxaJFi6xr4sXExMyyDD04xZAhQ65evZry1S1eq1+/fsYD07Ft2zbaGBER
4c0I8+bN09uNG3VexLRp0yzeV/qE8foWGUfsPk042u7/9z81ZgzP9uqC8D5T
qBBPH2/ZEvjT4Q2xsSomRi1enCqLFqnoaPXFF+6ZN4/r8uXOzXPuzZu74ZNP
OP2e/L1Jk1T58EN1331J/1rJuwsU4JNIzu4bOXNyvb7g8XfrELv3H4Gdux/e
CSJiAARo90jxdnD+Giw48Ph2iLrzIFyN730D+djBhfNvLoeoHgPhRLu3fkdi
93aF2L2zMJ01U0RGRra4WR9+3759Kf+6fft2o90fO3ZML6gfMGCAq3+cK1zF
502z2PpPHTt2pD/98ccfegspuc5+N2m1D3H8+HE6fhqN3ktsbGzKHaxfa8SI
EfTXr776yriR9qSNJP7ejKAL6PXq1cu4sWfPnrRxzZo1vr8xm8J4fYuMI3af
Jhxt9wcOqK5dVVgYN4lDGDmSp5V/+SXwp8MbEhLU33+rU6dSZft29c03atKk
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
QW73HklI4AT+a9cgrl5VR4+yy4eEqLZt3dOmDaffN26c1K3egvr1Oc+f7P65
59Tzz7Pj+ww93RvE7tMzxO79Bzh/Ddo96ImB7XePfG5guX4kbYC4/xQE+Org
TZXwQb4DnnGwYgD4xp1o99bNF8Tu7Qqxe2dhOmsp4+zZsyRiLdzFgAEDjDYX
FxcXGRlp2mf16tWuHRITExcvXux2qEWLFpFip3z1n3/+We9w5swZW76fKePi
xYvDhw83HQ/9F8O1A9l669atjX9t2bIlKaprB3L5sLAw4w4RERGnT5/20wHb
G8brW2Qcsfs0IXZvDZ3f/ft55h3ht9/Uxo28cJ7cvGlT99SpwwZN1qzXxVtA
O+hi+PQzRw5+SmqV9HTlPSMpS+3RCK5a+rqcPv2aLZsZycxPtxC79x/gSmTQ
7j8PhQAzpQeFQyD3JcDybv17QoD97sGPvWd/COT7BnZJAPsYVlsG4US7f+J3
ZYHYvV0hdu8sTGfNFCTs4eHh2lhnz569bdu2kydP7tu3jwQtJCSENtJfXTP4
tANt6dix4/fff79379558+bpJ7qmwmmj3jJ16tQ9e/aQCdKWGTNm6I2rVq0y
vnRiYuLatWv1q/jV7ulgaHzS840bN+7cuXPChAn6FQ8fPkx/PX78uFb74cOH
b968+ddffx07dqzegQ5ejzBlyhT6NTIykt7p7t276SqRfh04cKCfDtjeMF7f
IuOI3aeJ9LH72Fj1119q1y61Z4+T2LlTrV6t5s5FmTNHTZqk3nqLv07vveee
KlVUiRKswy7RJsvWbexSQtvvuovJkoVdWz/WGu56QD5uUnKN3q7/RE+//fZb
oAMgZ5cIYIjd+w+w0hdo96Cl9u0NAb73YZ19B6yqB3bEy/c/CGT2nJjQCqLP
p74D1gME9bzBbAgn2n3ZP5QFjTqL3dsTYvfOwnTWTDFnzhz6U5s2bUhaTX86
duwYbae/btq0iX69fv16u3bt6FdSe9c+eip/8eLF+tcFCxbQr3379iVzNw6l
cwOGDRvm2nLq1Cn61Tgb7ie7P336dMuWLWn8Xbt2uTZqPdfT9/STHnfq1Ml1
EyMhIaFHjx60cf78+fTrnj176HGrVq0uXLigd6AH+oaA24UJGS2M17fIOGL3
GdDu9+3jT6lpU14z7iAaNVLPPKMeeADKftcJ8I89xkJdoIC5nJ2LBx9M6lDv
IlcutniX7LtFC7vL5TWuqXYJJ4bYvf8APRG0e3Aat9I6iEYzIOrM9x1wAXjT
aRBgTT+w3/2IjhBIbvyHCyHAfyzg1L8T7f7x7coCsXu7QuzeWZjOmjHi4uL0
1PnSpUvdnuu5c+eSxpLT6Z1XrFgxc+bM2NhY1w765sCMGTP0r5MmTaJfx4wZ
Yxpn586dpHvDhw93JefHxMTouwpr1qzRpuyb3e/bt2/27Nluc/51fPXVVzT4
tGnTjBuPHTtGh6RfMTo6umvXrvTTuMPChQvpWWPHjqXHX375Zco3NW7cONpI
u/lwzOkcxutbZByx+wxo96tXc1e45s3TXEEusNABP/UUz4Y/8gjEww9zffvb
buNkeN2TLiX33ce958joXegMeT0vnxpZsvBse8oJej0vL+HEELv3H60mKATQ
7sHicjUXQYDp8cg8LNiwHvzcwFX/4OdWOxrioy98B6xrB9Z5QI6ccKLdWzdf
ELu3K8TunYXprBljy5Yt1vPmcTcjtW8CmXWHDh3o6T///LPesnbtWr1onbTX
WgN/+OEHsnK9dF1nCPhm9wMHDqTnRkVFmbIFXKGT6jdt2nTy5Mk1a9bQi65Y
sYIeWw+rkw3I6+nx6NGj6XFMTIxxBxJY2jhq1Cgfjjmdw3h9i4wjdp8B7b5j
R9WjhxoyRE2Z4iQ+/1y9+Sbnq1tPoHsDqbprYt2FdvDUoNeVCMIQu/cf4Brq
wNo9qJkNZ0EgggyWdwObBYCfG9j2/YMvId7+1ndAu/94JkS9uRBOtPsyO5UF
Yvd2hdi9szCdNWPoCfTQ0NC0fgdI37p166bvDMyYMSM+Pl5vj42NHTp0qCvZ
Pjw8fObMmVu2bLGuMI/M3R89erRt27b09Llz57rdQef/6yQE14G1adPmxx9/
TG1M1z2KAwcO/PP/pk8bU+7jiKX3xutbZJyA2H23bmrbNi6/lj6MH8/Tyg6y
+5AQ1bcvrz3/7jvbiIlRS5f6lwULuG/dyy+r1193A310r7zivnidW+6+28wd
d/AcvcX++s6ARFCF2L3/aD5ZIYB2jyS3E+CtCXAuFVmzD7YCBPUczByI7AEB
zt2/ttp3Ajt3D64EcaLdl96lLPhY7N6mELt3FqazZgxyXtpusrBdu3ZFRUVN
vxnTbsacOXNMTxwwYIDLlGfPnm1sZnf9+vXo6OjQ0FDjmvpWrVrFxMSkNr2O
2P0/hgwEt3nyegU9RdeuXVevXk1SP2jQIPqVXvTYsWMp99+6datep+/K1ddv
duPGjSlfNB0uF/EwXt8i46Sz3Z8/z5dttWpxIndYWDpRowYfmIPsvl07NXq0
WrnSzjHj4tTly+rixYBBp/7QIU68f+ghVbx4milWjHP1y5RR5ctzh7vUKFcu
UJYpEZgQu/cfYIU00O7BOmPvfwUBdihrOdF3wJcGP7chXSHAuXtw1T/ScR4s
1AC2AgQzVZxo94/uVhaI3dsVYvdOocWtkfJULlq0iLZ36dLFuHHNmjWmJ5II
m55IJn769Onvv/+elJl2IF827ZCQkLB//376Vzls2DBSez3OxIkT3X6jPNr9
zp07N1uGS+GNfe506CPs0KHD+fPn9ZYbN27o9naucgGuWLt2rVb70aNHuxIS
9N0AXVrQFST7LW52DEztmDNOGK9vkXHS2e6vXmVpDQ1VvXuj137eU7euev99
e+z+lVe42frnn/s3xb1qVTV0qJ12f+qUmjBB9eyZfp95SuiMd+7MS+abNOHb
F2mlTRv+8IlXX1WVK98CbXnySe5oX6oUr9k3Lsb3DZ0qkDMnl+mTyOAhdu8/
AtsRD7RUsEgaWJsOycwH7R6cuwcTNsBeA2CCOnLGwUINNRZDgDejnGj31q0V
xe7tCrF7Z2E6a8ZYvXq1luJz5865Np48efLH/w9dUC6l3bvil19+0SNodyap
v3Llimkf+hN5vd7NbY94j3avS9x7GVu3bjU+V7u5KW9fJy2YbkroN0sxefLk
69evu7brDnqmdn4rV65scbOJXmrHnHHCeH2LjJPOdq8nkYcNS1dIJ2vWtMfu
K1ZUjz/Oc8TPPutHihVT/fvbafc7d6oKFexZEY9w1108/z5rllq+PM18+y2v
6ahVy013PPrWlSmjChdWBQvaAw314IP84L77AuWsEt6G2L3/6DRcIYB23yMS
osoKCPDOBrLyHUyZ6DASAqyqB9bMR4reE5XX+A6yZp+otQAiCKvqPbxXWSB2
b1eI3TsL01kzxvHjx7XPbt682e25PnDggMvur1279tdff+3cudO4Q3x8vG6T
RyPQaC1btqSdjYn6OhITEzt37ky7rVu3LuWreLT7mJiYWZahB6cYMmTI1atX
jc/Vbm6yezraFjc797kOT/s+xaJFi0wrCObNm6e3GzfqtAdTKf6MGcbrW2Sc
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
fC/5808W/MaNVbNm6U3TpqpRI25DnxqvvsrZ+3fcobJk8ZasWT2sCMifPxnX
xmzZktfmE7fffgs6JEU/U4bYvf8A/Rq0e1CX+veEACUXaWnXdQgEeORhn0GA
Bw+edASwR0MAj5xwnAuQ3Rc6qiwQu7crxO6dhemsSQRbGK9vkXHE7p3OiRPc
FK9tW+6Ll9GoWZP72elZdW8oUoTb1hcsyDPvHilQgG8d5M3LZMliXmufElmP
nylD7N5/1J2nEEC7B20LnAUGU8QRux/aBaL+HAiwKN/IDhDgx/7+V74DdsSr
sRgCvJPmOBcguy94XFkgdm9XiN07C9NZkwi2MF7fIuOI3Tud+HjOzz91Sp0+
neGgL8OBA2r/fm/Zto0b/L36qnrtNQ/QPk8/zcKeIweTPTtjfEzcdVcyqZXp
I0jzb7+dcwY0OoWAtt9xR6CEVSINIXbvP8B5WNDuQT3vMBIClFxkUQAqepMg
XlkLAXY6CP0cApn+7jIUour3EEFo9wVOKAsaiN3bFGL3zsJ01iSCLYzXt8g4
3tv9ihUrunbt2qZNm23u4pdf1o8bx33NxO6DhNhY9d//qrVr1YYNVqxfr/7z
H29ZtkwNG6befZcX7FtTq5Z64w3WcNf0fcpuerqh3r33cmH/nDmTIfF3uTyh
p/VdSwN0bj9td6X0S2TkELv3H6AngnYPLj8H276D773OfN8Bk7TBzHzQUltN
gAD78SHz/mChhmrLIMC7Io5zAbL7B/6rLBC7tyvE7p2F6axJBFsYr2+Rcby3
+02bNjVs2DB//vxvuYtq1ao88ww3VSfjC7h4mhC79wd//aVmzmS51tXtbKFE
Cf7ZooXq1csDERGqVStecV+6NBfus4AG1P37NKT899zD/2o8ZvJLGr8jQuze
f4CN10G7B18dvDkAWipSIQ1MrQftHik7T4CODH7syEIS8MjBzHyw04HjXIDs
Pv9JZYHYvV0hdu8sTGdNItjCeH2LjOO93e/atatXr14vv/zyx+6iYcO6r7/O
TdXF7gPI5cvq/Hl17lx6sH69GjGCS9xXr24Pb7yhKlVSzz3HLQDofFkTEqIa
NuR1+o8/rsqWTZXHHmO7z5OHZ/A1uXPz9D3FbbelDRH8jBli9/4DFOTAzt2/
sxQC7AaI3JcAy/WDs8CV10C0nAhRby4E0qoA9OuaiyDAewuOcwGy+3z/UxaI
3dsVYvfOwnTWJIItjNe3yDje2/2NGzf279+/atWq793Ft98ujoxUVapIZn4g
2b1b/fhjGjLhEfr141J+Xbty0X5bWLuWz1T//qpcOXZ8jzz7LO/51FNWkPsX
KsRinrKivnGL99ATLar2SaR/iN37D3ARdGDn7sGFzIgnEsiSf7DgALim4OX/
QHQfCAHO3SMN65GKfHhRPjBhw3EuQHZ//yllQYNuYvf2BGL39NyA+7s/7J7e
V8AtXuxewm0Yr2+Rcby3e4oLFy4cPXr0kLvYv/+PWbPU22+L3QeGhAR19qzq
1Imz1sGLai+pUUO99x65lbp0KW3s3q02bjTfK1iyRHXurJo04Yl7UvInn7QB
GqdkSXX33fxvxDQLn9aJe9PTJXs/44TYvf8IbFU9cOE8qOegZiLz/uDcPXjk
r6+CAO/JgFP/yLp7cO4evCuCFGogHOcCZPf3nVYWiN3bFWL3YvcSDgrj9S0y
Tprs3iKkZn5giY/nhfC5cqnnn+d68ulAmTI8e96/f5oPddMmNXeumjbtFsLD
VeHCXPGelNwuHnmEJ+4lMneI3fsPMDsdtHswcwCcuwctFfFr0O7bj4IALTWA
nxuBTH+Dfg3WQgQT+x3nAmT3ef9WFojd2xXId8Nx3ysvI+O/r4x/hBJ+CuP1
LTKO2L3/OHtW7dvHU9XpwPbt6rvveB36iBFqxoz0gD7SmjW5S8I336SBhQtV
69aqWzfzlXyDBlz7Lk8eTv+wi6pVVeXKyVP5ZcpwtXyPpfOM1fVN5MqVVH6f
ImXS/m23JeX86yl+/diILN73R4jd+w/Q1EC7B1vagQnqIEjWAVgWD5z+fuJ3
iM7DIMC2dMgXBlz5/tZ3EEFo9/eeVRbUF7u3KVpIODMC/cWRCEwYr2+RccTu
/cdff6nlyznnPB1YtEiNHMkOe/x4Or07etGOHVl1mzdPA3XqsGK/9RYn4Rt5
/XUuZV+wIFfCtxF6xUaNuP4eUbMmF8y3SMvX6p0/v3rgAfcUKMBHSDtQZMt2
C3feyYJv7KmnH2fNmtxrT6/Zl7A3xO79B+iJoN2DVfXA1etI0XsC+dzAGwtg
U7myf0CAdg+miyDJHsiafQIp10+A5QQd5wJk97nPKQvE7iUkJIIwjNe3yDhi
937iwAE1dSo3d0ufVfC9erHMlimjjh1Lpze4Zw/fUqhVy+qounXjOwChock0
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
4PX1NWq4oVo1bnX38MPq8cdV2bLuyZ8/MHYpDfUCG2L3/gPUTNDuQdED67MF
cN39oHAIMDce/NwCW1UPWbOPZPUT4F0RpB4g4Ti7p5jhKdw+a9asWTNTiR9+
+OGfmyvi6dPo0KGDaa62ffv2tJ3+anFIsbGx58+f14+7du1K+7t+9XIH58aW
LVv0TZIzZ8643SHuZqTzUeGxdu1aelMtW7ZcuHChE+sGSARbGK9vkXHE7gPF
jRvq9Gl16lS6cuCAGjFCdeyIXnjbTsWK6sEHVdGi6qWX3PDss1w8/6GHWPBT
UrIkU6AAz6TrrHidGH/77b7YYlpVXew+sCF27z9Avwb/mwB2nAcbr4Or/pGG
9aBmgisawHX3n/aBAKewX1/lO6BfgwsiQJxo9/4LvXjcOE1Pj2lL9+7d3e4/
f/78yZMnG1eU69J8ERERXu6QCSImJobeUWhoaKAPxOaIjY0dOnSoK8GDvhsz
Z87csmWLtDKUyJhhvL5FxhG7DxRXr6rdu9XOnenK+vXq7be5Wt24cWr8+AwE
HVXx4rysXqt6SooVY/13u3CenkVqr5fkFymSBD32LSX+ttvE1p0UYvf+I7Dr
7sGOeOACcPDOBnJnAEwbCGxmPmj3AWw6X/V7CPCmCtjiQezeGAsXLtTJ2NrH
6efo0aNpy+LFi/UOV65c2b9//8GDB/WvAwcOpL/+9NNP+lfywUGDBtGW77//
3ssdMkHMnTs3Zb2CXbt2RUVFTb8Z027GnDlzAnWEPsf169ejo6NDQ0ON6zha
tWoVExNjSvCQkAh4GK9vkXHE7gNCbKz65hvVoYPq1Stdp8i7duV5cFL7n35S
P/9sP+vW8fuaMSPNdO+uGjRQtWur+vXdU7euqlMniQ8/VK++yrP5JPUEuXzu
3Elr4dN/7l4isCF2n1kz8z/4EgK0VFDW+nzqO2DDenDqH/RrMDO/5iIIZMl/
88kQYFE+8NXF7o1x8eLFsLAwXTmfjF67edeuXV1p+X/88YdxnlonpYeEhJDh
LliwICIiosXNnnrXrl3zcodMEIsWLaI31aVLF+PGNWvWmIobtG7dOlBHCEZC
QsL+/fu/+eabYcOGkdrrtzNx4sRAH5eExC1hvL5FxhG7DwhnzqiQEF5LXrKk
+1LtfqJUKZ4ij47mBfj+eF+nT6tfflELFqSZefN4Bn/UKK8YNkw1b84F63RZ
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
B0euW2e99JI1a1YUavx4u433s89akyaFv55+2rrzTqtOHeuqqyJYl19u91gP
5DrywZYzHp13+YnVgRQQGtJ95Or91pamlOn+hXtVpWkbLzXrDlVpzgLPuV1V
yrbxyi4JY0aoSnnVeE2Phu6zVaVscdFmiapI9wAQA9z7t5rlpMN0f/z4y9u3
N162LDr1+ut1a9Wyxo61xo0Lf5kG8y1a2OPjRa7q17e7t5coYQ9PZy4554xc
Z4atMyPXmSpZMrlkflNmOLtixZKraNHkKlIkuWu86R3vlOkmX6BAcpn+8lL5
8tllBsRLaUw8Z1g8j9707iHxs2a13+TuIwxOOQcWMmc+p4Jq248MjXQfq+fu
lVfEe/4+Vb3STVWamKnsgj0yTlXKXv/KDhEldqpK82ZVHst64BlVKT9ppHsA
iAHu/VvNctJhuo+u48e3v/229cADGb4GDLAGD7YPKYwdax9VGDPGGj3a3md+
9FHrkUfsEfiHDrUeftgaMsSebeBA68EHk+/Yv7/Vr5/Vt699Ab5evax777Xu
vtvuKHHnnXa3he7d7Q74t91mdeli1803WzfdZA/317Gj3RegfXt7QMLrr7fa
trVb8rdqZV17rX00o3lzq1kzu89+kyb28YcGDZI76detm9yS4Yorkkfnq1kz
eSw+Z8y9UqXs/F68+DlHGAoVSj6SkDdv8pj5zsB6ztXxzNEA9+/uwwJ0vY8N
pPvI1bIWlqaU6X78QFU9OVhV03qpaujjodfEB1U1ua+qlC97+0Wqqve5qqI4
Zr6yS8J1H6iKdA8AMcC9f6tZDunew+nTf/34Y9yHH2b4+uijuP/7v7hVq+I+
+yzu00/jVq6MW7HCrk8+sevjj+OWL7dL5lm2LG7pUnt+KXPfDz6Ie//9uCVL
4t57L27x4rh337XrnXfiFi2y6+234956K+7NN+MWLrRrwYK4N96w6/XX7Xrt
tbj58+PmzYubOzfu1Vfj5sxJrldeiZs9265Zs+JeesmuF1+MmznTrhkz4qZP
j3vhhbhp0+yaOjVuypS4yZOT6+mn40aNips4MW7ChLjx4+OGD7+/S5d2jRtf
2aRJbVMNGtTOn/8iCfgXX5zcYMDdbMCjCYG7IUGePHbGz5TJPt1vmgHILx5d
BkxLAKRbaZPum9X9OFr1+YHEaNUXV1uaUqb7V7uqSnnl9JfuVJVm1Pp+k1Sl
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
q0cPH1Wvnn19ug0b7DH5w1V79lhz59o5umZN6/LLA6rLLrOHrO/Y0Zozx0fN
mmWPjNe+vT3o/aWXWjVq+C55ImXL2n3nU7r4Xart870L0UK6j1wpz2Yq072y
57syLilPxWqa1j85WFWa89dSY0ao6oV7VXX9YlVpnriysYeyQ4RyKEXSPQDE
APf+bbTX5Xy0du3K2rXtK7nv2mWn1Bio3bvtAe4kyMtP72rUyM7gW7aE83jC
yZPW55/bg9LfcIMdya+/3m4w36yZv2ra1D693rmzNXWqj5o0yW4JILNJfnfO
wntXiRL2WfhAcKo9/SPdR66UCVeZ7pUnQ2+bqypl+3ZNv3vl+GzKK+K931pV
j45SlTJiawZqULZUUY7iqDw4QLoHgBjg3r+N9rqcj774YmXZsvao73PnWvPm
xUK98op9EboxY6y33vJREvCvvDLM6V7q9Gn7JP7ff9u1a5e1ebP18cf+avly
2Y2x83uDBj7q6qvt7gMXXmifTM+c2V8R22MG6T5WW+Yr47myfbvyJPJTg0Iv
5elv5bB4q+urau5tqlKewtYM1KA8KqK8kqByNELSPQDEAPf+bbTX5Xy0fv3K
5s3tfujPPBMjNWGCfSX3SZOs1at91IABdsP4hQvts+0Rqg8/tJc/bZo1fbq/
6tTJPs5QterZMj3upSpWtHvB47xCuo/Vlvmaq5tJKbvtKwdvf+aB0OvVrqpS
XnhdOarex9eoaujjqrp1fuil7PKvvI6hcrQE0j0AxAD3/m201+V8tH//Somi
d9xhX7UtNkqeS65c1pIlvvvIS/aX+Fyy5DmDzIe38ue3+9RLFSvmrwoUsI9C
OHXxxckn6003+cyZo5UyER2k+8iV8hphynR/zceqGv6YqvpOUtVLd4ZeyhED
7nteVTPuUZVyVD1lw37NE39suKqUFwv4ppaqSPcAEAPc+7fRXpfz0T//fPfF
F43Hjm08blxsVIOxY+18PX68tXSpj+rf3+7JniePPT58hCpLluRm87lyBVE5
c3Jx+fMa6T5ypRxFXJnulR2ZlYcmbp+jqrHDQi9l4/YHnlHVwk6qWtBZVcpj
MpphIvpOVtWkfqrSXGRBinQPADHAvX8b7XVBDDgcH2+PJy9hOUcOH5U9e8Qr
Wzb7SnaS8YOqQHrZ+ylkdKT7yFWclird95yuqmFjVVXuN1VpIupz/VXV8DNV
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
n376qTOlatWqMuXYsWOrV69u0aJF9uzZzXrK6/DVV1+57/vcc895/wvE999/
7/Eo06dPL1++fPHixZ2eLPKpcd/l2muvdc9//PjxgQMHul/YnDlzNmnSxPtt
YBw8eFBe+dmzZwf7ygAA4AfpHgDON0Gle/MFccMNN3jMtm7dOplucr3EfDOb
5FzTnd/82alTJ/ddbrvtNjNdctONN95Yt25d0+a5VatW4XpqzzzzjITQvXv3
et9kWrk76bthw4YFChQwf/br189j5ttvv12mS1KWBZp5MmXKVKpUKUmO7h7T
Jt07r0PRokXlFbjgggvM/HPmzHEvM8AXVkhIdM+TaroPcG2DegW2bNliJR2x
kWhfuXJlM5v8o+VZyC/Lli0zs02ePFn+LFSokGR5jyXMnTtXbipdunQIZ6jf
f/99ua/8K71v+t///ic3ffzxx86UwoULy5S4uDh5oeQdVa1atUsuucSscN68
ef/++29nTo90bz4I4rvvvvN4lClTpph5nCM2/tN9x44dzWzygsu/o2XLluaF
Ek888YTP5zhgwAD5IAT7ygAA4AfpHgDON0G1zJcM4ifdC8k1p06dmjVrlvlT
5pc0N2zYMPm9RIkSzvwvvPCCTJFoNmPGDKfR8urVq82hAEmmYXlq9evXl2Dl
86YVK1bIY40aNcppWP7vv//eddddVtLA9R7jqpm8XLNmTflZqVIlWec//vgj
MWk0vG3btjmzOelenqlzhnr79u1Vq1a1ks6by/wprWpKL6zb9ddfbwXQMj/A
tQ3qFTDpPlu2bKatRZ8+fT799FPTykKW6XS7OH78uBl07sUXX/RYqyZNmsj0
xx57zP/K+xRCuhdXX331zz//bCbK29tMnDx5ckqPIsE/pXTv+Oabb8w8flrm
796928wzd+5cZ6J8CubPn9+uXbuUronw9ddfy128mw0AABAy0j0AnG/CmO4z
Z85sTpTv3LlT/ixWrJjJfRK+zElnM/OJEydy5swpU8aOHeuxnAkTJsh0SYLa
Z5WYKGsi6yOJO6UZvLP2sWPHzCny119/3T3d5GVx1VVXHTp0KKUFmnRfpEiR
AwcOuKevWrXK3N3PyGlhT/eprm1iMK+ASfeG/2Mvo0ePlnmqV6/unvjLL7+Y
eL5nzx7/K+9TCOm+bdu2Hs9Owr7lq1mCI1zp/ocffjDzvPXWW6k8MZeEhAT5
vMirF/hdAADwj3QPAOebMKZ7J79LSJQ/a9SoYf6UuGTOCJs/16xZY/70zp5m
TglooT+f/6xYsUIWJbE01Tl//vnnRYsWjRs37t577zXZ9vHHH3fPYPKyvFD+
r5XmZ8z84sWLy00TJ05M6b5hT/eprq1bqq+Ak+79pGPDdCG3XM31xeDBgy2v
rhmBCyHdv/HGGx5zmmYJHTp0SOlRwpXuRd26da2kpinylBcuXHj8+HE/Mztk
5s6dOwcyJwAAgSDdA8D5Ju3T/YwZM8wXTRYvzneQfmy9efPmSbzyM1r+tm3b
evfuXbRoUcvLyJEj3XOavHzHHXf4f0Q/6d7Evf79+6d037Cn+1TXNjGYV8BJ
97///nuqizXP5brrrjN/njp1qlChQjJl+fLlqd7Xp7Cke7NW7dq1S+lRwpju
ZVHdunUz40hYSUPqtW/f/vXXX/f/rpa3R/369f3MAABAUEj3AHC+Sft0bzrd
i54p6NOnj/55Pfvss37aAKxYsSJ//vxWUjuBe++9d9GiRRs3bpTVNt3Dfab7
u+66y/8j+kn31atXl5tGjBiR0n3Dnu5TXdugXgEn3e/cudP/YhOT+mVIEs+U
KdPmzZvlz7feestKGrI+8MvteQhjuvfzCocx3Rvyoo0fP75hw4ZmJa2kYQlX
rVqV0vxjxoypVq1aqosFACBApHsAON+kfbpfvXq1+aLZtWtXmJ6ED7Nnz86e
PXtKt5YpU0ZWoHPnzrKq7umRSPcnT540lwWcN29eSvcNJN136NBB5kn10EeA
axvUKxBUuhc9evRwVrVdu3aW314Jqfrwww/NozvD9znSON1v2LDBzLNv377A
1//QoUOTJk0yK5YnTx6PF9wxaNCgOnXqBL5YAAD8I90DwPkm7dP9kSNHzNXS
U+3ErbF06VJ5CPcV0Bxm0D/h0TP9zJkztWrVCnu6nzp1qnm4TZs2pXTfQNK9
vFxWAFcMDGRtg30Fgk338kwzZcqUK1euX3/9Vf7X2bJlO3jwYCB39On77783
j+4xpPyLL75opqdZuj9w4ICZ56uvvvKzwj4Hxpe7mPt+8cUXPu/VvXv39u3b
+1ksAABBId0DwPkm7dO9GDdunPmuGT16tPuE7E8//SQPEeAoZP5t27ZNlu9c
mc5t//795tFnz57tTFy/fv0VV1xhpmvSvaTae+65xxkwcNmyZeYyf/4HTAsk
3U+fPt1KujDB6tWrnYmnTp3yOBccyNoG+woEm+4T/ztlX6lSJfkpqxTgvXyS
3C1vHitpTDwzEr485TFjxjh7LGmW7kWxYsWspP777vftX3/95fz+wgsv5MmT
R97hHm/jESNGmOX/+eefPpcsL/7gwYP9PDQAAEEh3QPA+SYq6T4+Pr5Nmzbm
66Zo0aJt27a95ZZbatWqZQYie+6558LxzBKrVKkyaNAgnzddc801Jok3adLk
1ltvNZdxz5o1a8WKFZXp3rQVz5kzZ4MGDeQVkMVaSX3b/Y9HF0i6l7Rooqs8
RNOmTbt06dKiRQv593lcRi3AtQ3qFQgh3X/xxRfOHsXnn38e4L1Scuedd5pF
FSlSpE6dOrKeVlIzBtPSIC3T/cSJE81spUuX7pikevXqOXLkcMJ+jx49zD89
V65cV111Vbdu3Xr37l2/fn1zr7vvvtvnYvfs2SP3WrlyZaCvCAAAqSHdA8D5
Jk+ePLLNf/PNNwOZ2VzaTBKNx3ST3z3SvSQv963udG+8+uqrpve3o2zZshLt
w3LuPjGpI3NKg7nt27evffv2zuNKRr7xxht/+eWXZ555xjvbdu/eXSb26tXL
/8OZawEMHTp0+vTpBQsWNEvOnDlzmzZtUjpd60jphfWwefNm5/S6kS9fvjFj
xoSwtkG9AqYhhJ/zzj6ZS8w7B3k0Dh48KKvnrG2xYsXkFTt9+nSnTp2sc1to
mHPrKaV7P6+wk+5/+OEHP2sSHx8/btw4c3jBkFQu/5Tt27c786xfv/6mm24y
a+IoWrTo2LFjUxo2X94zefPm9XOJBwAAgkW6BwCksUOHDn3zzTdff/21zz7y
GhK4smTJsmTJkpRm2LNnz6effipZTCJbeB86ISHhxx9/XLdu3ZEjR8K7ZLF7
9+7PP//8s88+27Jli3LNI/cKSIytWrWq7E5MmTIlXMvct2+fPGs/wxekmZMn
T8qbVlbmu+++c3pheDPv7dWrV+/cudPPKyzvlipVqgwfPjwyKwsAOE+R7gEA
saR3796NGzeO9lqcjx5//HHZl8ifP7/PIebg9u677+bJk8fPUQIAAEJAugcA
xJJdu3Zly5ZtzZo10V6R80J8fPzp06flNR8/frxpu/7kk09Ge6UygHr16nl0
hQAAQI90DwCIMffff7//8eoRLsuWLZNQb8aUs5IGlvc56AHcVq1alTdv3rB3
SwEAgHQPAIgxe/funT59erTX4rwgr/PFF1+cLVu2WrVqTZo0Kex9+WPS119/
vXTp0mivBQAgBpHuAQCABufrAQBID0j3AAAAAABkdKR7AAAAAAAyOtI9AAAA
AAAZHekeAAAAAICMjnQPAAAAAEBGR7oHAAAAACCjswAAAAAAAAAAAAAAQDoQ
7RYEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCzbvXv38uXLZ8+e/d57723Y
sCEhISHaawQAAAAAAAL1008/NWnSxDpXgQIFdu7cGe1VAwAAAAAAqfvjjz9y
585tecmfP7/H6fujR49OmzZteJIlS5ZEa4UBAAAAAICHHj16uEN9tWrVatas
mSVLlk6dOpkZDh06NH/+/J49e+bLl8+Z7b777ovuagMAAAAAAEfZsmWdzP7J
J5+YiadOnTp8+LD5fdasWd5n9kn3AAAAAABEV0JCwqFDh3bs2LFx48bMmTOb
wF6wYMH169d/n+THH390ZibdAwAAAACQDkmo9w7sbiVLlnRm3rZt24Iko0eP
Jt0DAAAAAJBOBJXuHatWrSLdAwAAAACQTvzyyy/lk5QrV84d6sv/p1WrVt73
It0DAAAAAJAOnTx50gnsdevW9T8z6R4AAAAAgHSIdA8AAAAAQEZHugcAAAAA
IKMj3QMAAAAAkNGR7gEAAAAAyOhSTfenTp3a8p85c+Y4M3fr1s1M3L59e9qv
NgAAAAAAcKSa7jdu3GilRhaS9msOAAAAAAAM0j0AAAAAABmdO903bNjQe4af
f/6ZdA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoWAAAAAAAAAAAAAAAIB2IdgsCAAAA
AAAQCtI9AAAAAAAZHekeAAAAAICMjnQPAAAAAEBGR7oHAAAAACCjI90DAAAA
AJDRke4BAAAAAMjoSPcAAAAAAGR0pHsAAAAAADI60j0AAAAAABkd6R5p7N13
350zZ87OnTujvSIAAABAurN169YFCxb8888/5+0KZDjbt2+XgLNkyZJorwjp
Pmadcon2upwjT5488maTjB/tFQGAICQkJMjm9PTp0943nTlzRm6Kj49P+7VK
iaynz7WVlUyH3wsAIko2BevXr//ggw82bNiQrrZUSmZrFkvPyNiyZUvmzJll
b/myyy47P1cgXE75Fd7HeuaZZ+QVu/zyy8O72BCQ7mPSH3/84f7P5s6du3bt
2t27d3///fejvWqkewAZ0qeffirbrgsvvPDYsWMeN916661y01133ZVmKyO7
6GvXrvWzT3v99dfLKsn29uTJk+7p999/v/le2LNnT+RXE0CUffvttw0aNMiW
LZuzT1iyZMkZM2ZEe73CwGyTRZcuXaK9LmG2ePFi89QuuOCCo0eP6hd44MAB
+crYsWNHtFYgWsqXL2+l7PPPPw/jY5HuEVFOupddu6JFi2bKlMn5L3ft2vXg
wYNRXDfSPYCMyNmT9G6paNL9bbfdlmYrU7BgQZ9r4jDpXrz33nvOxISEhBIl
SpDugfPEs88+myVLFvORl41GjRo1JKyZP4cMGRLttdPq27eveS4XXXTRiRMn
or064XTy5MmOHTuWK1fuySefDMsCp0yZIi/Ugw8+GK0ViJZatWpd/B8nCjlT
5Gs9jI9FukdEOel+48aN8ufRo0fXrl170003mYlNmzaN4rqR7gFkROkn3cfH
x5s2k4Gk+27dujkTv/jiC+cbn3QPxLZly5aZD3uVKlXWr19vJh4/fvyRRx7J
kSPH6tWro7t6SmfOnClcuHCmTJmqVq0qz/Htt9+O9hqlayNHjgwq3cekiy66
SF6E1157LULLJ90jojzSvePpp58209955x2fd/z777/Xrl37559/BvhA27Zt
++GHHzxafno4derUd999J6tk/sybN28g6f7YsWOyZFmZ/fv3+3l0WXKqB2xl
BeR12LRpU1BdbFJdAflmkRX4+uuvd+zYkZCQ4GdRR48elUW5//z222///fff
wFcGQNSFnO4D367+9ddfGzZskM2a/5aQslFKaU0cJt3ny5fP3Thfdu1Mm66U
0n3gmzVDZpMV9jkWAYAoio+Pv/TSS+WTXqNGDdkEedyaahtO+fjv2rVLNgWb
N2+WzYLPeWQz9c0338hs4VljF9lBkiXv27fPzzyffPKJPLtatWpNmDBBfrnl
llv8zHz8+PGffvpp3bp1qY4RJ09cttWyxd6yZUsg28AAd0QNme3777//9ddf
A1lyIALfYpt2DpFI98G+DeSfK/8I/1+Igf+/ghJUug9kPROTApe8AUy+eO65
5/yn+2BDVshI9zEppXQvn33Zzsv0mjVretxl4cKFlSpVctrwFyxYcNy4cR6b
9Dlz5uTOnXvEiBGyrzh48OBy5cqZmS+44IIBAwZ4Z/y9e/d26NDB6e11ySWX
LFiwoEiRIt7pXrZLF198caNGjeR32efs2rXrhRdeaO6VOXPmmTNnumeWD7ts
pswOqnn0unXryufF+3U4cODAvffe6yxK5sztcvvtt4e2AmvWrOnWrZvsNjuf
nVy5co0dO9a9iyuvvKxh9+7dhw0bZl4BeblkfYYPH54jRw75s2jRops2bfL9
/wOQ/oSQ7gPZroojR448//zzV1xxhTOn/CKbNfdRQTF9+vTy5csXL17caWEo
+yrubdq1117rzGzSffv27S1X4/zSpUuXKlVK9j28030gmzVRoUIFeSCJBmPG
jJFFmTllEye71t4JAkC0vPnmm+bjuWjRokDml90q+Wh/8MEH8vurr75asWJF
Z1NQsmRJj5k//vjjSy+91LQgEgUKFJB9G49zFkuXLpUF5s+f3/ux8ubNKze5
G0W/9NJLMmXo0KEbNmxo1qxZ1qxZzZJlk7V48WKfK9yrVy+ZQR5XdqXM9koi
ofdsK1asaNiwofNcZNMq+6KDBg2SHVSPOeXuAwcOdG8Dc+bM2aRJE59DoAe+
I5qYtO89e/bsypUrO6+YbMNl4yzB3D2b7B7n9iJfLj6XGeAWu3r16vIaFipU
yHTQkJ8ey1+5cmVoK5AY2NtAVK1aVZZz7Nix1atXt2jRInv27GZ+eY999dVX
HjMH/v8Kgf90H9R6innz5nl8CcrXopVCug9kZ0DygqyA/L88vp1Hjhxppv/1
118BPlPLJcC7IP1LKd2LWbNmmQ2RewsgO6Vmftl1vPHGG2UbZT6trVq1ct93
2rRpMrF169YNGjQwH+SaNWvK1s/cV97V7pl//vnnwoULO9tn2QI4vb0sr3S/
ZcsWKyn/yltaNoBmHtlsmkMBy5Ytc+bcuXOn82mSta1du7bJzv/73/9eeOEF
9zJPnjx55ZVXmi3enXfeeccdd5hYbT6qwt3pLPAVMK2bjDJlyshWSF4H82e/
fv2c2datW2c+79Z/Z8qEOZDu7Jl36tQp8P8pgOgKNt0HuF2VbU7RokXNnLI5
ldlq1KghGzT5UzZZ7kGQpkyZYna3nI60qab7SZMmWf81zv/666/l9/vuu08S
unVuug9wsybMVl12t8z3iOzGmBEAhOwa+W/HBSDNjBgxwnycAzxNfPvtt8v8
kutN62IrKVjJ7pZknHr16rnnHDVqlLO9uvrqq51dsmrVqh0+fNiZ7f3337eS
hiH1fiyzfZNs6Ewxu5eyJTQbN/nF2WmU1ZgzZ47HEiQWmS2PiV1ly5aV3yVA
ecwmEdhkNNmgdezYUfKXbLLMuZv8+fN7NJGSGcwTkecrr0bLli3NHqB44okn
3HMGviOamHRqWxZoZpZNuuyXylMzr4DsnboP4XqEa3OXG264wfsFDHyLLfHf
vbSg0r2fFUgM+G2Q+N+3RlxcnDy6fAnKDOYbROTNm9d9WDio/1cI/Kf7wNdT
DBgwwNwk//orrriiUKFCzn/EO90HuDMguxbmtGmLFi2cj628w827xfvt7Yfl
Evi9kM75SfdOv8vffvvNTJFtkdkozZgxw3k7rV692oRQ2dQ79zWbX5E1a9bn
nnvONEQ5ePCgfK7Nh9H9QM2bN7eShut3jrvu3btXthJmCT7TvXxGzKGtPn36
yI60Oai1bds295HAtm3bmsdavny5mXLo0CH5gMhE2Sb8+uuvzpxmCBH5LP/y
yy9myqZNm2TTKs/022+/9XhZAl+BFStWyCsjmzWnxb7cetddd1lJ+7pbt241
E026F7KBkhfKHFQRskGIj48fNmyY/F6iRIkU/4UA0hkn3cue3qRzyZe7dW66
D3y7Kpo0adK0aVPZtjhH8iWJm5Myd955p/eafPPNN2ZNUm2Z/8knn1SsWNE0
zh80aJCVNESw2Q1zp/sAN2uJ/+3/iF69ejmP/uSTT5qJU6dODeolBRAhZqil
1q1bBzi/Sfc1a9aUn7IjJBsu06FSNh3uU8ySNUww6dKli3P1kAULFpgTPffc
c48zZwjp3uwXyebITNy+fbvpU1+yZEmPI4eyByjTZXNktq7mUiCdO3f2eKCe
PXtaSSdW3Kf1f//997vvvnv27NnuOXfv3m1WYO7cuc5E2VubP39+u3btPHJl
4DuiQrbhZkM6YsQIZ2dS9oflH9SyZUs/1z0x+dFnuA58i+0w3whBtcz3swKB
vw0SXd8aEhZ+/vlnM1Eitpk4efJkZ87A/1+hCSTdB7Keq1atMmfh5cVxUr+8
Vcy3tke6D2pnYM2aNeZoxoQJExKT2pOYo/E+9wT8IN3HJD/p3rnJnI8+ceKE
+TCOHTvWY07TlUl2O50pZvMrEdi9TU5Man9llnngwAEzRbY8ZsrLL7/ssVhz
PNBnujc83upuzt71G2+84Z4u7/9ixYp57F2bY2V9+/Z1z2k2s4888ojHkgNc
AcP7/JRs3Mzzev31180Uk+5l62daE+3cuVP+lJU023Z5Aa2kg6j+HwhA+uFs
f1LibH+C2q4m+tqkiMcee0zmrFy5svdNgad72fk0Z1g++ugjifllypSRm8yw
+R5t/wLZrCX+t//j/byaNWvmvVcDIFpq1arlsQskgeUZF9mjc89v0r246qqr
JKumtNimTZvKPNWrV/eIpc8++6y5u3M+JYR0X6RIEWc30pAYZRbrsdMo+dFy
XYTU7FPlyJHD43Kl5nR87dq1U+0X/8MPP5gHeuutt/zPGdSOqKRgM/Po0aO9
F+W/WYWfcJ0Y8BbbEd50H/jbIPG/b422bdt6rLM5M+hubBD4/ys0gaT7QNaz
cePGMkVyt8dwXmZwM/f3YLA7A2L8+PEmam3atGngwIFWUnvjYNstuPdMgroj
0jM/6f733383N5mjo2vWrLGSjvV5b8y/++47K+nQqDPFbH6rVKniMaeJrmLD
hg1minlzyobO+7CkzzHznXDt0abIw8SJE2WeUqVKeW8STW+XSpUqOVM6deok
U26++Wb3bKYXap8+fTzuHuAKeJDvykWLFo0bN+7ee+81G9XHH3/c3GTSvZPf
ZatrJQ1uY/40r6287IE/FoDocnbqZMeyz7nM0XVnpy6o7arbkSNHZG925syZ
gwYNatSokZXCMcCg0v2vv/5qJV0qRX6OGDEiMYV07/CzWUv8b//HY7dWyDpb
SY21UlofAGnJpHv33o58bN37/Hnz5nXPb9K9xB+fZ34dZpvw4osvekz/999/
TedHJzqFkO69dy9F8eLF5SbJTc6U06dPm4boTtNQmWJGbPbYNMk6mFPM5cqV
Gzly5ObNm/08tbp161pJ51hl73HhwoU+e/EnBrkjaro5FCxYMKhRnQ3/6d7h
f4vtCG+6D/xtkJjyt4ZpbNChQwdnSlD/rxAEku5TXU/5v5vleBwfS/Q1Zn4I
OwOy/GuvvdZK6tQsr4Z8giRQBPtMSfcxyU+6d3ZQTXfOGTNmmD+zeHHeGE5j
0ZQ2v3///beZ02nx3qNHD/mzefPm3uvmP93//vvvfp7XHXfcIfO0bNnS+6a3
337bSjpX7myQzTG0rFmzOoeC//zzT9Pi5aWXXvK4e4ArYGzbtq13795OV1k3
2RyZeUj3QIwJvN99UNtV4/XXX2/fvr0zBqn/r+ag0r38XqdOHTO/2Vnyme4D
2awlprz/89FHH5mZAx/2B0DkdO7cWT6Pbdq0cabIDuGoJBIDrRTSvexl+Vmm
c3roiy++8L7VjCw0dOhQ82e40r0J3ffff78zxWkvKiGo/X9y5cplJfWF9Li7
7G2WKVPG2ZpVrVp1yJAhHsPZGbIr261bN2eMuJw5c8piZcvssa0OakfUvKo+
Z06V/3Qf4BbbEcZ0H9TbIDHlbw2z/Hbt2rknBv7/CkFo6d5jPbdv327Wzfua
kt7pPoSdgcSkjhtmVcW4ceNCeKbu90MId0f65CfdP//881ZSkw9z1NH0BxE9
U+A+8JtqupfQaqZ07drVSqHDl/90v3PnTj/Pyxw08LmdlAVaSaOvOM1XDh48
WL58eZlYqFAh+Ww+8MADZgyWypUrHzlyxOPuAa5AYlKng/z581tJB9zkK3LR
okXyIkt4b9KkiUW6B2JX4Ok+qO3qiRMnunTpYvYJGzduLLsHss+we/dup3+T
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
whcsWECfR1srJ3jbZFPfvn2rjE0Iv6niwlq1akVoWBGe4ScqNGFl3c+YMYM+
T60f7be0ewk+WfcqvH///ooVrFmzhj5PF2DhfHsTEV67yERb9wEBAcoAkwYN
GogtNHudY8eOKU/d33//He0mOSCoewAAAAAAAAyDyG1RauKzfenSpSMcJlZd
94JKlSrR55n3Ily+aNEiJSWCg4OVS0zHbcUX4a+5ePFi5XJr0tJ0CPXChQvi
nxs3bpw0aZLIwAwZMkyKRP369fPlyye+mDx5cmho6KfPE6Bt2LAh8qMQ1xG3
mT17dhtu6rx588JvqoIyA9vgwYPv37+/b9++w4cP//PPP1E9t1bW/d69e83u
t3n79m2OHDnE5a1atbLh44rwEnyK+atgmfPnz6dJk6Z9+/YRTnS38rWLjOW6
v3nzpjL3oPgdVs5wMIv4k1EGUFieA8FhQd0DAAAAAABgJLZv3658vC9WrFhg
YKBy4evXr4cPH6667kUPKqOV+/fvb1oibffu3eLWxIXt2rUzXfPZs2fKaukt
WrRQrvnq1Stl2reo0lLccp8+fZ48eaJcKDJWuVlTri5cuNDV1bVu3brictdI
VKhQwcXFRfla3Nf69euVOxIPTTx85VDvnTt3RNsqB9nFfXE2tXfv3qYp1/bs
2aMslNa6devwT5eIVvr3QoEWsLLuw8LCqlWrJq6WNWtW0wTyIlSVNRBFk5pe
ay1egpi+CpYfsp+fn0h7seUR0t761y4yFupevF7KKnu5cuWysJtFYdq0aco2
TJo0KfzJD5cvXxZ3ocxs4LCg7gEAAAAAADAYolCUvhOIjCpcuHDixImVf9av
Xz/8Na2s+0//X0/0eSx5vXr1ihQpovR+9uzZHzx4EP6aytJv9HmdtXLlyiVM
mFB8LX5Emc/f7GLrgqRJk1apUkXcrLIUWsaMGSPMMmflmfkPHz5s166d6WaT
J0+eJ08e0z/F1yJ+VW+qcma72NTKlSubnoHIm7p8+XLTk//tt9/W+0yjRo26
dOkyc+bMCMsTWFn3gmvXrinj98VmiC2sXbu20uACcbOx8BJY/ypYICAgIG3a
tK1atYp8enyMXrsIWKj7GjVqmG7ka3Ns2rTJdOWPHz82bNhQuXLmzJnFqyY2
STxvynNiYVo/RwB1DwAAAAAAgPE4fvy4Kevo88HZvHnzipSLMNte165dxXf7
9u1rzW2KCBItb8qHRIkSDRgwIPI0cY8ePRKhZ7palixZRo8eLVJOWSfu4MGD
pmsqaVm0aFHxhQhh5foio0Re3bt3L8LN7tmzp1SpUpG3Svxsy5YtI1y4ceNG
EeDKyHGFxIkTjxgxIsJKZ9ZvqjKb+rhx4xYsWKAktoVNff78efgnKgJiS8Kv
PnDjxg3l8si3E5kHDx506tQp/BTuBQoUCF/rMX1cMXoJPsXwVTCLeOzdu3eP
auT7J6tfuwiIByiuaXYb0qZNG9VroSA2PsKPrFy5UhnvYCJnzpwi7XHsHgAA
AAAAAGAX3r175+/vf+bMmcgNrhoRfQcOHLhw4YLlpcHu379/5MiR8KPRI6Ok
ZcGCBT99PmYaHBx87tw5G26quM3Lly+LnLx+/bqFqdus2dTwhIWFXbx48ezZ
s2Y3VTwtxYsXF4E8c+ZMUe5+fn7nP7Nz5043NzflnAprTpawgPKyHjp0SFS8
has5wkugGitfO015/PixeDZOnTpl4ZwBhwJ1DwAAAAAAALALFpZj0y/K9HdV
q1Y1+91mzZqJ77Zv3z52NypKDPkSOC2oewAAAAAAAIBdMGRaKqvP586d2zRJ
nYnTp08rI+VXrFhhl22LjCFfAqcFdQ8AAAAAAACwC4ZMy8ePH2fMmFE8LhcX
l4kTJ65evXrTpk1eXl5NmjRRTsvv0aNHhNkP7IghXwKnBXUPAAAAAAAAsAvr
1q1Lly5dxYoV7b0hNuby5cvNmjULPy+cQqlSpZYtW+Y4af/JuC+Bc4K6BwAA
AAAAAACb8+bNmwMHDqxatWrt2rUnTpy4e/euvbcIGBzUPQAAAAAAAAAAoHdQ
9wAAAAAAAAAAgN5B3QMAAAAAAAAAAHoHdQ8AAAAAAAAAAOgd1D0AAAAAAAAA
AKB3UPcAAAAAAAAAAIDeQd0DAAAAAAAAAAB6B3UPAAAAAAAAAADoHdQ9AAAA
AAAAAACgd1D3AAAAAAAAAACA3kHdAwAAAAAAAAAAegd1DwAAAAAAAAAA6B3U
PQAAAAAAAAAAoHdQ9wAAAAAAAAAAgN5B3QMAAAAAAAAAAHoHdQ8AAAAAAAAA
AOgd1D0AAAAAAAAAAKB3UPcAAAAAAAAAAIDeQd0DAAAAAAAAAAB6B3UPAAAA
AAAAAADoHdQ9AAAAAAAAAACgd1D3AAAAAAAAAACA3kHdAwAAAAAAAAAAegd1
DwAAAAAAAAAA6B3UPQAAAAAAAAAAoHdQ9wAAAAAAAAAAgN5B3QPj8f79+4cP
HwYwOHfu3NKlS3/88cdJkyZN1jOTgBWcOnXqn3/+0frXsg8AADg2Wr8NAgAA
0BrUPXAcwsLCPtiCZ8+enTlzZsmShUuXqnTBgrnffls5QYKvEidOmCSJXhUb
nyBBgvggOry9vYOCgrT+9RafnAtSYye0+8/E8T//YdluDct+81hWOsay2a/q
rbeLZZt1LGvvYdloO8tqB1nW3a1e5iveciPLDqtYou4BAMAAoO6BgyDS/smT
JyKyAtls2rShatWybdsWGDRIpf365cuePWX+/FSsWJzixXVp4cJxXFzixI0b
J3lyGI0eHu7+/v5a/4aj7u1S98xc6rqMZaeVLLstVS/zgXf8hWW5kyyZvzP1
d7Isc1q9FY+zrHKYJfOBo+4BAMAAoO6Bg/Dx48c//7y2d+/ve/bsYuruPjNF
CqpXj3r2VGnXrpQzJ1WqRLVqUe3a9lRsQI0aVK1ajBUbX6AAxYtHqVPDaPTw
cPPz89P6N9xp656TqEJm3bfYxLL3QpZdlrPk9DXzMG7r9SyZmdlrEcua+1gy
C12/ou4BAMAAoO6Bg/Dy5YtGjSrWr1+8XbvinTuzrFcvt4sLbdlChw6p9MAB
WrGC3N3t7+TJ1Ls3tWwZY5s3l3sGcuSA0evjMycwMFDr33DUPeoedY+6d2RR
9wAAYABQ98BBePbsaebMVLYsNW6sJmbDK6q2UCFZ6KdOqfTkSdqzh+bPp3nz
7OzMmbLuW7WKseJ5qF+fChem/PlhNM6fj3H3Guo6nzgy6555aj3zBHXm6HXO
Wf3MPGee2M+ZMUDI3Piqh1hyxhSUP8Gy8lGWzOkOUPcAAGAAUPfAQXj+/GnO
nLKpb9ygu3dZHjlCjRpR8eJUpox6S5WiYsWoaFF7Kto8Vy5Km5ZKllSjeAbE
LcBo9fb2CAgI0Po33Gnrnnn4m1n3jbexHOTFkjnunpnYHJn7JZiVytypwhk4
L6y1V70V/suSuV+CuVcEdQ8AAAYAdQ8cBFH3omT9/en1a/GryPLqVXJ1lYVe
vry+LV2a8uWjNGlU1r1lS5SQA/Pz55f/dXK9vDCrHuoedY+6R92j7gEAQPeg
7oGDYMO6f/eO7t+nW7d0b1AQrV9PnTpRmza2t2lTSpGCUqWS5wY4ubNno+41
lLk0G7PuZ4xmydx4ps03q5d518M8WNr3eYPqRN0DAIABQN2DqHjz5s2DBw9C
QkJuxgoXLgRlz26buo81P3yg27fp77+1MjCQ1q6lHj2oSxfb26oVJUlCyZJR
ypTOrru7G+peO5lTnNl33D3zxAPmMeiB3urtvIIlc1I+5spuzH0LrTaw5Jx1
0OA3ljn/ZFntIEvUPQAAGADUPYiKM2fO9OrVK23atNlihaxZs4rOOn9eN3Uf
FiYPr5cvr+Hw/K+/pkyZ5PJ2ffvaXhH4SZNSwoSUOLGzK+oeK+Kh7lH3qHvU
vdZvgwAAALQGdQ+iYu/e1T171i5YMG6dOkliwZo1k6RJQ35+Mah7cc179+ja
NfrzTzso7vfwYcqTR07y36yZJlaoIMfFf/stde0aUf6x+9at5a6DtGkpfXo1
pkpl/2PuttLDA2fmayhzLDCz7rv/zLKvL8u2a1n2WaBe5owBzHUMmePHx0xn
2WMJy1Jn1Vt3N8sM/7BE3QMAAEDdg6hYsKDehAkJ5s+nv/6KDS9coG++iVnd
i8RevZrGj6fvvrOD4n779aN06ej4cXkKvRauW0dDh1LVqlSz5r+sUYOqV+da
rRpVrkyVKqk0Xz45n3/OnEbQ1xcr4qHuUfeoe9Q96h4AAHQP6h5Exbx5Vb//
nlaupJcvY8O7dylHjpiNu9+/nzw8aPRoGjfODo4ZI1eiT52azpyhy5c1cfdu
mjWLunennj3/Z6tWss2LF7ez2bNT3rz2n+7eJvr6eqHutZN5mjSz7pmz1nP6
Wsg8v52z5cw87zePJXPOfOa9D3dn2W6Nejnz7QvTPmRZ4jxL1D0AABgA1D2I
ClH34rPx2rWxNIz9+XOK6Zz53brJ1P3+e5o50w5On07Dh8tZ6fbto5MnY093
d6pXT/7BJkxoN+PFkxtQpIj6Q/8Opbc3ZtXT0CGexJFZ98x9CyPcWDKH7XOO
+w+Yy7L9apZNt7BkPm/Mwe/NflUv8+h5xnssi/mzRN0DAIABQN2DqIjlun/2
jDJmlOm6ejVt2GCVtWvLY9ni+seO2cEjR2jjRipUSJ6izwyQGNm+PZUuTbVq
RTNmv3FjeeJ9hgyULZvtzZJFnrSQOzcVLmwE586dHRAQoPUfFOoedY+6R92j
7gEAAGgK6h5ERSzX/dOncgr3hg3lbG9t21plwYLy6LmfXyxtYWTv3KFGjahc
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
zowdO8pF5ZYu1XYbrl+nkyflDHiRFcFSvjy5uHAnik+ZkuLEoaxZ5Zn2Tq6n
J+peQ5mFy6x7ZuS23MiSs2C9kLNjwY53LWRW6hBPlsxF52vvUW+VwyxLnGfJ
OetAiLoHAAADgLo3tqh7FT58KM+9//77KE707Rwbdf/kCf39N928acb9++WS
duPHm9m2iRNjMO6+WTMqVkyup2D2/H9F8ZtTpIjcFZA3r5HFnPmoe9Q96h51
j7oHAAADgLo3tqh7Fb55IyfGnzHDvL17U7165uv+wwe5ZMPr19r67JlcEc/f
P6J+fnTqlNyw5cvlmPpodXOT8+e3bGlphvwWLah0aSpQQI70N7Dz52O9ew0d
MJc42nfcPXMKdOa4AI7MxfiYzxuz7ofOZtnsV5Z2rPvyJ1jizHwAAACoe2OL
uldhWJhc1D4kxLyrVsmT80UdR/gpkfaBgbKsRTVr6qxZcifDpEkR/f57uRJ9
wYLUtKlVI+gbN6aqVUn81ViwQgVKnlxOjJ8tm5GdM8cjICBA6/cop6175hhq
Zt23Xs+y4nGWzELnjHxn3nW7NSyL+7Ec5sGSebpIi03qZU7ox5xVj7kzCnUP
AAAGAHVvbFH3NnffPurWjRYvjnhI/cULORHfxInUr5997NVLzmYvKFaMSpa0
jUWLyhtMn/5/c+gZUg8PzJmPukfdo+5R96h7AADQPah7Y4u6t7mHD8sB6c2a
kafnv5w+/css9LNm2cepU+VJBYKUKVWaIoUZBQkSGNwZM7DevYYyS41Z98xK
ZcYac/Q6ZyVB5k4V5oQDZU6zZI67Z05czzmrnzkkofJRllUPsUTdAwCAAUDd
G1vUvc09flxOWS8Cf/Dgf9mzJ5UpIw92z5tnH+fMIVdX2aqJEqk0Thz66quI
xo0bpeL6xhB1r6n2HXffZh1L5jDqgd4sB89RL3M6wVYbWNr3eau7m2Wj7epl
TotXNIAl84Gj7gEAwACg7o0t6t7mhobKp9TLizw8/uUPP8gT411caNQo+zhy
JA0ZIofeq7BbNznDniBXLsqTxyrFNbNkoUyZjKCPj1dQUJDW71Goe9Q96h51
j7oHAACgKah7Y4u618KTJ2nDBlq27F/OnSvnny9alEaMsKfDh6u0Xz/5JpA7
t7WryIlrZs0qdXHRvfPmeaPutbOvL3Fk1j2n1ITMJcaYjcw5tZ65Il7zzSyZ
48eZvzPMV63hDvUyF+NjPm/MxQJQ9wAAYABQ98YWda+FoaFyDr3nz//l06dy
QbrFi+027l5x5kyV/vCDfBNIlYpSp7bK5MnlKIBs2eSSeXrXy8vN399f6/co
1D3qHnWPukfdAwAA0BTUvbFF3cemISG0e7cMfHUuWCBP+LeLnp5ytv9EiSht
WkqXzipTpfpS92XK6F5vb3fUvXb2WEIcmXXPmZhOyDzVmdnInDXfmYHMfN6y
32A5wo0lZ8F6Iafuqx1kWfYUS+Y4FNQ9AAAYANS9sUXdx6bid+/9e3rzRqW3
b9OmTbRxY2y7YQMtX07t21O1alS1qpw9wBorVKACBeQAfCvP5HdkfX29g4OD
tX6Pctq6Z65Jx6z7zitYtl3Lkjn4nTNrPXPOfObzxglkYddlLJmvWjF/9Vb4
L0vmnPmlzrJ0trq/c+fOzp07V61atW3btlu3bkV7/ZCQkN27d69evXrXrl3i
61jYQgAAUAHq3tii7m2o+NW6cUMrxa/uoUNyVTtfXzPOm0c+Plo5dy7NmEHV
q8tz1EuVstZixShHDvr6ayPo7e0ZGBio9XsU6h51j7pH3aPuHYR9+/b17du3
z//j6uq6Z88eC9ffsGGDuE7462/cuDHWthYAAKwHdW9sUfc29PVrmjZNK4cM
oVq15InxrVubsWVLatqUmjTRxMaN5V3Hjx/jFfTsvk491rvXhZyJ34XMumeu
OG/fum+2Wb0TJ7Fk7pNhVmq3pSyZ691zlowvf4JlmdMssd69lVy7dk3kef/+
/Q8cOHD79u3ff/9dKf2bN2+avb74H4T47sCBA48dO3b//v3jx4+Lr8Ul586d
i+UtBwCAaEHdG1vUva18/54uXqSxY7mtEZW9e8tz3ZMkoWbNIirqW7yCZctS
uXJaWaKEfAeIvNi9kzh9+vRY+JDmtHXfdAtxZP5ldVrJsvoBlsx7b7dGvcwJ
/Zh7RertYskc9c+Us2egxn6WFY+zZO5UcZ66nzdvnniwu3fvNl2ya9cuccny
5cvNXn/p0qXiuzt27DBdsnPnTnHJ4sWLNd9WAACIIah7Y4u6t5VPn8pZ5bt3
p++/j+26r1uXEiemePEoYcIYH163UnHLdk9s1L1RRd2j7lH3qHvHISwsbMiQ
IeLBPnnyxHThs2fPXF1dBw4c+OHDh8g/MnfuXHH9w4cPmy45ffq0uMTd3T02
thgAAGIC6t7YOkPdv38vX3eR3pMna+j48VSzJg0bRnv30sGDtnfbNpozhzp1
knPXi/sKr7jTcuXkIHdhzpzWmi0bpU9v7QT4Tq6np0dAQIDW71FOW/cNfiOO
zLrnBLKQeaozMzP7+6i38TaWzCEJzOeNOe6eM1+BkLNfgvnAmTL/1pyk7v/5
5x/xSEeMGBHh8pEjR4rL7927F/lHlCP7kydPfvXqlfjnmzdvpk+fLi7ZvHlz
bGwxAADEBNS9sXWGug8Npa1b5S9wwoTamjy5zPw3b7R6IA8eyBdr/Xpatepf
/vwz9e1LNWrIOe2rV7fW0qUpXz45pz2MVsyZr6m9FhFHZt0zj0Eza4s5er3P
AvX2XMzStPC9Oplr0jHH3TMXhuNMi/ftEZbMYfuVjrF0krq/fv26kuoRLheX
iMuvXr0a+Ufevn3r5eUlvjt8+PDZs2cr+wHEF0rsAwCAQ4G6N7bOUPcvXsgp
5UX8fvedJufMK44ZI5N51Cg6coROnNDE/ftp/nzq1k3Oode2LbVr98VWrahi
xZgt8ZY7tzx2nyULFS0Ko9fHB3Pmo+5R96h71L1T1P2lS5fEI502bVqEy2fM
mCEuv3jxYuQfefPmzZo1a/r8m9WrV7979y5WNhkAAGIA6t7YOkPdP3kiT1+f
PFkOjQ8N1UrxTIq0d3Uld3eaPVsrf/yRMmakOHEoaVJKlky9yjj95Mk1nIjP
SHp5ufn7+2v9HuW0dc88x5tZ95yT24XMSu3+M0s7DpxnPm/MU8Tr72TJPDOf
sz+HOV0/c+dAyXMsnarup0+fHuFy5WT7y5cvR/4RX19f8a3//Oc/f/zxx6tX
r8R/f/zxR3GJuDxWNhkAAGIA6t7YGqbu//qLtm8nDw/y9Izo1KnUoAH99JNc
sU68+hr55g35+dGAATR6tDyOr5H9+1OqVPKwe86clCuXepVx95kyfRmtDy07
b55XUFCQ1u9RTlv3fX2JI7Puh3iyZE6Sxqx7zowBzJ0qzLpnLvveYhNLZt1z
diww676YP0vmoX8nqfsbN26IR/rDDz9EuFzEu7j8r7/+inD5gwcPXF1d+/Xr
d//+fdOFjx49GjRokLj+3bt3Nd9iAACICah7Y2uYug8MJF9fGddDhkS0b1/5
AKdM0XBEvDAsjB4/lmk/dmyMFdk+YgQNHx69ffpQ6tQyz/Plo/z5WYrAz5qV
MmeG0evjg7pH3aPuUfeoe53V/bZt25ZWq2ZBs4/o+fPn4vIhQ4aEhYWFv3zw
4MHicvHdCNe/cOGC2b0Bs2bNEpefPXvWtg8KAACYoO6NrWHqfto0GjRIflaf
MSOiP/xAdepoXvefPk/Of/WqGgMDRT/KEw+iVTyKypXlGfVJk3JNnFjzaQYN
o/iQ5ufnp/V7lNPW/YC5xJFZ98PdWTLPzGeuiMeZr4C5Y6H3QpbMB95jCUvm
dAecoevM3RpFA1jmvspSj3UvPsVacFz79mZ/cOzYsREO04uvxSXjxo2LfOVb
t26Z3RswadIkcfmlS5ds+6AAAIAJ6t7YGqbuBw6U082Jlp8/P6Iiihs31vzM
fNW+f08PH9KCBXLqv2gVj6VhQ9mb8eLFtl99Jcf7x43rjM6YMeP8+fNav0c5
bd0zU4tZ967zWTJn1WNObTfQW72dV7DsN49l2VMsmTMxcpa0EzbZql5m3TN1
wmP36up+w4YN4sF6e3srq9uL/ypT4m/atEm5wqtXr65du3bjxg3lu8OGDRPf
3bFjh+kWzpw5Iy4ZOHBgaGio5o8TAABiAure2Bqm7ocMkee379tHf/8d0QsX
ZPtPnEiXLtGffzqchw7R3LlUpIhVZ+YPGCCnx3dxkfPeM8/Mj5Hi7rJlk28C
adJQ2rROp7s7jt2j7lH3qHvUvbPU/fPnz0eMGKHMnC+KfurUqeLr0aNHm07L
DwwMFJcMHTpU+efp06eVefI9PDy2bNmycOFCV1dX8c9Dhw7F0kMFAACrQd0b
23v3aMsWKlPGTBTryz595IJ3586ZeYxPn8qp5kX+794tF5VzNBctknPliWq2
ZoS+CPxGjeTemDp1qF49a61Vi6pUoQoV1FuuHBUsSPHjy0X0smZ1Oj093TFn
vnYyM5NZ98wT1KsdZMmcuJ7T18wHzlmMT1jqLEvmXA12HHfP3K3BXNKu3EmW
zlP3gocPH06fPl2JdCXzb9++bfquUvfDhg0zXSL+HzFu3DjTcnijR48Wya/t
wwMAAFWg7o3t48fy2H3SpHI5eF2bN68cd2+27t+8kcf0ixShqlXlkvSOZunS
cts6d5bn50fr/fvycP/OnTFz0SIaOZJatKCWLVUqfrZhwy+z+Tmhvr7emFUP
dY+6R92j7rV+G7QtnLpXePnyZUhIyOPHj628x2fPnonrP336lL3tAACgFah7
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
6h6a1Xh1/+IFnThBM2fawHLl5Lh7K+teGBZm1Qh9sz55Qv7+8s+zaVPzI9xF
ROfJI8f1N29uXqW1GzXiWq2a/K0oVMhaCxa0NOeeQ+nr6x0cHKz1e5TT1n23
pcSRWffMTqy9hyVzRbzeC9U7eA7LLstZJnnF8j8/sOQMnBdyZtVj5nmPJSyZ
z5se6/5pSrIg6h4A4ISg7qFZjVf34nejb18aNYobC8KSJWns2BjUPdMHD+Tw
+e+/N78x/fpRqVKULJnKhe2sVPw+KPsQrK97Henj44lj96h71D3qHnWv9dug
bRF1/yQVWRB1DwBwQlD30KzGq/tDh2QCi8AfP15OQ8dRPDmxWffv38tf7F27
5CsS2SVL5Lx5CRLIc+C1M1MmSppUWrSoAZ0zxw3r3Wsnc9Z6Zt0zp45nDttn
zjxf7aB6maeID5jLMu8fLDm7NYRVD7H8D4Ni/sSROek987ddj3X/KA1ZcEwn
1D0AwOlA3UOzGq/ujxyRK9SvW0f79tH+/Szr1pWNH2t1L36lHz6kq1fpyhUz
+vnR6tU0ebIcem9yzBg58Z2VY+Qt2LQp1awpZ8bLkIHSpJFr3GfPbkC9vDww
q5522ndFPGZfM9e7b7KVJecgcuNtLPv7sMxymyWzUjl7RYScui95jjgyJ2pg
TqWox7p/mJYsiLoHADghqHtoVuPV/fHjVKyYPMs9LIx7UzGaM98uBgfL2fKn
TeM6ZYpc/C55cjlvf6ZM8r+i8Y0n5sxH3aPuUfeoez3W/YN0ZEHUPQDACUHd
Q7Oi7i0Ya3UfGkoXLsjKnjMnZg4ZQgMG0MiR8iA+x9GjqVs3OaJBmDIlpUjx
5WuD6e6OM/M1tM8C4sis+3ZrWA7xZMkc9V9jv3o5ewaEQ2ezTPOIJXM0B+d5
E3LqvtxJ4sjcreGEdf9PBrLgaNQ9AMD5QN3r0ffv6e1bevNGQ4sXpx07Yq/u
RXG/fi2ntdfOvXvlCGub1H3nznLOfNHdqmfCt9KbN2n5cnlifLFiMVOUeMmS
1L079erFsmdPeX5+8uRyXH+iRJZMmFDHzpo1y8/PT+v3KNQ96h51j7pH3dsQ
Uff3MpIFUfcAACcEda9HAwPlgfW1azU0V65Yrfvnz8nTU3y0oP79tbJlS7lG
m03qXjRvuXJyKbqGDbW1dm2qXJlq1KCNG2Om6Po6deSPi/8yFQ+zePHoJ6bL
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
eYKDg7PeMyIiQlJ7X1/fly9fGny2s2fPHpeNVJFPRLyiwWdIT1a7l2bTZ6wc
KCJkf/irhoDi71LN//nz50s3sd0bF7Z7xlzcuwfffQclS+IFcdNTuTK+dPHi
sHJlrggLAzc31Px+/XRF375Yt79qVShbVhWCgvx43r16UFzpVUh2Tyx6Txzq
PMqbBGV4eesdJIgnBxoeJkHcasTJ75Sdte5xoNBkPwnikaZFu589DmSwYbtX
KGz3+iCTpGfd0Hv27JFuevToUfrCu3fvHvr/SBXncm/3QuqfP3+e6Z6PHz8W
Xi+9UKYm8tLziyxYsCA5OTm7HVJqUZfLnDp1Smbfzmr3QUFBwzN065Oya9eu
4a9m2Z89e1Z6WrHkyKtIE/Dt7e3F301wqSg3YbtXCbZ7ffDiBZw5A4cOwdGj
ZuDwYXT2H36AYcMMMHgwDBz4L4TX9+wJnTpBx466okMHaNYM3n0XPvhAFbhm
vqqMmw0UiHY/YAmJ0XNJEK9BUwyXct1fYOtPgjjvfuj/SNQ7RoIiyJXOAYVW
O0kQz8lo0e5njQcZ2O6VCtu9bjC4TdMTHx8vqevx48cN7glXr17Nvd2LZ7Oy
shJ3fvbsWaY7p6WljRkzRtx///796UukeQEia9askamJ99er+gChspGeXGT2
7Nl//vmnzFNltfsVK1ZI65DxbtKohkWLFkkT8LOLq6urzGuZLHqy+8aNsSF4
cjKkpJifGzfwUiPbvcWSlgaJifD8OYk//sDeAVZWOH4gE0LhW7WC5s0tAqH2
9evjd1TBgqogvvyjoqLU/h5ju2e7Z7tnu2e7VzDC7t0ngAxs90qF7V43GNym
GePm5iZuGjly5KVLl7LeGhsbm3u7T01NdXJyynodXLrJ0dFR3JR+sVso+fBX
ZfTSfd/oxMfHi/UXzybeS2Jiovyds9q95O+TJ0/OeLdJkyaJhXv37r1y5crK
f0e61m9jYyP+vmPHDuLKKxLd2P2RI3itfP9+vNIaE2N+du3CYdVs91ohORme
PUObVorff8dp+1OnwpQpxjN5MowZA717Q9eu/6JLF2jfHufjf/yxpfDhh1Cg
ALz2mirMmjVLfuCWIrFYu5cvap0jRLsn1n4ndsTrE0aiwRHjIdaNtw4kQezs
1mwvCTPWzK98FigQR+Z/t5GEFu3ebSLIYGPNdq9M2O51g8FtmjE3btyQhFcI
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
qWrVij1Vq5qh2J5+2rzhPZ6TJ9Xo0ebTA4/nxRfNfvasWc3uezfSqJEqWdIU
efukSmXG2E+SxPdXtZNk3Lhxe/bs8dRKNSYJtt2H9lKSCNv9iudE+aqxKMLr
o0k+GRg5TBThxQLuJhdF2FKFFVvS7oUjBnzYVpR3u4hCuweAIBAo7b5ECdWj
h7n299ChgZqOHc1nFG60+08+Ma995UpzDAPxUnbuVLlymf3aGTLEnvTpzZQN
Gqh79zyfmzfN5zm9ezsb+869tGpl2n2ePObt5EaefdbcPVGiIMzYsWN3797t
qZVqTGj3tHvaPe2edg8A8KqAaPe68qxebY5VHj7c/Bug6drVzXb/xRfmEmlN
m5rRzomX0qKF2Sn/7rvmBIpY8/nn6rnnzFjx69d7PuvWqQ8/NIflz5rl4Uyd
aq6u2Lq1uQSDG2nWzByKnzGjORQ/yDJzJufdezGT+ilJfHtk/teNRBEeIr6m
ofsRnoItrJmS0f51hD814Wcykna/60klifC8e+FZMLR7AAgCAdHudR0+fdqc
ODxzZgCnb19VpIg77X7DBrPnVHfPJk2It6J7a926assW9ddfseeXX8y+9eLF
1ezZAZZhw0xPf/55d9KokTnvPkcOc5BDkGXOHMbM92KE+2GF7V54RTzhrn9h
u99W2f0IxwMUngB+qLgoq1qJIqzYkna/qYaSZOZrojCqHgAgINq9zoMHro54
5rf55hs3R9W7ft1cy+zzz81OfOKlDBxoTkjv1k2NHRt7Ro5UL7xgqq57w9P5
MHqen3hClS7tTkqWNEfmFypkDkEJssydG3rw4EFPrVRjQrun3dPuafe0ewCA
VwVKuw+CuH1FvPv31cWLaseOaPLjj+bC65s2qY0bAyDffafWrjUfU3z5pd9l
yBCVKZM5Pr9nz9jTvbs5TL1cOXMwBgmCcL17r0bYE4XtXngKtnDM/O+eFmX7
U+5HuNyWvSjKyTyiCK9jKBzuQNLuN9ZUknzQQRThlQ5o9wAQBGj3/t/u9fTh
4erOnWhy9aqpzD7f8e1iliwx530//bRq08bv0rSp2TFdsqSrO7L1j7JwYbMj
mwRB5s6l3Xsxwv2Jwpa6p6wo7wwXZXN1USS7cYUDrK1uJsqpXKIIr4i3vq4o
XzZxP8KjNYS/LIPHiEK7B4AgQLuPt2zZYq6Id/q0OdLeI8O868c5c8aMwLZ0
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
awajmzDBWxk3Tr30khnyrn59z0c/bMGC5qAI4o3MmcP17mn3tHvaPe2edg8A
AY9277JG4eHp7t5Nd+sWiSXDhydy5bx761j3v/82/3o7Bw6oBQtU585mBHjv
RT9+27Zm4DvnadXKjCrfuLFq0sTV6IlLlzaHuxNvZN680EOHDnl7DZJg2/2c
7koSYbsX9kThheGEB6hLTl3v/J4owiPzhYu9zzRR3ussiuQCjhtriiI87/5s
dlFo9wAQBGj3Ltv38OGmiIhN4eEklowalc2Vdn/5shlnvn9/86+3o0u37sij
R6spU7yYyZPVpEmx7+UfPlx16qQeeyxuB+fnz+/7I9iDNXPn0u69GOHec2G7
l1zdTEc48xP7iyL5VGTCAFEWdxRFUpB1hDMvuWC9zkfPux/hU/+VWRTJeIA6
tHsACAK0e3jc6NF5XGn3x4+bXdgtW5rq7e1UqqTKljVH5k+f7vuMHm0uM5c9
uypf3sN58klVqpQqVOh/KVjQnK3/2GPEWWbP5sh82j3tnnZPu6fdA0DAo93D
41xs97Nnq27dVGioty4Qb58uXczp1dWqqTp1fJ+KFc2nDa+/rtas8XC+/NJc
i/DZZ8016azUr68yZTIj8iVJQmLM2LFjd+/e7e3fiwTb7oWXJ/PtmPljBosi
HHNA8rmEcLH3ni7KyTyiCGdeONyB5Lx7YXaWF0X47LR7AAgCtHt43KhReUaM
UOvXqytXnEVP89pravlyM6W3M2SIqfa1a6tnnvF9dLWvUMG0+3XrPJy1a9Wo
UeYieu3amevo6bRubQ4S8OCl4YPygwLavVcjvPS5sN2PeFuU3eVEEV4Rb/QQ
9yMcMeDdLqL8t5Io7ZaKIryOoeSogx0VfJn9pUWh3QNAEKDdw+NGjMjTvbsa
PFhNneosjRurN99UR4548Sp1tvzxh9q9W339ted3l7uR0FD1/PMqSxbVrJmH
oxdprlzmo4zx49XEiSYjRqhatcw5+55K3ry+v+SixxMaOiMsLMzbvxe0e9o9
7Z52T7sHAHgV7R4e9/77eXRt79cvlq3u2rXNkHonTsTHFfHu3FF//qkOHfKL
rFunRo40p8l36ODhtG2rMmY0F+br3Vv17WvSo4d66ilTyR9/3PwrT+7cKiTE
Y4/mJ5k9m3bvxQjruW/b/aihogwaK8rM19zPnUdEeWe4KG0/FEX44cCnLUR5
RyCspJJkS1VRPmwrCu0eAIIA7R4ed/16noULzSXvnW9116kTf+0+IsLkwQO/
yL176tw59c036ttvPZzVq1WBAqbgZ8nyvx3T+sv06T2TdOlUmjTm4PwyZcwI
fkGTmTMn79+/39u/Fwm23QsbrrDdDxktSt+ponR5V5SXFrqf7U+J0m+SKM+s
FUV4RbxvGogiafd/hihJdj0pCqPqAQBo9/C4+/efW7u2xvvvx5LWrZO8/LLa
tUtdvOinOX1a7dun9u9XBw54ONu2qaVL1ZIlHs6CBWbM/GzZVI4cKmdOryRr
VlPwS5c21yAImsyaNfXAgQPe/r2g3dPuafe0e9o9AMCraPfwgmt37169cyeW
jB2brmpVcxL611/7aebNUw0bqiZNzJX7PJtnn/X8SfdWatdWNWqo6tW9lSpV
zNn39hfdC4JwvXuvZuQwJYmw3UsuKqcjHLxd+NlC46/cz/F8orw9QpT3O4ki
+VhD54umokjavfDIfOFnMj8XFIV2DwBBgHYPX1myJJ1ui2+/rbuVn2bwYLNj
t1w5cw27QEn58maGvZcnnjAD9wVZuN497Z52T7un3dPuASAI0O7hKxcupGvW
zFwhznZxdn9LmTIqeXJzGTj9LwniTJ7MefdejOSi7TrCdt9mpShfNRZlem9R
XljufoQnBQiHxRMO3l7omCi9p4syfqD7eXmBKMJ2/30tUWj3ABAEaPfwlb//
HvfRR+8sW/bO8uV+mrlzHxk40Az9N2AACeZs3vzV2bNnvf2GfwUA/Ju3V4MA
AG+j3QMxefAg3YUL6uxZEuS5efPYgwcPfP12AwAAAERo90BMIiLG3bgx/O+/
SZDn/v1LERERvn67AQAAACK0ewAAAAAAAh3tHgAAAACAQEe7BwAAAAAg0NHu
AQAAAAAIdLR7AAAAAAACHe0eAAAAAIBAR7sHAAAAACDQ0e4BAAAAAAh0tHsA
AAAAAAId7R4AAAAAgEBHuwcAAAAAINDR7gEAAAAACHS0ewAAAAAAAh3tHgAA
AACAQEe7BwAAAAAg0NHuAQAAAAAIdLR7AAAAAAACHe0eAAAAAIBAR7sHAAAA
ACDQ0e4BAAAAAAh0tHsAAAAAAAId7R4AAAAAgEBHuwcAAAAAINDR7gEAAAAA
CHS0ewAAAAAAAh3tHgAAAACAQEe7BwAAAAAg0NHuAQAAAAAIdLR7AAAAAAAC
He0eAAAAAIBAR7sHAJ+IiIjYsGFDr169GjVqVL16df2fxYsXX7x4MX6e/dy5
c6Ghoa+88kq1atWef/75iRMn/vDDD/Hz1AAAAPAG2j0AxL8jR46ULFlSRZEr
V65du3Z5+9m/+OKLzJkzR332/v37R0REePvZAQAA4A20ewCIZ1u3bk2bNq1e
6xYoUGDu3LlHjx796aefxo0bV7x4cX1jihQpTp486b1nv3v3rvXsderUWbRo
0W+//bZ///63335bP6++ceTIkd57agAAAHgP7R4A4tPVq1dz5cqlV7mNGjW6
ceOG/bfOnTuXJk0a/a3hw4d7bwbWr1+vnyIkJOTWrVv2t8+aNUvfXqxYMe89
NQAAALyHdg8A8alXr17WXvvbt29H/e7IkSP1dytUqOC9GVi2bJl+ipIlSzrc
/ueff+bLl08/9d27d7337AAAAPAS2j0AxJtbt26lS5dOr28///zzaCd48OBB
tK3fg86ePWut89u2bXvp0iWvPhcAAADiDe0eAOLNypUr9co2Q4YM9+7d8+Fs
hIaGJkqUSM9JmjRp+vTp49XT/AEAABA/aPcAEG9GjBihV7bNmze33XL58uXh
Uezbt8/bc/Lxxx/nzZvXWvknTZq0Y8eOp06d8vaTAgAAwHto9wAQb7p27apX
tj179rTdsmbNmqhXpvvuu+/iYWYePHiwfPnyUqVKWU+aI0eOX3/9NR6eFwAA
AN5AuweAeNO+fXu9sn399ddttxw/fnzZP6wh9RIlSnTt2jXvzUN4eLj9lxER
EatWrQoJCbGukee95wUAAIBX0e4BIN4MHz7cuhZetN+1RrMvUqSIl579+PHj
GTNmzJ49e9RvLVmyRD91ypQpfTsgAAAAANxGuweAeLN69WqrREc7kF3v3r31
dzt06OClZ799+3aSJEn0U0Q9An/Tpk369qxZszrs2QcAAECgoN0DQLzR3blE
iRJ6fVulShX7UeyuXr06efLkzJkz62+FhoZ6bwasZ69YseL58+dtN545c6Z0
6dL69u7du3vvqQEAAOBVtHsAiE///e9/s2bNqle5qVOnrl27dtu2batWrar/
b62H8+XLd/ToUa8+e/Lkya1nr1SpUrt27erXr//II4/oW0qWLHnixAnvPTUA
AAC8inYPAPHswoULLVu2zJAhg231q///9NNPr1q16sGDB95+9i1btjRs2NC6
3r0lT548PXr0uHXrlrefGgAAAN5DuwcAXzlz5syuXbvsD5KPN7dv3/7555/1
s1+5ciX+nx0AAAAeR7sHAAAAACDQ0e4BAAAAAAh0tHsAAAAAAAId7R4AAAAA
gEBHuwcAAAAAINDR7gEAAAAACHS0ewAAAAAAAh3tHgAAAACAQEe7BwAAAAAg
0NHuAQAAAAAIdLR7AAAAAAACHe0eAAAAAIBAR7sHAAAAACDQ0e4BAAAAAAh0
tHsAAAAAAAId7R4AAAAAgEBHuwcAAAAAINDR7gEAAAAACHS0ewAAAAAAAh3t
HgAAAACAQEe7BwAAAAAg0NHuAQAAAAAIdLR7AAAAAAACHe0eAODEb7/99vHH
H1+/ft3XM+KP9MJZsmTJF1984d59WbC+de/eva+//nr37t2+nhEAADyDdg8A
Qe+eCx48eBD1jsePH0+cOLH+A/HEE0/E/2z7v7lz5+qFU7Ro0bjekQXrDzp2
7Ght/3z++ee+nhcAADyAdg8Awe23335TLhg4cGDU+3755ZfWd5MmTXrjxo34
n3n3hIeHr1u3Tv/r7Sdyu927uGAvXry4a9euU6dOyWYT0Stbtqz1Uxg0aJCT
ycLCwvRPwYNvp0OHDv3++++eejQAAGxo9wAQ3E6ePJn+32yrffsbJ06cGPW+
d+/ebdmyZf78+SdMmBD/c+62ZcuWFSxYMNqjETzL7Xbv4oKdPXu2fvw33nhD
MI+I0erVq0uUKFGjRo3ffvvNyWQhISH6p+DBcyimTp1auXJlTz0aAAA2tHsA
SGgeffRRvc7/6KOPfD0jXnHv3r18+fK9//778fBcbrd7Fw0fPpx271vh4eHW
ORQebPc3btzIlCmTe8M1AADgBO0eABIaj7d73VYOHjxo/+XevXvv3LkT0/TX
rl3btWvX+fPnPTUD9mbNmpUzZ8779+/HNMGDBw9OnDixY8eOU6dORUREuPKY
erIzZ87ouxw5csT+kACHdn/79u09e/b89ddfwpdg07NnTzfafUxza+PGEtBu
3rypf8r6B+fBF+gN+o23e/duT7279Iu1tpFcafd6Yern1Yvo+PHjzhfsiBEj
ihcvHg8njwAAEhTaPQAkNM7bfbZs2dJG8cILLzhMdujQoXTp0nXs2HHw4MEp
UqTQD5g/f/6LFy8OGTIkVapU+svs2bMfPnzY4V6rVq0qXLhwokSJrL87ISEh
48aN8+Ah9Ddu3MiaNeuoUaOi/e7OnTs7dOiQMWNG2x++NGnSjBkzJupHAbpW
61e9du1a/f+lS5cWKlTIdpdcuXLZJrPafalSpfQrffrpp5MnT25Nkzdv3q+/
/trhMV1csFqJEiXy5MmTJUsW6wH1vw732rRpkxtzG6cloIt/+vTpq1evrv9/
7ty5du3aJUuWzLpL4sSJFy5caE1WpUoV/dTRLvDbt2/rZ9ff3bhxY7Q/DifW
rVun75gpU6ao38qQIYP+1ubNm223FCtWTN9y8+bNrVu31q1bN2XKlNZ86uXw
448/2t93xowZUX8E2oEDBxyeZf78+QUKFMiZM6ftTBb9W2N/l/r169tPf+vW
rX79+tkv2NSpU9esWTPq28By6dIlveQXL14c1yUDAIATtHsASGji1O6tPxDN
mjVzmGz37t36dqvX65pvTaZ7rnU6v/Vlq1at7O/y4osvWrfr3vTss89WqlTJ
Oua5QYMGnnpp06ZN0yX0woULUb9lHeVua9/VqlXLnDmz9WWvXr0cJm7fvr2+
XTdl/YDWNIkSJcqdO7dujvZnTFvt3rYcsmfPrpdA0qRJremXLFli/5guLlhN
l0T7aWJt9y7ObZyWwPHjx1XkJza62hcpUsSaTP+g9avQ/1m/fr012axZs/SX
WbJk0V3e4RGWLVumv5UnTx439lCvWbNG31f/KKN+K0mSJPpb3333ne2WrFmz
6lveeecdvaD0O6p48eKPP/64NcMZMmS4du2abUqHdm/9Imj79u1zeJbZs2db
09g+sXHe7lu2bGlNphe4/nHUq1fPWlDa+PHjo32Nffv21b8IcV0yAAA4QbsH
gIQmTkfm6w7ipN1rutfcu3fvvffes77U0+s2N3jwYP3/xx57zDb9vHnz9C26
mi1YsMB20PLWrVutjwJ0M/XIS6tSpYouVtF+a+PGjfq5RowYYTuw/M6dO127
dlWRA9c7jKtm9eXSpUvrfwsXLqzn+ezZsw8jR8M7ceKEbTJbu9ev1LaH+uTJ
k8WKFVOR+8319DHNakwL1l6TJk2UC0fmuzi3cVoCVrtPkSKFdaxFjx49Nm/e
bB1loR/TdtrFrVu3rEHnFi1a5DBXNWvW1LePHj3a+cxHy412rz311FPHjh2z
btRvb+vGWbNmxfQsuvjH1O5t9uzZY03j5Mj8P/74w5pm2bJlthv1b8Hy5cub
Nm0a0zURduzYoe8S9bABAADcRrsHgITGg+0+ceLE1o7y06dP6y9z5Mhh9T5d
vqydztbEt2/fTp06tb5lzJgxDo8zefJkfbtugtJX9fChnhM9P7pxxzRB1K59
8+ZNaxf5ihUr7G+3+rJWvnz5y5cvx/SAVrvPli3bxYsX7W/fsmWLdXcnI6d5
vN3HOrcP47IErHZvcf7Zy8iRI/U0JUqUsL/x559/tur5uXPnnM98tNxo940b
N3Z4dbrsq+gOS7DxVLs/ePCgNc2nn34aywuzExERoX9f9NJz/S4AADhHuweA
hMaD7d7W33VJ1F+WLFnS+lLXJWuPsPXlzp07rS+jdk9rSl3Q3H89/9i4caN+
KF1LY53y2LFjq1evHjduXLdu3axuO3bsWPsJrL6sF5Tza6U5GTM/Z86c+ltT
pkyJ6b4eb/exzq29WJeArd07accW6xRyZXe4vjZgwAAV5dQM17nR7leuXOkw
pXVYQosWLWJ6Fk+1e61SpUoq8tAU/ZJXrVp169YtJxPb6Ilbt27typQAALiC
dg8ACU38t/sFCxZYf2iSR2H7GyQfW+/DDz/U9crJaPknTpzo3r179uzZVRTD
hw+3n9Lqy507d3b+jE7avVX3Xn/99Zju6/F2H+vcPozLErC1+99//z3Wh7Ve
yzPPPGN9ee/evSxZsuhbNmzYEOt9o+WRdm/NVdOmTWN6Fg+2e/1QHTp0sMaR
UJFD6jVv3nzFihXO39X67VGlShUnEwAAECe0ewBIaOK/3Vsn3WuvxKBHjx7y
1zV9+nQnxwBs3LgxU6ZMKvI4gW7duq1evfrQoUN6tq3Tw6Nt9127dnX+jE7a
fYkSJfS3hg4dGtN9Pd7uY53bOC0BW7s/ffq084d9GHlehm7iiRIlOnLkiP7y
008/VZFD1rt+uT0HHmz3TpawB9u9RS+0SZMmVatWzZpJFTks4ZYtW2KaftSo
UcWLF4/1YQEAcBHtHgASmvhv91u3brX+0Jw5c8ZDLyIaixcvTpkyZUzfzZs3
r56B1q1b61m1v90b7f7u3bvWZQE//PDDmO7rSrtv0aKFnibWjz5cnNs4LYE4
tXutU6dOtllt2rSpcnpWQqy++eYb69ltw/fZxHO7DwsLs6b5888/XZ//y5cv
h4aGWjOWLl06hwVu079//4oVK7r+sAAAOEe7B4CEJv7b/d9//21dLT3Wk7gl
1q1bp5/C/gpoNtagf5rDmekPHjwoW7asx9v9nDlzrKc7fPhwTPd1pd3rxaVc
uGKgK3Mb1yUQ13avX2miRInSpEnzyy+/6J91ihQpLl265Modo3XgwAHr2R2G
lF+0aJF1e7y1+4sXL1rT/Pjjj05mONqB8fVdrPtu37492nt17NixefPmTh4W
AIA4od0DQEIT/+1eGzdunPW3ZuTIkfY7ZI8ePaqfwsVRyJw7ceKEfnzblens
/fXXX9azL1682Hbj/v37y5UrZ90uafe61b788su2AQPXr19vXebP+YBprrT7
+fPnq8gLE2zdutV247179xz2Bbsyt3FdAnFt9w//2WVfuHBh/a+eJRfvFS3d
u/WbR0WOiWeNhK9f8qhRo2xbLPHW7rUcOXKoyPP37d+3V65csf1/3rx56dKl
0+9wh7fx0KFDrcc/f/58tI+sF/6AAQOcPDUAAHFCuweAhMYn7T48PLxRo0bW
n5vs2bM3btz4+eefL1u2rDUQ2YwZMzzxyh4WLVq0f//+0X7r6aeftpp4zZo1
X3jhBesy7o888kihQoWE7d46Vjx16tRVq1bVS0A/rIo8t935eHSutHvdFq3q
qp+iVq1abdu2rVu3rv7xOVxGzcW5jdMScKPdb9++3bZFsW3bNhfvFZMuXbpY
D5UtW7aKFSvq+VSRhzFYRxrEZ7ufMmWKNVmePHlaRipRokSqVKlsZb9Tp07W
Dz1NmjTly5fv0KFD9+7dq1SpYt3rpZdeivZhz507p++1adMmV5cIAACxod0D
QEKTLl06vc7/5JNPXJnYurSZbjQOt1v93aHd6+Zl/137dm9ZunSpdfa3Tb58
+XS198i++4eRJzLHNJjbn3/+2bx5c9vz6o787LPP/vzzz9OmTYvabTt27Khv
fPXVV50/nXUtgEGDBs2fPz8kJMR65MSJEzdq1Cim3bU2MS1YB0eOHLHtXrdk
zJhx1KhRbsxtnJaAdSCEk/3O0bIuMW/7kEfi0qVLevZsc5sjRw69xO7fv9+q
VSv17yM0rH3rMbV7J0vY1u4PHjzoZE7Cw8PHjRtnfbxg0a1c/1BOnjxpm2b/
/v1t2rSx5sQme/bsY8aMiWnYfP2eyZAhg5NLPAAAEFe0ewBAPLt8+fKePXt2
7NgR7TnyErpwJU+e/Ouvv45pgnPnzm3evFl3MV3ZPPvUERERP/300+7du//+
+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
zBnwlHtOefa5pk2bppdYmTJlPPuwbqDdB6WzZ8/a/2TTpk1boUKFjh07rlmz
xtezRrsHEJA2b96s113JkiW7efOmw7deeOEF/a2uXbvG28zoTfRdu3Y52aZt
0qSJniW9vr1796797b1797b+Lpw7d877swnAx/bu3Vu1atUUKVLYtglz5cq1
YMECX8+XB1jrZK1t27a+nhcP+/LLL62XljRp0hs3bsgf8OLFi/pPxqlTp3w1
A75SoEABFbNt27Z58Llo9/AqW7vXm3bZs2dPlCiR7afcrl27S5cu+XDeaPcA
ApFtSzLqkYpWu3/xxRfjbWZCQkKinRMbq91rX331le3GiIiIxx57jHYPJBDT
p09Pnjy59SuvVxolS5bUZc36cuDAgb6eO6mePXtar+XRRx+9ffu2r2fHk+7e
vduyZcv8+fNPmDDBIw84e/ZsvaDeeOMNX82Ar5QtWzb9P2xVyHaL/rPuweei
3cOrbO3+0KFD+ssbN27s2rWrTZs21o21atXy4bzR7gEEIv9p9+Hh4dYxk660
+w4dOthu3L59u+0vPu0eCG7r16+3ftmLFi26f/9+68Zbt24NGzYsVapUW7du
9e3sCT148CBr1qyJEiUqVqyYfo2fffaZr+fIrw0fPjxO7T4oPfroo3ohfPTR
R156fNo9vMqh3dtMnTrVuv3zzz+P9o7Xrl3btWvX+fPnXXyiEydOHDx40OHI
Twf37t3bt2+fniXrywwZMrjS7m/evKkfWc/MX3/95eTZ9SPH+oGtngG9HA4f
PhynU2xinQH9l0XPwI4dO06dOhUREeHkoW7cuKEfyv7LvXv33rlzx/WZAeBz
brd719erV65cCQsL06s150dC6pVSTHNiY7X7jBkz2h+crzftrGO6Ymr3rq/W
LHoyPcPRjkUAwIfCw8NLlSqlf9NLliypV0EO3431GE7963/mzBm9Kjhy5Ihe
LUQ7jV5N7dmzR0/mmTm2ozeQ9CP/+eefTqb5/vvv9asrW7bs5MmT9X+ef/55
JxPfunXr6NGju3fvjnWMOP3C9bpar7GPHz/uyjrQxQ1Ri57swIEDv/zyiyuP
7ArX19jWcQ7eaPdxfRvoH67+QTj/g+j6zytO4tTuXZnPh5GFS78BrH4xY8YM
5+0+riXLbbT7oBRTu9e/+3o9r28vXbq0w11WrVpVuHBh2zH8ISEh48aNc1il
L1myJG3atEOHDtXbigMGDMifP781cdKkSfv27Ru141+4cKFFixa2s70ef/zx
jz/+OFu2bFHbvV4vpU+fvnr16vr/epuzXbt2yZIls+6VOHHihQsX2k+sf9n1
asraQLWevVKlSvr3JepyuHjxYrdu3WwPpadMa6d9+/buzcDOnTs7dOigN5tt
vztp0qQZM2aM/SauXvJ6Djt27Dh48GBrCejFpednyJAhqVKl0l9mz5798OHD
0f/8APgfN9q9K+tV7e+//545c2a5cuVsU+r/6NWa/aeC2vz58wsUKJAzZ07b
EYZ6W8V+nVa/fn3bxFa7b968ubI7OD9Pnjy5c+fW2x5R270rqzWtYMGC+ol0
NRg1apR+KGtKvYrTm9ZRGwQAX/nkk0+sX8/Vq1e7Mr3erNK/2mvXrtX/X7p0
aaFChWyrgly5cjlM/N1335UqVco6gkjLnDmz3rZx2Gexbt06/YCZMmWK+lwZ
MmTQ37I/KPrdd9/VtwwaNCgsLKx27dqPPPKI9ch6lfXll19GO8OvvvqqnkA/
r96UstZXuhJGnWzjxo3VqlWzvRa9atXbov3799cbqA5T6rv369fPfh2YOnXq
mjVrRjsEuusbog8jt70XL15cpEgR2xLT63C9ctbF3H4yvXmcNgr9xyXax3Rx
jV2iRAm9DLNkyWKdoKH/dXj8TZs2uTcDD117G2jFihXTj3Pz5s2tW7fWrVs3
ZcqU1vT6Pfbjjz86TOz6z8sNztt9nOZT+/DDDx3+COo/iyqGdu/KxoDuC3oG
9M/L4a/z8OHDrduvXLni4itVdly8C/xfTO1ee++996wVkf0aQG+UWtPrTcdn
n31Wr6Os39YGDRrY33fu3Ln6xoYNG1atWtX6RS5durRe+1n31e9q+4mPHTuW
NWtW2/pZrwFsZ3upKO3++PHjKrL/6re0XgFa0+jVpvVRwPr1621Tnj592vbb
pOe2QoUKVndOkiTJvHnz7B/z7t27Tz75pLXG69KlS+fOna1abf2qavYnnbk+
A9bRTZa8efPqtZBeDtaXvXr1sk22e/du6/dd/bOnTLM+SLdtmbdq1cr1nykA
34pru3dxvarXOdmzZ7em1KtTPVnJkiX1Ck1/qVdZ9oMgzZ4929rcsp1IG2u7
Dw0NVf8cnL9jxw79/9dee003dPXvdu/iak2z1up6c8v6O6I3Y6wRADS9aeT8
OC4A8Wbo0KHWr7OLu4nbt2+vp9e93jq6WEUWK725pTtO5cqV7accMWKEbX31
1FNP2TbJihcvfvXqVdtka9asUZHDkEZ9Lmv9pruh7RZr81KvCa2Vm/6PbaNR
z8aSJUscHkHXImvNY9WufPny6f/rAuUwma7AVkfTK7SWLVvq/qVXWda+m0yZ
MjkcIqUnsF6Ifr16adSrV8/aAtTGjx9vP6XrG6IPI3dt6we0JtardL1dql+a
tQT01qn9R7gO5dq6S7NmzaIuQNfX2Lr+2z9anNq9kxl46PLb4OE/fzXeeecd
/ez6j6CewPoLomXIkMH+Y+E4/bzc4Lzduz6fWt++fa1v6R99uXLlsmTJYvuJ
RG33Lm4M6E0La7dp3bp1bb+2+h1uvVuivr2dUHZcvxf8nJN2bzvv8tdff7Vu
0esia6W0YMEC29tp69atVgnVq3rbfa3Vr/bII4/MmDHDOhDl0qVL+vfa+mW0
f6I6deqoyOH6bZ+7XrhwQa8lrEeItt3r3xHro60ePXroDWnrQ60TJ07YfxLY
uHFj67k2bNhg3XL58mX9C6Jv1OuEX375xTalNYSI/l3++eefrVsOHz6sV636
le7du9dhsbg+Axs3btRLRq/WbEfs6+927dpVRW7r/vbbb9aNVrvX9ApKLyjr
QxVNrxDCw8MHDx6s///YY4/F+CME4Gds7V5v6YX+m/7jrv7d7l1fr2o1a9as
VauWXrfYPsnXTdzaKdOlS5eoc7Jnzx5rTmI9Mv/7778vVKiQdXB+//79VeQQ
wdZmmH27d3G19vCf7R/t1VdftT37hAkTrBvnzJkTp0UKwEusoZYaNmzo4vRW
uy9durT+V28I6RWXdUKlXnXY72LWXcMqJm3btrVdPeTjjz+2dvS8/PLLtind
aPfWdpFeHVk3njx50jqnPleuXA6fHOotQH27Xh1Za1frUiCtW7d2eKJXXnlF
Re5Ysd+t//vvv7/00kuLFy+2n/KPP/6wZmDZsmW2G/XW2vLly5s2berQK13f
ENX0OtxakQ4dOtS2Mam3h/UPqF69ek6ue2L1x2jLtetrbBvrL0Kcjsx3MgOu
vw0e2v3V0GXh2LFj1o26Yls3zpo1yzal6z8v97jS7l2Zzy1btlh74fXCsbV+
/Vax/mo7tPs4bQzs3LnT+jRj8uTJDyOPJ7E+jY92S8AJ2n1QctLubd+y9kff
vn3b+mUcM2aMw5TWqUx6s9N2i7X61RXYfp38MPL4K+sxL168aN2i1zzWLe+/
/77Dw1qfB0bb7i0Ob3V7tq3rlStX2t+u3/85cuRw2Lq2Pivr2bOn/ZTWanbY
sGEOj+ziDFii7p/SKzfrda1YscK6xWr3eu1nHU10+vRp/aWeSWvdrhegivwQ
1fkTAfAftvVPTGzrnzitVx9Gt0rRRo8eracsUqRI1G+53u71xqe1h+Xbb7/V
NT9v3rz6W9aw+Q7H/rmyWnv4z/ZP1NdVu3btqFs1AHylbNmyDptAurBMs6O3
6Oynt9q9Vr58ed1VY3rYWrVq6WlKlCjhUEunT59u3d22P8WNdp8tWzbbZqRF
1yjrYR02GnV/VHYXIbW2qVKlSuVwuVJrd3yFChViPS/+4MGD1hN9+umnzqeM
04aobsHWxCNHjoz6UM4Pq3BSrh+6vMa28Wy7d/1t8PCfvxqNGzd2mGdrz6D9
wQau/7zc40q7d2U+a9SooW/RvdthOC9rcDP7v4Nx3RjQJk2aZFWtw4cP9+vX
T0UebxzX4xbst0zidEf4Myft/vfff7e+ZX06unPnThX5WV/Ulfm+fftU5Eej
tlus1W/RokUdprSqqxYWFmbdYr059You6seS0Y6ZbyvXDscUOZgyZYqeJnfu
3FFXidbZLoULF7bd0qpVK33Lc889Zz+ZdRZqjx49HO7u4gw40H8rV69ePW7c
uG7dulkr1bFjx1rfstq9rb/rta6KHNzG+tJatnqxu/5cAHzLtlGnNyx7/Jv1
6bptoy5O61V7f//9t96aXbhwYf/+/atXr65i+AwwTu3+l19+UZGXStH/Dh06
9GEM7d7GyWrt4T/bPw6btZqeZxV5sFZM8wMgPlnt3n5rR//a2m/zZ8iQwX56
q93r+hPtnl8ba52waNEih9vv3Lljnfxoq05utPuom5dazpw59bd0b7Ldcv/+
fetAdNuhofoWa8Rmh1WTngdrF3P+/PmHDx9+5MgRJy+tUqVKKnIfq956XLVq
VbRn8T+M44aodZpDSEhInEZ1tjhv9zbO19g2nm33rr8NHsb8V8M62KBFixa2
W+L083KDK+0+1vnUP3frcRw+H3sY3Zj5bmwM6MevX7++ijypWS8N/RukC0Vc
XyntPig5afe2DVTrdM4FCxZYXyaPwvbGsB0sGtPq99q1a9aUtiPeO3XqpL+s
U6dO1Hlz3u5///13J6+rc+fOepp69epF/dZnn32mIveV21bI1mdojzzyiO2j
4PPnz1tHvLz77rsOd3dxBiwnTpzo3r277VRZe3p1ZE1DuweCjOvn3cdpvWpZ
sWJF8+bNbWOQOv/THKd2r/9fsWJFa3prYynadu/Kau1hzNs/3377rTWx68P+
APCe1q1b69/HRo0a2W7RG4QjIukaqGJo93ory8lj2nYPbd++Pep3rZGFBg0a
ZH3pqXZvle7evXvbbrEdL6pLUPN/pEmTRkWeC+lwd721mTdvXtvarFixYgMH
DnQYzs6iN2U7dOhgGyMuderU+mH1mtlhXR2nDVFrqUY7cayct3sX19g2Hmz3
cXobPPw/9s4EKoorf9t3Zv4zSWaSMRlNMpkkmkwcs5nVrGbR7DGLMdFsjskk
mqiAoqKgKBpUEMVljFvUGFEBo6IYRRRFESKyCW6AQlBoBBRBkb3Zuvl+cCf1
VXopu6t6oZr3Oe/hdN+6VXW7a6Gerqpb5v9r8OkPHDhQXGj58pKBPLs3aKdG
o+FtM36mpLHdyzgYaG2/cYM3lQgKCpLxScXrg4zRQcdEwu6XLFnC2i/54L86
8vtBiJFmEP/we1W7J2nlJcOGDWNmbviStvuioiKJz8V/NDC5n6QJsvbeV4TL
Vy5fvtyzZ08qvOWWW2jbHD9+PO+D5b777qupqTEY3cIGtLbfdNC1a1fW/oMb
/Yvcvn07fckk7/3792ewewBcF8vt3qr9qlarHTp0KD8m7NevHx0e0DFDSUmJ
cH+TcUustXu+23/88cf5IGO7t3C31mr++Gfbtm2s/bQXnvUJQEeAd+9jslc9
vgMxaffCte4mEbwmOTnZeCh/GIe3tzd/ayu75096mjZtmlDCz6Wa5LrrrjM+
wGtqatq5cyeNJbgwHX3Rftjkk/7oaHD+/PkvvPACbyRrP4986NAhoYJVB6L8
FlHxbyyWI33fvYV7bAEb2r1Vq0Hr1azZePpWLS+rUGL3QjvPnDnDW5WWlmZQ
09jurToYENi7d6/Quz5tyDI+qXijkDE66JiYs3vaZPhvYrTj4iV0GMlrWvKo
SsvtnvbDTCSzYpTYPe+7ifa0lgxqbGzkPfuJoc3T5G+Alts9/wI//PBDg9u7
YPcAuDaW271V+9X169ez9idrCB00ceLj4839az558iQfJPE8aLHdX7x48bXX
XhN6FDG2ewt3a63mj3+CgoJY+32IV/28AAAHIFyHb/xAN9l2r9Pp+E3Ext0T
kXlxdRIG7dmzhzfA+Bc/y+2ejlr5Sfnw8HChhPddNnfu3HQRKSkp/NqnjRs3
mmu/Xq+nah988AFvWEBAgMSHraioWLp0Kd/j0f5Z2DdadSA6Z84cKrn99ttl
POBewu4t32ML8E9t0iWtbYBVq0Gr9XYvYNXysgSb2D2tz/wCD+MuGozt3qqD
AQ79a+Y98PN+yEnzaVOycFwBsfhYOy7osJi0e9pM+G+5hPCY0ZqaGn6xuiX3
m1tu9/x4laB/IuKaly5d4k+7kGf3sbGxJv9bkcjzfZ34GXO8wwpPT086AKZD
XPrIEo/LtLABQg8DBjem0Q6N3+MGuwfAVbHc7q3ar/LzUMbPFOYXeZr810w7
Uj7I5EN4OWK7N8DA7i3frbWaOf6hPXCPHj2YqT6rAQBOgbZfOlqjrfKJJ54w
OJ0t2+6J5557jrX3vGdQznveEB92njhxgpfQC3HNNWvW8HJL7F449Zmdnc1L
+I8GJm9kfvvtt2nQoEGDhBJzfZHx/u0Nzr+brCx0iydchW7VgahwE4G4x3UB
6b7jzMmvVXtsAfpnxIwewSaNhH1bvhq0WmP3Vi0vGdjE7lt//XXF4J4CwsfH
h/3W7q06GGhtNzV+XrJ///702sPDg7U/neGqZx4NYCKsGhF0ZAzsnvaBP//8
84ABA3iheNfX+us5F9bepaf4J9acnBxapcX9ilhu97SF8ueEPvLII8LzmmkP
z59JyuTaPa3q/JfJ22+/XTispXnxJ7/QFiR069f66/G2wYM5zGFhA8rLy3k1
8bM5jh8/zp+HxWD3ALguVj3v3vL9Kv/33bt3b+HApqmpicYS7ssz2RjeOTMd
XYgnLr7n3XK7t3y31ip63v3u3bt5Ce3cPv74Y9Z+Wb7BYTwAwIlERUXxTZiO
xISjI9r5eHl5Mbl2T0rOrxl2d3cXuhaPiYnhndp98sknQk06MuQPrP/ggw94
TdpX8H7nOMZ2T1MeOXKksB8jj+aTFfsyvzD+lVdeMW4bV8trr72W76Lp77/+
9a+XXnrpyJEj4mplZWV8sqNHjxYKV65c2aVLF9pvG3Sm5+fnx1tbWlrKS6w6
EKXK5KSs/ZaBb7/9VuhomvbbM2fOpGaI+5Y3wJxcW7XHFli1ahVrv/9LfLc4
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
kY8dO0ZqTy03UHvLl50xEnZPy4s/Ze+ee+6R+JmFExQUxNswa9Ys8cUPOTk5
NAves0GHBXYPAAAAAACAi0GGwv2OII3q3bv3ddddx98OGDBAXNNCu2/91Z5Y
+73kb7755kMPPcR9/6677iovLxfX5I9+Y+3PWXv66aevueYaek2j8P78TT5s
nfjLX/7y4osv0mT5o9BuvfVWg17mLLwy/9KlS5988okw2RtuuOFf//qX8JZe
k/zKbiq/sp2a+vzzzwvfgHFT169fL3z5L7zwwpvtvPPOO59//nlwcLDB4wks
tHvizJkz/P59aga18LXXXuMOTtBkHbAILF8KEpw4caJr165DhgwxvjzeqmVn
gITdv/zyy8JE7jTFtm3bhMo6ne7tt9/mlW+77TZaatQk+t74dyLRrV9HAHYP
AAAAAACA63H48GFB61j7ydlevXqRyhn0tvef//yHho4ePdqSaZIEkcsL+nDt
tdd6eHgYdxN3+fJlEj2h2j/+8Q8fHx9SOf6cuIMHDwo1uVo+/PDD9IJEmNcn
jSK9Ki0tNZjsvn37+vTpY9wqGnfw4MEGhVu3biUB53eOc6677rqJEycaPOnM
8qby3tR9fX1XrVrFFVuiqdXV1eIvygBqifjpAwUFBbzceDrGlJeXDxs2TNyF
+/333y+2dWs/l1WLoNXKpWAS+uxffvmluTvfWy1edgbQB6SaJtvQtWtXc8uC
Q403GCU0NJTf7yDwz3/+k9Qe5+4BAAAAAAAATqGpqen48eNHjhwxdnDZkPTF
xcVlZ2dLPxqsrKzs559/Ft+NbgxXywceeKC1/ZxpVlZWRkaGDZtK08zJySGd
zM/Pl+i6zZKmitHr9adOnUpPTzfZVPpaHn30URLk4OBgMvdjx44dbWf37t0L
Fizg11RYcrGEBHyxxsfHk8VLVOsIi0A2Fi47u1JRUUHfRmpqqsQ1Ax0K2D0A
AAAAAADAKUg8jk298O7v+vXrZ3LooEGDaOinn37q2EaZxSUXQacFdg8AAAAA
AABwCi6plvzp8z179hQ6qRNIS0vjd8pv2LDBKW0zxiUXQacFdg8AAAAAAABw
Ci6plhUVFbfeeit9ru7du0+fPn3jxo3btm1bsmTJwIED+WX5w4cPN+j9wIm4
5CLotMDuAQAAAAAAAE5h8+bN3bp169u3r7MbYmNycnIGDRok7heO06dPn3Xr
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
/JSVndBqtfZeUWH3coHdw+5h97B74PrA7mH3wCbA7oHaaWgo2r+/R7du3SZM
uGnyZBvngw9+P2gQ8/NzvsWbS0MDojQ6XT561YPdw+5h97B7e+8GAZAAdg+7
BzYBdg/UjlariY5mN97IFi1iK1bYOKNHs458ZT5io2gcsKLC7uUCu4fdw+5h
98D1gd3byu51Ol1WVlZISMjcuXN9fX3nzJmzYcOGhISElpYWc6NUVFQsW7Ys
Li7OeJBWq923b9+aNWtoL+Hv708vYmJiJO5npMpLly6tra21YtlbSWlpaWRk
5HfffRceHp6amlpfX2+/eakR2D1QO2T3u3axF19k5eVMq7Vxtmxpe+Rch+1V
D7FRNA5YUWH3coHdw+5h97B74PrA7m1i9+TpJPUmH6IXEBBg0tQaGxtpEFVY
t26dwaCioiI/Pz/jSfn6+prsjvjIkSO8wuXLlxWtDeZJTk52c3MTN2bmzJmV
lZV2mp0agd0DtcPP3b/8Mquttb337djBOvIT8RAbReOAFRV2LxfYPewedg+7
B64P7F653Wu12ilTpnDnDQ0NPXbsWGlpaV5eXnR0tIeHBxXSUIMz+OXl5QsW
LOCjGNs9H+Tj43Po0KFz7SQmJvJZeHl5iSel1+vj4+P5XOxn92VlZe7u7jT9
pUuXZmZmJiUlzZgxg94uWrTIHrNTKbB7oHZg94jiaBywosLu5QK7h93D7mH3
wPWB3Su3+7CwMBpE/nv69GmDQcXFxdyLk5OThcIDBw6MGTNGOAluYPe1tbWj
R4+m8vT0dHF5dnY2r5+Tk8NLSLrnz58vPp9uJ7uPjo6miU+YMKGxsZGXnDx5
kkrc3Nwc0D2yWoDdA7VjV7vfuZMNG8bc3NiZM4jLpqrqVFNTk71XVOfa/Zu9
tjkrCo1Dod3HvKEo6/6jKNsHKcpX38vP8B8UJWKIoihpOUWh5L6+V1GUrKxF
dzAliXpHURRuabB74Fxg9wrtnvSWnzqPiooy+Q2Hh4eTBZOvCSWjRo2i+nPn
zg0NDTW2+5KSEq7qhYWFBpNatmxZYGBgUlISf7tr1y7+q0JcXBy/bF6e3efl
5VFLdDqduQo5OTlbt25NTEwUSqqrq+19L4DqgN0DtWNXu9+9mz34ILvjDjZh
AuKySU7ee/HiRXuvqLB7ucDuYfewe9g9cH1g9wrtPi0tTdpzte2IS8jrU1NT
yab37NljbPd6vd7b25vK/f39MzIyGhoazC27gwcPkpWXl5fTa36FgDzXnjNn
Do0bEhJi4ZOM6uvr169fT6PMmDFDxuxcFdg9UDt2tftffmmzv3//W5FfIB08
6ekH+L8kuwK7l4uihQu7h93D7i0Edg+cC+xeod3zE+jjx4+X8eXv3r3b5H33
5P5CF3b0YuHChdHR0fn5Us8RVnLuvqioiN8pEB4eLl2T3wvA5zVx4sS8vDwZ
s3NVYPdA7djV7il79rDvv2cLFyIumxMn4h1wQRfsXi6we9g97B52D1wf2L1C
uycj5pfZiwtPnToVEhKytp0f2gkLCzMe15zdE7m5uUFBQQZ95vv7+5uTPiV2
3yq6AiEiIkKi2vHjx4XGTJo0KTMzU97sXBLYPVA79rb7vDyWkcGSkhCXTWnp
cQc8LBV2LxfYPewedg+7B64P7F46Bn5t/AVu3bqVyr29vcWFcXFxBiOSfRuP
K2H3nKqqqqSkpJCQEH6tPuHp6XnmzBnjmle1++zs7FRJpk6dymexc+dOcxNp
amoqLy+nSa1cuZJXzsrKMle5swG7B2rH3naPdIJoHLCiwu7lAruH3cPuYffA
9YHdW5hWM+fuDxw4wD33ypUrQmFpaWnir0RGRlpr942NjQbdDuv1+rS0NC8v
L6q/du1a40ld1e79/f1HWkxGRobUStMO332FhoZetWYnAXYP1A7sHlEcjQNW
VNi9XGD3sHvYPeweuD6we4V2L3Rxn5qaavIbzs/Pt8ruV69ebe4K+fj4eH5J
vPGgq9r9rl27NkhCk+UfZN68eQZd+ZWXl2dmZlZUVIgLeZeAfn5+5ubY2VCR
3et0uqqqqkoAfktp6cktW9hLL8HuEdnR2G/HJQC7lwvsHnYPu4fdA9cHdq/Q
7onAwEAaNHbsWJO9zJEXW2X3/GKAyZMnGz9KPjY2lgbR7IwnpfC++5KSEmo/
n7jxXZOLFy+mQdu2bRMX0lsqnD9/vrw5uh4qsnua+JAhQ/r37/8yACL69+/7
2GPsqadYTY3TJRFRaTT223EJwO7lAruH3cPuYffA9YHdK7f7wsJCLtckyIcO
HSorK2ttPz1KyhwREcEHWW735eXl/Bz6jBkz8vLyWlpaqJD+pqSkjBs3jsqj
oqKMJ6XE7knn/fz8aPSZM2fW1tYaV+Cn6T09PekT8RKNRsO72Y+OjpYxR5dE
RXafn5/fo0eP66+/visAIv72t5tuvJH16dMR7V6vZy0trKkJ6dDR6wvst+MS
gN3LRZHdf/+VosydrCgKJfftXfIzcIeiBE1RlKdTFOWlOEW5uUxRlKys0wKY
kiwdoygKtzTYPXAusHvldk8cO3aMqzfHy8uLy6/g6Sa7lzd3331SUhJ/fj3/
WcDb21t4QN68efNqamqMJ6XE7nkXedTIqqoqkxUaGhpoKG/A/PnzV6xYwWc3
a9Ysg/4BOjMqsvuEhIR33nlnwYIFeQCIyMqKX72a9evXEe3+yhWWns62b0c6
dAoK0kz+h7ItsHu5wO5h97B72D1wfWD3NrF74tKlSyRlvOM7joeHR2BgYGxs
LD//bkxMTAxV27Bhg/GgM2fOBAcH86vlOb6+vps2bWpubjY5Kf5jgrhnP8uJ
jo6eNm2a9LgVFRXfffed0JjRo0eHhYU54MlHKkJFdn/gwIHBgweHhIQ0ASCi
ujpvx44Oet99Xh7buZMtX86+/x7puDl9OrGystJ++y4O7F4usHvYPewedg9c
H9i9reyeo9PpSITPnTtHdkavFS4dvV5fWlpaUFBg77MhTZadgiedz8/PLy4u
NvcjQ2dGXXY/ZMgQkz8rgc5MR+4z38uLvfBCW0aMQDpuEhKiHfC8D9i9XGD3
sHvYPeweuD6we9vaPei0wO6B2unIdk/m+OSTbdcVeHoiHTeJiXtKS0vtvaLC
7uUCu4fdw+5h98D1gd3D7oFNgN0DtdOR7d7Dg/n6svh4VleHdNw0N5/V6/X2
XlFh93KB3cPuYfewe9tz/vz53bt3h4eH79y5s6io6Kr1q6qq6ECUjnUjIyPT
09PN/ddobm6mOkeOHLF1e10f2D3sHtgE2D1QOx3Z7se0HW6xtDTntwSRjMYB
KyrsXi6we9g97B52b2P2798/evRooWOuUaNG7du3T6L+8ePHPT09R4qYM2eO
8UPAibCwMBq6efNmu7XdZYHdw+6BTYDdA7UDu0cUR+OAFRV2LxfYPewedg+7
tyVnzpwhnXd3d4+LiyspKdm7dy83/cLCQpP1S0tLPTw8qEJERERZWdmpU6em
T59Ob8PDw8XV6uvr161bx90fdi8D2D3sHtgE2D1QO7B7RHE0DlhRYfdygd3D
7mH3sHtbsmLFCvqwMTExQsmePXuoZP369Sbrr127lobSUa5QotFoqGTChAnC
9fknT5708fERzuzD7mXQYe3eif+7TaYVdg8kgd0DtQO7RxRH44AVFXYvF9g9
7B52D7u3GeTj48aNM3ged1VV1ahRo8aMGWP8NHCdTufp6UlDq6urxeWk82fO
nBHejh8/nqa5aNGi7du3w+7lAbuH3QObALsHagd2bxCdjlVWskuXEEuj1f5i
fERnc2D3clFk9zn3KkrEEEX55EdF+c86+flgm6LMn6QoQyIURaHdP39IUZSs
rDsGMiVZ4aYoCre0TuILFy9epE86ceJEg/JJkyZRufHzU+jIlspnz56t1+tP
nz69e/duOhw9e/asQbXFixdnZGTQi7i4ONi9PGD3sHtgE2D3QO3A7g3S1MQ0
GpaTg1iaysrsxsZGe6+osHu5wO5h97B72L3NyM/P57ZuUE4lVJ6Xl2dQnpmZ
SeULFy5ctGiRuFe9NWvWNDU1GU8fdi8b2L2t7F6n02VlZYWEhMydO9fX13fO
nDlkTwkJCRInMioqKpYtW0Zrr/EgrVa7b98+WuFpL+Hv708vYmJiampqDKqV
lZXt3LmThq5ateqnn346d+6cnJXAMhw5LzUCuwdqh+x+1y52992MHD8urmNl
8OC2J+I52O4PHGiTGh8fRU7UqZKefqC8vNzeKyrsXi6we9g97B52bzNOnz5N
nzQoKMigfN68eVR+6tQpg/IjR44I/erTISi9jYqKGjNmDJVs27bNePqwe9nA
7m1i9+TpJPUjTREQEGDS1BobG2kQVVi3bp3BoKKiIj8/P+NJ+fr6ip8jmZCQ
4ObmJq5A20t0dLRt1ozf4sh5qRTYPVA7ZPc7d7atwJMnsxkzOlaee45NmuRo
u/f3Z927s65dWa9eiEXZtCnM+DJLmwO7lwvsHnYPu4fd2wxu96Q/BuVciHJy
cgzKU1NTuUGI9SErK4tKSDGMH4oHu5cN7F653dMKOWXKFL7GhoaGHjt2rLS0
NC8vj9Ze/twHGmpwBr+8vHzBggV8FGO754N8fHwOHTp0rp3ExEQ+Cy8vLz6p
kpISrtsLFy6k7eXo0aPLli3jE8zNzbXtSuLIeakX2D1QOzqdprSUTZni/FPA
xnGK3Y8Z0zbTDRtYaipiUcrKTph8bLFtgd3LBXYPu4fdw+5tRkFBAX1Sf39/
g3L+DRhf4nv8+HF+crChoUFczk9o5ufnG9SH3csGdq/c7sPCwmiQu7v76dOn
DQYVFxdTOQ1NTk4WCsmt+IUoJu2+traWPywyPT1dXJ6dnc3r81/Ddu7cKZb9
1vZbA6ZOnUqFmzZtUrpa/BZHzku9wO6B+ilsauoSHt5l3rwuQUEdKy+++AcZ
dq/XM61Wfr76ii1ezE6ccOhPCiqPxgGrKexeLrB72D3sHnZvAjrOX/5Wf4mY
/ETV1dVUPm7cOOFhdhxPT08qN+gYnyDfp3JyHIMznvxK/pMnTxrUh93LBnav
0O61Wi0/QR8VFWXyGw4PD3dzcxM/23HUqFH8UpbQ0FBjuy8pKeEWX1hYaDCp
ZcuWBQYGJiUl0Wta2318fAzW+YiICBqRqlm1DuTl5VFLSNjNVbDhvFwY2D1Q
Pw16ffyFC/EaTYfLl18+6udntd1XV7MffmDLlrHly+XkpZfY3Lmwe9g97B52
D7uH3VuBGu2+6A4mEZ/PPjU5Ir+uWHyaniu8r6+vceXm5mZ+clOj+f//Kcj0
eR/7xcXFBvVh97KB3Su0+7S0NC7jly9fNvkNa9sRl5DXp6amkk3v2bPH2O71
er23tze/1iUjI8Pg8hVp+K0ukZGRlo9CzJkzh8YKCQkx+PHNHvNyYWD3ANiP
MWP6fWNln/l6PbtwgU2fzry82MSJcvLEE2zOHNg97B52D7uH3cPurUCNdn/u
TiYRc3bPz/QtXbqUn46nv0uWLBkp6iWvrq7uzJkzBQUF/O0PP/zAz28KneTv
3buXSqZNm2bsILB72cDuFdr9rl27qHz8+PEyvvzdu3ebvO+e3F/owo5eLFy4
MDo6Oj8/X9q+4+Pj+f0sxreuSFNUVMR/TAsPD7dwFNnzcmFg9wDYDxl239DA
lixpk3R/fxYYKCfPPceCgmD3sHvYPewedg+7twI12n1hdyYRbzN2X11dPXHi
xJHtPeeT0fPThT4+PsJl+SdPnhRb0uXLl3n92bNn00xXrlzJbeL48ePGE4fd
ywZ2r9DuyYiNe4w8depUSEjI2nZ+aCcsLMx4XHN2T+Tm5tKWMvK3+Pv7m5O+
jIwMfsG/vK1AuAIhIiLiqpUVzstVgd0DYD9k2H19fZvaT5rEvv2WrV4tJy+/
zObNg93D7mH3sHvYPezeCtRo95oeTCLm7J64dOkSSRD3Aq75JSUlwlBu9xMm
TBBKSktLFyxYINSfPHmyQT9jAgcPHoRryAN2Lx0Dvzb+Ardu3Url3t7e4kL+
c5MYNzc343El7J5TVVWVlJQUEhLCr9UnPD09z5w5Y1AtPj6ebyZLlixpbm42
Oans7OxUSXgveQRt4xIrjCXz6pzA7gGwH/Ls3tubBQeznBxWVSUnw4ejVz3Y
Pez+f9n5rqKEDlOUgTsU5blE+XknSlEmBynKR5sV5bGjivJ0iqIoWVnXjGBK
Ms9HURRuaWq0+4K7mEQk7J5TW1ur0WgqKiosnGNlZWVBQcH58+cNetgDNgF2
b2FazZy7J1HiUnzlyhWhsLS0NPFXIiMjrbX7xsZG4YYUjl6vT0tL8/Lyovpr
164VD+LTJ1avXm0wlhh/f/+RFpORkWFyIhbOq3MCuwfAfsi2+4ULWXGxTFd1
d2ezZ7OYGFZYiFiU2tocB/zqC7uXC+wedg+7h92bgOw+/24mkavaPehQwO4V
2r3QxX1qaqrJbzg/P98quydxNneFPL/bfdKkSfwtKT+/L4DYunWr9F35u3bt
2iAJ77KSmDdvnnFXflbNq3MCuwfAfjjF7ufOZY88wnr0YPffj1iUzZvDzp49
a++VAXYvF9g97B52D7s3Adn92X8yiXh/DrtXE7B7hXZPBAYG0qCxY8fm5eUZ
D83MzLTK7vnFAJMnTzboaZ+IjY2lQTQ7/pbsbGR7ZxQJCQnWL/nfUFJSQu3n
E6+vrzeuYMN5uSqwewDsh5tbP09PFhHBTp2yNEePshEj2Pz58u1+Mx0ef9T2
XLzXXkMsSnT0NvGjkewE7F4usHvYPewedm8Csvu8e5hEYPfqAnav3O4LCwt5
F/ckyIcOHSorK6NCnU5HyhwREcEHWW735eXl/BT5jBkz8vLyhGdMpKSkjBvX
1g9AVFQUlWRlZfFqiYmJLb9F4sn1JiGd9/Pzo0nNnDmztrbWuIIN5+XCwO4B
sB8jRvQjy/7ww7Z74S3M55+zPn3aur6XbfdaLSstbRsdsTB1dbkOuIkSdi8X
2D3sHnYPuzcB2f0v/2ISgd2rC9i9crsnjh07xtWb4+XlxZ8xJ3h6Zmam8Vjm
7rtPSkpyd3fn47q5uXl7ewsPyJs3b15NTQ3VIRM3d9f84sWLrVoH+AMpqJFV
VVUmK9hwXi4M7B4A+xEY2O+LL9rOxXt4WJrRo9lTT7U9sF623ev1bY/Vq69H
LE1z81kH3LcFu5cL7B52D7uH3ZuA7D63F5PIJNi9qoDd28TuW9sfCUFSxju+
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
7N4EpBK73mYSgd2rC9i9Tey+oqKCpH6kKQICAsSmVldXN2vWLIM6fn5+ly9f
FuoUFRVRifGkfH19aZBQLSEhwc3NTVxh1KhR0dHR9lhPjh49avLTHTt2zB6z
UyOwe2AVarf7TpK33mKff862bUMsSn5+anV1tb23Hdi9XGD3sHvYPezeBGT3
O99hEoHdqwvYvXK712q1U6ZM4bYbGhpKwltaWpqXl0ei7eHhQYU0VDiDv2bN
GioZP378tm3bcnNzo6KiJk2aRCULFy4UJrhgwQIq8fHxOXTo0Ll2EhMT+Sy8
vLz4pEpKSrja04ipqalk38uWLeNtoMnafD3ZsWMHTXn27Nmbf8v58+dtPi+V
ArsHVgG7V0Xc3FifPuyRRxCLsnXrjwUFBfbedmD3coHdw+5h97B7E5Dc7xjI
JDIOdq8qYPfK7T4sLIwGubu7nz592mBQcXExldPQ5ORketvU1MTfxsbGCnWS
kpK4ldfW1tJb+jt69Gh6m56eLp5UdnY2r5aTk9PaviWKZb+1/YL/qVOnUuGm
TZtstXoI8J8O4uPjbT5llwF2D6wCdq+KLF7Mhg9nQ4ciFuXAgZ0lJSX23nZg
93KB3cPuYfewexOQU/z0HpMI7F5dwO4V2r1Wq+Un6KOiokx+w+Hh4W5ubuRr
9JqUbcaMGRMmTKiqqhIqNDQ0cG0vLCxsbT8pL34rhhQ7MDAwKSmJXm/evNnH
x4f+iitERETQiFTNqnUgLy8vNDRUp9NJ1OFXDuTn51s15U4F7B5YBeweccVo
HLDtwO7lAruH3cPuYfcmILvfPohJBHavLmD3Cu0+LS2Ny7j4xnkx2nYkFkFW
Vha/Zb6xsZHe6vV6b29vKvH398/IyCD3t3xp8nv/IyMjLR+FmDNnDo0VEhJC
szZZoba2ln/GmJiYJUuWBAQErFmzhtpm1VxcHti9C9Dc3Lxu3brFDuGzz3p+
9BELDHS6jiGIDaNxwHYKu5cL7B52D7uH3ZuA7D7yfSYR2L26gN0rtPtdu3bx
++jlff91dXUzZsygKSxdulQoTE1NFbrLoxcLFy6Mjo7Oz883Z9+c+Ph4/iuB
tWfYi4qKxowZQ+OGh4ebrHD69GmTXeqFhIRYNSPXBnbvAmi12v79+9999913
2Z+bb772/vtZQIDTdQxBbBiNA7ZT2L1cYPewe9g97N4EZPfbPmASGfcV7F5N
wO4V2j0ZMZXPnTtXXHjq1Cky37Xt/NBOWFiY8bikEsHBwTS6p6dnRUWFeFBu
bm5QUJCBTfv7+5uTvoyMDPJ6qmNwrb6FCFcgREREGA/dt28fH7ply5aCgoLC
wkL6RLyE9ycACNi9C1BZOfupp+4aNerGb76xez744P8GDcK5e8TFonHAdgq7
lwvsHnYPu4fdm4DsXnoDhN2rC9i9dAz82vgL3Lp1K5V7e3uLC+Pi4gxGdHNz
MxixsrIyICBgZHt3fNnZ2SaXTlVVVVJSUkhICL9Wn/8OcObMGYNq8fHxXO2X
LFnS3NxsclI0i1RJeI98BG3jBuOWlZWRxRs8/G7p0qVUOTg42OTsOiGwexfg
4sUuvXuziAiWn2/3LF7MfHzYnDlO1zEEsWE0DthOYfdyUWT3IV8oiu8cRRkS
oSgvxcmP32xFCZyqKAN2K8onPyrKvTmKomRlzbmXKcmolYqicEtTo91HDGES
gd2rC9i9wnP3JEpciq9cuSIUlpaWJv5KZGSksd1TBd5P3bhx44wfYNfY2NjU
1CQu0ev1aWlpXl5eNMratWvFg/j0idWrVxuMJcbf39/k1fUmseSe+vT09JEK
bklwPWD3LgDZ/aOPsoMHmVZr96xbx/z90ase4mLROGA7hd3LBXYPu4fdw+5N
QHa/5UMmEdi9uoDdK7R7oYv71NRUk99wfn6+gd0XFRVNnDiRCknwjR8eRJJu
7gp5fmf9pEmT+FtSfn5fALF161bpu/J37dq1QRKaLJ/UvHnzDLryq6ysLCws
pL/iwhMnTsDuxcDuXQCy+8ceY4cPO8KDwsNZR+4zv7qaVVYiiHVpajoj/fgV
mwC7lwvsHnYPu4fdm4DsfvNHTCKesHtVAbtXaPdEYGAgDRo7dmxeXp7x0MzM
TLHdFxcXkxFTSUBAgIEvc/jFAJMnTzbuaT82NpYG0ez4W7Kzke3d6CUkJMhd
/v+jpKSE2s8nXl9fbzB00aJFNGj58uXiQn7NgEGHA50Z2L0LALvnaW5mX37J
3noLQazLnj2RRUVF9t5OYfdygd3D7mH3sHsTkN1v+phJBHavLmD3yu2+sLCQ
d3FPgnzo0KGysjIq1Ol0pMwRERF8ELd7vV7PH1pH235NTU3Lb+FTKy8v5+fQ
Z8yYkZeXx8vpb0pKyrhx46g8Kiqq9dfn6BGJiYkG07H21AnpvJ+fH01q5syZ
tbW1xhVojnxeQm/89MLDw4NK4uPjrZqXCwO7dwFg9zxNTeyhh9htt7E770QQ
KxIWtt7kr9y2BXYvF9g97B52D7s3Adn9j58wicDu1QXsXrndE8eOHePqzfHy
8uLPmBM8PTMzs7W9Z3uJu92F7vKSkpLc3d15oZubm7e3t/CAvHnz5tXU1FAd
MnFz01m8eLFV68DKlSt5I6uqqkxWIP2fNm0an3hwcPCKFSt4e+bPny/8KAFg
9y4A7J6ntpbdey9bv55lZiKIFamoyGpsbLT3dgq7lwvsHnYPu4fdm4DsfuOn
TCKwe3UBu7eJ3ROXLl0iKeMd33E8PDwCAwNjY2MFBRZOgpvk7NmzwtTI9Mmj
+dXyHF9f302bNvEu8XU63ejRo21l99HR0STv4l4BjSkvLyepF2ZBDdu4cSPU
Xgzs3gWA3fPU1LBevdiePayqCkGsCO67h93D7mH3sHs12n3YUCYRz69h92oC
dm8ru+fQgU1FRcW5c+fIzpQf5Oj1+tLS0oKCAn6+3n5IdLYvRqvVFhcX2+Sj
uR6wexcAdi/Y/X33sYQEptcjiBVBn/mwe9g97B52r0a7Dx3GJAK7Vxewe9va
Pei0wO5dANi92O5//tn5LUHUFo0DtlPYvVxg97B72D3s3gRk9xs+YxKB3asL
2D3sHtgE2L0LALvngd0jcqNxwHYKu5cL7B52D7uH3ZuA7H7950wiY2H3qgJ2
D7sHNgF27wLA7nlg94jcaBywncLu5eJMux+5SlFe2a8ofQ/Lz9glijJ/kqIo
tPtPNyrKs0mKomRlzXqQKYnbCkVRuKWpzhfI7tf9h0kEdq8uYPewe2ATYPcu
AOyeB3aPyI3GAdsp7F4usHvYPewedm8Csnvp7Rd2ry5g97B7YBNg9y6Ag+1+
1qy2NDV1uFy50vZEvM5g983NLD+fHT3Kjh1jx48jSnPp0smGhgZ7b6ewe7nA
7mH3sHvYvQnI7td+ySQCu1cXsHvYPbAJsHsXwMF2P2MG8/JiFy92uGg0rGfP
TmH3lZVtP7C88QZ75x3EBtmzJ7KoqMje2ynsXi6we9g97B52bwKy+x+GM4mM
HQm7VxN8DXTiP8oO+A/UZFph90ASW9n9s88+GxQUtHfv3hS7sWzZsnfeeWf9
+vW2+uwugyPtPj6eLVzInn1W0fG2neLry265pVPY/cWL7O232z6v079z10h6
+oHy8nJ7b6ewe7koWriwe9g97N5CVOcLZPdrRjCJwO7VBewedg9sgq3s/oEH
Hhg1atT8+fO/tRtjxox59dVXQ0JCbPTRXQdH2n1eHluzhv3+920e3dHSrRu7
9tq259073b7tnXPn2J13st272YEDiA1SUnK0rq7O3tsp7F4usHvYPewedm8C
svvvv2ISgd2rC9i9rexep9NlZWWRMc2dO9fX13fOnDkbNmxISEhoaWkxrnn4
8GEa+t133+3Zs6egoMB4alqtdt++fWvWrKG9hL+/P72IiYmpqakxN3eqvHTp
0traWhnrgLVcdV4VFRXLli2Li4tzQGM6Dray+6lTp3p7e/v5+Sn85yLB559/
/tJLL61du9ZWn91lcKTdX77MMjLYzJksOLjDZfZsduutTjh3r9e33fJP34zD
cvIku+uutgVx9mzbDfiIwlRXn25qarL3dgq7lwvsHnYPu4fdm4DsfvXXTCKw
e3UBu7eJ3ZPPktSPNEVAQID4HmrS9sDAQIM6Bw4cEE+tqKiI5M54Ur6+viZv
aTxy5AivcPnyZZutGWa46rwaGxvpI1OFdevW2bsxHQpb2T19w7NmzRozZsxY
u/H++++/+OKLsHtjHGn3HTnO6jO/pYUVFLRd1eCw0Gfs2ZMVF7f9sOD0r90l
onHAdgq7lwvsHnYPu4fdm4DsftVIJpExsHtVAbtXbvck7FOmTOHOGxoaeuzY
sdLS0ry8vOjoaA8PDyqkocIZfKpAJRMmTIiJicnNzd24cSMfkeoLE1ywYAGV
+Pj4HDp06Fw7iYmJfBZeXl7iiwH0en18fDyfi73t3pJ5lZeX88bD7mVTUlKS
kJCw254EBQUNGDCgsy0gS4Dd8zjF7kntU1LYlCls2jTH3Sfu5cW6d4fd2zAa
B2ynsHu5wO5h97B72L0JyO5XjmISgd2rC9i9crsPCwujQe7u7qdPnzYYVFxc
TOU0NDk5md42NTWNHTuW3pLaC3X4qfxt27bxt7W1taNHj6aS9PR08aSys7O5
Nefk5PCSsrKy+fPni0/u28/uLZnXgQMHxowZI1TobPJoK7t3AOgz3xyw+//H
3tvARXXd+f9n/5t/d9vuNt3d/rvtr01skjZPTXfTNtsmTdM0abLNk0mb5+Y5
TasgCgiCIkhHIwgqiYn4GJQoEDAi0QBKJCoIoiCIFVHJIAwgBUFBZOR5xv93
OM38JjOXy3jPzL1zZz7v1+fFa+bccx+YOQfmPefec3k0sfuhIfbuu+zb32Y3
3shuv12l/PCH7Dvfgd17MCYV+insXilCdv/WbKEIOvJvi4Ryb4nyzFsilMWx
QhE5csrTW4Xyg8+EItJY99zPRPJcjlAEe5oe7X51EJMJ7F5fwO4F7X5wcJAP
Z+fn50u+wllZWcHBwdnZ2Zc/v5p+06ZNAwMD9gr8ywG7C7e3t3M7bmlpcdpU
ampqQkJCRUUFf1pQUMC/Vdi7dy/tQrHdG43GjIwMi8UiU8edfU2fPp3Kk5KS
+PkJsHufBXY/EbB7Hk3sfnCQzZ/PwsPZxx/bBvHVyY4dODPfszGp0E9h90qB
3cPuYfewewnI7lfNYDKZOR12rydg94J2X1VVJT9uPjjORK8/mXVYWBitfvjw
YV5itVqjoqKoxGAw1NTUDA0NTbTuvn37yKP57Yf4GQLK7D4xMZHWTU9Pp12L
7Iu8vrKy0mKx7Nq1C3bvy8DuJwJ2z6OJ3Q8M2M6TX7GCtbert9O2NvaDH7DG
Rnbpku3rBUQwY2NNMv9HPAXsXimwe9g97B52LwHZfWoIkwnsXl/A7gXtng9q
h4eHX+krX1hYOHfuXPtJ7KOjo/ZF5Mh8fJygBykpKVS5qUnuU5PI2H1bWxs/
oz4rK8ud+pPua+fOnbB7XwZ2PxGwe57AsXuTiX3taywlha1ezdasQURTX1/W
29vr7X4Ku1cK7B52D7uH3UtAdr9yJpMJ7F5fwO4F7Z6MmJ+O7lh44sSJ9PT0
jeNsGCczM9NpRT6xvH0uPqcbzDU0NCxZsmTaFzEYDI7T7zsiYveXHc5A2Lp1
66SVYfeSwO79ANg9D9n9TTexTz+1XQuvWnp7WVgYe/tttcfuv/c9Fhlpm80P
EU9VVXFXV5e3+ynsXimwe9g97B52LwHZ/buzmExg9/oCdi8fJ792fQFzc3Op
PCoqyrFw7969TiuSETutSHbc3d1dVFQUHR1NFcjlXTfe19dXUVGRnp7Oz9Un
QkNDGxsbXWtOatz19fWVssyfP5/vgvq4fJuB3UsCu/cDYPd2u58yxTYUW1mp
XvbvZy+9ZBtGV9PuBwZYQQFLSGCJiYgHcuTI3nPnznm7n8LulQK7h93D7mH3
EtAn/3dCmUxCYPe6AnbvZi5PMHZPosSl2PF0xM7OzvLPycvLk7R7O9XV1XwL
Fy5c4CXDw8MjIyOOdaxWa1VVVUREBFWTvE35pMZtMBimuU1NTY1Mm4HdSwK7
9wNg9zxms23sfskS26RzquXDD9lTT7Hly1W1+5ERduyY9ie0+01wZj7sHnYP
u4fd69HuV4QxmcDu9QXsXtDu7VPcV1ZWSr7CTU1NdrsnbT99+nR9fb1jhdHR
UX6bPL6F9evXT3SGfElJCS2aM2eO66JJjbugoGCzLLRZ/oskJyfLTOXnzr5g
91ofyyTA7icCds8zOsreeINNnapqHn3UdrH/kiWq2j0X/L4+xDMZGWmUv/2K
R4DdKwV2D7uH3cPuJSC7fzucyQR2ry9g94J2f/nzG9aToRuNRteldXV1drsn
teePHe+IR4+5L/Mb2fOTAebOnes6035xcTEtot257kXwuvv29nb+DQNt3PHY
JIHdSwK79wNg9zxjYyw+nr3wAnv6afXy+9+z225jSUlq2z3i0ZhU6Kewe6XA
7mH3sHvYvQRk9/L9F3avL2D34nbf0tLChZcEuaysjM8pZLFYSJm3bt3KF3G7
tw/TZ2Zmjo2NUQn93LBhA5WEhYUNDw9TSXd3Nx9Dj4+PNxqN9mqHDh3i987L
z893PQYRuyedj4uLo9UXLlzoNLmfJLB7SWD3fgDs3p6BAdv5+f396qWri4WG
qj2rHuLpmFTop7B7pcDuYfewe9i9BGT3KRFMJiFBsHs9AbsXt3uitraWqzcn
IiKC32PO7ul1dXW8Znl5OS+MjIxMS0tbsGABf2q/3z1RUVHB7ynPvxaIioqy
3yAvOTm5v7/f9QBE7H7t2rX8IPv6+typD7uXJNDsfnR0lM8M6U+cOPG1H/0I
dq9NNLkjHuLpmDz1Z0oG2L1ShOx+6sdCeSNNKIa/COXJbcojKMi31gvlhSyh
PLhbKBraveCXKlFLhSLY0/Ro98sjmUxg9/oCdu8RuyfOnTuXnZ3NJ77jhISE
JCQkFBcX8/F3OyTvpPb2arGxsU5X4hONjY1Lly7lA/2cmJiYnJwcUirJvfMv
E5RNZ1RYWEjH4P66k+6rqKiIKgTa0HCg2X1PT8+uXbsK/IusrK/+4AesvFxz
RQrEwO79IiZP/ZmSAXavFNg97B52D7uXgOx+2RwmE9i9voDde8ruORaLhayn
tbW1o6NDZnIhWtTV1WU0GuWHy61Wa2dnZ3Nzs+R4vQdxmqIfKCCg7J4a+dGj
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
7v0Aq/Xq48fZnj2sqMi7uesulpUFu/eY3T/+ONu5kw0OstFRRMtYrc0q9FPY
vVJg97B72D3sXgKy+z+9x2QCu9cXsHtxux8cHJw3bx533oyMjNra2s7OTqPR
WFhYGBISQoW01HUEf3h42K7wTna/fPlyKoyOjqby1nHKy8v5LiIiIhw3ZbVa
S0pK+F68Z/ddXV0zZsyg7a9cubKurq6ioiI+Pp6evvXWW97YnU6B3fsFj3Z0
3Ftff+/Ro97Nr371Tx98ALv3pN3v2mWzS80PJuBjUqGXwu6VAruH3cPuYfcS
kN2/kcZkArvXF7B7cbvPzMykReS/J0+edFp05swZ7sUHDx50WpSRkWEfB3e0
e7PZzAf0q6urHevX19fzyqdOneIlJN3Lli1zHE/3kt0XFhbSxmfPnj08PMxL
jh07RiXBwcEqnISpF2D3fsEFi+XC2JjX8/DD12JWPU8Fdu9LManQS2H3ShGy
+9ynhLI8UiiLY4WyJkh53n9VKPftFYrg6xb+tlD+pV8oIo21/G4mkuznhSLY
0/Ro9/Lf88Du9QXsXtDuSW/50Hl+fr7kK5yVlUUWnJ2d7Vh49OhRPqa/dOlS
J7tvb2/nqt7S0uK0qdTU1ISEhIqKCv60oKCAf6uwd+9eftq8Mrs3Go0ZGRkW
i2WiCqdOncrNzS0vL7eXXLx40dvXAugO2D1wn4cfnqLY7isq2Nq1bMUKtmoV
YktyMrvzTti9j8SkQveB3SsFdg+7h93D7iUgu399I5PJn2H3ugJ2L2j3VVVV
8p47OI5jSV9fX0REBB+FX7lypZPdW63WqKgoKjQYDDU1NUNDQxO9d/v27SMr
7+7upsf8DAFlrp2YmEjrpqen067dqT8wMLBp0yZaJT4+XsHu/BXYPXAfEbtP
SWE/+YltXr5bb0VsuflmdsMNsHsfiUmF7gO7VwrsHnYPu4fdS0B2/1o6kwns
Xl/A7gXtng+gh4eHu/+ac6P/8MMP7Y+drruvrKy0T2FHD1JSUgoLC5uammTs
W2Tsvq2tbebMmbR6VlaWfE1+LQDfV2RkpNFoVLA7fwV2D9xHxO5nzmTTprGo
KKEP6v4UeinuuGNCu+/sZAcOsN27WXEx4vW0tVXjjniwe9g97B527+0/g56F
7P6V95lMYPf6AnYvaPdkxFSelJTkWHjixIn09PSN42wYJzMzky8qKSnh4/Ij
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
eR7eKZTdDwrlgz8IJWiNUOpuE4pIY727nIlE3lUnjWBP050vkN3Lf1vyRjjs
Xk/A7mH3wCPA7oE6wO4RH45JhS4Au1cK7B52D7uH3UtAdv9YPpMJ7F5fwO49
ZfcWi+X48ePp6elJSUkxMTGJiYlkT6WlpWNjYzJrlZWVvffee5999plT+eDg
4O7du9PS0uivhMFgoAdFRUX9/f1O1bq6uqhL0tJ169Zt3769tbVVSSO4QujA
Vq5cqcJNjfUF7B6oA+we8eGYVOgCsHulwO5h97B72L0EpBLy/Rd2ry9g9x6x
+56eHpL6aVIsXry4o6NDcq3m5uagoCCqQ47vWN7W1hYXF+e6qZiYGFpkr1Za
WhocHOxYYfr06YWFhZ5pGRNw+PBhvq/z5897dUe6A3YP1OHhh6ds2sQ++4z1
9CCIb2VoyGixWLzdBWD3SoHdw+5h97B7CcjuHylkMoHd6wvYvbjdDw4Ozps3
jztvRkZGbW1tZ2en0Wgk0Q4JCaFCWuo6gj88PGxXeCe7X758ORVGR0dTees4
5eXlfBcRERF8U+3t7VztU1JSKisrjxw5kpqayrfW0NDgjaZitVpLSkr4bwS7
dwV2D9SB7H71anbgAKurQxDfyvnzdUNDQ97uArB7pcDuYfewe9i9BGT38s34
j7B7XQG7F7f7zMxMWjRjxoyTJ086LTpz5gyV09KDBw86LcrIyLCPuTvavdls
5gP61dXVjvXr6+t55VOnTl0e74mOsn95/NKA+fPnU2FOTo5Qm5Ciq6tr2bJl
jucJwO6dgN0DdZgzZ8pjj7FHHmFPPIEgvpWioo/ov563uwDsXimwe9g97B52
LwE5xUO7mExg9/oCdi9o94ODg3w4Oz8/X/IVzsrKCg4Ozs7Odiw8evQoH9Nf
unSpk923t7dzfW5paXHaVGpqakJCQkVFBT3esmVLdHQ0/XSsQM5FK1K1K2oD
RqMxIyND/nTKgoIC/g3G3r17+TkDsHsnYPdAHZYt+9E991z9wx9e/aMfIYhv
ZevW7KamJm93Adi9UmD3sHvYPexeArL73xYxmcDu9QXsXtDuq6qq5MeyB8dx
LOnr64uIiOCj8CtXrnSye6vVGhUVRYUGg6GmpuaKznLk1/7n5eW5vwqRmJhI
a6Wnp9OuJ6qzb9++jIyM7u5ueszPRoDdOwG7B+pgMh2sri45eLDk0CEE8a10
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
iltbW+0VzGYzn9Suvr7+8ucnA8ydO9dxpn1OcXExLaLdue5F8Lr79vZ2On6+
8YGBAcdFp0+fzv4ia9asmTZ+Jz56/Mknnyjbo/8Bu9cWi8XS0dHx7W9/OyYm
RvD/MpiIN96YMnUqCwvTXu0p9fWsspLt34/4UDo6ap3+g3gD2L1SYPewe9g9
7F4CsvsffMZk8koU7F5PwO7F7b6lpYXLNQlyWVlZV1fX5XHXIGUmCeKL7GP3
ISEh9HT16tWjo6OXx88lfu+996hk3rx5/Gz87u5u/g1AfHy80WgcG7Ptmn4e
OnQoLCyMyvPz812PQcTu6cNYXFwcH4g3m82T1sd195LA7rWF+gj1xK985SvH
jh1rBt7ho49+HhHB5szRXu0RX41Jhc4Ou1cK7B52D7uH3UtAdv99I5MJ7F5f
wO7F7Z6ora3l6s2JiIjgw/F2T6+rq+M17RPuzZ49e/369QsWLODuf/ToUfvW
Kioq+P3r+aKoqCj7DfKSk5P7+/tdD0DE7teuXcsP0nGuPxlg95LA7rWF2/2/
/Mu/0M9e4B2Ki++OifGJWfUQX41Jhc6urd0/u31Yqwgah6DdT1snlNc3CkV+
yq9J82iB8kSkCOW+vUK547BQntgulId3CkWksc5ZxkQSvFoogj1Nj3Z/QyOT
CexeX8DuPWL3xLlz57Kzs/nEd5yQkJCEhITi4mI+/m5n//79kZGR9mr0d6Cp
qclpa42NjUuXLuVny3NiYmJycnL4iL8r/MuEXoeZ/dynsLAwNjbW/XVbW1v5
8SjYlx8Du9cWbvdf+9rXLly4oPWx+C2+M2c+4qsxqdAOYfdKgd3D7mH3sHsJ
yO6vP81kArvXF7B7T9k9x2Kx9PT0kP92dHTQY5lq3d3dJCOXLl2S2ZrVau3s
7GxubpYcr/cgKtyh2O+B3WsL7F4FYPfIZDGp0A5h90qB3cPuYfewewnI7q9r
YjJ5GXavK2D3nrV7ELDA7rUFdq8CZPcLFrDZs9nICIJIxGptVqEdwu6VAruH
3cPuYfcSkN1/r5nJBHavL2D3sHvgEWD32gK7VwGy++nT2f33s9JSBJFIIMyZ
D7uH3cPuYffy6M4XyO6nmJhMYPf6AnYPuwceAXavLbB7FTh8+N4//YndcQfL
yUEQiZw+fejixYveboewe6XA7mH3sHvYvQRk99e2MJnA7vUF7B52DzwC7F5b
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
7XZPkj7RGfL8yvo5c+bwp6T8/LoAIjc3V/6q/IKCgs2y0Gb5ppKTk52m8lu0
aBGVl5aWOhbW1tZSYWxsrMxOAwrYvbbA7n0N2H1AxqRC04LdKwV2D7uH3cPu
JSC7/9eLTCYvzoPd6wnYvaDdEwkJCdPGJ5A3Go2uS+vq6ux2bz/FvbW11V7B
bDbzSe3q6+svf34ywNy5cx1n2ucUFxfTItodf0pKzk+Pd/JuBbS3t9Px840P
DAw4LX3rrbdo0UcffeRYSDulQhJ/wV37DbB7bYHd+xqw+4CMSYWmBbtXCuwe
dg+7h91LQHb/1X72VfOEgd3rC9i9uN2TU/Ap7kmQy8rKurq6Lo/fRY6UmSSI
L7KP3fO56VavXs0vkKef7733HpXMmzePn1ff3d3NvwGIj483Go3kLJfHzeXQ
oUNhYWFUnp+fTyXHjx/n1crLy8e+iMyd6yUhnY+Li6NNkayZzWbXCtTraSnt
nX5TXtLb20sHTIU5OTlXtC8/BnavLbB7XwN2H5AxqdC0YPdKgd3D7mH3sHsJ
6HP+Vy4xmYjb/d/+9redO3dmZWXRvtra2iaqRkpyaGJ6enomrSB4nP4B7F7c
7i+Pn6bO1ZsTERHBh+Ptnl5XV8dr2ifcmz179vr16xcsWMDd/+jRo/atVVRU
8LvO8UVRUVH2G+QlJyf39/dTHRKria6aX7FixRW1gbVr1/KDdJzrz5Hh4WGu
/yEhIe+88857773Hf9no6GjJbwMCE9i9tsDufQ2/t/vhYdbRwVpaWGsr8veY
zacmmtnVg8DulQK7h93D7mH3EpBxf3mAyeQFMbv/9NNPg4KC7J4yffr03bt3
S9a0X+8sSU1NzaQVRI7Tb4Dde8TuiXPnzmVnZ/OJ7zjkwgkJCcXFxXz83c7+
/fsjIyPt1ejvgOsd6hsbG5cuXcrPlufExMTk5OTwD04Wi8WxmwjafWFhYWxs
rOOsgK6Q+JPU85n5OatXr8ZXZI7A7rUFdu9r+L3d19ezp55it9zCbr+d/fjH
iC3btmU3Nzd7u2nB7pUCu4fdw+5h9xKQ3f/zIJOJiN2T0ZA+zJgxY+/eveTm
n3zyCVcY+/nAjly8ePFDF/gV0KGhoWfPnp20gsDL4D/A7j1l9xzybnLe1tbW
jo4OmTPkaVF3dzc17EuXLslszWq1dnZ20oclPl7vPWQm23eqdmac4eFhrx6P
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
adJE/pgzZ05MTIx/ln7x4sVp06b179+/cePG3bt3nzx58qZNm/yzaAAAAPgC
6R4A/O/IkSPVq1fXbJQqVWrnzp2+Xvry5csLFSpku/Rhw4alpaX5eukAAADw
BdI9APhZRERE/vz5pdetUKHCF198cfTo0cOHD0+aNKlatWoyMWfOnNHR0b5b
elJSklr6U089NXv27FOnTu3bt+9///d/Zbkycfz48b5bNAAAAHyHdA8A/vTn
n3+WKlVKutx27drdunXL+NDFixfz5s0rD40dO9Z3DVizZo0sonDhwgkJCcbp
n332mUyvWrWq7xYNAAAA3yHdA4A/vfzyy+pX+8TERNtHx48fL4/WrVvXdw2Y
P3++LKJ69epW069cuVKuXDlZdFJSku+WDgAAAB8h3QOA3yQkJBQoUED62x9/
/NFuhZSUFLup34suXLig+vyePXvGxsb6dFkAAADwG9I9APjNokWLpLMNCwtL
Tk4OYDOmTZuWJUsWaUnevHlfe+01n57mDwAAAP8g3QOA34wbN046244dO+pT
4uLixtrYu3evr1uyePHismXLqs4/W7Zsffr0OXPmjK8XCgAAAN8h3QOA37z4
4ovS2Q4ZMkSf8ssvv9jeme63337zQ2NSUlK+/fbbGjVqqIWWKFHijz/+8MNy
AQAA4AukewDwm+eff14626FDh+pTTp48Of8udUm9LFmyXL9+3XdtSE1NNf43
LS1tyZIlhQsXVvfI891yAQAA4FOkewDwm7Fjx6p74dl9VF3NvnLlyj5a+smT
Jx988MHixYvbPjR37lxZdK5cuQJ7QQAAAAC4jXQPAH6zbNkyFaLtXsju1Vdf
lUd79+7to6UnJibed999sgjbI/A3bNgg04sWLWr1yz4AAACCBekeAPxGsnN4
eLj0tw0bNjRexe7PP/+cMmVKoUKF5KFp06b5rgFq6fXq1bt06ZI+8dy5czVr
1pTpgwYN8t2iAQAA4FOkewDwp61btxYtWlS63Dx58jz55JM9e/Zs1KiR/K36
4XLlyh09etSnS8+ePbtaev369Xv16tWqVascOXLIlOrVq0dFRflu0QAAAPAp
0j0A+Nnly5e7dOkSFhamd7/y9xNPPLFkyZKUlBRfL33z5s1t27ZV97tXypQp
M3jw4ISEBF8vGgAAAL5DugeAQDl37tzOnTuNB8n7TWJi4vHjx2Xp165d8//S
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
01VeFo899lhcXJyjGap0X6xYsZiYGOP0zZs3q6c7uXKa19P9PVub7soaUOle
cf7dy/jx46VOeHi4ceLx48dVPL948aLzxtvlRrpv37691auTsK/ZOyxB5610
f+DAAVVn6dKl93hhBmlpabK/yNoz/xQAAJwj3QNAZuPFdK/ndwmJ8t/q1aur
/0pcUr8Iq//u2LFD/dc2e6qaEtDcfz13rV+/XmYlsfSeNY8dO7Zs2bJJkyYN
GDBAZdt3333XWEHlZVlRzu+V5uSa+SVLlpSHPvzwQ0fP9Xq6v2drje65BvR0
7yQdK+oUcs1wuL4YPny4ZnNqhnlupPtFixZZ1VSHJXTu3NnRUryV7kX9+vU1
y6Ep8pKXLFmSkJDgpLJOKnfr1s1MTQAAzCDdA0Bm4/90P2vWLPVBk92G/hnk
+bX1FixYIPHKydXyo6KiBg0aVLx4cc3G2LFjjTVVXu7bt6/zJTpJ9yruDR06
1NFzvZ7u79nadFfWgJ7uT58+fc/ZqtfSpk0b9d/k5OQiRYrIlLVr197zuXZ5
Jd2rVnXo0MHRUryY7mVWvXv3VteR0CyX1OvYsePChQudv6vl7dGwYUMnFQAA
cAnpHgAyG/+ne3XSvejvwODBgz1/XVOnTnVyDMD69esLFiyoWY4TGDBgwLJl
yw4ePCjNVqeH2033L774ovMlOkn34eHh8tDo0aMdPdfr6f6erXVpDejp/uzZ
s85nm245L0OSeJYsWY4cOSL/Xbp0qWa5ZL352+1Z8WK6d7KGvZjuFVlpH3zw
QePGjVUjNctlCTdv3uyo/oQJE6pVq3bP2QIAYBLpHgAyG/+n+4iICPVBc+7c
OS+9CDvmzJmTK1cuR4+WLVtWGtCtWzdpqnG6L9J9UlKSui3gggULHD3XTLrv
3Lmz1LnnVx8mW+vSGnAp3YsXXnhBb2qHDh00p2cl3NN///tftXT98n06P6f7
yMhIVefKlSvm2x8XFzdt2jTVsAIFClitcN2wYcPq1atnfrYAADhHugeAzMb/
6f7mzZvqbun3PInbE6tXr5ZFGO+AplMX/RNWZ6anpKTUrl3b6+n+888/V4s7
dOiQo+eaSfeyujQTdww001pX14Cr6V5eaZYsWfLmzXvixAnZ1jlz5oyNjTXz
RLv279+vlm51SfnZs2er6X5L9zExMarOtm3bnDTY7oXx5Snqub///rvdZ/Xp
06djx45OZgsAgEtI9wCQ2fg/3YtJkyapz5rx48cbf5A9evSoLMLkVcici4qK
kvnrd6Yzunr1qlr6nDlz9In79u2rU6eOmu5JupdU+9JLL+kXDFyzZo26zZ/z
C6aZSfczZ87ULDcmiIiI0CcmJydb/RZsprWurgFX03363Z/sK1WqJP9Kk0w+
yy7J3fLm0SzXxFNXwpeXPGHCBH3E4rd0L0qUKKFZzt83vm+vXbum/z1jxowC
BQrIO9zqbTx69Gg1/0uXLtmds6z84cOHO1k0AAAuId0DQGYTkHSfmprarl07
9XFTvHjx9u3bd+/evXbt2upCZJ988ok3Xll6lSpVhg0bZvehJ554QiXxZs2a
9ejRQ93GPUeOHBUrVvQw3atjxfPkydOoUSNZAzJbzXJuu/Pr0ZlJ95IWVXSV
RTRv3rxnz54tWrSQzWd1GzWTrXVpDbiR7n///Xd9RLFlyxaTz3KkX79+albF
ihWrV6+etFOzHMagjjTwZ7r/8MMPVbUyZcp0sQgPD8+dO7ce9l944QW10fPm
zfvYY4/17t170KBBDRs2VM/617/+ZXe2Fy9elGdt2LDB7BoBAOBeSPcAkNkU
KFBA+vzvv//eTGV1azNJNFbTVX63SveSvIyPGtO9Mm/ePHX2t65cuXIS7b3y
23265URmRxdzu3LlSseOHfXlSkbu1KnT8ePHP/74Y9ts26dPH5k4cOBA54tT
9wIYMWLEzJkzCxcurOacNWvWdu3aOfq5VudoxVo5cuSI/vO68uCDD06YMMGN
1rq0BtSBEE5+d7ZL3WJe/5LHE7GxsdI8vbUlSpSQNXbnzp2uXbtqfz9CQ/22
7ijdO1nDero/cOCAk5akpqZOmjRJfb2gSCqXjRIdHa3X2bdv3zPPPKNaoite
vPjEiRMdXTZf3jNhYWFObvEAAICrSPcAAD+Li4vbvXv39u3b7Z4j7wkJXNmz
Z//5558dVbh48eLGjRsli0lk8+6i09LSDh8+vGvXrps3b3p3zuL8+fNbtmzZ
tGnTyZMnPWy579aAxNiqVavKcGL69OnemueVK1fkVTu5fIHfJCUlyZtWGrN3
7179LAxb6r0dERFx9uxZJ2tY3i1VqlQZNWqUbxoLAMikSPcAgFAyaNCgpk2b
BroVmdG7774rY4mCBQvavcQcjJYvX16gQAEn3xIAAOAG0j0AIJScO3cuZ86c
O3bsCHRDMoXU1NQ7d+7IOv/ggw/Usevvv/9+oBsVBBo0aGB1KgQAAJ4j3QMA
Qsyrr77q/Hr18JY1a9ZIqFfXlNMsF5a3e9EDGG3evDksLMzrp6UAAEC6BwCE
mMuXL8+cOTPQrcgUZD0/8MADOXPmrF279rRp07x+Ln9I2r59++rVqwPdCgBA
CCLdAwAAT/B7PQAAGQHpHgAAAACAYEe6BwAAAAAg2JHuAQAAAAAIdqR7AAAA
AACCHekeAAAAAIBgR7oHAAAAACDYaQAAAAAAAAAAAAAAIAMI9BEEAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAQCg7f/782rVr58yZ89NPP0VGRqalpQW6RQAA
AAAAwKyjR482a9ZM+7tChQqdPXs20E0DAAAAAAD3duHChfz582s2ChYsqP98
f/jw4alTp77wwgv169dv3br1gAEDli5dmpqaGtiWAwAAAAAARTK7MdRXq1at
Zs2a2bNn79q1qzx67dq1V1555b777rON/5UrVz5z5kygmw8AAAAAANLLlSun
B/Z169apicnJyX/++af88eabb9rmel14eDi/4AMAAAAAEBBpaWlxcXFnzpw5
ePBg1qxZVVQvXLjwvn379lscPnxY1bx9+3b9+vXl0apVq7733nuLFy/+97//
nS1bNj3gR0ZGBva1AAAAAACQOUmod/KLvChVqpRe+eLFix999FFycrI+pUeP
HnrNhQsXBuIVAAAAAACQ2bmU7q0kJSU1btxYVbv//vuvXr3qz5YDAAAAAADl
+PHjFSzKly9vDPUV7mrdurXVU/bt2zdz5swRI0Y88sgjev1evXoFpP0AAAAA
AECXlJSkR/X69es7qfnWW28ZvwfIkyfPZ599lpKS4remAgAAAAAAu9xO9/fd
d9+AAQMuXLjgt6YCAAAAAAC7zKf7DRs2jBw5sn///pUqVTL+gn/w4EG/tRYA
AAAAANgyn+6NPv/8c/1ZXbp08WkLAQAAAACAc2bS/ZYtW27dumWccvv2bf1Z
FStW9EtLAQAAAACAffdM95GRkTlz5nz44YeXLFkSFxcnU/7444/XXntNf1ab
Nm383moAAAAAAPD/OU/3iYmJVatW1StkyZIlf/782t99+umnAWk5AAAAAABQ
nKf75OTk119/XUK95kD37t1TU1MD0nIAAAAAAKAY033jxo3t1tmwYUOzZs3C
wsKMub569epff/31nTt3/NxgAAAAAADgifPnz2/dunXXrl2xsbGBbgsAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACQiWgAAAAAAAAAAAAAACADCPQRBAAAAAAAwB2kewAAAAAAgh3p
HgAAAACAYEe6BwAAAAAg2JHuAQAAAAAIdqR7AAAAAACCHekeAAAAAIBgR7oH
AAAAACDYke4BAAAAAAh2pHsAAAAAAIId6R5+tnz58rlz5549ezbQDQEAAAAy
nFOnTi1evPjGjRuZtgFBJzo6WgLOzz//HOiGkO5DVrJBoNvyNwUKFJA3m2T8
QDcEAFyQlpYm3emdO3dsH0pJSZGHUlNT/d8qR6SddlsrjcyAnwsAfEq6gn37
9q1cuTIyMjJD9VQeUr1ZKL0i5eTJk1mzZpXRcq1atTJnA7wl2SnvLuvjjz+W
NfaPf/zDu7N1A+k+JF24cMG4ZfPnz1+3bt0+ffr88ssvgW4a6R5AUNq4caP0
Xffff398fLzVQz169JCHXnzxRb81RoboO3fudDKm/ec//ylNkv42KSnJOP3V
V19VnwsXL170fTMBBNiePXsaNWqUM2dOfUxYqlSpWbNmBbpdXqD6ZNGzZ89A
t8XLVqxYoV5atmzZbt265fkMY2Ji5CPjzJkzgWpAoFSoUEFzbMuWLV5cFuke
PqWnexnaFS9ePEuWLPpW7tWrV2xsbADbRroHEIz0kaTtkYoq3T/33HN+a0zh
woXttkSn0r346aef9IlpaWkPPfQQ6R7IJKZOnZo9e3a1y0unUb16dQlr6r9v
vfVWoFvnqSFDhqjXki9fvsTExEA3x5uSkpK6dOlSvnz5999/3ysznD59uqyo
N954I1ANCJTatWs/cJcehfQp8rHuxWWR7uFTero/ePCg/PfWrVs7d+585pln
1MTmzZsHsG2kewDBKOOk+9TUVHXMpJl037t3b33i77//rn/ik+6B0LZmzRq1
s1epUmXfvn1qYkJCwpgxY3Lnzh0RERHY5nkoJSWlaNGiWbJkqVq1qrzGH374
IdAtytDGjh3rUroPSfny5ZOV8N133/lo/qR7+JRVutd99NFHavqPP/5o94nX
r1/fuXPnpUuXTC4oKirqwIEDVkd+WklOTt67d680Sf03LCzMTLqPj4+XOUtj
rl696mTpMud7fmErDZD1cOjQIZdOsblnA+STRRqwffv2M2fOpKWlOZnVrVu3
ZFbG/+7Zs+f27dvmGwMg4NxO9+b71WvXrkVGRkq35vxISOmUHLVEp9L9gw8+
aDw4X4Z26pguR+nefLemSDVpsN1rEQAIoNTU1Bo1asieXr16demCrB695zGc
svufO3dOuoIjR45It2C3jnRTu3fvlmreabGBDJBkzleuXHFSZ926dfLqateu
PWXKFPmje/fuTionJCQcPXp0165d97xGnLxw6aulxz558qSZPtDkQFSRavv3
7z9x4oSZOZthvsdWxzn4It27+jaQjSsbwvkHovnt5RKX0r2ZdqZbApe8AVS+
+OSTT5yne1dDlttI9yHJUbqXfV/6eZles2ZNq6csWbKkUqVK+jH8hQsXnjRp
klWXPnfu3Pz5848ePVrGisOHDy9fvryqnC1bttdff90241++fLlz58762V4P
P/zw4sWLixUrZpvupV964IEHmjRpIn/LmLNXr17333+/elbWrFm//PJLY2XZ
2aWbUgNUtfT69evL/mK7HmJiYgYMGKDPSmrmN3j++efda8COHTt69+4tw2Z9
38mbN+/EiRONQ1xZ89LCPn36jBw5Uq0BWV3SnlGjRuXOnVv+W7x48UOHDtnf
fgAyHjfSvZl+Vdy8efPTTz+tU6eOXlP+kG7N+K2gmDlzZoUKFUqWLKkfYShj
FWOf1qpVK72ySvcdO3bUDAfnlylTpnTp0jL2sE33Zro18cgjj8iCJBpMmDBB
ZqVqShcnQ2vbBAEgUL7//nu1ey5btsxMfRlWya69cuVK+XvevHkVK1bUu4JS
pUpZVf7tt99q1KihjiAShQoVkrGN1W8Wq1evlhkWLFjQdllhYWHykPGg6K++
+kqmjBgxIjIy8sknn8yRI4eas3RZK1assNvggQMHSgVZrgylVH8lkdC22vr1
6xs3bqy/FulaZSw6bNgwGaBa1ZSnv/nmm8Y+ME+ePM2aNbN7CXTzA9F0y9h7
zpw5lStX1teY9OHSOUswN1aT4XF+G/LhYneeJnvs8PBwWYdFihRRJ2jIv1bz
37Bhg3sNSDf3NhBVq1aV+cTHx0dERLRo0SJXrlyqvrzHtm3bZlXZ/PZyg/N0
71I7xYIFC6w+BOVjUXOQ7s0MBiQvSANke1l9Oo8dO1ZNv3btmslXqhmYfAoy
PkfpXnz99deqIzL2ADIoVfVl6NipUyfpo9Te2rp1a+Nzv/jiC5nYtm3bRo0a
qR25Zs2a0vup58q72lj52LFjRYsW1ftn6QH0s700m3R/8uRJzZJ/5S0tHaCq
I92m+ipgzZo1es2zZ8/qe5O0tm7duio733fffTNmzDDOMykp6dFHH1U9Xr9+
/fr27atitdpVhfGkM/MNUEc3KWXLlpVeSNaD+u/LL7+sV9u1a5fa37W7v5QJ
9UW6PjLv2rWr+W0KILBcTfcm+1Xpc4oXL65qSncq1apXry4dmvxXuizjRZCm
T5+uhlv6ibT3TPfTpk3T7h6cv337dvn7lVdekYSu/T3dm+zWhOrVZbilPkdk
GKOuACBkaOT8OC4AfjN69Gi1O5v8mfj555+X+pLr1dHFmiVYyXBLMk6DBg2M
NceNG6f3V48//rg+JKtWrdqff/6pV/vll180y2VIbZel+jfJhvoUNbyUnlB1
bvKHPmiUZsydO9dqDhKLVM+jYle5cuXkbwlQVtUkAquMJh1aly5dJH9Jl6V+
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
smXL6r1Z1apV33rrLavL2SkylO3du7d+jbg8efLIbKVntuqrXRqIqrVqt/I9
OU/3JntsnRfTvUtvg3THnxpq/h06dDBONL+93OBeurdqZ3R0tGqb7T0lbdO9
G4OBdMuJG6qpYtKkSW68UuP7wY2nI2Nyku4//fRTzXLIh/rWUZ0PIvo7YPzi
957pXkKrmtKrVy/NwQlfztP92bNnnbwu9aWB3X5SZqhZrr6iH74SGxtboUIF
mVikSBHZN1977TV1DZbKlSvfvHnT6ukmG5BuOemgYMGCmuULN/mIXLZsmaxk
Ce/NmjXTSPdA6DKf7l3qVxMTE3v27KnGhE2bNpXhgYwZzp8/r5/fZNsSV9O9
6vZr166tHrJN9ya7tXTH45+lS5dqlp+9uNcnkBGoy/vYvaqe6kDspnv9WHe7
9FyzdetW20fVzTiGDRum/uutdK/u9DRq1Ch9ivot1a5cuXLZDvCSk5NXrFgh
z9KzsIy+pB+2e6c/GQ1+8MEHjRs3Vo3ULL8jb968Wa/g0kBUnSJq/I7FPOfn
3ZvssXVeTPcuvQ3S75Wabefv0vZyiSfpXm/nH3/8oVq1Y8cOq5q26d6lwYBu
9erV+tX1ZUd245Uadwo3no6MyVG6l11GfScmHZeaIsNIVdPMrSrNp3vphzVD
mDXyJN2razdJT2vmoaSkJHVlPyPZPe1+B2g+3asV2K1bN6vTu0j3QGgzn+5d
6lf/85//aJY7a+gXaFI2bNjg6KM5MjJSPeTkftDGdH/58uUWLVroVxSxTfcm
u7V0x+OfSZMmaZbzEO/5egH4gX4cvu0N3dxO96mpqeokYtvLE0nyUtFJf+i/
//2vaoDtN37m072MWtWP8gsWLNCnqGuXvffee7sMtm3bpo59+vbbbx21Py0t
Tap17txZNeydd95x8mLj4uKmTZumejzpn/W+0aWB6LvvvitTSpYs6cYN7p2k
e/M9tk69artZ0tUGuPQ2SHc93etc2l5meCXdy/tZHeBhe4kG23Tv0mBAkY9m
dQV+dR1yifmyK5l8rs4YfFx9LjIsu+ledhP1Xa7QbzN68+ZNdbC6mfPNzad7
NV4V8iFirBkTE6PuduFeuv/111/tflpJkFd9nfEec+qCFUOHDpUBsAxx5SU7
uV2myQboVxiwOjFNOjR1jhvpHghV5tO9S/2q+h3K9p7C6iBPux/N0pGqh+ze
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
xcwlikofpZ84b5dK91WrVk23fHV58OBB6dm82FRp4bFjxyIiIqSbvedsVY8t
lc+ePet8jOd8IGrrwoUL69ev379/v0tHWTvi3kD0/PnzW7ZskS1y8uRJr4xg
Tb4NXOLS9gogyeay/mWDmlyTvghZdpHuEZLUZU+aNm1q91H1naftZawAAE44
OnYRANzm5I54AFxFukdIUncdrVChgvEyU8qOHTvUGVIcSgoALiHdA/A60j3g
RaR7hKS4uDg1Ci1duvSYMWO+/fbbpUuXfvrppx06dFCH5ffr18+N248CQGZG
ugfgdaR7wItI9whVR48e7dixY968ea2uoVGnTp05c+YQ7QHAVY8++mihQoV+
/PHHQDcEQOhYtGiRdCwNGjQIdEOAUEC6R2i7ffv2unXrFixYsHDhwq1btxpv
AgUAAAAAIYN0DwAAAABAsCPdAwAAAAAQ7Ej3AAAAAAAEO9I9AAAAAADBjnQP
AAAAAECwI90DAAAAABDsSPcAAAAAAAQ70j0AAAAAAMGOdA8AAAAAQLAj3QMA
AAAAEOxI9wAAAADg3KlTp+bOnbt8+fJANwT2yQZavHjxjRs3At2QQCLdAwAA
AKHqzp07+/btW7lyZWRkZGpqaqCb428JCQnywuXlnzhxIi0tzZNZffHFF5KY
qlSp4q22wTmXtt3JkyezZs0qG6hWrVr+aV7GRLoHAAAAQs+ePXsaNWqUM2dO
fbRfqlSpWbNmBbpdfhITE/PKK69kz55df/kFChR45plnLly44N4MSfd+48a2
W7FihaqZLVu2W7du+bO1GQrpHgAAAAgxU6dO1cNR4cKFq1evLqlH/fett94K
dOt8LjExsU6dOur13n///TVr1gwLC1P/lT/Wrl3rxjxJ9/7h3rZLSkrq0qVL
+fLl33//fT83OEMh3QMAAAChZM2aNWp4L1F03759amJCQsKYMWNy584dERER
2Oa5befOnS+++KLt9B9//HH06NHGKZMnT5aXnz179vnz59+8eVNNlFXRoEGD
okWLnj171o2lk+4V81vBPb7YdpkH6R4AAAAIGampqTVq1JCxffXq1a9fv271
aGxsrPOnp6WlnTt3bvv27UeOHElJSbFb59atW7t375Zq3mmxwe3bt2XOV65c
sfvoqlWr/vGPf9hOnz59eqdOnYxT2rdvL2uge/fuVjVl5XjryPzExERp6tWr
V50/Kzk5+eDBg4cOHZI/zC8rPj7+wIEDkqOdzD8qKmrv3r3SDPOzNcP5Jkh3
ZSu4xxfbzm2yB8lWuHTpkp+X6zbSPQAAABAyvv/+ezW2X7ZsmZn6Q4YMyZ8/
/8qVK+XvefPmVaxY0XievlXl3377rUaNGuryZaJQoUKjRo2SPGiss3r1aplh
wYIFbZcVFhYmD23cuFGf8tVXX8mUESNGREZGPvnkkzly5FBzLlOmzIoVK/Rq
mzZtmjt37htvvPHQQw/NtdGrVy/Jm/KHtF+F6DZt2shMmjZt6vy1u9RUle7l
5UtUf+KJJ/QTH8qWLfvzzz/bziEmJmbAgAH333+/fj54foPnn39er3nmzJkH
HnigSZMm8vfFixfl5ejPklX95ZdfGmd748YN2WQFChTQZ1u/fn1JoL7eBOmu
bwX3mNx2olixYvlt9OjRw7bmrVu3bGsaHTlyxOopS5YsqVSpUpYsWfTTWyZN
muTo+66Mg3QPAAAAhIzRo0eryGnyEvESM6W+JLKPP/5YhQJJNKVLl86VK1eD
Bg2MNceNG6cq5MmT5/HHH5c66r/VqlX7888/9Wq//PKLOmPadln33XefPPTb
b7/pU1RkLl68uArL8ofEZ3WJAGmGREVV7Z133mnVqlWtWrVk0a1sVKxYsVCh
QupvdUM0qa/aNnDgQGPbrLjRVKEuVOioqUpSUtKjjz4qD+XNm7dfv359+/bN
nTu3enpFC+PVD06ePCnTy5cvL9G+cuXKqprkd0mv8seaNWv0mmfPntVXe4UK
FerWrasaI62dMWOGTzeBG1vBEYnSEydOdPSoyW2XbpPu1bOefvpp25qJiYkS
z60Svf4VijTb6hiJ5557Tl/JnTp1ql+/vvpGq3Xr1k7akxGQ7gEAAICQ8cwz
z8jAvm3btibrq3Rfs2ZN+bdSpUqzZs1Sxz9LPo2KitKrbdu2TQWcnj17xsfH
q4mLFy+WoCcTX3rpJb2me5H5oYceWr9+vZoYHR1dtWpVzXLwgDRDr2z+mHBp
oZqDyJcv39ChQ0+cOGH7RN81VZqkFn38+HE15dChQxLwZbZ79uyxWpZK95LT
1Y/FgwcP3rhxo/qZWDaB8dAIddS6pFH94nJxcXESOWVirly59Nfou9eV7o0j
8zds2CAv9vXXX7f7qMltZ0tm6Cjd20pNTe3SpYvUl42ydetW40MzZsxQX5jI
vqB/RRYREfHAAw+o78HMzD9QSPcAAABAyKhdu7YM7IcMGaJPOXbs2McGkuaM
9VW6F4899phERUezbd68udQJDw+XWGScPnXqVPV0Pca6ES2LFSsWExNjrLl5
82Y12+XLl+sTXcqV165d69Wrl34SgaTmDh06bNu2zVjHd01VP/4at4Lo16+f
TBwzZozVslS6V5yER4n8qs6iRYuM0xMSEkqUKCHTZaG+fl3pXjrvXmaSI0eO
N954w+6jZradLZfS/SuvvKIivNXZB4mJieoLK9ujC6ZMmSLTmzVrZmb+gUK6
BwAAAEKGSveDBw/Wp0gYNI75w8LCjPVVus+XL9+pU6eczFYd+Tx79myr6bdv
31bHnH/33XdqihvR0u6F6EuWLCkPffTRR/oUN3LlsWPHZFWovKZIotS/oPBu
Uz/88EN9SteuXWXKs88+a6zWsWNHq02j6On+5ZdftvsqFJm/1CldurTtORcT
JkzQLIde+OJ1GTdBuveuqrdy5UoJ+G+++aajCs63nS3z6V5dll/MnDnT6qEd
O3ZolqsZ2H7TtXfvXnmoaNGi95x/AJHuAQAAgJDRrVs3Gdi3a9dOn3Lw4MFx
FgMGDHCU7vv27etknqdPn1Z54ffff7d9VF2if8SIEeq/3oqW9evXl4deffVV
fYrbufLatWvvvfdeoUKF1Kv45JNPfNHUoUOH6lMkEcsUSa/6D+KXLl1SJ3p/
9dVXVk/X072sZyevQraR1GnZsqXtQz/88INmuQRfQkKC11+XcROkm94KqSas
WLFCGjls2DAnr9rRtrNlMt0vWLBAXSvP9iAKMWvWLLWg7Db01JyRr61HugcA
AABCxsiRIzUHV9XbvXu3o3Rv9w7muujoaJUXrM5QViTryUN6RvNWtKxevbo8
NGrUKH2Kh78aS9CuVq2azLNy5crebWp4eLg8ZLzbe2xsbIUKFWRikSJFJHW+
9tprhQsXVovW7+Gu09O985u5v/DCC47S/fLlyzXLEey3bt3y4uuy3QTp5rbC
/v37NVf88MMPTl54ur1tZ8tMupcXrnJ6v3797FZQJ92L/g7YHnqRoZDuAQAA
gJChH4dve5s2t9N9amqqOkDa9qzwlJSUfPnyGR/673//qxpgdae8dFeiZXJy
ct68eeWhBQsW6BM9PyZ85syZmuVsa3WAt1eampSUpM5NMDZVJj711FNWGVaC
p/FChTqT6f7999/XLJfWv+dDvtsE6ea2wp07d46b8N1332mWywU4Od5eZ7Xt
bN0z3e/fv1+dYNK2bVtpod06ERERatWdO3funk3KgEj3AAAAQMiQuC1JTcb2
jz76qNXPxG6ne9GwYUPNcuU9q+lffvmlihIHDx5UU/TfbeUPY83Zs2er6Wai
pf4T6qFDh+S/33///fjx4yUGFilSZLyNNm3aVKpUSf6YMGFCYmJiuuUCaEuW
LLF9FVJH5vnwww97samff/65samKugLb0KFDr1y5snbt2o0bN16+fNnRujWZ
7n/99Ve739skJSWVLVtWpnft2tWLr8tqE6S7vhWc27Nnz4MPPtijRw+rA91N
bjtbztP96dOn1bUH5T2sjnCwS3YZdQKF82sgZFikewAAACCU/PTTT2p4X7Nm
zcjISDUxISHhjTfecDvdSx5UZysPHjxYv0XaqlWrZG4ysXv37nrN69evq7ul
d+7cWdWMj49Xl31zFC1lzv3797927ZqaKDFWzVaPq7NmzRowYECrVq1k+gAb
jz/+eOnSpdXfsqzFixerBclLk5evfuq9cOGCZFv1I7ssy5OmvvTSS/ol19as
WaNulNatWzfj6pLQqv39RoFOmEz3aWlpzZo1k2olS5bULyAvQVXdA1Eyqb6t
fbEJXN0Kzl/y3r17JdpLy62ivfltZ8tJupftpe6yV758eSdfsyiTJk1SbRg/
frzx4IejR4/KItSVDTIs0j0AAAAQYiShqHwnJEaFh4fnypVL/bdNmzbGmibT
ffrd9KRZziVv3bp19erVVd5/+OGHr169aqypbv2mWe6zVq9evRw5csjf8hR1
PX+7N1sXefLkadKkicxW3QqtaNGiVleZM3lkfkxMTPfu3fXZ5suX75FHHtH/
K39L+HW7qerIdmlqo0aN9DVg29T//Oc/+spv3Lhxa4v27dv37t178uTJVrcn
MJnuxR9//KHO35dmSAtbtGihMriQ2fphE5jfCk7s37+/YMGCXbt2tT083qVt
Z8VJun/iiSf0mZSyZ+nSpXrl1NTUdu3aqcrFixeXrSZNkvWm1omTy/plBKR7
AAAAIPRs2bJFj3Wa5cfZihUrSpSzutpenz595NGBAweamaeEIMnyenzImTPn
kCFDbC8TFxsbK0FPr1aiRInhw4dLlFP3iVu/fr1eU0XLGjVqyB8ShFV9iVES
ry5dumQ12zVr1tSpU8e2VfLcLl26WE38/vvvJYCrM8eVXLly/fvf/7a605n5
pqqrqY8YMWLmzJkqYjtp6o0bN4wryoq0xHj3gaioKDXddj62rl692qtXL+Ml
3KtUqWJM666+Lpc2QbqLW8Euee19+/Z1dOZ7uultZ0VeoNS024aCBQs62haK
NN7qKfPmzVPnO+jKlSsn0Z7f7gEAAAAERHJy8r59+3bu3Gmbwd0moW/dunWH
Dh1yfmuwK1eubNq0yXg2ui0VLatWrZpu+c304MGDu3fv9mJTZZ5Hjx6VOHnq
1Cknl24z01SjtLS0w4cP79q1y25TZbXUqlVLAvLkyZMlue/du3ePxcqVK6dM
maKOqTBzsIQTarNu2LBBUryTahlhE7jN5Lbzqbi4OFkb27dvd3LMQIZCugcA
AAAQEE5uxxa81OXvmjZtavfRjh07yqM9evTwb6McCslNkGmR7gEAAAAEREhG
S3X3+QoVKugXqdPt2LFDnSk/d+7cgLTNVkhugkyLdA8AAAAgIEIyWsbFxRUt
WlReV+nSpceMGfPtt98uXbr0008/7dChgzosv1+/flZXPwigkNwEmRbpHgAA
AEBALFq0qFChQg0aNAh0Q7zs6NGjHTt2NF4XTqlTp86cOXMyTrRPD91NkDmR
7gEAAADA627fvr1u3boFCxYsXLhw69atFy9eDHSLEOJI9wAAAAAABDvSPQAA
AAAAwY50DwAAAABAsCPdAwAAAAAQ7Ej3AAAAAAAEO9I9AAAAAADBjnQPAAAA
AECwI90DAAAAABDsSPcAAAAAAAQ70j0AAAAAAMGOdA8AAAAAQLAj3QMAAAAA
EOxI9wAAAAAABDvSPQAAAAAAwY50DwAAAABAsCPdAwAAAAAQ7Ej3AAAAAAAE
O9I9AAAAAADBjnQPAAAAAECwI90DAAAAABDsSPcAAAAAAAQ70j0AAAAAAMGO
dA8AAAAAQLAj3QMAAAAAEOxI9wAAAAAABDvSPQAAAAAAwY50D29JSUmJiop6
++23x48fPwEIHrt3746JifH1DtIfADI2X3eDAABfI93DW5KSbq9b90v27Fqh
QjmKFKFQgqb85z/fHD9+3Nc7iIycq2r/zITl1amaJ+Xttz0queM9Kv2+8qg8
N9+j8nVf98vL0zwqjTZ7VAZ+4VGZMNqj8uYHHpX+M90vHr7b2/7iUalwwqNC
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
3oSEhOrq6vb29t7e3qampvT0dD5Og47zbTZbVVXV0qVLZ9X92rVraTAmJqam
pqbrampra+Pi4mgwMjJSsm9kf38/n+9R3WdnZ9Pyw8PD9+7dazAYSkpKoqKi
aCQjI8NDjyhUoHvVA917aQYH33jrrRWpqSvS01H/6okTH2nwdi50D91D99A9
dI/4Z6B7jSv5zjuGfM2dnpWVNTEx4XiT1WrNycnhm7ntm+8vXLhgV7+z7kdH
RwMDA2mwqanJcVGtra188pkzZ+yDer0+JCTEvhwP6X5ycpLvllBRUWEfrKur
4w/qfFiB7wW6Vz3QPYIgzoHuoXvoHrqH7hH/DHSvcSXfecfs37+fb1Wf9ZjE
gYGBoKCgmJiY3t5ePvLee+/RfPJyZWUl3STRfU9PD1ez8wH7mZmZqampxGr7
SEBAAM1MS0vLz893W/fT09N5eXltbW1zTaBnnpSUFBERMTw8bB+cmJiY63n6
XqB71QPdIwjiHOgeuofuoXvoHvHPQPcaV/KddwzJV17WQ0NDjp9++OGHhPH+
/n76mG8Td9S9zWaLjo6mQZ1O19zcLNkZQBJyfWNjo9VqLSsrc1v3LS0tdN+w
sDCXnH7q1Cm6V0BAgMViceNBvSvQveqB7hEEcQ50D91D99A9dI/4Z6B7jSv5
zttDGOfb3/V6vRs/R+dt9xQCOx9fcvWkfBkZGaWlpR0dHfRYcy3n4MGDSvbM
37ZtG9/9oKenZyHzx8bG+HsaGzZscO8RvSvQveqB7hEEcQ50D91D99A9dI/4
Z6B7jSv5zttz+fJlzvDW1lbH8YKCgpxr2XY1kgk8s+qeYjAYVq1aJTlHvU6n
s+/eL4lC3dvPuh8dHX3+/Hn5yWazec2aNTQ5NDR0YGDAvUf0rviA7q1W6/j4
+NDQ0GUxcuDAgZiYGOgeQRDHQPfQPXQP3UP3iH8Gute4ku+8PeRiTu/Dhw87
jkdEREhsTgB3/jnOpXue4eHhurq63Nxcvq8+B/WsB8jPq3tiXaNs+L79lLi4
OJkTI9Ny+PsAwcHBs75f4ZPxAd339fWtX7/+kUceeVaMPPTQQw8++CB0jyCI
Y6B76B66h+6he8Q/A91rWYnTJT+L8PBwGszLy3McPHr0aO218J3YF657i8Uy
OTnpOGKz2WiBkZGRNDknJ8d5OfPqvrm5ecmCk5ycPOtCSIj8wnxhYWEGg2Gu
x/K9+IDu29vbQ0ND//Ef//EOMXLzzTffdddd0D2CII6B7qF76B66h+4R/wx0
r3El33nHbN68mQaJ8JIr0duzfv36het+69atNFJUVOQ8uaqqim6Kiopyvmle
3Xd1deXJhh96v+TqifIkF+Pj6e7uXr58Od+4v8DD830mPqD7PXv2xF1NlRhZ
u3btiy++CN0jCOIY6B66h+6he+ge8c9A9xpX8p13zMmTJ7mLt2zZ4gx8q9Wa
lpa2cN3r9XoaiY2NNZvNkskVFRV0U2pqqvNyFB53T8nNzeW0r6+vd7713Llz
fBeFlJQUySUA/CE+oPt33nnn5ZdfXr169adihF5vy5Ytg+4RBHEM/ZZZRGI/
9q95i9X415iSKtRW2cOKeuwORVX46Pt+5X7XhSnqe48patvXFPXVREV9c5mi
7nrS/TbcpaiZSxVVyTOnQveI5wLdi6N7CrmeAz8rK8tgMPCLxI2Ojh4/fjw5
Odml4+77+/v5/KSkpLNnz/K3C+jfhoaGsLAwGi8pKXFejkLdV13dK4BSU1Pj
fKvNZuNvUKxYsWJkZGT6z+PeI3pXfEP39IoiTU+KkbKysvj4eOgeQRDHQPfQ
PXQP3UP3iH8GuhdK9+Pj45mZmfbj1sns9vPgUQIDA3fu3EnYd77jrMfd19XV
BQcHOy7KfoG81atXk6+dl6NE9yaTSf6ifvLH7M96lj8fi2/ofsWKFVu2bFns
J/L/givieWN6e3vpv4suxC9Dv8KmpqY8/RqD7qF76B66h+4R/wx0L5Tueerr
6/ml4uyJjY0lT8kcpR4SEkLTBgcHJeNEZlrUsmXL7IuKj48vLCyc64+r8vLy
JU5n9ltgBgYGaOG0hLkmlJSUyOi+vb3djQf1rkD3qge698b8/Oc/v/HGG2+4
4YabEP9LQUGBBu/lQvfQPXQP3UP34uSzzz47ePAg/Q357rvvdnd3zzt/eHhY
r9fv3Llz3759TU1NNpvN1Qn+HOheQN3zmM1m4rzJZJp1Y71Lodd8X19fZ2fn
rNvrVczkn5+iH5EEulc90L035vvfv/PHP/7bhx76wiOPfBH1t5aVFS/kTzuF
ge6he+geuofuBckHH3wQGBho35wXEBBAf7zJzD9x4kRoaKjjFsDXXnvN8TRi
807w80D3wuoe8b1A96oHuvfG3HjjP3z4IWtv/z8dHajf9fLl0xq8DwzdQ/fQ
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
7lH/rlGDVQy6h+6he+geulcxpPvhLzCZxkL3wgS6F0f3/f393OlZWVkTExOO
N1mt1pycHL5J3b75/sKFC3b1O+t+dHSUbxmXnGiitbWVTz5z5gx9Ojk5yXcV
qKiosM+pq6vjc5x39Vcr+fn59qcN3XtRoHtVcvbsa1u3fv6pp9i5c/O3rY3l
5vrUnvmof9eowSoG3UP30D10D92rGNL90BeZTKF7cQLdi6P7/fv3863qs55x
aGBgICgoKCYmpre3l4+89957NJ9sXllZSTdJdN/T08PtbHI6YD8zMzM1NZUI
Tx/T0pKSkiIiIoaHh+0TJiYm5rqvTKanp/Py8tra2uadeeLECVp4XFzcmjVr
oHvvCnSvSj79dMXWreyZZ9j4+PwdGGBFReyBB6B71Ddq1GAVg+6he+geuofu
VQzpfvDvmEyhe3EC3Yuje1I2DW7fvn2uH9bQ0JDjpx9++GF+fn5/fz99zLe/
O+reZrNFR0fToE6na25uluwMIJ9Tp04tuXrtSIvFsvB7tbS00L3CwsLk3xMY
Hh6OjIzkOw9s2LABuveuQPeqhOv+j39ckIYI+Pv3+9Q581H/rlGDVQy6h+6h
e+geulcxpPtLf89kCt2LE+heEN0Txvn2d71e78bP0XnbPaWxsZGPL7l6Ur6M
jIzS0tKOjnnOaDQ2NsbfZyB6u/o0tm3bxnc/cLyQpSRc9Lt377Z/DN17UaB7
VeKS7s1m5mNXxEP9u0YNVjHoHrqH7qF76F7FkO4vfonJNPZp6F6UQPeC6P7y
5cuc4a2trY7jBQUFOdey7WokE3hm1T3FYDCsWrVKcj58nU5n371fErPZzPeW
Dw0NXfglKe2xWCwpKSl09+jo6PPnzztPqKqq4k9gcnLyCnTvhYHuVQl0j/px
jRqsYtA9dA/dQ/fQvYoh3ff/I5MpdC9OoHtBdE8u5vQ+fPiw43hERITE5gcP
HnT+Oc6le57h4eG6urrc3Fy+rz7Hu/MB8kNDQ9zmwcHBs76HwOc0yqasrIw/
RFxcnOT59Pb2hoSE0FPt6uriI9C91wW6VyXQPerHNWqwivmt7p/JY0qqUPcP
vq+o/3FWUe9qUNSHyt3vki2K+p1mRX1it6K++JaivhGuqEreGXiqUFFXvqKo
f8pWVG/U/YV/YjKF7sUJdK9lJU6X/CzCw8NpMC8vz3Hw6NGjtdfCd5hfuO4t
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
upoGHecEBASUlpbaJ3R3dycmJjovKj4+nm5yfmiLxZKSkkITtm/frtorbI5o
+VjiBLpHeLq7Z3R/3XXsT39CPdvHHmMPPMDS0hadtKi9Rg1WMegeuofuoXvo
XsWQ7o9/m8kUuhcn0L1Qutfr9RzgCQkJhPf29vbe3t6mpqb09HQ+ToN8Zk9P
D6d9RkZGY2PjRx99lJmZyecYDAY+Z+3atfRpTExMTU1N19XU1tbGxcXRYGRk
5PT0tOND9/f38/kaiFvLxxIq0D3C09u7IjeXfelL7PvfRz3b225jd9wB3QtV
owarGHQP3UP30D10r2JI9823M5lC9+IEuhdH92TepUuX0nhWVtbExITjTVar
NScnh25KTEzkm+9pLZMgncZffvllGiwsLKRPR0dHAwMD6dOmpibHRbW2tnJW
nzlzxj6o1+tDQkLsG/c9Km4tH0u0QPcIj8WyorOT5eeznTtRz5bE8dxz0L1Q
NWqwikH30D10D91D9yqG3NH0P0ymy5+D7kUJdC+O7vfv38/BPutx8QMDA0FB
QTExMfxKwbt27aKP6V/HOUVFRbSEzMzMK1c37nM+m5wO2KcJqampdXV19pGA
gACamZaWlp+f77a4p6en8/Ly2tra5Kep8lheGugeuZY3zOYb2tpuOHUK9Wzf
fvuLERE47l6oGjVYwfxW91HpTEkV6j44S1H/6YKiKmSmEt0rfOin8xX17lpF
VfiOUEKKov56r/t9qlBRf1ukqP/5qaJ6o+6P3cFkCt2LE+heHN0nJSXJa3do
aEj+p0lkpiXs27ePPrbZbNHR0fSpTqdrbm6W7AzgfMfGxkar1VpWVua2uFta
Wui+YWFhzu8nqP5YXhroHrmWQZvNODVltFhQz1avD9fpoHuhatRgBYPuoXvo
HrqH7lUM6f7od5lMoXtxAt0LonvCOD+OXq/Xu/ejrKqq4ifW6+jo4COEaPtp
9+iDjIyM0tJSupUea66FHDx4UIm4t23bxnc/6OnpmXeywsfyxkD3CKJxDh9e
Qbp/9VU2MYEKUatV7neQWoHuoXvoHrqH7lUM6b7xTibTSOhemED3guj+8uXL
nOGtra2O4wUFBTnXsu1qJBN4mpub+R7vkn31DQbDqlWrJOfM1+l0fPd+5ygU
t/1M+NHR0efPn5efDN17Y6B7xLtCuo+JYb//PWtuRoVof/9Js9ns6Z87dA/d
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
PVOjBq9ev9X9theYkirU/f0Viro0U1Ffi1fUZW+6XyXvDFAfL1bUmzoU9Y1w
Rb3nsKLKg1G+Cr9whStLzvOK6o26L/otkyl0L06ge6F0r9frOa4TEhII7+3t
7b29vU1NTenp6XycBvnMnp4eTvuMjIzGxsaPPvooMzOTzzEYDHzO2rVr6dOY
mBjic9fV1NbWxsXF0WBkZOT09DSflp2dTSPh4eF79+6l+5aUlERFRfEle+6F
Z7FY7O88QPdeFOjefwLdo56pUYNXL3QP3UP30D10r2JI9/K7UkD34gS6F0f3
/f39S5cupfGsrKyJiQnHm6xWa05ODt+kzjff01omQTqNv/zyyzRYWFhIn46O
jvIt401NTY6Lam1t5aY+c+YMfTo5Ocl3FaioqLDPqaur43NoISq+2ByTn59v
308AuveiQPf+E+ge9UyNGrx6oXvoHrqH7qF7FUPu2PUkk2kodC9MoHtxdL9/
/34Odufj4ikDAwNBQUExMTG9vb306a5du+hj+tdxTlFRES0hMzPzytWN+9zO
JqcD9mlCamoqEZ4+pqUlJSVFREQMDw/bJ0xMTMx1X5lMT0/n5eW1tbXNO/PE
iRO08Li4uDVr1kD33hXo3n8C3aOeqVGDVy90D91D99A9dK9iSPfyZ66A7sUJ
dC+O7knZNLh9+/a5flhDQ0PyP820tDRawr59++hjm80WHR1Nn+p0uubmZsnO
API5deoUP4rfYrEs/F4tLS10r7CwMPn3BIaHhyMjI/nOAxs2bIDuvSvQvf8E
ute+k5MsN5etW8feeMNne/Jk9cDAgKdfvdA9dA/dQ/fQvYoh3Rf8jskUuhcn
0L0guieM8+Po9Xq9ez/KqqoqTvKOjg4+0tjYaD/tHn2QkZFRWlpKt9JjySxn
bGyMv89A9Hb1OWzbto3vftDT0zPXHC763bt32z+G7t2IbZGyY8cO6N5PAt1r
37Ex9qMfsVtvZbfd5rMtKiqw/5LyXKB76B66h+6hexVDun/nf5lMQ1+C7kUJ
dC+I7i9fvswZ3tra6jheUFCQcy3brkYygae5uZlcT3eX7KtvMBhWrVolOR++
Tqfju/c7x2w2873lQ0ND3di8YrFYUlJS6O7R0dHnz593nsDfgqAnMDk5eQW6
dzf0faafzoXFyKZNm+Lj46F7fwh0r3FtNnbhAvvOd9iaNay42Gfb2Xl01qPP
1A10D91D99A9dK9iSPc7/sBkCt2LE+heEN2T1zi9Dx8+7DgeEREhsfnBgwcl
P0QiM6f9m2++Oet16oeHh+vq6nJzc/m++hzvzgfIDw0NcZsHBwfP+h4Cn9Mo
m7KyMv4QcXFxkmvq9fb2hoSEBAUFdXV18RHo3r3QN/bs2bOffPLJac2zZs2a
qKgo6N4fAt1rr/vPPmPf/Cbbs4cZjT7bkZHT/N1djwa6h+6he+geulcxpPv8
p5lMoXtxAt1rWYnTJT+L8PBwGszLy3McPHr0aO218B3mJbrft28fX9rWrVsl
fzJZLBbJiM1mowXyw95zcnIcb+rr6+MXywsLC7NfU885zc3NSxac5ORkx/vy
0wKsXLmy7lp0Oh1/JvSxBkdiLnrU0v3LL7/8wAMP3HfffT/XPLfffvsvfvGL
jRs3qvU9QYQNdL8ouv/2t9mHHzKz2Wc7PT3P0WGqBLqH7qF76B66VzGk+7xn
mEyhe3EC3Quy7Z6yefNmGiTC2y9yJ8n69esddU9/IL3zzjvc0Xv27JH8vUTY
p/GioiLn5fDd46Oiouwj3d3dy5cv5xvcZQ6Zp3R1deXJhh96v+TqGQAkF+Pj
DzFXmpubZR7XN6KW7h9//PGbbrrp5ptvvlPz/Pu///vDDz8M3ftDRNP91BQb
H/fl0ve5o2NG90eOLP5325M1avDqhe6he+geuofuVQzpfvuzTKbLoHthAt2L
o/uTJ09y527ZssUZ+FarlW/7tuueKM0RXV1d7fyT1ev1dGtsbKzZbJbcVFFR
QTelpqbyT8+dO8d3G0hJSZn3tPzzJjc3lz+r+vp6yU0HDhzY+eehp0eT09PT
6WP5dxV8I2rp/pFHHsnKympqaurWPG+++WZcXBz2zPeHCKX7yUnW3T2zUduH
W1k5s0/+LbdA9yoEuofuoXvoHrpXMaT73OeYTKF7cQLdi6N7CqGJA5/sZjAY
+AXpRkdHjx8/npyczG/iuucXraPU1tZO/3msVitN6O/v5xOSkpLOnj3L3y6g
fxsaGsLCwmi8pKTkytUdAPibBitWrBgZGZEsytWXE98rYMmCD6XHcffu5eGH
H965c+dcp0b0aHBFPGFDK+zg4OBF9fLppwe2bmWPPiqE7kdGWH09e+cdtmuX
z7awkG3ezP7rv6B7FQLdQ/fQPXQP3asY0r38VwTdixPoXijdj4+PZ2Zm2ndW
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
HrqH7qF76F7FkO7lr40YHATdixLoXhzd79+/n29Vn/W4+IGBAZJ7TEwMNx3Z
fM+ePbW1tfYJly9f5l7mm0V6enr4p84H7GdmZqamptbV1dlHAgICaGZaWlp+
fr7bup+ens7Ly2tra5OfJv9Y9BXR4Pr16914AuIHukc8FA/pPi+P3XrrzHbz
U6cWuTt3su99zy90Tz/H559nAQEsJcU3+9FHlRcvXvT0GgHdQ/fQPXQP3asY
0n1KApMpdC9OoHtxdM93rZeRteMx9ZKMj4+//fbbdHdaCB+x2WzR0dE0otPp
mpubJTsDSELWbmxstFqtZWVlbuu+paWF7hsWFjbrCQAX+FiEVhrMzMykL2fV
qlWvv/76nj17Ll++7MbzETDQPeKheEL3Q0Nszx72n//J3n6b7dq1yH3tNfbd
7/qF7gsL2QsvsPh4lp/vm/3007rh4WFPrxHQPXQP3UP30L2KId2/mshkCt2L
E+heEN0Txvnx5nq93qWf4IULF9LT0/l9ly9ffvbsWftNhGj7affog4yMjNLS
0o6ODnqsuZZ28OBBJXvmb9u2je9+0NPTM+/kWR9rzZo1zqfUowV2dna695SE
CnSPeCie0L3Fwo4dYzfcMMPqu+5a5H7rW+y22/xF92FhM++rTEz4Zq1Wud9B
agW6h+6he+geulcxpPuVrzCZQvfiBLoXRPf2/epbW1sdxwsKCnKuZdvVSCac
OHHCruCoqKiWlhbHWw0Gw6pVqyRY1ul0c8FQoe7tZ8KPjo4+f/68/GTnx6I/
+UJDQ/npBZqamuhJNjY28j0QkpKSJicn3XtW4gS6RzwUT+h+epp99hl7/XWW
mcmysha5sbHsjjv8RfcREezAgcV/Jh6rUYM1ArqH7qF76B66VzGke10Sk2kQ
dC9MoHtBdE8u5vQ+fPiw43hERITE5oRixwlk3v7+fiL/5s2b+YRTp05JfsrD
w8N1dXW5ublcyhRC9KwHyM+r+6GhoUbZ8P3tKXFxcfInRp5V9x9//HFlZaXj
fpsdHR38UP3Tp0/LLM0rAt0jHoondC9U/eec+dC9KoHuoXvoHrqH7lUM6X6F
jskUuhcn0L2WlThd8rMIDw+nwby8PMfBo0eP1l4LPzBfonvHELtoQn5+Pv/U
YrFItncTn2mBkZGRNC0nJ8d5CfPqvrm52XnP+bmSnJws89pb+H4C/Oty9ZgF
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
R2dAveg9f56lpbFly9TXPfXChZlDLYzG2fvpp+y11+gvQ+heLtA9dA/dQ/fQ
vYoh3QdnMZlC9+IEuofuEc0C3SOuBrrnJd3feSc7dWqGtJcuLX5J2a++6ind
yxfnzF9IoHvoHrqH7qF7FUO6D9rIZLoEuhcm0D10j2gW6B5xNdA970cfsZ/8
hIWHK9WHWo2LY488MvNzWSzdP/EE++STmV0IvK7j44bp6WlPrzjQPXQP3UP3
0L2KId3LvxKge3EC3UP3iGaB7hFXA93znjo1c6K5L3yB/d3fsb//+8UvPY0v
fpEFBCya7u+/n1VVsZYW7+vAwCmLxeLpFQe6h+6he+geulcxpPuAzUym0L04
ge4F1P3g4GBZWdm6deuIUQkJCZmZmcXFxSaTyXlmX1/fvn37Nm3aROZqbGwc
Hx+XTDCbzYcOHcrOzqZF6XQ6+qC8vHxkZEQyzWq1NjQ0FBQUZGVl7dixo7q6
empqyv1X1cIyMDBAX1plZaWnH0icQPeIq4HuecfG2MmTrKaG1dYK0fffnzml
XkjIIuh+epo1N7P/+i/2i1/MbMH3uh46tP/cuXOeXnGge+geuofuoXsVQ7p/
aSuT6ZJl0L0oge5F031VVVVwcPASpwQFBRH5ieH2mfX19TToOCc5OXloaMg+
obu7OzEx0XlR8fHxdJN92tjY2MqVKyVz6I6XLl1S/wV3LRaLJSUlhR5o+/bt
nnsU0QLdI64Guheznjtn/ry12WaO+r/tNnbHHTOXxvO6FhcXGo1GT6840D10
D91D99C9iiHdy69B0L04ge6F0r1er+e4TkhIqK6ubm9vJ8E1NTWlp6fzcRrk
My9cuMDfBNiwYUNLS0tdXV1SUhJ9+vrrr9uXtnbtWhqJiYmpqanpupra2tq4
uDgajIyMtB/5mJ2dTSPh4eF79+41GAwlJSVRUVE0kpGR4aFXXX9/P39u0L17
ge79J9C9mF1E3VPNZlZfP3OVwKNHva/9/SfNZrOnVxzoHrqH7qF76F7FkO7l
X4fQvTiB7sXRPZl36dKlNJ6VlTUxMeF4k9VqzcnJ4ZvU+eb70tJS+jQiIsJ+
AOPJkyf5Jn7+h9Po6GhgYCCNNDU1OS6qtbWVs/rMmTP06eTkJH+XoKKiwj6n
rq6Oz6GFqPhi49Hr9SEhIfadBKB7NwLd+0+gezG7uLr38ho1WHGge+geuofu
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
3UP3KoZ0f1cDkyl0L06ge0G23VM2b95Mg0R4yZXo7Vm/fj3XfVVV1bym3rp1
K31cVFTkvBx+96ioKOeb5tV9V1dXnmz4ofdLrp4oT3IxPp7u7u7ly5fzjfsL
PDzfZ+IDujcajW+88cavfvWrMESTvPTSbx9+mL300uLjFFXYqiqWkcGSk9nK
lX7d5mb9xYsXPf0/FXQP3UP30D10r2JI93c2MplC9+IEuhdH9ydPnuQu3rJl
izPwrVZrWloa1317e/vOP8+mTZv4Xu708fvvv3/l6iXsaSQ2NtZsNksWVVFR
QTelpqY6vx7m1f28yc3N5bSvr693vvXcuXN8F4WUlBTnSwD4fHxA92NjY8XF
xcuWLVuOaJLAwKcefRS694VmZ8+cHfG559gLL/h1q6tLNfi/C7qH7qF76B66
VzGk++8eZTJ9bjl0L0qge3F0TyHXc+BnZWUZDAbL1YvEjY6OHj9+PDk5md90
8Opx95I4H3ff39/P5yclJZ09e5a/XUD/NjQ0hIWF0XhJSYnzchTq3r5TQU1N
jfOtNpuNv0GxYsWKkZGR6T+Pe4/oXfEB3dMPkV6Q9Oq6iGiS1tYD6ek4q54v
9L77WHw827x5hvn+3NOnazV4axe6h+6he+geulcxpPs7jjGZQvfiBLoXSvfj
4+OZmZn2feyDgoLs58GjBAYGkunIVs53nPWsenV1dcHBwY6Lsl8gb/Xq1eRr
5+Uo0b3JZJK/qJ/8MfuznuXPx+IDukc0Dq6I5zO9446Z/dKLitj+/X5do/Ho
rL991A10D91D99A9dK9iSPffaWIyhe7FCXQvlO556uvr+aXi7ImNjd2yZYvM
UepdXV00LT4+XjJOZKZFLVu2zL4omlNYWDg1NTXrcsrLy5c4ndlvgRkYGKCF
0xLmmlBSUiKj+/b2djce1LsC3SOuBrr3mf7gB2zXLvbZZ2x01K+Ls+pB99A9
dA/de6Pub/+IyfSP0L0wge4F1D2P2WwmzptMplk31rsU+lOqr6+vs7PT01tM
JKfoRySB7hFXA90vSq1WQqjKvftuVlzMBgcX/6tb7Bo1WHGge+geuofuoXsV
Q7r/9nEmU+henED3wuoe8b1A94irge4XpWYzGxpSud/7HnTPa9RgxfFb3b+y
kimpQt0rATJVITPjX1PUP+xwvwq/8IDNinpTh6LqVijqa/GKWvqo+1X4pkrj
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
NenePaT74oN077x8l+737tXOn6e8X+npR/WzvvgO6Z50T7on3ZPuvUjSfY0E
zUmR7gsP0n0hSfeXLl1SMTwqKso4fcmSJfOu+SqfmiE9PX348OEy//bt2+VP
u+leHDlyRO26bzRq1ChHwVAWO3HiRJmnb9++ycnJrm5O+pnwBw8efPbsWecz
k+7dRrovPkj3gUr3Cxb8eWk8yusVG7vTF2d0sUK6J92T7kn3pHsvknRf/azm
pEj3hQfpvpCke8nFKnr//vvvxukDBgywyuYSimW6hGL5/+zZs9VsjtK9cvHi
xa1bt86fP1/tq6/Cu+0B8ikpKSqbh4aGWn3JYJxnh1Nqf3vx7rvvOr+mHune
baT74qNop/uzZ//M5rt2uV/btmn/+5/WvLmX033bttrQoZ4mHcpu7dq1ITEx
0ddvHNI96Z50T7on3XuRpPtq5zQn1XUo6b6wIN37s6xyutVr0b9/f5m4cOFC
48SIiIjwa9QO8xKK9fPe//rrr1vzqQPwJbPL/yMjI9V9MzIyMjMzjUvLzc2V
BQ4cOFBmnjdvnvGmhIQEdbG8fv36HTlyxNEGs3v37h6mjR492sm2R7p3G+m+
+Cja6T4yUlu0SJs1y/2aMUMbMUJr1kw7dcqbDZNlduyotWtHeb/WrFkeFxfn
6zcO6Z50T7on3ZPuvUjS/U2JmpMi3RcepPtC8tu9mDVrlkyUCO/omMSpU6eq
dB8WFlZgpp4zZ478f9myZbbLUXcfNGiQPkXGWu+88476wd35IfMnT55c6JQ6
9L5H/kn5rC7GZ4V07zbSffFRhNP9iRPa9Onaiy96lCbef1/r1Utr3NjL6f63
37RvvtGWLKG8X8eObTNeosVHSPeke9I96Z5070WS7quc15wU6b7wIN0XnnQf
GRmpcvHs2bNtA35OTs748eNVuo+Ojv7fX33xxRdqj3r5/9q1a/PyLysvU4YO
HZqenm61qF9//VVuGjt2rPrz1KlTareBjz76yPa0/K6aP3++ivbbtm1zPifp
3m2k++KjCKf7DRu0zp21ChVkkON+vfmm1qmT1qiRl9M95cuy+OGNQ7on3ZPu
Sfekey+SdF85WXNSL5PuCw3SfeFJ90JyvQr4M2fOPHLkiLogXWpq6t69e0eP
Hq1uUsfdW7E97j4xMVHN/8EHHxw7dkx9XSD/bt++vV+/fjJ95cqVefn76qsv
DUaOHHn58uXsv3J1c9J3Kti8eXOBM5Pu3Ua6Lz6KcLpfu1YLCdHatNFWrnS/
li/Xpk3T7r7bm8fdUz4uix/eOKR70j3pnnRPuvciSfc3XtCcFOm+8CDdF6p0
n5aWNmPGDH0f+5CQEP08eKJXr16S6eyebdjuWfW2bt0aGhpqXJR+gbwJEyZI
ls8r6Dh62zPvOREbG+vSRf1I924j3RcfRTjdr1r1ZxwYNMijhfjinPmUj8vi
hzdOsU33UwZonpSH6X78UI/qv908Kg9j5rzX3K83v/So3hvrUb0636MaOcqj
mtXTo4qu53699D+PKvZWj+pkbY8qGNN9pRTNSZHuCw/SfaFK98q2bdvUZel0
Q4cOnT17tpMj4k+ePCmzDRs2zGq6xHNZ1Ntvv60vSuZZunRpVlaWmmHlypVO
0n10dLT5bSk5OVkWvmbNGpPzy5w9bM4iWLSR7uEq0r3zIt0HYVn88MYh3ZPu
Sfeke9K9F0m6r3hRc1Kk+8KDdF8I072Snp4ucT42NtbzSwPn5uYmJCTExMSo
3+t9x+oU/bBCuoerSPfOi3QfhGXxwxuHdE+6J92T7kn3XiTp/oZLmpN6+V3S
fWFBui+06R5FD+keriLdOy/SfRCWxQ9vHNI96Z50T7on3XuRpPvyqZqT8jzd
nz59evXq1YsXL5bHMnPh1IsXL27YsEHGwz/88MOuXbtyc3OtZrBYLGvWrFmy
ZMkvv/wi//eweUGEdE+6h9+Q7uEq0r3zIt0HYVn88MYh3ZPuSfeke9K9F0ni
LndFc1Iepvv169f36tVLPzS4Z8+e69atczL/vn37+vbtazya+OOPPzZeJmzZ
smWyEOMCv/vuO09aGERI96R7+A3pHq4i3Tsv0n0QlsUPbxzSPemedE+6J917
kaT7smmak+riQbo/fvy4pO/Q0NDffvstPj5+7dq1KunHxsbanT8hIaF3794y
g0T4c+fOHTx48P3335c/Fy9erGbYs2eP/NmnT5/w8HCZYcuWLfJ/mbJ79263
GxlESPeke/gN6R6uIt07L5Xu77tPi43VsrKoIKjc3Bg/vHFI96R70j3pnnTv
RZLuy6RrTsqTdP/555/LCjGel/uXX36RKf/973/tzj9v3jy5VUbC+hR17bAB
Awao/fPnz58vf/7888/6DOpCXXPnznW7kUGEdE+6h9+Q7uEq0r2ZdN+woRYR
ocXFUUFQqamH9Yu2+A7pnnRPuifdk+69SNJ96auak3I73Use79evn6yQCxcu
6BMvXrzYs2fPPn36ZGdnW82fk5PTt29fufXSpUvG6ZGRkfqFvNXlxTdt2qTf
GhERIVMmT57sXiODC+medA+/Id3DVaT7AtP9gQNagwbaTz9p27ZRQVBnz/5h
PDTSR0j3pHvSPemedO9Fku6vy9SclNvp/uzZs7I23nnnHavpgwYNkukJCQlW
02X0K9PHjBmTm5t76NCh1atXb9iwweoS3uqnf5nnypUr8ufVq1fHjx8vU374
4Qf3GhlcSPeke/gN6R6uIt07r5wcLSlJa9RIa9xYa9qUCoJatmzJiRMnfP3G
Id2T7kn3pHvSvRdJui+VpTmpLsPcTPfyiaCSuNV0mSLTjx07ZjV9//796lf4
KVOmGM+qN3fuXP3C3BkZGdOmTZOJAwcO/PTTT9UXBfIfFfaLPNI96R5+Q7qH
q0j3zis3V7t0SXvlFe3FF6ngqF9//TE+Pt7XbxzSPemedE+6J917kaT7v2Vr
TsrtdH/o0CFZG+PGjbOaPmHCBJl+8OBBq+k7d+7UT4O/cOFC+XPlypXqpHnf
f/+9mufq1asyTu7xV0uWLNHjf9HmXrqXewU82rua7qXNAY/2pPtijnQPV5Hu
zQT8ixepoKnMzOM5OTm+fuOQ7kn3pHvSPeneiyTdl8zRnJSjdH/kyJHDDqhv
elW6Hz9+vNUd1b70MpvV9B07dqi0vmrVKn3igQMHZEpISIg68uuLL76QP0eO
HCmPfuXKFfl39OjRMkWme3OlFFbubV1Bt03mFb42F7b2wA9I93AV6Z4qcmXx
wxuHdE+6J92T7kn3XiTpvkSu5qT+Yy/d5+Tk9HDs888/l3liYmLk/6NGjbK6
r2RzmX7y5Emr6fv27VM/3F+9etU4fcSIETL9xIkTiYmJcqsk/XPnzum3JiUl
vf322zJDcRg8k+4DpbC1B35AuoerSPdUkSuLH944xTbde5jUPEz3QyZ4VB5+
NTHtbY+q71T3q8Nyj2rgZI/q5UUe1YApHtU3L3hUcX93v17/yqM6W92j+uNO
jyoYU8CCgti918KFC//rwMaNG2WGS5cuydro16+fupidrm/fvjLd6sT4QvK+
TO/Vq5fV6fTVnvyRkZFRUVF2vy745JNPZPquXbs8XA+Fn5NvVOBrgX7x4W+k
e7gqISFs2jTtgQe0deuKWo0dq4WEaAMHBjxsUn4uix/eOD1I96R70j3pnnQf
JN59990ef/2ZXkX4YcOG2c6clZWljrK3WP7/p4kkfXXqvFOnTsXFxfWw93XB
hx9+KNMPHTrkuycCoLgh3cNVku6nTNFKl9YGDy5q1amT1rGj1q9fwMMm5eey
+OGNQ7on3ZPuSfek+2CxbNkyWSHTp09XP8fLv+qM9/pZ8q5cuXL8+PGYmBj1
51dffdUj/1B9/Sx5a9eulSnDhw+XRC93HzBggPz5888/6w+hzsXXp08fP1yS
FUDxQbqHq1JTw8LCtH//29NRdyGsLl20zp1J98WwLH5445DuSfeke9I96T5Y
XLp06Z133umRf+Z8SfQff/yx/H/IkCH6bvmRkZEypX///urPpKQkNf+YMWN+
+umnWbNm9cg/En/fvn1qhoiICLWb9JQpU1asWDFnzhy5Vf6UEVVgniGAIop0
D9eFXbqkff65NmFCUavXXtNeeknr3z/gYZPyc1n88LYh3ZPuSfeke9J9EDl/
/vz48eNVBlcx33jtVJXuBwwYoE9JSEiYNGmSPv/QoUOtDqiXpD9s2DD9aOgh
Q4ZI5Pff8wFQPJDu4bqU7Oyw+PiwkyeLWv33v3cPGaK9807Awybl57L44W1D
uifdk+5J96T7oJOammqxWJKTk03On5KSEhMTc/r0aasz7OkuXrwoC5TZvNdG
APj/SPeAbtWqViM5Z35xLIsfti7SPemedE+6J90DAHyKdA/oSPfFtSx+2LpI
96R70j3pnnQPAPAp0j2gM6b7S5e0lBSqWFRm5vGcnBxfb12ke9I96Z50T7oH
APgU6R7Q6ek+NVV7/HGtYUOtcWOtSROqiNe33y4+ceKEr7cu0j3pnnRPuifd
AwB8inQP6PR0f+nSn9G+Xj3t9tv/DPhU0S7SPemedE+6J92T7hFwFy5c+OWX
Xz777LORI0cOHz58xowZy5cvj42NDXS7nElPT1+3bt3cuXOlzaNGjZL/rFmz
5vLly4FuF4ov0j2g09P9xYtalSpaeLh24IAWFUUV8UpOPpCRkeHrrYt0T7on
3ZPuSfeAI2FhYaGhoT1shISESOT3wwF0boiLixsxYoRtm4cNGyY3Bbp1KKZI
94BOT/cpKVrFitqJE3/+iH/5MlXEi+PuSfeke9I96Z50jwDasGGDysXDhw/f
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
fnvp0qVAN6QwkpWzcOHCH3/80b37smIDKzMz8+eff961a1egGwIAgHeQ7gGg
yMs0ITs72/aO0dHRJUuWlA+Iu+++2//NLvy++OILWTmNGzd29Y6s2MKge/fu
avyzYsWKQLcFAAAvIN0DQNF24sQJzYShQ4fa3venn35St5YqVSo1NdX/jXdP
Tk7O2rVr5V9fP5Db6d7kij1//vzOnTtPnjzpWTNhX/PmzdWrMGzYMCezRUZG
yqvgxc3pwIEDsbGx3loaAAA60j0AFG0Wi+XGv9K7fePEiRMn2t43IyOjU6dO
9evXnzBhgv9b7rZFixbddtttdvdG8C63073JFTtz5kxZ/sCBAz1oIxxavnx5
s2bNWrVqdeLECSezVatWTV4FLx5DMWXKlAcffNBbSwMAQEe6B4Di5oYbbpA+
/3//+1+gG+ITmZmZ9erVmz9/vh8ey+10b9KoUaNI94GVk5OjjqHwYrpPTU2t
WrWqe6drAADACdI9ABQ3Xk/3klb2799v/HPPnj1Xr151NP/Fixd37tyZkJDg
rQYYzZgxo1atWllZWY5myM7OjomJ2bFjx8mTJ3Nzc80sU2Y7deqU3OXQoUPG
XQKs0n16evru3bsTExM9fAq63r17u5HuHbVW58YaEFeuXJFXWV44Lz5BX5AN
b9euXd7auuTJqjGSmXQvK1MeV1ZRdHS08xU7evTopk2b+uHgEQBAsUK6B4Di
xnm6v/nmmyva+M9//mM124EDBypVqtS9e/f33nuvTJkyssD69eufP39++PDh
5cqVkz9r1qwZFRVlda9ly5Y1atSoRIkS6nOnWrVq48aN8+Iu9KmpqTVq1Bgz
ZozdWyMiIrp161alShX9g69ChQpjx461/SpAYrU869WrV8v/v/7664YNG+p3
qV27tj6bSvd33nmnPNNHH330+uuvV/PUrVv3559/tlqmyRUrmjVrVqdOnerV
q6sFyr9W9woLC3OjtS6tAQn+N9544yOPPCL/P3PmTNeuXa+77jp1l5IlS375
5ZdqtpYtW8pD213h6enp8uhy68aNG+2+HE6sXbtW7li1alXbmypXriw3bdq0
SZ/SpEkTmXLlypXw8PAnnniibNmyqp2yHrZv326879SpU21fAvHHH39YPcrs
2bMbNGhQq1Yt/UgWedcY7/Lkk08a509LSxs0aJBxxZYvX75169a2m4GSlJQk
a37BggWurhkAAJwg3QNAceNSulcfEP/+97+tZtu1a5dMV7leYr6aTXKuOpxf
/dm5c2fjXV5++WU1XXJTx44dW7RoofZ5fuqpp7z11D799FMJoWfPnrW9Se3l
rqfvhx9++KabblJ/9unTx2rmV155RaZLUpYFqnlKlChx6623SnI0HjGt0r2+
HmrWrClroFSpUmr+hQsXGpdpcsUKCYnGeQpM9yZb69IaiI6O1vK/sZFof/vt
t6vZ5IWWZyH/WbdunZptxowZ8mf16tUly1stYdGiRXJTnTp13PiFetWqVXJf
eSltb/rb3/4mN23YsEGfUqNGDZkycuRIWVGyRTVt2vQf//iHanDlypUvXryo
z2mV7tUbQezdu9fqUWbOnKnm0b+xcZ7uO3XqpGaTFS4vR9u2bdWKEuPHj7f7
HAcMGCBvBFfXDAAATpDuAaC4cWnPfMkgTtK9kFyTmZk5b9489afML2nuvffe
k////e9/1+efNWuWTJFoNmfOHH2n5fDwcPVVgCRTrzy1li1bSrCye9PGjRvl
sUaPHq3vWH716tU33nhDyz9xvdV51VRevuuuu+TfRo0aSZtPnz6dl382vJiY
GH02Pd3LM9V/obZYLE2aNNHyfzeX+R011dGKNfrXv/6lmdgz32RrXVoDKt2X
KVNG7WsRGhq6adMmtZeFLFM/7CItLU2ddG7u3LlWrWrdurVM/+ijj5w33i43
0r144IEHjhw5oibK5q0mzpgxw9GjSPB3lO51u3fvVvM42TM/Pj5ezbNo0SJ9
orwLlixZ0r59e0fXRNixY4fcxXa3AQAA3Ea6B4DixovpvmTJkuqH8ri4OPnz
lltuUblPwpf60VnNnJ6eXr58eZkyduxYq+VMmjRJpksS9PRZ5eVJS6Q9krgd
zWCbta9cuaJ+Il+6dKlxusrL4t57701OTna0QJXub7755vPnzxunb968Wd3d
yZnTvJ7uC2xtnitrQKV7xfl3Lx9++KHM06xZM+PEo0ePqnh+5swZ5423y410
365dO6tnJ2Ffs7dbgs5b6X7//v1qnu+//76AJ2aQm5sr7xdZe+bvAgCAc6R7
AChuvJju9fwuIVH+vOOOO9SfEpfUL8Lqz4iICPWnbfZUc0pAc//5XLNx40ZZ
lMTSAuc8cuTI8uXLx40b17NnT5VtP/74Y+MMKi/LinJ+rTQn58yvVauW3DR5
8mRH9/V6ui+wtUYFrgE93TtJx4o6hFwz7K4vhgwZotkcmmGeG+n+m2++sZpT
7Zbw3HPPOXoUb6V70aJFCy1/1xR5ysuWLUtLS3Mys05mfv75583MCQCAGaR7
AChu/J/u58yZoz5orrehfwZ5fm69xYsXS7xycrb8mJiYkJCQmjVrajZGjRpl
nFPl5ddee835IzpJ9yru9e3b19F9vZ7uC2xtnitrQE/3sbGxBS5WPZenn35a
/ZmZmVm9enWZsn79+gLva5dX0r1qVfv27R09ihfTvSyqW7du6jwSWv4p9Tp0
6LB06VLnW7VsHi1btnQyAwAALiHdA0Bx4/90rw66Fz0cCA0N9fx5ffbZZ072
Adi4cWPVqlW1/P0EevbsuXz58gMHDkiz1eHhdtP9G2+84fwRnaT7Zs2ayU0j
RoxwdF+vp/sCW+vSGtDTfVxcnPPF5uUflyFJvESJEocOHZI/v//+ey3/lPXm
L7dnxYvp3ska9mK6V2SlffLJJw8//LBqpJZ/WsLNmzc7mn/MmDFNmzYtcLEA
AJhEugeA4sb/6T48PFx90Jw6dcpLT8KOBQsWlC1b1tGtdevWlQY8//zz0lTj
dF+k+4yMDHVZwMWLFzu6r5l0/9xzz8k8BX71YbK1Lq0Bl9K9ePXVV/Wmtm/f
XnN6VEKBfvnlF/Xo+un7dH5O95GRkWqec+fOmW9/cnLy9OnTVcMqVapktcJ1
gwcPvv/++80vFgAA50j3AFDc+D/dX758WV0tvcCDuD2xdu1aeQjjFdB06qR/
wurI9Ozs7ObNm3s93X/++efq4aKiohzd10y6l9WlmbhioJnWuroGXE338kxL
lChRoUKFY8eOyWtdpkyZpKQkM3e0648//lCPbnVK+blz56rpfkv358+fV/Ns
377dSYPtnhhf7qLuu3XrVrv36t69e4cOHZwsFgAAl5DuAaC48X+6F+PGjVOf
NR9++KHxB9nDhw/LQ5g8C5lzMTExsnz9ynRGiYmJ6tEXLFigT9y3b98999yj
pnuS7iXVvvXWW/oJA9etW6cu8+f8hGlm0v3s2bO1/AsThIeH6xMzMzOtfgs2
01pX14Cr6T7v2k/2jRo1kn+lSSbvZZfkbtl4tPxz4qkz4ctTHjNmjD5i8Vu6
F7fccouWf/y+cbu9cOGC/v9Zs2ZVqlRJtnCrzXjEiBFq+QkJCXaXLCt/yJAh
Th4aAACXkO4BoLgJSLrPycl59tln1cdNzZo127Vr99JLLzVv3lydiGzq1Kne
eGZ5jRs3Hjx4sN2bHn30UZXEW7du/Z///Eddxr106dINGzb0MN2rfcXLly//
0EMPyRqQxWr5x7Y7Px+dmXQvaVFFV3mINm3adOnS5YknnpCXz+oyaiZb69Ia
cCPdb926VR9RbNmyxeS9HHn99dfVom6++eb7779f2qnl78ag9jTwZ7qfPHmy
mq1OnTqd8jVr1qxcuXJ62H/11VfVi16hQoV77723W7duISEhLVu2VPd68803
7S72zJkzcq+wsDCzawQAgIKQ7gGguKlUqZL0+d99952ZmdWlzSTRWE1X+d0q
3UvyMt5qTPfK119/rY7+1tWrV0+ivVd+u8/LP5DZ0cnczp0716FDB/1xJSN3
7Njx6NGjn376qW227d69u0zs1auX84dT1wIYNmzY7Nmzq1WrppZcsmTJZ599
1tHPtTpHK9bKoUOH9J/XlSpVqowZM8aN1rq0BtSOEE5+d7ZLXWJe/5LHE0lJ
SdI8vbW33HKLrLGsrKzOnTtrf91DQ/227ijdO1nDerrfv3+/k5bk5OSMGzdO
fb2gSCqXF8Visejz7Nu374UXXlAt0dWsWXPs2LGOTpsv20zlypWdXOIBAABX
ke4BAH6WnJy8e/fuHTt22D1G3hMSuK6//vqff/7Z0QxnzpzZtGmTZDGJbN59
6Nzc3IMHD+7atevy5cveXbKIj4/fsmXL77//Hh0d7WHLfbcGJMY2adJEhhMz
Z8701jLPnTsnz9rJ6Qv8JiMjQzZaaczevXv1ozBsqW07PDw8Li7OyRqWraVx
48bDhw/3TWMBAMUU6R4AUJSEhIS0atUq0K0ojj7++GMZS1StWtXuKeZg9OOP
P1aqVMnJtwQAALiBdA8AKEpOnTpVpkyZiIiIQDekWMjJycnKypJ1/sknn6h9
1ydMmBDoRgWBBx980OpQCAAAPEe6BwAUMf369XN+vnp4y7p16yTUq3PKafkn
lrd70gMYbd68uXLlyl4/LAUAANI9AKCIOXv27OzZswPdimJB1vONN95YpkyZ
5s2bT58+3evH8hdJO3bsWLt2baBbAQAogkj3AADAE/xeDwBAYUC6BwAAAAAg
2JHuAQAAAAAIdqR7AAAAAACCHekeAAAAAIBgR7oHAAAAACDYke4BAAAAAAh2
GgAAAAAAAAAAAAAAKAQCvQcBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUJTF
x8evX79+wYIFK1eujIyMzM3NDXSLAAAAAACAWYcPH27durX2VzfddFNcXFyg
mwYAAAAAAAp2+vTpihUrajaqVq1q+/P9hQsXhhv88MMPAWkzAAAAAAAwevXV
V42hvmnTpnfdddf111/fuXNn25m7dOlinPmNN97wf4MBAAAAAICVevXq6Wn9
t99+UxMzMzNTUlKs5ly6dKnV7/ukewAAAAAAAiU3Nzc5OfnkyZMHDhwoWbKk
iurVqlXbt2/fH/kOHjxodZf4+PgqVaqQ7gEAAAAAKCQk1NseaG9Uu3Zt4/y5
ublt27ZVNzVs2LBatWqkewAAAAAAAsvVdD9jxgw1vUSJEmFhYfqP+KR7AAAA
AAAC5ejRow3y1a9f3xjqG1zz1FNP6TMfPny4bNmyaobQ0FCZcsMNN5DuAQAA
AAAoJDIyMvRo36JFC9sZsrKy7r33Xn2f/CtXrsjE8uXLk+4BAAAAACgkCkz3
I0eOVLeWKlVqx44daiLpHgAAAACAwsN5uj9w4ICEenXrjTfe+Po1+sSGDRvK
n999911AGg8AAAAAAPIKSvcrV650fvI9ZejQoQFpPAAAAAAAyCPdAwAAAAAQ
/Jyn+1OnTi22p3Tp0uou9913n/wZFRUVkMYDAAAAAIA8E2fVs4uz6gEAAAAA
UHiQ7gEAAAAACHbGdP/www+bvNeNN96o7tKrVy+fNg8AAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAoAjQAAAAAAAAAAAAAAFAIBHoPAgAAAAAA4A7SPQAAAAAAwY50DwAA
AABAsCPdAwAAAAAQ7Ej3AAAAAAAEO9I9AAAAAADBjnQPAAAAAECwI90DAAAA
ABDsSPcAAAAAAAQ70j0AAAAAAMGOdA8/+/HHHxcuXBgXFxfohgAAAACFzokT
J7799ttLly4V2wYEHYvFIgHn559/DnRDSPdFVqZBoNvyF5UqVZKNTTJ+oBsC
AC7Izc2V7jQrK8v2puzsbLkpJyfH/61yRNppt7XSyEL4uQDAp6Qr2Ldv3+rV
qyMjIwtVT+Uh1ZsVpWekREdHlyxZUkbLd999d/FsgLdkOuXdx/r0009ljf3f
//2fdxfrBtJ9kXT69GnjK1uxYsX77ruve/fuq1atCnTTSPcAgtKmTZuk77ru
uuuuXLliddN//vMfuemNN97wW2NkiL5z504nY9p//etf0iTpbzMyMozT+/Xr
pz4Xzpw54/tmAgiwPXv2PPTQQ2XKlNHHhLVr154zZ06g2+UFqk8WXbp0CXRb
vOynn35ST61UqVKpqameL/D8+fPykXHy5MlANSBQGjRooDm2ZcsWLz4W6R4+
pad7GdrVrFmzRIkS+qvctWvXpKSkALaNdA8gGOkjSds9FVW6f/nll/3WmGrV
qtltiU6le7Fy5Up9Ym5u7t///nfSPVBMfPbZZ9dff716y0uncccdd0hYU38O
HTo00K3zVO/evdVzueGGG9LT0wPdHG/KyMjo1KlT/fr1J0yY4JUFzpw5U1bU
wIEDA9WAQGnevPmN1+hRSJ8iH+tefCzSPXxKT/cHDhyQP1NTU3fu3PnCCy+o
iW3atAlg20j3AIJR4Un3OTk5ap9JM+m+W7du+sStW7fqn/ike6BoW7dunXqz
N27ceN++fWpiWlra+++/X65cufDw8MA2z0PZ2dk1atQoUaJEkyZN5Dn+8MMP
gW5RoTZq1CiX0n2RdMMNN8hK+N///uej5ZPu4VNW6V43ZcoUNX3FihV273jx
4sWdO3cmJCSYfKCYmJj9+/db7flpJTMzc+/evdIk9WflypXNpPsrV67IkqUx
iYmJTh5dllzgF7bSAFkPUVFRLh1iU2AD5JNFGrBjx46TJ0/m5uY6WVRqaqos
yvjnnj17rl69ar4xAALO7XRvvl+9cOFCZGSkdGvO94SUTslRS3Qq3VepUsW4
c74M7dQ+XY7SvfluTZHZpMF2z0UAIIBycnLuvPNOeaffcccd0gVZ3VrgPpzy
9j916pR0BYcOHZJuwe480k3t3r1bZvNOiw1kgCRLPnfunJN5fvvtN3l2zZs3
nzRpkvznpZdecjJzWlra4cOHd+3aVeA54uSJS18tPXZ0dLSZPtDkQFSR2f74
449jx46ZWbIZ5ntstZ+DL9K9q5uBvLjyQjj/QDT/ernEpXRvpp15+YFLNgCV
L6ZOneo83bsastxGui+SHKV7ee9LPy/T77rrLqu7LFu2rFGjRvo+/NWqVRs3
bpxVl75w4cKKFSuOGDFCxopDhgypX7++mrlUqVIDBgywzfhnz5597rnn9KO9
/vGPf3z77bc333yzbbqXfunGG2985JFH5P8y5uzatet1112n7lWyZMkvv/zS
OLO82aWbUgNU9egtWrSQ94vtejh//nzPnj31RcmcFQ1eeeUV9xoQERHRrVs3
GTbr750KFSqMHTvWOMSVNS8t7N69+3vvvafWgKwuac/w4cPLlSsnf9asWTMq
Ksr+6weg8HEj3ZvpV8Xly5enTZt2zz336HPKf6RbM34rKGbPnt2gQYNatWrp
exjKWMXYpz355JP6zCrdd+jQQTPsnF+nTp1bb71Vxh626d5MtyZuu+02eSCJ
BmPGjJFFqTmli5OhtW2CABAo3333nXp7Ll++3Mz8MqySt/bq1avl/19//XXD
hg31rqB27dpWM2/YsOHOO+9UexCJm266ScY2Vr9ZrF27VhZYtWpV28eqXLmy
3GTcKfqrr76SKcOGDYuMjHzsscdKly6tlixd1k8//WS3wb169ZIZ5HFlKKX6
K4mEtrNt3Ljx4Ycf1p+LdK0yFh08eLAMUK3mlLsPGjTI2AeWL1++devWdk+B
bn4gmpc/9l6wYMHtt9+urzHpw6VzlmBunE2GxxVtyIeL3WWa7LGbNWsm67B6
9erqAA3512r5YWFh7jUgz9xmIJo0aSLLuXLlSnh4+BNPPFG2bFk1v2xj27dv
t5rZ/OvlBufp3qV2isWLF1t9CMrHouYg3ZsZDEhekAbI62X16Txq1Cg1/cKF
CyafqWZg8i4o/BylezFv3jzVERl7ABmUqvll6NixY0fpo9S79amnnjLe94sv
vpCJzzzzzEMPPaTeyHfddZf0fuq+slUbZz5y5EiNGjX0/ll6AP1oL80m3UdH
R2v5+Vc2aekA1TzSbaqvAtatW6fPGRcXp7+bpLX33Xefys5/+9vfZs2aZVxm
RkbGP//5T9Xjvf7666+99pqK1eqtKowHnZlvgNq7Salbt670QrIe1J99+vTR
Z9u1a5d6v2vXfikT6ot0fWTeuXNn868pgMByNd2b7Felz6lZs6aaU7pTme2O
O+6QDk3+lC7LeBKkmTNnquGWfiBtgel++vTp2rWd83fs2CH/f/vttyWha39N
9ya7NaF6dRluqc8RGcaoMwAIGRo5348LgN+MGDFCvZ1N/kz8yiuvyPyS69Xe
xVp+sJLhlmScBx980Djn6NGj9f7qgQce0IdkTZs2TUlJ0WdbtWqVln8aUtvH
Uv2bZEN9ihpeSk+oOjf5jz5olGYsXLjQagkSi1TPo2JXvXr15P8SoKxmkwis
Mpp0aJ06dZL8JV2W+u2matWqVrtIyQzqicjzlbXRtm1bNQIU48ePN85pfiCa
l//TtixQzSxduoxL5ampNSCjU+NXuFbhWt3l3//+t+0KNN9jS/w3Ls2ldO+k
AXmmN4O8a58aI0eOlEeXD0GZQX2CiMqVKxu/Fnbp9XKD83Rvvp1iwIAB6iZ5
6e+5557q1avrr4htujc5GJChhfrZ9IknntDftrKFq63FdvN2QjMwfy8Uck7S
vX7c5fHjx9UU6YtUpzRnzhx9cwoPD1chVLp6/b6q+xWlS5eeOnWq2hElKSlJ
3tfqzWh8oMcff1zLP12//r3r2bNnpZdQS7Cb7uU9or7aCg0NlYG0+lIrJibG
+E1gu3bt1GOtX79eTUlOTpY3iEyUPuHYsWP6nOoUIvJePnr0qJoSFRUlXas8
0z179litFvMN2Lhxo6wZ6db0Pfbl1jfeeEPLH+ueOHFCTVTpXkgHJStKfaki
pEPIycl577335P9///vfHb6EAAoZPd3LSG/6X8mHu/bXdG++XxWtW7du06aN
9C36N/mSxNWPMq+//rptS3bv3q1aUuCe+b/99lvDhg3VzvmDBw/W8k8RrIZh
xnRvslvLuzb+Eb169dIffcKECWri559/7tIqBeAj6lRLzzzzjMn5Vbq/6667
5F8ZCEnHpQ6olK7D+BOzZA0VTLp06aJfPeTbb79VP/S89dZb+pxupHs1LpLu
SE20WCzqmPratWtbfXMoI0CZLt2R6l3VpUCef/55qwfq0aOHlv/DivFn/djY
2DfffHPBggXGOePj41UDFi1apE+U0dqSJUvat29vlSvND0SF9OGqIx0xYoQ+
mJTxsLxAbdu2dXLdE5Uf7YZr8z22Tn0iuLRnvpMGmN8M8gyfGhIWjhw5oiZK
xFYTZ8yYoc9p/vVyj5l0b6admzdvVr/Cy8rRU79sKupT2yrduzQYiIiIUN9m
TJo0KS9/fxL1bbzdkYATpPsiyUm6129Sv0enp6erN+PYsWOt5lSHMsmwU5+i
ul+JwMY+OS9//yu1zPPnz6sp0vOoKfPnz7darPo+0G66V6w2dSN9dP3NN98Y
p8v2f8stt1iNrtV3Zb179zbOqbrZ999/32rJJhug2P4+JZ2bel5Lly5VU1S6
l95P7U0UFxcnf0ojVd8uK1DL/xLV+QMBKDz0/scRvf9xqV/Ns9eliI8++kjm
vP32221vMp/uZfCpfmFZs2aNxPy6devKTeq0+Vb7/pnp1vKujX9sn9djjz1m
O6oBECjNmze3GgJJYPnUQEZ0xvlVuhf33nuvZFVHi23Tpo3M06xZM6tY+tln
n6m767+nuJHub775Zn0YqUiMUou1GjRKftQMFyFVY6py5cpZXa5U/Rx/3333
FXhc/P79+9UDff/9987ndGkgKilYzfzhhx/aLsr5bhVOwnWe6R5b5910b34z
yLv2qdGuXTurNqtfBo07G5h/vdxjJt2baWerVq1kiuRuq9N5qZObGT8HXR0M
iE8++URFraioqEGDBmn5+xu7ut+CcWTi0h1RmDlJ97Gxseom9e1oRESElv9d
n21nvnfvXi3/q1F9iup+GzdubDWniq4iMjJSTVEbp3R0tl9L2j1nvh6urfYp
sjJ58mSZ59Zbb7XtEtXRLo0aNdKndO7cWaa8+OKLxtnUUaihoaFWdzfZACvy
Wbl8+fJx48b17NlTdaoff/yxukmlez2/S6+r5Z/cRv2p1q2sdvOPBSCw9EGd
DCxD/0p9u64P6lzqV40uX74so9kvv/xy8ODBjzzyiObgO0CX0v2xY8e0/Eul
yL8jRozIc5DudU66tbxr4x+rYa2QNmv5O2s5ag8Af1Lp3jjakbetccxfuXJl
4/wq3Uv8sfvLr071CXPnzrWafvXqVXXwox6d3Ej3tsNLUatWLblJcpM+JSsr
S+2Iru8aKlPUGZutuiZpg/qJuX79+qNGjTp06JCTp9aiRQst/zdWGT0uW7bM
7lH8eS4ORNVhDtWqVXPprM6K83Svc95j67yb7s1vBnmOPzXUzgbPPfecPsWl
18sNZtJ9ge2U110tx+r7sTx758x3YzAgy3/yySe1/IOaZW3IO0gChavPlHRf
JDlJ9/oAVR3OOWfOHPXn9Tb0DUPfWdRR93vx4kU1p77H+6uvvip/Pv7447Zt
c57uY2NjnTyv1157TeZp27at7U0//PCDlv9bud4hq+/QSpcurX8VnJCQoPZ4
+eqrr6zubrIBSkxMTEhIiH6orJF0R2oe0j1QxJg/7t6lflVZunRphw4d9HOQ
Ov9odindy//vv/9+Nb8aLNlN92a6tTzH4581a9aomc2f9geA7zz//PPyfnz2
2Wf1KTIgHJ1PYqDmIN3LKMvJMvWfh7Zu3Wp7qzqz0LBhw9Sf3kr3KnT369dP
n6LvLyohqMM1FSpU0PKPhbS6u4w269atq/dmTZo0GTp0qNXp7BQZynbr1k0/
R1z58uVlsdIzW/XVLg1E1Vq1O3OBnKd7kz22zovp3qXNIM/xp4Zafvv27Y0T
zb9ebnAv3Vu102KxqLbZXlPSNt27MRjIyz9wQzVVjBs3zo1natwe3Lg7Cicn
6X7atGla/i4f6ltHdTyI6OGA8YvfAtO9hFY1pWvXrpqDA76cp/u4uDgnz0t9
aWC3n5QFavlnX9F3X0lKSmrQoIFMrF69urw3+/fvr87Bcvvtt1++fNnq7iYb
kJd/0EHVqlW1/C/c5CNy+fLlspIlvLdu3Voj3QNFl/l071K/mp6e3qVLFzUm
bNWqlQwPZMwQHx+vH99k2xJX073q9ps3b65usk33Jru1PMfjn++//17L/9mL
a30ChYE6vY/ds+qpDsRuutf3dbdLzzXbtm2zvVVdjGPw4MHqT2+le3Wlp+HD
h+tT1G+pdpUtW9Z2gJeZmfnTTz/JvfQsLKMv6YftXulPRoOffPLJww8/rBqp
5f+OvHnzZn0Glwai6hBR43cs5jk/7t5kj63zYrp3aTPIKyg12y7fpdfLJZ6k
e72dx48fV62KiIiwmtM23bs0GNCtXbtWP7u+vJHdeKbGN4Ubd0fh5Cjdy1tG
fScmHZeaIsNINaeZS1WaT/fSD2uGMGvkSbpX526SntbMTRkZGerMfkby9rT7
HaD5dK9W4PPPP291eBfpHijazKd7l/rV//73v1r+lTX0EzQpYWFhjj6aIyMj
1U1OrgdtTPdnz5594okn9DOK2KZ7k91anuPxz7hx47T84xALfL4A/EDfD9/2
gm5up/ucnBx1ELHt6YkkeanopN/0yy+/qAbYfuNnPt3LqFX9KL948WJ9ijp3
2fjx43cZbN++Xe37tGTJEkftz83Nldmee+451bCPPvrIyZNNTk6ePn266vGk
f9b7RpcGoh9//LFMqVWrlhsXuHeS7s332Dr1rO1mSVcb4NJmkOd6ute59HqZ
4ZV0L9uz2sHD9hQNtunepcGAIh/N6gz86jzkEvPlrWTyvjpj8HH1vii07KZ7
eZuo73KFfpnRy5cvq53VzRxvbj7dq/GqkA8R45znz59XV7twL93/+uuvdj+t
JMirvs54jTl1woq+ffvKAFiGuPKUnVwu02QD9DMMWB2YJh2aOsaNdA8UVebT
vUv9qvodyvaawmonT7sfzdKRqpvsXoRXMaZ7K1bp3ny3ludg/CM9cJ06dTR7
56wGEBDy/pXRmrwr//nPf1r9nO12uhctW7bU8s+8ZzVdnXnDOOz8448/1BT5
j3HOuXPnqulm0r3+02dUVJSaor40sHsg87PPPis3dejQQZ/i6Fxk6vz2Vr+/
251ZPy2evhe6SwNR/SAC4xnXdc7PHeco/LrUY+vkw0izuQSbc07St/nNIM+V
dO/S6+UGr6T7vGvfrlgdUyCGDBmi/TXduzQYyMtPaup3ydatW8v/e/fureVf
naHAXx6taAYu3RGFmVW6lz7w999/f/rpp9VEY9eXd+03Fy3/lJ7Gr1gPHz4s
m7TxvCLm0728Q9V1Qu+66y79es3Sw6trkmrupnvZ1NU3k7Vq1dKHtfJY6sov
8g7ST+uXd228bXVhDkdMNiAxMVHNZrw2x759+9T1sDTSPVB0uXS9e/P9qvr4
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
/dK3L2R59OheK8xZjLpH3aPuUfeoexVxd3dfUa2aGU0+ogcPHojlffv2TUtL
S7+8T58+Yrn4bmZ3d/DgQbHCjBkz1H8kAACgHqh73atcLX18aNkymjWL5syB
XGfMkO+TtGpFMTHGz/O8eeTiIvNf97cghB06yBM2qlaFLN3dN4eGhmp92HHa
umd2IrPumTOUMa+7v1CC5ZBJlju7L0vmjHjMzBw+nuX+mix31bdc/2IsmTPi
Odt196LuxV+xZhzaurXJHxwyZIjRx/Tia7Fk6NChZu7u77//Fuvs2bNH5YcB
AACqgrrXvcrVMiqK/Pxo/XqogqtXU69e9MsvFBxMCQn/sHt3eY5EqVJUvjx0
ELdt23Dr1i2tDzuoe9Q96h51j7pXEaXu017L1MzqfvPmzeLBzps3T5ndXvx3
7ty5YsnWrVuVFR4/fhwcHBwSEpL+pwYPHizW8ff31/hhAQAAC9S97lWulsnJ
sj1F40O+t2/T7t2UJ48MeaPPeb/4Qg5usHQprVgBHUR/f4yqh7pH3aPuUffO
UvcPHjwYOHCgMnK+KPqJEyeKr0W8G07LFwkvlvTr18/wI0lJSV1fEBMTY43H
BgAAloK6173KoQ2amkoBAfTtt/TVV8a++64cdm/7dnJ3hw5iUNARK4yS5LR1
H/QNcWTW/eVvWS7qypJ5AfiCHpb7V3eWu+uyHDuS5fjhLD3qsTxR3nIDirDk
XPIvZA534Dx1L4iNjZ08ebKLi4vS7CLzb9++bfiuUvf9+/dPv75Y0rt3b6Or
9QEAwNZA3esektA2ffpUTi9465axv/8uL3X/4QeqVg06iO7um3DdPeoedY+6
R91rfRhUF07dKzx69OjWrVtxcXHW2WAAALACqHvdKxLal2PHUtOmcq75WrWg
sTVrymsZypWzM3HdPeoedY+6R907Yd0DAIDjgbrXvRahfXnvHkVGygvzYUYv
X5bvfnTvTj172pN+fnuioqK0Puw4bd2f+444Mus+sBDL5R1ZHq7Ccpqr5c7s
z3Jzc5ZTBrN0ncaS+dYE5w0Z5jgPft+zZL6lY491LxI+9V+ZiroHADghqHvd
axFCjnfuUFAQXbhAFy/q74EDsu5dXWnoUHvy1KkD0dHRWh92UPeoe9Q96h51
ryKoewAAyAjqXvc6g5DjqlXUty/Vr09Nmuhv6dLUoQONHElTptiTFy5gzHzU
PeoedY+6R90DAIDdg7rXvc4g5Dh2LHXpQm3bUufO+luxIjVsKL/o08eexJn5
mur7A3Fk1v3F4izn9mbJnOBsQ0vLZV6C7d6A5crfWDKf9uMVWHL6mln3u+qx
nDiUJeoeAAAcANS97nUGIceqVcWfZLRpE+3cqb+9elH+/JQzp4mZBG3ZNWtW
BQcHa33YQd2j7lH3qHvUvYqIuhcJn/J/mTq0DeoeAOB0oO51rzMIExLkSH2h
oZZYtqwcF87bm06eVNkTJ8jPj/bufQXHjaMaNah8eapc2Z7csWMjxsxH3aPu
Ufeoe60Pg+qCugcAgIyg7nUvOwiPHqVly2jSJEssUICGDdPklZyaSrGxcqC8
rLtvH23ZQhs22JnBwcfv37+v9WHHaeueM7+YkFn31wqwZF7IzKx7zox4Y0ax
5LyxIOSMGCCcPpAl8yXnU9Vyb+ZleeAnlk5Y92bSHnUPAHBOUPe6lx10cuPi
aNQoeU67ZfGSP78c9d3kK/nBA/n5+7FjFnroEE2bRi4uNGJEVjdGPJA//qBB
g+zMEyf2Y8x81D3qHnWPutf6MKguqHsAAMgI6l73uINO7o0bVK6cPD9cdLEF
5suXad2LhXPm0IwZFjpmDBUuTB98QFWqyPPtHVgPjy1hYWFaH3ZQ96h71D3q
HnWvIqLun/2bzIi6BwA4Iah73eMOOrnBwVSzpvyI/JXOgTdYqJCcEe/iRQoP
/4dnz9LSpdSokeVZ5OoqT/sXvyb161Pjxo7s/v07IiIitD7sOG3dH61EHJl1
H1CEJfPq9WMVWU7+w3KnDmK5qz7LgdNZThjGkpPnQs6MeLEfstz0C0vmWzr2
WPdPXyczou4BAE4I6l73uINO7vXr1LQpzZ1r4Y+XLi3HzN+7Vw6sl9758+UE
9J98Ij/Zt8y+falYMfrlF+rYUf+59jT18GHPyMhIrQ87qHvUPeoedY+6VxFR
98lvkBmHoO4BAM4H6l73uINOLrPuBw6Uk923akW//voPf/6Zvv9ehn9wsIUG
BpK7O02fTrNmObj+/r5xcXFaH3ZQ96h71D3qHnWvIqLun7xFZkTdAwCcENS9
7nEHbdC0NHr0iB4/tob+/vL8eYvrXvxgp07044/G15KXLUsVKtDw4XK6Pcu8
d4+uXKG//nJ8L18+jLpH3aPuUfeoe60Pg+oi6j4xG5kRdQ8AcEJQ97qHJLQ1
RdrHxMhT00eMsIY9esiX4qxZFm5tWJhs8LNnjd21S6Z93rwy/C2zWjX56X+R
Io7vpk1rb968qfVhx2nr/vK3xJFZ98z5xxe6sPT9geWwCZbLDD1mZv45miXn
bQ3h6TIs9/1sucxR9ZhP++ApLO2x7h+/TWYc8ivqHgDgdKDudW9JaGumplJo
KDVoIC85b9FCc+vWlSPjzZyp8qMID6dFi+i99+j991VT3Nq779I77ziay5cv
CwoK0vqwg7pH3aPuUfeoexURdf8oO5kRdQ8AcEJQ97q3JLQ1Hz+mDRuodm05
5rybm+ZOm0aVKln+2X1mPntG9+/TzZtyxj21DAwkLy/9L5PHdff2JeoedY+6
R91rgaj7BznIjKh7AIATgrrXvSWhrfnoEa1YIT9S37GD9uzR3OXLqWpVmj1b
/QeSlkZJSfIqA7UMC6NDh2jBAlq82KEMDPRLSEjQ+rDjtHV/tSBxZNZ9SB6W
S35n6fc9y0VdLZc54/zOBiyZeT5iHMtD1Vjur2m5/sVYbm7O0nUaS3us+/v/
ITP+gboHADgfqHvdWxLamqLuV66U58yLnrXOqHqNG1s+qp4Znz6VH7hPnEiT
J6tj377yKvWaNalDBzmUn8Po67sbM+Kh7lH3qHvUvdaHQXURdZ/wLpkRda8W
XYGzovdLD1gC6l73loS2plL3rVvL9LbC3TFnxDOj2P6TJ2nQIMunvDeyfXv6
4AOqWFGOSNCypeN44MDO27dva33Y6Yq6R92j7lH3qHv1EHUf9x6ZEXWvFnb3
2gCqgP1up6DudW9JaGs6TN2LF3mnTtS/P02YID/B59u9O336qRxLv25dh3LP
nm3h4eFaH3actu7PlCaOzLo/X5Llgh4svaqzHDDDcseNYLnyN5Zz+rBkvjlw
7juWRypbbnA+lszpI5nTINrdX/Ki7u99QGb8oy3qXh3s7rUBVAH73U5B3eve
ktDWtHLdh4RQ/fqywY8dU9l166hhQxk4bm60du1/Xb2aVq2y0KlTqVYt+vVX
+u03eXK+w+jj43Hnzh2tDzuoe9Q96h51j7pXEVH3sR+SGVH3amF3rw2gCtjv
dgrqXveWhLamlev+7l2qXJk+/ljOi6eu+fPLy+RF0T98KIfXE4pHFB9Pd+5Y
aEgI+flZ/uaAzXr1KkbVQ92j7lH3qHs7+0te1H3MR2RG1L1a2N1rA6gC9rud
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
tUDdO5Um97sBUcTKafbpF165cmXFihXLX7DsBWvWrMn4sybrXvD06dONGzf2
69cv/TX13bp18/DwyOzjdU7dP093BkL6T+RN8ueff2Z8H+DQoUPK+QbidpQl
fn5+yg26urpatkkqgrrXvbL18tYtWWfr10s3bLBF16yhiROpQAEn3U0rVlDn
zlS7NtWrZ6MWLky//koLF9LixfbtpUs+VhiYBXWPukfdo+5R9yoi6t78qJgD
Ufcqgbp3Hrv+k4wvhi1btojlgwYNSr/Q29vb6AdFfWf82czqXiE1NTU4OFj8
Xk+bNk2kvXI7CxcuNLnyS+s+ICDgpFmU8+0F4h4zuxGxPco6t2/fNtpUZXY/
wdAXKA+564t58TK7NauButc94vRS1P0HH9CzZ/pvSWbqNWY+zKJLl8q6r1yZ
qlSxb3fuxJn5Goq6R92j7lH3WiD+Jr9QgsyIulcL1L1TaXK/G/Dy8lKqNj4+
3rAwKirK7/+zbdu2V6p7UcqPHz82WjMhIUE5+11gcs7il9b96NGju2aZs2fP
mryRFStWdP3nuP0GEhMTxXeVM/z79eu3ZMkS5eP7CRMmZLZJVgN1r3si6SXq
3kZMTCRvb3l+uLu7nTl6tBwYoXFjatLEvt23b3tERITWhx2nrXvmRdDMug8s
xHJBD5Y+VVlOH2i5w8ezZNZ9/5ksmW+q3PqK5e66lhuSh+XSzixnDGBpj3V/
riSZEXWvFqh7p9Lkfjdw+/ZtpYhPnjxp8tVy8+bNrNe9uDUXFxex8qNHj4xW
TktLc3V1Fev7+vpmvKmX1r2Hh4ebWZQbF0yZMkWZ586I5ORkJd7PnDmT2b2k
pqbGxsYqw+8rIxIsXbo0s5WtBupe97jTS9S9jXjvHo0cSe3b0++/Q3309d1t
fphWVUDdo+5R96h71L2KiLo/W4rMOLAD6l4dUPdOpcn9np4JEyZ0fTHQ3PXr
1zN+99KlS1mve9HFAwYMEAsPHjxotLL4Vv/+/cW3/P39M94U87r727dvi+1X
PmpPP1xeem7dutX1xcX1hkntDZw6dWrGjBk7d+5Mv1CZ797Hx8eyTVIR1L3u
caeXqHszpqSQjw/9/TctWqT5Rd8TJlCvXjRgALdioMWeOeNl8rwvdUHdo+5R
96h71L2KiLo3f5EF6l4tUPdOpcn9np7Q0FAlrkUgHzlyJDo6+vmLGBfJvHnz
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
FyMBO4iCgAgiYAFBIP9znCxBGC8w33vvzJ37eZ/3ySOXgSl37oR35p5zCgvF
t8QFVqxYUX57aWnp+vXrrf6qdevWlZSUlF0yKirK1dW1/AVcXFy2bdvGenJX
g/nz54vrGjJkSPmNp0+f9vDwKH9j+vbtKzZqfWOqA+oede84da+dBQWUnS13
t9E9cYJiYujoURXcu5dmzKCpU2n6dLMbGxuRnZ2t9csO6h51j7pH3aPuVUTU
/Xdfk4Koe7VA3ZtKq/u9PAUFBZ6enpakXbly5fHjxzMyMhISEkRou7m5iY3i
uxU+wc/Kypo6darlRyrU/dmzZy3bly5deubMGdGSYou4jGXj7t27LRdLS0uz
pP20adMOHz78/fffz50713IZcXnVnuuViI6OtlxL+boX927w4MGWtzKOHj0a
ExMzbtw48aXYWFRUpN2NqSaoe/1LE3Wvv6WlUo1mDNDT8HC5I5YuVUERPo89
RnXrUoMGZnfLluDk5GStX3ZQ96h71D3qHnWvIqLuV31DCnr0QN2rA+reVFrd
7+VZtWqV+Fbv3r0rf1SdmpoqtovvHjx4sGxjeHi4u7t72WfcFep+7dq1YqOv
r29paWn57ZZzA6ZMmWL5Uhzv4ssBAwaUvW9QUlIyfPhwsbHyOfNqceXKlbJb
Xr7uL168aNko7q9lS1pammXL+fPnNbox1Qd1r39pou5hBYuKKD+fbt6sQvF0
nTePxoyhKVNU0MOD/vQneu01atzY7G7btl6HoVumrXvmSGRm3R+ry5JZW8z1
+DhjzwdMY7mhJUvO+xLCdqtZMhPbr7PtJjzDcmk3ls03sTRi3a/8lhRE3asF
6t5UWt3vZRQUFFg+oN+6davVZ0tgYKCrq6uowrItLi4u4vKi1leuXFm57hct
WiQ2zpkzp8LvOXny5KhRo6ZNm2Y5OT8oKEj0tfhv+csEBweLn507d251n8p3
SUhIELek/Dn/VikuLp4wYYLlpIIKdX/hwgVLy5eNtc/Pz7ecWnDq1Kka3Rgt
QN3rn3Koe1jBrCxKSKC4uCqcO5eeekr2uHj+8P38c/rd76h5c7lbTW509PaM
jAytX3ZQ96h71D3qHnWvIqLulWd3RN2rBereVFrd72UcOXLEErb3G9JYcJfy
W0TXHz58WNT0jh07Ktd9ZGSkZQS9SPWahqTl8/0NGzbU6KfGjx8vfsrPz6/C
2QIV2Lx5s2UggKXly9e9uC8DBgywDEy4efOmuL9BQUHiyz59+uDMfHuBuv8R
de8w3r4tP5EfNqzqTmnXTk7w7uFBW7aoYGAgdepEgwdz68kJjIkJz8rK0vpl
B3WPukfdo+5R9yoi6n5FR1KwD+peJVD3ptLqfi8jJCREbO/Xr58NT6Tt27dX
rvv8/PzJkyeXnbfv6enp7+9/5MiRGzduKP+2srcFarqo8aVLlyzn2wcGBt7v
MomJieI39+3bNzs723IefoVZ9U6ePGkJ/N53Ef8QvzM6OrpGt0QjUPf61xzq
HpY3L4/ee48efZTq1KnCf/+bPv6Y1q5V7aq3baPFi+V7Cyb35MlozJmvnah7
1D3qHnWvBaLulXcH6l4tUPem0up+L0MUseU0+/IbT5065efnt/wuy+6yatWq
yj9rte4FRUVFQUFB/fr1Kz8Ffa9evUJCQu738fqxY8csJ/xXOFe/mpSdgRAc
HFz5uwUFBV5eXuK7hw4d+vF/o+wr1L0IecsIhTIGDx7sCIPuBah7/WsOde84
3rolp6BfsID8/GjFCvsorv3FF6lZM5o/vwqHDpXvA7RrR+PHq2OXLvTll9Sy
pdndtWtT2bwo2mHaumcuPs6s+4uPs5zjzpL5zkabtbbLnA9wczOWn25n6TaX
5ZYvWK5vZbuH67GMaMiy5yKeBqz75V1IQdS9WqDuzWPPe6n8ZFi3bp2lZMtv
3LNnT4UfdHV1rfyz96t7CyUlJYmJieK4njJlikh7y+9ZuHBh5UtGRkZa0n72
7Nl37tyx+ttOnjx5WBHLjHwCcY0VftYyY/+iRYssX1au+4SEBMvPBgUFZd/F
MgOAuFWaTuBfTVD3+hcl6t5xzMyUH16/+io1bEiNGtlHEeyPPUYTJlR9a3/4
QU5x/3//J2fDgyq6fPkyHV6NUfeoe9Q96h51ryLib/JlXUnBPj1R9+qAujeV
Vvd7GeHh4ZawLX/SY0ZGxr7/sWHDhhrVvYj6W7duVbhkbm6u6HrLFVUYO2n5
/YLFixcrDHL38fHpWW2OHTtW9oMnT/70FkdYWNiBu1gG4Ht4eIh/x8XF/fi/
2fzK8t+Cn59fT8Wz/XUDda9/UaLuHUexF7p2pcmTadkykXj2ceZMql2bunWj
6Ogq3LlTLk8vgsXHB6rpsWMYd6+hqHvUPeoeda8Fou6XdCcFUfdqgbo3lVb3
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
zjsq1L1I++RkOneO5erVcg78rl3l5++2KXbQa6/RF19Qjx5yLQAnMDp6e0ZG
htYvO6ate/vOqpdci+VYL5ac+dmEnMIdPJnl6nYs/TuybL2O5fFXWX73te0e
fIulcqtWqc8olob7S17UvfJRgLpXC9S9qbS634GBQN3rX46oewUdpO6Li+nw
YTlxnCrDumfOpI8+UqHuT56UM9iL509wsO36+soJA8eNo4kTbVT8bNeu1K2b
fNdi6FBn8PDhsMzMTK1fdlD3qHvUPeoeda8iou6Vn8a93FD36oC6N5VW93tl
SkpKTpw44efnN3HixGHDho0fPz4gICAqKqq4uLjyJQ8dOvTdd9/Nmzdv1apV
4jJ37typcJmzZ88GBQVNmzZN/Krp06eLf8fHxytc+65du+bMmXPz5s1qPoc5
6HldqoC6178cUfcKOkjdC+/coYICdRRPM3Gn+HU/eDA99RQ9/rh86trss8/S
gw9SXp7t5/bfuiVHLixcKE/vdw7j4qKuXbum9csO6h51j7pH3aPuVUTU/aAp
pCDqXi1Q96bS6n6vgPirSUR9T2uMHTu2fA/eunVr9OjRFS4zYsSI7OxsywVK
S0vXr19v9VetW7eupKSk8rUfPXrUcoGyX6Idel6XWqDu9c9G1L2CjlP3Kipa
uEMHmj+fTpyQD6DNtm9PX30lP2uePdt2PTzod7+j8eNp0iTbHTeO2raVo++d
w9DQjampqVq/7Ji27sX/Zjgy637LFyyDvmI5y4Plyz/YLrPumQuvd/Zj+c0q
lsy9tv8d213RieVCF5ZfBbE0Yt0PmEoKou7VAnVvKq3u9/IUFBR4enpamnfl
ypXHjx/PyMhISEjYtm2bm5ub2Ci+W/YJ/tKlS8WWfv36iYQ/e/bs1q1bBw0a
JLZMmzbNcgGx0fKrxCXPnDkjWlJsWbFihWXj7t27y191aWlpZGSk5Vq0Lm49
r0tdUPf6tx7qXkGnrPvMTNnCU6fS+vW0aZPtfvwxLVhACQmsGxMZSb/4BT30
ED38MPxJf3+/c+fOaf2yg7pH3aPuUfeoexURdd9/OinogrpXCdS9qbS638uz
atUq8a3evXufPn26wrdSU1PFdvHdgwcPii+LioosX4aFhZVd5sCBA5Zetpzr
vnbtWvFvX19fUdPlf5Xl3IApU6aUbcnMzBRflv9wX7vi1vO6VAd1r3/roe4V
dMq6v35dnv7t5kbe3qxOeeMNmjvX9rq/coWSkmjXLmrXjr79Vp5OAC2Gh29J
S0vT+mUHdY+6R92j7lH3KiLqvt8MUhB1rxaoe1Npdb+XUVBQYPk4e+vWrVaf
LYGBga6urqIKxb9FGHp7e/fv3z8vL6/sArdv37b0smUx4kWLFol/z5kzp8Lv
OXny5KhRo6ZNm1Z2cn5ISIjlXYU9e/aIq7C5uBMSElauXGn1nP8y1Louu4C6
17/1UPcKOmXdFxZSdDR99hk1a8by2WflqfU21318vHx4Q0Jo40Zaswb+bELC
gfL/39EI09Z9YHviyKx75op4fWeyDP6SZZMdttswgmVEQ5az+7Csd5hl7Css
l3ex3WVdWTJXEnzzEEsj1r3yAYi6VwvUvam0ut/LOHLkiPJn2QV3UXg6nThx
Qvy4i4tLYWGh+DIyMtLyZXBwsHJIRkREiCrPysoS/7acEmBbcY8fP178rJ+f
X4WzBbS4LruAute/9VD3Cjpl3ZeWUm4uxcXJvubYoAH17Uvz5lFgYI2dOZOa
NJHvMHTrJh/hzp3hz0ZGhqSnp2v9soO6R92j7lH3qHsVEXXfZzYp6OKOulcH
1L2ptLrfy7B8qN2vXz/bnku3bt3y9vYu/2F9fn7+5MmTy06A9/T09Pf3P3Lk
yI0bNxR+D+fz9EuXLrm7u4sfDwwMrM7l8dm9WjdMU1D3Noi6t7stWpCLizy9
f8KEGuvmRo89Rs88Q59+Ciu6Y8cG8VKv9csO6h51j7pH3aPuVUTUvfscUhB1
rxaoe1Npdb+XIYpYbJ84cWL5jadOnfLz81t+l2V3WbVqVeWfLSgosIS8h4dH
+bWKioqKgoKC+vXrV36ce69evUJCQu738TqzuMvOQAgODq7ywqh7tW6YpqDu
bRB1b3d37aKxY8nTk7y8amznzvS3v9ELL1CbNrCiYWGbMe5eO5nLkzHrfveH
LD/fypL5zgbnqpuGsFzbhiVzAHizzSz3vs+Ss4jhHHeWHQJYPpPA0oh17zaX
FETdqwXq3jz2vJfKT4Z169aJ7YMHDy6/cc+ePRV+UBRxhR/Mzc0dO3asZTD7
yZMnK//mkpKSxMREcVxPmTJFpL3l9yxcuNDqc7LK4hZXcViR4cOHW65CXKPC
k7861+VooO71bzTUvYKoewUvXZKn5Xt722KPHvTkk3Jevo4dYUUjInBmPuoe
dY+6R90br+57zyMFUfdqgbo3lVb3exnh4eGWKM7JySnbmJGRse9/bNiwoXLd
iwtYFtHr27fv2bNny39LRP2tW7cqXEtubq7oessVWQa/V6DK4vbx8elZbY4d
O3a/31Od63I0UPf6NxrqXkHUvYK3b8vAP3/+JxMT5Qx71fTkSVq6VE7dP2sW
rOiJE3vLnyGmEah71D3qHnWPulcRUfe9FpCCPVH3KoG6N5VW93sZaWlpliI+
fPiw1WdLUlJShbq/dOnSwIEDe94dU1/hVEnxpYuLi7iwZXW88pSWlg4aNEj8
VFRUVOVrqbK4Q0JCAhSx/HLBpEmTbt++fb/fU53rcjRQ9/o3mnHrvnNniomh
Gzc0dNs26tSJ/P3tf38d3IICunBBrnBXfTdupAULaMYMWNG4uCjUvXZyRjEL
mXUf9xJL5spu4R+w/GSn7X4ZzHJxD5Zt17AcOpHlxcdZhjS1XeZVM+crUB6E
XqVGrHuXhaQg6l4tUPem0up+L8+4cePEt/r06ZOQkFD5u/Hx8eXrPjU11TKg
fuzYsbm5uRUuXFJSMmDAAPHd3bt3V/5W//79xbfi4uIqXwuzuNPS0sTtF79B
3Jf8/HzlC6Pu1bphmoK6t0FR988+S6NHy9uvnSNGyKXf/Pzsf38d2aIi2r+f
Hn9c+sQT1fUf/6BHH6W//hVWNCBghdX/Q6kL6h51j7pH3aPuVUTUfc9FpCTq
XiVQ96bS6n4vT3JysiV4RSBHR0dnZmb+eDfGRTIHBwdbvmWp+9LS0okTJ4ov
R40adePGjeJ7sfw2Pz8/y2fomzZtKlueWKT0nDlzxEZ3d/eioqLKt4FT3CLn
R4wYIX7c19e38jkD6l6XXUDd659mBq37deuodm0aNIjmzNFQDw85h7lJ6v7O
HdnpNmg5yeGPf6RatWpQ96r4+OP073/bv8dR9wYSdY+6R92j7rVA1H33xaRg
zz6oe3VA3ZtKq/u9AsePH+/bt2/ZuPUBAwZY1piz4O3tHR8fLy527NgxhdHu
iYmJ4jLXr18vvyJev379LJ/mW94iOHDggNUbwCluy4h+cSPL3kxQBnWv1g3T
FNS9DWZlyfTu1UuuraadzZvLVd2XLbP//dXa4mJKSaGzZ23x++/l5Plffy2f
RRcv6mpiIkVF0cyZNHWq8xgbG6HDi7Zp635Tc+LIrPuTL7D09mXJGcEt/Po7
231nP8upA1kqr0JepQOmsWROthBV33bz/sxyvitL5psqRqz7bktJQdS9WqDu
TaXV/V6Zq1evivQrK3GBm5vbuHHjwsLCyj6X37p1q0Ldnz9/3nKxO3fuBAUF
eXl5lX3L3d190qRJCp+8WN5MKD+zX/XZtm2buK7q/yznuuwC6l7/rDNo3RcU
0OLFNGUKTZ6soeKR+eQTWr7c/vdXU0tK6OpVWrOGgoJsccUK6t6dunWj/Hxb
rr20VL6xYJmXr6aeOkVr19KECTR9uv3Hy2PcvSFE3aPuUfeoey0Qdd91GSmI
ulcL1L2ptLrf70dJSYn4CyolJUU0oPg385mWn59/4cIFVX6VMlbP9ncaUPf6
l51B6/7Hu4EvclJTd+wwxax6t25ReDg9+KBcos4G69alp5+WkxzaVvfi2kXS
ennR8OE11sNDDgd49125kFy3bk7i3r3bdXjtQt2j7lH3qHvUvYqIuu+ynBTs
gbpXCdS9qbS634GBQN3rX3bGrXsdNMmKeDduyPcx/vIX+VaGDbZvT2+9JUcx
JCfLERM18vJluTpe//40bJgturvTI4/Idxhat6a2bZ3E3bu3VFiiRQtMW/e7
PiKOzLqPfo9lwwiWzDkHOEP+W2xkyVwR781DLJkLETLf0pnX23aZ6z9OHMqy
1XqWhvtLXtR9pxWkIOpeLVD3ptLqfgcGAnWvf9mh7hU0Sd3n5sr16Zo0oevX
bTEtjSZNknPcrVlDmzfXzMBA8vam116j8ePlOIuaOnKknHv/rbfoww+pcWMn
MSRkXUpKitYvO6h71D3qHnWPulcRUfcd/UlB1L1aoO5NpdX9DgwE6l7/skPd
K2iSus/JkXXftKmNP37rloz0556Tg9/nzauZkyeTiwu99JKcRUE8zjV1/nz5
pkSbNvTtt9Shg5MYHo7P7lH3qHvUPereYH/Ji7rvEEAK9vBA3asD6t5UWt3v
wECg7vUvO9S9gqj76lhSIp+6n35KLVtSq1Y18/PP6e23Zd0nJMiz9GtqWhrF
xsrlEW2bD9AxTUw8WM1VUTig7u1S9+efYlknnuWqb1g2iLRdZuitb8Xyg3CW
k4awjGjI0mOW7TLfz+mxmOXHoSwN95e8qPtvV5KCqHu1QN2bSqv7HRgI1L3+
ZYe6VxB1Xx1LSykvj1atkmfm11R/fznj/d/+JgfR29BK3t40aJDcR507O4+R
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
MnmApTJqmKXyn4mWSrEz3heLs0zk+NtS+bKfpUK6B4BUgHQfREj3qaakkHTf
sKG2caMWGZn4b4YMWtOmHpS8eRNPt79wQbt50/ty9WridP1ffRXgsn//eo7M
J92T7kn3pHt/d4MAAH8j3QcR0n2qKZLuixdPPGn93LmAlTVrEufzDw9PPHdA
kv6TT2ovvuhByZNHmzZN27dPO37c+7J3r/bLL9qoUZx3T7on3ZPuSfekewCA
VaT7IEK6TzVl7Votd+7EyfOnTAlYGTZMq1pV27IlsT337mk7dyZOAGi+FCig
deqkvftu4qz7XpdXX9UqVEg8QaBHD61Xr4CV9euXJUPflWbTvcVzqC2me4uP
/tfTlorFRx89zPvy3lhLZegYS0XGFlaKxe2WZovFlyvpHgBSAdJ9ECHdp5qy
bVvieetjxmhjxwasvPGGVrny/0/3Dx4k/pp/4IAHpUUL7ZVXtHfe0YYM8b70
7Jl49n21alrHjonfFQSqrFq15MKFC/5+/5LuvSuke9I9JXlerqR7AEgFSPdB
hHSfasqVK9rMmdp//hPI8vLLifPkq3QvJS4uMeObL+Hh2tSp2oQJ2scfe18G
DdLKl9fq1NGeflpr1ixg5bfffj579qy/37+ke+8K6Z50T0melyvpHgBSAdJ9
ECHdp5oSFaXt36/9+WcgyzffaDVralu3evkUrl7VduxInI7Psaxbp61cqS1f
nnSZP197//3EowjefjuQZfPm5VeuXPH3+5d0710h3ZPuKcnzciXdA0AqQLoP
IqR7ig/LwYNao0aJP8H7fM1RUVpEhHbpUtLl3LnEifXmzQtwOX58861bt/z9
/k2z6b72Fs1KsZjue0+1VCb+x1Lp8b2lsr6B9+Xz1y2Vtr9YKp+9YalsrmOp
vDjHUqkZ7n2xuN3Gvmep3M1qqZDuASAVIN0HEdI9xYdF0n2VKom/nluZ9N6x
7NmjzZqVeD6+meQ1fLg2eHDilHqBLWvWLL148aK/37+ke9I96Z50T7oHAPgV
6T6IkO4pPiyS7gsXTjz53cwh9ObL7NlamzZa+vSJk+oHS5k1a+axY8f8/f4l
3ZPuSfeke9I9AMCvSPdBhHRP8WG5cSNxpvrOnRMnrvdhad9eK1dOy5FDGzAg
aMrGjX9y3r3/SqGLmpViMd2/9bGlUvGApfLcr5bK7y29L7O7WioWz7ufNNBS
WdvIUnnzU0ul4Trvy7+/sVR+fc5S2faEpUK6B4BUgHQfREj3FB+WqCjtzTcT
w3hoqC/L009rZcpoBQsmTqcfLGXPnrWRkZH+fv+S7kn3pHvSPekeAOBXpPsg
Qrqn+LDExWlHjyZOardnjy/L9u3a9Onaa695duH7wJbw8L+uXr3q7/cv6Z50
T7on3ZPuAQB+RboPIkGX7iU/3rmj/f03JQ2Vmze1v/7SxowJ/PH25ktY2B+X
L1/29/s3zab77Lc1K8Vium+z2FIZMNlSab3UUnn9c++LlW8GpAz6xFKJzG2p
fN3HUumwwFKx8oXMByMslU/ftFQs7nTSPQCkAqT7IBJc6T4+XjtyRBs40Men
dVNSfunQQWvWLPFye8FSFi+ef+bMGX+/f0n3pHvSPemedA8A8CvSfRC5d+/m
yJHae+9pu3drkZEpvVy7pq1apdWrpzVtmiZKkyZa48Zaw4aU4Cuke9I96Z50
T7on3QNAKkC6DyKS7seP1zp10t54IzHjp/Dy7rvaiy9qJUokHqedFsry5YnX
jp8+nRJ85eDBDTdu3PD3+zfNpvtyhzUrxWK67zrbUvnoHUtl4CRLZX5H78vP
7S2V0EWWypX8lsryZywViye/19/gfbE404LFKzBauYSiFNI9AKQCpPsgEhNz
c9o07aWXtN69tddfT+mlf3/tuee0IkW08PA0UdavT0z3X30V+KxK8bSQ7kn3
pHvSPemedA8AqQDpPqjcvHUrMYxMmqRNnpzSy6efan36aPnyaT/9lCbKsGHa
U09pxYtrDRpQgqxwZD7pnnRPuifdk+4BIBUg3QeV2wkJjZYvb/Trr0FQFi4s
MX68Vq1a4L9nSJ7Ss6f2xBOJZyIEfI44iqdlyZIFpHv/FYuXJ7OY7qvvsFQs
pi2LZ2EvbuN9OVjBUpnZ3VLp+5Wlcj3EUrG409/5yPtiMd1b/DZpVRNLhXQP
AKkA6T7Y3IyJCZby7pEj2tChWo8eaaLUr584sV7XromzIlCCq2za9OeVK1f8
/dYl3ZPuSfeke9I9AMCvSPfwm+8vX240c2ajMWPSROnbN1evXomzDQR8PkOK
pyU8/K+rV6/6+/1Auifdk+5J96R7AIBfke7hN/fi429GR9+8ezdNlOvX6y9f
ro0bp330ESXIyu7dayIjI/39fpCRcwAj9saIhEAV+ZixUiym+8kDLJVx71oq
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
WWvNhHPVq1dXe2HIkCFuqu3du1f2gg9fTvv37z9z5oyv1gYAgI50DwCp2+nT
px/5X3q3b1w4YcIEx/vGxMS0b9++dOnS48ePT/6We23OnDmPPfaY06MRfMvr
dG9yw3755Zey/kGDBlloI1xatGhR5cqVGzVqdPLkSTfV8uXLJ3vBh+dQfPrp
p3Xr1vXV2gAA0JHuASCtyZEjh/T5P/74Y6Ab4hexsbGlSpX6/vvvk+GxvE73
Jo0YMYJ0H1hxcXHqHAofpvs7d+7kyZPHu+kaAABwg3QPAGmNz9O9pJV9+/YZ
/7tz58579+65qn/r1q1t27ZdvnzZVw0w+uKLL4oUKXL//n1XFR48eHDq1Kmt
W7eePXs2Pj7ezDql2vnz5+Uuhw4dMh4SYJfuo6Ojd+zYce3aNYtPQde/f38v
0r2r1uq82ALi7t27spdlx/nwCfqDvPC2b9/uq1eXPFk1RjKT7mVjyuPKJjpx
4oT7DTty5MhKlSolw8kjAIA0hXQPAGmN+3RfsGDBnA46d+5sV23//v25cuXq
3r37e++9lzlzZllh6dKlIyIihg4dmjVrVvlvoUKFDhw4YHevBQsWlCtXLl26
dOpzJ1++fOPGjfPhIfR37twpUKDA6NGjnd4aHh7erVu33Llz6x982bNnHzt2
rONXARKr5VkvW7ZM/p49e3bZsmX1uxQtWlSvptJ91apV5Zk2adIkY8aMqk7J
kiV/++03u3Wa3LCicuXKxYsXz58/v1qh/Gt3r7Vr13rRWo+2gAT/Rx55pGHD
hvL3pUuXunbtmiFDBnWX9OnTf/PNN6pavXr15KGdbvDo6Gh5dLl1zZo1TneH
G8uXL5c75smTx/GmkJAQuWndunX6kooVK8qSu3fvhoWFNWvWLEuWLKqdsh22
bNlivO/kyZMdd4HYs2eP3aNMmzatTJkyRYoU0c9kkXeN8S7Nmzc31o+Kinrr
rbeMGzZbtmyNGzd2fBkokZGRsuVnzpzp6ZYBAMAN0j0ApDUepXv1AfHcc8/Z
Vdu+fbssV7leYr6qJjlXnc6v/tuhQwfjXV588UW1XHJT27Zt69Spo455btGi
ha+e2meffSYh9MqVK443qaPc9fTdoEGDvHnzqv++9tprdpVfeuklWS5JWVao
6qRLl65YsWKSHI1nTKt0r2+HQoUKyRZ4+OGHVf1Zs2YZ12lywwoJicY6SaZ7
k631aAucOHFCs31jI9G+fPnyqprsaHkW8seKFStUtS+++EL+mz9/fsnydmuY
M2eO3FS8eHEvfqH+/fff5b6yKx1veuihh+SmVatW6UsKFCggSz744APZUPKK
qlSpUokSJVSDQ0JCbt26pde0S/fqjSB27dpl9yhffvmlqqN/Y+M+3bdv315V
kw0uu+OZZ55RG0p89NFHTp/jm2++KW8ET7cMAABukO4BIK3x6Mh8ySBu0r2Q
XBMbG/vdd9+p/0p9SXPvvfee/P3oo4/q9adOnSpLJJpNnz5dP2g5LCxMfRUg
ydQnT61evXoSrJzetGbNGnmskSNH6geW37t3r1evXppt4nq7edVUXq5WrZr8
W65cOWnzxYsXE2yz4Z06dUqvpqd7eab6L9SnT5+uWLGiZvvdXOq7aqqrDWv0
r3/9SzNxZL7J1nq0BVS6z5w5szrWol+/fuvWrVNHWcg69dMuoqKi1KRzM2bM
sGtV48aNZfmYMWPcN94pL9K9ePLJJ48cOaIWystbLfziiy9cPYoEf1fpXrdj
xw5Vx82R+RcuXFB15syZoy+Ud8EPP/zQpk0bV9dE2Lp1q9zF8bABAAC8RroH
gLTGh+k+ffr06ofyc+fOyX8LFy6scp+EL/Wjs6ocHR2dLVs2WTJ27Fi79Uyc
OFGWSxK0+qwSEqQl0h5J3K4qOGbtu3fvqp/I582bZ1yu8rKoWbPm9evXXa1Q
pfuCBQtGREQYl2/YsEHd3c3MaT5P90m2NsGTLaDSveL+u5dRo0ZJncqVKxsX
Hj16VMXzS5cuuW+8U16k+9atW9s9Own7mrPDEnS+Svf79u1TdRYuXJjEEzOI
j4+X94tsPfN3AQDAPdI9AKQ1Pkz3en6XkCj/rVKlivqvxCX1i7D6b3h4uPqv
Y/ZUNSWgef98/rFmzRpZlcTSJGseOXJk0aJF48aN6927t8q2H374obGCysuy
odxfK83NnPlFihSRmz755BNX9/V5uk+ytUZJbgE93btJx4o6hVwzHK4v3n77
bc3h1AzzvEj3P/30k11NdVhCu3btXD2Kr9K9qFOnjmY7NEWe8oIFC6KiotxU
1knljh07mqkJAIAZpHsASGuSP91Pnz5dfdBkdKB/BlmfW2/u3LkSr9zMln/q
1Km+ffsWKlRIczBixAhjTZWXX375ZfeP6Cbdq7g3YMAAV/f1ebpPsrUJnmwB
Pd2fOXMmydWq5/Lss8+q/8bGxubPn1+WrFy5Msn7OuWTdK9a1aZNG1eP4sN0
L6vq1q2bmkdCs02pFxoaOm/ePPevanl51KtXz00FAAA8QroHgLQm+dO9Oule
vOpCv379rD+vSZMmuTkGYM2aNXny5NFsxwn07t170aJF+/fvl2ar08Odpvte
vXq5f0Q36b5y5cpy07Bhw1zd1+fpPsnWerQF9HR/7tw596tNsJ2XIUk8Xbp0
hw4dkv8uXLhQs01Zb/5ye3Z8mO7dbGEfpntFNtrHH3/coEED1UjNNi3hhg0b
XNUfPXp0pUqVklwtAAAmke4BIK1J/nQfFhamPmjOnz/voyfhxMyZM7NkyeLq
1pIlS0oDOnbsKE01LvdHuo+JiVGXBZw7d66r+5pJ9+3atZM6SX71YbK1Hm0B
j9K96NGjh97UNm3aaG7PSkjSH3/8oR5dn75Pl8zpfu/evarO1atXzbf/+vXr
U6ZMUQ3LlSuX3QbXDR48uHbt2uZXCwCAe6R7AEhrkj/d3759W10tPcmTuK1Y
vny5PITxCmg6NemfsDsz/cGDB9WrV/d5uv/qq6/Uwx04cMDVfc2ke9lcmokr
BpppradbwNN0L880Xbp02bNnP3bsmOzrzJkzR0ZGmrmjU3v27FGPbjel/IwZ
M9TyZEv3ERERqs6WLVvcNNjpxPhyF3XfTZs2Ob1X9+7dQ0ND3awWAACPkO4B
IK1J/nQvxo0bpz5rRo0aZfxB9vDhw/IQJmchc+/UqVOyfv3KdEbXrl1Tjz5z
5kx94e7du2vUqKGWW0n3kmpfeeUVfcLAFStWqMv8uZ8wzUy6nzZtmma7MEFY
WJi+MDY21u63YDOt9XQLeJruE/75yb5cuXLyrzTJ5L2cktwtLx7NNieemglf
nvLo0aP1EUuypXtRuHBhzXb+vvF1e+PGDf3vqVOn5sqVS17hdi/jYcOGqfVf
vnzZ6Zpl47/99ttuHhoAAI+Q7gEgrQlIuo+Li2vVqpX6uClUqFDr1q07depU
vXp1NRHZ5MmTffHMEipUqDB48GCnNzVp0kQl8caNG3fu3Fldxj1Tpkxly5a1
mO7VseLZsmWrX7++bAFZrWY7t939fHRm0r2kRRVd5SGeeuqpLl26NGvWTHaf
3WXUTLbWoy3gRbrftGmTPqLYuHGjyXu50rNnT7WqggUL1q5dW9qp2Q5jUEca
JGe6/+STT1S14sWLt7epXLly1qxZ9bDfo0cPtdOzZ89es2bNbt269e3bt169
eupe//73v52u9tKlS3KvtWvXmt0iAAAkhXQPAGlNrly5pM//+eefzVRWlzaT
RGO3XOV3u3Qvyct4qzHdK7Nnz1Znf+tKlSol0d4nv90n2E5kdjWZ29WrV0ND
Q/XHlYzctm3bo0ePfvbZZ47Ztnv37rKwT58+7h9OXQtgyJAh06ZNy5cvn1pz
+vTpW7Vq5ernWp2rDWvn0KFD+s/rSu7cuUePHu1Faz3aAupACDe/OzulLjGv
f8ljRWRkpDRPb23hwoVli92/f79Dhw7a/x6hoX5bd5Xu3WxhPd3v27fPTUvi
4uLGjRunvl5QJJXLTjl9+rReZ/fu3c8//7xqia5QoUJjx451NW2+vGZCQkLc
XOIBAABPke4BAMns+vXrO3bs2Lp1q9Nz5K2QwJUxY8bffvvNVYVLly6tW7dO
sphENt8+dHx8/MGDB7dv33779m3frllcuHBh48aN69evP3HihMWW+28LSIyt
WLGiDCe+/PJLX63z6tWr8qzdTF+QbGJiYuRFK43ZtWuXfhaGI/XaDgsLO3fu
nJstLK+WChUqDB061D+NBQCkUaR7AEBq0rdv30aNGgW6FWnRhx9+KGOJPHny
OJ1iDkaLFy/OlSuXm28JAADwAukeAJCanD9/PnPmzOHh4YFuSJoQFxd3//59
2eYff/yxOnZ9/PjxgW5UEKhbt67dqRAAAFhHugcApDIDBw50P189fGXFihUS
6tWccpptYnmnkx7AaMOGDSEhIT4/LQUAANI9ACCVuXLlyrRp0wLdijRBtvMj
jzySOXPm6tWrT5kyxefn8qdKW7duXb58eaBbAQBIhUj3AADACn6vBwAgJSDd
AwAAAAAQ7Ej3AAAAAAAEO9I9AAAAAADBjnQPAAAAAECwI90DAAAAABDsSPcA
AAAAAAQ7DQAAAAAAAAAAAAAApACBPoIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
p5+q5b/++qvTO966dWvbtm2XL182+UCnTp3at2+f3ZGfdmJjY3ft2iVNUv8N
CQkxk+7v3r0ra5bGXLt2zc2jy5qT/MJWGiDb4cCBAx6dYpNkA+STRRqwdevW
s2fPxsfHu1nVnTt3ZFXG/+7cufPevXvmGwMg4LxO9+b71Rs3buzdu1e6NfdH
Qkqn5KolOpXuc+fObTw4X4Z26pguV+nefLemSDVpsNO5CAAEUFxcXNWqVeWd
XqVKFemC7G5N8hhOefufP39euoJDhw5Jt+C0jnRTO3bskGq+abGBDJBkzVev
XnVTZ/Xq1fLsqlevPnHiRPmjU6dObipHRUUdPnx4+/btSc4RJ09c+mrpsU+c
OGGmDzQ5EFWk2p49e44dO2ZmzWaY77HVcQ7+SPeevgxk58qOcP+BaH5/ecSj
dG+mnQm2wCUvAJUvJk+e7D7dexqyvEa6T5VcpXt570s/L8urVatmd5cFCxaU
K1dOP4Y/X75848aNs+vSZ82alTNnzmHDhslY8e233y5durSq/PDDD7/55puO
Gf/KlSvt2rXTz/YqUaLE/PnzCxYs6JjupV965JFHGjZsKH/LmLNr164ZMmRQ
90qfPv0333xjrCxvdumm1ABVPXqdOnXk/eK4HSIiInr37q2vSmrmNHjppZe8
a0B4eHi3bt1k2Ky/d7Jnzz527FjjEFe2vLSwe/fu7733ntoCsrmkPUOHDs2a
Nav8t1ChQgcOHHC+/wCkPF6kezP9qrh9+/bnn39eo0YNvab8Id2a8VtBMW3a
tDJlyhQpUkQ/wlDGKsY+rXnz5nplle5DQ0M1w8H5xYsXL1asmIw9HNO9mW5N
PPbYY/JAEg1Gjx4tq1I1pYuTobVjggAQKD///LN6ey5atMhMfRlWyVt72bJl
8vfs2bPLli2rdwVFixa1q7xq1aqqVauqI4hE3rx5ZWxj95vF8uXLZYV58uRx
fKyQkBC5yXhQ9LfffitLhgwZsnfv3qZNm2bKlEmtWbqsJUuWOG1wnz59pII8
rgylVH8lkdCx2po1axo0aKA/F+laZSw6ePBgGaDa1ZS7v/XWW8Y+MFu2bI0b
N3Y6Bbr5gWiCbew9c+bM8uXL61tM+nDpnCWYG6vJ8DinA/lwcbpOkz125cqV
ZRvmz59fnaAh/9qtf+3atd41IMHcy0BUrFhR1nP37t2wsLBmzZplyZJF1ZfX
2JYtW+wqm99fXnCf7j1qp5g7d67dh6B8LGou0r2ZwYDkBWmA7C+7T+cRI0ao
5Tdu3DD5TDUDk3dByucq3YvvvvtOdUTGHkAGpaq+DB3btm0rfZR6t7Zo0cJ4
36+//loWtmzZsn79+uqNXK1aNen91H3lVW2sfOTIkQIFCuj9s/QA+tlemkO6
P3HihGbLv/KSlg5Q1ZFuU30VsGLFCr3muXPn9HeTtLZWrVoqOz/00ENTp041
rjMmJuaJJ55QPV7Pnj1ffvllFavVW1UYTzoz3wB1dJNSsmRJ6YVkO6j/vvba
a3q17du3q/e79s8vZUJ9ka6PzDt06GB+nwIILE/Tvcl+VfqcQoUKqZrSnUq1
KlWqSIcm/5UuyzgJ0pdffqmGW/qJtEmm+ylTpmj/HJy/detW+fv111+XhK79
b7o32a0J1avLcEt9jsgwRs0AIGRo5P44LgDJZtiwYertbPJn4pdeeknqS65X
RxdrtmAlwy3JOHXr1jXWHDlypN5fPfnkk/qQrFKlSjdv3tSr/f7775ptGlLH
x1L9m2RDfYkaXkpPqDo3+UMfNEozZs2aZbcGiUWq51Gxq1SpUvK3BCi7ahKB
VUaTDq19+/aSv6TLUr/d5MmTx+4QKamgnog8X9kazzzzjBoBio8++shY0/xA
NMH207asUFWWLl3GpfLU1BaQ0anxK1y7cK3u8txzzzluQPM9tsR/49o8Svdu
GpBg+mWQ8M+nxgcffCCPLh+CUkF9goiQkBDj18Ie7S8vuE/35tsp3nzzTXWT
7PoaNWrkz59f3yOO6d7kYECGFupn02bNmulvW3mFq1eL48vbDc3A/L2QwrlJ
9/p5l8ePH1dLpC9SndL06dP1l1NYWJgKodLV6/dV3a/IlCnT5MmT1YEokZGR
8r5Wb0bjAz399NOabbp+/XvXK1euSC+h1uA03ct7RH211a9fPxlIqy+1Tp06
ZfwmsHXr1uqxVq5cqZZcv35d3iCyUPqEY8eO6TXVFCLyXj569KhacuDAAela
5Znu3LnTbrOYb8CaNWtky0i3ph+xL7f26tVLs411T548qRaqdC+kg5INpb5U
EdIhxMXFvffee/L3o48+6nIXAkhh9HQvI70p/0s+3LX/Tffm+1XRuHHjp556
SvoW/Zt8SeLqR5mePXs6tmTHjh2qJUkemb969eqyZcuqg/MHDx6s2aYIVsMw
Y7o32a0l/DP+EX369NEfffz48WrhV1995dEmBeAnaqqlli1bmqyv0n21atXk
XxkIScelTqiUrsP4E7NkDRVMunTpol89ZP78+eqHnldeeUWv6UW6V+Mi6Y7U
wtOnT6tz6osWLWr3zaGMAGW5dEeqd1WXAunYsaPdA7366qua7YcV48/6Z86c
+fe//z1z5kxjzQsXLqgGzJkzR18oo7UffvihTZs2drnS/EBUSB+uOtJhw4bp
g0kZD8sOeuaZZ9xc90TlR6fh2nyPrVOfCB4dme+mAeZfBgmGTw0JC0eOHFEL
JWKrhV988YVe0/z+8o6ZdG+mnRs2bFC/wsvG0VO/vFTUp7ZduvdoMBAeHq6+
zZg4cWKC7XgS9W2805GAG6T7VMlNutdvUr9HR0dHqzfj2LFj7WqqU5lk2Kkv
Ud2vRGBjn5xgO/5KrTMiIkItkZ5HLfn+++/tVqu+D3Sa7hW7l7qRPrr+6aef
jMvl9V+4cGG70bX6rqx///7GmqqbHT58uN2aTTZAcfx9Sjo39bzmzZunlqh0
L72fOpro3Llz8l9ppOrbZQNqti9R3T8QgJRD739c0fsfj/rVBGddihgzZozU
LF++vONN5tO9DD7VLyx//vmnxPySJUvKTWrafLtj/8x0awn/jH8cn1fTpk0d
RzUAAqV69ep2QyAJLJ8ZyIjOWF+le1GzZk3Jqq5W+9RTT0mdypUr28XSSZMm
qbvrv6d4ke4LFiyoDyMViVFqtXaDRsmPmuEipGpMlTVrVrvLlaqf42vVqpXk
efH79u1TD7Rw4UL3NT0aiEoKVpVHjRrluCr3h1W4CdcJpntsnW/TvfmXQcI/
nxqtW7e2a7P6ZdB4sIH5/eUdM+neTDsbNWokSyR3203npSY3M34OejoYEB9/
/LGKWgcOHHjrrbc02/HGnh63YByZeHRHpGRu0v2ZM2fUTerb0fDwcM32XZ9j
Z75r1y7N9tWovkR1vxUqVLCrqaKr2Lt3r1qiXpzS0Tl+Lel0znw9XNsdU2Tn
k08+kTrFihVz7BLV2S7lypXTl3To0EGWvPDCC8Zq6izUfv362d3dZAPsyGfl
okWLxo0b17t3b9Wpfvjhh+omle71/C69rmab3Eb9V21b2ezmHwtAYOmDOhlY
9vtf6tt1fVDnUb9qdPv2bRnNfvPNN4MHD27YsKHm4jtAj9L9sWPHNNulUuTf
YcOGJbhI9zo33VrCP+Mfu2GtkDZrtoO1XLUHQHJS6d442pG3rXHMHxISYqyv
0r3EH6e//OpUnzBjxgy75ffu3VMnP+rRyYt07zi8FEWKFJGbJDfpS+7fv68O
RNcPDZUlasZmu65J2qB+Yi5duvSIESMOHTrk5qnVqVNHs/3GKqPHBQsWOD2L
P8HDgag6zSFfvnwezeqsuE/3Ovc9ts636d78yyDB9aeGOtigXbt2+hKP9pcX
zKT7JNsp+12tx+77sQRnc+Z7MRiQ9Tdv3lyzndQsW0PeQRIoPH2mpPtUyU26
1weo6nTO6dOnq/9mdKC/MPSDRV11v7du3VI19SPee/ToIf99+umnHdvmPt2f
OXPGzfN6+eWXpc4zzzzjeNMvv/yi2X4r1ztk9R1apkyZ9K+CL1++rI54+fbb
b+3ubrIByqlTp/r27aufKmsk3ZGqQ7oHUhnz59171K8q8+bNCw0N1ecgdf/R
7FG6l79r166t6qvBktN0b6ZbS3A9/vnzzz9VZfPT/gDwn44dO8r7sVWrVvoS
GRCOtJEYqLlI9zLKcrNO/eehTZs2Od6qZhYaMmSI+q+v0r0K3QMHDtSX6MeL
SggK/Uf27Nk127mQdneX0WbJkiX13qxixYrvvPOO3XR2igxlu3Xrps8Rly1b
Nlmt9Mx2fbVHA1G1VZ1WTpL7dG+yx9b5MN179DJIcP2podbfpk0b40Lz+8sL
3qV7u3aePn1atc3xmpKO6d6LwUCC7cQN1VQxbtw4L56p8fXgxd2RMrlJ959/
/rlmO+RDfeuozgcRr7pg/OI3yXQvoVUt6dq1q+bihC/36f7cuXNunpf60sBp
Pykr1Gyzr+iHr0RGRpYpU0YW5s+fX96bb7zxhpqDpXz58rdv37a7u8kGJNhO
OsiTJ49m+8JNPiIXLVokG1nCe+PGjTXSPZB6mU/3HvWr0dHRXbp0UWPCRo0a
yfBAxgwXLlzQz29ybImn6V51+9WrV1c3OaZ7k91aguvxz8KFCzXbz15c6xNI
CdT0Pk5n1VMdiNN0rx/r7pSeazZv3ux4q7oYx+DBg9V/fZXu1ZWehg4dqi9R
v6U6lSVLFscBXmxs7JIlS+ReehaW0Zf0w06v9CejwY8//rhBgwaqkZrtd+QN
GzboFTwaiKpTRI3fsZjn/rx7kz22zofp3qOXQUJSqdlx/R7tL49YSfd6O48f
P65aFR4eblfTMd17NBjQLV++XJ9dX97IXjxT45vCi7sjZXKV7uUto74Tk45L
LZFhpKpp5lKV5tO99MOaIcwaWUn3au4m6WnN3BQTE6Nm9jOSt6fT7wDNp3u1
ATt27Gh3ehfpHkjdzKd7j/rV//73v5rtyhr6BE3K2rVrXX007927V93k5nrQ
xnR/5cqVZs2a6TOKOKZ7k91aguvxz7hx4zTbeYhJPl8AyUA/Dt/xgm5ep/u4
uDh1ErHj9ESSvFR00m/6448/VAMcv/Ezn+5l1Kp+lJ87d66+RM1d9tFHH203
2LJlizr26YcffnDV/vj4eKnWrl071bAxY8a4ebLXr1+fMmWK6vGkf9b7Ro8G
oh9++KEsKVKkiBcXuHeT7s332Dr1rJ1mSU8b4NHLIMHzdK/zaH+Z4ZN0L69n
dYCH4xQNjuneo8GAIh/NagZ+NQ+5xHx5K5m8r84YfDy9L1Isp+le3ibqu1yh
X2b09u3b6mB1M+ebm0/3arwq5EPEWDMiIkJd7cK7dP/XX385/bSSIK/6OuM1
5tSEFQMGDJABsAxx5Sm7uVymyQboMwzYnZgmHZo6x410D6RW5tO9R/2q+h3K
8ZrC6iBPpx/N0pGqm5xehFcxpns7dunefLeW4GL8Iz1w8eLFNWdzVgMICHn/
ymhN3pVPPPGE3c/ZXqd7Ua9ePc02857dcjXzhnHYuWfPHrVE/jDWnDFjhlpu
Jt3rP30eOHBALVFfGjg9kblVq1ZyU2hoqL7E1Vxkan57u9/fnVbWp8XTj0L3
aCCqn0RgnHFd537uOFfh16MeWycfRprDJdjcc5O+zb8MEjxJ9x7tLy/4JN0n
/PPtit05BeLtt9/W/jfdezQYSLAlNfW7ZOPGjeXv/v37a7arMyT5y6MdzcCj
OyIls0v30geuX7/+2WefVQuNXV/CP7+5aLYpPY1fsR4+fFhe0sZ5Rcyne3mH
quuEVqtWTb9es/Tw6pqkmrfpXl7q6pvJIkWK6MNaeSx15Rd5B+nT+iX8M962
uzCHKyYbcO3aNVXNeG2O3bt3q+thaaR7IPXy6Hr35vtV9fFduXJlfWATGxsr
99LPy3PaGDU5s4wujCs3nvNuPt2b79YSDNe7X7ZsmVoindsLL7yg2Q7LtxvG
AwigpUuXqrewjMT00ZF0PoMGDdK8TfcSydUxw/369dOnFv/zzz/VpHadOnXS
a8rIUF2wvl27dqqm9BVq3jnFMd3Lml999VW9H5McrVZrzMvqwPimTZs6tk1F
y8yZM6suWv597LHHnnrqqW3bthmrXb16Va22T58++sKpU6fmypVL+m27yfSG
DRumWnv58mW1xKOBqFSWTKrZThmYPHmyPtG09NsjR46UZhjnlrfjKlx71GPr
pk2bptnO/zKeLS6fNXa//ptpQIInL4ME06nZo/3lHV+le/XroWwB2adqyf37
99999121/e2uHWN+MKBXzpkzpzrMODo6Ws1jULduXXkI889UMzB/L6RwerrP
nTu3OjdHkZfigAED7F5L0tuoLzxFoUKFWrduLW/M6tWrqyNP9JdugifpXnz/
/ffqvZ81a9b69eur75AzZcqk3qTepfsE2wkv6vR5GUlKI5s1a6ZWKCZMmGCs
qR8/IBuhQYMGLWzk2XXr1k1q2n3nab4BTZo0UVtSuncZ0pcrV07+ludVtmxZ
jXQPpF4epXvz/eqaNWvUQhladOnS5emnn1YjEHXhaVcfzWreZs02rW57m8qV
K0tnqw8ezKf7BNPdWoLhisCa7Th8uaM6SlbI2MbzjQrAjyQsqIitxkLSS6jj
J8Wzzz5rrGky3Sf8E3Y026RGMqySgY0a7JUoUUK//LqirkGs2S51V7t2belS
NNvPx+onZqfXu9ds09k1bNhQVqt3jPp0xxIk1VXCnf4ULgFc3UVds37z5s1q
vn1pXsmSJVu2bNm/f3/ppVWXJesx/r7co0cP9SyyZ89es2ZNGSj27dtX/UIt
/v3vfxsfyPxAVFy4cKFYsWLqVnkuUlmSmtoLMkRUTXWznZ2Ga/M9tk5G/qr3
ljZLgpbPGmmJfNY4vVRfkg1I8ORlYDI1e7S/zJPX/MP/UA2WF4m+ZPXq1Z62
M8H25Uz58uXV2kqXLi17QX1qq5817dK9+cHApk2bVCONr4ojR46olXs0Z4Jm
YP5eSOGkizPuWel2JN7269fP+DK2M3v2bOM0laJUqVLyqjN+FaDmfnST7vft
22dcvnTpUvUDk3o31apVa+fOnepXHv13H+XUqVOqmv7tqBvSb3Tt2tU44aQ0
yfgxocgIXDoZzQXpWo2zfZpvwNWrV9Vl9RR507Vt2/bo0aPqdBu9U1X53S7d
67Nake6BoKOfQGcm3Stm+lVVTY0KFBmqydhVhgRqlhKnjZFbZdyuRsuKjIhq
1Khx+vRpVUF1U/pJWEYq3RuvK22yW0v4Z/zz6aefynBOn/Ynb968s2bNMr0h
ASSfjRs36sladRSSASVN250J3r17d830z6MLFy40jq8yZ84sQcxxOrvIyEjp
SfRqMiB8++2379+/ry5YrK7LrKh0X7VqVflD/8JQxo0Si4yjspUrV6qn4Oos
ZnVp8ueff179Nzo6etKkSY8//rhdVymr1a/xpNu9e7fcUR+1KhLHxo4d6zif
m8mBqCIjwOHDh6vvJRRpzzPPPHPw4EE3G1kd5u14FYAET3pso0OHDum/7yuy
qUePHu1FAxSTLwO1SV2lZuP6PdpfJqlvPFwx7jLz7UywBR8J6cavzoYMGaKm
xJGw49iMJAcD8r5QG7NLly529503b566i9Ov650yPpDJuyAVu379+o4dO7Zu
3SqvW1+t88yZM5s3b5ZO3lcrVGJjY6UrXrt2rdM1S1cs/YN8NEyYMEGSu6Tp
nTbLli2bOHGiej+a+Y7alUuXLsmwWRqgH2cFAE6Z6VdjYmL27dsnIw1j6E6S
3EvWvH79euniHM9C9ZSZbk2l+/nz5yfYTgTYsmXLsWPHLD4uAH9TQ6Zt27Y5
hi+vSe5evXr1gQMH3E9mLlFU+ij9xHmnVLqvWLFigu2ry/3790vP5sOmSguP
HDkSFhYm3WySq1U9tlQ+d+6c+zGe+4Goo4sXL65Zs2bPnj0eHWXtincD0QsX
LmzcuFH2yIkTJ3wygjX5MvCIR/srgCSby/aXHWpyS/ojZDlFukeqpKY9adSo
kdNb1XeejtNYAQDccHXsIgB4zc0V8QB4inSPVElddbRMmTLGaaaU8PBwdYYU
h5ICgEdI9wB8jnQP+BDpHqnS9evX1Si0WLFiw4cP/+GHHxYuXPj555+3adNG
HZbfs2dPLy4/CgBpGekegM+R7gEfIt0jtTp8+HBoaGj27Nnt5tCoUaPGzJkz
ifYA4Kknnngib968v/76a6AbAiD1+Omnn6RjqVu3bqAbAqQGpHukbvfu3Vu9
evXcuXPnzZu3efNm40WgAAAAACDVIN0DAAAAABDsSPcAAAAAAAQ70j0AAAAA
AMGOdA8AAAAAQLAj3QMAAAAAEOxI9wAAAAAABDvSPQAAAAAAwY50DwAAAABA
sCPdAwAAAAAQ7Ej3AAAAAAAEO9I9AAAAALh38uTJWbNmLV68ONANgXOyg+bP
n//3338HuiGBRLoHAAAAUqv79+/v3r172bJle/fujYuLC3RzkltUVJQ8cXn6
x44di4+Pt7Kqr7/+WhJThQoVfNU2uOfRvjtx4kT69OllBz3++OPJ07yUiXQP
AAAApD47d+6sX79+5syZ9dF+0aJFp0+fHuh2JZOIiIjXX389Y8aM+tPPlSvX
888/f/HiRe9WSLpPNl7suyVLlqiaDz/88J07d5KztSkK6R4AAABIZSZNmqSH
o3z58lWpUkVSj/rvO++8E+jW+V10dHSNGjXU882QIUO1atVCQkLUf+WPlStX
erFO0n3y8G7fxcTEtG/fvnTp0uPHj0/mBqcopHsAAAAgNVmxYoUa3ksU3b17
t1oYFRU1fPjwrFmzhoWFBbZ5Xtu2bVuvXr0cl//666/Dhg0zLpkwYYI8/YwZ
M86ZM+f27dtqoWyKunXrFihQ4Ny5c148OuleMb8XvOOPfZd2kO4BAACAVCMu
Lq5q1aoytq9SpcqtW7fsbo2MjHR/9/j4+PPnz2/duvXQoUMPHjxwWufOnTs7
duyQar5pscG9e/dkzVevXnV6659//vl///d/jsu//PLLtm3bGpe0bt1atkCn
Tp3sasrG8dWR+dHR0dLUa9euub9XbGzs/v37Dxw4IH+Yf6y7d+/u27dPcrSb
9Z86dWrXrl3SDPOrNcP9LkjwZC94xx/7zmvyDpK9cPny5WR+XK+R7gEAAIBU
4+eff1Zj+0WLFpmp379//5w5cy5btkz+nj17dtmyZY3n6dtVXrVqVdWqVdX0
ZSJv3rxDhw6VPGiss3z5cllhnjx5HB8rJCREblq3bp2+5Ntvv5UlQ4YM2bt3
b9OmTTNlyqTWXLx48SVLlujV1q9fP2vWrEGDBj366KOzHHTt2lXypvwh7Vch
+tlnn5WVNGrUyP1z96ipKt3L05eo3qRJE/3Eh5IlS/7222+Oa4iIiOjdu3eG
DBn088FzGrz00kt6zbNnzz7yyCMNGzaUvy9duiRPR7+XbOpvvvnGuNq///5b
dlmuXLn01dapU0cSqL93QYLne8E7JvedKFiwYE4HnTt3dqx5584dx5pGhw4d
srvLggULypUrly5dOv30lnHjxrn6vivlIN0DAAAAqcawYcNU5DQ5RbzETKkv
ieyzzz5ToUASTbFixbJkyVK3bl1jzZEjR6oK2bJle/LJJ6WO+m+lSpVu3ryp
V/v999/VGdOOj/XQQw/JTatWrdKXqMhcqFAhFZblD4nPaooAaYZERVVtzJgx
zZs3f/zxx+WhmzsoW7Zs3rx51d/qgmhSX7WtT58+xrbZ8aKpQk1U6KqpSkxM
zBNPPCE3Zc+evWfPni+//HLWrFnV3cvaGGc/OHHihCwvXbq0RPvy5curapLf
Jb3KHytWrNBrnjt3Tt/sZcqUqVWrlmqMtHbq1Kl+3QVe7AVXJEqPHTvW1a0m
912CQ7pX93ruuecca0ZHR0s8t0v0+lco0my7YyRefPFFfSO3bdu2Tp066hut
Fi1auGlPSkC6BwAAAFKN559/Xgb2LVu2NFlfpftq1arJv+XKlZs+fbo6/lny
6alTp/RqW7ZsUQGnS5cud+/eVQvnz58vQU8WvvLKK3pN7yLzo48+umbNGrXw
9OnTFStW1GwHD0gz9MrmjwmXFqo1iBw5cgwYMODYsWOOd/RfU6VJ6qGPHj2q
lhw4cEACvqx2586ddo+l0r3kdPVjcb9+/datW6d+JpZdYDw0Qh21LmlUn1zu
+vXrEjllYZYsWfTn6L/nleCLI/PXrl0rT/bNN990eqvJfedIVugq3TuKi4tr
37691JedsnnzZuNNU6dOVV+YyHtB/4osLCzskUceUd+DmVl/oJDuAQAAgFSj
evXqMrDv37+/vuTIkSOfGUiaM9ZX6V7UrFlToqKr1T711FNSp3LlyhKLjMsn
TZqk7q7HWC+iZcGCBSMiIow1N2zYoFa7ePFifaFHufLGjRtdu3bVTyKQ1Nym
TZstW7YY6/ivqerHX+NeED179pSFw4cPt3ssle4VN+FRIr+q89NPPxmXR0VF
FS5cWJbLg/r7eSX46Lx7WUmmTJkGDRrk9FYz+86RR+n+9ddfVxHe7uyD6Oho
9YWV49EFEydOlOWNGzc2s/5AId0DAAAAqYZK9/369dOXSBg0jvlDQkKM9VW6
z5Ejx8mTJ92sVh35PGPGDLvl9+7dU8ec//jjj2qJF9HS6UT0RYoUkZs+/fRT
fYkXufLIkSOyKVReUyRR6l9Q+Lapn3zyib6kQ4cOsuSFF14wVgsNDbXbNYqe
7l977TWnz0KR9UudYsWKOZ5zMXr0aM126IU/npdxFyT4bla9ZcuWScB/6623
XFVwv+8cmU/3alp+MW3aNLubwsPDNdtsBo7fdO3atUtuKlCgQJLrDyDSPQAA
AJBqdOzYUQb2rVq10pfs379/pE3v3r1dpfuXX37ZzTrPnDmj8sKmTZscb1VT
9A8ZMkT911fRsk6dOnLTwIED9SVe58obN2589NFHefPmVc9i8uTJ/mjqgAED
9CWSiGWJpFf9B/HLly+rE72//fZbu7vr6V62s5tnIftI6jzzzDOON/3yyy+a
bQq+qKgonz8v4y5IML0X4kxYsmSJNHLw4MFunrWrfefIZLqfO3eumivP8SAK
MX36dPVAGR3oqTklz61HugcAAABSjffee09zMavejh07XKV7p1cw150+fVrl
BbszlBXJenKTntF8FS2rVKkiNw0dOlRfYvFXYwnalSpVknWWL1/et02tXLmy
3GS82ntkZGSZMmVkYf78+SV1vvHGG/ny5VMPrV/DXaene/cXc+/Ro4erdL94
8WLNdgT7nTt3fPi8HHdBgrm9sGfPHs0Tv/zyi5snnuBs3zkyk+7liauc3rNn
T6cV1En34lUXHA+9SFFI9wAAAECqoR+H73iZNq/TfVxcnDpA2vGs8AcPHuTI
kcN40x9//KEaYHelvARPomVsbGz27Nnlprlz5+oLrR8TPm3aNM12trU6wNsn
TY2JiVHnJhibKguffvppuwwrwdM4UaHOZLofP368ZptaP8mb/LcLEszthfv3
7x814ccff9Rs0wW4Od5eZ7fvHCWZ7vfs2aNOMGnZsqW00GmdsLAwtenOnz+f
ZJNSINI9AAAAkGpI3JakJmP7J554wu5nYq/TvahXr55mm3nPbvk333yjosT+
/fvVEv13W/nDWHPGjBlquZloqf+EeuDAAfnvzz//PGrUKImB+fPnH+Xg2Wef
LVeunPwxevTo6OjoBNsEaAsWLHB8FlJH1lmiRAkfNvWrr74yNlVRM7ANGDDg
6tWrK1euXLdu3ZUrV1xtW5Pp/q+//nL6vU1MTEzJkiVleYcOHXz4vOx2QYLn
e8G9nTt35s6du3PnznYHupvcd47cp/szZ86ouQflNayOcHBK3jLqBAr3cyCk
WKR7AAAAIDVZunSpGt5Xq1Zt7969amFUVNSgQYO8TveSB9XZyv369dMvkfbn
n3/K2mRhp06d9Jq3bt1SV0tv166dqnn37l017ZuraClrfvXVV2/cuKEWSoxV
q9Xj6vTp03v37t28eXNZ3tvBk08+WaxYMfW3PNb8+fPVA8lTk6evfuq9ePGi
ZFv1I7s8lpWmvvLKK/qUaytWrFAXSuvYsaNxc0lo1f73QoFumEz38fHxjRs3
lmpFihTRJ5CXoKqugSiZVN/X/tgFnu4F9095165dEu2l5XbR3vy+c+Qm3cv+
UlfZK126tJuvWZRx48apNowaNcp48MPhw4flIdTMBikW6R4AAABIZSShqHwn
JEZVrlw5S5Ys6r/PPvussabJdJ/wT3rSbOeSt2jRokqVKirvlyhR4tq1a8aa
6tJvmu06a7Vr186UKZP8LXdR8/k7vdi6yJYtW8OGDWW16lJoBQoUsJtlzuSR
+REREZ06ddJXmyNHjscee0z/r/wt4dfrpqoj26Wp9evX17eAY1P/+9//6hu/
QYMGLWxat27drVu3CRMm2F2ewGS6F8ePH1fn70szpIXNmjVTGVzIapNhF5jf
C27s2bMnT548HTp0cDw83qN9Z8dNum/SpIm+kqLOLFy4UK8cFxfXqlUrVblQ
oUKy16RJst3UNnEzrV9KQLoHAAAAUp+NGzfqsU6z/ThbtmxZiXJ2s+11795d
bu3Tp4+ZdUoIkiyvx4fMmTP379/fcZq4yMhICXp6tcKFC7/99tsS5dR14tas
WaPXVNGyatWq8ocEYVVfYpTEq8uXL9utdsWKFTVq1HBsldy3ffv2dgt//vln
CeDqzHElS5Ys//nPf+yudGa+qWo29SFDhkybNk1FbDdN/fvvv40byo60xHj1
gVOnTqnljutxdO3ata5duxqncK9QoYIxrXv6vDzaBQke7gWn5Lm//PLLrs58
TzC97+zIE5SaTtuQJ08eV/tCkcbb3WX27NnqfAddqVKlJNrz2z0AAACAgIiN
jd29e/e2bdscM7jXJPStXr36wIED7i8NdvXq1fXr1xvPRnekomXFihUTbL+Z
7t+/f8eOHT5sqqzz8OHDEidPnjzpZuo2M001io+PP3jw4Pbt2502VTbL448/
LgF5woQJktx37dq102bZsmUTJ05Ux1SYOVjCDbVb165dKyneTbWUsAu8ZnLf
+dX169dla2zdutXNMQMpCukeAAAAQEC4uRxb8FLT3zVq1MjpraGhoXJr586d
k7dRLqXKXZBmke4BAAAABESqjJbq6vNlypTRJ6nThYeHqzPlZ82aFZC2OUqV
uyDNIt0DAAAACIhUGS2vX79eoEABeV7FihUbPnz4Dz/8sHDhws8//7xNmzbq
sPyePXvazX4QQKlyF6RZpHsAAAAAAfHTTz/lzZu3bt26gW6Ijx0+fDg0NNQ4
L5xSo0aNmTNnppxon5B6d0HaRLoHAAAAAJ+7d+/e6tWr586dO2/evM2bN1+6
dCnQLUIqR7oHAAAAACDYke4BAAAAAAh2pHsAAAAAAIId6R4AAAAAgGBHugcA
AAAAINiR7gEAAAAACHakewAAAAAAgh3pHgAAAACAYEe6BwAAAAAg2JHuAQAA
AAAIdqR7AAAAAACCHekeAAAAAIBgR7oHAAAAACDYke4BAAAAAAh2pHsAAAAA
AIId6R4AAAAAgGBHugcAAAAAINiR7gEAAAAACHakewAAAAAAgh3pHgAAAACA
YEe6BwAAAAAg2JHuAQAAAAAIdqR7AAAAAACCHekeAAAAAIBgR7oHAAAAACDY
ke4BAAAAAAh2pPs0ZdKkSWPGjBkNwGDHjh0RERH+fve9CgApm7+7QQCAv5Hu
05QSJUrkyZM5X76M+fNnolAoqvz3v98fPXrU3+8+GTlX1P6VBkvTlZqV8sEH
lsqU1yyVlU0tleGjLJUFHbwv4961VIZ8aKlsrWWpLHvWUlnT2FIZ+b735bM3
LJW9VSwVi9uNdA8AqQDpPk3Jnz/PJ5+k/+uvdBQKRS/nz++4e/euv999pHvS
PemedE+6BwD4Fek+TcmdO9fy5Vp0NCVg5eZNSoorsbHH4+Li/P3uI92T7kn3
pHvSPQDAr0j3aYqk+7/+0u7f1+LiKAEosuXnz9e++46Sssrhwxtv3rzp73cf
6Z50T7on3ZPuAQB+RbpPU/LkybVqVWLMlD2flkt8vBYTE4Af7q9e1UaM0N59
N/FfSsopO3asunbtmr/ffWk23X9glaV0P2CypXLjEUvFYrofPcz7sq6hpfLx
W5bKzv+zVCym1LHvWSpWXqwT/6NZKeE1LRWL7zTSPQCkAqT7NIV0r0pUlLZ3
r7ZpU3KXwYO1YsW0Fi2099+npKCyfTvpnnRPuifdk+5J9wAQ9Ej3aQrpXpXz
57Vly7QFC7RFi5K1dO6sFSmihYZqn3xCSUFlz561kZGR/n73ke69Rbon3ZPu
SfcAAFNI92kK6V4VGfNXq6Y98YT23HPJWipW1Pr1S4z5165RUlCJjj764MED
f7/7SPfeIt2T7kn3pHsAgCmke3+Lj4+/fPnymZQhd+6cAUz38fHavXva7duB
L337auXKabVray+8kKylVi2tf3/txx+148cpKaj8/feh2NhYf3cFpHtvWUr3
FieXszhJ2qkSlsrCdt6Xqb0tFSsT+kn5voelcrmApfLBCGvFgpndNStlS21L
xeI7jXQPAKkA6d7f7t69GxoaWqRIkWIpwEMPpVu5MmDpPjpa27ZNmzkz8KVZ
M238eG37du3OnWQtf/yhFS2q5cih5c5NSUFl5szvjh496u+ugHTvLdI96Z50
T7oHAJhCuve3W7fWNm9eo1KlrM2bZw94yZhRC2C6P35cmzNHGzIk8OdZN2yo
ffqpdvBgcm+BXbu0tm21xo21Jk0oKagsXbrgzJkz/u4KSPfeIt2T7kn3pHsA
gCmke3+7fLlKq1YPDRumnTkT+BISEsh0//nnicG2aFGtd+8Al8cf1yZODEC6
v39fu3VLu3mTkrJKbOzxuLi4/8feeYBFce77/5d77//cm5NzTnLKPSfJSdfE
JKafFBPTm0k0iaaaGBNjARFU7KDYxa4xauwJFlBRsIIVUBQbglhARKQJKLL0
3nbzf8e5h4fAzgj7vrOzu/P9PJ8nDw67y+zO7pv97M68o/VQgLq3FdQ96h51
j7oHAADQKlD3WnP16r1du9L06fofbM78619J1HH3dXVSqLbJadOoSxd66SWa
PVtn2Tqwt/3791NaGoQ47h51j7pH3aPuUfcAAOAKoO61htX9hx9Ke4Pr8nV5
M0XVPbuFa9foyJG2OXiwdML39ev1fxx69pROTufpKa0PhMeP78vPz9d6KEDd
2wpX3b9yiMuV/blcOpDLnd1sd7Enl5yVmtiRS87PFrwWccnzZP25L/FY9Gcu
OV9pqHsAAHABUPda45J1X1JCU6fS8OFte5v9/vvSZPWOUPfr1tH48TR2LFc1
QJcxLi7SZDJpPRSg7m2Fa+Oi7lH3qPtWgroHAAAXAHWvNS5Z99nZdNdddM89
0knlXnyxtT74IH3zjUPUfUEBrVkjTZsPIfP06QOFhYVaDwWoe1tB3aPuUfeo
ewAAAK0Cda81Lln3OTn00EPk50crVtCqVa21Z09p5/x166RT4+lrUREdPy5N
MAghMzf3VGVlpdZDAereVlD3qHvUPeoeAABAq0Dda42r1v1TT1FKSttuavZs
aX/4tWv1nyMdwqZiznzUPeoedY+6R90DAIALgLrXGoeq+9tuo5dfpu7dpbOu
8/j++3T//W2u+y1b6NtvqWNHaeZ8CB3H8PDQy5cvaz0UoO5thavuPwnlcsp4
Lo+8xCXPBwujZnPJ88ECc08XLg++xuXoWVzyPFl9ZhCP1f/DJecrDXUPAAAu
AOpeaxyq7u+5R7JdO2rfnssHHpBOW9/Wuo+MpN69pf0H2HUhdBwDA9ekpqZq
PRSg7m0FdY+6R92j7gEAALQK1L3WOFTd799PYWG0cyevq1fTI4+0ue4LCykx
kQ4epMOHIXQgr15NqKqq0nooQN3bCuoedY+6R90DAABoFah7rXGouq+oIJOJ
8vJ4TUiQdrA/e1a6waoqCJ3bhoZ0i8Wi9VCAurcV1D3qHnWPugcAANAqUPda
41B1b7GwkBFgejrdeit5e0vT5kPo7MbG7s/Pz9d6KEDd2wpX3XffyuUydy7T
7+dy0+e2O3sUl1Fv6CnnbISTJnLJ82Rd9w3xyPmE4Xyloe4BAMAFQN1rjUPV
vSizs6Wj793daehQCJ3emJjdeXl5Wg8FqHtbQd2j7lH3qHsAAACtAnWvNS5Z
99XV0lnC58+nH36A0Ok9d+5QUVGR1kMB6t5WUPeoe9Q96h4AAECrQN1rjUvW
fX09pabSmjXGcvVq+uUX6IJeuHCkpKRE66EAdW8rqHvUPeoedQ8AAKBVoO61
xiXrXg78sjIDWVpKBQV08SJ0QUtLz9fV1Wk9FKDubQV1j7pH3aPuAQAAtArU
vda4at0bzbo6OnOGNm+mbdto+3boUmZlnSwvL9d6KEDd2wpX3Q9cyiXPrPXM
oy9yGf6B7XL2NWelxv2Lyx0fcuk7nUueJ+us0cRj5r1ccr7SUPcAAOACoO61
BnXvGhYWUv/+9Kc/0YMPUocO0KXcuDEwLS1N66EAdW8rqHvUPeoedQ8AAKBV
iKp7i8XS0NBQD1qQnX1v166oe16zsykhgY4coePH9XHPHurWjR5/nLp3p08/
hS7lvn3bcnJyRA2qSqDubQV1j7pH3aPuAQAAtApRdV9bW1tSUlIIWpCcfPd7
79HcufoHslO7ZAm9/z61a0dPPKGPjz0mfWu/aZN09H1pKXQp6+oumc1mUYOq
Eqh7W0Hdo+5R96h7AAAArUJU3W/YMG/iRJ+xY0dPnAh/44gRf2JhOHu2/oFs
fy0WYY4ZQ7160bBhXO/zeRw1ip58kqZModBQ2roVupQZGbE47h51j7pH3aPu
tR4GAQAAaI2ouv/883tvvZVuvpn+8hf4G2+7TXLmTP1b2/5pbzZTQ4MYe/cm
Hx86dYrS0vTxxAnq3Jk++khak2+/hS7lgQNhV65cETWoKoG6txWuuv9wB5ec
dZ97J5c8hRvTmUvOSj34Gpehn3A5dAGXPE9WzpMscD5unK801D0AALgAour+
44/v7dVL6i+WsbCpfn7Sft1G++6+vJx27xb51fmzz0rfnp8/T0VF+pidTQsW
SLsQ6LXzANTOuLhIk8kkalBVAnVvK1wbF3WPukfdtxLUPQAAuACi6v699+7d
sIGuXtW/Kx1N9pgYcM58dq+9vaUn1X/8hxhvuUW6wbQ03e6R2SzdqdWroQua
knKkpKRE1KCqBOreVlD3qHvUPeoeAABAq0Dda60x6/7SJWlHjk6daPJkMT7z
DA0fTomJZDLpY34+padTRAR0QXNy4isrK0UNqkqg7m0FdY+6R92j7gEAALQK
1L3WOlTdizoK/oaeOkXjx9PgwcLWvFcvqe4PHaL4eAgFazKdra6uFjWoKoG6
txWuul/Vj8sfvLnsuYHLPV1s99xjXHJ+KsI5qx5n5HJ+JsPzZPWZQTyeeppL
zlca6h4AAFwA1L3WOk7d19ZKx60nJtrD0FAp7T09ha28vz99/rn0SOp+bnTo
euJ896h71D3qHnWPugcAABcAda+1DlL3FgsVF1NkpLQfMvuv1q5YQf360aBB
wtaf3eBnn9FTT9G//gWhYLds2ZiRkSFoTFUEdW8rqHvUPeoedQ8AAKBVoO61
1kHqvraWFi6kF16gHj2kvdy19oMP6OWXyc1N2Prn5NDZs3T8uHRmOgjFmp9/
Bnvmo+5R96h71L3WwyAAAACtQd1rrYPUfVUVDRlCt91Gzz1Hb7+tuZ06SfPg
9e+v/+NvNC0W6XSEFRVUWQlba319msViETWoKoG6txXUPeoedY+6BwAA0CpQ
91rrIHXPEubbb2nOHDpzRlolrY2IkE5P7+Wl/+NvKFnaZ2fTd99Jh0W4u8PW
eujQrqtXr4oaVJUwcN1z5Tm0zeSHueT86zn/5DKxI5e6P/g2q+8dR90DAIAL
gLrXWsep+2++oZ9/prw8e/y506fJz48GDKDSUmg/i4ooLk56vn35JfXuDVtr
VNTOK1euiBpUlUDdQ3uKundGUfcAAAA4Qd1rrWHrvn9/evxx6S9Cu7l8udT1
gwfT4sW0Zg1srRcvHi0tLRU1qCqBuof2FHXvjKLuAQAAcIK611pj1n1SkrRb
/pNPSscCQLs5Ywa98QaNGCEV67ZtsLVmZsaWl5eLGlSVQN1De4q6d0ZR9wAA
ADhB3WutMeu+ro6iomjCBBo2DNrPwYOlWRN9fWn3boqNha3VZDqLOfNR9y4m
6t4ZRd0DAADgBHWvtcas+4YGafq+tWtp0SJoP3/4gb7+WpombskSCgqCrTU1
9Rj2zNfO5W7EI2ewDJ/H5Vh/LsfM5PLE87Z74HUuB6zgkvNcA7HPcem+jMs5
I22X8wlTdTOXiz25RN0DAIALgLrXWmPW/a/XA7+6WjoTH7Sb5eV05Ih0OkJm
586wtW7fvikrK0vUoKoE6h51j7pH3aPuAQAAaArqXmsNW/fQ/prNdPEie4cm
nRFvwADYWnFGPNQ96h51j7pH3QMAgAuAutda1D20pw0NVFYmfYkPW29d3SWz
2SxqUFUCdY+6R92j7lH3AAAANAV1r7Woe5eUFfTZs9IZ6Natg04vzoinqRN5
4ar7PV24/DSEyxFzuTz8su0eeYnLKeO55HzYj3XisucGLnmerEs8iEfuWfW4
QN0DAIALgLrXWtS9S5qTQ4GB9Mwz9O670OkNDw+9fPmyqEFVCdS9raDuUfeo
e9Q9AACAVoG611r2mLz1Fvn4SD2oo6mp9NlnqHthnjxJs2ZRnz68uw1DRzAu
LtJkMokaVJVA3dsK18ZF3aPuUfetBHUPAAAuAOpea9lj8uKL0sxdJ07oaXQ0
de1Kq1ah7sW4fTt5edH8+bRnD3R6s7PjKioqRA2qSqDubQV1j7pH3aPuAQAA
tArUvdZWVEgTmL/7rnQich398kt6+GFasUKruq+ulj5DeOMN+uorQ8ju6dtv
U0AAFRVpaHY2nTlDUVFQW3NzT1VWVooaVJVA3dsK6h51j7pH3QMAAGgVqHut
ramhsWPpvfekHtTR116j++/XsO7LyyksjG6+mR5/3BC2a0cvvURBQdo+efLz
KS6Odu+G2pqdHY+6d9W63/wZl16LuPSbymXWPbZ75gku547gcvd7XO57h8vB
C7nkebKuGEA8nnqaS85XGuoeAABcANS91losdOkSJSRQfLyeHjlC3bppuGd+
bq60m/o331BoqCEcO1a6s4GB0inmtXPlSnr9derVi777DmrogQNhV65cETWo
KoG6txXUPeoedY+6BwAA0CpQ9wZR6znzMzNp0iTy9aX0dEPIHsmBA6X61nTP
/DFj6M9/lg7r+OADqKG7dmHOfNQ96h51j7pH3QMAgNODujeIdqj7yZMlq6sN
4cGDNGwYPfqo9N26dt5/Pz33HB0/Lu37AbXTZDpbU1MjalBVAnVvK6h71D3q
HnUPAACgVaDuDaJ96n7aNP3vqX08e1a6s/fdp61//jN17iw9tuyVBbWzsjKl
oaFB1KCqBOreVlD3qHvUPeoeAABAq0DdG0TUvVhra6m4WLrXmurtTX/7G/Xo
QZ9+CjV0796tOTk5ogZVJQxb9zwTvzM5695tOZdzRnI51Y/L6b62y/7vzuN3
q7kM6MPlhp5cfh3EJU8gL3MnHrf04JLzr6PuAQDABUDdG0TUvTM6fz516EBd
u0ozIkLt3L17S3Z2tqhBVQnUPeoedY+6R90DAADQFNS9QUTdO6PZ2XToEO3Y
AbU1K+tkRUWFqEFVCdQ96h51j7pH3QMAANAU1L1BRN07o2yr5eRIx/g7rCdP
UkyMNMegU3v1akJVVZWoQVUJ1D3qHnWPukfdAwAA0BTUvUFE3TupFgs1NDiu
2dl05Ajt2uXc4rt7Td3ThXjkrPuv1nPpM4PLLnu4XOJhuxcf5PLTEC7DP+Dy
xPNcjprNJU/df7SdeNz+EZdDfuQSdQ8AAC4A6t4gou5hSzk/OqiokNJ+2TJa
scK5TU6OKS4uFjWoKoG6R92j7lH3qHsAAACagro3iKh72NLaWqnQy8psNDGR
PD3p7rupe3fnFnPmo+5R96h71D3qHgAAXADUvUFkdf/117RyJaWnU3m5eM+f
Jz8/1L2Tefgw7dkjuXevLa5eLZ2t78EHafRo5/b48X35+fmiBlUlUPeoe9Q9
6h51DwAAQFNQ9waR1f0XX9CPP1JUFMXFiXfnTho0CHXvZN57L918M/3hDzb6
+9/TnXfSd9/pf0e4zRQ1oqqAukfdo+5R96h7AAAAmoK6N4g1NVJ69+1LPj68
75at6u1NXbrQ1Kn631Ons7BQOlziyhUdvOsu6tdPemL4+9vi6NH01lv03HO0
dKlze/48jrvX0IWDiUfOoYnzr//cl8vQT7icN9x2Eztyue1jLkM+5fLIS1z6
j+Vy/Ve2y7nFL3TgcsUALlH3AADgAqDuDWJ9vfT1+rPP0lNP0TPPiPexx6Q9
tFH3NpiaSqdPU3y8Dt55J0VGktls45pnZZGXF91yCz35pHMbErIhIyND0Jiq
COoedY+6R92j7gEAAGgK6t4gsoJLSaHly6UZztl/hTt9On36Keq+bVos0ktm
5EgaN06THSpu6G23cdV9SQmFhtKIEfqsvEDj4iJNJpOoQVUJ1D3qHnWPukfd
AwAA0BTUPRQi5sy3wYYGOnVKSuwnn6RXXtHB//kf2rdPmjm/rs5G8/MpOVmf
HQ8EajKdra6uFjWoKoG6R92j7lH3qHsAAACagrqHQkTd2yCr++hoevllCgrS
ZKrDG3rHHTR/vjTRos3u20fh4bRjh3OblXWyvLxc1KCqBOoedY+6R92j7gEA
AGgK6h4K0ZHrnkV0fb30DbWjWVlJu3bR++9Lx93r8sg89BCNH0+BgUb34sWj
paWlogZVJQxb9/vfJh45695rEZdBX3M5ZySXPw2y3UvtuFzkxeXmz7jkfNi/
WcdlTGfb/eV7Ls8+zuUP3lyi7gEAwAVA3UMhOnLdZ2RIJ3bfvt3h3LJFetDe
fJMSEvR5ZEaPpoEDpVMZGtyYmN15eXmiBlUlUPeoe9Q96h51DwAAQFNQ91CI
jlz3cXHEnpyLFzucP/4ozTn/2mu61f3y5VLbfved0T1wIOzKlSuiBlUlUPeo
e9Q96h51DwAAQFNQ91CIDlv3VVX08cfSadkHD3Y4PT2ldXvpJWluPV0enNJS
KiiQZsYzuNXVFxsaGkQNqkqg7lH3qHvUPeoeAACApqDuoRAdtu4rK+nVV6X5
4ceOdTh9fOirr6RZ9fSq+7ZaW0tXrlBOjqtZWZlSX18valBVwrB1f+gV4pGz
7kfN5tJ3OpczfLgcOcd2s+7hctf7XE714zL3Ti55Hjfmmm9td6w/l3u6cDlm
JpeoewAAcAFQ91CIDlv35eX09tvSCeULChzOvDzpfPHvvafbrHptNTGRPvxQ
+rTExdy+fVNWVpaoQVUJ1D3qHnWPukfdAwAA0BTUPRSiI9f9O++Qv7/+a9LS
+nqKiJCOGjhwQP+PGlpjZCQ984x0KIGLuW1bcGZmpqhBVQnUPeoedY+6R90D
AADQFNQ9FCLq3gYbGqTJ/G+7jbp3Jw8PJ/Djj+muu6Q9DRISpP+6jAUFZ2tq
akQNqkqg7lH3qHvUPerecbhy5cquXbuCgoJ27NiRnZ2tdLGqqqrjyhQVFTVe
MjMzc8+ePevXr9+9e7cdPjEGAACroO6hELOypDfSAwZQWppjefasdNC9Y9a9
2SytXqdO0rTtQ4c6gZ99RnfcQSdPSqchcCVNprPV1dWiBlUlUPeoe9Q96h51
7yBEREQMHDjQ7d+4u7vv27fP6iVzc3PdlImPj5cvtnnzZnYjTW8wJCTEjncI
AAD+D9Q9FOLlyzRmDP3pTzR+vGPp40Pt2zviTgWyDQ20dSsFBNDKlU7gqFH0
t7/R6tW0Zo1LmZJypKSkRNSgqoRh654z9DjrnrOvJ0/gcvYoLjd+abtX7uAy
+Asup/tyeeJ5Lrtv5XL1d7a76XMuzz3GJc9JFpjGqftLly6x+h40aFBUVBSL
971798qlb3UClrKysk0t8Pf3Z5cfMmTItWvX2GVOnTrF/unl5RUTE5Ofn3/k
yBH2c9P2BwAAu4G6h0K8do1++ok6dNB/IvpmjhxJ7do5bt0zY2Np3z7atcsJ
XLhQOu5+3jyaP9+lPHPmYGFhoahBVQnUPeoedY+6R907AkuWLGF3ds+ePY1L
du/ezZasWbOmNVcvKCgYNmyYu7s7i3p5SUBAALt6WFhY42V27drFlqxatUrs
mgMAwA1B3UMhWixS4E+dSjNnOpaTJtFDDzl03dfXS2eacwrT02nGDOrf39U8
dGhXXl6eqEFVCdQ96h51j7pH3euOxWIZOnQou7PFxcWNC0tLS1mte3l5NTQ0
3PAW5s+f3+yjgMWLF7Ml0dHRjUtiY2PZknnz5oldeQAAuCGoeyjKmho6coRi
YhzL/fvpueccuu6dyLIyOnaMtm1zNTMzY8vLy0UNqkqg7lH3qHvUPeped65d
u8bu6YgRI5otHzlyJFt+w0964+Li2MWGDx9eUVHRuFD+6n/q1KmVlZXsnzU1
NTNnzmRLtmzZInz9AQBAHdQ9dG0dec586DBmihpRVUDdo+5R96h71L3upKen
yyXebDlbwpanpqaqXNdsNo8dO5ZdLCoqquny2trahQsXytX/ww8/yB8UsB/k
2AcAAHuCuoeurRPVfUODdOqBSZNo9myaMwfaz9OnD+C4e+3kSVQmZ91PmMwl
Z6UuHcglT19zTjvP2YlTxnOZfj+X3XZyuaWH7Y6bxuX+t7n0H8ulQeo+OTmZ
3dMZM2Y0Wz5r1iy2/Pz58yrXPXnyJLsMi3eW802X19TUbNiwodl0+uvXr6+r
qxN/BwAAQBXUPXRtnaju5UMbbrqJ/v53+sc/oP1cu3a1+vc1QkDdo+5R96h7
1L3uyHU/c+bMZsvlfekvXLigcl35Mk2n45NZunQpWz5x4sSUlJTKykr238mT
J7MlbLngtQcAgBuBuoeubWUlvfYavf46TZjg6Pr40LffSrMEbNpEO3dC+5mV
dRLH3aPuUfeoe9S91sOgI5CRkcHu6aRJk5otZ23Oll++fFnpikVFRe7XaTod
H8NkMrGFHh4e+fn5jQsLCwsHDx7MbvDq1ati1x8AANRB3UPXtqqKunShf/2L
vvrK0f3kE3r1VXrzTUpOpsuXof2sqLhQX18valBVAnWPukfdo+5R9wLZsWNH
wOuvq2j1HpWVlbHlQ4cOtVgsTZcPGTKELWe/VfpzERERVqfBT0pKsvpxwZw5
c9jyuLg4W+8fAADYAuoeurZmM4WH0/Ll9NNPju7s2fTNN3T77bRqFa1fD+3n
pUvHVd7RicKwdb+zG/HIWfe9ArnkzKU3orj0nW67nJ3Yey2XnHXfZQ+Xt5Zw
OXqW7X61nstRs7n8NIRLZ6x79i7WcpOivl99ZfWKPj4+zb6mZz+zJb6+vip/
Tt79fvfu3c2WZ2dnW/24YMqUKWx5cnKyrfcPAABsAXUPXd70dIqOpq1bHd3A
QBo2jG67jaZPp/nzof08d+5QUVGRqEFVCdQ96h51j7pH3QvE5rrfvHkzu7OL
Fi2Sz27P/ivPeB8aGipfoLKy8tKlSxkZGU2vNXr0aHaZs2fPNrs1dvVhw4ax
X4WFhTUulOff8/Lyqq6uFniXAQDghqDuoctbVUXFxZSf7+heuUJxcfT99zRq
FI0eDe3n8eP7mh4vqRGoe9Q96h51j7oXiFz35v9QVKnuy8rKRowYIc+cz4p+
+vTp7GcW7407cbGEZ0u8vb0br1JTUyPPhG8ymVreYGxsrPzb+fPnb9u2bcWK
Fe7u7uyfBw8e1OKOAwCACqh7CB1Ei4UKC6WvkidN4i0a2CZPnoyw+oZNLKh7
1D3qHnWPuheIzXXPKCgomDlzptzgcubn5uY2/lau+2HDhjW9PFsyePDgZrvf
N3L69GlfX9/G0+GNHj2aJb/AOwsAAK0EdQ+h48gCv7iYioqkzId2s6Ym1Ww2
ixpUlUDdo+5R96h71L1AWN1bbqKG/1RUpe5lKioqMjMzBR6ZVVpaym6wpKRE
1A0CAEBbQd1DCHXXYqHsbMrK0kfMma+pmz8jHjnrfvBCLj2WcMlZWzN8bPdC
By6Xu3HptpzLEXO5fCaey3Xf2C5nnvf9mcu7srk0YN0DAIDrgbqHEOpuWRm9
/DJ16ECPPKKDwcGBaWlpogZVJVD3qHvUPeoedS8Que7r/0tR1D0AwICg7iE0
uCUllJFBp0/T2bP6eOYMHTlC995Lzz9P77yjg+HhoU1PjaQRqHvUPeoedY+6
Fwire/N/oO4BAOA3oO4hNLhHj9K0afTxx/Tpp/r4ySfUrRvdead0WsCcHB2s
rEyRz4ukKah71D3qHnWPuhcI6h4AAFqCuofQ4IaFsTd11KcP9eunj337Us+e
dPvtFBREFy7oYElJUm1trahBVQnUPeoedY+6R90LhNV9w39S3f9TFHUPADAg
qHsIDe7cufTooxQcLH11rotbttCKFfS3v5GHh7Qy9vfMmYOFhYWiBlUlDFv3
oZ8Qj5x13zWMy3f2cdl/JZezR9lu5r1cei7mcuIkLhd5cdnhApc8a/7lRi43
fsmlAefMr/8v1br/GnUPADAcqHsI9fXcOYqNpRMndNPLix58kKKi6PhxfTx2
jPbsoc6dpTWZMkUH4+MjCwoKRA2qSqDuUfeoe9Q96l4grO5Zwtf+TlHUPQDA
gKDuIdTXTz6Rpm1/4AFq314f//EPeugh/V+8O3aQvz/5+upgbOz+/Px8UYOq
Eqh71D3qHnWPuhcIq3uVtGf6oO4BAMYDdQ+hvj73HLm70/jxvBVjs++9Rx07
6v/ivXCBoqMpIkIHc3LiKysrRQ2qSqDuUfeoe9Q96l4gct3X/LeiqHsAgAFB
3UOor7ffTuvWSW178aI++vjQU08Z/MWbKWpEVcGwdR/5JvGob91/tZ7LoQu4
5JlV7+KDXE6YzOXApVz+4M0l56x6P/e13d5rueS840+c4dIZ6776v0lF1D0A
wICg7iHU1zvvpNBQunaNCgv1cfp06dCAESN023lAd+PiIk0mk6hBVQnUPeoe
dY+6R90LhNV91c2kIuoeAGBAUPfQgFZXU0UFlZc7hHfdJc0pV1Oj26OxfDk9
8QTdeqtxDQj45eLFi6IGVSVQ96h71D3qHnUvEFb3lb8nFX16oe4BAIYDdQ8N
aEAAjRxJnp40eLD+srrcvVvPus/JkWatP3DAuObmnsJx96h71D3qHnWv9TAo
Flb3FbeQiqh7AIABQd1DAzp2LHXtSm+/Te++q7+33EK7dulZ97IWixXr66mq
yvVtaEi3WCyiBlUlUPeoe9Q96h51LxBW92V/JBVR9wAAA4K6hwb0lVekOep/
+YVWr9bfv/1N5+/ulayro7g4WrnS9U1OjikuLhY1qCph2Lo/9xjxyFn3gxdy
+fQpLj8J5XL3e7bL2YlT/bjsvpXLUbO5vC+Dy5ljbJez7pcO5HKsP5fOWPel
fyIVx6DuAQDGA3UPDejDD9PChXToEMXE6O8//uGgdV9VRdu307hxri/Od4+6
R92j7lH3zlj3JbeSiqh7AIABQd1DA/r441K3lpRITa27us+qp2R2Nt13n9RH
U6bQ1KmubHx8ZEFBgahBVQnUPeoedY+6R90LhNV98W2kIuoeAGBAUPfQgLK6
371b+m5a9zVh/vOfFBwspXR+vmMZHy/NCTBvnrSfw6JFWsluXHcTEw8VFRWJ
GlSVQN2j7lH3qHvUvUBY3Rf+hVQc8w3qHgBgOFD30IA6VN3fdht9+CENHEiD
BjmW335Lf/87Xb5MRUXSfg7CLSyka9foyhX9raxMaWhoEDWoKoG6R92j7lH3
qHuBsLov+CupiLoHABgQ1D00oA5V9488Qt26SSndp49j+fnn0pwAxcVkNou/
1+w2TSZKSaHkZP0tLk6qra0VNagqYdi655mBnMlZ929FcLnIi0uvRVwmdrTd
g69x6T+Wyynjufzley5vLeFy/Ve2y9nXiz259J3OpTPWvelvpCLqHgBgQFD3
0IA6VN0nJNCWLRQY6HD++CPdeadWdV9eTpMm0V/+Qnfcob/r1q1OTU0VNagq
gbpH3aPuUfeoe4Gwus//X1IRdQ8AMCCoe2hAHarus7Pp2DGKinI4N26UztZ3
4ADFxkqnxhProUPUty/97/9Sly76Gx4eevnyZVGDqhKoe9Q96h51j7oXCKv7
vH+QiqNR9wAA44G6hwbUoerebKb6eunk8o5mair953/SSy/RK6+I98UX6cEH
qWtXTY7ob6t1dZfMZrOoQVUJ1D3qHnWPukfdC4TV/dXbSUXUPQDAgKDuof21
WCgzUzre+fx5fezQgXbtcpS6d1jZy/nll+mLL+jLL6lnT8H26EFPPklvvil9
hqC7paXn6+rqRA2qShi27vv+TDxy1v3DyVxyrrznYi5X9bPdoy9yOXQBl+On
cLn9Iy7vT+dyuq/tTpjMZUxnLjlnI3TGur9yB6mIugcAGBDUPbS/1dU0axZ7
I0H9++vj3/9O4eGo+xtYXy+V7+HDFBMj3p07pQ8N7rmHxozR3+PH9+Xn54sa
VJVA3aPuUfeoe9S9QFjd595JKo7ujboHABgO1D20v4WF9MYb5OfH+77dZu+4
A3V/Yy0Wae47jU5Cl5ZGq1bRgAG6PQeaGhcXaTKZRA2qSqDuUfeoe9Q96l4g
rO6z7yIVUfcAAAOCuod2ljVjTo70fFuxQrfZ4O+9F3vm6y8L/O3bacEC/T13
LrqoqEjUoKoE6h51j7pH3aPuBcLq/vLdpCLqHgBgQFD30M7Kdf+739GRI3T2
rD626bj7mhqqrJS+xYZivXxZmjw/IkJ/c3LiKysrRQ2qSqDuUfeoe9Q96l4g
rO6z7iEVR6HuAQDGA3UP7axc97fcIs1Vrtc6tGnO/NJSKiigvDzoslZVpTQ0
NIgaVJUwbN1P5IWr7t2Wczl4IZffrONy77u2u2IAlwuGcsn52cL3v3D55Gku
eZ6so2cRj2V/5JLzleaMdZ9xL6mIugcAGBDUPbSzzlX3JhMtWkQ+PvofGw61
E8fdo+5R96h71L0z1n36/aQi6h4AYEBQ99DOOlfdJyfTCy/QH/5A7dtDl3XD
hnVpaWmiBlUlUPe2grpH3aPuUfdWYHWf9gCpOOpb1D0AwHCg7qGdda66P3pU
Ojn7119LswRAVzUv73RVVZWoQVUJ1L2toO5R96h71L0VWN1fakcqou4BAAYE
dQ/trHPV/YED1K8fjRql/+PGaU0NVVdLdxm2tL4+zWKxiBpUlUDd2wrqHnWP
ukfdW4HVfWp7UhF1DwAwIKh7aGdR9/a3oYFCQ+mHH2jWLGjF06cPFBYWihpU
lUDd2wpX3Y+Yy+WDF7mcN5zLZe62u/4rLg+/zOW4aVzOH8Zlu0tc8jxZt31M
PMb9i0vOV5oz1n3KQ6TiSNQ9AMB4oO6hnXWEun/sMdq8WXq6FhffwB07qE8f
p6/76mry9ycvL/LwgFaMidmdl5cnalBVAnVvK6h71D3qHnVvBVb3FzqQiqh7
AIABQd1DO+sIdX///dI38tOn08yZN9DNjd5/n7y99X/cbNZspqws6tRJmvn/
p5+gFRMTDxUVFYkaVJVA3dsK6h51j7pH3VuB1X3yw6Qi6h4AYEBQ99DOOkLd
P/ccffcdjRlDvr43sFcveucdGjpU/Dqw6M7Pl14yWpubS8eP06OP0tSptHGj
GIOCKDDQdbx48WhpaamoQVUJ1L2toO5R96h71L0VWN0nPUIqou4BAAYEdQ/t
rCPU/f790kHo06ZJ+6ur268fdekivu7Zg8BeLO7u9MUXmvv559S1K91zD0VG
Unm5AEtL6dIlSkqixEQXsagosba2VtSgqoRh6/7U08QjZ91zzg43ZTyXa3tz
6T/Wdi/fzWVYVy5jn+Ny5hgue27gkudPey3ictPnXHbbyaUz1n1iR1Jx5Heo
ewCA4UDdQzvrCHV//rz0jW1r9tlmXc/SWPie+fLe8h98QB9/bA/fekuq+6NH
xax8VRXFxup/GjucEc9ZRN2j7lH3qHstYHV/7jFSEXUPADAgqHtoZx2h7hsa
qLZWOkncDd27l/r2FT+rXl0dxcfT3XdLU/drbXg4BQTQk0/SsWNi1vzwYfrn
P+mRR6RTD7iGISEbMjIyBI2piqDuUfeoe9Q96l4grO7PPk4qou4BAAYEdQ/t
rCPUfevV6Ix4tbVS3bNGTkjQ3FOnaNcu6tiRVq6Uvr7nNDqaliyh22+n7t3p
q69cxMjIHbm5uaIGVSVQ96h71D3qHnUvEFb3p58kFUeg7gXhBoyK3k89YAuo
e2hnUfe//rvu27eX9iLQ2vp66YV5993SzvkdOvD60EPS7bz0EqWmUlmZi1hX
d8lsNosaVJVwQ92j7lH3qHvUvThY3Sc8RSqi7kXhdM8NIARsdycFdQ/trHPV
/bFj1LOn9PVudLRIIyJo1Spq185ODzh7qHv0kKYH7NaN1/ffpxdeoKeeku5F
UpKLiFn1NDXiLeKRs+5X9udyQ08uYzpzOXuU7f7gzeWWHlya/4PLQT9xyfO4
MXmmnZ/qRzxu/4jLYfO5dLp38qzu1T8bRN2LwumeG0AI2O5OCuoe2lnnqvu0
NHr+ebrpJvrv/xbv3Xfb746Ulv7f2fE4TU+XjuL//e+l0rfDhP/2cf/+7dgz
H3WPukfdo+61HgbFwuo+/hlScUQf1L0Ymj43dP9/CtRaq9sdOBGoe2hnnavu
i4po2TLy8+NNjGayG3Rzo/vus98dqamRTmbHvxM7e0Di4qh/fxo3TvBjoqNx
cZEmk0nUoKoE6h51j7pH3aPuBcLq/uSzpCLqXhSoe0NpdbsDJwJ1D+2sc9X9
r9dniWdpXF0t0tJSaYa69u31v3c2WF9PkZG0aRNt3OgipqUdLysrEzWoKoG6
R92j7lH3qHuBsLpXn8ABdS8K1L2htLrdgROBuod21unqXp6YTqyVlXT8ON1x
h/SScTpzc6WPJljgR0S4iLm5pyorK0UNqkqg7lH3qHvUPepeIKzuTzxPKg5H
3QsCdW8orW534ESg7qGddbq618LaWjp5kv74Rzp9GupvYeG5mpoaUYOqEoat
e/VdZ28oZ93/OIRL3+lccn62EPmm7a7qxyXnrPXsvQWPnH99rD+XPHU/ehbx
uGIAlyPncOl07+RZ3R9/gVRE3YsCdW8orW534ESg7qGdRd3/en1/gIsXpZnn
v/wS6i9m1dNU1D3qHnWPutcCVvdHXyQVUfeiQN0bSqvbHTgRqHsjWF8vpbTu
ZxWXZWty4YLR695ioawsevdd6twZ6u+2bcGZmZmiBlUlUPeoe9Q96h51LxBW
90deIhWHf4+6FwPq3lBa3e7AiUDdu7zl5RQVJZ3rvE8fh/C77+jzz6XzwRm5
7n+9Pon9qVPS/vlQd02ms9XV1aIGVSVQ96h71D3qHnUvEFb36jNXoO5Fgbo3
lFa3O3AiUPcub1ERBQXRX/4inbfdQXzySfrd74xe97pbVydN7ldRAam+Ps1i
sYgaVJUwbN3v7EY8ctb9um+4nDecy9XfccnzycDed7n8aRCXDf/JZdDXXLov
43Ljl7Y7bRyXYV25XOzJpdO9k2d1f/hlUhF1LwrUvaG0ut2BE4G6d3nT0mjM
GOkE61FRDqF8MrWbb0bd6+z27dS3r7QrxfffG93o6PCrV6+KGlSVQN2j7lH3
qHvUvUBY3Ue/SioOQ90LAnVvKK1ud+BEoO5d3osXaehQmj9fOtrdETx/ng4d
ot//HnX/fzY0SF8fl5ba2yVL6IsvpKMkevY0upGROzCrnnai7lH3qHvUvRaw
uj/4GqmIuhcF6t5QWt3uwIlA3bu8qak0bJiUcnV1DmFNDWVmGn1WvaayV82m
TdIGsrPPP0/z5tG6dbR+vdFNTT1WWloqalBVAnWPukfdo+5R9wJhdX/gdVIR
dS8K1L2htLrdW2I2mxMTEwMCAmbOnOnr6zt9+vS1a9dGR0c3NDQoXaWoqGjx
4sVRUVEtf5WSkhIcHDxv3jx2U/Pnz2c/nzt3TuWv79u3b9GiRRUVFWpPXD7y
8vK2bNmydOnSoKCgEydOVFVVNbtASUlJWFjYyuuwH9g/tVuZNoG6d3nlul+2
TP81kcUZ8Zp56hQtWECTJ5O/v1198EFaupR27KDwcKOblXVS0/9ByKDuUfeo
e9Q96l4grO6j3iAVUfeiQN0bSqvbvRms01nUu1lj2rRpVo92rK2tZb9iF1i9
enXT5RaLJTQ01OpNhYSEmM3mljd18uRJ+QKFhYW2PKFbwbFjxzw8PJquzOTJ
k5v2e3Jy8pAhQ5peYOjQoWyhRuvTJlD3Li/q3sHt2pXeeIO+/ZZ8fe3q3XfT
mjV08CAdPmx0r15NaPmRrHAMW/dnniAeOet+Ep8dLnDJOWf+0AW2y/nBAmfd
Jz3KZdcwLj/cwSXPWRI4p+v/wZvLHlu4dMa6j3iLVBzWF3UvBtS9obS63ZtS
XV3t4+MjJ+26desSEhLy8vJSU1PDw8M9PT3ZQvbbZt/gm0ymuXPnyldpVvcp
KSny8lWrVl24cOHq1atsCbuMvDAiIqLphS0Wy8GDB+W/ol3d5+fnDxo0iN3+
okWLzp07d/To0QkTJrB/zp8/X74Au3ejRo2SP8o4efJkXFycv78/+ydbWFdX
p8UqtQnUvcuLuhdlQwNlZIifiODpp6lbN/LxkbaRPX3pJZozhwICaO1ao3vx
4lHsma+dqHvUPeoeda8FrO73v00qou5Fgbo3lFa3e1MCAwPZr1j/tvyqOicn
R+7iY8eONS6MjIz08vJq/I67Wd1v2rRJ/ma82dmL5H0D5syZ07iERTf7Z9Ov
yzWq+/DwcHbjw4YNq62tlZecPXuWLfHw8JBPoJyZmSmvALu/8gVyc3PlJWlp
aVqsUptA3bu8qHtRlpfTjBk0ZAh5eYm0Qwdpz/zz56m62q7+8AN16SLtNvDm
m0Z3587NWVlZogZVJVD3qHvUPeoedS8QVvf73iEVUfeiQN0bSqvbvRGWt/JX
5zt37rT6bAkKCmIVvGHDhsYl7u7u7PKs1tetW9ey7pcvXy5/S97sdpKSkiZO
nDhv3rzGnfPDwsLkTxWioqLk3eZtq/vU1FS2Jlb3+Ze5cOFCSEhITExM45Ky
srKmnydkZGTI/2zcV7+qqkpepfPnz9uwSmJB3bu8qHtRq82e3u7u5O0tPZ4C
7dhROv49Pd3e92jbNum+eHjQoEFG9/DhXXl5eaIGVSVQ96h71D3qHnUvEFb3
6tNHeKPuBYG6N5RWt3sjsbGx6t+bV1+n6RLW9SdOnGA1vXv37pZ1f/DgQbbQ
3d198+bN6qcnPnDgAKtyk8nEfpb3ELCt7qdPn86uGxAQ0GxvASVYua9Zs4Zd
ZcKECfISdl+GDx8uH5hQUVHB7m9wcDD75+DBg7FnPrSDqHsh1tXR8eP0wAP0
44+C95B/9llavlyHuq+pkc7EV14Oqb4+rZUjPA+oe9Q96h51j7oXCKv73e+R
iqh7UaDuDaXV7d6I/AW6t7e3DU+kXbt2tax71s6zZ89u3Nnex8eHpXRsbGx5
ebnKTfF8d5+dnS0fKRAUFKR+SflYAPlvjRgxIjU1tfFXSUlJcuAPug77gd3m
4cOHbVgf4aDuXV7UvRBZ3R89Su3bS5OwxceL9M03aeBAmjtXOgQe6uKFC0fs
cB4Tw9b9sU7EI2fdc06f3nMDl5yxNnmC7YZ+wiXnpyIpD3HpsYTLZ+K5nOpn
u4N+4nL8FC45P4xyxrrf9T6piLoXBereUFrd7o2wIpZ3s2+68Pz58wEBAb9c
5+frBAYGtryu1bpn1NXVBQcHe3t7Nz2mfuDAgWFhYUpfvvDU/a9N9kDYvHmz
ysVOnz7duD4jR45sepI+FvKNk/vJjBo1yhEOumeg7l1e1L0Q5bp//HEqKxN8
yx9/TJ060Ysv0muvQX3csQPH3Wso6h51j7pH3WsBq/vwD0hF736oezGg7o2j
229p+WQICQmRS7bpwqioqGZXZPXd8rpKdS9jNpsvXbrEXtdz5sxhaS/fzrJl
y6xe+IZ1n5SUdEKVsWPHyn+C/UWlG6mrqzOZTOym2GrIF05MTPz1+pH78j+D
g4MLr7N582b5+IKUlBSlW7MbqHuXF3UvRO3qfvVq6WT3fn68FQNtNi4uUj6M
S1NQ96h71D3qHnUvEPaefGdXUhF1LwrUvaG0ut0biYyMlMO2uLi4cWFeXl7M
v9myZUub6p5FfWVlZbNLlpSUNAa11XdoN6z7SZMmubWa+Ph4pdtpZOLEiW7X
D7RnP8stv3z58qYXCAgIcGvF3v52AHXv8qLuhahd3bPHIS6ODhyAupmbe6rl
/1mEg7pH3aPuUfeoe4Gwut/xIamIuhcF6t5QWt3ujTSe+u3EiRNWny3p6emt
r3t2a+7u7uzCFRUVzS5ssVhGjhzJLh8dHd3ypm5Y92FhYWtVkW+cMWvWrJqa
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
6r6iggoLyWSCgq2uvtjQ0CBqUFXCsHX/xBnikbPud7/HZcRbXM4dweWs0bbb
K5DLtb255Kz7qX5c7n2Xy7Cutpt+P5dDF3A5fxiXTvdOntX9Yk9SEXUvCtS9
obS63YETgbpXEXXvsLIwf/FFeu456tzZFu+5x3Hr3mKh3FzpnH3QblZUXKiv
rxc1qCqBukfdo+5R96h7gbC6V9+DBXUvCtS9obS63YETgbpXEXXvsNbX/1+X
5eTYYrdu0iR1jln3BQX03nvUqZONuyVAG9yyZWNmZqaoQVUJ1D3qHnWPukfd
C4TV/Y+DSUVP1L0gUPeG0up2B04E6l5F1L2r2qOHNKteQoL++4Q3Mz9fOuig
Y0d6+ml69lloJ1ndZ2RkCBpTFUHdo+5R96h71L1AWN2rz8CAuhcF6t5QWt3u
wIlA3auIundV33+funenfv2kE987lJ6e1KcP/fWvtGMHxcZCO2kyna2urhY1
qCqBukfdo+5R96h7gbC6/8GbVETdiwJ1byitbnfgRKDuVUTdu6rsAfn+e2ny
eVbTDuWgQdS7N/3pT7R7N50+De1kYeG5mpoaUYOqEoate69FxCNn3W/+jMut
3bnk/Gxh5BzbHbiUS/XJym6o23IuVwzgsupmLnnmzI/pzOWckVxyPl2d7p08
q3v1zytQ96JA3RtKq9sdOBGoexVR965qZiZt3Soder9mjWMZEEBz59LNN9PM
mbRyJbSTyckxJSUlogZVJVD3qHvUPeoedS8QVvdzh5OKngNR92JA3RtKq9u9
JWazOTExMSAgYObMmb6+vtOnT1+7dm10dLTKSYiKiooWL14cFRXV8lcpKSnB
wcHz5s1jNzV//nz287lz51peLD8/n73wV61atXz58m3btl2+fLk1T2BOysvL
f/75540bNzYuOXXq1B4FDh8+bIdVUgd1ryLq3lUtLqbjxykiwuHcv5+Cg+mJ
J2jCBJozB9rJM2cOFhYWihpUlUDdo+5R96h71L1A2Jt89QcEdS8K1L2htLrd
m8E6nUW9mzWmTZt29erVllepra1lv2IXWL16ddPlFoslNDTU6k2FhISYzebG
S0ZHR3t4eDS9gLu7e3h4OM9zuzUsWbKE/a3Ro0c3LlmwYIHVFWb4+PhovT43
BHWvIureVbVYpFn36+oc0dJSWrSIhg7V/zAB43j48K68vDxRg6oSqHvUPeoe
dY+6Fwir+9mjSEXUvShQ94bS6nZvSnV1NWtYOWbXrVuXkJDA3kSlpqay0Pb0
9JQLt9k3+CaTae7cufJVmtV9SkqKvHzVqlUXLly4evUqW8IuIy+MiIiQL5ab
myun/bx5806cOHHq1KnFixfLl2GXF/VUb8nhw4flv9K07tnC4N/CHofGe6Hd
yrQS1L2KqHtof+vrKT6edu2inTuhnczKOlleXi5qUFUCdY+6R92j7lH3AmF1
rz635CDUvSBQ94bS6nZvSmBgIPvVoEGDkpOTm/0qJyeHLWe/PXbsWOPCyMhI
Ly+vxm+3m9X9pk2b2MLJkydbLJamy+V9A+bMmSP/k73e2T+HDx/e+LmB2Wwe
O3YsW9h0n3mxXLt2rXHNm9Z9S9g6yPfCDvM43RDUvYqoewiNYaaoEVUFw9Z9
jy3EI2fdc879/nNfLpe76WbnGC4XDubSczGXSwdymfAUl0Ff227km1xOmshl
xn1cOmPdzxhDKqLuRYG6N5RWt3sj1dXV8hf0O3futPpsCQoK8vDw2LBhQ+MS
d3d3dnlW6/IX3M3qfvny5WzhokWLmt1OUlLSxIkT582bJ++cHxwczPqa/bfp
ZTZv3syuu3jx4lY+k2VSU1PZmjTd598qDQ0NM2bMkL+OV697efeDgQMHZmdn
t2lNNAJ1ryLq3j7m5dEvv9DkydJUchDa39OnD+C4e9Q96h51j7rXehgUC6v7
6b6kIupeFKh7Q2l1uzcSGxsrf5et9Map+jpNl7CuP3HiBKvp3bt3t6z7gwcP
ykfQs1S3esC+CvL3+1u2bGnTtaZPn86uFRAQ0GxvgWZs375dPhAgIyNDpe5r
amrkXQjY+rdpNbQDda8i6t4+njlDL79M//VfdNttEOrg6tW/XLx4UdSgqgTq
HnWPukfdo+4FwurefyypOMgDdS8G1L2htLrdGwkLC2PLvb29bXgi7dq1q2Xd
V1VVzZ49u+msdGvWrImNjb3hIZONHwukp6e3aTWys7Pl/e2DgoKULnPp0iV2
y0OHDi0sLMzMzFSp+/3797PfDh48mN2RNq2GdqDuVUTd28e4OHrhBfL25n0b
D6FtxsVFmkwmUYOqEqh71D3qHnWPuhcIq/tp40hF1L0oUPeG0up2b4QVsbyb
fdOF58+fDwgI+OU6P18nMDCw5XWt1j2jrq4uODjY29u76eTzAwcODAsLU/p6
PT4+Xt7hv9m++q2kcQ8Eq1+4V1dXjxs3jv32+PHj7J/qdT9x4kT1DwrsD+pe
RVeq+6VLyWx2UI8coWefpfR06UR16hYVkckk7ckPoUCrqlJUTs8qCsPWvfsy
4pGz7g++xuXxF7j8aRCX84fZ7rD5XK7+jkueiemYPHecef4RLsdNs93oV7lU
38/8hiZ25NIZ637KeFIRdS8K1L1xdPstLZ8MISEhbPmoUaOaLoyKimp2RQ8P
j5bXVap7GbPZfOnSJelMl3PmsLSXb2fZsmUtL3nw4EE57RcuXFhfX2/11pKS
kk6oIu9Oz2B/sdl15Rn7ly9fLv9Tpe7ZCss3kpuba3U1dAF1r6Jr1P3Fi9Lp
1RYsoMuXHdTt26W6z8qSpotXl9U92yLr1kEo0osXj5aWlooaVJVA3aPuUfeo
e9S9QNh78skTSEUP1L0gUPeG0up2byQyMlLu2eLi4saFeXl5Mf9my5Ytbap7
FvWVlZXNLllSUsK6Xv5DzfaulG+fsWLFirq6OqUn7aRJk9xaTXx8fOMVk5KS
5IX79+8/eh35APwhQ4awn8+ePdv0rwQEBLg1mdjfQUDdq+gadZ+aSsOHk78/
nTrloK5ZQ//6l1T3N7wv+fkUHEyzZkEoUsyqh7pH3aPuUffOWPfqhyqg7kWB
ujeUVrd7I7m5uXL8njhxwuqzJT09vfV1z27N3d2dXbiioqLZhS0Wy8iRI9nl
o6OjG5fIxwUwQkJC1OfECwsLW6uKfOOMWbNmNT2NnXw4vxKTJ09uvGRtba18
/H5cXJzKmtgf1L2KrlH3167R8uX04ov0yScO6ptvUseON677ykrav586dSJf
XwhFGhu7Pz8/X9SgqgTqHnWPukfdo+4Fwup+4iRSEXUvCtS9obS63Zvi7+/v
dn0eudTU1Ja/PXfuXOvr3mw2Dx8+nC2MiIhodmH2q2HDhrFfNX5dzpLc7fo0
eo29bzO5ubls/dmtsfvSbDa8tLS0Db9l6dKl7JKDBg1iP+/du7fxkvIe+2x9
VHYh0AXUvYquUfclJRQaKuXzM884qI88Qo8+euO6LyujzZulGc79/CAU6cmT
EZhVD3WPukfdo+61HgbFwup+/GRSEXUvCtS9obS63ZuSlZXF4l0O/MOHD8vf
j7AYZ8m8efNm+Vet3zNf3rmdsW3btsbDJAsLCxctWsQWenl5ye2cmJgoXywm
Jqbht9zwzPXNYDnv5+cnfxHfcp+Bligdd3/s2DG2nN1Um/66HUDdq+gadW82
S996Z2dTTo6DumMHPffcjeu+tJS2bZP24S8qglCkNTWpbf1fgw0Ytu4/CCce
Oet+iQeXFx/k0mcGl16LbLf3Wi6Dv+DS+wcue27gknOrvX7Adjk/FRk9i8vQ
T7h0xrr3m0oqegxC3YsBdW8orW73ZiQkJAwdOrRxf/Xhw4fL+6jLTJgw4dy5
cy2vZbXuy8rKmp4Rz9vbW/42X/6I4OjRo/LFWIkr7S2/YMGCNj2f5SP62Uq2
cs4lpbqXZwBYunRpm/66HUDdq+gade/4Hj0qfYOfkkIVFWrm5koH3XfqpP8K
u7Ymk/SRS2amgayouKA056pAUPeoe9Q96h51LxBW9+q7UqDuRYG6N5RWt3tL
CgoKNmzY0FjiDE9PT39///379yudh2jPnj3sYmvXrm22nL0HCw4Olk9CJ+Pl
5TVr1qzGPf/NZnPjLPr8dR8eHs7+VtNZAdW5fPky+yu+vr7Nlq9YsYIt3759
e5v+uh1A3auIurePBw/SP/4hTV0eGqpmYCCNHSvNrq/7Cru2w4fTa6/RffdR
u3ZGcf36tZcuXRI1qCqBukfdo+5R96h7gbC6H+tPKqLuRYG6N5RWt7sSrLuL
iopY/169epV/N8iqqqqMjAwhN6WOox0pLxbUvYqoe/t45Ai1b08LF0qz/6n4
44/k6WmgurdYqLxcmhTRzid//+ILevxxuusu/aMbde8ab05Q96h71D3qXgtY
3au/ggai7gWBujeUVrc7cCJQ9yqi7u0je3gXLaI+fej779Xs1Yveflvah1/3
FbaPVVUUFESff07dutnVe++lIUMoPl7aRd8g4rh71D3qHnWPune6d/Ks7sfM
JBVR96JA3RtKq9sdOBGoexVR9/axqIjCwmjatBvo50e9exvou/uSElqyhN5/
X/rcw57+8580YID0zE9NNYqlpeftsI+WYev+vd3EI2fdL/Licvd7XPLkOXPO
SNt95RCXnHnutpzL8VO4zL2TS56+Vj/9+g2d6sdl1j1cOt07eVb36psDdS8K
1L2htLrdgROBulcRdW8fLRbpoa6svIHs2bVpk4Fm1UtLo3HjpLrftcuu3nmn
dNy9nx9Nn24UT52KKigouPEwxwfqHnWPukfdo+4Fwup+1GxScaAn6l4MqHtD
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
VmB1r/4qQN0DAAyII9S9xeKg1tTQwYOoe61saKD77qMpUyg0tFX26SN9fW/P
ut+/n3x8yM+Pd99g6ODGxUWaTCZRg6oSqHtb4dq4qHvUPeq+lThj3asfo4G6
1x2z2ZyYmBgQEDBz5kxfX9/p06evXbs2Ojq6oaFB71XTiurq6n379q1atYq9
piZNmsR+2LNnT3l5ud7rBQyE7nUv7/xcVOSI5uVRWBh17oy610RW9/ffL31+
0srLz5kj1X1amv1Ogz56NP3979SuHT32GHRlN20KSk9PFzWoKoG6txXUPeoe
dY+6twKr+883kYr9h6Lu9aSoqIhFvZs1pk2bdvXqVb1XUDzZ2dl+fn4t76+v
ry/7ld5rB4yCvnXP0p7F2qef0muv0euvO5yvvkpPP02PPkq5ufq3sOvZ1rqf
PVsK7Y8+oi++sJNPPSWduj08nI4dg67stWtnqqurRQ2qSqDubQV1j7pH3aPu
rcDq/rPNpCLqXkfY/1V9fHzktl23bl1CQkJeXl5qamp4eLinpydbyH7ret/g
z507l9210aNHHz58+PJ1YmJi5Mdh+PDhrnd/gWOib92zvjt9mu65h/74R7rt
Nofz1lvpT3+i9u0pJ0f/FnY921r3P/4obYuHH6aOHe3knXdKfzQzUzpzH3Rh
6+vTLBaLqEFVCdS9rXDV/TJ3Ll8+zKV6etxQnunT397P5VsRXL50hMvvf+HS
fyyXPE/Wb9YRj+0uccn5SnPGulf/fAx1ryOBgYHsGTVo0KDk5ORmv8rJyWHL
2W+PHTumy7ppREVFxcCBA9n9iouLa7o8KSlJ/pTjwoULeq0bMBT61n1dHe3c
SZ98QmvWSJXnaO7fTwsX0vPPY898TWxr3aen0549tGWLdBI9+yjP+DduHE2b
Bl3Z+PjIgoICUYOqEqh7W0Hdo+5R96h7K7C677GFVOyHuteJ6upq+Qv6nTt3
Wr1AUFCQh4fHhg0b7LximpKbmytXfFZWVrNfLV682N/f/+jRo7qsGDAautc9
u9aAAZScrH9sthRz5mtqW+uebY7iYsrKsp99+tDHH0uBz36ALmx0dLgdDgBE
3dsK6h51j7pH3VuB1b36ASaoe72IjY2VO7ewsNDqBaqvY+e10hqLxTJq1Ch2
rydNmhQfH19TU6P3GgGDgrpXz0nUvXa2te5/vX56BXYtu5meTqtX04oV0MVN
To4pLi4WNagqgbq3FdQ96h51j7q3Aqt79QkcUPd6ERYWxp5O3t7eeq+IvTlx
4oSHh4f8yQb7Yd68eeHh4enp6XY4+g+ARlD3KqLuNdWGurezZWW0e7d0LIBh
DQ42hGlpx8vKykQNqkqg7m2Fq+45Q48z1jjrnueDhcELuXxvN5dPnOHymXgu
B/3EJc+T1XMx8fjIeS45X2nOWPcfbScVUfd6ERQUxJ5OM2fObLrw/PnzAQEB
v1zn5+sEBgbqtYbakZKSMmPGjGZz5k+aNMklzxEAHBPUvYqoe011/Lq3WKQp
1yoqjGh5OZlMlJBgCE2ms3bYgw51byuoe9Q96h51bwVW9912kor9vFH3+hAS
EsKeTqNGjWq6MCoqqlnzenh46LWGWlNaWnr06NGAgAB5X33GkCFDLl26pPd6
AUOAulcRda+pjl/3Rra+XnraR0ToP7mlHbxy5VRlZaWoQVUJ1L2toO5R96h7
1L0VWN13DSMVUfd6ERkZKSdt06Pe8vLyYv7Nli1bXLLua2tr6+rqmi6xWCyx
sbHDhw9n9/eXX37Ra8WAoUDdq4i611TUvSN7+TKNHSudF/LZZ13f/8/efYBH
Veb/3//quoprQVCkKIJYURAXV0ERRRQrNlBEpCmsSJPexGVBRMCKUmyIiKgo
TQREkN4UCS0UaYEQEhJIiElIL8NzH85v58k/ZA6Tc58zk8m8X9fn8pLJJJlM
kgPvlDNz5syIjo526qDqC3VvF3VP3VP31H0xVN0/ulAsRt0Hi/fs8Rs2bCj2
CgcOHCh7df/ZZ5+pN2rmzJmnP2nlypXqSf379w/8rUIYou4tRt2rZWbK3r2y
fbvz27pVrrySujeWkiK7dhkfbGvXlpbNmiUdOkjt2tK+fdnf8uXzjxw54tRB
1Rfq3i7qnrqn7qn7Yqi6f+RnsdhL1H3wjBo1Sn1E9ezZc9++fac/dfv27WWv
7s2fWBg0aNDpDwfw66+/qiep+yQoNwzhhrq3GHXv8Rhp37evtG7t/J57Ti64
gLo3tn69vPSSXHaZ1KxZWnbVVXLDDfLxx8apBcv8cnP3FxQUOHVQ9YW6t0ur
7kcP1trbA7Rm/Y3FM+6+5fbX8UutWUfTGWd9rrMzrvPnWlv4qNZ0Pljv2CA6
qx6jNc3PtFCs+4d+EYtR90F06NAh8+zxKvDXrFlz7NgxdaH6qzYuLm7mzJnm
k8pY3ScmJpo/sTBs2LB9+/bl5+erC9V/f//99169eqnL58+fH+zbiLBA3VuM
us/Lk82b5Zln5OWXnV/nznLRRdS9sUWL5MUXpW5deeSR0rImTeS222T0aFd+
bKO0LTl5R05OjlMHVV+oe7uoe+qeuqfui6Hq/sHFYjHqPri2bNliVq2pb9++
PXr08P5RJfD27duDfRsdtn79+m7dunnPGThgwADvA+SNHTv2xIkTwb6BCAvU
vcWo+8xMWbBAqlSRH35wfjNmyOWXU/fGJkyQoUPl88/l4MHSMvV+6dBBmjaV
Nm3K/pYt+ykuLs6pg6ov1L1d1D11T91T98VQdd9siVjspT7UfZAlJSV99913
5jnlTN27dx81atSvv/5qfmu77Nm/f//bb7/ds2dP75s8ZMiQGTNm5OXlBfum
IVxQ9xaj7jMyjLqvVk1273Z+O3fye/f/t3HjZNgw44HX1R1eSnb4sPHllwED
tMIqVBYRsSwxMdGpg6ov1L1d1D11T91T98VQdX//r2Ix6r6UKCgoSE5OjomJ
iY+PD8DvwZUGHo8nISHh4MGDfL8egUfdW4y6V5W3cKFxZns3XjjnzPdO1b3K
kNmzg39LvCsokORkmTs3LHbw4B8B+PuXureLuqfuqXvqvhiq7psuE4tR9wDC
EHVvMeqeuvdz6iNk3Trj0eHtrWdP49SFparuPR7jvf/77/bfqBBabOwmHu/e
vT35o+hMs+5bztLa8P9qTTOxu06yP808v36P1m7dojXNE/5P7aC1Lp/Y33Mz
tHbXOq190kVroVj31l/jepG6BxB+qHuLUffUvZ/bvFnee894gHh7e/hh47Og
VNW9+Q6KiZENG8r+jh3bdvrj1ziOuqfuqXvqnrp3kKr7JivEYtQ9gDBE3VuM
uqfu/VzLltK9u/G78yNG2NnjjxsPIlDa6l592DdqFPxT3nFWPeqeuqfuqXvq
/nSq7u9ZKRaj7gGEIereYtQ9de/n6tQx8nz0aHnnHTtr0UJeeUW37s2fpU9J
cWZ//SWRkXLOOXLffWV/8+fPPHTokFMHVV+oe+qeuqfuqXsHqbpvvFos9mJf
6h5A2KHuLUbdU/d+7rbbZMoU2bVLDh2ys+HDZcgQ3bpXPa5eyL33yv33ywMP
6E69kEaN5MILZdOmsr/ExMjs7GynDqq+hG3dP/+t6Eyz7l+YrjXNs8O1/Vpr
Opn5wK9a07zfrj6gtd4faG3Ua1rT+aLKS19oTfOseoNHay0U6/7uNWIx6h5A
GKLuLUbdU/d+7vbb5aefJC3N5rOb58yfNcv4/rvtJSTIY48ZPX7ZZVKpkgOr
WFHKl5f09LK/vLwoj8fj1EHVF+qeuqfuqXvq3kGq7hutFYtR9wDCEHVvMeqe
uvdz+nX/+usyfbocPWp/kZHGd9s//VQWL5Zff3Vg6vacd55xMv8yv/Xrfzl6
9KhTB1VfqHvqnrqn7ql7B6m6v3OdWKwjdQ8g/FD3FqPuA1D3K1ZofcO6lEyz
7idNkkGD5IMPtE78rt5T9etLRITxXsvOdmD790uNGsY5Acr8liz5MTY21qmD
qi/UPXVP3VP31L2DVN03/E0sRt0DCEPUvcWoe7frXsXjkiXOpGhw969/adX9
6tXGWfWuv974KoHt/fOfUrOm8dh86o515B2UlWX8ZMWsWWV/Bw5sSEtLc+qg
6gt1T91T99Q9de8gVfcNfheLUfcAwhB1b7EidZ+XJydOSGys8WaGyQ4ckK+/
NprRjbtXRah6yerl79kT8qtXT+bNs1/3W7bI4MHGd94bNrS/226Tq66SjRuN
XyRXYa4/9XLUJ6YjP+RfyhcbuykjI8Opg6ovYVv3rb8TnWnWveZZ65vP11qH
qVp7cYr9ad5ynS8sqFWJ11qr77XWa5zWOn9uf5pfFbllm9b6vqe1UKz7OzaI
xah7AGGIuve/7qOjZepU4/GznnkmXPb003LPPXLlla7cvR6P1K5tBOl114X8
ypeXuXPt1312tiQlSUyMHD5sf3/8YdySBQtk7VpZt86ZrVwpy5aV/cXFbabu
qXvqnrqn7t0+DDpL1f2/NorFOvaj7gGEHere/7rfskXGjJGmTaVdu3BZmzbG
g6O5V/ft28uDD0qzZiG/SpW06t6Rqc++Jk1kwgTjsflYibZ797qUlBSnDqq+
UPfUPXVP3VP3DlJ1f1uEWIy6BxCGqHuLFan7OXOka1f56CPjnORhsp9+kjff
NL697tI9nJoqKSllYbfdpvV7907dmWPGGF8tefhhVrL9/PPsmJgYpw6qvlD3
1D11T91T9w5SdV9/k1iMugcQhqh7ixWp+1mzjFOfTZki27aFyzZsML4XXKNG
8N8XpXya58x3ZBkZ8sMP8uqr0quX9O7NSjAeEY+6p+6pe+o+FOv+n5vFYh2o
ewDhh7q32Ol136OHfP+9cTq4MJnKVRWtLp0zvyytNNT9yVMfsSdOGGfDYyVa
Xl6Ux+Nx6qDqS9jW/ZM/is40616zd9p/pbWXP9Waztcl2k3TmuZXReSk1l4f
qbVPumhN58sar36otdv/0JrmOz0U677eVrEYdQ8gDFH31q10et3/8EPwb1jA
5uoj4pWlBaXuCwokMtJ4CLxNm5jWEhMjs7OznTqo+kLdU/fUPXVP3TtI1b31
DzNQ9wDCEHVvMeqeuvdzQan7zEx54gm5805p0IBpbc6cGdHR0U4dVH2h7ql7
6p66p+4dpOq+bqRYrEN/6h5A2KHuLUbdU/d+7uabZeRII/CXLAnQFi+W2bOl
fn0ZMEA3f1hExLLExESnDqq+UPfUPXVP3VP3DlJ1X2e7WIy6BxCGqHuLUffU
vZ+rUUNatpQ+faR//wCtXz/jE+fyy2XePPntN6a1o0e3ZWVlOXVQ9SVs617z
FGeada95lrP+72hN87XrnFlOMzMHjdFapWNa0zmdoJrmF1X6vWt/mvdbtTit
PfCr1kKx7m/aKRaj7gGEIereYtQ9de/nhg6VQYPkP/8J3Lebhw0zTo9/8cXy
7beydCnTWlzc5oyMDKcOqr5Q99Q9dU/dU/cOUnVfe5dYrD11DyD8UPcWo+6p
ez+3e7d89ZV8+GHgNm6cDB9u1P3EicbHJNPZgQMb0tLSnDqo+kLdU/fUPXVP
3TtI1f2Nf4rFqHsAYYi6txh1T937f0epD/6YmMDt0CHZs0datZJOndQ/yZjW
Vq/+OT4+3qmDqi/UPXVP3VP31L2DVN3fsFssRt0DCEPUvcWoe+q+NE99fA4e
LG3aSOvWTGtLl86Li4tz6qDqC3VP3VP31D117yBV99ftFYu1H0DdAwg71L11
PVH31H2pnccj+/bJjh2yfTvT2vHj23m8e/f28CLRmWbdd52ktff6au3+pVob
ONb++ryvNc1A/nuu1oa+qbXRg7XWcpb9ab5q60dvP+P+O1xroVj31+4Ti1H3
AMIQdW8x6j4z06j7mjWNR3JnrKwuN3d/QUGBUwdVX6h76p66p+6pewepur9m
v1iMugcQhqh7i1H32dlG3Z97rjRrxliZ3YIFs2JiYpw6qPpC3VP31D11T907
SNX91VFisXbUPYDwQ91bjLpX98Dy5caDuTdpwliZ3fz5Mw8dOuTUQdUX6p66
p+6pe+reQaruax4Ui1H3AMIQdW/dtmFe92qpqbJhg9H4jJXV8Xj31D11T91T
96FY9zWixWLUPYAwRN1bjLo/eep9lJBgPJ67xSIjZdMmxkJ1iYmRnFXPvf1X
l1bd371Ga10+0ZpmpY4YZn+XH9XaKx9r7bkZWvvXRq1pPl6Azgdr3/dEZ7V3
aU3zMy0U6/6qQ2Ix6h5AGKLuLUbdm8vPN95TvpaWJps3G3cOYyG6Awc2pKWl
OXVQ9YW6t4u6p+6pe+q+GKrur4wRi7UbSN0DCDvUvcXKTN0XFBjnx3Npu3fL
N9/IyJEyfjxjIbkdO1YnJyc7dVD1hbq3i7qn7ql76r4Yqu6viBWLUfcAwhB1
X+brXqV9RobExrq1N9+URo3k2mulXTvGQnIrViw4cuSIUwdVX6h7u6h76p66
p+6Loeq+WpxYjLoHEIao+zJf92lpsm6dcePnzXNlnToZdd+0qYwYwVhIbtOm
ZUlJSU4dVH2h7u3SqvvW32mt/ztae+gXrel8XeLpOVrr+ZHW6kZqre3XWtP5
qoiazger5peDKh3TmuZnWijWfdUjYrG21D2A8EPdl/m6j4yU++6TSy6RG290
ZdWry3PPyZw5xk8IMBaKy8uL8ng8Th1UfaHu7aLuqXvqnrovhqr7yvFiMeoe
QBii7st83W/aZLwJr7wi773nytq2laeflpdflnHjGAvJbd++it+7p+6pe+qe
unf7MOgsVffWv2BC3QMIQ9R9ma/7iAh54AHZutWtl//ll/LII1KpktSsyVhI
7ttvp+3fv9+pg6ov1L1d1D11T91T98VQdW99h7QdRN0DCDvUvcWoe3+2ebN8
/rkMGaL1L3DGgriIiGWJiYlOHVR9oe7t0nrnUvfUPXXvp1Cs+8sSxWLUPYAw
RN1bjLr3Z/n5kpQkBw4wFqpLS/szNzfXqYOqL9S9XVp1/+IUrb3TX2sPL9Ja
8/n2d/9SrQ0ao7Wbd2jt6dlaGzxaazofrC1nic6szxF3xml+poVi3Vc8Lhaj
7gGEIereYtS9PysokMxM+esvVka2Zo0sXRpei43dlJGR4dRB1Rfq3i7qnrqn
7qn7Yqi6r5AsFnuBugcQfqh7i1H3LDArKCgty8qSKVNk4kT5+OMw2s6da/76
6y+nDqq+UPd2UffUPXVP3RdD1f0lf4nFqHsAYYi6txh1zwKz48clNlYOHQr+
VNrffrs0by59+oTRfvtt8dGjR506qPpC3dtF3VP31D11XwxV9+VTxGLUPYAw
RN1bjLpnAVh+vkRFyZYtxnsq6Bs0yHj4g7vukp49w2hr1y5KSEhw6qDqC3Vv
F3VP3VP31H0xVN1flCYWe2EwdQ8g7FD3FqPuWQC2e7d06CDNmknLlsHfrbdK
69YyebLs2RNGS0nZmZOT49RB1Rfq3i6tum83TWuap47v+KXWnv3B/hqv1trE
blqzfhTyM07zazLv99GazgerZt3XitKa5mdaKNb9hSfEYvp1f+TIkZ9//vmb
b75Rr+vw4cO+rpaZmfm7b8nJyUWun5eX9913323cuFHz5gHA6ah7i1H3LAD7
/Xe58065/npp2jT4q13b+HycMUNiYsJo6em71b+1nDqo+kLd20XdU/fUPXVf
DFXcF6SLxTTrfunSpa+88srL/9OlS5clS5YUe824uLiXfdu0aVOR60+fPl1d
/v333+vcPAAoFnVvMeqeBWALFshLL8mkScav3gd96vOxVi2pWVP++c8w2uzZ
3x08eNChY6pP1L1d1D11T91T98VQdf+PDLGYTt3v379f5Xy3bt2WL1+u4n3x
4sVm6R86dOj0K6elpf1wmlGjRqnrv/rqq4XP65KZmTl16lSz+ql7AG6g7i2m
6n7lSmnY0Lh5f/0l06bJK69Q96G3ggJJS5OEBDl2rDROfVx17mx8uzzod5Ta
mjVSv77xgwT16oXRZs2i7ql76p66p+5Dr+7LZYnF2mjU/aRJk9Qd8ssvv3gv
WbRokbrkq6++8ufZk5KS+vTp06VLl82bN3svjIyMHDhwoPd7+tQ9ADdQ9xYz
675iRRk8WMaOlY4dpUUL6j70lpIiX30lbdrIyy+Xxj30kDz8sEyfHvw7Si0z
U7ZvN07xF1ZLTIzMzs526qDqC3Vvl1bdd5uotVc/1FqP8VrTOSPfLdu0pvll
jWv2a+3O9Vrr+57WdD5YO38uOqu3VWuan2mhWPfnZYvFbNe9x+Pp1auXukMK
P1hqamqqqvUePXrk5+ef8SW8//77p38poHfv3upC9aS5c+dS9wBcQt1b37z1
6+Xqq42zar/2mjz7rDzxBHUfeouLk3Hj5NFHpW3b0rgmTYxT6gW37j0eSU39
v8XEyIED4bW0tD9zc3OdOqj6Qt3bRd1T99Q9dV8MVffn5ojFbNf90aNH1b3R
r1+/Ipf3799fXX7Gx1iJiIhQV+vbt296enrhy8eNG2f+Dv7y5cupewAuoe6t
l5kp33wjo0fLm28aIfb009R96G3GDOOB3vr1M/6nFE7dsFat5Ntvg3b/FBRI
crJMnPh/mzAh7LZz55rC36BxCXVvF3VP3VP31H0xVN3/PVcs1maIzbo/cOCA
ujdGjhxZ5HJ1ibp83759Fs9bUFDw2muvqauphPd1HeoegHuoe+vl5cnq1UZ5
ff219OljPFgYdR9ymz7d+N0K9e/8VatK4956y3gous8/N04OEJQdPmyct79n
T+OrWOG5zZuXJyUlOXVQ9YW6t4u6p+6pe+q+GKru/5YvFrNd93/++ae6N0aP
Hl3k8rFjx6rLd+3aZfG8GzduVNfp37+/xQOtUvcA3EPd+3Mjs7ONqZvavTt1
H3pTda/+kf/JJ8a7shRuzhzjtwZef101ZnA2ebK0by+XXGJ8/So8t379L4XP
aewS6t4u6p66p+6p+2Kouj+7QCzmq+737Nmz24e4uLiT/6v7MWPGFHlGdYm6
XF3N4laZ1yl8Or7TUfcA3EPd+z8bj4iXnm78FvPBg8Hc/PnGb3ZT959+Gvxb
UuyWL5fmzY3T633zTXD22mvGlxduuknGjw/T7dixOjk52amDqi/UvV1add//
Ha0NHq01zczUqfumy7Q2erDWLk7V2oOLtfafN7Sm88HaYarorPYurWl+poVi
3Z/lEYs9X1zdFxQUWDw2/aRJk9R1Dh48qP5/+PDhRZ7XvJdiYmJ83ST1V0mX
U6x/24u6B+Ae6t7/lbTuCwqMph4zRv7zn2BO3b23307dl966T0gwTthYp47c
dltwdsMNUru2ceLBoN8VwVu0U0dUC9S9XdQ9dU/dU/fFm3omxT7XtGnTvvJh
xYoVJ089fr26N3r16uXxeAo/46uvvqouV0/1dXuWLl2qrvDee+9Z32zqHoB7
qHv/V9K6z8qS/v2Nb4wOG6b1r1PNvfIKdV+q6/7ECeODatIk4xYGZerO6dhR
HnnEOHVkeG7TpmX83j11T91T99S924fBEDJ48OAi36ZX/68uGTJkiMVzffzx
x+o6ixYtsn7h1D0A91D3/q+kdZ+aKlWqGM+i/oU5YkTQ1rUrdV+q6z7o27XL
OCmBUq5cmG7y5M+tf4/SEdS9XdQ9dU/dU/eBNnPmTHWHjB8/3nx0e/Xfjz76
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
wfz3z48//hjs2wIAgAOoewAo2w4cOCB+GDRo0OnP+9NPP5lPPeecc9LT0wN/
4+0pKChYvHix+q/br8h23ft5xyYlJW3cuDEmJkbvZqJ49evXN98LQ4YMsbha
ZGSkei84+OG0Y8eOQ4cOOfXSAADwou4BoGyLjo6+5P/lPewXvvDtt98+/Xlz
cnJatmx5zTXXjB07NvC33Lbp06dfd911xf40grNs172fd+zEiRPVy+/bt6/G
bYRPc+fOrVOnzr333nvgwAGLq1WqVEm9Fxz8HYr333//rrvucuqlAQDgRd0D
QLi56KKL1DH/u+++C/YNcUVubm6tWrW+/PLLALwu23Xvp+HDh1P3wVVQUGD+
DoWDdZ+enn7ppZfaO10DAAAWqHsACDeO172qle3btxf+4+bNm7Ozs31dPzU1
dePGjQkJCU7dgMImTJhwxRVX5OXl+bpCfn7+wYMHN2zYEBMT4/F4/HmZ6mqx
sbHqWf7888/CPxJQpO6zsrI2bdqUmJio+SZ4de/e3Ubd+7q1XjbuASUjI0O9
l9U7zsE30A3qAy8iIsKpjy71xpr/RvKn7tWdqV6vuouioqKs79gRI0bcfPPN
AfjlEQBAWKHuASDcWNd9lSpVLj7N888/X+RqO3bsKF++fIcOHV577bVy5cqp
F3jNNdckJSUNHTr0H//4h/pj1apVd+7cWeS5Zs6cecMNN5x11lnm3zuVKlUa
PXq0gz9Cn56eXrly5ZEjRxb71D/++KN9+/YVK1b0/sV34YUXjho16vQvBais
Vm/1zz//rP7/66+/vv76673PUr16de/VzLq/5ZZb1FvatGnTc88917zO1Vdf
vWDBgiIv0887VqlTp06NGjUuv/xy8wWq/xZ5rpUrV9q4tSW6B1T4X3LJJffc
c4/6//j4+LZt2/797383n+Xss8/+/PPPzas1atRIvepi7/CsrCz12tVTV6xY
Uey7w8LixYvVM1566aWnP6lChQrqSatWrfJectNNN6lLMjIy1q5d26xZs/PP
P9+8nep++P333ws/74cffnj6u0DZtm1bkdfy6aefXnvttVdccYX3N1nUZ03h
Z3nooYcKXz8zM7N///6F79gLLrigSZMmp38YmI4fP67u+alTp5b0ngEAwAJ1
DwDhpkR1b/4F8eSTTxa5WkREhLrc7HqV+ebVVOeav85v/vGZZ54p/CwvvPCC
ebnqpqeffrphw4bmzzw//PDDTr1pH3zwgYrQo0ePnv4k86fcvfXduHHjyy67
zPxjjx49ily5Xbt26nJVyuoFmtc566yzrrrqKlWOhX9j2qx77/1QtWpVdQ+c
c8455vWnTZtW+GX6eccqKhILX+eMde/nrS3RPRAVFSWnvmKj0v7GG280r6be
0eqtUP+zZMkS82oTJkxQf7z88stVyxd5CdOnT1dPqlGjho3vUC9cuFA9r3pX
nv6kv/3tb+pJy5Yt815SuXJldcl///tfdUepj6ibb765Zs2a5g2uUKFCamqq
95pF6t78RFC2bNlS5LVMnDjRvI73KzbWdd+yZUvzauoOV++OBx980LyjlDFj
xhT7Nvbp00d9IpT0ngEAwAJ1DwDhpkQ/ma8axKLuFdU1ubm5U6ZMMf+orq9q
7rXXXlP/f+WVV3qv/8knn6hLVJp99tln3h9aXrt2rfmlAFWmjrxpjRo1UmFV
7JNWrFihXteIESO8P1ienZ3dqVMnOXXi+iLnVTN7uV69euq/N9xwg7rNR44c
OXnqbHgHDx70Xs1b9+ot9X6HOjo6+qabbpJT3zdX1/d1U33dsYU9/vjj4sdP
5vt5a0t0D5h1X65cOfNnLbp167Zq1SrzpyzUy/T+2kVmZqZ50rnJkycXuVVN
mjRRl7/55pvWN75YNupeufPOO/fs2WNeqD68zQsnTJjg67Wo8PdV916bNm0y
r2Pxk/lxcXHmdaZPn+69UH0WfPvtt0888YSvx0TYsGGDepbTf2wAAADbqHsA
CDcO1v3ZZ59tfqP88OHD6o/VqlUzu0/Fl/lNZ/PKWVlZF1xwgbpk1KhRRV7O
u+++qy5XJaj7Vp08qW6Juj2quH1d4fTWzsjIML9FPmPGjMKXm72s3H777cnJ
yb5eoFn3VapUSUpKKnz5mjVrzGe3OHOa43V/xlt7siT3gFn3Juuvvbzxxhvq
OnXq1Cl84d69e808j4+Pt77xxbJR982bNy/y1qnYl+J+LMHLqbrfvn27eZ3Z
s2ef4Q0rxOPxqM8Xde/5/ywAAFij7gEg3DhY995+V5Go/li3bl3zjyqXzO8I
m3/8448/zD+e3p7mNVWg2X97/mfFihXqRaksPeM19+zZM3fu3NGjR3fp0sVs
27feeqvwFcxeVneU9WOlWZwz/4orrlBPeu+993w9r+N1f8ZbW9gZ7wFv3VvU
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
dQ8AAAAAQKij7gEAAAAACHXUPQAAAAAAoY66BwAAAAAg1FH3AAAAAACEOgEA
AAAAAAAAAAAAAKVAsH+CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjL4uLi
li5dOnXq1Pnz50dGRno8nmDfIgAAAAAA4K/du3c3adJE/l+XXXbZ4cOHg33T
AAAAAADAmR05cuTiiy+W01x66aVFvn2/aNGiwYMHN2vWrGnTpn379p02bVpK
SkqwbjYAAAAAAPDq2LFj4ai/+eab69Wrd+655z7zzDPe66iKf/7550//CsAV
V1wxb968IN54AAAAAACg1KpVy1vry5cvNy/Mzc31fl8+Ly+vbt26p6e96Y47
7gjebQcAAAAAIHx5PJ7k5OSYmJgdO3acffbZZqdXqlRp69at207ZtWuX98of
ffSRt+UrVqw4dOjQCRMmtGvX7pxzzqlVq9axY8eC+IYAAAAAABC2VNT7+l68
qXr16uY1U1JSVNGbF1apUqXwefa2bdsWFRUVpLcAAAAAAIBw53/dL1u2zHvh
xx9/HNybDQAAAAAAvPbu3XvtKddcc03hqL/2fx5++GHzmqrovU+NiYmZOnVq
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
NodtA9Hbt28fP36ctsiNGzdUGcEq/BhYhVXby4GQm9P6pw2qcE1qIVkmgd0D
t4RPe1K3bl2Tj/J9nsbTWAEAALCAuXMXAQDAZizcEQ8AYC2we+CW8LuOli1b
Vj7NFCcoKIhfIYVTSQEAwCpg9wAA1YHdA6AisHvgliQkJPBRaKlSpUaOHLlq
1aqNGzfOmjWrefPm/LT8Ll262HD7UQAA8GRg9wAA1YHdA6AisHvgrly5cqVF
ixYFCxY0mEOjevXqS5cuhdoDAIC11KhRo0iRIlu2bHF0QwAA7sPatWupY6lV
q5ajGwKAOwC7B+5Nenp6QECAn5/fmjVrTp48Kb8JFAAAAAAAAAC4DbB7AAAA
AAAAAADA1YHdAwAAAAAAAAAArg7sHgAAAAAAAAAAcHVg9wAAAAAAAAAAgKsD
uwcAAAAAAAAAAFwd2D0AAAAAAAAAAODqwO4BAAAAAAAAAABXB3YPAAAAAAAA
AAC4OrB7AAAAAAAAAADA1YHdAwAAAAAAAAAArg7sHgAAAAAAAAAsExERsXz5
8q1btzq6IcA0tIHWrVv3+PFjRzfEkcDuAQAAAAAAcFeysrLOnz+/a9eu0NDQ
nJwcRzfH3qSmptIbp7cfHh6u0+lEFvX333+TMVWsWFGttgHLWLXtbty48fTT
T9MG+uCDD+zTPOcEdg8AAAAAAID7ce7cudq1a7/wwgvSaP+tt95asGCBo9tl
J+7fv9+7d+/nn39eevuvvPLK999/f+fOHdsWCLu3GzZsu23btvGazz77bHJy
sj1b61TA7gEAAAAAAHAzZsyYIclR0aJFq1SpQtbD/xwyZIijW6c5aWlp1atX
5+/3ueeeq1atWqFChfif9Mv+/fttWCbs3j7Ytu0yMjJatWpVpkyZyZMn27nB
TgXsHgAAAAAAAHfC39+fD+9JRc+fP88LU1NTR44cWaBAgWPHjjm2eTZz+vTp
X375xbh8y5YtI0aMkJdMmTKF3v7zzz+/cuXKpKQkXkirolatWsWLF79165YN
rw675yjfCrahxbbzHGD3AAAAAAAAuA05OTlVq1alsX2VKlUSExMNHn3w4IHl
p+t0upiYmMDAwMuXL2dnZ5usk5ycfPbsWaqmTotlpKen05Lj4uJMPrpnz54P
P/zQuPyvv/767rvv5CXNmjWjNdCuXTuDmrRy1DozPy0tjZoaHx9v+VmZmZkX
L14MCwujX5S/VkpKyoULF8ijLSw/MjIyODiYmqF8sUqwvAlyrdkKtqHFtrMZ
+gbRVoiNjbXz69oM7B4AAAAAAAC3YcOGDXxsv3nzZiX1e/bs+fLLL+/atYt+
X7FiRbly5eTX6RtUPnDgQNWqVfn0ZUSRIkWGDx9OPiivs3fvXlpg4cKFjV+r
UKFC9NDhw4elksWLF1OJj49PaGjoV199lS9fPr7kt99+e9u2bVK1I0eOLF++
fMCAAW+++eZyIzp06EC+Sb9Q+7lEf/3117SQunXrWn7vVjWV2z29fVL1L7/8
UrrwoXTp0jt27DBewv379728vJ577jnpevCXZfz0009SzZs3b7766qt16tSh
3+/evUtvR3oWreqFCxfKF/v48WPaZK+88oq02E8//ZQMVOtNkGv9VrANhduO
KFGixMtGtG/f3rhmcnKycU05ly9fNnjK+vXry5cv/9RTT0mXt0ycONHc/i7n
AXYPAAAAAACA2zBixAiunAqniCfNpPpkZNOnT+dSQEZTqlSp/Pnz16pVS15z
9OjRvMKLL774v//9j+rwP99///1Hjx5J1Xbu3MmvmDZ+rWeeeYYeOnDggFTC
lfn111/nsky/kD7zKQKoGaSKvNq4ceMaNWr0wQcf0Es3MqJcuXJFihThv/Mb
olF93jZvb2952wywoakEn6jQXFM5GRkZNWrUoIcKFizYpUuXzp07FyhQgD+9
XB7y2Q9u3LhB5WXKlCG1r1ChAq9G/k72Sr/4+/tLNW/duiWt9rJly37yySe8
MdTaefPmaboJbNgK5iCVHj9+vLlHFW67XCO758/69ttvjWumpaWRnhsYvbQL
hZptcI7Ejz/+KK3k77777tNPP+V7tBo3bmyhPc4A7B4AAAAAAAC34fvvv6eB
fZMmTRTW53ZfrVo1+lm+fPkFCxbw85/JTyMjI6Vqp06d4oLzww8/pKSk8MJ1
69aR6FFh165dpZq2KfObb7558OBBXhgVFVWpUiWWd/IANUOqrPyccGohXwLx
0ksv9enTJzw83PiJ2jWVmsRf+tq1a7wkLCyMBJ8We+7cOYPX4nZPns4PFvfo
0ePw4cP8MDFtAvmpEfysdbJRaXK5hIQEUk4qzJ8/v/QetXtfuWqcmX/o0CF6
s/379zf5qMJtZwwt0JzdG5OTk9OqVSuqTxvl5MmT8ofmzZvHd5jQd0HaRXbs
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
QzoSc8v59lv9XPGW7T4jg9Wvrz85v2xZK1KmDCtd2jXsnkKrKyGBxcU5RdLS
rmVnZ2vdy8HuYfewe9g97F5FyO6vlmMWMhB2rxKwe4+Kye0OXAjYPWJtYPfG
iYpis2bptX3s2Cfkww/ZwIFPsHudjp07p7983qrs3MkaN3YZu8/O1t/Cz9xt
Ae0cnS7SDr0c7B52D7uH3cPuVYTs/kp5ZiGwe7WA3XtUTG534ELA7hFrA7s3
TnAw69uXtWvHOnV6QsqX19/t3bLd25a4ONamDVuzhiUm6o+MI8qD+91rmmHj
mUgE7X5BV6FMHSiUGX2FMruX7cl4XiiCLfftJxTBfQuCt6UTsfst3zKR/NVD
KHN6CsXlRvJk95crMAuB3asF7N6jYnK7AxcCdo9YG9i9cWhtDBvGJkzQ33He
cj7+WN9CLez+3j3WvDnz8tI3ZvJkxIpgznxNA7uH3cPuYfdaQHYfVpFZCOxe
LWD3HhWT2x24ELB7xNrA7o3TqxcbM4YtWcI2b35CatdmQ4dqYvfx8axjR9a+
PfP2Zt27I1bk2LHdsbGxWvdysHvYPewedg+7VxGy+4vvMwsZ2Al2rw6we4+K
ye1uTE5OzsWLF5csWTJp0iQfH58JEyYsX7788OHDFiYySkhImDNnTkBAgPFD
V69eXbt27Z9//kmL8vX1pd8vXLhg4dX9/f1nz56dnJxs6YOrEklJSYsXL16z
Zo1BOQ0dN23a9Pfff/v5+QUGBqamptqhMUqA3SPWBnZvnL40mvVlQUH6ifUs
R8mserYlK4uFhbHZs9lffyHW5eLFI/QfR+teDnYPu4fdw+5h9ypCdn+hMrMQ
2L1awO49Kia3uwE0aiKp72aKcePG3b171/gpGRkZ9BBVWLp0qbxcp9Nt3LjR
5KI2bNiQk5NjvKjTp0/zCnY48ZKYO3cuvdbgwYPlhSdPnuzevbu8taNHj370
6JEd2vNEYPeItYHdG4fsfuZMFhLy5JpK7ohnW3Jy9Ifv16xBrM716ycTExO1
7uVg97B72D3sHnavImT3oVWYhcDu1QJ271Exud3lpKWlDR06lCvtihUrgoOD
Y2Njw8PDd+7c2bNnTyqkRw2O4MfHx0+bNo0/xcDur169yssXLVp05cqVu3fv
UgnV4YX79++XV9bpdIcOHeKvYh+7P3r0KH8tud3HxcX16NGDCmfPnn3hwoUT
J078/vvv9Kevr6/W7VEC7B6xNrB74ziD3efmCX5SEmJ1MKuepoHdw+5h97B7
LSC7D6nKLOQ32L1KwO49Kia3u5yVK1fSQ6S3ly9fNngoJiaGa+/JkyelwgMH
DvTq1Us6xm1g9+vWreMHvg1GYvzcgKlTp0ol5NT0p/xwudZ2f+/ePanlcrvf
uXMnlfTv3z8jI4OXhIaGUkn37t3T0tI0bZISYPfOHJ1OP6H3E2+hbudcuqSf
QQ52L49j7T4z0/HTzrt0YPeaZtQfTCSCdv9PZ6GMGy4UQdta09b2JBQSiuCt
2QTfuKDkCiq2A+1+bnehCO4VcUW7D/6AWQjsXi1g9x4Vk9tdguyVHzrfvn27
yU+Ln58fSe7q1aulEi8vL6pPtr5ixQpju58/fz4/CG6wnLCwMOpU//zzT+nk
/B07dvC9CgEBAfyseNvsPjw8nFpi8px/OdnZ2RMnTuQnFRjY/ZUrVzZs2HDs
2DGp5PHjx/a8WMAysHtnTnIy272bbdrkXJk3j/34I+z+P3Gg3aen6/e37NiB
2J7o6NN2mJgFdg+7h93D7mH3KkJ2f+5DZiGwe7WA3XtUTG53iaCgIMsam5aH
vIS8PjAwkGx69+7dxnZ/6NAhKvTy8lq/fr3JC/YlDh48SFYeHx9Pv/MzBGxT
6QkTJtBzlyxZYvnIztatW6nan3/+GRkZaXzdvZzU1NRly5ZRnd9//92G9qgO
7N6ZQw44ZYo+c+Y4UUaP1k8NB7uXx4F2f/0627iRTZrE/v4bsTGXLh17+PCh
1r0c7B52D7uH3cPuVYTs/uxHzEJ++xl2rw6we4+Kye0uwQ+g9+vXz4YP0q5d
u4ztntR4ypQp0sn2Q4cOJVMOCgpKSkqysCiRY/e3bt3i59v7+fmZq3P9+nUv
L6++ffvSS0RFRZmze36xAG/Mb7/9Fh4ebkN7VAd278wZPJiVLKm/Q/oPPzhR
SO1r1oTd/ycOtHtfX9agAStVirVpg9gYf/8tMTExWvdysHvYPewedg+7VxGy
+zPVmYXA7tUCdu9RMbndJciI+Wn28sJLly4tWbLknzwW57Fy5Urj55q0eyIz
M3Pt2rX9+vWTX1Pv7e29Y8cOc4fXRew+V3YGwvr1640fTUtLGz58OD166tQp
+tOC3Z8/f15q8MCBAy3fxc9uwO6dOT17sho12Pffi45v1Q2ZbKNGzmv3Awbo
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
Y6POABgK1D11T91T99S9hai6f+NxMZG6twrq3lUG3e+tqaur69+/vz9pZ86c
uWXLluLi4tzcXBW/CQkJaqG6tM0n+Cp7J0yY4L9Jm7rft2+ff3l6evrevXtV
S6ol6jr+hStWrPBfraioyJ/bEydO3LBhw+bNm6dMmeK/jrq+Zc/1kNf16quv
qn+mpqaqX3zPnj0pKSnqn6NGjbJ2S8KDuney1L17zM2VjAwZPRqj4ObNK8vK
ynQGwFCg7ql76p66p+4tRNX99CfEROreKqh7Vxl0v7dm1qxZ6qKuXbuqqm1z
0eHDh9Vyden69etbFmZlZSUmJrZ8xt2m7t9++221cNiwYV6vt/Vy/7EB48eP
9/9Tvd7VP5OTk1veN/B4PAMHDlQL586de8bPaVO+cF179+5VP3fp0qWqqsp/
BfWD/w2B/Px8azcmDKh7J0vdu8TGRlm1SlJTdUMGwzMnJysCB1NR99Q9dU/d
U/cWov4Cf/1JMZG6twrq3lUG3e8t1NXV+T+gX7x4cdBny+zZs1XnqipsWRIX
F6eur2p95syZgXU/depUtTAtLa3N/ezatUsNqhMnTvQfnD9v3ry+ffuq/7a+
TkZGhrrtlClTQn0qnyI3N1dtSetj/tvwhetasGBB4Da/+OKLaqG62hltjB1Q
906WuneJZWXSq5dccIEMHYpRkLq3VeqeuqfuqXs7UHX/2lNiYrfO1L01UPeu
Muh+byE7O9v/EXx5eXnQZ0vdKVovUV2/YcMGVdPvv/9+YN2vWrXK/6121cVn
GpL+z/dVa5/RrUaNGqVuNX369DZHC4S+rsmTJ6uflyxZ0voKmZmZauELL7xw
RhtjB9S9k6Xu26v19bJrlwwbJmlphqNHG2ddv/564xx8GHmLijbX1NToDICh
QN1T99Q9dU/dW4iqe/PnIXVvFdS9qwy631tQSauWJyUlhfFEWrp0aWDd19bW
jhs3ruW4/f79+7/55pvZ2dlfOAV9y9sCBw4cOKPNOHTokP+bArNnzw7xJm3W
5S99tTDwOk746j1172Sp+/ZqZaW8/bZ8+cvy858bXnyxnHuu3HNP9DfMrRbo
jH4hQt1T99Q9dU/dW4iqe/NzSlL3VkHdu8qg+70FVcT+w+xbL9y9e/f06dNf
P8Vrp5g1a1bgbYPWvaKxsXHevHlJSUmtp6Dv0qXLkiVLTvfx+qZNm/wH/Lc5
fj5EWo5ACOVA+sB1+Sf/X7duXeB9pqSkhLE91kLdO1nqvr165IhMmiR33PHv
AOnTR373O+nQwViOkbemZl9TU5POABgKrq37gamio2bdT+2speZbEy921VKn
7su+q6V5NH2hCVO0nPuQluYzrX2hOnX/7l9ER80T1o/vrWUs1r356zeRurcI
6t49dv48gU+G+fPnq+V9+vRpvXDlypVtbhgfHx9429PVvR+Px5OXl6de1+PH
j1dp77+fV155JfCaq1at8uf25MmTT/f3265duzaY4p8lT6HWaPLkD7qu0aNH
t5k5UKFiv/OpEwKa3FtkoO6dLHXfXs3NleRkGTtW9uwxXLdOnnhCfvUr2bwZ
o2Bp6fb6+nqdATAUqHvqnrqn7ql7C1F/k5s/INS9VVD3rjLofm8hKyvLH8XH
jx9vWVhcXLz2P/hnnAu97lXUB347srKyUnW9f0VtZkby379i2rRpJqcz9p+i
LkQ2bdoU9E5Ot66XX365c6uz9flZvnx551Mn0TvdJkUM6t7JUvfO0eORkhJZ
tswaX39d/vlP4xv3NTWG5eUyYYLceKM89BBGwRUr3isqKtIZAEOBuqfuqXvq
nrq3EFX3L8WLidS9VVD3rjLofm9B/b3kD94NGzYEfbYcOHAg9LpX9xYXF6eu
XF1d3ebKXq+3d+/e6vqrV69uWeL/XoBi/vz55nPiLVmyZIYp/jtXjB07NvAj
HvN1zZkzx7+89UL/UQ2vvfaayVZFBureyVL3zrGpyfiQfepUSU+3wFGj5L77
5MUX/33nDQ3y5pvGxHo334xR8N133z548KDOABgK1D11T91T99S9hai6N38F
JcZR99ZA3bvKoPu9Nampqeqibt265ebmBl66Y8eO0Ove4/EkJycHfg7uv6hn
z57qou3bt/uXqCTvfGpqu5beD5uioiK1/ere1O9SW1sbeAXzdfkn0BsyZEjr
hYMHD1YLV65cqblt+lD3Tpa6d46lpfLII0aAJyZK9+66PvGE8S37lrr3euXo
UdmyRXJyMAqWlm5vc/YWO6DuqXvqnrqn7i1E1f2UBDGRurcK6t5VBt3vrTl4
8KCKd3/gr1mzpqSkxHcqxlUyZ2Rk+C8K/cj86dOn+z8iX7RoUVVVlX9heXl5
WlqaWpiYmOg/JH7nzp3+q61du7b585icuT4oKuf9JT5s2LDAYwZCWZf6o7FH
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
19b9Q3NFR8261+wdzUrVfHNg+hPhW/x9LTXflzD/RPULff1JLTP/pKVO3S/+
s+io+bbGjE5axtxf8qruB40UE6l7q6DuXWXQ/Q4xBHXvo+4jLnWPDrNAZ/QL
EeqeuqfuqXvq3kJU3Q9MFROpe6ug7l1l0P0OMQR176PuI65r676+Xg4dkoIC
dJbV1Xubmpp0BsBQoO6pe+qeuqfuLUTV/YBRYmIX6t4iqHtXGXS/QwxB3fuo
+4jr2rrPzpbrrpMLL5Sf/hQd5Jw5M/Ly8nQGwFCg7ql76p66p+4tRNV9v9Fi
InVvFdS9qwy63yGGoO591H3EdW3dL18uF18s550X/Z7F1lL31D11T91T9zH3
l7yq+75jxUTq3iqoe1cZdL9DDEHd+6j7iOvauh87VgYMkPfek9JSdJD19bke
j0dnAAwF6p66p+6pe+reQlTd9xknJnZJoO6tgbp3lUH3O8QQ1L2Puo+4rq37
1FQjN1aulKYmdJBeb77O6Bci1D11T91T99S9hai67z1eTKTurYK6d5VB9zvE
ENS9j7qPuG6u+5QUWbUq+luCn7dAZ/QLEdfW/X0LRcfo1v2oAVpqrl2nE3f/
UkvNE69rZubkblpGse6X3i06av7ir8RpGXN/yau67zVBTKTurYK6d5VB9zvE
ENS9j7oPZkOD1NTIyZO2WFUl27ZR97bY1CQ7dhju3ImhWlGxs6GhQWcADAXq
nrqn7ql76t5CVN33nCQmxlH3FkHdu8qg+z0Qj8ezc+fO6dOnjxkzZsCAAaNG
jZoxY8bq1aubm5sDr/npp5/OmTPnxRdfnDVrlrpO4ImK9u3bN2/evIkTJ6q7
mjRpkvp5x44dJmv/8MMP09LSqqurQ3wO6xDJdVkCde+j7oN57Jjs2SPbt9ui
+o0WL5Zf/pK6t1ivV8rL5Z//lIcflkcewVDNynqvqKhIZwAMBeqeuqfuqXvq
3kJU3Sc9JyZS91ZB3bvKoPu9DRUVFSrqOwdj5MiRrXuwpqZm+PDhba4zePDg
8vJy/xW8Xu8777wT9K7mz58fdFqkjRs3+q/Qcif2Ecl1WQV176PuA2xqkpEj
ZfBg3b+rT+fQodKtm3FiuEOHov8gR1K7617tuI8+kr//XXr1smvftUtzcrJK
S0t1BsBQoO6pe+qeuqfuLUTVfY/nxUTq3iqoe1cZdL+3pq6urn///v7mnTlz
5pYtW4qLi3NzczMzMxMSEtRCdWnLJ/jp6elqSVJSkkr4ffv2LV68uHfv3mrJ
xIkT/VdQC/13pa65d+9e1ZJqyRtvvOFfuGLFitar9nq9q1at8q/F7uKO5Lqs
hbr3UfcB1tXJj39snLvtqqvs8he/kHPPpe4ttqFBJk+WTp3klVfknXcwVPPz
s0+ePKkzAIYCdU/dU/fUPXVvIaruu78gJlL3VkHdu8qg+701s2bNUhd17dp1
z549bS46fPiwWq4uXb9+vfpnY2Oj/5/Lly9vuc66dev8vew/1v3tt99WPw8b
NkzVdOu78h8bMH78+JYlJSUl6p+tP9y3r7gjuS7Loe591H2ANTVG2vfqZazd
Dl96SYYPl0sucXrdFxfLvn2yd69l9uxpHLdgd90/+6x88IHs3o2hevz4Lr53
T91T99Q9dW/3MGgtqu4T08TEuETq3hqoe1cZdL+3UFdX5/84e/HixUGfLbNn
z46Pj1dVqH5WYTh06NCePXtWVVW1XKG+vt7fywcPHlT/nDp1qvo5LS2tzf3s
2rVLDaoTJ05sOTh/yZIl/ncVVq5cqVYRdnHn5ubOnDnT/FTIVq0rKlD3Puo+
wJMnjc/WP/7YrvuPlTnzt2+XzEx5913L7NRJBg2yve579DAe3qg/ejFlgc7o
FyKurfvH3hQdNeteM8/feFzLqZ21XHJP+G65Wsu3HtZS84x4L3fRcsVtWurU
/Qd/FB11zoGofKG7lrFY9wlTxETq3iqoe1cZdL+3kJ2dbf5Zdt0pTJ5OO3fu
VDePi4vzf7CyatUq/z8zMjLMQ/Kjjz5SVe7/KqX/kIDwinvUqFHqttOnT29z
tIAd64oK1L2Pug+QuvdPT9ehgzzxhPqDxzJvuEH69dOt+6YmOXLESPi4uLY+
84zcdJPx2f1nn0XiUSopkU2b5P33Y96DBzdGYCpU6p66p+6pe+reQlTdd31R
TKTurYK6d5VB93sL/g+1k5KSwnsu1dTUDB06tPWH9bW1tePGjWs5AL5///5v
vvlmdvYXfGVS5/P0Q4cOJSYmqpvPnj07lOvz2X14N6fug0rdR0tV98XF8q1v
yb33GvPPW+VVV0nfvrp139AgeXnyu9/JLbe0VS28+GJ56injCwUReJTUTszM
lGnT5NVXY9s9e9YeP35cZwAMBeqeuqfuqXvq3kJU3ce/JCZ2pu4tgrp3lUH3
ewuqiNXyMWPGtF64e/fu6dOnv36K104xa9aswNvW1dX5Q7579+4VFRUtyxsb
G+fNm5eUlNT6e+5dunRZsmTJ6T5e1yzuliMQMjIyvvDK1H14N6fug0rdR0tV
92rbLrpIli//9+njLbF7dxkyRLfuq6okO1suu0xmzWrr9Ony2GPG0yYyn93H
xxuv2ccfNw4kiGk/+WTZsWPHdAbAUKDuqXvqnrqn7i1E1X3cK2IidW8V1L17
7Px5Ap8M8+fPV8v79OnTeuHKlSvb3FAVcZsbVlZWjhw50v9l9l27dgXes8fj
ycvLU6/r8ePHq7T3388rr7wS9Dn5hcWtVrHBlIEDB/pXodZo8uQPZV1Og7r3
UfcBUveq7gsL5Ze/tHjeP0vmzC8vlzVr5Gc/M563bVy/Xvr0kYSECNX9rbca
z5MHHjAyP6Zds2ZpcXGxzgAYCtQ9dU/dU/fUvYWov8k7TxUzqXuLoO5dZdD9
3kJWVpY/ilsf9Kj+iFr7HxYsWBBY9+oK/pPo9ejRY9++fa0vUlFfU1PTZi2V
lZWq6/0rCnrO4i8s7pSUlM4hs2nTptPdTyjrchrUvY+6D5C6d3jdr11rPHon
TrS1tFTGjZNu3SJU93/7m/Fl/48+kj17YlvmzKfuqXvqnrqPxbp/dpqY2Lkb
dW8N1L2rDLrfWygqKvIX8YYNG4I+Ww4cONCm7g8dOtSrV6/Op75Tr27e5t7i
4uLUlQOnP/J6vb1791a3Wr16deBavrC4lyxZMsMU/50rxo4dW19ff7r7CWVd
ToO691H3AVL3zq/7q68OclFDg/GEefppY9+pLbfbv/zFOMHfkSPhPAEcJXPm
2+q974mOmnWvmUtj+2qpuXYdP/6dltOe1XJ8by2HD9FSM7F16n7jdaJjxoNa
ar6bFIt1/8yrYiJ1bxXUvasMut9bk5qaqi7q1q1bbm5u4KU7duxoXfeHDx/2
f6F+5MiRlZWVba7s8XiSk5PVpStWrAi8qGfPnuqi7du3B65Fs7iLiorU9qt7
UL9LbW2t+ZWp+/BuTt0HlbqPljFa901Nxpnuf/AD41v5119vu+edJ/37n3Hd
q71fWSkVFQ6yru6z5uZmnQEwFKh76p66p+6pewtRdf9UuphI3VsFde8qg+73
1hw8eNAfvCqQ16xZU1JS4jsV4yqZMzIy/Bf5697r9Y4ZM0b9Uw2PJ0+ebP48
/nubPn26/zP0RYsWVVVV+ReqlE5LS1MLExMTGxsbA7dBp7hVzg8ePFjdfNiw
YaGcMom6D+/m1H1QqftoGaN139ws69bJz38uV1wh115ruz/4gXGCvzOqe/XA
qprescN4Vm/b5hTLyrabH5RlCdQ9dU/dU/fUvYWoun/ydTHxWereIqh7Vxl0
v7dhy5YtPXr0aPneenJysv8cc36GDh26Y8cOdbVNmzaZfNs9Ly9PXefEiROt
z4iXlJTk/zTf/xbBunXrgm6ATnH7v9GvNrLlzQRzqPvwbk7dB5W6j5YxWvfK
ujrjmbxxY5A59yz3rruMUwCcUd3X18tzzxmHFqjH9oornOL8+W/l5+frDICh
QN1T99Q9dU/dW4iq+yemi4nUvVVQ964y6H4PpKysTKVfS4krEhISUlNTly9f
3vK5/OLFi03qfv/+/f6rNTU1zZs3b9CgQS0XJSYmjh07NuiR/378byaEdzrj
zMxMta7Qb6uzrqhA3fuo+wCpe5vqfswY6dXLOHWdzhRwn34qc+YYj97p1lJR
IWVlxgx7dnvPPcbp5NTzU+3HEM3LM04LePXVcvvtqvqc4rJlCw8dOqQzAIYC
dU/dU/fUPXVvIaruH39DTKTurYK6d5VB9/vp8Hg8FRUVhYWFqgHVz5rPtNra
2vz8fEvuypygR/u3G6h7H3UfIHVvU91PmSL33ScPPWTs2bB94gnjTi691Gzj
I+Pvf2+8ZidPlqlTQzUtTTp0kIkTjSdAVZVTbGzMs/v/Iz7qnrqn7ql76t5S
VN2bn3GDurcK6t5VBt3vEENQ9z7qPkDq3qa6X7hQnn3WsEeP8I2Lk3/8w6zu
I+ZTT8nDDxtfNxg7NlRHjpRf/1pefFGKi6O//a0s0Bn9QsS1df+3BaKjZt0v
+JuWzyVp+eozWr75WPiuv1FLnVUr/5WipWbdb7hBS526f/8u0VHzCePCM+I9
OlNMfLY7dW8N1L2rDLrfIYag7n3UfYDUvU11X19vHFT/6qtavvCCDBggl18e
/UdJPUMmTpTERONg+xDt2lWuuso4hoG6d4/UPXVP3VP3dqDq/pFZYiJ1bxXU
vasMut8hhqDufdR9gNS9TXWvXLVK3n9fy7ffNpr6iiui/yjt2SPz58vzz5+B
48bJLbfI4MGyYoXxinOIpaXMmU/dU/fUPXUfY3/Jq7rvOFtMpO6tgrp3lUH3
O8QQ1L2Pug+Qurev7vU1nzPf4dbWSrducs01csMN8tvfOsVFi+YVFBToDICh
QN1T99Q9dU/dW4iq+3/OEROfoe4tgrp3lUH3O8QQ1L2Pug/Q7rpX7ay6/oIL
JDnZOEOcA1XPxp495Uc/Mho/6k+DNsZ03Tc1yXun5kkbMkS32iw0JyertLRU
ZwAMBeqeuqfuqXvq3kJU3T80V0yk7q2CuneVQfc7xBDUvY+6DzACda8S9Zvf
FIfzv/9L3VtvXZ1kZxu/gnMsLt5aW1urMwCGAnVP3VP31D11byGq7v8xT0yk
7q2CuneVQfc7xBCtW0bnfqh7O2yvde87dYT26NH//pTcmfLZvU02NUlRkfHA
Osfq6r1NTU06A2AouLbuzU9Z9YVqvpBff1JLzbp/sauWOqd1y71Yy+d7aJk6
UMvBI7TcepWWOnWf/rTo2G+MlponcIy5v+RV3f/9bTHxmR7UvTVQ964y6H6H
GIK691H3AUag7v1G7MzsZ6rHIwcPOvp791deaczAj5bo8Rzwer06A2AoUPfU
PXVP3VP3FqLq/sEMMZG6twrq3lUG3e8QQ1D3Puo+wIjVvWN1+Kx6q1fLd74j
s2ejNebmrq+qqtIZAEOBuqfuqXvqnrq3EFX3978jJlL3VkHdu8qg+x1iCOre
R90HSN07ue4rKmTNGqPuR41Ca9yy5aPy8nKdATAUqHvqnrqn7ql7C1F1bz5r
x9PUvUVQ964y6H6HGIK691H3AVL3Tq77piY5elQGDpRBg9Aas7OXl5SU6AyA
oUDdU/fUPXVP3VuIqvv7FoqJ1L1VUPeuMuh+hxiCuvdR9wFS906ue2V1tcya
pVs92OLGjSs4Ix51T91T99S93cOgtai6/+siMZG6twrq3lUG3e8QQ1D3Puo+
QOre4XWvNk/to4oKtMb6+lyPx6MzAIaCa+t+wCjRUbPuJ3fTUrO2JiZr+VJ8
+Kr/u+s4ro+Wbz2sZf/RWmomtk7dz+gkOmq+qTK6v5Yx95e8qvt73xUTqXur
sKru1f1EPdUjWffq9416qlP3LoS691H3AVL3Dq97Exsb8Yz1evN1Rr8Qoe6p
e+qeuqfuLUTV/Z8Xi4lPJ1H31mDVcyPmnmOaxPrvG+vb71qoex91HyB1H6N1
7/FIXp589hmemZWVuxoaGnQGwFCg7ql76p66p+4tRNX9PUvEROreKqj78Ij1
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
4E3q6+vVn8GdP8+cOXP88b5x48aWifRnzJih/rl48WL/tHvvvPNOeBsJABAU
6t5H3dsmdW+J6tE7fFj69ZOePdEWOd89dU/dU/fUfSzW/X95xMTT1f2+ffv2
noaioiLff+p+zJgxbW7oP9heXS3wPl9++WV1kXoY1Z3X1NSo/w4bNkwtUcvV
pRs2bPDXfWZmZstNdu7cqZbEx8dzUjwAsBDq3kfd2yZ1b4ler/Hx/dSpkpaG
trhz58cVFRV2jzPUfbho1f3KP2jZ5WUt33pYS833FnT8VY6WD83V8uUuWmru
NZ0nq+YZ8V6J01LzlRaLdf8lr5j4z2B17/F4Op+el156SV0nPz9f/ZySktLm
tv5HqbCwsM3y0tLSuLg41eklJSUtC8vLy7t166aur/423rp1q/+D+/r6+tY3
HDx4sFp+4MABax4RAAAfdW9A3dskdY8xYkEExhnqPlyoe+qeuqfug/PGFxH0
VjNmzHjzNHz00UfqCidOnFCPRo8ePdqcTqV79+5qeZt57xW7du0K+m7A+PHj
1fKcnJzCwkL1Q5cuXdrMt+8/1H/79u2ajwMAQAvUvY+6t03n1L3agNxcSUkx
vsDeWrUkIUG+/W17697rlZoaKS9Hh1pfn8uc+dQ9dU/dU/d2D4MxRP/+/dt8
TO8v9AEDBgRe+dChQ0HfDRg+fLhavmfPnqamJv+37AsKClouVaXvn3zv8OHD
9v0iAOA2qHsfdW+bzqn7hgZ5/335r/+Sr33tc371q8Z/zzrLOPTdvrV7PMa8
97m56FCrqnZHYNZi6j5cqHvqnrqn7iNNRkaGekDS0tL8n7ar//qnxG+ZBK+m
piYvLy8/P99/ac+ePdWlS5YsabkH/0x6Kur9X6t/7bXX/N/lb/nfzQcffKCW
DBo0qM17AgAAOlD3PureNp1T9zU1smSJnHde27/8Bw+WuDh7P7tXaV9SIn37
ahUK2mpOTlZpaand4wx1Hy5aO5e6p+6p+xCh7ltz4sSJXr16+WfOV0U/atQo
9XPfvn1bDsvfvn27WpKUlOT/Z3Z2tv+b+5MmTVq0aNG0adPi4uLUP1etWuW/
Qnl5uf8OR4wY8d57773yyiv+b+Jv3bo1Or8hALRTqHsfdW+bzqn7Eyfkvffk
V7+S2trPWVkp69bJOefYWPfqd9+3zzhs4Kc/RYf61lsz9+/fb/c4Q92HC3VP
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
fCFTJJrNnj1bP2g5JCREfRUgydQnT61OnToSrFzetHHjRnms0aNH6weWx8bG
9uzZU7MPXO8wrprKy9WqVZN/y5UrJ22+ePFikn00vDNnzuiz6elenqn+C3VY
WFjFihU1++/mMn9yTU1uxRo9//zzmokj80221qM1oNJ9lixZ1LEWffv23bx5
szrKQpapn3YRHR2tBp376quvHFrVoEEDmf7BBx+4b7xLXqR78fTTTx8/flxN
lJe3mvjpp58m9ygS/JNL97q9e/eqedwcmX/hwgU1z7fffqtPlHfBd99917p1
6+SuibBz5065i/NhAwAAeI10DwDpjQ/TfcaMGdUP5eHh4fLfIkWKqNwn4Uv9
6KxmjomJyZ49u0wZN26cw3ImT54s0yUJWn1WSUnSEmmPJO7kZnDO2nfu3FE/
kS9cuNA4XeVl8eSTT16/fj25Bap0X6hQoYiICOP0LVu2qLu7GTnN5+n+vq1N
8mQNqHSvuP/uZcyYMTJP5cqVjRNPnDih4vmlS5fcN94lL9J9q1atHJ6dhH3N
1WEJOl+l+8OHD6t5li1bdp8nZpCYmCjvF1l75u8CAIB7pHsASG98mO71/C4h
Uf5bpUoV9V+JS+oXYfXfXbt2qf86Z081pwQ075/PXzZu3CiLklh63zmPHz++
fPny8ePH9+rVS2XbDz/80DiDysuyotxfK83NmPlFixaVmz7++OPk7uvzdH/f
1hrddw3o6d5NOlbUKeSa4XB9MWTIEM3p1AzzvEj3ixYtcphTHZbQtm3b5B7F
V+le1KpVS7MfmiJPecmSJdHR0W5m1snMHTp0MDMnAABmkO4BIL1J+XQ/e/Zs
9UGTyYn+GWR9bL0FCxZIvHIzWv6ZM2f69OlTuHBhzcmoUaOMc6q8/Nprr7l/
RDfpXsW9/v37J3dfn6f7+7Y2yZM1oKf7s2fP3nex6rk0b95c/Tc+Pr5AgQIy
Zf369fe9r0s+SfeqVa1bt07uUXyY7mVRXbt2VeNIaPYh9dq0abNw4UL3r2p5
edSpU8fNDAAAeIR0DwDpTcqne3XSvXgzGX379rX+vKZNm+bmGICNGzfmzZtX
sx8n0KtXr+XLlx85ckSarU4Pd5nue/bs6f4R3aT7ypUry00jRoxI7r4+T/f3
ba1Ha0BP9+Hh4e4Xm2Q/L0OSeIYMGY4ePSr/XbZsmWYfst785fYc+DDdu1nD
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
k4Dz008/BbohpPs0K94g0G35m1y5csmLTTJ+oBsCAB5ITEyU7vTu3bvON927
d09uSkhISPlWJUfa6bK10shU+LkAwK+kKzhw4MDq1asPHTqUqnoqi1Rvlpae
kXLq1KmMGTPK3vLjjz+ePhvgK/Fu+faxpk6dKmvsn//8p28X6wXSfZp08eJF
45Z96KGHatas2a1bt59//jnQTSPdAwhKmzdvlr7rwQcfvHPnjsNNnTp1kpt6
9uyZYo2RXfTdu3e72ad9/vnnpUnS38bFxRmnv/POO+pz4dKlS/5vJoAA27dv
X926dbNkyaLvExYrVmz27NmBbpcPqD5ZdO7cOdBt8bGVK1eqp/bAAw9ERUVZ
X2BERIR8ZJw7dy5QDQiUMmXKaMnbunWrDx+LdA+/0tO97NoVLlw4Q4YM+lbu
0qVLZGRkANtGugcQjPQ9SecjFVW6f+WVV1KsMfnz53fZEp1K92LVqlX6xMTE
xEceeYR0D6QT06ZNy5Qpk3rLS6dRpUoVCWvqv++9916gW2dVv3791HPJmTNn
TExMoJvjS3Fxce3atStduvSECRN8ssCZM2fKiho4cGCgGhAo1atXz/0XPQrp
U+Rj3YePRbqHX+np/siRI/LfqKio3bt3v/TSS2piw4YNA9g20j2AYJR60n1C
QoI6ZtJMuu/atas+cdu2bfonPukeSNvWrVun3uwVKlQ4cOCAmhgdHT1y5Mhs
2bKFhIQEtnkW3bt3r2DBghkyZKhYsaI8xx9++CHQLUrVRo0a5VG6T5Ny5swp
K+H777/30/JJ9/Arh3SvmzJlipr+448/urzjzZs3d+/effnyZZMPdObMmcOH
Dzsc+ekgPj5+//790iT13zx58phJ93fu3JElS2OuXbvm5tFlyff9wlYaIOsh
NDTUo1Ns7tsA+WSRBuzcufPcuXOJiYluFhUVFSWLMv533759sbGx5hsDIOC8
Tvfm+9UbN24cOnRIujX3R0JKp5RcS3Qq3T/88MPGg/Nl104d05VcujffrSky
mzTY5VgEAAIoISGhatWq8k6vUqWKdEEOt973GE55+58/f166gqNHj0q34HIe
6ab27t0rs/mmxQaygyRLvnr1qpt5NmzYIM+uevXqkydPlj86duzoZubo6Ohj
x47t2bPnvmPEyROXvlp67FOnTpnpA03uiCoy28GDB0+ePGlmyWaY77HVcQ7+
SPeevgxk48qGcP+BaH57ecSjdG+mnUn2wCUvAJUvpk+f7j7dexqyvEa6T5OS
S/fy3pd+XqZXq1bN4S5LliwpV66cfgx//vz5x48f79Clz5s376GHHhoxYoTs
Kw4ZMqR06dJq5gceeGDAgAHOGf/KlStt27bVz/Z69NFHFy9eXKhQIed0L/1S
7ty5n3nmGflb9jm7dOny4IMPqntlzJjxyy+/NM4sb3bpptQOqnr0WrVqyfvF
eT1ERET06tVLX5TM+ZDBq6++6l0Ddu3a1bVrV9lt1t87OXLkGDdunHEXV9a8
tLBbt27Dhg1Ta0BWl7Rn+PDh2bJlk/8WLlw4NDTU9fYDkPp4ke7N9Kvi9u3b
n3zySY0aNfQ55Q/p1ozfCopZs2aVKVOmaNGi+hGGsq9i7NOaNm2qz6zSfZs2
bTTDwfklSpQoXry47Hs4p3sz3Zp47LHH5IEkGowdO1YWpeaULk52rZ0TBIBA
Wbp0qXp7Ll++3Mz8slslb+3Vq1fL3/Pnzy9btqzeFRQrVsxh5l9//bVq1arq
CCKRL18+2bdx+M1i7dq1ssC8efM6P1aePHnkJuNB0V9//bVMGTp06KFDh559
9tnMmTOrJUuXtXLlSpcN7t27t8wgjyu7Uqq/kkjoPNvGjRvr1aunPxfpWmVf
dPDgwbKD6jCn3H3QoEHGPjB79uwNGjRwOQS6+R3RJPu+99y5c8uXL6+vMenD
pXOWYG6cTXaPH3IiHy4ul2myx65cubKswwIFCqgTNORfh+Vv2rTJuwYkmXsZ
iIoVK8py7ty5ExIS0rhx46xZs6r55TW2Y8cOh5nNby8vuE/3HrVTLFiwwOFD
UD4WtWTSvZmdAckL0gDZXg6fzqNGjVLTb9y4YfKZagYm74LUL7l0L/773/+q
jsjYA8hOqZpfdh1ffPFF6aPUu7VZs2bG+37++ecysUWLFnXr1lVv5GrVqknv
p+4rr2rjzMePHy9YsKDeP0sPoJ/tpTml+1OnTmn2/CsvaekA1TzSbaqvAtat
W6fPGR4err+bpLU1a9ZU2fkf//jHF198YVxmXFzcE088oXq8Hj16vPbaaypW
q7eqMJ50Zr4B6ugmpWTJktILyXpQ/33rrbf02fbs2aPe79pfv5QJ9UW6vmfe
vn1789sUQGB5mu5N9qvS5xQuXFjNKd2pzFalShXp0OS/0mUZB0GaOXOm2t3S
T6S9b7qfMWOG9tfB+Tt37pS/3377bUno2t/TvcluTaheXXa31OeI7MaoEQCE
7Bq5P44LQIoZMWKEejub/Jn41Vdflfkl16ujizV7sJLdLck4tWvXNs45evRo
vb96+umn9V2ySpUq/fnnn/psP//8s2YfhtT5sVT/JtlQn6J2L6UnVJ2b/KHv
NEoz5s2b57AEiUWq51Gxq1SpUvK3BCiH2SQCq4wmHVq7du0kf0mXpX67yZs3
r8MhUjKDeiLyfGVtNGnSRO0Bio8++sg4p/kd0ST7T9uyQDWzdOmyXypPTa0B
2Ts1foXrEK7VXV544QXnFWi+x5b4b1yaR+neTQOSTL8Mkv761Hj//ffl0eVD
UGZQnyAiT548xq+FPdpeXnCf7s23UwwYMEDdJJu+Ro0aBQoU0LeIc7o3uTMg
uxbqZ9PGjRvrb1t5hatXi/PL2w3NwPy9kMq5Sff6eZd//PGHmiJ9keqUZs+e
rb+cQkJCVAiVrl6/r+p+RebMmadPn64ORImMjJT3tXozGh/oueee0+zD9evf
u165ckV6CbUEl+le3iPqq62+ffvKjrT6UuvMmTPGbwJbtWqlHmv9+vVqyvXr
1+UNIhOlTzh58qQ+pxpCRN7LJ06cUFNCQ0Ola5Vnum/fPofVYr4BGzdulDUj
3Zp+xL7c2rNnT82+r3v69Gk1UaV7IR2UrCj1pYqQDiEhIWHYsGHy9yOPPJLs
JgSQyujpXvb0ZvydfLhrf0/35vtV0aBBg4YNG0rfon+TL0lc/SjTo0cP55bs
3btXteS+R+Zv2LChbNmy6uD8wYMHa/YhgtVumDHdm+zWkv7a/xG9e/fWH33C
hAlq4meffebRKgXgJ2qopRYtWpicX6X7atWqyb+yIyQdlzqhUroO40/MkjVU
MOncubN+9ZDFixerH3reeOMNfU4v0r3aL5LuSE0MCwtT59QXK1bM4ZtD2QOU
6dIdqd5VXQqkQ4cODg/05ptvavYfVow/6589e/b111+fO3eucc4LFy6oBnz7
7bf6RNlb++6771q3bu2QK83viArpw1VHOmLECH1nUvaHZQM1adLEzXVPVH50
Ga7N99g69Yng0ZH5bhpg/mWQZPjUkLBw/PhxNVEitpr46aef6nOa317eMZPu
zbRzy5Yt6ld4WTl66peXivrUdkj3Hu0M7Nq1S32bMXny5CT78STq23iXewJu
kO7TJDfpXr9J/R4dExOj3ozjxo1zmFOdyiS7nfoU1f1KBDb2yUn246/UMiMi
ItQU6XnUlDlz5jgsVn0f6DLdKw4vdSN973rRokXG6fL6L1KkiMPetfqurF+/
fsY5VTc7cuRIhyWbbIDi/PuUdG7qeS1cuFBNUeleej91NFF4eLj8Vxqp+nZZ
gZr9S1T3DwQg9dD7n+To/Y9H/WqSqy5FfPDBBzJn+fLlnW8yn+5l51P9wrJm
zRqJ+SVLlpSb1LD5Dsf+menWkv7a/3F+Xs8++6zzXg2AQKlevbrDLpAElqkG
skdnnF+le/Hkk09KVk1usQ0bNpR5Kleu7BBLp02bpu6u/57iRbovVKiQvhup
SIxSi3XYaZT8qBkuQqr2qbJly+ZwuVL1c3zNmjXve1784cOH1QMtW7bM/Zwe
7YhKClYzjxkzxnlR7g+rcBOuk0z32DrfpnvzL4Okvz41WrVq5dBm9cug8WAD
89vLO2bSvZl21q9fX6ZI7nYYzksNbmb8HPR0Z0BMmjRJRa3Q0NBBgwZp9uON
PT1uwbhn4tEdkZq5Sfdnz55VN6lvR3ft2qXZv+tz7sz379+v2b8a1aeo7rdC
hQoOc6roKg4dOqSmqBendHTOX0u6HDNfD9cOxxQ5+Pjjj2We4sWLO3eJ6myX
cuXK6VPat28vU15++WXjbOos1L59+zrc3WQDHMhn5fLly8ePH9+rVy/VqX74
4YfqJpXu9fwuva5mH9xG/VetW1nt5h8LQGDpO3WyY9n379S36/pOnUf9qtHt
27dlb/bLL78cPHjwM888oyXzHaBH6f7kyZOa/VIp8u+IESOSkkn3OjfdWtJf
+z8Ou7VC2qzZD9ZKrj0AUpJK98a9HXnbGvf58+TJY5xfpXuJPy5/+dWpPuGr
r75ymB4bG6tOftSjkxfp3nn3UhQtWlRuktykT7l79646EF0/NFSmqBGbHbom
aYP6ibl06dKjRo06evSom6dWq1Ytzf4bq+w9LlmyxOVZ/Eke7oiq0xzy58/v
0ajOivt0r3PfY+t8m+7NvwySkv/UUAcbtG3bVp/i0fbygpl0f992ynZXy3H4
fizJ1Zj5XuwMyPKbNm2q2U9qlrUh7yAJFJ4+U9J9muQm3es7qOp0ztmzZ6v/
ZnKivzD0g0WT635v3ryp5tSPeO/evbv897nnnnNum/t0f/bsWTfP67XXXpN5
mjRp4nzTDz/8oNl/K9c7ZPUdWubMmfWvgi9fvqyOePn6668d7m6yAcqZM2f6
9OmjnyprJN2Rmod0D6Qx5s+796hfVRYuXNimTRt9DFL3H80epXv5+6mnnlLz
q50ll+neTLeWlPz+z5o1a9TM5of9AeA/HTp0kPdjy5Yt9SmyQzjaTmKglky6
l70sN8vUfx7atm2b861qZKGhQ4eq//oq3avQ/c477+hT9ONFJQS1+UuOHDk0
+7mQDneXvc2SJUvqvVnFihXfe+89h+HsFNmV7dq1qz5GXPbs2WWx0jM79NUe
7Yiqtepy5vtyn+5N9tg6H6Z7j14GScl/aqjlt27d2jjR/Pbygnfp3qGdYWFh
qm3O15R0Tvde7Awk2U/cUE0V48eP9+KZGl8PXtwdqZObdP/JJ59o9kM+1LeO
6nwQ8WYyjF/83jfdS2hVU7p06aIlc8KX+3QfHh7u5nmpLw1c9pOyQM0++op+
+EpkZGSZMmVkYoECBeS9+e6776oxWMqXL3/79m2Hu5tsQJL9pIO8efNq9i/c
5CNy+fLlspIlvDdo0EAj3QNpl/l071G/GhMT07lzZ7VPWL9+fdk9kH2GCxcu
6Oc3ObfE03Svuv3q1aurm5zTvcluLSn5/Z9ly5Zp9p+9uNYnkBqo4X1cjqqn
OhCX6V4/1t0lPdds377d+VZ1MY7Bgwer//oq3asrPQ0fPlyfon5LdSlr1qzO
O3jx8fErV66Ue+lZWPa+pB92eaU/2RucNGlSvXr1VCM1++/IW7Zs0WfwaEdU
nSJq/I7FPPfn3ZvssXU+TPcevQyS7peanZfv0fbyiJV0r7fzjz/+UK3atWuX
w5zO6d6jnQHd2rVr9dH15Y3sxTM1vim8uDtSp+TSvbxl1Hdi0nGpKbIbqeY0
c6lK8+le+mHNEGaNrKR7NXaT9LRmboqLi1Mj+xnJ29Pld4Dm071agR06dHA4
vYt0D6Rt5tO9R/3qN998o9mvrKEP0KRs2rQpuY/mQ4cOqZvcXA/amO6vXLnS
uHFjfUQR53RvsltLSn7/Z/z48Zr9PMT7Pl8AKUA/Dt/5gm5ep/uEhAR1ErHz
8ESSvFR00m/65ZdfVAOcv/Ezn+5lr1X9KL9gwQJ9ihq77KOPPtpjsGPHDnXs
03fffZdc+xMTE2W2tm3bqoZ98MEHbp7s9evXZ8yYoXo86Z/1vtGjHdEPP/xQ
phQtWtSLC9y7Sffme2ydetYus6SnDfDoZZDkebrXebS9zPBJupfXszrAw3mI
Bud079HOgCIfzWoEfjUOucR8eSuZvK/OGHw8vS9SLZfpXt4m6rtcoV9m9Pbt
2+pgdTPnm5tP92p/VciHiHHOiIgIdbUL79L9//73P5efVhLkVV9nvMacGrCi
f//+sgMsu7jylN1cLtNkA/QRBhxOTJMOTZ3jRroH0irz6d6jflX9DuV8TWF1
kKfLj2bpSNVNLi/CqxjTvQOHdG++W0tKZv9HeuASJUporsasBhAQ8v6VvTV5
Vz7xxBMOP2d7ne5FnTp1NPvIew7T1cgbxt3OgwcPqinyh3HOr776Sk03k+71
nz5DQ0PVFPWlgcsTmVu2bCk3tWnTRp+S3Fhkanx7h9/fXc6sD4unH4Xu0Y6o
fhKBccR1nfux45ILvx712Dr5MNKcLsHmnpv0bf5lkORJuvdoe3nBJ+k+6a9v
VxzOKRBDhgzR/p7uPdoZSLInNfW7ZIMGDeTvfv36afarM9z3l0cHmoFHd0Rq
5pDupQ/87bffmjdvriYau76kv35z0exDehq/Yj127Ji8pI3jiphP9/IOVdcJ
rVatmn69Zunh1TVJNW/TvbzU1TeTRYsW1Xdr5bHUlV/kHaQP65f01/62w4U5
kmOyAdeuXVOzGa/NceDAAXU9LI10D6RdHl3v3ny/qj6+K1eurO/YxMfHy730
8/JcNkYNzix7F8aFG895N5/uzXdrSYbr3a9evVpNkc7t5Zdf1uyH5TvsxgMI
oFWrVqm3sOyJ6XtH0vkMHDhQ8zbdSyRXxwz37dtXH1p8zZo1alC7jh076nPK
nqG6YH3btm3VnNJXqHHnFOd0L0t+88039X5McrRarDEvqwPjn332Wee2qWiZ
JUsW1UXLv4899ljDhg13795tnO3q1atqsb1799YnfvHFF7ly5ZJ+22EwvREj
RqjWXr58WU3xaEdUZpZMqtlPGZg+fbo+0LT026NHj5ZmGMeWd5BcuPaox9bN
mjVLs5//ZTxbXD5rHH79N9OAJE9eBkmmU7NH28s7vkr36tdDWQOyTdWUu3fv
/vvf/1br3+HaMeZ3BvSZH3roIXWYcUxMjBrHoHbt2vIQ5p+pZmD+Xkjl9HT/
8MMPq3NzFHkp9u/f3+G1JL2N+sJTFC5cuFWrVvLGrF69ujryRH/pJnmS7sWc
OXPUez9btmx169ZV3yFnzpxZvUm9S/dJ9hNe1OnzsicpjWzcuLFaoJg4caJx
Tv34AVkJ9erVa2Ynz65r164yp8N3nuYb0KhRI7UmpXuXXfpy5crJ3/K8ypYt
q5HugbTLo3Rvvl/duHGjmii7Fp07d37uuefUHoi68HRyH81q3GbNPqxuO7vK
lStLZ6vvPJhP90mmu7UkwxWBNftx+HJHdZSskH0bz1cqAD+SsKAittoXkl5C
HT8pmjdvbpzTZLpP+ivsaPZBjWS3SnZs1M7eo48+ql9+XVHXINbsl7p76qmn
pEvR7D8fq5+YXV7vXrMPZ/fMM8/IYvWOUR/uWIKkukq4y5/CJYCru6hr1m/f
vl2Nty/NK1myZIsWLfr16ye9tOqyZDnG35e7d++unkWOHDmefPJJ2VHs06eP
+oVavP7668YHMr8jKi5cuFC8eHF1qzwXmVmSmtoKsouomupmPbsM1+Z7bJ3s
+aveW9osCVo+a6Ql8lnj8lJ9921AkicvA5Op2aPtZZ685h/4i2qwvEj0KRs2
bPC0nUn2L2fKly+vlla6dGnZCupTW/2s6ZDuze8MbNu2TTXS+Ko4fvy4WrhH
YyZoBubvhVROujjjlpVuR+Jt3759jS9jB/PnzzcOUylKlSolrzrjVwFq7Ec3
6f7w4cPG6atWrVI/MKl3U82aNfft26d+5dF/91HOnDmjZtO/HXVD+o0uXboY
B5yUJhk/JhTZA5dORkuGdK3G0T7NN+Dq1avqsnqKvOlefPHFEydOqNNt9E5V
5XeHdK+PakW6B4KOfgKdmXSvmOlX1Wxqr0CRXTXZd5VdAjVKicvGyK2y3672
lhXZI6pRo0ZYWJiaQXVT+klYRirdG68rbbJbS/pr/2fKlCmyO6cP+5MvX755
8+aZXpEAUs7WrVv1ZK06CsmAkqYdzgTv1q2bZvrn0WXLlhn3r7JkySJBzHk4
u8jISOlJ9Nlkh3DIkCF3795VFyxW12VWVLqvWrWq/KF/YSj7jRKLjHtl69ev
V08hubOY1aXJX3rpJfXfmJiYadOmPf744w5dpSxWv8aT7sCBA3JHfa9VkTg2
btw45/HcTO6IKrIHOHLkSPW9hCLtadKkye+//+5mJavDvJ2vApDkSY9tdPTo
Uf33fUVW9dixY71ogGLyZaBWaXKp2bh8j7aXSeobj+QYN5n5dibZg4+EdONX
Z0OHDlVD4kjYcW7GfXcG5H2hVmbnzp0d7rtw4UJ1F5df17tkfCCTd0Eadv36
9b179+7cuVNet75a5tmzZ7dv3y6dvK8WqMTHx0tXvGnTJpdLlq5Y+gf5aJg4
caIkd0nT++xWr149efJk9X408x11ci5duiS7zdIA/TgrAHDJTL8aFxd3+PBh
2dMwhu77knvJkn/77Tfp4pzPQvWUmW5NpfvFixcn2U8E2LFjx8mTJy0+LgB/
U7tMu3fvdg5fXpPcvWHDhtDQUPeDmUsUlT5KP3HeJZXuK1asmGT/6vLIkSPS
s/mwqdLC48ePh4SESDd738WqHltmDg8Pd7+P535H1NnFixc3btx48OBBj46y
To53O6IXLlzYunWrbJFTp075ZA/W5MvAIx5trwCSbC7rXzaoyTXpj5DlEuke
aZIa9qR+/foub1XfeToPYwUAcCO5YxcBwGturogHwFOke6RJ6qqjZcqUMQ4z
pezatUudIcWhpADgEdI9AJ8j3QM+RLpHmnT9+nW1F1q8ePGRI0d+9913y5Yt
++STT1q3bq0Oy+/Ro4cXlx8FgPSMdA/A50j3gA+R7pFWHTt2rE2bNjly5HAY
Q6NGjRpz584l2gOAp5544ol8+fL9+OOPgW4IgLRj0aJF0rHUrl070A0B0gLS
PdK22NjYDRs2LFiwYOHChdu3bzdeBAoAAAAA0gzSPQAAAAAAwY50DwAAAABA
sCPdAwAAAAAQ7Ej3AAAAAAAEO9I9AAAAAADBjnQPAAAAAECwI90DAAAAABDs
SPcAAAAAAAQ70j0AAAAAAMGOdA8AAAAAQLAj3QMAAACAe6dPn543b96KFSsC
3RC4Jhto8eLFt27dCnRDAol0DwAAAKRVd+/ePXDgwOrVqw8dOpSQkBDo5qS0
6OhoeeLy9E+ePJmYmGhlUZ9//rkkpgoVKviqbXDPo2136tSpjBkzygZ6/PHH
U6Z5qRPpHgAAAEh79u3bV7du3SxZsuh7+8WKFZs9e3ag25VCIiIi3n777UyZ
MulPP1euXC+99NLFixe9WyDpPsV4se1Wrlyp5nzggQeioqJSsrWpCukeAAAA
SGOmTZumh6P8+fNXqVJFUo/673vvvRfo1vldTExMjRo11PN98MEHq1WrlidP
HvVf+WP9+vVeLJN0nzK823ZxcXHt2rUrXbr0hAkTUrjBqQrpHgAAAEhL1q1b
p3bvJYoeOHBATYyOjh45cmS2bNlCQkIC2zyv7d69u2fPns7Tf/zxxxEjRhin
TJw4UZ5+pkyZvv3229u3b6uJsipq165dsGDB8PBwLx6ddK+Y3wre8ce2Sz9I
9wAAAECakZCQULVqVdm3r1Klys2bNx1ujYyMdH/3xMTE8+fP79y58+jRo/fu
3XM5T1RU1N69e2U237TYIDY2VpZ89epVl7euWbPmn//8p/P0mTNnvvjii8Yp
rVq1kjXQsWNHhzll5fjqyPyYmBhp6rVr19zfKz4+/siRI6GhofKH+ce6c+fO
4cOHJUe7Wf6ZM2f2798vzTC/WDPcb4IkT7aCd/yx7bwm7yDZCpcvX07hx/Ua
6R4AAABIM5YuXar27ZcvX25m/n79+j300EOrV6+Wv+fPn1+2bFnjefoOM//6
669Vq1ZVw5eJfPnyDR8+XPKgcZ61a9fKAvPmzev8WHny5JGbNm/erE/5+uuv
ZcrQoUMPHTr07LPPZs6cWS25RIkSK1eu1Gf77bff5s2bN3DgwEceeWSeky5d
ukjelD+k/SpEN2/eXBZSv35998/do6aqdC9PX6J6o0aN9BMfSpYs+dNPPzkv
ISIiolevXg8++KB+PvhDBq+++qo+57lz53Lnzv3MM8/I35cuXZKno99LVvWX
X35pXOytW7dkk+XKlUtfbK1atSSB+nsTJHm+FbxjctuJQoUKPeSkU6dOznNG
RUU5z2l09OhRh7ssWbKkXLlyGTJk0E9vGT9+fHLfd6UepHsAAAAgzRgxYoSK
nCaHiJeYKfNLIps6daoKBZJoihcvnjVr1tq1axvnHD16tJohe/bsTz/9tMyj
/lupUqU///xTn+3nn39WZ0w7P9Y//vEPuenXX3/Vp6jIXLhwYRWW5Q+Jz2qI
AGmGREU12wcffNC0adPHH39cHrqpk7Jly+bLl0/9rS6IJvOrtvXu3dvYNgde
NFWogQqTa6oSFxf3xBNPyE05cuTo0aPHa6+9li1bNnX3snbG0Q9OnTol00uX
Li3Rvnz58mo2ye+SXuWPdevW6XOGh4frq71MmTI1a9ZUjZHWfvHFF37dBF5s
heRIlB43blxyt5rcdklO6V7d64UXXnCeMyYmRuK5Q6LXv0KRZjscI/HKK6/o
K/nFF1+sVauW+karWbNmbtqTGpDuAQAAgDTjpZdekh37Fi1amJxfpftq1arJ
v+XKlZs9e7Y6/lny6ZkzZ/TZduzYoQJO586d79y5oyYuXrxYgp5MfOONN/Q5
vYvMjzzyyMaNG9XEsLCwihUravaDB6QZ+szmjwmXFqoliJw5c/bv3//kyZPO
d/RfU6VJ6qFPnDihpoSGhkrAl8Xu27fP4bFUupecrn4s7tu37+bNm9XPxLIJ
jIdGqKPWJY3qg8tdv35dIqdMzJo1q/4c/fe8knxxZP6mTZvkyQ4YMMDlrSa3
nTNZYHLp3llCQkK7du1kftko27dvN970xRdfqC9M5L2gf0UWEhKSO3du9T2Y
meUHCukeAAAASDOqV68uO/b9+vXTpxw/fnyqgaQ54/wq3Ysnn3xSomJyi23Y
sKHMU7lyZYlFxunTpk1Td9djrBfRslChQhEREcY5t2zZoha7YsUKfaJHufLG
jRtdunTRTyKQ1Ny6desdO3YY5/FfU9WPv8atIHr06CETR44c6fBYKt0rbsKj
RH41z6JFi4zTo6OjixQpItPlQf39vJJ8dN69LCRz5swDBw50eauZbefMo3T/
9ttvqwjvcPZBTEyM+sLK+eiCyZMny/QGDRqYWX6gkO4BAACANEOl+759++pT
JAwa9/nz5MljnF+l+5w5c54+fdrNYtWRz1999ZXD9NjYWHXM+ffff6+meBEt
XQ5EX7RoUblpypQp+hQvcuXx48dlVai8pkii1L+g8G1TP/74Y31K+/btZcrL
L79snK1NmzYOm0bR0/1bb73l8lkosnyZp3jx4s7nXIwdO1azH3rhj+dl3ARJ
vhtVb/Xq1RLwBw0alNwM7redM/PpXg3LL2bNmuVw065duzT7aAbO33Tt379f
bipYsOB9lx9ApHsAAAAgzejQoYPs2Lds2VKfcuTIkdF2vXr1Si7dv/baa26W
efbsWZUXtm3b5nyrGqJ/6NCh6r++ipa1atWSm9555x19ite58saNGx999FG+
fPnUs5g+fbo/mtq/f399iiRimSLpVf9B/PLly+pE76+//trh7nq6l/Xs5lnI
NpJ5mjRp4nzTDz/8oNmH4IuOjvb58zJugiTTWyHBhJUrV0ojBw8e7OZZJ7ft
nJlM9wsWLFBj5TkfRCFmz56tHiiTEz01p+ax9Uj3AAAAQJoxbNgwLZlR9fbu
3Ztcund5BXNdWFiYygsOZygrkvXkJj2j+SpaVqlSRW4aPny4PsXir8YStCtV
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
R7oHAAAAACDYke4BAAAAAAh2pHsAAAAAAIId6R4AAAAAgGBHugcAAAAAINiR
7gEAAAAACHakewAAAAAAgh3pHgAAAACAYEe6B1LAvXv37hrExcWdO3du1KhR
Y5EK7N27NyIiwt+vgTcBIHXzdzcIAPA30j3gV4mJsfHxN65evXrZIDw8/H//
+1/GjFr+/JmpgNc338w5ceKEv18JsudcUXs+HVb7JZqVev99SzVumKV6f5Sl
+s9oS9X7c+9r+AeWanp/S3WumKVqvtpSDf3QUn3az/v6vqOlWtvEUn3Wx1KR
7gEgDSDdA34VETFn69b69es/8+yz9fRq1KhuzZr/LFhQW7YsAxXwOn16561b
t/z9SiDdk+5J96R70j0AwK9I94CIjY2Njo6+4wenTg1fulTLlEkrUOD/Kn9+
LW9erVgx7dgxKvB148aRuLg4f7/GSPeke9I96Z50DwDwK9I9cO/evQULFkya
NGm8Hwwa9FyXLlrz5trmzf9XGzZoc+faAn7LllTg65dffggPD/f3yyzdpvvX
/qtZKYvpfvK/LNWo9y3VoEmW6sOh3tfIMZbqk7ct1Z1sluqFHy2Vxe9k5nbz
vr583VItbWepLH6tQboHgDSAdI90725c3Klhw97r06djr17tfV7t21ds1Eh7
5RUtNvb/KipKO3BAK1tWq1KFCnwtWfLd6dOn/f06I92T7kn3pHvSPQDAr0j3
SOfu3Qs/f75ExYq5P/oox+efZ/d5DR+eqVMn7emntX37/lY7d2orVlCpos6e
3X379m1/v9JI96R70j3pnnQPAPAr0j3SuXv3ws6etZ0C/8UX2pIlvq+pU7W+
fbUaNbSff6ZSaZ07tycqKsrfr7R0m+7LHteslMV0P3Gwper0naWymLZened9
WXxoi3W8rKXq+L2lev1LS2XlS5Vh4yzVlAGWasxIS0W6B4A0gHSPdE6l+/Ll
baOr3b7t+zp/Xtu40bb85s2pVFqrVy87d+6cv19ppHvSPemedE+6BwD4Feke
qVlsbGxYWNg5fzp9etu2bVq5clp4uLwFvKzoaNup9C7r8mVtxw6tZk2tcWMq
ldZPPy0l3ZPuSfeke9K9v7tBAIC/ke6RasXHx4eEhOTKlatYsWIl/OiRYsW0
hx/Wzp3zPt2vW6ctW6YtXeqilizRFi2yjZBPpdo6cWLbzZs3/f16Jt2T7kn3
pHvSPQDAr0j3SLViYm7/9NMnRYtqjRrlaNYsp5+qadMcDRpohQp5me4TE22/
zn/8se38+hkzqKCsI0d+u379ur9fz+k23VsdIc1aun9zlqWyOEialQvWS3Wb
6311n2OpLH6tEVbCUrVdZqksDuRo5QUz8GNLZfHLgbc/sVSkewBIA0j3SLVu
3Tr78cc5evfWDh7MEBbmr/rjjwwhId4fmR8fry1ebBuUr2lTrUsXKihrw4ZV
Fy9e9PfrmXRPuifdk+5J9wAAvyLdI9W6eTNs4kTtnXe0sDDt5k1/VWSkFhqq
lSypHTmi/fmnx3X1qm2w/YoVtV69tNGjqf9fI20HeWo9ewZHbd7886VLl/z9
eibdk+5J96R70j0AwK9I90i1JN1PmqQNHKhdv+79GfH3rXv3tLNntYcesp0g
v2WLx/Xrr9qAAbavIE6e9GMjg65u3dKmT9fGjw+O2r9/Y2RkpL9fz+k23b9v
laV032W+peo701K9O9VSDZjifQ2eaKlmvGWpvu5hqbJGW6p1jS2VlRfr+H9r
VurTfpbK4juNdA8AaQDpHqlWyqT7hATbz/fVq2uDBnmTHUaMsF1SrU+fFE33
0uZr12xD+f3vf6mxli+3Hc/QqpXVX11TrPbs+fXatWv+fj2T7r1Fuifdk+5J
9wAAU0j3SLVSJt1LxcZqL7+s1aun1anjcdWubTuq//XXUzTd372rHT2qDR6s
vfdeaqxu3bT69bXMmQPfEpO1Y8e6q1ev+vv1TLr3FumedE+6J90DAEwh3SPV
SrF0f++e7bD8//5X+/prj2vWLO2VV7SuXbVdu2ztTJk6d06bPNnLgw1SoHr1
sl1EPlMmrX//4KitW9dcuXLF369n0r23SPeke9I96R4AYArpHqlWiqV7i7/7
f/qp1qmT7Yj006dTqHbt0ho2tKX7Dz8M/EnrziV5uWVLW7p/883gqN9+W82o
emk13XdeYKksXn98SXtLVTHU+3p6m6WyGJAtDidosSxe797Ki7X/dM1KjRtm
qSy+00j3AJAGkO7hP3FxceHh4Se8tW/fxn//2zZmXWpO9/fuadu328bMl7j9
wgspVC1aaBUqaN9+q506ZRsSMLXVyZO27x+GD9cmTQqOOnhwE6Pqke5J96R7
0r2/u0EAgL+R7uEniYmxN29e2rdv39atv3lX69Ytfust7d13U3W6T0jQTpyw
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
IT/WDz/YRhvo3dt2iH5gizHzSfeke9I96Z50DwBpAOk+HSLdp86KjbWN3547
t1ahglapUiDrsce0UqW0Z5+1Ncl/deSINnu2baDCV14JcG3YsOrixYv+ft+R
7kn3pHvSPekeAOBXpPt0iHSfOisx0XbJ+717te3bA1w//qgNHqwVLGg7Pt9/
NW2aNmGC7ed7eSkGtvbuZcx80j3pnnRPuifdA0DQI92nQ6T7VFsJCVpEhO1S
dIGtvXu1KVO0kiW1cePSRUm6j4iI8Pf7Lt2m+xY/a1bKYrp/8QdL9cRuS2Xx
uY963/saNs5Sdf3GUvX5zFINnmipmqy1VHO6e18W15uVLxakXv/SUpHuASAN
IN2nQ6T71FwS8P06dp+Zio3Vjh2zxd6hQ9NF7d69nt/uSfeke9I96d7f3SAA
wN9I9+lQyqT78HDbaOTNm9t+jKaCrkJDbT/fDx6cLmrHjnVXr1719/uOdE+6
J92T7kn3AAC/It2nQymT7i9e1GbNso0R178/FXz19ttar16ys5cu6rffVjNm
vv+q51ealbKY7t/+xFI9vt9S9Z1pqZqv9r76fWqp3plmqb583VLV2m6pOn1n
qd77yPuyeL37IRMsVfc5lop0DwBpAOk+HUqZdB8RoS1bptWsqQ0cSFGpurZv
X3vlyhV/v+9I96R70j3pnnQPAPAr0n06lDLpPjFRu3RJ+/577bPPKCpVV2jo
lhs3bvj7fUe6J92T7kn3pHsAgF+R7tOhlEn3Ujdvalu3aitXUum95s/Xpk7V
xozRPvggNda+fRsYM590T7on3ZPu/d0NAgD8jXSfDqVYuk9M1O7e1eLiqPRe
GzdqQ4ZoTZpoLVqkxvrllx/Cw8P9/b5Lt+m+6RrNSgV2VL0u8y2VxVHOrHwr
YnF4t5cXWiqL6b7bXEvVYKOlsvJ10EuLLNVbMyxVm+WWinQPAGkA6T4dSrF0
TwVjnT+vrV5t+6l99myf1YABWvv22r//bTWp+an27PmVK+KR7kn3pHvSvb+7
QQCAv5Hu0yHSPeWmdu60DZhfooT25JM+q0cftf27cqW2dm1qrPDwPVFRUf5+
35HuSfeke9I96R4A4Fek+3SIdB+MdeuWdviwtm+f32vSJK1PH+2VV3z543iz
Zlq5clrv3to776TG2rp1DWPm+6/et8rSa2/cMEtl8cT5UqcsVfsl3pfF7yU+
HGqpZva1VO2WWior603Kyov12fWalfq6h6Wy+E4j3QNAGkC6T4dI98FYFy9q
332nff213+v5522XgJ81y/Yjvq/q3Xe1IkVsv+A/9lhqrIULvz116pS/33ek
e2+R7kn3pHvSPQDAFNJ9OkS6D8Z67TXb+G+SuyUp+7Vq19Z69tSWLLEdLeCr
+v1327n8ssylS1NjnT6989atW/5+35HuvUW6J92T7kn3AABTSPfpEOk+sHX3
rhYdrd2+rUVFeVA1athOXX/1Va1vX/9WnTq2bxK+/17780+f1ZUr2qlT2p49
qbSuXTsUExPj7/cd6d5bpHvSPemedA8AMIV0nw6R7gNbEienTLGNXOfRT+ql
S9vutXOnduyYf2vSJK1tW61yZe3ZZ31WDRtqzzxjOyogddby5QvDwsL8/b4j
3XvLUrqf/C9LNfwDS5XrT0tlZVy73p9bqoEfW6oPhlsqi/Hc4mCGVl6sFseQ
tDiqnsV32v9j7zzgojj3/f27555z8r9Jzsk9KSflJCc9MT0x1ZjExBKNscXY
E3sBFBXEXojYFbFhVxS7iC2KigW7ItgrFgRBEBClSxPY//uePZfrhWWA/c3s
7ux8n8/z8ROHld3ZGd7w7My8g7oHAAAnAHWvFkVFRbk6Yf/+EWPGoO7tZmio
PMG+QQM511zV/ec/aeNGSk+nkhJtDQ6mNm3or3+lxx83ioGBS65evar1EIG6
txbUPeoedY+6BwAAUCVQ96pQXFx85swZPz+/qXqgb9/vW7eWv/favXONqb8/
1a8vp61bsqQavvuuvEL8xg1KTdXWixcpLIzWrqWgIKOI6+5R96h71D3qHnUP
AABOAOpeFQoLCzdtCurdu4O7e/u+fTs4uK1avdeoEXl7279zncyCAkpLkwGu
7JAhVKsW7dtHR45Uw9q15QcChw7Z4jr0yEgKDzeQKSlncd29s9b94u4sh0xi
+UwSS07htl7HclZfloMns/ScxtKO193/spI4Mm9Yz/xJQ90DAIATgLpXhZyc
zLp1n/Hx+cv06Y/OnOnoenr+uV07HLtX33PnaMwYed+3V15R8qmnqE4deYe7
vLxqOHAgffihtGZNW/jRRwZy48a1sbGxWo8SqHtrQd2j7lH3qHsAAABVAnWv
CtnZGSK7fH1p+XJaudLRHT2aunSRf9o9h53MY8fI01PGe1XqPjmZ8vOr4YQJ
ctr8996j99+HKrt+/RrUPeoedY+6R91rPQwCAADQGtS9Koi6//xz2rGD7t6V
dzpzcMPC5JR6mFVPdUNC5OT2s2ZRdLSS/fvLg+NHj1bvbPk9e+j332nTJtq8
GarsjRuR2dnZWo8SqHtrQd2j7lH3qHsAAABVAnWvCua637tXHmO1e2NWquhK
3BGvUgsL6exZebL9+fNV1d9fToa/di0VFSk5dSp99RUtXSrP9ICO4NWrRzMz
M7UeJVD31sKqex9vll8fZPlZBEvOrHou81l6+7BkzqpXfzfLyYNZcnbWTyOJ
47AJLJk/aah7AABwAlD3qoC6dzJLSuj2bfrpJ2rdmtq2rarffkvffy/rXvmb
b91KnTrJW8DXrQsdwq1bg+Pi4rQeJVD31oK6R92j7lH3AAAAqgTqXhVQ905m
cbE8at+0KXXtSj17VtXGjaWV1v2xYzRpErm5Ue/etlA8Udu21KoVrNBduzYn
JCRoPUqg7q0FdY+6R92j7gEAAFQJ1L0qoO6dzIICmj1bzj24bBkFB1fVYcPo
118rr/vCQrp3z3bTLKSl0YYNFBhIS5ZAy16+fCQjI0PrUQJ1by2sun80m+Xm
5izbr2Y53cN6R41hOXEoy5n9WPZcyDKgG0vOzsrc4gt7smT+pKHuAQDACUDd
qwLq3skU23HaNHk4fufOatySftIk6tiRAgIoMdFRTEiQEwJMnkwzZsjp/qBF
L1w4mJaWpvUogbq3FtQ96h51j7oHAABQJVD3qoC6dzLNde/pKQ98V/1fBQdT
587k7S2P+zuIYi1+/ZX+/Gdq1ozat4eWDQvbkpiYqPUogbq3FtQ96h51j7oH
AABQJVD3qoC6dwRzcuRZ8atWyT+Zrlghj8L37StvcVj1F3DqFM2cSV5erBhR
1+HDqUkT+tOfqFs3eSc+aNEjR0JTUlK0HiVQ99aCukfdo+5R9wAAAKoE6l4V
UPeOYEoKtWgh57UTfzJt2pTefZdcXatX95mZ8vx88a9sM11eVezZU959749/
pIEDadw4aNlTp/beuXNH61HCsHXfcgNxZNb9NwdYMm/7/uURlpwb1u9qwNLd
n2XnQJZtglj+NponA+aKM+cD9JrKEnUPAABOAOpeFVD3jmBoqLzTnMhY/iHv
kSPlve369Kle3YutHx9PISG0bZujuGULLVxIP/xAQ4fa/0QCh/XEibDU1FSt
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
87H4iRMnllk+efJksfzSpUtllpeUlIwcOVJ8KSAgwPw5cGFh4fz5880T40dE
RJR5fHFx8aJFi8SXPDw8cFo+AMD2oO5VQXd1bwNP23zOfFUsKpKfe3h40K+/
KtmyJX37LTVoYNPXtn49ffop/f3v9NxzUE1XrlxW/niN6qDuUfeoe9Q96t7u
mOt+0qRJZZaLJWL55cuXy/+Tixcvmo/UDxkyxN/fX/zp6uoq/hRLzp49++Aj
CwoK5syZI5b369fPBv9bAQCA8qDuVQF1X16d1n1qKh06RF9/TTNnKunjQx06
0Ntv07lztlPsYIGBNH8+LVgA1TQq6vCD0ytpBOoedY+6R92j7u1ObGysWNPR
o0eXWf7bb7+J5fHx8Rb/lah+8QBz4w8dOvT06dPmc+8fvO4+Kytr4sSJ5ov6
Y2JiNFwHAACoGNS9KqDuy6vTuk9MpO3b6d13ac0aJefNIzc3evVVOT8h1LuJ
iafu3bun9Shh2Lq3b1/Pd2H522iWzEpd8av1Muue89TCVR1YzurLkvnsnPdt
Tm+WR2ux3FOPpe7qfsuWLUu//VZBi2skGlws79+/f0lJyYPLzVPci68qPGNu
bm5GRob5vwcPHiweX/rXlJQU8z3uR44caYNpWgEAoCJQ96qAui+vfut+xw6q
XZuSk5WMiaHgYPrsM3ktPNS7e/duvXXrltajBOoedY+6R92j7lVE1L34Lbbk
Pyp0WPv2Fv/h0KFDyxymF/8tlgwbNszi49euXbtw4cIHb5ZnnppP5Lz5r2lp
aeYT9SdPnpyTk6PeKgIAQLVB3asC6r68Z87QtGnUt69N7wjP98oV2rSJvvmm
krUTGzo8nH74gb7/nuV330H7u3VrcFxcnNajBOoedY+6R92j7lVE1L1I+OI/
VGhFdR8cHCxW1t/f3xzs4s9Zs2aJJRs2bDA/4N69e9HR0bGxsea/TpgwQXz1
2LFj5r/m5uaaz8APDQ01L5k6dar5Wv6CggJNVxkAACoFda8KqPvyXrsmj92/
/LK8P7uObNNGNvtnn1WydsXF8qZ4p0/LGwtabWQk+frS5MnQzp45s+/u3bta
jxKoe9Q96h51j7pXEXPdF/1nhVZU91lZWV5eXuaZ80XRm+N98ODBpaflnzt3
zjzpvfmvkZGR4q99+vRZtWrVunXrzGfgjx071tzyV65cMc+f7+7uPqAcSUlJ
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
nG9wW7Wipk3tf7I9zsx3HFH3qHvUPepeC0Tdr21LCqLu1QJ17zRa3KbAyUDd
m1D3kG1AANWvTzVr0hdfQP25adPaGzduaD3OoO5R96h71D3qXkVE3a9pRwqi
7tUCde80WtymwMlA3ZtQ95BtWhqdOiXPzD96FOrPlJSzeXl5Wo8zqHvUPeoe
dY+6VxFR96vbk4Koe7VA3TuNFrcpcDJQ9ybUPWR7/z4lJVFcXPW8cUMTY2Mp
IoIOHoRVNSnpdG5urtbjjGHrfsog4sis+w6rWDJv+957DkvOU5f8B8u+s1gy
pxMcNYbl8o4sOXU/fjhxVD7PvFInD2apu9/2Rd2v6kAK9uuJulcH1L3TaHGb
AicDdW9C3UM1LCqSjV91CwspI0Me9Ffdmzflle//+Ac9/zyskitXLouOjtZ6
nEHdo+5R96h71L2KiLpf8SspiLpXC9S902hxmwInA3VvQt1Dm1tSQjk5dOkS
XbigvpGRcgaAxx6jF16AVRJ1r6moe9Q96h51rwWi7pU3JepeLVD3TqPFbVqe
4uLiCxcuLF26dNKkScOGDZswYcLy5csPHDhQVFRU0T9JS0ubPXv23r17y3/p
ypUrQUFBfn5+4ltNmzZN/Pf58+cVnn3Xrl3+/v42uJlRVZ6rogfcvn1bDEGL
Fy9esGDB5s2bbTA5c9VB3ZtQ99DmirTfuZP++781ORL97LP08MPUpw+dOwer
5N275/Pz87UeZwxb95xW+hesup8wjOVXh1j+vJ7l7vrWG1WDJfOO81O9WA7w
Y+njzZKzsw6dSBy3NGXJ/EnTY90v60QK9kXdqwTq3mm0uE3LIDpdRH0vS4wb
Ny4pKan8PykoKBBfEg8IDAx8cHlJScmGDRssfqv169cXFxeX/1bHjx83P+Du
3bvW7KzVodLnqugBBw4ccHNze3B1XFxctm3bpvULriKoexPqHtrczEzavJme
eYZ++EF9v/+ennuOOnWiTZtglbxx43h2drbW4wzq3lpQ96h71D3q3gKi7gM7
k4Koe7VA3TuNFrfpg+Tl5Q0dOtRcrCtWrDh9+nRycvK1a9dEuvbp00csFF8t
cwQ/NTV16tSp5n9Spu6vXLliXr548eLLly8nJSWJJeIx5oV79ux58MElJSX7
9+83P4vWdV/pcyk8IDEx0Zz2fn5+ERERp06dmj17tvlhYu20e81VB3VvQt1D
m3v7Ni1dSr/8Ii+9V92kJGrRgl57jd5+G1bJdetWxcTEaD3OoO6tBXWPukfd
o+4tIOp+SRdSEHWvFqh7p9HiNn2QlStXii/17t07KiqqzJcSEhLEcvHV8PDw
0oVhYWHu7u6lh7DL1P26devEQh8fHxHLDy43nxvg6+tbuuT27dvirw8eDdeu
7it9LuUHiJFHLBkwYEDppxzFxcXDhw8XC9euXavRa64WqHsT6t4wlpRQejod
OmR/t2yh4cOpY0dNVjMvT0ZNmzb000/yOD6s1G3bNtjgginUvbWg7lH3qHvU
vQXE79gB3UjBvr1Q9+qAuncaLW7TUvLy8sxHq7du3WpxT1i1apWbm9uaNWtK
l7i4uIjHi1pfsWJF+bpfsGCBWOjv71/m+1y8eFGMOX5+fqUn54eEhJg/Vdi7
d6/5yLh1dX/t2jXxSiye819Kpc+l/ICgoKDBgweLPx/8J8HBweJhs2fPtuI1
qw7q3oS6N4wFBbRvHz36KD3yiPzTjj78sLzovlUrbdc3I4P274eVizviaSqz
OJh1z7yBOHNyuV4LWO783nrPv8uSWanzXVgyZ2JUnke9Ujk76zRP4sjcasyf
ND3W/eLupCDqXi1Q906jxW1aSmRkpPJx87x/8eAS0fURERGipnfs2FG+7vfv
32++Jl3Er8UL9kvZt2+fqPLU1FTx3+YzBKyr+wkTJoh/u3Tp0jJnC1Truax4
MeazETZu3GjFa1Yd1L0JdW8Y792jlSupTh0aMoTVC3zF/tayJXXooOHKJiVR
SAh1727nNdWFJ06EmcdwTUHdWwtr46LuUfeo+yqix7pf1IMURN2rBereabS4
TUsxH7P28PCwYifZvn17+brPzc2dMmVK6fntQ4cOXbZsWWRkpPJkR5xj9zdv
3jRfKbBq1aqqPL7S56rKiyn9EMMGl3lWBdS9CXVvGDMzafJkGjCA4uMpK8ue
Xr9Oc+dS584aruypU/JDjIceom++gZX4++/r4uLitB5nUPfWgrpH3aPuUfcW
EHW/sCcpiLpXC9S902hxm5Yiith8mv2DCy9durR06dIl/yLgX6xcubL8v7VY
94LCwsKgoCAPD48HL2N3dXUNCQmp6PA6p+5ND5yBEBwcXOmD+XV/8uRJ8+UJ
Zc7VtyM6rXuxq5w9e3b9+vUb1WDu3LFt26LunV9z3Xt5UXKyPEvfjiYl0bJl
9NFH5O+vlYMHyzP/mzSR0/eZFes+dCj17w/LeuRIaEpKitajFureWlh1r3xo
r1Jbr2M5cSjLea7We/V1lr4DWQ70Zcn8UOXKGyw5O+uQScRxVQeWzJ80Pda9
8sdE7qh7lUDdO4e9/i/lN7QIK7F80KBBDy7cu3dvmX8ogrf8v62o7s0UFxdH
R0eLn1lfX1+R9ubvM3/+fIsPrjSoL168GKGIeY47gXjGir5JFZ9L+QH79+83
p/2sWbPu37+v/Fw2Q6d1f+/evZUrV3bo0KGTGrRs2fDLL1H3zq+57gcNorQ0
+7+SjRvpD3+gGjW08sUX6cMPacaM/33SCxdo61YKDIRlvXLlSEZGhtajFure
WlD3qHvUPereAuL3duWfAtS9WqDunUaL27SUsLAwcxSnp6eXLkxOTj78P2zc
uLFadS+iXiRbmUeK37hE15ufyOJ1kZUW9+jRo3tVmZMnT1b0faryXAoPML8b
goULFxYWFio8i43Rad0nJSXWrfvWpEl/nz79ab4jRz7+44+oe1t75AgdPGhT
d+yg3r3lmfl2r/uiInn4fvVqCg7WStE1HTrIC/zNf12+nJo2lXfKs/uBcgcU
x+41lVkcqHvUPeoedW8RUfdz3UhB1L1aoO6dRovbtJTExERzrkZERFjcE2Ji
Yqpe9+K7ubi4iAfn5OSUeXBJScnAgQPF4w8cOFD+W1Va3CEhIcsVMX9zweTJ
k/Pz8yv6PlV5LosPEK/ffBWDYP369Qoz+NkFndb9zZs3XnmFFi2Sk6StWsV1
+nR5DjPq3pYWFFBQEK1dK/+0mUuXypvQeXjYv+6F9+9TbCxdvqyVYscW3dq7
N/n5SX186KWX5NH8rl1hWQ8c2KY8lasqoO6tBXWPukfdo+4tIOp+Tm9S0N0F
da8OqHun0eI2fZDx48eLL/Xt2/fatWvlv3r+/Pmq131xcfGAAQPEwj179pR5
sPiSp6en+NK5c+fKfyvmdfeJiYni9YvvINal0jsiWVf3y5cv7/WvafQsfjph
d3Ra9wkJN95+myIjKSFBXkPNNDyc3N1R9zYN299/p08+oS5dyMXFdnbrRl99
RX37OkTdl5TIG9Pfu6eV4kdj507q00fOrScUmf/cc1S79r//Ch80ImL37du3
tR61UPfWwqp75uxwdcNYtl/Nckcj62XOLLesE8vBk1lOGMbSjnPTeU0ljrsa
sGT+pOmx7v3dSUHUvVqg7p1Gi9v0QeLi4sw9KwL50KFD5t+ORIyLZA4ODjZ/
qepn5i9dutR8gHvz5s2ZmZnmhaKU/f39xUJ3d3eLJ7Rz6l7k/MiRI8U/9/Hx
KX/OgBXPVf4BFy5cMK/U4cOHi/4v4o2y4jWrjn7r/r33KDpadiK/s8T3wZz5
trSggObMkTd8b95cnj1uM1u3pk8/dZS619rCQrp0SU4yYA5YkfmvvkoNGrBC
yVnFHfE0lVkcqHvUPeoedW8RUfez+pKCqHu1QN07jRa3aRlOnz7dv3//0uvW
BwwYYL7HnBlvb+/z58+X/1cW6z4rK+vBO+J5eHiYj+abPyI4evSoxRfAqXvz
Ff3iRZZ+mKCMFXXv4+NT0TX+M2bMsOI1qw7q3oS6t7n5+TRmDHl60rVrdPu2
7RQb2ttbbmsj1H1JiQz8u3f/7Z07tHmzPEXf7intgKLuNZVZHKh71D3qHnVv
EVH3M/uRgn1Q9yqBuncaLW7T8ty5c2fNmjWlJS7o06fP+PHjd+/eXVRUZPGf
hIaGioctX768zPL79+8HBQWNGDGi9Fu5u7tPnjzZ4pn/ZswfJjw4s1/V2bZt
m3iuqv/bSp+rzAOKi4tL5/xH3asL6r4qFhfL2dsc0JwcWdniF+/0dJu+ISrO
mZ+fTxkZMpl15M6dNHMmjRgBy3r8+B7UvXYyiwN1j7pH3aPuLSLqfkZ/UhB1
rxaoe6fR4jatCFGyaWlp8fHxSUlJ/HPOc3NzY2NjVflWyjjU9PV2AXVvct66
F/mZmmrTg+NV9OZN+Ybrt+5LSkQP0rRp5OWlJ93dqVcv6t4dlhWz6mkqsziY
dT9+OMtPjrNUntC7UvfUs97lHVku7cKy7VqWyqdbV+rJmiw5O+uwCcSRudWY
P2l6rPtpHqQg6l4tUPdOo8VtCpwM1L3JSeu+oIAuXqSTJx3R8HCZmd7edqh7
X19ydaUrV1ifTiQny1kBxT5jyykBoXYePLg9OTlZ61ELdW8tqHvUPeoedW8B
Ufd+A0jBPq6oe3VA3TuNFrcpcDJQ985a95cuyUnp332XPvrI4fzgA3rmGRo2
zNZ1n50tt/LTT8sZ9nr2tN5u3ahWLapZk+bNg87gxYuHrLu8q1qg7q0FdY+6
R92j7i0g6n6qFymIulcL1L3TaHGbAicDde+sdX/sGL39NtWtSz/95HA2a0Y1
atDw4bau+9xc2rhRTpvPvBNf9+7yM4qXX6aJE6EzeOrU3jt37mg9ahm27rsv
Jo7Mul/TjmXH5SyZt33n3Dl9YU+Wxz5n+VkEy/m9WP7ejGXrddarfBl4pQZ2
ZjlyLEvd/bYv6t53ICmIulcL1L3TaHGbAicDde+sdb9lizxCLRo/M9PhTEmh
oUPtcN298N49Wr+e1q6loCDrXbGCWrSgv/1N3mAOOoHbtm2Ij4/XetRC3aPu
Ufeoe9S9ioi6nzyIFOyNulcJ1L3TaHGbAicDde+sdb95M3XqRBcu2P+VlDcv
79+/eNu+7ouK5CceBw+y3LtXXlbw7bfUuTN0BvftC7l165bWoxbqHnWPukfd
o+5VRNT9pCGkIOpeLVD3TqPFbQqcDNS9CXVvc+1Y90KxzxQWck1IkJ8S7NgB
ncH4+BM5OTlaj1qoe9Q96h51j7pXEVH3E4eSgqh7tUDdO40WtylwMlD3JtS9
zS0okFOZ/fgjTZhAM2bo0okT5bwB/ftDZ/DIkdCUlBStRy3D1j2zr5l1H9CN
pfKRwUpd3Z7lb6OtV3ku8Uq9+DbLBrtYuvuz3NycZadl1usynyXzw4F1rVnq
7rd9UfcThpGCqHu1QN07jRa3KXAyUPcm1L3NLSykTZvo73+nF16gl16C0M6u
Xr08Ojpa61ELdY+6R92j7lH3KiLqftxwUrC3G+peHVD3TqPFbQqcDNS9CXVv
c4uLKSqKRoyQt7xn/uoOId8TJ8JSU1O1HrVQ96h71D3qHnWvIqLux44kBVH3
aoG6dxotblPgZKDuTah7O3njBsXEQGh/s7KiCgsLtR61DFv3zHtwM+u+zn6W
v65g+WMIy+ke1tt/BstlnVjWOsryo1MsJw9mydlZB00hjjP7sWT+pOnut31R
92NGkYKoe7VA3TuNFrcpcDJQ9ybHq/uSEnln9jt3WK5YQb/84tB1n5EhZ9Wz
jamplJQENfHmTTpzxv7XzuO6e4eVWRyoe9Q96h51bxFR9z7epKAb6l4l+HVv
hP8D6mIdLW5T4GSg7h2w7ouKKDaWTp6kU6es18+P2rZ16Lq35fuZlkZxcVAT
r1yR087/4Q/0l7/o1aVLl1y9elXrUUsX/9/XQmZxoO5R96h71L1FRN2P/o0U
RN2rBX/f0N3eZQX6Wkd9vVpQLVD3Jser++Rk+u47atyYfvqJWra00i++oIYN
6dw5+6+O3T1/nkaPpm++kW8IVN0GDah2bXr2WdHItHatLo2ODs/MzNR61ELd
WwvqHnWPukfdW0DUvfdoUhB1rxao+6qgr3XU16sF1QJ1b3K8uo+Lo0ceoTff
pI8+opo1rfSVV6hePdS99OBBeZHCX/5C//wnVN8XXpBp/+KLFB4uP0jRo3fv
ns/Pz9d61ELdWwur7ltuYPnlEZZ1w1iOH269XlNZBrdi+dUhlpw7zgvXtmXJ
2VkH+BHHvrNYMn/SdPfbvqj7UWNIQbfeqHt16AWcEXvvVkArUPcmh6z7556j
0FA6dowiIqzU15fatMGZ+dLVq2nwYDlF/6FDUH337pXv8JNPUpMm1Ly5Lg0N
3ZSQkKD1qNULdW8lqHvUPeoedW8BUfcjx5KCqHsAgAFB3Zscr+7j4+Uh0bt3
5fR6Vn8Tx58z32YuXix/yV++3P6vhK/YJYqK5G7vON67R5cuyc+jatSgt97S
pevWrYqJidF61ELdWwvqHnWPukfdW0DU/YhxpCDqHgBgQFD3JtS9s+tMdZ+R
IWexCw93LA8epKAgCg7WqzExEVlZWVqPWoate+YF4My6Z945/aF8lgN9WSrf
y1vZhT1ZTvNkyczzIZNYMm867zfAetsEsfR3Z8nc2/VY98PGk4KuqHsAgPFA
3ZtQ986uM9X9tWvyTPj162nTJqiasbGR2dnZWo9aqHvUPeoedY+6VxFR90Mn
koKoewCAAUHdm1D3zq4z1b2bG332GX3+uf2vVXcmcd096h51j7pH3eux7pX3
BNQ9AMCAoO5NqHtnV/W6v3OHEhMpIcEONmsmrxOvXZvatrWdTZvKGfN+/NFp
FXV/8+ZNrUct1D3qHnWPukfdq4io+8GTSUHUPQDAgKDuTah7Z1fdui8qIk9P
2deffGIHn3uO+vWjM2coO9t2rl1LCxfSggVOa1TU4fT0dK1HLcPWffPNxJFZ
994+LJmz6nUOZMl55QHdWM53YfnOBZaLu7Pk5Lmw+2Lr7bGI5fqfWU4ZxFKP
dT9oCino2gd1DwAwHKh7k/PWfevW8p56WVlGV2zZkSNVq/vCQvmxSZ069PPP
dlDsGK6udPQo3bxpC8WuePEiTZhAU6bQ9OlO67lzB9LS0rQetVD3qHvUPeoe
da8iou6Vb/2AugcAGBDUvRPXfe3atGoVnTpldL29yctLtbrPyaF69ah3bzpx
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
JBgFf+9e2bfPF9mwwXiZBg4kOWfPnvVxcXFW7VSdCdp2rzmynGa717zs+4gO
Wmk0XStdh3iept9rpf1IrfxztVZmNNTK4G5aCRnveTTbfZkordRcoxU7tvsC
V8VF9Nv9mTNnVqxYMXPmTLUsdz4EjoqKWrVq1axZs1auXKn+7pielJS03bn4
+HjN9QQAB9o9yW3ySLsfO1b+/W+pXdv4Qtx1qleXqlWNzwH8vumyTWqqcc2+
y5ctzoEDsmiRMcbjmDEkhxw4sNkH/7mi3dPuafe0e9q9hVTjvjNBXESz3a9d
u/bTTz/95L9CQkLWrFnjYv558+apeTLPP3/+fPOm06dPf+Lc7t27ddYTADKj
3ZPcJo+0e1XbBw2SWbNkwYIcMniwNGliXBTP75su2xw/LvPmGdedtzbvvy/l
y0vz5sZ4+MR1wsJWnjt3zqqdqjO0e9o97Z52T7u3kGr3tyeJi7yv0e5///13
Vc9btmy5fv161c1Xr15tNv0TJ05kO/+ePXvUra1btw4LCzt//vzWrVvV3x3N
/cqVK3NvMnDgQDVD27ZtfXDRFgDBg3ZPcps80u5ffVW++UbWrlXVLIeoqqsa
XKdO/t902WbTJuOJhIbKkCFW5pVXpFgx42ONjz8mOWTz5hVnz561aqfqTNC2
++2VRCea7b7NN1rRLGuaZ/2PbeF5Wo7RSrPvtKK59NDPtKL5oj+/1fPofDKg
8tghrQzpqhU7tvv8yeIiOu1+7NixaoOsWrXKMWXlypVqytSpU7Od//vvv1e3
Llu2zDFlxYoVasrkyZOznT8uLq5Dhw4hISF79uzxeCUB4Ga0e5Lb5JF2X6uW
TJ8uUVGSnJxDVH3u1cvPo+q5yKOPGsMCfPKJsYYW5vnnpXRp6dZNuncnOWTn
zp/Onz9v1U7VGdo97Z52T7un3VtItfu/XBMX8bjdZ2RktGvXTm2QixcvOiZe
vnxZlfHWrVunpaXdfJfRo0er+Tdt2uSYsnPnTjVl+PDh2S5ixIgRLj4rAACP
0e5JbpNH2v1rrxmH5Z85k/OcO3ZIz57SqpVcuJAXU6iQ8UlFx44yYICVeeMN
efpp44n37k1ySHj4utjYWKt2qs7Q7mn3tHvaPe3eQqrd35YiLuJxu4+JiVFb
o1OnTlmmd+7cWU3P9kwu85v9AQMGJCYmqh+vXbs2ePBgNWXhwoU3zxweHq5u
6tixY0JCgmdrCADO0O5JbmO7dh8eLk2bStmyFn85blVKlZJp04y3dI4HIeQq
R47I/PnSrx/JObt3r2PMfNo97Z52T7v39m7QWqrd33pdXOT97h62++PHj5tV
Pct0NUVN/+23326+S0pKyjfffGN29pEjR5qfA6i/mGU/s/T09B49eqhb169f
79nqAYALtHuS26h2P3261K8v1675M7VqudvuVc/t2VNeeMH/RT7blC4tc+YY
X+Jb9QLFx8tvv8nGjfL99/4/6N0W4ch8r2ZBfdGJZrvXKcgqv1TQynfNtDI+
xPN80VMrbb/WyvwGWpn0kVYmfKKVDiM8z9y3tfLcz1rR/FTEju3+T2niIh63
+8OHD6utERoammX6kCFD1PRDhw7dfJdr16798MMPWQbDnzVrVmpqapY5d+3a
pW5S9T8lJcWz1QMAF2j3JLdR7X7aNHn5ZeNV8GNq1pSZM91q92lpsnu3TJok
I0fmxTzwgMyda2W737BBunaVZs3kww+NUfVIjtmwYdmZM2es2qk6Q7un3dPu
afe0ewupdn9LuriIs3Z/9OjRI06cPn36j/+2+8GDB2e5o3mwvZrt5sccN26c
uunzzz9XD56YmKj+7Nevn5qipmf7IJnH6wMAC9HuSW5z8aJxBbdnnpElS/yZ
ypWNQwjcafcqkZHy0085XzvPL1HtfsQIY2z/X3+1JqNHS/v2xmUC2rQhboUr
4tHuafe0e9q9Hdt9vgxxkfeya/fp6ekuLj0/duxYNU9kZKT6e9++fbPcV5V3
Nf3kyZNZpsfGxoaEhLRo0SLzYWAXLlxo06aNmj/zNVni4+NDbsg8Xh8AWIh2
T3Kba9dk61b585+NE8b9mCJF5Lvv3G33eTllyxqfVPzrX/L669ZEbZwuXYxj
FaZNI27l2LGfL1++bNVO1ZmgbfeL6opONNv9tx9qZUtVrfz0ilaGdvE8mg13
WGetzHlHK9831cqo1lrp18fzrPyXVl5brpWR7bViu3avTMlJtveaNm3aVCc2
bNjwx43L06ut0a5du4yMjMx3bNu2rZqubs3ygAcPHsz204Bhw4ap6eHh4Y4p
a9eudTGQPgDoo92T3CYtTU6eNMYiGz7cn6lQwehlAdDuBwwwhgXo00e3xTjy
8MPSoIHx3X27dsStbN26KiYmxqqdqjO0e9o97Z52T7u3i88++yzL1/Tq72pK
9+7db545Ojo6208D+vfvr6YfPnzYMcU8gH/lypXeW3MAQY52T2wa98fMz+M5
fdo4U37pUsvyzDPGtfAqVZKqVYlbWbJk7okTJ6zaqTpDu6fd0+5p97R7u5g3
b57aIKNGjTKvbq/+NIfEX7BggTlDYmLi77//HhkZad7aoUMHdeuyZcscj2CO
nte6devk5GTHxK5du6qJ+/fv9+mTARBMaPfEpgmYdn/lijEswNGjluWbb4xS
07u3ZQcDBHy43j3tnnZPu6fd0+4zu3LlSqdOncyR81WjHzRokPq76uaOw/JV
Q1dT2rdvb/64c+dO88z9ESNGLF68eOLEiSEhIerHjRs3Oh7z2rVr5jw++BcH
QNCi3RObJmDaveW5dMm4RsDmzcTdnD27NykpyaqdqjNB2+41m5pmu19RSyvb
KmtFs+t1G+x5RnTQSv/eWvnhXa2M+1Qrg7tppfFUz7OwnlZeXaWV4R21QrvP
Ii4ubvDgwWZJN2u+OaK+yWz3HTp0cEzZt29f9+7dHQP0de3aVVX+LA+oprdp
0ybLAfwAYCHaPbFp8kK7P3dOGjaUt97KW6lb1xijr2ZN4m6WL19w8xjIlqPd
0+5p97R72r3tJCQkREVFxcfHuzn/5cuX1fyXLl3y6loBgDO0e2LTqAI7dapE
RRlj+Pslycly7Jg8+KA8+qgX88gjxOuZPXtGRESEVTtVZ2j3tHvaPe2edg8A
8CraPbFpKlaUtm1l3Di/XUZt6lQZNkyKFTMOIViyxCtZvFgWLiReT2TkzqtX
r1q1U3UmaNv93qdFJ5rtflB3rcx7SyuaJbfnF55n1nta6TFQK9MbaUXzrP+J
H2ulzTeeR3OkhdrLtDKjoVZo9wAQAGj3xKZ59llp0kR69ZL+/f2Tfv2MjxcK
F5aDByU62vpERRlD5O3fT7ye+PgDKSkpVu1UnaHd0+5p97R72j0AwKto98Sm
CQszvjrv2dMo+H5Jjx7GNeXvust4H54/b322bDEe/7775P77iXczY8bU33//
3aqdqjO0e9o97Z52T7sHAHgV7Z7YNMePy/ffGwXfXxk6VLp1k0KFjBq+b5/1
mTNHGjQwHt/v5TfgQ7un3dPuafe0e9o9AAQA2j2xaVJTjSvFX7zot8THy969
Ury48VasUMH6lCtnnH3QsqVs3Ei8G66I59X8+LroRLPdT/pIK+tf0sp3zbTS
a4Dn0amoKi3GamVAL610H6SVr9tqpckUzzP3ba08+LtWPpqkFdo9AAQA2j0h
niUjQ06elH/8Q55+2it5+GGpVElatTLOQSBezblz+2j3tHvaPe2edu/t3SAA
wNto94R4nLQ0Y/g71fG9EdU6P/zQGJP/+eeJd7N48ZyoqCirdqrO0O5p97R7
2j3tHgDgVbR7QvJC0tIkKck42t+RgwelTx/j4PxatYh3s3LlwujoaKt2qs4E
bbvXPPdcs92PbaGVJXW0Mrm5VnTOPW/6vVY+C9XKlCZa0Tzvvn9vrbw91/Ps
rqiVZ3dqZWR7rdDuASAA0O4JyQu5elUiImTDhv/LunWqdRqXvF+6lHg3J07s
4nr3tHvaPe2edu/t3SAAwNto94R4lowM49t2q65/t2ePzJ0r48fLt98SX+fI
ka2XLl2yaqfqDO2edk+7p93T7gEAXkW7J8SzpKQYV+VbvNiahIQYg+Q/84y8
9hrxdTgyn3ZPu6fd0+5p9wAQAGj3hHgWVe27d5f27Y2z4zULiMrLL0vp0tKk
ibRrR3ydrVtXxcTEWLVTdSZo2/3M90Unmr9Zo1tpZWM1rYxpqZVOX3oenRH5
VDQL8vwGWtFs9yM6aOWFzZ5nRS2tPPezVnp+oRXaPQAEANo9IZ4lLMwY0P6Z
Z6RePWnQQDePPSYPPSSjRsmkScTXOXw4jCPzafe0e9o97d7bu0EAgLfR7om3
k54u33wjQ4YEWlq1kjJlZNAgUe/8OXN007evNG0qPXpYcBgAyW3Cw9fFxsZa
tVN1hnZPu6fd0+5p9wAAr6LdE28nNdX4VrpIkUDL3XfLo4/KkSPGxxf6W+nw
YZk82bjAffPmxNfZtGn52bNnrdqpOhO07b5PP9GJZrv/qp1WDjyhFc3z7kPG
e56Ow7Wi88GCytTGWhnSVStdhmql9jLPo/lZVoVftEK7BwDQ7olXYw4sf//9
0rGj/7+itTbNmkmpUjJzpqxda1y9TjNz5siXX/r/DPTgDOfd0+5p97R72j3t
HgACAO2euJm0NLl2LdcxrxlXvLjs2ydxcQGVZcukZEnjU4tevYi9s2vXWo7M
p93T7mn3tHtv7wYBAN5Guydu5uhRmT9fZs3KXWbONK4nXqSI8WKlpgZU1Jtw
0iTjfHmVfv2IjbN7N+fd0+5p97R72j3tHgBsj3ZP3MzmzTJihISGyuDBucig
QcZ/sAsXlhMnfL3CqoAnJnoxsbHGsPlmuye2Du3eq5n9b9GJZrvvMEIrW6pq
ZXyIVgb28Dxdh2jl/ZlamfWeVjSHxZvwiVaGd/Q8mp8mPXBcKx9M0wrtHgAC
AO2euJkXX5QWLeSzz4xx3d1P9+7SqZMUKuTrdp+cLGvWGMXtiy+8lX79pFs3
+fhjYvts3ryCUfVo97R72j3t3tu7QQCAt9HuiZtRDb1VKxkwwPg63v0MHGj8
B9v37f7KFeMyfE2aGCOif/QRIa5Cu6fd0+5p97R72j0ABADaPXEzJUvKzz8b
h6PHx+ciFy5IVJQxtrz6MyPDd1HvkL//Xb7+WiZOJCSHHD4cdvHiRat2qs4E
bbvXvHa5ZrvXzNniWtFcuuPC9x4k9DOt+HezR9+nFT+u+dAuWtFc+pedtEK7
B4AAQLsnbkY19IMHjZHzc3UvVbSvXDHuu3WrREb6Ltu2SblyMm2aLFzoVubN
k3HjZOxYEow5eHAL7Z52n21o934J7d6z0O4BALR74mY8a/cq164ZR+bfd5+U
KeO7lC5trPCvvxqfLSQk5JyoKHn9dXnlFXn1VRJ0Wb58wcmTJ63aqTpDu6fd
5za0e9p9rkK7BwDQ7n2f5GTjKvC2i8ftPiXFeLF8We3Ndl+8eC7a/ZEjUqOG
0e5r1yZBl5UrF0ZHR1u1U3WGdk+7z21o97T7XIV2DwCg3fs+W7bIihWyfLnN
UrSoh+1e5dIlX2f/frnzTvn2W5k1S9Q7M8d06CBvvinffy8//USCLqdP70lM
TLRqp+pM0LZ7//ZEzcQX1orf19/j9NWL5tKXv6YVP263fU9pxb8vOu0eAAIA
7d6XSU+XuDgZNco41Xf8eJvl7rs9b/e+z+nTUrGiDBkiX31ljK2XYxo3lnr1
ZMkS42MBC7NzpyxYIKNHy4QJJO+GUfVo985Cu6fd5yq0ewCAf9HufZmkJONb
+3vvNQ4Gfustm6VAATlwwDbt/upVYyz0Jk2kaVNp1iznVKsm9esbfVw9QQtz
/Li0by8FC8pf/0rybn74YXpERIRVO1VnaPd2DO2edp+r0O4BAP5Fu/dlEhON
b3LLlpXWraV7d5ulUCE7fXefnCxr1sgXX7gbVfBfecUYY3/zZisze7Y0bCj3
328M2UfybFatWsR597T7bEO7p93nKrR7AIB/0e59matXjTO7mzc3rhrv95XJ
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
2j3tnnYPAHAL7Z5opk8f+ewz4+TlQ4f8nwUL5PXXpUYNrTpAgi3h4etiY2Ot
2qk6Q7v3lNaLS7un3dPu3US7B4AAQLsnmjH/C71+vf/XROX8efnwQ+Pr+5o1
CXE3y5cvOHnypFU7VWdo957SaveaZ3CvqakVnXquMrm55xnQSytlI7XyTRut
aF7vvu4irei8WXVeMhXaPQBAE+2eaCZPtfvERFmyRCZPlmnTSNZ8/bX07i3t
2pGs2bp1VUxMjFU7VWdo956i3dPuafe0ewCAW2j3RDN5qt0TFzl+XFaskAkT
SNYcPhx28eJFq3aqztDuPUW7p93T7mn3AAC3WNXun3uuzIgRRsXbvp0EV0JC
jPPuafd5P+qVeuMN48oCHTuS/5dt21bz3T3tnnZPu6fde3s3CADwNqvafZUq
Zfr3lzlzZNEiElxp2NAYM59275ukpUlSkly65EmqVpUKFaRZM2nb9j9p1cqo
/J98EuzZvHnFuXPnrNqpOkO795RWu++rl/1PamXxm1qZ8InnGdFBK5W3aaXz
MK3M/rdWmn2nFZ0360+viE6GdtGK5m8a7R4AAoBV7X7IkDLqP8mqODRvToIr
lSsb16Gj3fsmUVEydKhUr+5JihY1muyuXXL06H+yZo188YXx4UyQh+/uafe0
e9o97Z52DwABwKp2P2/ekx9/XLB+/YINGpDgytNP/ykkhHbvoxw4YDT0/Pml
UKFc5447pEsXOXfO+PbfzM6dMmyYdO8uPXoEdXbu/On8+fNW7VSdod17inZP
u6fd0+4BAG6xqt3HxGw7dGjj/v0k6NKy5dOqHtLufZMVK4xRDpo2NTZ4bvO3
v8nLL0toqAwf/p/Uri2tW0ufPtK/f1Bn9+51cXFxVu1UnaHde4p2T7un3dPu
AQBusardI2h9/nk1xsz3OMnJcuKEREe7m/HjpWtXo7Okp+c6DRrISy8Zp1G0
afOflCkjjRoZX1737RvUUe0+NjbW278pQdvuNfuOZrv/qp1WPh2nldajtDK6
lec5+LhWOozQynM/a2V6I61oDm2nU5BDxotOmn6vld79tUK7B4AAQLuHJtq9
x0lLk23b5PHHjW/VK1d2Kw8/LK+8YvRxDxa3c6fMnClffWVc+N5M2bLGo733
nnzwQVBnw4ZlZ86c8fZvCu2edk+7p93T7gEAXkW7hybavce5ft040r5kSSlf
Xp591q08+KBxdL1n7f7ECVm3TqZP/78895zUqWPU22bNgjqbNi0/e/ast39T
aPe0e9o97Z52DwDwKto9NNHuPU5ysvTqZYzZvmyZ7NjhVkJDpV0740x5DxZ3
/boxkt6VK/+XPXvkhx9k8mT59tugzuHDYZcuXfL2b0rQtvsvO4lONNt9o+la
WVFLK/+erZUldTzP6n9qRfPU9Rc3aWV+A61oDrbQYL7n6TpEK22/1srwjlqh
3QNAAKDdQ9PAgdVU3xw1Sn7+meQuGzZIw4bGqG779klMjFuZPt1o982aGcVc
Pz/9JOPGGcPmB3l++WXjhQsXvP2bQrun3dPuafe0ewCAV9HuoWnMmGo1a8p9
98mjj5Lc5ZFHpFgx44rzJ05IRoZb2bjROE3+rruM8+X18/LLUr26VKsW7Fm6
dN6JEye8/ZtCu6fd0+5p97R7AIBX0e6hadGiaq1byz//KW+8QXKX2rWNUfIG
DpSTJ909un7/funZUypVMr70J1Zl/fofGVWPdk+7p93T7r29GwQAeBvtHpqS
kqqdOiWHDsnhwyR32bdPPvxQhgzJRbtPS5OICGOUg3XriGU5fXpPYmKit39T
grbd64xRdoNWu9/6vFY+mqSVZ3ZppdOXnmdRXa3UWKeVMS21onnZ91ortKLz
Zu3XR3TSarRWNH/TaPcAEABo99CUltbu6tVq58+TXCc6umrXrtKqlSxalIuz
9Zcule++k0mTiGU5fDjs4sWL3v5Nod17inZPu6fd0+4BAG6h3QP+kpp6ado0
KVxYihSR4sWJ3zJ9+pTffvvN2y837d5TtHvaPe2edg8AcAvtHvCX9PRL+/ZJ
795GNCsM0Ul4+LrY2Fhvv9yfAEDe5u3dIADA22j3gP9cysiQs2flzBnizyQm
Hk1LS/P3mwEAAADQQrsH/OfaH3/0vXqV+DnXr1/IyMjw95sBAAAA0EK7BwAA
AADA7mj3AAAAAADYHe0eAAAAAAC7o90DAAAAAGB3tHsAAAAAAOyOdg8AAAAA
gN3R7gEAAAAAsDvaPQAAAAAAdke7BwAAAADA7mj3AAAAAADYHe0eAAAAAAC7
o90DAAAAAGB3tHsAAAAAAOyOdg8AAAAAgN3R7gEAAAAAsDvaPQAAAAAAdke7
BwAAAADA7mj3AAAAAADYHe0eAAAAAAC7o90DAAAAAGB3tHsAAAAAAOyOdg8A
AAAAgN3R7gEAAAAAsDvaPQAAAAAAdke7BwAAAADA7mj3AAAAAADYHe0eAAAA
AAC7o90DAAAAAGB3tHsAAAAAAOyOdg8AAAAAgN3R7gHALzIyMtauXdu6deva
tWu/+OKL6i9TpkyJi4vzzdLPnj07atSoTz755IUXXnj33XeHDh26efNm3ywa
AAAA3kC7BwDfO3z48JNPPik3KV269K5du7y99CVLltxzzz03L71Lly4ZGRne
XjoAAAC8gXYPAD4WFhZ21113qb3uQw89NG7cuCNHjhw6dCg0NPSJJ55QE/Pn
zx8VFeW9paekpJhLf+WVVyZPnnz8+PF9+/b16dNHLVdN7N+/v/cWDQAAAO+h
3QOAL126dKl06dJql1u7du2EhITMN509e7ZAgQLqpr59+3pvBdasWaMWUbRo
0aSkpMzTR48eraY//vjj3ls0AAAAvId2DwC+1Lp1a/Nb++Tk5Jtv7d+/v7r1
H//4h/dWYMaMGWoRTz75ZJbp58+fL1eunFp0SkqK95YOAAAAL6HdA4DPJCUl
FSxYUO1vFy9enO0MaWlp2bZ+C505c8bc57///vsXLlzw6rIAAADgM7R7APCZ
OXPmqJ1t4cKFU1NT/bgao0aNypcvn1qTAgUKtG/f3qun+QMAAMA3aPcA4DP9
+vVTO9u6des6psTHx/e9yd69e729JnPnzn3ggQfMnf+tt97apEmTkydPenuh
AAAA8B7aPQD4TPPmzdXOtlWrVo4py5cvv/nKdOvWrfPByqSlpc2aNatChQrm
QkuWLPn777/7YLkAAADwBto9APjMBx98oHa2bdu2dUyJiIiY8V/mkHr58uW7
fPmy99YhPT09848ZGRnz5s0rWrSoeY087y0XAAAAXkW7BwCf6du3r3ktvGxv
NUezf/TRR7209IiIiLvvvrtEiRI33zRt2jS16Ntvv92/AwIAAADAY7R7APCZ
RYsWmSU624Hs2rVrp25t3Lixl5aenJz8pz/9SS3i5iPwN27cqKYXK1Ysyzf7
AAAAsAvaPQD4jOrO5cuXV/vbKlWqZB7F7tKlS19++eU999yjbho1apT3VsBc
eqVKlc6dO+eYeOrUqaeeekpNb9GihfcWDQAAAK+i3QOAL23btq1YsWJql3vn
nXe+/PLL77//ftWqVdXfzf1wuXLljhw54tWl33bbbebSK1eu3KhRo1dfffUv
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
4+PjR40aZa5YwYIFs2xwhy5dulSqVMn9hwUAwDXaPQAEG9+3+6tXr5pXS8/x
JG4dq1evVovIfAU0B3PQPyXLmelpaWkVK1a0vN2PHTvWXNzBgwed3deddq82
l7hxxUB31ja3WyC37V4903z58hUoUOC3335Tr3X+/PkvXLjgzh2z9csvv5hL
zzKk/OTJk83pPmv3cXFx5jzbt293scLZDoyv7mLe9+eff872Xk2aNKlbt66L
hwUAIFdo9wAQbHzf7pXQ0FDz35r+/ftn/kL2yJEjahFujkLmWmRkpHp8x5Xp
MouNjTWXPmXKFMfEffv2/f3vfzen67R71Wo//vhjx4CBa9asMS/z53rANHfa
/YQJE+TGhQnCwsIcE1NTU7N8F+zO2uZ2C+S23f/x36/sH3nkEfWnWiU375Ut
1bvVm0dujIlnjoSvnvKAAQMc/2PxWbtXSpYsKTfO38/8vr148aLj7+PHjy9Y
sKB6h2d5G/fq1ct8/HPnzmX7yGrjd+3a1cWiAQDIFdo9AAQbv7T79PT02rVr
m//clChR4vXXX3/33XcrVqxoDkT29ddfW/HM/njssce6dOmS7U01atQwm3j1
6tXfe+898zLuf/nLXx5++GHNdm8eK37nnXdWrVpVbQH1sHLj3HbX49G50+5V
WzSrq1rESy+99P7779esWVO9fFkuo+bm2uZqC3jQ7n/++WfH/yi2bt3q5r2c
+fDDD82HKl68eKVKldR6yo3DGMwjDXzZ7ocPH27OVqZMmQY3lC9f/o477nCU
/aZNm5oveoECBZ599tnGjRu3aNGiSpUq5r0++uijbB/27Nmz6l4bN250d4sA
AJAT2j0ABJuCBQuqff78+fPdmdm8tJlqNFmmm/09S7tXzSvzrZnbvWn69Onm
2d8O5cqVU9Xeku/u/7hxIrOzwdzOnz9ft25dx3JVR65Xr96xY8dGjhx5c7dt
0qSJmvjpp5+6Xpx5LYDu3btPmDChaNGi5iPfcssttWvXdvZ1rYOzDZvF4cOH
HV+vm+6+++4BAwZ4sLa52gLmgRAuvnfOlnmJeceHPDouXLigVs+xtiVLllRb
7Pr162+99Zb8/yM0zO/WnbV7F1vY0e5//fVXF2uSnp4eGhpqfrxgUq1cvShR
UVGOefbt2/fOO++Ya+JQokSJgQMHOhs2X71nChcu7OISDwAA5BbtHgDgY/Hx
8bt3796xY0e258jrUIXrtttuW7ZsmbMZzp49u2nTJtXFVGWzdtEZGRmHDh0K
Dw+/evWqtY+snD59euvWrZs3b46IiNBcc+9tAVVjH3/8cfXfiTFjxlj1mOfP
n1fP2sXwBT6TkpKi3rRqZfbu3es4C+Nm5ns7LCwsOjraxRZW75bHHnusZ8+e
3llZAECQot0DAAJJixYtqlWr5u+1CEaDBg1S/5coUqRItkPMIbMlS5YULFjQ
xacEAAB4gHYPAAgkp06dyp8//86dO/29IkEhPT39+vXrapsPGzbMPHZ9yJAh
/l4pG3j++eeznAoBAIA+2j0AIMC0a9fO9Xj1sMqaNWtUqTfHlJMbA8tnO+gB
MtuyZUvhwoUtPy0FAADaPQAgwMTExEyYMMHfaxEU1HYuVKhQ/vz5K1asOGrU
KMvP5Q9IO3bsWL16tb/XAgAQgGj3AABAB9/XAwCQF9DuAQAAAACwO9o9AAAA
AAB2R7sHAAAAAMDuaPcAAAAAANgd7R4AAAAAALuj3QMAAAAAYHcCAAAAAAAA
AAAAAADyAH8fQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAADv+l935dE0
    "], {{0, 3202.}, {677., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{677., 3202.},
  PlotRange->{{0, 677.}, {0, 3202.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[287]=",
 CellID->1180637275]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Annotation and Enrichment", "Section",
 CellID->2035743524],

Cell["\<\
Having carried out the classification and clustering of data base on its \
temporal pattern, we would like to perform annotation of these data for gene \
ontology (GO) and pathways from KEGG: Kyoto Encyclopedia of Genes and Genomes.\
\>", "Text",
 CellID->1722961908],

Cell[CellGroupData[{

Cell["Gene Ontology Analysis", "Subsection",
 CellID->2013711891],

Cell[TextData[{
 "MathIOmica provides a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function using annotations (default is for human data) obtained from the \
Gene Ontology consortium, and by default uses human data annotated with \
UniProt IDs. The ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function performs an over-representation (ORA) analysis, providing a \
\"significance\" cutoff based on a p-value assessed by a hypergeometric \
function. "
}], "Text",
 CellID->1112357573],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["GOAnalysis",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/GOAnalysis"], "[", 
     StyleBox["data", "TI"], "]"}], Cell["\<\
calculates input data over-representation analysis (ORA) for Gene Ontology \
(GO) categories. We note that the function utilizes ontologies obtained from \
the GO Consortium, and by default uses human data annotated with UniProt IDs.\
\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->329777640],

Cell["\<\
Performing an over representation analysis for Gene Ontology (GO) terms, \
using clustered data in MathIOmica.\
\>", "Caption",
 CellID->2064986220],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AdditionalFilter", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
AdditionalFilter provides additional filtering that may be applied to the \
standard output structure to be returned. \
\>", "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BackgroundSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
BackgroundSet provides a list of IDs (e.g. gene accessions) that should be \
considered as the background for the calculation.\
\>", "TableText"]},
   {"FilterSignificant", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "FilterSignificant can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " to filter data based on whether the enrichment analysis is \
statistically significant, or if set to ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " to return all membership computations."
    }], "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. If set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used."
    }], "TableText"]},
   {"GetGeneDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GetGeneDictionary"]], 
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"GOAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GOAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GOAnalysisAssigner"]], 
        "paclet:MathIOmica/ref/GOAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"HypothesisFunction", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Query", "[", "\"\<Results\>\"", "]"}], "[", 
        RowBox[{"BenjaminiHochbergFDR", "[", 
         RowBox[{"#1", ",", " ", 
          RowBox[{"SignificanceLevel", " ", "->", " ", "#2"}]}], "]"}], "]"}],
        " ", "&"}], ")"}], " "}], Cell[TextData[{
     "The HypothesisFunction option allows us to chose a function to \
implement multiple hypothesis testing.  The default is  using the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["BenjaminiHochbergFDR"]], 
        "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function.\nThe user can use any function f with three inputs, of the \
form f[#1,#2,#3] where the inputs refer to:\n#1 is the p-value list, \n#2 is \
a significance cutoff, \n#3 is the number of GO associations overall being \
tested. \nThe function f must output a list of 3 values: {original p-value, \
adjusted p-value, ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " based on whether this value is considered statistically significant or \
not respectively}."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input.\
\>", "TableText"]},
   {"MultipleList", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
MultipleList option specifies whether the input accessions list constituted a \
multi-omics list input that is annotated so. If this is the case, \
MultipleList is set to True and each input list ID should have the form \
{ID,\"Omics Type Label\"}, e.g. {\"NFKB1\",\"Protein\"}, and the different \
omics type are treated as different for each ID. If MultipleList is set to \
False, and labeled IDs are provided, labels corresponding to the same ID are \
treated as equivalent to avoid overcounting.\
\>", "TableText"]},
   {"MultipleListCorrection", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "MultipleListCorrection is an option whether or not to correct for \
multi-omics analysis. The choices are ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     ButtonBox["Automatic",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Automatic"],
     ", or a custom number. This essentially enlarges the population by this \
factor to account for additional IDs being considered as the result of a \
multi-omics cluster analysis. If the value is set to Automatic the number of \
unique ID labels is used to make the correction."
    }], "TableText"]},
   {"OBOGODictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "OBOGODictionaryOptions specifies a list of options to be passed to the \
internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["OBOGODictionary"]], 
        "paclet:MathIOmica/ref/OBOGODictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function that provides the GO annotations."
    }], "TableText"]},
   {"OBODictionaryVariable", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "OBODictionaryVariable can provide a GO annotation variable. If set to ",
     
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["OBOGODictionary"]], 
        "paclet:MathIOmica/ref/OBOGODictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used internally to automatically generate the default GO \
annotation."
    }], "TableText"]},
   {"OntologyLengthFilter", "2", Cell[TextData[{
     "OntologyLengthFilter can be used to set the value for which terms to \
consider in the computation, by excluding GO terms that have fewer items \
compared to the OntologyLengthFilter value. It is used by the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GOAnalysisAssigner"]], 
        "paclet:MathIOmica/ref/GOAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"OutputID", "\"\<UniProt ID\>\"", Cell["\<\
The OutputID option takes a string value that specifies what kind of \
IDs/accessions to convert the input IDs to compute the GO enrichment.\
\>", "TableText"]},
   {"pValueCutoff", "0.05", Cell["\<\
pValueCutoff provides a cutoff p-value for adjusted p-values to assess \
statistical significance.\
\>", "TableText"]},
   {"ReportFilter", "1", Cell["\<\
ReportFilter provides a cutoff for membership in ontologies in selecting \
which terms/categories to return. It is used in conjunction with \
ReportFilterFunction.\
\>", "TableText"]},
   {"ReportFilterFunction", 
    ButtonBox["GreaterEqualThan",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqualThan"], Cell["\<\
ReportFilterFunction specifies what operator form will be used to compare \
against ReportFilter option value in selecting which terms/categories to \
return. The default is to use GreaterEqualThan. \
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"TestFunction", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", " ", "-", 
        RowBox[{"N", "[", " ", 
         RowBox[{"CDF", "[", 
          RowBox[{
           RowBox[{"HypergeometricDistribution", "[", 
            RowBox[{"#1", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
           RowBox[{"#4", " ", "-", " ", "1"}]}], "]"}], "]"}]}], " ", ")"}], 
      "&"}], " "}], Cell[TextData[{
     "The TestFunction option provides a function used to calculate the \
p-values for the enrichment of each term. It can be a function of four \
inputs, f[#1,#2,#3,#4] (e.g. the default is using a hypergeometric \
distribution CDF, 1-N[CDF[",
     ButtonBox["HypergeometricDistribution",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/HypergeometricDistribution"],
     "[#1,#2,#3],#4-1]]]. The four inputs refer to:\n#1 is number of draws \
(members in group being tested),\n#2 is number of successes for category in \
population,\n#3 is total number of members in population,\n#4 is number of \
successes (or more) in current group being tested for specific category.\nThe \
output is a p-value (real positive number \[LessEqual] 1)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->740180373],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1986245587],

Cell[TextData[{
 "The input data for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " be a single list of ",
 Cell[BoxData["n"], "InlineFormula"],
 " genes in the form:\n",
 Cell[BoxData[
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["ID", "1"], ",", 
     RowBox[{
      SubscriptBox["ID", 
       RowBox[{"2", ","}]], "..."}], ",", 
     SubscriptBox["ID", "n"]}], "}"}]}]], "InlineFormula"],
 "\nThe IDs may be provided as ID strings, or as labeled strings in the case \
of multiple omics being considered. Labeled IDs are provided as ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "1"], ",", 
       SubscriptBox["label", "1"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "2"], ",", 
       SubscriptBox["label", "2"]}], "}"}], ",", 
     RowBox[{"...", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "3"], ",", 
        SubscriptBox["label", "2"]}], "}"}]}]}], "}"}], "."}]], 
  "InlineFormula"],
 " The labels are typically a string, e.g. typically \"RNA\" or \"Protein\".\n\
The default output contains each GO:term that was considered and found to be \
statistically significant. For each GO term we schematically have an \
association with keys ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"GO", ":", "Term"}], "\[Rule]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"testing", " ", "outcomes"}], "}"}], ",", 
     RowBox[{"{", "statistics", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"GO", " ", "term"}], "}"}], ",", 
       RowBox[{"{", "Membership", "}"}]}], "}"}]}]}]}]], "InlineFormula"],
 ". The output has the following structures: for a single list input:"
}], "Text",
 CellID->296707676],

Cell[TextData[Cell[BoxData[
 RowBox[{"listOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "1"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "1"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "1"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "1"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "1"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["Term", "1"]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
    ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "2"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "2"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "2"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "2"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "2"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["Term", "2"]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
    ",", " ", "...", ",", 
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "n"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "n"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "n"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "n"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "n"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["term", "n"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], " ", "\[IndentingNewLine]", 
   "|>"}]}]], "InlineFormula"]], "Text",
 CellID->308882198],

Cell[TextData[{
 Cell[BoxData["GOAnalysis"], "InlineFormula"],
 " can also take as input the output of clustering of time series \
classification data, e.g. ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " or ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesSingleClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesSingleClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " association of associations. The groups for each class will then have keys \
labeled ",
 Cell[BoxData["\"\<GroupAssociations\>\""], "InlineFormula"],
 ", that include the labels used in the clustering. The labels must \
correspond to protein or gene accessions/IDs. For each class and group the \
corresponding GOAnalysis enrichment is computed and returned. "
}], "Text",
 CellID->915126987],

Cell[TextData[{
 "We also note that GOAnalysis provides a multiple-hypothesis adjusted \
p-value. By default, it utilizes a Benjamini-Hochberg false discovery rate \
(FDR) using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["BenjaminiHochbergFDR"]], 
    "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->875538647],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["BenjaminiHochbergFDR",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/BenjaminiHochbergFDR"], "[", 
     StyleBox["pValues", "TI"], "]"}], Cell[TextData[{
     "calculates for a list of ",
     Cell[BoxData[
      StyleBox["pValues", "TI"]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["p", 
          RowBox[{"1", ","}]], 
         SubscriptBox["p", "2"]}], ",", 
        RowBox[{"...", 
         SubscriptBox["p", "N"]}]}], "}"}]], "InlineFormula"],
     ", the Benjamini Hochberg approach false discovery rates (FDR). "
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1158915490],

Cell["Calculating a false discovery rate (FDR).", "Caption",
 CellID->215962140],

Cell["\<\
We carry out our GOAnalysis for all the classes and groups/subgroups. We only \
report terms for which there are at least 3 members, and additionally correct \
for multiple omics (2 sets of GO terms, one each for proteomics and \
transcriptomics).  Please note that this is a time consuming computation.\
\>", "MathCaption",
 CellID->54495101],

Cell[BoxData[
 RowBox[{
  RowBox[{"goAnalysisCombined", "=", 
   RowBox[{"GOAnalysis", "[", 
    RowBox[{"combinedClusters", ",", 
     RowBox[{"OntologyLengthFilter", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"ReportFilter", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"MultipleList", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"MultipleListCorrection", "\[Rule]", "2"}]}], " ", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[288]:=",
 CellID->1071128885],

Cell["We see that the classification is maintained:", "MathCaption",
 CellID->618975626],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[289]:=",
 CellID->712560114],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[289]=",
 CellID->1709177902]
}, Open  ]],

Cell["\<\
Let us extract the top 3 results from all the \"SpikeMax\" data:\
\>", "MathCaption",
 CellID->2051853087],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<SpikeMax\>\"", ",", "All", ",", 
    RowBox[{"1", ";;", "3"}]}], "]"}], "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[290]:=",
 CellID->1202429683],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "7.013519380713489`*^-9", ",", "0.000011067333582765886`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "2480", ",", "39544", ",", "41"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"mitochondrion\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PDP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IBA57\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1683\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GK5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPATA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PPARGC1B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GDAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CXorf23\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NSE4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75323\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06576\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SYNJ2BP\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10809\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99798\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P38646\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9H9B4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55084\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NUJ1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P49411\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13804\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P17568\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22033\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16822\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P83111\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95571\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N4H5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O96008\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10515\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96I99\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P42126\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P51970\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22695\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P40939\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75947\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22307\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10606\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FOXO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P28288\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005759\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.568056155078778`*^-7", ",", "0.00012371963063571558`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "728", ",", "39544", ",", "19"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"mitochondrial matrix\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MMAA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PDP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IBA57\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NSE4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06576\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10809\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99798\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P38646\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NUJ1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13804\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22033\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16822\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95571\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10515\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96I99\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P42126\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FOXO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005814\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.00006891724327877277`", ",", "0.03625046996463448`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "282", ",", "39544", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"centriole\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AHI1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1731\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SASS6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SCLT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP128\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP152\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCDC146\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CNTLN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP135\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S4\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S5\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "6.39793691308638`*^-10", ",", "5.745347347951569`*^-7", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"76", ",", "19258", ",", "39544", ",", "63"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"protein binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13612\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8IUZ5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13861\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94979\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14933\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7L2H7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P01732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13439\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q15819\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19784\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14745\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q07812\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q86UP2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N1G4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UEU0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N8A2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13043\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7Z4H3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60826\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UBE0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30520\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54136\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13596\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25098\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P41227\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P61457\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3L3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P85037\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O00487\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54725\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q2TAY7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P52756\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94776\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13148\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06127\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02818\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P07766\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF624\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BLM\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF772\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25788\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P35998\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3D0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43813\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y2V2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13347\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q5JSL3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BRMS1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43402\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99623\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005829\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "2.038192020994288`*^-9", ",", "9.151482174264353`*^-7", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"76", ",", "10070", ",", "39544", ",", "44"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"cytosol\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43252\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13861\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94979\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14933\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7L2H7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13439\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19784\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q07812\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P56192\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UEU0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13043\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60826\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30520\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54136\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13596\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25098\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P41227\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P61457\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3L3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P63220\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O00487\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54725\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BLM\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLEKHA8\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25788\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P35998\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3D0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y2V2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13347\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q5JSL3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43402\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0003723\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.8522421153683706`*^-7", ",", "0.000055443780653359885`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"76", ",", "2774", ",", "39544", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"RNA binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9BSD7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q86UP2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N1G4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P63220\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P52756\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13148\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43818\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}],
    ",", 
   RowBox[{"\<\"G1S6\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0051301\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "6.931887033069759`*^-9", ",", "0.000012311031370731892`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "690", ",", "39544", ",", "17"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"cell division\"\>", 
             ",", "\<\"biological_process\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BUB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDC20\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HMGA2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BIRC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FSD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TPX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FAM64A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"USP44\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"UBE2C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TIPIN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0062023\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "4.733950597024732`*^-7", ",", "0.0004203748130157962`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "720", ",", "39544", ",", "15"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"collagen-containing extracellular matrix\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CXCL12\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FBLN1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SFRP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PXDN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPC4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"COL26A1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"COL4A2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDH2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MFAP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RARRES2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SFRP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"APOE\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MDK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005876\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "7.572169357708226`*^-7", ",", "0.0004482724259763269`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "74", ",", "39544", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"spindle microtubule\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BIRC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NUSAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[290]=",
 CellID->1411736642]
}, Open  ]],

Cell[TextData[{
 "Let us extract the names of the top 10 ontology group results from all the \
\"f1\" Group1 subgroup 1 data (G1S1). These are in the 3rd list, first \
component for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " outputs (see above and documentation:"
}], "MathCaption",
 CellID->430804357],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{
   "\"\<f1\>\"", ",", "\"\<G1S1\>\"", ",", "All", ",", "3", ",", "1"}], "]"}],
   "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[291]:=",
 CellID->1361454062],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"GO:0016020\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"membrane\"\>", ",", "\<\"cellular_component\"\>"}], "}"}]}],
    ",", 
   RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"protein binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0043312\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"neutrophil degranulation\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0070062\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"extracellular exosome\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0010501\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"RNA secondary structure unwinding\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0035196\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"production of miRNAs involved in gene silencing by \
miRNA\"\>", ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0006986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"response to unfolded protein\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0051787\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"misfolded protein binding\"\>", 
      ",", "\<\"molecular_function\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005783\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"endoplasmic reticulum\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005925\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"focal adhesion\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0035198\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"miRNA binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"mitochondrion\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0009986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cell surface\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005524\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"ATP binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[291]=",
 CellID->500244026]
}, Open  ]],

Cell[TextData[{
 "Let us extract the corresponding p-values/test results of the top 10 \
ontology group results from all the \"SpikeMin\" Group1 subgroup 1 data \
(G1S1). These are in the 1st list for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " outputs (see above and documentation:"
}], "MathCaption",
 CellID->170022261],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "\"\<G1S1\>\"", ",", "All", ",", "1"}], "]"}], 
  "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[292]:=",
 CellID->1410890117],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"GO:0016020\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1.2119400579352567`*^-8", ",", "0.000015658265548523517`", ",", 
      "True"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "2.6750076470946446`*^-6", ",", "0.0017280549400231404`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0043312\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "4.344497815751073`*^-6", ",", "0.0018605718870358173`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0070062\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "5.760284479987051`*^-6", ",", "0.0018605718870358173`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0010501\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000012714222794490848`", ",", "0.0032853551700964354`", ",", "True"}],
      "}"}]}], ",", 
   RowBox[{"\<\"GO:0035196\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0000895042174695781`", ",", "0.019273241495115816`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0006986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00020754919749131162`", ",", "0.03683335126456907`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0051787\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0004652266830912129`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005783\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0006061341815932293`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005925\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0006232231925990837`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0035198\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0007083971952717376`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000751938927678804`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0009986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000808237870607684`", ",", "0.04351013870104699`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005524\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0009399209877797305`", ",", "0.04784404807503774`", ",", "True"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[292]=",
 CellID->948909842]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pathway Analysis", "Subsection",
 CellID->113475317],

Cell[CellGroupData[{

Cell["\<\
Enrichment of Genomic KEGG Pathways (KEGG: Kyoto Encyclopedia of Genes and \
Genomes)\
\>", "Subsubsection",
 CellID->794541302],

Cell[TextData[{
 "MathIOmica provides a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGAnalysis"]], "paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function using annotations (default is for human data) obtained from KEGG: \
Kyoto Encyclopedia of Genes and Genomes, and by default uses human data \
annotated with KEGG Gene IDs. The ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGAnalysis"]], "paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function performs an over-representation (ORA) analysis, providing a \
\"significance\" cutoff based on a p-value assessed by a hypergeometric \
function. "
}], "Text",
 CellID->1511547068],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["KEGGAnalysis",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/KEGGAnalysis"], "[", 
     StyleBox["data", "TI"], "]"}], Cell["\<\
calculates input data over-representation analysis for KEGG: Kyoto \
Encyclopedia of Genes and Genomes pathways. We note that the function \
utilizes data obtained from the KEGG databases, and by default uses human \
data annotated by \"KEGG Gene ID\".\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1987511513],

Cell["\<\
Performing an over representation analysis for KEGG:Kyoto Encyclopedia of \
Genes and Genomes pathways, using clustered data in MathIOmica.\
\>", "Caption",
 CellID->2145353553],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AdditionalFilter", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
AdditionalFilter provides additional filtering that may be applied to the \
standard output structure to be returned. \
\>", "TableText"]},
   {"AnalysisType", "\"\<Genomic\>\"", Cell[TextData[{
     "AnalysisType provides a selection for the type of analysis to perform. \
\"Genomic\" analysis (default) uses gene identifier based analysis. \
\"Molecular\" analysis uses molecular analysis. Setting the option to ",
     ButtonBox["All",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/All"],
     " carries out all possible analysis types for the input data."
    }], "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BacgroundSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
BackgroundSet provides a list of IDs (e.g. gene accessions) that should be \
considered as the background for the calculation.\
\>", "TableText"]},
   {"FilterSignificant", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "FilterSignificant can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " to filter data based on whether the enrichment analysis is \
statistically significant, or if set to ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " to return all membership computations."
    }], "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. If set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used."
    }], "TableText"]},
   {"GetGeneDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GetGeneDictionary"]], 
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"HypothesisFunction", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Query", "[", "\"\<Results\>\"", "]"}], "[", 
         RowBox[{"BenjaminiHochbergFDR", "[", 
          RowBox[{"#1", ",", " ", 
           RowBox[{"SignificanceLevel", " ", "->", " ", "#2"}]}], "]"}], 
         "]"}], " ", "&"}], ")"}], " ", "&"}], " "}], Cell[TextData[{
     "The HypothesisFunction option allows us to chose a function to \
implement multiple hypothesis testing.  The default is  using the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["BenjaminiHochbergFDR"]], 
        "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function.\nThe user can use any function f with three inputs, of the \
form f[#1,#2,#3] where the inputs refer to:\n#1 is the p-value list, \n#2 is \
a significance cutoff, \n#3 is the number of GO associations overall being \
tested. \nThe function f must output a list of 3 values: {original p-value, \
adjusted p-value, ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " based on whether this value is considered statistically significant or \
not respectively}."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input.\
\>", "TableText"]},
   {"KEGGAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The KEGGAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGAnalysisAssigner"]], 
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"KEGGDatabase", "\"\<pathway\>\"", Cell["\<\
KEGGDatabase value indicates which KEGG database to use as the target \
database.\
\>", "TableText"]},
   {"KEGGDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "KEGGDictionaryOptions specifies a list of options to be passed to the \
internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGDictionary"]], "paclet:MathIOmica/ref/KEGGDictionary"},
       
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function that provides the KEGG annotations."
    }], "TableText"]},
   {"KEGGDictionaryVariable", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "KEGGDictionaryVariable can provide a KEGG annotation variable. If set \
to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGDictionary"]], "paclet:MathIOmica/ref/KEGGDictionary"},
       
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used internally to automatically generate the default KEGG \
annotation."
    }], "TableText"]},
   {"KEGGMolecular", "\"\<cpd\>\"", Cell["\<\
KEGGMolecular specifies which database to use for molecular analysis. The \
default is the compound database (\"cpd\").\
\>", "TableText"]},
   {"KEGGOrganism", "\"\<hsa\>\"", Cell["\<\
KEGGOrganism indicates which organism (org) to use for \"Genomic\" type of \
analysis. The default is human analysis org=\"hsa\".\
\>", "TableText"]},
   {"MathIOmicaDataDirectory", 
    ButtonBox["ConstantMathIOmicaDataDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaDataDirectory"], 
    Cell[TextData[StyleBox[
    "MathIOmicaDataDirectory option specifies the directory where the default \
MathIOmica package data are stored. By default the option is set to create \
the standard directory if it does not exist already. ", "ExampleText"]], 
     "TableText"]},
   {"MolecularInputID", 
    RowBox[{"{", "\"\<cpd\>\"", "}"}], Cell["\<\
MolecularInputID is a string list to indicate the kind of ID to use for the \
input molecule entries.\
\>", "TableText"]},
   {"MolecularOutputID", "\"\<cpd\>\"", Cell["\<\
MolecularOutputID is a string to indicate the kind of ID to convert input \
molecule entries. The default is \"cpd\" consistently with use of the \"cpd\" \
database as the default molecular analysis.\
\>", "TableText"]},
   {"MolecularSpecies", "\"\<compound\>\"", Cell[
    "MolecularSpecies specifies the kind of molecular input.", "TableText"]},
   {"MultipleList", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "MultipleList option specifies whether the input accessions list \
constituted a multi-omics list input that is annotated so. Each ID ",
     Cell[BoxData["j"], "InlineFormula"],
     "  input must be a list form, i.e. enclosed as ",
     Cell[BoxData[
      RowBox[{"{", 
       SubscriptBox["ID", "j"]}]], "InlineFormula"],
     "}.  If this is the case, MultipleList is set to True and each input \
list ID should have the form {ID,\"Omics Type Label\"}, e.g. \
{\"NFKB1\",\"Protein\"}, and the different omics type are treated as \
different for each ID. If MultipleList is set to False, and labeled IDs are \
provided, labels corresponding to the same ID are treated as equivalent to \
avoid overcounting."
    }], "TableText"]},
   {"MultipleListCorrection", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "MultipleListCorrection is an option whether or not to correct for \
multi-omics analysis. The choices are ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     ButtonBox["Automatic",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Automatic"],
     ", or a custom number. This essentially enlarges the population by this \
factor to account for additional IDs being considered as the result of a \
multi-omics cluster analysis. If the value is set to Automatic the number of \
unique ID labels is used to make the correction."
    }], "TableText"]},
   {"NonUCSC", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
NonUCSC option set to False assumes UCSC browser was used in determining an \
internal GeneDictionary used in ID translations where the KEGG identifiers \
for genes are number strings (e.g. 4790). 
The NonUCSC option can be set to True if standard KEGG accessions are used in \
a user provided GeneDictionary variable, in the form \
OptionValue[KEGGOrganism] <>\":\"<>\"number string\", e.g. \"hsa:4790\"\
\>", "TableText"]},
   {"OutputID", "\"\<KEGG Gene ID\>\"", Cell["\<\
OutputID is a string to indicate the kind of ID to convert input genomic \
analysis entries. The default is \"KEGG Gene ID\" consistently with use of \
the \"pathway\" database as the default genomic analysis.\
\>", "TableText"]},
   {"PathwayLengthFilter", "2", Cell[TextData[{
     "PathwayLengthFilter can be used to set the value for which terms to \
consider in the computation, by excluding KEGG pathways that have fewer items \
compared to the PathwayLengthFilter value. It is used by the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGAnalysisAssigner"]], 
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"pValueCutoff", "0.05", Cell["\<\
pValueCutoff provides a cutoff p-value for adjusted p-values to assess \
statistical significance.\
\>", "TableText"]},
   {"ReportFilter", "1", Cell["\<\
ReportFilter provides a cutoff for membership in pathways in selecting which \
terms/pathways to return. It is used in conjunction with ReportFilterFunction.\
\>", "TableText"]},
   {"ReportFilterFunction", 
    ButtonBox["GreaterEqualThan",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqualThan"], Cell["\<\
ReportFilterFunction specifies what operator form will be used to compare \
against ReportFilter option value in selecting which terms/pathways to \
return. The default is to use GreaterEqualThan \
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"TestFunction", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", " ", "-", 
          RowBox[{"N", " ", 
           RowBox[{"CDF", "[", 
            RowBox[{
             RowBox[{"HypergeometricDistribution", "[", 
              RowBox[{"#1", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
             RowBox[{"#4", " ", "-", " ", "1"}]}], "]"}]}]}]}], "]"}], " ", 
       ")"}], "&"}], " "}], Cell[TextData[{
     "The TestFunction option calculates the p-values for the enrichment of \
each term. It can be a function of four inputs, f[#1,#2,#3,#4] (e.g. the \
default is using a hypergeometric distribution CDF, 1-N[CDF[",
     ButtonBox["HypergeometricDistribution",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/HypergeometricDistribution"],
     "[#1,#2,#3],#4-1]]]. The four inputs refer to:\n#1 is number of draws \
(members in group being tested),\n#2 is number of successes for category in \
population,\n#3 is total number of members in population,\n#4 is number of \
successes (or more) in current group being tested for specific category.\nThe \
output is a p-value (real positive number \[LessEqual] 1)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->706732141],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGAnalysis"]], "paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->315042230],

Cell[TextData[{
 "The input data can be a single list of ",
 Cell[BoxData["n"], "InlineFormula"],
 " genes in the form:"
}], "Text",
 CellID->1844849291],

Cell[TextData[Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["ID", "1"], ",", 
    RowBox[{
     SubscriptBox["ID", 
      RowBox[{"2", ","}]], "..."}], ",", 
    SubscriptBox["ID", "n"]}], "}"}]}]], "InlineFormula"]], "Text",
 CellID->420108894],

Cell[TextData[{
 "The IDs may be provided as ID strings, ",
 Cell[BoxData[
  SubscriptBox["ID", "j"]], "InlineFormula"],
 " (e.g. \"NFKB1\") as strings enclosed in list brackets ",
 Cell[BoxData[
  RowBox[{"{", 
   SubscriptBox["ID", "j"], "}"}]], "InlineFormula"],
 ", (e.g. {\"NFKB1\"}  or as labeled strings in the case of multiple omics \
being considered. Labeled IDs are typically provided as:"
}], "Text",
 CellID->1991433769],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["ID", "1"], ",", 
      RowBox[{"...", " ", "optional", " ", "label", " ", 
       SubscriptBox["items", "1"]}], ",", 
      SubscriptBox["label", "1"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["ID", "2"], ",", 
      RowBox[{"...", " ", "optional", " ", "label", " ", 
       SubscriptBox["items", "2"]}], ",", "...", ",", 
      SubscriptBox["label", "2"]}], "}"}], ",", 
    RowBox[{"...", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "n"], ",", "...", ",", " ", 
       RowBox[{"optional", " ", "label", " ", 
        SubscriptBox["items", "n"]}], ",", "...", ",", 
       SubscriptBox["label", "n"]}], "}"}]}]}], "}"}], "."}]]]], "Text",
 CellID->446395410],

Cell[TextData[{
 "The ID labels are typically a string, e.g. typically \"RNA\" or \
\"Protein\", (e.g. {\"NFKB1\",\"Protein\"}) or for a molecular ID obtained \
from metabolomics experiments, can also contain other optional label items \
such as mass and retention time ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
   "\"\<cpd:C00449\>\"", ",", "276.133", ",", "11.0041", ",", 
    "\"\<Meta\>\""}], "}"}]], "InlineFormula"],
 ". The main label must always be the last element in the list."
}], "Text",
 CellID->1407276899],

Cell["\<\
The output has the following structures: for a single list input:\
\>", "Text",
 CellID->1865437082],

Cell[TextData[Cell[BoxData[
 RowBox[{"listOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "1"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "1"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "1"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "1"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "1"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "2"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "2"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "2"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "1"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "2"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}], ",", " ", "...", ",", 
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "n"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "n"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "n"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "n"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "n"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], " ", "\[IndentingNewLine]", 
   "|>"}]}]], "InlineFormula"]], "Text",
 CellID->1474295269],

Cell[TextData[{
 "The input data can also be an association of multiple ",
 Cell[BoxData["L"], "InlineFormula"],
 " groups to be tested:"
}], "Text",
 CellID->814266997],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{
     RowBox[{
      SubscriptBox["Group", "1"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "11"], ",", 
        RowBox[{
         SubscriptBox["ID", 
          RowBox[{"12", ","}]], "..."}], ",", 
        SubscriptBox["ID", 
         RowBox[{"1", 
          SubscriptBox["n", "1"]}]]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Group", "2"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "21"], ",", 
        SubscriptBox["ID", "22"], ",", "...", ",", 
        SubscriptBox[
         SubscriptBox["ID", 
          RowBox[{"2", "n"}]], "2"]}], "}"}]}], ",", "...", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Group", "L"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "11"], ",", 
        RowBox[{
         SubscriptBox["ID", 
          RowBox[{"12", ","}]], "..."}], ",", 
        SubscriptBox["ID", 
         RowBox[{"1", 
          SubscriptBox["n", "L"]}]]}], "}"}]}]}], "|>"}], "."}]}]], "Text",
 CellID->1619619895],

Cell[TextData[{
 "In this case the output for each group has the ",
 Cell[BoxData["listOutput"], "InlineFormula"],
 " format described above:"
}], "Text",
 CellID->1596349540],

Cell[BoxData[
 RowBox[{"associationOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     SubscriptBox["Group", "1"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "1"]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Group", "2"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "2"]}], ",", "...", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Group", "L"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "L"]}]}], "|>"}]}]], "Text",
 CellID->1333516809],

Cell[TextData[{
 Cell[BoxData["KEGGAnalysis"], "InlineFormula"],
 " can also take as input the output of clustering of time series \
classification data, e.g. ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " or ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesSingleClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesSingleClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " association of associations. The groups for each class will then have keys \
labeled ",
 Cell[BoxData["\"\<GroupAssociations\>\""], "InlineFormula"],
 ", that include the labels used in the clustering. The labels must \
correspond to protein or gene accessions/IDs. For each class and group the \
corresponding KEGGAnalysis enrichment is computed and returned. "
}], "Text",
 CellID->1277668771],

Cell[TextData[{
 "There are two types of analyses that are carried out, which can be set by \
the AnalysisType option value. The default \"Genomic\" analysis is based on \
input gene symbols. The \"Molecular\" analysis is based on molecular input \
accessions (e.g. compounds \"cpd\" databases). For multi-omic input the user \
may select to do ",
 ButtonBox["All",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/All"],
 " analyses. In this case an additional outer association is created with \
labels indicating each of \"Genomic\" or \"Molecular\" analysis carried out."
}], "Text",
 CellID->1090047844],

Cell["\<\
The enrichment analysis is an over-representation calculation, using a \
hypergeometric test. For a given a given group (e.g. members of a cluster \
after classification), we try to identify which KEGG pathway terms are \
over-represented by membership of IDs to that cluster. The KEGGAnalysis \
function allows us to select the background, and hence address selection \
bias. Additionally a Benjamini-Hochberg procedure false discovery rate (FDR) \
may be calculated for each representation.\
\>", "Text",
 CellID->251121551],

Cell["\<\
We carry out our KEGGAnalysis for all the classes and groups/subgroups. We \
only report terms for which there are at least 2 members, and additionally \
correct for multiple omics (2 sets of KEGG terms, one each for proteomics and \
transcriptomics).  Please note that this is a time consuming computation.\
\>", "MathCaption",
 CellID->1339044942],

Cell[BoxData[
 RowBox[{
  RowBox[{"keggAnalysisCombined", "=", 
   RowBox[{"KEGGAnalysis", "[", 
    RowBox[{"combinedClusters", ",", 
     RowBox[{"ReportFilter", "\[Rule]", " ", "2"}], ",", 
     RowBox[{"MultipleList", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"MultipleListCorrection", "\[Rule]", "2"}], " ", ",", 
     RowBox[{"AnalysisType", "\[Rule]", " ", "All"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[293]:=",
 CellID->1847203281],

Cell["\<\
We see that both \"Molecular\" and \"Genomic\" analysis is performed:\
\>", "MathCaption",
 CellID->1921942735],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "keggAnalysisCombined"}]], "Input",
 CellLabel->"In[294]:=",
 CellID->1790012618],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Molecular\"\>", ",", "\<\"Genomic\"\>"}], "}"}]], "Output",
 CellLabel->"Out[294]=",
 CellID->921808109]
}, Open  ]],

Cell["We can extract both Genomic and molecular analysis:", "MathCaption",
 CellID->1116859782],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]], "Input",
 CellLabel->"In[295]:=",
 CellID->1866845763],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
               RowBox[{"\[LeftAssociation]", 
                RowBox[{
                 RowBox[{"\<\"path:hsa05016\"\>", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "5.341026271859465`*^-7", ",", "0.00009167154489243451`", 
                    ",", "True"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"66", ",", "386", ",", "15746", ",", "11"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"Huntington disease - Homo sapiens \
(human)\"\>", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\<\"DNAL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                    "}"}], ",", 
                    TemplateBox[{"9"},
                    "OutputSizeLimit`Skeleton"], ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}],
                     "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
                 TemplateBox[{"9"},
                  "OutputSizeLimit`Skeleton"], ",", 
                 RowBox[{"\<\"path:hsa00640\"\>", "\[Rule]", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}],
               ",", 
              TemplateBox[{"12"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}], ",", 
           
           TemplateBox[{"8"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 295, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 295, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 295, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[295], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[295]=",
 CellID->881858505]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keggAnalysisCombined", "[", "\"\<Molecular\>\"", "]"}]], "Input",
 CellLabel->"In[297]:=",
 CellID->1218496248],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S4\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S5\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S6\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S7\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S8\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S9\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S10\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S11\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S12\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S13\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S14\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"path:map01100\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.024813798850886176`", ",", "0.04135633141814362`", ",", 
             "True"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "1654", ",", "5841", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Metabolic pathways\"\>", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C06124\"\>", ",", "379.2488`", ",", 
                  "12.687057`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C20199\"\>", ",", "238.1201`", ",", 
                  "9.702206`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C19614\"\>", ",", "270.2196`", ",", 
                  "12.719786`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C05446\"\>", ",", "436.355`", ",", 
                  "14.301529`", ",", "\<\"Meta\"\>"}], "}"}], "}"}]}], 
              "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"path:map04976\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.0008268610310414034`", ",", "0.004961166186248421`", ",", 
             "True"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "98", ",", "5841", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Bile secretion\"\>", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"cpd:C04555\"\>", ",", "368.1654`", ",", 
                   "12.082582`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"cpd:C04555\"\>", ",", "368.1659`", ",", 
                   "12.371832`", ",", "\<\"Meta\"\>"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C01921\"\>", ",", "465.3086`", ",", 
                  "11.805584`", ",", "\<\"Meta\"\>"}], "}"}], "}"}]}], 
              "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G5S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G5S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[297]=",
 CellID->1408890497]
}, Open  ]],

Cell["\<\
Let us extract the names of the pathways found for the \"SpikeMin\" data:\
\>", "MathCaption",
 CellID->1431426074],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<SpikeMin\>\"", ",", "All", ",", "All", ",", "3", ",", "1"}], 
   "]"}], "@", 
  RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}]], "Input",
 CellLabel->"In[298]:=",
 CellID->1866212024],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa03030\"\>", 
       "\[Rule]", "\<\"DNA replication - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00280\"\>", 
       "\[Rule]", "\<\"Valine, leucine and isoleucine degradation - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03010\"\>", 
       "\[Rule]", "\<\"Ribosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03430\"\>", 
       "\[Rule]", "\<\"Mismatch repair - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01212\"\>", 
       "\[Rule]", "\<\"Fatty acid metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04640\"\>", 
       "\[Rule]", "\<\"Hematopoietic cell lineage - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05340\"\>", 
       "\[Rule]", "\<\"Primary immunodeficiency - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa00471\"\>", 
       "\[Rule]", "\<\"D-Glutamine and D-glutamate metabolism - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa00250\"\>", 
       "\[Rule]", "\<\"Alanine, aspartate and glutamate metabolism - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00533\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - keratan sulfate - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00220\"\>", 
       "\[Rule]", "\<\"Arginine biosynthesis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04964\"\>", 
       "\[Rule]", "\<\"Proximal tubule bicarbonate reclamation - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04142\"\>", 
       "\[Rule]", "\<\"Lysosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05152\"\>", 
       "\[Rule]", "\<\"Tuberculosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04145\"\>", 
       "\[Rule]", "\<\"Phagosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05140\"\>", 
       "\[Rule]", "\<\"Leishmaniasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04210\"\>", 
       "\[Rule]", "\<\"Apoptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05142\"\>", 
       "\[Rule]", "\<\"Chagas disease (American trypanosomiasis) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05134\"\>", 
       "\[Rule]", "\<\"Legionellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05167\"\>", 
       "\[Rule]", "\<\"Kaposi sarcoma-associated herpesvirus infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04380\"\>", 
       "\[Rule]", "\<\"Osteoclast differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05133\"\>", 
       "\[Rule]", "\<\"Pertussis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04722\"\>", 
       "\[Rule]", "\<\"Neurotrophin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04650\"\>", 
       "\[Rule]", "\<\"Natural killer cell mediated cytotoxicity - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05323\"\>", 
       "\[Rule]", "\<\"Rheumatoid arthritis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04620\"\>", 
       "\[Rule]", "\<\"Toll-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05169\"\>", 
       "\[Rule]", "\<\"Epstein-Barr virus infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01200\"\>", 
       "\[Rule]", "\<\"Carbon metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04062\"\>", 
       "\[Rule]", "\<\"Chemokine signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04640\"\>", 
       "\[Rule]", "\<\"Hematopoietic cell lineage - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05164\"\>", 
       "\[Rule]", "\<\"Influenza A - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05150\"\>", 
       "\[Rule]", "\<\"Staphylococcus aureus infection - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04668\"\>", 
       "\[Rule]", "\<\"TNF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04670\"\>", 
       "\[Rule]", "\<\"Leukocyte transendothelial migration - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05120\"\>", 
       "\[Rule]", "\<\"Epithelial cell signaling in Helicobacter pylori \
infection - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04010\"\>", 
       "\[Rule]", "\<\"MAPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00531\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan degradation - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa05166\"\>", 
       "\[Rule]", "\<\"Human T-cell leukemia virus 1 infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05200\"\>", 
       "\[Rule]", "\<\"Pathways in cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa05221\"\>", 
       "\[Rule]", "\<\"Acute myeloid leukemia - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04064\"\>", 
       "\[Rule]", "\<\"NF-kappa B signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04920\"\>", 
       "\[Rule]", "\<\"Adipocytokine signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05110\"\>", 
       "\[Rule]", "\<\"Vibrio cholerae infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05132\"\>", 
       "\[Rule]", "\<\"Salmonella infection - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04931\"\>", 
       "\[Rule]", "\<\"Insulin resistance - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa00051\"\>", 
       "\[Rule]", "\<\"Fructose and mannose metabolism - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04130\"\>", 
       "\[Rule]", "\<\"SNARE interactions in vesicular transport - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00071\"\>", 
       "\[Rule]", "\<\"Fatty acid degradation - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05145\"\>", 
       "\[Rule]", "\<\"Toxoplasmosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04621\"\>", 
       "\[Rule]", "\<\"NOD-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04140\"\>", 
       "\[Rule]", "\<\"Autophagy - animal - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04664\"\>", 
       "\[Rule]", "\<\"Fc epsilon RI signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04625\"\>", 
       "\[Rule]", "\<\"C-type lectin receptor signaling pathway - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05163\"\>", 
       "\[Rule]", "\<\"Human cytomegalovirus infection - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05170\"\>", 
       "\[Rule]", "\<\"Human immunodeficiency virus 1 infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04330\"\>", 
       "\[Rule]", "\<\"Notch signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04662\"\>", 
       "\[Rule]", "\<\"B cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00532\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - chondroitin sulfate / \
dermatan sulfate - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05144\"\>", 
       "\[Rule]", "\<\"Malaria - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05146\"\>", 
       "\[Rule]", "\<\"Amoebiasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04144\"\>", 
       "\[Rule]", "\<\"Endocytosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05135\"\>", 
       "\[Rule]", "\<\"Yersinia infection - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04115\"\>", 
       "\[Rule]", "\<\"p53 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00380\"\>", 
       "\[Rule]", "\<\"Tryptophan metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05235\"\>", 
       "\[Rule]", "\<\"PD-L1 expression and PD-1 checkpoint pathway in cancer \
- Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05321\"\>", 
       "\[Rule]", "\<\"Inflammatory bowel disease (IBD) - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05160\"\>", 
       "\[Rule]", "\<\"Hepatitis C - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00410\"\>", 
       "\[Rule]", "\<\"beta-Alanine metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04926\"\>", 
       "\[Rule]", "\<\"Relaxin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00010\"\>", 
       "\[Rule]", "\<\"Glycolysis / Gluconeogenesis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04071\"\>", 
       "\[Rule]", "\<\"Sphingolipid signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04666\"\>", 
       "\[Rule]", "\<\"Fc gamma R-mediated phagocytosis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04659\"\>", 
       "\[Rule]", "\<\"Th17 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04217\"\>", 
       "\[Rule]", "\<\"Necroptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00450\"\>", 
       "\[Rule]", "\<\"Selenocompound metabolism - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04066\"\>", 
       "\[Rule]", "\<\"HIF-1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa03010\"\>", 
       "\[Rule]", "\<\"Ribosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05235\"\>", 
       "\[Rule]", "\<\"PD-L1 expression and PD-1 checkpoint pathway in cancer \
- Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04660\"\>", 
       "\[Rule]", "\<\"T cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04659\"\>", 
       "\[Rule]", "\<\"Th17 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04152\"\>", 
       "\[Rule]", "\<\"AMPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05170\"\>", 
       "\[Rule]", "\<\"Human immunodeficiency virus 1 infection - Homo \
sapiens (human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04120\"\>", 
       "\[Rule]", "\<\"Ubiquitin mediated proteolysis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05235\"\>", 
       "\[Rule]", "\<\"PD-L1 expression and PD-1 checkpoint pathway in cancer \
- Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04662\"\>", 
       "\[Rule]", "\<\"B cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05163\"\>", 
       "\[Rule]", "\<\"Human cytomegalovirus infection - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04660\"\>", 
       "\[Rule]", "\<\"T cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05220\"\>", 
       "\[Rule]", "\<\"Chronic myeloid leukemia - Homo sapiens (human)\"\>"}],
       ",", 
      RowBox[{"\<\"path:hsa05135\"\>", 
       "\[Rule]", "\<\"Yersinia infection - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04722\"\>", 
       "\[Rule]", "\<\"Neurotrophin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05170\"\>", 
       "\[Rule]", "\<\"Human immunodeficiency virus 1 infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04810\"\>", 
       "\[Rule]", "\<\"Regulation of actin cytoskeleton - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04910\"\>", 
       "\[Rule]", "\<\"Insulin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04625\"\>", 
       "\[Rule]", "\<\"C-type lectin receptor signaling pathway - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04012\"\>", 
       "\[Rule]", "\<\"ErbB signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04062\"\>", 
       "\[Rule]", "\<\"Chemokine signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05205\"\>", 
       "\[Rule]", "\<\"Proteoglycans in cancer - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05167\"\>", 
       "\[Rule]", "\<\"Kaposi sarcoma-associated herpesvirus infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04218\"\>", 
       "\[Rule]", "\<\"Cellular senescence - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04144\"\>", 
       "\[Rule]", "\<\"Endocytosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05166\"\>", 
       "\[Rule]", "\<\"Human T-cell leukemia virus 1 infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01521\"\>", 
       "\[Rule]", "\<\"EGFR tyrosine kinase inhibitor resistance - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05016\"\>", 
       "\[Rule]", "\<\"Huntington disease - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa01522\"\>", 
       "\[Rule]", "\<\"Endocrine resistance - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04380\"\>", 
       "\[Rule]", "\<\"Osteoclast differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01200\"\>", 
       "\[Rule]", "\<\"Carbon metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04919\"\>", 
       "\[Rule]", "\<\"Thyroid hormone signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04650\"\>", 
       "\[Rule]", "\<\"Natural killer cell mediated cytotoxicity - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04010\"\>", 
       "\[Rule]", "\<\"MAPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04620\"\>", 
       "\[Rule]", "\<\"Toll-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04070\"\>", 
       "\[Rule]", "\<\"Phosphatidylinositol signaling system - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04510\"\>", 
       "\[Rule]", "\<\"Focal adhesion - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04210\"\>", 
       "\[Rule]", "\<\"Apoptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04211\"\>", 
       "\[Rule]", "\<\"Longevity regulating pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04071\"\>", 
       "\[Rule]", "\<\"Sphingolipid signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04664\"\>", 
       "\[Rule]", "\<\"Fc epsilon RI signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00562\"\>", 
       "\[Rule]", "\<\"Inositol phosphate metabolism - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa05211\"\>", 
       "\[Rule]", "\<\"Renal cell carcinoma - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05212\"\>", 
       "\[Rule]", "\<\"Pancreatic cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05214\"\>", 
       "\[Rule]", "\<\"Glioma - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04370\"\>", 
       "\[Rule]", "\<\"VEGF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04912\"\>", 
       "\[Rule]", "\<\"GnRH signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04216\"\>", 
       "\[Rule]", "\<\"Ferroptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04666\"\>", 
       "\[Rule]", "\<\"Fc gamma R-mediated phagocytosis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05221\"\>", 
       "\[Rule]", "\<\"Acute myeloid leukemia - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04611\"\>", 
       "\[Rule]", "\<\"Platelet activation - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04064\"\>", 
       "\[Rule]", "\<\"NF-kappa B signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04520\"\>", 
       "\[Rule]", "\<\"Adherens junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04213\"\>", 
       "\[Rule]", "\<\"Longevity regulating pathway - multiple species - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05215\"\>", 
       "\[Rule]", "\<\"Prostate cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04066\"\>", 
       "\[Rule]", "\<\"HIF-1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04150\"\>", 
       "\[Rule]", "\<\"mTOR signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05213\"\>", 
       "\[Rule]", "\<\"Endometrial cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa03040\"\>", 
       "\[Rule]", "\<\"Spliceosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05120\"\>", 
       "\[Rule]", "\<\"Epithelial cell signaling in Helicobacter pylori \
infection - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04371\"\>", 
       "\[Rule]", "\<\"Apelin signaling pathway - Homo sapiens (human)\"\>"}],
       ",", 
      RowBox[{"\<\"path:hsa04962\"\>", 
       "\[Rule]", "\<\"Vasopressin-regulated water reabsorption - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04933\"\>", 
       "\[Rule]", "\<\"AGE-RAGE signaling pathway in diabetic complications - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00630\"\>", 
       "\[Rule]", "\<\"Glyoxylate and dicarboxylate metabolism - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05162\"\>", 
       "\[Rule]", "\<\"Measles - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04068\"\>", 
       "\[Rule]", "\<\"FoxO signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05223\"\>", 
       "\[Rule]", "\<\"Non-small cell lung cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04720\"\>", 
       "\[Rule]", "\<\"Long-term potentiation - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05169\"\>", 
       "\[Rule]", "\<\"Epstein-Barr virus infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04114\"\>", 
       "\[Rule]", "\<\"Oocyte meiosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04140\"\>", 
       "\[Rule]", "\<\"Autophagy - animal - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04072\"\>", 
       "\[Rule]", "\<\"Phospholipase D signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05131\"\>", 
       "\[Rule]", "\<\"Shigellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05200\"\>", 
       "\[Rule]", "\<\"Pathways in cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04142\"\>", 
       "\[Rule]", "\<\"Lysosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04926\"\>", 
       "\[Rule]", "\<\"Relaxin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05230\"\>", 
       "\[Rule]", "\<\"Central carbon metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04110\"\>", 
       "\[Rule]", "\<\"Cell cycle - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04668\"\>", 
       "\[Rule]", "\<\"TNF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04670\"\>", 
       "\[Rule]", "\<\"Leukocyte transendothelial migration - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04917\"\>", 
       "\[Rule]", "\<\"Prolactin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04658\"\>", 
       "\[Rule]", "\<\"Th1 and Th2 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05010\"\>", 
       "\[Rule]", "\<\"Alzheimer disease - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04914\"\>", 
       "\[Rule]", "\<\"Progesterone-mediated oocyte maturation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04725\"\>", 
       "\[Rule]", "\<\"Cholinergic synapse - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04922\"\>", 
       "\[Rule]", "\<\"Glucagon signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04730\"\>", 
       "\[Rule]", "\<\"Long-term depression - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05152\"\>", 
       "\[Rule]", "\<\"Tuberculosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05110\"\>", 
       "\[Rule]", "\<\"Vibrio cholerae infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05231\"\>", 
       "\[Rule]", "\<\"Choline metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04714\"\>", 
       "\[Rule]", "\<\"Thermogenesis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05140\"\>", 
       "\[Rule]", "\<\"Leishmaniasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05225\"\>", 
       "\[Rule]", "\<\"Hepatocellular carcinoma - Homo sapiens (human)\"\>"}],
       ",", 
      RowBox[{"\<\"path:hsa04659\"\>", 
       "\[Rule]", "\<\"Th17 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04623\"\>", 
       "\[Rule]", "\<\"Cytosolic DNA-sensing pathway - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa04540\"\>", 
       "\[Rule]", "\<\"Gap junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05020\"\>", 
       "\[Rule]", "\<\"Prion diseases - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00020\"\>", 
       "\[Rule]", "\<\"Citrate cycle (TCA cycle) - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03020\"\>", 
       "\[Rule]", "\<\"RNA polymerase - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00280\"\>", 
       "\[Rule]", "\<\"Valine, leucine and isoleucine degradation - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04921\"\>", 
       "\[Rule]", "\<\"Oxytocin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05160\"\>", 
       "\[Rule]", "\<\"Hepatitis C - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04750\"\>", 
       "\[Rule]", "\<\"Inflammatory mediator regulation of TRP channels - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05100\"\>", 
       "\[Rule]", "\<\"Bacterial invasion of epithelial cells - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04350\"\>", 
       "\[Rule]", "\<\"TGF-beta signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05165\"\>", 
       "\[Rule]", "\<\"Human papillomavirus infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03060\"\>", 
       "\[Rule]", "\<\"Protein export - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00640\"\>", 
       "\[Rule]", "\<\"Propanoate metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04146\"\>", 
       "\[Rule]", "\<\"Peroxisome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04360\"\>", 
       "\[Rule]", "\<\"Axon guidance - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04915\"\>", 
       "\[Rule]", "\<\"Estrogen signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05164\"\>", 
       "\[Rule]", "\<\"Influenza A - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00030\"\>", 
       "\[Rule]", "\<\"Pentose phosphate pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04015\"\>", 
       "\[Rule]", "\<\"Rap1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05130\"\>", 
       "\[Rule]", "\<\"Pathogenic Escherichia coli infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04960\"\>", 
       "\[Rule]", "\<\"Aldosterone-regulated sodium reabsorption - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00010\"\>", 
       "\[Rule]", "\<\"Glycolysis / Gluconeogenesis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05142\"\>", 
       "\[Rule]", "\<\"Chagas disease (American trypanosomiasis) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04961\"\>", 
       "\[Rule]", "\<\"Endocrine and other factor-regulated calcium \
reabsorption - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05224\"\>", 
       "\[Rule]", "\<\"Breast cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04622\"\>", 
       "\[Rule]", "\<\"RIG-I-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03410\"\>", 
       "\[Rule]", "\<\"Base excision repair - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00620\"\>", 
       "\[Rule]", "\<\"Pyruvate metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04014\"\>", 
       "\[Rule]", "\<\"Ras signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04932\"\>", 
       "\[Rule]", "\<\"Non-alcoholic fatty liver disease (NAFLD) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05012\"\>", 
       "\[Rule]", "\<\"Parkinson disease - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04928\"\>", 
       "\[Rule]", "\<\"Parathyroid hormone synthesis, secretion and action - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00310\"\>", 
       "\[Rule]", "\<\"Lysine degradation - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04931\"\>", 
       "\[Rule]", "\<\"Insulin resistance - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04022\"\>", 
       "\[Rule]", "\<\"cGMP-PKG signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00230\"\>", 
       "\[Rule]", "\<\"Purine metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05418\"\>", 
       "\[Rule]", "\<\"Fluid shear stress and atherosclerosis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00534\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - heparan sulfate / \
heparin - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04217\"\>", 
       "\[Rule]", "\<\"Necroptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01230\"\>", 
       "\[Rule]", "\<\"Biosynthesis of amino acids - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00500\"\>", 
       "\[Rule]", "\<\"Starch and sucrose metabolism - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa03030\"\>", 
       "\[Rule]", "\<\"DNA replication - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04530\"\>", 
       "\[Rule]", "\<\"Tight junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05203\"\>", 
       "\[Rule]", "\<\"Viral carcinogenesis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04920\"\>", 
       "\[Rule]", "\<\"Adipocytokine signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00052\"\>", 
       "\[Rule]", "\<\"Galactose metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa01523\"\>", 
       "\[Rule]", "\<\"Antifolate resistance - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04152\"\>", 
       "\[Rule]", "\<\"AMPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05145\"\>", 
       "\[Rule]", "\<\"Toxoplasmosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04024\"\>", 
       "\[Rule]", "\<\"cAMP signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05218\"\>", 
       "\[Rule]", "\<\"Melanoma - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa02010\"\>", 
       "\[Rule]", "\<\"ABC transporters - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04630\"\>", 
       "\[Rule]", "\<\"JAK-STAT signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04621\"\>", 
       "\[Rule]", "\<\"NOD-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04930\"\>", 
       "\[Rule]", "\<\"Type II diabetes mellitus - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04510\"\>", 
       "\[Rule]", "\<\"Focal adhesion - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04622\"\>", 
       "\[Rule]", "\<\"RIG-I-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05135\"\>", 
       "\[Rule]", "\<\"Yersinia infection - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04110\"\>", 
       "\[Rule]", "\<\"Cell cycle - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05231\"\>", 
       "\[Rule]", "\<\"Choline metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04114\"\>", 
       "\[Rule]", "\<\"Oocyte meiosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04810\"\>", 
       "\[Rule]", "\<\"Regulation of actin cytoskeleton - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04120\"\>", 
       "\[Rule]", "\<\"Ubiquitin mediated proteolysis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05131\"\>", 
       "\[Rule]", "\<\"Shigellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04657\"\>", 
       "\[Rule]", "\<\"IL-17 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00020\"\>", 
       "\[Rule]", "\<\"Citrate cycle (TCA cycle) - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04390\"\>", 
       "\[Rule]", "\<\"Hippo signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04070\"\>", 
       "\[Rule]", "\<\"Phosphatidylinositol signaling system - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[298]=",
 CellID->1982568702]
}, Closed]],

Cell[TextData[{
 "The results from a MathIOmica time series clustering enrichment analysis \
can be exported to spreadsheets using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["EnrichmentReportExport"]], 
    "paclet:MathIOmica/ref/EnrichmentReportExport"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->488726451],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["EnrichmentReportExport",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnrichmentReportExport"], "[", 
     StyleBox["results", "TI"], "]"}], Cell[TextData[{
     "exports results from enrichment analyses to Excel spreadsheets, \
particularly suited for exporting multi-omics ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesClusters"]], 
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " enrichment analysis results (via ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGAnalysis"]], "paclet:MathIOmica/ref/KEGGAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "). ",
     "An excel spreadsheet is generated for each Class, named after the Class \
key, with sheets created for and named after each Group in that Class \
containing the enrichment output for that Group."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->2038566199],

Cell["Exporting the enrichment analysis results to spreadsheets.", "Caption",
 CellID->1228002355],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AppendString", "\"\<\>\"", Cell[TextData[{
     "String that will be appended to the file name after the class name. If \
a string is not provided the current ",
     ButtonBox["Date",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Date"],
     " is appended."
    }], "TableText"]},
   {"OutputDirectory", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     Cell[BoxData["OutputDirectory"], "InlineFormula"],
     " specifies the location of a directory to output the Excel spreadsheets \
generated by the function. If it is set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the ",
     Cell[BoxData[
      RowBox[{"NotebookDirectory", "[", "]"}]], "InlineFormula"],
     " will be used as a default output directory."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1076877467],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["EnrichmentReportExport"]], 
    "paclet:MathIOmica/ref/EnrichmentReportExport"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->87410953],

Cell[TextData[{
 "We can export the reports, for example to the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$UserDocumentDirectory"]], 
    "paclet:MathIOmica/ref/$UserDocumentDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1660367008],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnrichmentReportExport", "[", 
   RowBox[{
    RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}], ",", 
    RowBox[{
    "OutputDirectory", " ", "\[Rule]", " ", "$UserDocumentsDirectory"}], ",", 
    
    RowBox[{
    "AppendString", "\[Rule]", " ", "\"\<KEGGAnalysisCombined\>\""}]}], "]"}],
   ";"}]], "Input",
 CellLabel->"In[205]:=",
 CellID->1385794338],

Cell[TextData[{
 "We can export the GO analysis results as well, for example to the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$UserDocumentDirectory"]], 
    "paclet:MathIOmica/ref/$UserDocumentDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1754716454],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnrichmentReportExport", "[", 
   RowBox[{"goAnalysisCombined", ",", 
    RowBox[{
    "OutputDirectory", " ", "\[Rule]", " ", "$UserDocumentsDirectory"}], ",", 
    
    RowBox[{"AppendString", "\[Rule]", " ", "\"\<GOAnalysisCombined\>\""}]}], 
   "]"}], ";"}]], "Input",
 CellLabel->"In[206]:=",
 CellID->126518127]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization of Pathways from KEGG", "Subsubsection",
 CellID->36506248],

Cell[TextData[{
 "MathIOmica allows visualization and coloring of KEGG pathways using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGPathwayVisual"]], 
    "paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1912770077],

Cell[BoxData[GridBox[{
   {
    RowBox[{"KEGGPathwayVisual", "[", 
     StyleBox["pathway", "TI"], "]"}], Cell[TextData[{
     "generates a visual representation for a KEGG: Kyoto Encyclopedia of \
Genes and Genomes ",
     Cell[BoxData[
      StyleBox["pathway", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->672020044],

Cell["Visualizing KEGG pathways.", "Caption",
 CellID->1024379935],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AnalysisType", "\"\<Genomic\>\"", Cell["\<\
AnalysisType provides a selection for the type of analysis to perform. \
\"Genomic\" analysis (default) uses gene identifier based pathway \
visualization. \"Molecular\" analysis uses molecular analysis map \
visualization.\
\>", "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BlendColors", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}]}], "}"}], Cell["\<\
BlendColors provides a list of colors to be used in coloring intensities \
provided and is used by the IntensityFunction as its first argument. The \
colors must be provided as RGBColor[] specification.\
\>", "TableText"]},
   {"ColorSelection", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<RNA\>\"", " ", "\[Rule]", "  ", "\"\<bg\>\""}], ",", " ", 
      RowBox[{"\"\<Protein\>\"", " ", "\[Rule]", "  ", "\"\<fg\>\""}]}], 
     "|>"}], Cell["\<\
ColorSelection assigns foreground and background colors in the KEGG pathway \
through an association. The Keys point to labels for multi-omics data, and \
the values \"bg\" and \"fg\" can point to background and foreground \
representations respectively for each key.\
\>", "TableText"]},
   {"DefaultColors", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<fg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"\"\<bg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "]"}]}]}], "}"}], 
    Cell["\<\
DefaultColors provides a list of rules for setting the colors to be used as \
default values for the foreground \"fg\" and background \"bg\" respectively \
in the generated pathways. The colors must be provided as RGBColor[] \
specification.\
\>", "TableText"]},
   {"ExportMovieOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<VideoEncoding\>\"", "\[Rule]", "\"\<MPEG-4 Video\>\""}], 
      ",", 
      RowBox[{"\"\<FrameRate\>\"", "\[Rule]", "1"}]}], "}"}], Cell[TextData[{
     "ExportMovieOptions provides options for the ",
     ButtonBox["Export",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Export"],
     " function used internally to export the pathway list when Intensities \
have been provided for a time series representation of data."
    }], "TableText"]},
   {"FileExtend", "\"\<.mov\>\"", Cell["\<\
FileExtend provides a string to be appended to the file name if the \
ResultsFormat is set to \"Movie\".\
\>", "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. The gene dictionary is used to convert MemberSet \
identities provided to corresponding KEGG identifiers. If  GeneDictionary is \
set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be created or augmented through the use of ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GetGeneDictionary"]], 
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]},
   {"GetGeneDicitonaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GetGeneDictionary"]], 
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input \
when identifiers are provided through setting the MemberSet values.\
\>", "TableText"]},
   {"Intensities", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "Intensities may be used to provide a set of intensities that will be \
used for coloring components of the pathway. The intensities are provided as \
an association for each ID as single values, or as a list of values in the \
case of series data:\n",
     Cell[BoxData[
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{
          SubscriptBox["ID", "1"], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "1"]}], "}"}]}], ",", 
         RowBox[{
          SubscriptBox["ID", 
           RowBox[{"2", " "}]], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "2"]}], "}"}]}], ",", "...", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          SubscriptBox["ID", "N"], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "N"]}], "}"}]}]}], "|>"}], "."}]], 
      "InlineFormula"],
     "\nIntensities must be scaled from -1 to 1, or selected such that the \
IntensityFunction can convert them to a number between 0 to 1."
    }], "TableText"]},
   {"IntensityFunction", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Blend", "[", 
       RowBox[{"#1", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#2", "+", "1"}], ")"}], "/", "2"}]}], "]"}], "&"}], ")"}], 
    Cell["\<\
IntensityFunction is a function of two arguments that allows customization of \
the coloring for the intensities. The IntensityFunction value can be any \
function which outputs a color, I(#1,#2), (*where#1 is the BlendColors option \
value, and #2 is an intensity vector, that has values typically ranging from \
[-1,1].\
\>", "TableText"]},
   {"KEGGAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The KEGGAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGAnalysisAssigner"]], 
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"KEGGDatabase", "\"\<pathway\>\"", Cell["\<\
KEGGDatabase value indicates which KEGG database to use as the target \
database.\
\>", "TableText"]},
   {"KEGGMolecular", "\"\<cpd\>\"", Cell["\<\
KEGGMolecular specifies which database to use for molecular analysis. The \
default is the compound database (\"cpd\").\
\>", "TableText"]},
   {"KEGGOrganism", "\"\<hsa\>\"", Cell["\<\
KEGGOrganism indicates which organism (org) to use for \"Genomic\" type of \
analysis. The default is human analysis org=\"hsa\".\
\>", "TableText"]},
   {"MathIOmicaDataDirectory", 
    ButtonBox["ConstantMathIOmicaDataDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaDataDirectory"], 
    Cell[TextData[StyleBox[
    "MathIOmicaDataDirectory option specifies the directory where the default \
MathIOmica package data are stored. By default the option is set to create \
the standard directory if it does not exist already. ", "ExampleText"]], 
     "TableText"]},
   {"MemberSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell[TextData[{
     "MemberSet selects which members of the pathway are to be considered. \
The choices are:\nAll: return the pathway only.\n{list of identifiers}: a \
list of identifiers that will be highlighted. If ORA is set to True the list \
must be the output from an over representation analysis, and the identifiers \
will be selected from the last list, second sublist.\nOnly IDs that are found \
to match in the pathway are colored.\nAn internal gene dictionary (see ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GetGeneDictionary"]], 
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ") is used to convert IDs to KEGG IDs."
    }], "TableText"]},
   {"MissingValueColor", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0.4", ",", " ", "0.4", ",", " ", "0.4"}], "]"}], Cell["\<\
MissingValueColor provides a color to be used when Intensities are provided \
to represent values that are tagged as Missing[]. The color must be provided \
as RGBColor[] specification.\
\>", "TableText"]},
   {"MolecularInputID", 
    RowBox[{"{", "\"\<cpd\>\"", "}"}], Cell["\<\
MolecularInputID is a string list to indicate the kind of ID to use for the \
input molecule entries.\
\>", "TableText"]},
   {"MolecularOutputID", "\"\<cpd\>\"", Cell["\<\
MolecularOutputID is a string to indicate the kind of ID to convert input \
molecule entries. The default is \"cpd\" consistently with use of the \"cpd\" \
database as the default molecular analysis.\
\>", "TableText"]},
   {"MolecularSpecies", "\"\<compound\>\"", Cell[
    "MolecularSpecies specifies the kind of molecular input.", "TableText"]},
   {"MovieFilePath", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
MovieFilePath indicates the path (including file name) where if ResultsFormat \
is set to \"Movie\"  the movie generated will be saved. The default value \
None will generate a file named after the pathway with extension set by the \
FileExtend option in the current directory.\
\>", "TableText"]},
   {"NonUCSC", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
NonUCSC option set to False assumes UCSC browser was used in determining an \
internal GeneDictionary used in ID translations where the KEGG identifiers \
for genes are number strings (e.g. 4790). 
The NonUCSC option can be set to True if standard KEGG accessions are used in \
a user provided GeneDictionary variable, in the form \
OptionValue[KEGGOrganism] <>\":\"<>\"number string\", e.g. \"hsa:4790\"\
\>", "TableText"]},
   {"ORA", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "ORA can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " depending on whether the input is from an over representation analysis \
(e.g. output from ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGAnalysis"]], "paclet:MathIOmica/ref/KEGGAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "), or not respectively."
    }], "TableText"]},
   {"OutputID", "\"\<KEGG Gene ID\>\"", Cell["\<\
OutputID is a string to indicate the kind of ID to convert input genomic \
analysis entries. The default is \"KEGG Gene ID\" consistently with use of \
the \"pathway\" database as the default genomic analysis.\
\>", "TableText"]},
   {"ResultsFormat", "\"\<URL\>\"", Cell[TextData[Cell[BoxData[Cell["\<\
ResultsFormat provides a choice of output format, the choices are:
\"URL\": returns a URL of the pathway,
\"Figure\": returns figure output(s) for the pathway,
\"Movie\": in the case of series data returns a movie/animation of the series \
pathway snapshots.\
\>", "TableText"]]]], "TableText"]},
   {"SingleColorPlace", "\"\<bg\>\"", Cell["\<\
SingleColorPlace selects in the case of a single identifier input whether to \
place the color to the foreground, (\"fg\") or background (\"bg\" set by \
default).\
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"StandardHighlight", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<fg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"\"\<bg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", " ", "0.7", ",", " ", "1"}], "]"}]}]}], "}"}], 
    Cell["\<\
StandardHighlight provides a list of rules for setting the highlight colors \
for the IDs represented in the pathway (when no intensities are provided). \
The list specifies color rules for foregroung, \"fg\", and background, \
\"bg\", respectively. The colors must be provided as RGBColor[] specification.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->812822320],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGPathwayVisual"]], 
    "paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->961253673],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{"ResultsFormat", " ", "option", " ", "setting"}], "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox[
    "\"Results\" value for returned data",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<URL\>\"", Cell["\<\
Browser URL pointing to pathway on KEGG database, or if a list of Intensities \
was provided a series of URLs corresponding to each time point or sequential \
data in the series.\
\>", "TableText"]},
   {"\"\<Figure\>\"", Cell["\<\
Pathway figure downloaded from the KEGG database, or if a list of Intensities \
was provided a series of figures corresponding to each time point or \
sequential data in the series.\
\>", "TableText"]},
   {"\"\<Movie\>\"", Cell["\<\
Name of the output file that contains the generated movie/animation that is \
based on the list of Intensities provided.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->746904677],

Cell[TextData[{
 Cell[BoxData["ResultsFormat"], "InlineFormula"],
 " option output for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGPathwayVisual"]], 
    "paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"]
}], "Caption",
 CellID->1184989624],

Cell["For example, we can look at the B-cell receptor pathway:", "MathCaption",
 CellID->1676459694],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptor", "=", 
  RowBox[{"KEGGPathwayVisual", "[", "\"\<path:hsa04662\>\"", "]"}]}]], "Input",\

 CellLabel->"In[299]:=",
 CellID->1272628418],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Pathway\"\>", "\[Rule]", "\<\"path:hsa04662\"\>"}], ",", 
   RowBox[{"\<\"Results\"\>", "\[Rule]", 
    RowBox[{
    "{", "\<\"https://www.kegg.jp/kegg-bin/show_pathway?map=hsa04662\"\>", 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[299]=",
 CellID->545314925]
}, Open  ]],

Cell["We can open this in a browser:", "MathCaption",
 CellID->1218512518],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{
   RowBox[{"exampleBCellReceptor", "[", "\"\<Results\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[208]:=",
 CellID->1135832234],

Cell["We can import directly the pathway:", "MathCaption",
 CellID->64193474],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigure", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[300]:=",
 CellID->862926724],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Pathway\"\>", "\[Rule]", "\<\"path:hsa04662\"\>"}], ",", 
   RowBox[{"\<\"Results\"\>", "\[Rule]", 
    RowBox[{"{", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs3U3O48qCJuaC3QMPvQXvwtMeetqGF9AFlxuelIFqA4ZnuadawFmXR+2b
SAhHyWT8Mv75PN/VPZ8kigxGMEKM96OU/9M//1//6f/47/7pn/7pv/4P//i/
//Sf/5//+G//9p//3//1f/zHnf/tX//r//lf/vVf/vf/5V//73/5L//yb//z
P//3/3jw//vHsv/8H/7pn/7xv5/+m5ubm5ubm5ubm5ubm5ubm5vbmNtPn/8C
AAAA0N41iwEAAACgDxkMAAAAwBhyGAAAAIAx5DAAAAAAY8hhAAAAAMaQwwAA
AACMIYcBAAAAGEMOAwAAADCGHAYAAABgDDkMAAAAwBhyGAAAAIAx5DAAAAAA
Y8hhAAAAAMaQwwAAAACMIYcBAAAAGEMOAwAAADCGHAYAAABgDDkMAAAAwBhy
GAAAAIAx5DAAAAAAY8hhAAAAAMaQwwAAAACMIYcBAAAAGEMOAwAAADCGHAYA
AABgDDkMAAAAwBhyGAAAAIAx5DAAAAAAY8hhAAAAAMaQwwAAAACMIYcBAAAA
GEMOAwAAADCGHAYAAABgDDkMAAAAwBhyGAAAAIAx5DAAAAAAY8hhAAAAAMaQ
wwAAAACMIYcBAAAAGEMOAwAAADCGHAYAAABgDDkMAAAAwBhyGAAAAIAxdshh
PmV0c3NzO/EGAAC8xw7zgNlzJDc3N7eeNwAA4D12mAfsUEaAUsY2AAB4nx3m
ATuUEaCUsQ0AAN5nh3nADmUEKGVsAwCA99lhHrBDGQFKGdsAAOB9dpgH7FBG
gFLGNgAAeJ8d5gE7lBGglLENAADeZ4d5wA5lBChlbAMAgPfZYR6QW8bPct+3
p9v8rOP7v6Hb3etS660tU2g9qfK13sfW5chdT43Q/t49V/q6nO1dnytZPlaW
0u3H9ielpD1Kj4naY6Dksdj+xB7rZdR2AACAdewwDygp490crmZ7se2n5tWp
bT6p75w5fc0yLfYx9Hzsda32JyW1vyVlKTnGcjOKnHXFylS7bE3/L8mVQvdz
j4/cZWqPo5L19bDD+AsAALS1wzxgZA5TOw8s2eaMHCbn+af72DJzqJl3x9Rm
UznrKrkm5Pux2v2q3f6T7Ce1fKjuWh0TT3OYkjofOR7uMP4CAABt7TAPWCGH
CS1TM5cemcO0mOvXXn9Q+3jt9mNaX2dyt1xpPbXMYXLW16qf75DDPCmPHAYA
AOhph3lAaQ5zvZVuq3Qbpet4msPkbP9J+WrX0TOHedKm1/XkbDNVvlhZS9ZZ
s82S3G1GDpOzT7FjInRLbS9UhpLyjB4Ldxh/AQCAtnaYB5TmMDmPlbw+tsyM
HCa1nhbXkuSsIzcbaZHD5LwmV262lNrvnNeNzmFi28/dn5zt52Ykse2G1p3z
eOscJvZ4TzuMvwAAQFs7zANWzmF6PF/y2l45UMt9aJnDlG67pFy18/WS6ytK
M4yW22+VP+QcG6mMrlUOk8pjcssT23ZPO4y/AABAWzvMA1bIYUquyUit48k8
sGcO02Ifa7dXUpaa47Xm+pcnOczn8dIcpGaZltvPkdtuscdH5TAl25HDAAAA
I+wwDxiZw9wtXzqHTJXhSRlr8oScMrTYx5DSeXuLrOlu+Zp9flLf1+dqc5ja
tspddsccJvcxOQwAALCaHeYBuWW8+/xB7b6FXh/axnc+8eT5mjKl1pvzmtp9
fFLm0PZK9zlHquwldVuyfyXbzWm70rYo3Z+Up8dTyXI5j9+VoWZ9tfXx1Ixt
AgAAc+0wD9ihjACljG0AAPA+O8wDdigjQCljGwAAvM8O84AdyghQytgGAADv
s8M8YIcyApQytgEAwPvsMA/YoYwApYxtAADwPjvMA3YoI0ApYxsAALzPDvOA
3H/b183NzW3HGwAA8B47zANmz5Hc3Nzcet4AAID3MA8AAAAAGEMOAwAAADCG
HAYAAABgDDkMAAAAwBhyGAAAAIAx5DAAAAAAY8hhAAAAAMaQwwAAAACMIYcB
AAAAGEMOQys/fvz47XbKtgAAAKAVOQytyGEAAAAgTg5DK3IYAAAAiJPD0Ioc
BgAAAOLkMLQihwEAAIA4OQytyGEAAAAgTg5DK3IYAAAAiJPD0IocBgAAAOLk
MLQihwEAAIA4OQytyGEAAAAgTg5DK3IYAAAAiJPD0IocBgAAAOLkMLQihwEA
AIA4OQytyGEAAAAgTg5DK3IYAAAAiJPD0IocBgAAAOLkMLQihwEAAIA4OQyt
yGEAAAAgTg6zrk/bfNqnpp1Sr4m1/3X7qfXLYQAAACBODrOma5v0bKecrKbF
elqSwwAAALAjOcx6YtenjNxe6XblMAAAABAnh1lPTnvkfmbo+zNNoc833T1+
t/x1e3frv3s+td4achgAAAB2JIdZT+n1Kbnf3xLKQGKPX58PLRP7Pba9WnIY
AAAAdiSHWU/PHKbm91Smkvo99VwNOQwAAAA7ksOsJ/X9MLHPFT29dkUOAwAA
AP3IYdZUkmO4HkYOAwAAwB7kMOuKfRdvyff0Xm+h53IfD5Wh5Ht6fT8MAAAA
bySHYUdyGAAAAHYkh6GVkdmIHAYAAIAdyWFoRQ4DAAAAcXIYWpHDAAAAQJwc
hlbkMAAAABAnh6EVOQwAAADEyWEoEfq3sHe4AQAAwGzmqJT4eaz8teGPYxwA
AIAVyGEoIYcBAACAenIYSshhAAAAoJ4chhJyGAAAAKgnh6GEHAYAAADqyWEo
OQZycpi7f6vo7rnUsqXrlsMAAACwOjkMJf/Gc0nuEbofe+7ufsm65TAAAACs
TA7DXQ4TOi7kMAAAAFBPDkMsh7keHzvnMI51AAAAZjM33UdOXtLz9ilDbg4T
+g6Xu/sl3/dS8x0x1yzJMQ8AAMAM5qSM+FxS7vUsuZlKyfauOcx1vwEAAGAU
c1FGfE9vbQ5zd81Lqxzmuv8AAADQmzkoJcdA7xwmN1NpmcPU1AMAAADUMPek
ROn3t6Sei32HTOr1td8Pk7OP+gQAAAA9mHNSIvd6mNV+ao5xfQMAAIDWzDUp
8aYc5nuf9REAAABaMMekROt/C3vkrdW+AwAAQC1zS1r58ePHb7dTtnWlzwAA
AFDLnJJW3pLDfOg7AAAAlDKXpJW35TAf+hAAAAC5zCFp5a05zIe+BAAAQIq5
I628PYf50KcAAAAIMWekxOx/82jmv5dUW1et1rPjDQAAgN+ZL1Hi57Hy14Y/
M4/xp31MnQMAAJxDDkMJmcCzuqsphzoHAAA4hxyGEjKB50r7nDoHAAA4hxyG
EjKBdnL7njoHAAA4hxyGEjKB9lJ9sKTOr9+Te33sbrm7191ts7TtV65zAACA
WeQwlBwDtZnA9zw+9G/rpF6fenz3TCDUDrn7eVdPsQwltvzd6+UwAAAAz8lh
KPn3hp9kAiW5QCgTSGUHJ2QC1zaorfPUcyU5TEld71jnAAAAo8hhCF2fUntt
RmiZVA7T8vETMoHa635yH5fDAAAAjCeHIZbD1Fyb0SqrefL43XI730rzj9D1
SLH1prYphwEAAHhODrOP2VnApwy1GUuPvKUkh9lJaZ2n6iYnV0ltRw4DAADw
nByGnOtgvpctmf+XLlNyHUZJLrDLMX5X73IYAACAc8hhyMlfvpctmf+X5AIl
2cBpmUCs3kuu+SmpbzkMAADAeHIYSo6BFplATS6Q8/uOmUBO3Zfs4933u+Q8
drdMaN1yGAAAgHpyGEqUzsPv5u6hz0Cllok9vlsm0CP7Wu1ntToHAABYgRyG
EjKBZ2r6mzoHAAA4hxyGEjKB+nqrLYM6BwAAOIcchhKxf1tp9dvM+mqxjh1v
AAAA/M58iVZ+/Pjx2+2UbdXYsV/tVl4AAIAd7ThfZE1ymL37085lBwAA2IW5
F628OYc5oR99yr/7fgAAAKzshPkja3hjDnNS//nej1P2CQAAYDUnzSOZ6005
zIn95ro/p+0fAADACk6cT9LP7H9/Z/a/3XN6f5HFAAAA9HX6vJK2fh4rf234
8/QYf0s/udvHN+w3AADAKG+ZX9LG23KYt/WP0L6+qQ4AAAB6ets8k2feksO8
tV/E9vmN9QEAANDaW+eb1Dk9h3l7f0jt+5vrBgAAoIW3zzspc2oOox/8klMH
6gkAAKCe+Sclx0BJDvP9bxV97l8fvy4Tev3387HXlOYwjv/flRwHAAAAlDMP
peTfeM7NPq7L3WUpsdfcvT72eGkO47i/V1In6g8AAKCc+Sih61NC/4ZxaQaT
k7O0fjyUwzje42q+zxgAAIB85qXEcpjr8fEkh6nNVWLrK8lhHOdpNXWkXgEA
APKZn+4jJy/pefuUYdcchjyyGAAAgH7kMIz6XFLrHKbF9/Typ9q6UscAAABp
chhaf09v6++HKb1GRg7zzJO6Us8AAABxchhKjoGSzwGV3K99zOeS2ntaV+oa
AAAgTA5DidLPAn1uocdDy8Tym5zXyWHqtagr9Q0AAHBPDkOJ0s8DrfLjGM/X
qq7UOQAAwJ/kMJSQw5yvZV2pdwAAgN/JYSgx+9/OfnIjT+u6UvcAAAB/M0el
lR8/fvx2O2Vbb9NjPDDGAAAA/CKHoRU5zBl6jQfGGQAAADkM7chhztBzPDDW
AAAAbyeHoRU5zDlkMQAAAH3IYWhFDnOO3mOCMQcAAHgrOQytyGHOMWJMMO4A
AABvJIehFTnMOUaNCS228z2GGc8AAIDVmbfQihzmHCPHhNZZTKt1AgAA9CCH
oRU5zDlGjwlPt3d9vTENAABYlRyGVuQw55gxJuRu8zNmxa5/MaYBAACrksPQ
ihzmHLPGhNrt+lwSAACwCzkMrchhzjFzTKjZtu/pBQAAdmHeQitymHPMHhNK
tz+7vAAAALnkMLQihznL7HGhZPuzywoAAJBLDkMrcpizrDAu5JTh7nt7AQAA
VmX+QitymLOsMi6sUg4AAIAW5DC0Ioc5y0rjwkplAQC4+vd///fbG8AdOQyt
yGHOstq4sFp5AAA+5DBACTkMrchhzrLiuLBimQAA5DBACTkMrchhzrLquLBq
uQCA95LDACXkMLQihznLyuPCymUDAN5HDgOUkMPQihzmLKuPC6uXDwB4DzkM
UEIOQytymLPsMC7sUEYA4HxyGKCEHIZW5DBn2WVc2KWcAMC55DBACTkMrchh
zrPS2PAZq0pvAAC9yWGAEuYqtCKHOY+xAQAgTQ4DlJDD0Ioc5jzGBgCANDkM
UEIOQytymPMYGwAA0uQwQAk5DK3IYc5jbAAASJPDACXkMLQihzlPi7Gh9vt1
V7gBAOSQwwAlzDdoRQ5znlY5zF8b/hgXAYBcchighByGVuQw55HDAACkyWGA
EnIYWpHDnEcOAwCQJocBSshhaEUOcx45DAAAQFtyGFqRw5zp6fgghwEAAPib
HIZW5DBnmpHDXP/doutjoeViz8thAACAFchhaEUOc6bROcx1+WuuEls+9lo5
DADQi++HAUrIYWhFDnOm2TlMbe7y9PNQxkUAIJccBighh6EVOcyZZn0uKfVc
7NqYFt9JY1wEAHLJYYASchhakcOcadb39Ia+1yWVw7T6XmDjIgCQSw4DlJDD
0Ioc5kyz/72k1HfC5GY0chgAoBc5DFBCDkMrcpgz7ZjDtMhijIsAQC45DFBC
DkMrcpgzzf6e3toc5mkWY1wEAHLJYYASchhakcOcaUYO832LPZ96PLYeOQwA
0IocBighh6EVOcyZZn8uadaPcREAyCWHAUrIYWhFDnOuJ2OEHAYAOJ0cBigh
h6EVOcy5nuYwu94AAHLIYYAS5hu0Ioc51ypjhMwEAFiRHAYoYQ5DK3KYc80e
I3KuW5ldRgDgveQwQAk5DK3IYc41a4zIzV6MYwDATHIYoIT5C63IYc41eozI
/d6WuzwGAGA0OQxQQg5DK3KYc80YI0pymO/fjWcAwGhyGKCEHIZW5DDnWu1z
SXflCv0OANCbHAYoIYehFTnMuWaOEbF/FymWvRjXAACAFclhaEUOc64dcpic
+wAAALPJYWhFDnO2Wd8RE9u+HAYAANiNHIZW5DBnm/FvJtUsI4sBAEbz/TBA
CTkMrchhzhYbJ1qPIbnry8lhStYHAFBDDgOUkMPQihzmbKNymJJ1lWQuxjkA
oBc5DFBCDkMrcpizleQw3+NKyRhTOhaVZi7GOgCgBzkMUEIOQytymLOFspa7
2/fzoden1l9TptrHAQCekMMAJeQwtCKHOVvp55JKvi/3yRgkiwEAZpPDACXk
MLQihzlbrxzm6fhTs15jHgDQkhwGKCGHoRU5zNlqcpjU55JajD21+Y5xDwBo
RQ4DlJDD0Ioc5my136EbGmNajTtPrnsx9gEALchhgBJyGFqRw5yt1b9lVLOu
ntsx/gEAT8lhgBJyGFqRw5yvZKwY9T25T695Mf4BAE/JYYASchhakcOcL3es
uP4b1qWvb1km18QAAL3JYYASchhakcOcr8e/L/1Uq+tdjIMAQC05DFBCDkMr
cpjz1Y4VPceYlte7GAsBgBpyGKCEHIZW5DDnqxkreo8vrT93ZDwEAErJYYAS
chhakcOcb9ccprQcxkQAoIQcBighhyHX93ev7najjZb/dnUrchgAYDY5DFDC
PJVcP4+Tvzb8cXy3s2KW0eu7Xxw3AABAD3IYcslhWPH7bntmQ44dAACgNTkM
ueQwtP5O3BZ6X6Pj+AEAAFqSw5BLDsNPsfqcUdcjrnFxDAEAMb4fBighh3m3
kvaXw/BTqD5n1bMcBgCYTQ4DlDg9h2mxb6fXT+6/LVSaw9ytO7Xc537J6+Uw
Y93V58w6HvWdL44jACBEDgOUkMO0ec2uSv6t55oc5PqanPvfj6WWl8OMd63P
2fU7so/P3lcAYE1yGKDEyTnMZ7/8GylhsRzmemy0zmFi18fIYdZ1PSZmG521
rrDPAMBa5DBAibfmMN/7fZ1XXp8LPZ9aJrTt2n2ZefuUYUQOk/v6kjKcfJyP
1vrYfmrGtS2r7DsAsAY5DFDi5Plp6u/2sSzmbj13y4Re1yOL6SHnOpjvZZ9k
IJ9baQ5z99rSMlz3l3qr1eGMHKbF6wGAc8hhgBKrzalayskVUr9/3w/lMHfb
SGVAq8jJX76XrclAQo+VXg/TIoe57jflVqs3OQwAMJscBihx6nw0lbtc7+fk
MJ/fczKW3XKY3GVH5DCh7KVlDlOz/6xZXzM/X7RaXQAAc8hhgBIrzqta6JHD
1F5Tc0r9ts5h7p4vvf80h/net1PaqZdVP2c3M4dptQ760DYAjCKHAUqcOP8M
fU7o+7HQ/dDvofvX5VPr3llpBnL3madQLnP3XOrxljnM9z6mlj+hLUutnCuu
cE3LanXCL9oFgFHkMECJUzKCEWLX07xB7eeCZv/UtFPs82Zv6zM515bNtEIO
03I9tHM3Zp+WjwOwBjkMUMK5aD45zHtymM/+huZxb2n7WB61CjkM30LX4YXy
F+0GQAtyGKDEm+aULbxtHv4tNr9Z/dZrv08W27+V9n2lzxWtVC+Uf08YANSS
wwAl3jCfZIwfP378djtlWx9vymJS+7Xafq9yTUzrdfHMyBxmdtY8K6cG4Bc5
DFDCeRitnJzDvGkek7M/q+3zStfEtF4X9UI5zPfjLXOY2Z/BHPm5TQB+J4cB
Spw4j6SP2X+znfn33rf8TTl3P1bb39VymB7ro41Pu7Tut3IYgHeTwwAlTppD
0tdb5xlvuba/ZB9W298Vc5he6+SZXm3y1vERAIByp8wh6c88I1wvJ9xK93kl
rcrjmpjzyWHGjo8AAPxJDkMu8wx19L2fK1k1h+m1Tur0vH7tLX0fAIDn5DDk
Ms9QR9/7uZLW3/PR2mr1RZ6S98dY37+7/qxl371bZ+62HJsAbfh+GKCEHIZc
tXOHHnOP0u2vXkezf2rqaKVxY/Ucpud66afk83s5eUfsfm2/vbtfsi3HJUAb
chighByGXE/mDTPzCTlMnzpaadzYIYfpvW7aK/k+pRk5TGobOdtyTAK0IYcB
SshhyCWH6VtHM3/kMH3X13u99FHy/dZPc5jrNYPf96+P56y/5DkAnpPDACXk
MORqmcPcfVdCaN7x9GfVHKbkex1S3y/x9LNfOfNNNze3+1tO37973d34eP39
c//6+926Y9tOlQuAZ+QwQAnnYORKzTNSc5DY76G5R4ufkcd3ablDy989HqrD
1Lp61dFK40aPsvTcv5XqjrBU9nJdtrSv3417uflMzTZifd+5AMAzchighHMv
co3MYWq3E5tnxParVf20ymFSdXK3LTnM+uscuX6ey8lfvpct7eup8e9pDpMz
Jlz3yTkBQB05DFDCORe5WuUwdznCrBzmyfFf89mEVL3cPVczf2tZR7H9X8WO
OcyobVCvZHxYLYfJHRtC++fcAKCMHAYo4VyLXD2uh4k93yqPSc0zSo7/1GtG
5zCt6ksOM3a9o7dBf6m+fHfLWea7f19/D60vta2Svu8cASCPHAYo4RyLXLXz
/NQ84frY9fenP6Hr7nNymNzlauuo5m/o18flMHIY5mt9Hd+on5LrfQAIk8MA
JeQw5GqZi8Tu95xnxP7mfPd87zpqkcN87sth9lv3yG3Q1+k5DABxchighByG
XLvnMLEMplU/aJHD3F3rUvq62joq3ddV7J7DjNwOfeSML6venu4vAHIYoIzz
KHK1zEu+z+FbrTNnWz0zmNI6CpUjVUexx5/UUe3+ruCEHGb0tqAV5xEAchig
jPMncs3+m+2KfxO+q6PeuVKPHznM3PXP2ha05HwCeDM5DFDCeRO5TswYUllM
ad84sY5S+7uCk3KYGduDlpxXAG8khwFKOF8i19syhs8+ly6/621E/fQyohyu
iYEyzi+AN5HDACWcJ5FLDvN7f6npOyMzoRFWKdNpOcyM7QEA9eQwQAk5DLne
ksOkrhm59pmS9cth+jgxh5m1TejJMQ0AIIchX20O851jtFiudw5z3efUY6Ny
mBavb22V8owqR2o7PcqxSh1DK08/DwkAsDvnQuR6ko/kZDAly8th1rBKeU7O
YXquF2ZzDgIAvJFzIHLJYf5+bMbnklquo5VVyrLKd+i2/j6hnG3CCZyLALvz
/TBACec+5GqZw9x998r3460ymKc5TKgePv8d+T29LdfRyiplmZnD9Pw+odh2
4UTOSYBdyWGAEs55yNUqh7n7fdXrYUL1MOO1PdbTwgplWfV6mLvHVjh+YHWO
dWA3chighByGXHKYv+thxmt7rKeFFcoyugyh7fXOYVq8HgBoTw4DlJDDkKvH
55Jiz6+Ywzz9dz5al2UFbyxHaQ7T4nNJOduHUzlXAVYnhwFKOLchV4/rYXbL
YZ4afW3OiH1fpX5XuSYmtFzrsXaVeoeRnLMAq5LDACWc05CrNhu5fhfv3WN3
39krh3m+PjnM/O31Ktcq9Q4zPL02EaA1OQxQwnkMuVrlI6nPKLX+Wen47lGW
ku+Njf07Pj22P9Lbcpje64ZdOI8BViCHAUo4fyGXHOa5ETnM9dqi69+NW39f
ySr1O6McOdcj9R5jV6l/mM35DDCTHAYo4byFXK2/s+X6uSQ5TPv1hr43tmWZ
VqnfFXOYUVYpBwC8lRwGKCGHIVfsOovVb6uQw/Qzqxxv339YmX4BjCKHAUqs
Nk9lXz9+/Pjtdsq2Whr9+ZTQYz6X1G+7q5QD+MV5DjCCHAYo4fyEVuQwaSt8
T0joe2J6b7e3mfnHKtdfrdIWsKLZ/RM4mxwGKOG8hFbkMGm9+1rO+nuUYYUx
ZNb3w6yUw3zKBITl9NUV+jL5Zn/2+cQb5eQwQAnjLa3IYdJG9LXUNkbnMN9j
TM/xZuQ4tvr56wplgB2E+uxK/Zl72qgv9VtODgOUMMbSihwmbXYO0+u8Kif7
+V5mdBbUw8o5zE+rlAN2cB2fVuzT/E2bjKW+88hhgBLOMWhFDpM2qq/NyCRK
nj8hh/lsc+U520plgV2s3q/fTFvMo+7T5DBACeMqrchh0t6Qw9zNW07NYT7b
XXW+tlJZYAerf+bw7bTBXOofoB3nFrQih0kb/R0mq2zrxM8lXbe96lxttfJ8
W7G+eLdUDuN4nUfdr0E7ALThvIJW5DBpK2UjI7f1eb7neDN7HFt5nrZ6mVYs
H++Tk8E4VudQ72vRHgDPOa+gFTlM2mrf2zJqOyPKscI4tvJ4ulq55DDsQhYz
nzpfi/a45/thgBLOKWhFDpO2Qg4z4zNBb8lhflqlHHdWLdtK37G8w418s9tK
O7ehPtaiPe7JYYAS3u9pRQ6TNmu++flvr/4eW+eoeUXt+mfPtUbP01Yb72eV
5+d2/9rwZ7X2W5123p+6WI82uSeHAUrIYWhFDpM2K4cZ8XfW2ePIk1xi9pxr
5Dxtdjt9m1mWt7X7W2nn/eXm/D3e32rWOaLtWu/vivu4IzkMUEIOQytymLSR
fW309e6zxxE5TP+6ak0OM7bd30g77y9VF9fne2QxT55v7Xt7M/N4x+if5DBA
CTkMrchh0kb1tR6fZ8nZ5kxymDH1dYq3tvvbaOf9yWHab2+VdZxGDgOUkMPQ
ihwmzfUw/chhxtVZK66HmdPuJ8gdy5628934qZ2fK3kveprD3G0r9t54Xf76
+9392GtDj6X2Lfba0OtS+5oqc27Zcp5/IzkMUEIOQytymLQZfzeTw6RfN2YG
veY8bXa7zVLa7td5+N28/LrOnNfMavfd5Y5rLfr3Xbu26cXvbedQbhFbNvZ8
6Di4y1NiGcvT14WWv3tNLO/I2Y/Ya2rLnFO2VDneTA4DlJDD0IocJm1WX2uV
w4RyndRthF45zN3+hJ4PvTa2fGg+n5qvy2GeqZlLp+bjoWMgtYz5ebnc8UYO
s6a7dgq9X5TkNLH1Ps1hQuWszWFCry957d3rcnKUJ2XLee6t5DBACTkMrchh
0mb2tdG5yGi9cpiceVgqL2m5vh7ztFOPiZjWOcx3rva0bUe1+85y898ROUxp
Pqud87KEnGWvz8fyhdg2YuspyW9Cy5e8vuS1qWXkMGPJYYASJ8/LGEsOkza7
r52cxZTs03W+1mIeFnttyetz522t2/DEYyJm5xzGrez2pL7v6rzkGKjdfsn+
XY/rXV4X65vfr4kte/f89/2730PrK3ld6PfYdnJfX/La1DKlZc7dVuq5t5LD
ACXu3h+hhhwmbZW+tko5Wso5Vw/NB3LmRLVz65y52d0yLedpbu3m56G2at2+
se0Tn/9fl2tR56G2vfZF7Zznbv9C56OpLCDU7p/HYs/HHr87rmKP3a33bjux
16fKGCp3qPyp/Y/tc6xsn+f4nRwGKBEbY6GEHCatV1+bPZ99cmtZB7F6ib0u
Z050vYXmaTlzuLvXl87deh5Lb1Ba37ltGDs+arc5ot13kzuWtKrzu99Dz2nn
tFhOEVq29bZ7rf8t1Nuf5DBACTkMrchh0nrOnZ+e98/46XF+XZrx5OYwscda
5DCp9fSuu2udnK5lDpN7fJift5Pbx1vnMLG2zz02tHPZuaccZk3q7U9yGKCE
HIZW5DBpcpg+c40n19eMzGE+93PndSPqLlQnp3vSZ3Kuhyq5Zqp02+R7Wu+x
a5y+c5frcjXXuGnnez3q4sl7Rqttt152tFXLNZMcBiix8hjPXuQwaXKYdnON
u/PolXKY2DUQqTl6bpl6Ov19oVUOczdPDz1Wu72R7X6aN46Np1m1Lp6+f9Us
u1JdrFSWVchhgBJyGFqRw6TJYZ7NNVJ/w+yRw1z/1h2bc4f+Jp66/iVnHj9j
nnbye8Nb+szbaef9rVoXcph1yrIKOQxQQg5DK3KYtBVymFimEHo+lS3k5Aa1
c42S68d7XQ+z4s+ocfvU9wft/g7aeX8jx7rv95rY/dD1mHfvVbFrN0PruL4+
tp7YOnrWnWMU4Bk5DK3IYdJWyGE+5/ih+6W/391/OtcoyV6ur+tdd6v8jBy3
T3yPiOWNq9/IN7uttPNzI+rimmOEtl26XGr5nPXVlu1uGy05RgGe8X5PK3KY
tJ7nQ6Vz+Nj9ksef5Bh3541P6qjmtbPnWjvM07xHALOMzmFCj+dmMt/3Q2P1
3eOh8b11RtSC9wSA5+QwtCKHSTsth3mSwXxe33IMWmUsi5Vj1zF3xzIDZ+g9
/qTG7LtlcjORz/2S62FytiOHWY/vhwFK7DonYD1ymLSVcpjrrTSHeZrBfK+n
ZT2sIlWWHcfe3coLnGFkDhO7tuXJa1K/l14DI4dZjxwGKLHjXIA1yWHSVsph
ah/7frzF9TCf8reom5XGstyy7DYG71RW4AyjPpuUc01KaPnQZ4pSj4V+Ty1b
s/5WvA/ck8MAJXabA7AuOUzaaTnM0ywmdO12bT2tNJaVlmWnsXiXcgLnmDnu
GPP+pi7C5DBAiZ3O/VmbHCbtxBzmSRYTq4+aTGa1saymPLuMyTuUETjLjHHH
WPc3dREnhwFK7HLOz/rkMGkr5DDf+cb3LbZc6vHYempzmOv+5Sy72lj2pDyr
j80rlw0408hxcfUxeDR1kSaHAUp4n6EVOUzaCjnMSj+1n90p+Qz/TK2+82a1
/fpYtVzA2Yw9Y6nvPHIYoMTK5/jsRQ6TJod5lsNc9/nu+2VW0rI8q47VK5YJ
ON/ddZ20oV7ryGGAEsZYWpHDpMlh2uUw3/u+8vlij3+nYrX9XK08wDuFPnfr
VnajjhwGKGHMpRU5TFrPHGbXW496WEnvNl/FSmUBgNHkMECJ1c7l2ZccJk1f
6+tTvyv9Xa93Gd6ynwCwMjkMUGKVc3j2J4dJ09f6uqvfFTKZEdte4dhaoQwA
MIMcBigxe37COeQwafpaX6n6nTXejdrmCuP57O0DwAxyGKDECuftnEEOk6av
9ZVbv6OvkRnd7rPHdcc5AG8jhwFKzD5f5xxymDR9ra+a+h01Bs66DmfWMedY
B+BN5DBACTkMrchh0vS1vp7Ub+9rZGZfn3Ly57EAYDY5DFBCDkMrcpg0fa2v
VvXbI5NZoe1Hj/cr7DMAjCCHAUrIYWhFDpOmr/XVo35bjpGrtP8u342zSn0B
AEBLchhakcOk6Wt99azfFtfIrNb+q383zmr1BQAALchhaEUOk6av9bX6vw+9
avuPeB9oUV/f5fTeBQDArpzL0oocJk1f62vWvw9d8u9lr6z3+0HOur/r9Hq7
K+PqdQrAO/h+GKCEHIZW5DBp+lpfO/ybRDscA6v8u1F3y95dIwMAs8lhgBJy
GFqRw6Tpa/3NruPUNTKzy1eix/uDHAaAE8lhgBJyGFqRw6Tpa/2tVMd3mcxK
5cs169/wDuUwu9cnAOeRwwAl5DC0IodJ09f6W7WOr99xsqMZWUzodd67AFiJ
HAYo4VyWVuQwafpaf6vXcYt//3qmlmXP+dxR6fMAMIMcBiix83yAtchh0vS1
/nao4xOu6WhV9utnjOQwAOxIDgOU2HkewFrkMGn6Wn+71PFd/rBL2b89Lfc1
k4qta+d6AuBschighHNaWpHDpOlr/e1Sx7F/T2mXffj2pNzf+cqu+w/Au8lh
gBLOeWlFDpOmr/W3Sx3nfP5mx/G5tMx3Gcxu+wwAchighHNeWpHDpOlr/e1U
xyX/fvNuY3XJZ4zkMADsTg4DlHDOSytymDR9rb+d6rimrLuN2bHyymIAOIUc
Zg055xSxx2r+LUeo4XyXVuQwafpafzvV8dPvt91p/K7JYwBgF3KYdeRkKSV5
i3MSenC+SytymDR9rb+d6rhVWXcax0vyGADYhRxmHTl5SuiamNBrnJfQmvNd
WpHDpOlr/e1Wxy3Lu1OGkZvHAPDL97hojFyPHGYduTlM6LG71+hvtGYcpxU5
TJq+1t9uddyrvLtkGak8BoC/XcfMknEy9Z1cK992IIdZR0kO8/176rNKuxyL
7GGn8Y21yWHS9LX+dqvjEeXtNc7PPi8//ZweVjW7/76571/3oWSffi7714Y/
u7SbHGYdrXOYk8YQ1uGYohU5TJq+1t+OdTyqzKXnEanlnNPDO+n7Y9yN2XIY
SCvNYT73c/qX45FW5DC0IodJ09f627GOZ5Q5Z+xPLeOcHt5J358nlcukXju7
Dd7aboyVk5+0WgZqyWFoRQ6Tpq/1t2Mdzyxz6BqZnOtwndPDO+n783x/fqJ0
f7Qbb5DzmcTY47FlfD6JlhxLtCKHSdPX+tu1jlco9/f7Qc73Kjinn6d2DuZz
7r+ovz+VfmZxdj9+c9+/eyxn31Lt9lnP3WOfx0Nz3OtrQutOvXbndvP9MECJ
E88lmEMOk6av9bdrHa9U7tj58nW52fOqmp+V6rpWaSYQ+3vgG6m/P5XUSW3f
v5vTp5aNvf6tff/usZy2y808Uo+V3r8+Fvp993aTw4xx2tjLezmWaUUOk6av
9bdrHa9U7lgO813O3L95lsyhSuZpOa/f+Zw+Jjcr+142tp63UX9/Kq2Tkn4Z
mqun1pOTCZSWYWexTDyn7XIzj5qc5fpczjKntZscZozaHD13eRjF8Ugrcpg0
fa2/net4lbKncphPOUPn0rFz9pJz85x5Ws1cYZV6fiK3jT7Lptb1NurvT6V1
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
MP7QghyGVuQwafpantA8ouTcfVZd516Dcv1bcOi52GtC64g9J4eBMq2uh0nl
H6H1Pvn9WobQdmqzldqyyWE4kRzmPYw/tCCHoRU5TJq+Vu/u7745y4+Wm8Os
9rP6sbl6+ThXTQ6Tm2+MymG+n8u5biW3zK2u56lhTGA1cph3MQbxlByGVuQw
afpavdK6k8PIYaCF0mvvWlwX0uN6mNxypF7Xomwt+rMxgdXIYd7FGMRTchha
kcOk6Wv1dsphdr2tbPXyca7c6+9C/SjV5+6uUYk9llrHXTlS6yy5nypPaTlr
+7YxgdXIYd7HOMQTO5x/swc5TJq+VqfmfP0tdW0/oa83HHt3uc3q23tDu7AX
Ocz7GId4Qg5DK3KYNH2tj92v9Xjq9P376Q37yJrecOzJYeA5Ocw7GYuo9YY5
CmPIYdL0tX7kMGd7wz6ypt2Ovdoxb/R46XNJnEYOA5R4wxyFMeQwafpaP2/N
YD5O38/T94917XDsjb6eZQVv2Ef2IocBSrxpnkJfcpg0fa2vN+cwP52+r6fv
H2va4biTw8B8chigxNvmKfQjh0nT1/p6cwbzcfI+n7xvrGv0cRf694Xunv++
f33s+7+h9cb+HaPQ+lcZX2dvH67kMO9lPKLGCu+lnEEOk6av9SeHOXefT943
1jXjuMvNVe5+v74+5zU1659thTLANznMuxmTKPXWuQrtyWHS9LX+3p7D/HTq
fp+6X6xtVg4Tuh+7/iW0fOz3UIaTm8nMsko54EMO827GJEq9ea5CW3KYNH1t
DOPamcfaifvE+lbKYWquVwllL7XrXKUfrlIO+JDDYFyihPkKrchh0vS1MYxr
v5xWB6ftD3vY9XNJvZ5boR+uUAa4ksNgbKKE+QqtyGHS9LVx1PV5dXDa/rCP
0cde6Dtzvx+7++7c6/N360h9xij22c5V+uAq5YBvchh+Mj6RSw5DK3KYtLf3
tev5/U63Xe1c9quT9oW9zMphVrNKuVYpB3yTw/CT8Ylcu88xWIccJu3tfe3n
/v+14c/u7bZ7+T9O2Q/2I4dZq0wrlQXgyhhFDjkMrchh0t7e1+Qw89gHeGbU
8bfadXgrleWnlcoCcMc4RY7V3l/Zlxwm7e19TQ4zzwn78NMp+8GeHH9zqX9g
F8YrUuQwtCKHSXt7X5PDzHXCfpywD+zLOdM86p3V+X4YvhmzSHFOQStymLS3
9zU5zHy778vu5ecMjsOx1Dc7kMMAJeQwtCKHSXt7X0vlMHf/TlFquc/9u2We
bOPUHOannfdn57JzlpP+XbXVqFd2JIcBSniPoxU5TNrb+1pu5lF6vySHyVmn
HGZdO5ed84X+3Xu3shvsSA4DlPCeRytymLS397WnOUzsGpe7+6XLvyWH+WnX
fdq13ACcTQ7DHecthMhhaEUOk/b2vtYrhwmtQw4Tt+N+7VhmAM4nhyHEuQt3
5DC0IodJe3tfy81hrrfaHCb0mtD635bD/LTbvu1WXgDeQQ5DiHMX7shhaEUO
k/b2vlZzPUzO9S2lOUvueuQw69mtvAC8gxyGGOcvXMlhaEUOk/b2vtYrh8m5
/mXXHGb292Wu9l2bb+9DAKxJDkOM8xeu5DC0IodJe3tfe5rD5GQqJ+YwJWVd
5adnnb29HwGwHjkMKc5f+CaHoRU5TNrb+1rO9+HGvh/mbrnU49fHSr4XZkSm
8LTOVv2RwwDwJnIYUpy/8E0OQytymLS39zWZgjprVScAsBI5DDmcw/Ahh6EV
OUza2/uaTEGdtaoTAFiJHIYczmH4kMPQihwm7e19bfb3xq72nbO5dTY7U5HD
AECcHIZczmP4afYcg3PIYdL0tbFOqO/aHCb2HTsl37/zZPs96wQAViKHIZfz
GH6Sw9CKHCZNXxvrhPquyUHucpfQc6nn5TAAkCaHYYYe13B/r0dW0I+6pRU5
TJq+NtYJ9d0ih8nJVD7PtfoclBwGgDeRwzDL9byoVRbTcn0t13MKOQytyGHS
9LWxTqjvJ9ej1OQwrbKYnu8tJ7QrAEALcpg9yWFoRQ6Tpq+Nt3udP8lErt/v
kpvD3L22Ztuf8rf+vuPd2xQAoNd5UWy9d+dkd+doOTlMal13j6ceuz4e+nxU
7nZan4O2tGq52I8cJk1fG2/3Om91bUppDpOT3eTkMHf70+J9Z/d2BQBo+X0u
qXOsu2wllLekcphUblOy/lR5YutILRMq/wrkMLQih0nT18bbvc5Py2Gu+1b7
HrR7uwJwFt8PQ43WnyGqeSx0rUrJukrznNIcpqSMOdfyrEAOQytymDR9bbzd
67wmB7m+5vv+3fpiz/fMYa77WZLL7N6uAJxFDkOtHtcIP3ns+vjIHObze06W
UprrrEYOQytymDR9bbzd67w2h/m+lTyfem2vHOZuv3OvrQWA2eQw1Hr6OZqa
zKX355JK1xnLTVqvbxVyGFqRw6Tpa+PtXuctPpc046dlvaeuRQWA2eQwPFF6
XXDodanX3z1/d46Vs87Q+dn3Y6HfQ69PrTdnO9/LrEwOQytymDR9bbzd61wO
82d91JynAEBPchhqleQop2uZpaxej29va9qRw6Tpa+PtXuehv0nscOtdL9f6
AYBZ5DCUmnUOtbJWOcwOdfj2tqYdOUyavjaeOj9T7vWxADCCHGYNOblG7mdh
vp8bWda3n8c8qYed6m+nsrI2OUyavjaHej9Pqk2dz8Be9NN76qWtnvUph1lH
TpZSkrf0PG5a5jC9yznbCmVoyTkqrchh0vS1OdT7eUrbVCYDa9M376mXtuQw
75CTp4SuiQm9ZnQWU7ueEa9Zwa7l/ua8lFbkMGn62hzq/UxPzlNK3/u8V0Jf
sc8NvLn/qZe2etanHGYduTlM6LG71/Tua0+zmNpy7jqG7Frub8ZwWpHDpOlr
c6j3M7Vo19xzHp9zgvZS341w7W9v6Xvqpa1R9SmHWUdJDvP9e+qzSqOzmNLX
fv/3br2h3++uEwpdO3T9/br92mVy1h8qd+r+qnYoI3uQw6Tpa3Oo9zP1aNfQ
e/fTv1MBcan5T2iZ06mXtnrWpxxmHa1zmJHv/U9zmOvvqedjr6vJUEqXyVl/
aVnv7q/I+SStyGHS9LU51PuZRv9dKieLyXnNqreRZu+relqvnu5ec30stN7Z
+9qznp7Uy5vqKVfL+rwamcPMbo8V2jJVP6nH79o951iYvQ+x5WP1HNr3VJ3s
8HvquVWN7BOcTQ6Tpq/Nod7PNPJcKPec8uf9vzb8Gd1H1JN6utvXu8dyzq1P
rqcn9fKmesrVsj6vRucws9tldlum6if1WKtlVlC6LyfmMN+PrdhGd+QwtCKH
SdPX5lDvZ1olh7meF8w+z1353Fg9qafS/f/8N7bOt9VTbr28vZ5K6uXz3yfb
ksPMb8tP3eT8zST0eGyZ0Otmk8P8/thq7ROy4rHEnuQwafraHOr9DLlZyOjt
fm/fuXF+nc7eZ/W0fj3lrudt9fTkdbP3eWQ9ldRLC3KY+W35RiV5Uei8pSR/
ir2+ZJnUukvWed3HXchhaEUOk6avzaPu9zcjhyldt3Nj9aSe5DC960kO05Yc
5py2hJ2OMTkMrchh0vS1edT9GWZcD1PizefGJe1QW0937a6e1vtpWU8563pT
PeX+Tfjt9VRbnzNpyz519b387PZe5Vg71W5163igFTlMmr42j7o/w4wMpmRb
n3PjVnnB9fXf64ltI7X9u/W2rqfYOp/MIe72Zac5xKh6yjkOcl+7Uz2lyn13
7IfqKdW3rusNbS+2rln11Op4StXzk+21rKcdjG7L3DbOfe3Itiytq+vzs+a/
o89f3mLXuty13KxHDpOmr82j7s8x+jwmNPe4K8N1jvXk3DWUnaSWST0XWm/P
erpbttX8odVcL3fbu9TTk/qKHUc71FNpPlDTj1psb3Y91fyUHE9ymDIj27Kk
3a79YdUcpjRvmTEHLmnj2vWzDzkMrchh0vS1edT9Od6Qw8TmdCXny7nr7D0f
vG6jZw4Tmvc+nT981rNLPZUeB6XLrFxP3zlHyeOpuijNHFL9eHY91bZtj2VT
69nB0++HGT2GtnifmdWWJe/JqfWMVNLGtetnHyPOYXkHOUyavjaPuj9Lq3OW
0m2lzplyc5BUVpB7npvaRurc+ft8fNTtWk815/Gherrb/9x5dM22V66n3OPg
Wo+lx+CK9XTX9jmPl7wmVc+x1+zY71J19X3M3P13l+Nph1uLMTTn+My9v3pb
Pnl/D62n9+tqz1W+/8v6nrQ3fJPDpOlr86j7szw9X6nZTs650vf56XXZ2Dzm
7nWx89fUNlLPXbfToh5r66l2DhGaD1z3ObT/tdvepZ5yj5Hcet2pnnL6WEkd
5dRH6FiMLTu7nnocT6m6n3U8jdDzepi7ZZ/UZ+q4Tb13zG7L3LpKbW/0sVXS
xjXr/v7v3Xbvnr9u/27ZVLlb7sebqDNakcOk6WvzqPvz9Hj/Cp0X5Z4v5c5r
r+e4oflL6vw3tY3c8+Je88Gcemo5h8ip89rttppDjKqnnDr5rpec42+Xekpl
ATX9KFUnufPV67Zm1lNt2+bU4+d+q23uoEcOE1v2SX3e9fvYcVvy/Ii2zK2r
2ud6KWnjmnXf/X7d9vfzodfcLZvaxi79dCVyGFqRw6Tpa/Oo+zM9adfSc96c
98ucHKYkn0md/66Yw+Qu++Q8PqcOcubfM+YQo+qp9Bg5qZ6e5DAl9ZdaR05O
MbOeats297ncDCtnmztolcPkLtuq/UrfO1bKYWqXnTX/7bnd1PnMXYYSes2T
38knh6EVOUyavjaX+j9Hzd+UnvwNqubcOGdOkvtY7vlyzVx6xnnAkznEXU71
/djdsRHLtmbMIXrXU80xsloO86Sent7/fix3jlrTN2fXU23b1tTVCnP33p7m
MCXensPU1NeTc4DVpXKX6/3vHCZnfals57T6HOXEY5E55DBp+tpc6v8MOX/b
mnXOdZcFXM9BU7fY8qHncl8Ten7H+eCMn93qaVZuNbOe7sofez6276F15T52
9/zO/a6krkL3dzieaq2ew+Qcu6n+/3R82KUtd9Mih8n5PbQN7VpHDkMrcpg0
fW0u9b+/2HvW6MwlVIYn85xZP7vNB9XT2j/qST3tXE+1Vs9hVvjZpS13cnfu
c30sdP/6e+76rtunzuxzVs4hh0nT1+ZS//tLteHsNnZurJ7Uk3pST3vXUy05
zDltyd9i19Xc3SefHIZW5DBp+tpc6n9/O+Qwu97Uk3pST+pp1dsORucwu97Y
y7XNvu9rz2f0CVqRw6Tpa3Op//2l2lAbAzDDyByGd5l9bnPN0eQHbahHWpHD
pOlrc6n//cXes7yfATCLHIbWSq4jcs3RfrQXrchh0vS1udT/Ge7et7yXATCT
HIaWaj7P5TxoL85daUUOk6avzaX+z+Ez5wCsRA5DK7XnN86F9uL8lVbkMGn6
2nza4CzaE4AVyGF46ul3G1+/Q/f7+1xaLRP6PbQfsf38fm3sWufU9mPbLS3n
yGxEDkMrcpg0fW0+bXAW7QnACuQwPNHi35iKfWY7lrnkLBP6/S5PiZUp9trQ
emI5Sc52U+VMbbMXOQytyGHS9LX5tMFZtCcAK5DDUCuWwTzNYUb/XpLDfP8e
u/Yltr7cHOZu+dj1MXIYdiKHSdPX5tMG59GmAMDO3p7DhISufynZbur1oXX0
JoehFTlMmr42nzboo/TcIdUOd38XqV0XAMAO3p7DpD4jFMplaq6Hyd1mL3IY
WpHDpOlr82mDfnKuH009fvfc00wHAGAnpTlM6HM9d5/DCWU9od9Dr8lZf+6+
xbZ3fe3d8qn1pvY9VI6e5DC0IodJ09fm0wb95GYusWtcWuQ2ADCa74ehNec3
fzqpTuQw6ym5Hj+2jpxt5Gy/Zv29yWGopQ366ZnD1GwXAEaRw/CU85m0k+pI
DrOWkddG5WQ1LdbTgxyGWtqgn9IcJvXc92Op7BjYT+w6d7e6G/PIYXhKH447
baw7aV92N3qOIYcZT19bg3booySHCb2X1oyD2hP2cdp59GrU7zxyGJ6o7bOz
+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
2V2+1/qxlebTMTX9YNU8U37Xrg5XadM7OdlITq4Ses3dMnfXy8Db6QdyGKDM
6udY9BW6RuXumEjNVXKubcm9/mV0DsO6Wh6jJcdd7LjNfW63Y7Q0Uwldk7DC
/vTK71b6aV3PK+ZpKSNzmNz1wxvpB3IYoMxO51u0F5vj3v3NLzUnyJk35Dwu
h+Gj5TFactzF1pWb1+x2jJZmXqFyr/C+0jO/S7X397ZCj8XKN/K42Tl3ud4v
yUlyHqvZ1kpyxk63shth6kcOA5Tx3rKHFc49fv63Zk6SO295cj+1TbfzbznH
aMlxF1pX6DWl276uYwW59fz/t3c3uo3qWhhAX72PflUdRTdDsb23MdjAWiM0
KQFjzE/gi2k/07bKmim7Lr3brWffqu1rmbr0tHGpDe6iVf/I9v5MV5qvNE2m
/FlWq8/TaN8ybSKHAXJ8nrxb5pqydX8QuX/I3ttux30P2XsV+/o9jdxHM/tU
bR9sjcv+G51JnT182rp3u6009Ow33/tH5Jw24txZmi97DPFctu+1tPe/tIcc
BshxbfZukXvb72l77iUi9yORe+Dee5btOtnf72XkPprZl6Lvte7He/bRWVp5
xXbaVlkzZdelZ5vVtntmvxidw0SPF57Bdp5H2/+fdpDDADk+Q94ts/177ici
+Up0XO/9Sum+y35/D6P30ej+lM1hevfP0j46QzbzauUAM52Z30W2+2eZR/fD
6H4jd3kv23wu7f8f7SCHAXJctxGVuafYuwcpfTcdmT9zT1O7V9lbJ55jdg7T
mq9nH71S9vNgb/pVPlPOzO+256lalnx2f5hV2ps5bPs12A78ksMAGa7hiOq9
V5j9L/L8hGPgGTL7aCYLLN1zR8cd3UdXlul3sqoR+V0tj2uVfzSH4Z1s+7XY
HshhgAzXcUQ9NYf5Xj/u7en7KOc4O4cpzRN5L7Lf2H/eyXZfi+2BHAbIkMMQ
VXqu6A5Ddh25JzkMPY72o6r1n6rNVxuf3W/sQ+8T2eZ7n2nbz8ajn5ulZR4p
a9T+vF3+mcfJ24/Bt6//LzkMkOG+k1F+fn7+Ge68LMfEPclh6PGU/cZ+9B7Z
7xda40bvSyvtm1ct++3H39vX/5ccBsiQwzDKk3KYX46N+5nd7+qKPluM95Qc
5rMuPN/Rfp5n5yRymPd5+/r/ksMAGe4BiJp9nzrrHtfxAc82+/w0+tzmc/35
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
        "], {{0, 761}, {
        1122, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{1122, 761},
      PlotRange->{{0, 1122}, {0, 761}}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[300]=",
 CellID->810394010]
}, Open  ]],

Cell["We can zoom in:", "MathCaption",
 CellID->1377198042],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"exampleBCellReceptorFigure", "[", "\"\<Results\>\"", "]"}], "[", 
    
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]], "Input",
 CellLabel->"In[301]:=",
 CellID->988744528],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
vazqrftmixwmtIzUNHKYPdRkI6G2rcnvav922UfkMECJNx6rUKf0uKr0GC12
nHfKMd5KZSHPm9qs9P3gTXXDnt50rczTHCY2f2qaU96jd1Syb7fKYXIzFzmM
HAYIe8OxCW3UHuPdPZ+aRg7DKt7SZjXb+Za64RwnZzJPcpjUvKlpTnmP3tHd
9cWxaXPbpXR/kcPIYYAypx6P0N7THCZnmrus5ul7+0r790plIc/pbfbkPeAz
n/cRdnTatTIrXA+Tk+ms/B69o7scJrRPP81hvts3lM9830rXtfs+IocBSpxy
/EF/o3OYkul2ef9eqSzkObnNnm7b9f3j5LrifLtnMk9zmNz33JzPRkrfo936
30r2kZL9JZbLlK4rVoYdyGGAEjsfczDW6Bwm9N5e+v6+0v69UlnIc2Kb1Yz7
d+eo12WcWFe809057Opq36Nzzp9L59n1PXpFqf0wN4P5TJvbLqVtKYeRwwBl
djrGYK6nOcxdxhKa5tRjvJXKQtqJ7dVym+QwvMUOmUzuZyDXaxi+H9dOE3pu
t/foVcXqKCd/+Z62pG1KjrfkMHIYoMzqxxWsozT7uD5O5TCx10PXwe72/r1S
WUg7qb16jPWp62PgRKteK9PyvHfk30p1uKrSHCY2bWnb5Bxz3ZXhjfuIHAYo
sdpxBOt6+v5999la7D079dqO798rlYW0U9qrx3Z8v3d4H+HNVslk5DDnio21
JfuefaQvOQxQYoVjB/bg/fu5lcpC2gntdcI2wC5mXivjPfoMoe8Ttbj20D4C
sA45DLm8fz+3UllI27m9jO0w38hMxnv0GUI5TGqa3GXPbm/7CMAvjtXJ5f37
uZXKQtqu7bVruWFlTzOV3tfKeI8+gxzGPgK8gxyGXN6/n1upLKTt1l7Gc+ir
Zf/KzWRy+3Xot9d2uL1dqm5afi9p19sO/D4MUGKn8Y255DDPrVQW0nZqr53K
Crvq1c9i55wlec3s99rd36NXEGr/6/2VrFimGeQwQIlVx3TWM/uzkBM+R1mp
LKTt0F6r7eNwslHnwzXvaXKYM+xYHzuWuQc5DFDCMTyt/Pjx44/bKetqSV/b
xw5ttUMZYVd3/et6zNS7D5ZkMTk5yPf8d49rp3mSxRjH/rRjfexY5h7kMEAJ
OQytyGHS9LV9rNxWxm3oL5R1pKZpXYbcLCY3A0llJ3fLyc1b5DDvpA1/kcMA
JRzPk2v2d4ue3FaxUlmIW7WtVi0XnGaHHOb7Pa5FDpOTr6SmKc1ijGn704a/
yGGAEqudp7Kums+5VvgbsX/nZj762j5WaytjNfSXk3V898OTcpjY/K2mmfUe
TV/a8Bc5zBg5n7nGno9Ns+JnuJzLvkYuOUy6flpMwxpWaquVygJvETquv97v
uf6S9TzJYVLz5k5zt/xV3qN5bvdrknuTw4xTe71izTTQy9vGSOrlHqddb6nX
QvPHlp87jxyGWqu01SrlgLfZre/NvB7m7r1ZDvMe2vAXOcw4oX0udr1i6vqY
1LKhNTkMuXKOq0L5yZPXUs/lzDOqfj7/zXl/YG2z28rYDHPt0P9yPotIvU/m
5Ce1GUtuedibNvxFDjNOaQ7zfYx+N88br99iPvscuWpzmNrXVs5hYuN4ahr2
MLOt7CfATyXf+2iRw+S+97bMYox3+9OGv8hhxmmdw6SWCz3IYcjVMoepOe7L
OfabncOUTsO6ZrSV8Zhd5eYFK95W1zKH+Z7n7nHtNHKYd9OGv8hhxinJYXI/
I7UfM9ouxyHM1yKHCR27Pc1hYseDchhKzcpgYFctzsdn/O3Q73JzJG3ALNrw
FznMOLk5TMmxuf2Y0eQw5GqRw4Sme5rDxF5rtX/nfBaZm7mztpHtZAzmBDKA
vnKu5dEGpLS8jmz0bQdymHFafx66yz7GWXYa35irZQ6T81ppDhObp0ddXB+H
8pjYfKxpVDvZHzjFXbb+ud2Nz9fXQ9OHpsmZPlWeHTKAkvNSOQwp9pG+5DBj
5ObSoedK8hnoSQ5DrtY5TOj4PDZ9bBmx5fSoi5HzMVbvdjLucprcMbxm/C6Z
pibvX1HpOcTn9dR79Ip/q7bBiewjfclhgBLOB8iVcy1KzmeRNZ+Dfj9fst5e
799ymLP1bCf7ACfKzUdimUltDpP7+i45TCxnkcPwRO1xXO51Z7FpQ8eAJ+0j
chighByGXI7xnlupLIT1yu60P6dqkcN8nktl+qnxvuS1lfpkzhgRez11zrvy
jTFyjuOe5qF3fT13uTscxwG04j2QXHKY51YqC2Gt20m7c7qWOUzu66HxvuS1
Ffpmq+Mw79Gk1OQwqetj7ubP7btyGODN5DDkcoz33EplIaxlO2lz3iB2jhU6
hyuZ5/p6bLwveW1m/2x9/OU9mpTSHCbn2pac3OZuutBz9hFiSsdN19+xMvsk
uRzjPbdSWQhr9dm09uYt5DBlddVjvbnn2N/nydfHtdN8P3e9v9N79Ola5jA5
+0BsnpJjyl32Eb8P019JrnL3umMzVmJ/JJcc5rmVysK9VhkMvEko44jlKTVZ
S+oz9dj92TlM7+Otktyj5HHpPKksbeX36NOV5DCpa15yX8u5puaUfUQO099d
DlOatzj3ZRX2RXLFxr7Vb6tYqSzce9JGq+1vMErss+/QeVUsGymZJzb2p5Y7
qr+OWE+LHCYnGyvJwk46xz5Bbg5Tk9U92e9yy+TmVnJL9QWYLWdfhRw/fvz4
43bKulrS19ZX20baljf7uf+Xnpet8Ne73448xsptg+t0n8ex+VPTfD9fui8Y
O8fJaZu7aUL7TEmb18yz2z7iepj+cvMXOQw7kMPQihwmTV9bX2kbGUNBDnNX
H6PHhSc5TGre1DTXHObEc+wT1LTz9/nt9fH1tdRyc6ffdR+Rw/SXe/2LHIYd
OIegFTlMmr62vpI20p7wixzmdz3MGhdmXg/zeS1nut5tQJh+2pccpr/c7x/V
vgYj2RdpRQ6Tpq+tL6eNjJvwp7ef360wJjzNYe5eK5lmdhuQ9vZ+2pscpr+S
sTZ0ncwu+xPnsz/SihwmTV9bn2tZodxbz+9qjqFyPsutLUvuNpc8zp1mVhuQ
7639dBQ5zHpyr5+BGeyTtCKHSdPX1uc6VigX+87+6rcn25uaJvZc6/Ek5xz7
e7vvHtdO84Zz7BPIYfqSwwAlnFvQihwmTV9bX+rcCfjbm87vSq6Jjz03I4dZ
8c/4Oo59pC85zB522Z84nxyGVuQwafra2nyPGOq84fyudDyQw7RvA56Zfe3Z
6OvWRpPD7GOXfYqz7TS+vUXsfSfnPSk0zfdzsfe50P3YfKHlppZRsl3f5DD0
0PMcCU52zQBC7xN35+B3r+XOX7Kc2gyg5L0p5z3ye9qWYvWz8p+xllPIYfZh
3GEFcpi13GUnOa/lzJO77Nr7pfOlXouRw9DD3b4MpIUylthzd5lJyfyp13KX
F9umJ2NBzmchLclhYC45zF6MPcwmh1lHKlcJZRg517/E5m91Xw6Tpq+tzXgI
dUpzmNj1KbH5P8+Hrn0peRzKAFqNA6PHEjkMzCWH2Y/xh5mcd6wj1Q4l18OE
ji1Dj1vej+U/chh9bVXGQqjXKodJzV8yfWkO03oMmJHD7HqDE8hh9mP8YSbv
getomcOk7t+99n1dS801LqWZTawMKXIYWgnt70C+UMZxvZVkLKNyGMdBQAty
mD0Z/5nF8cc6ctoh95jxOl3o8d39u/KEpo9NFypv7LncepDD0EJutgnEhTKO
0OOVchiAFuQwe/I+wCxymHXkXN/SY/m9l9tjvXIYngiNe9oH6rTKYUqzGjkM
AE95L2AGOcxa7j6fl8P8TQ5DrVgbaB+oU5rDhB7X5jDXeeUwAJTwfsBocpj1
3H2HqNd6Wixjxv4jh6FUal/VNlAvlKnc/TZMaLrvrCQ1X871MDnL0e8B+Mn7
AaPJYWhlZDYih6FE7m8vAXVKv0O0yp9+D7Ti92GAEnIYWpHDpOlrY5WMb9oG
6slhgLeTwwAl5DC0IodJ09fGKa1rbQP15DDA28lhgBJyGFqRw6Tpa2PU1LO2
gXpyGODt5DDn8N7ACHIYWpHDpOlrfT0Zz7QN1JPDAG8nhzmH9wZGkMPQihwm
TV/r52ndapvx7v5NnV1u/Gl2e2hLYDY5zFm8P9Cb4xBakcOk6WvttRrDtM14
K1xDUVMG+8rfVmjL2vYHaEEOcxbvD/Qmh6EVOUyavtZWy/rUNuOtcO4uh2lj
hbasbX+AFuQw5/EeQU9yGFqRw6Tpa220Hre0yxw55+7f3x/JeS00fc7zuVmC
/eVvOfWd81zO94i+5w21Y8l6AFqQw5zJ+wS9OA6hFTlMmr72XI861C5zlOQe
ua+F8prQ45z55TBpuXVa2j7XHKW2XUPTa0ugFTnMmbxP0IvjEFqRw6Tpa/V6
jlXaZY7WOUzOuff1eTlMWEmfC9Vnqr5L2uCurWPXx8hhgJHkMOfyXkEPjkNo
RQ6Tpq/V6V1v2mWOljlMzrl7zutymN/uvucTm7ak/mLfBWuRw+Su5y1tCfQn
hzmX9wp6cBxCK3KYNH2tzKjxSbvMUZLDhM6nQ+fYcpjnQr+5crf9pTlMrL5b
5jCp9bylLYH+5DBn835Ba45DaEUOk6av5RtZV9pljtrrYVLn4zU5TCrPuTt/
d/t9/FCTw5S2WWi+0uflMEAPcpjzec+gJcchtCKHSdPX8oyuJ+0yR8scJnS+
XXtOnyrPrPoa+Z6dm8F8ps3NVuQwwInkMEAJxyG0IodJ09fiZo1H2mWO1jlM
bhbz2c92y2E+dTZyXan85XvanPrOqedUblLyWmp6fR9oRQ4DlHAcQitymDR9
Lewt57b8lpt5XG93r8Weu3s+Zx45TDp/+Z42t75z85Gc53PmS+1bAC3IYYAS
jkNoRQ6Tpq/9bfYYpE3myc09VvtbYX8d0W9K1qEtAXgL7x20MPsciHPIYdL0
tT+tUB8rlOGtnLun6+fuuevvsqxAWwLwFt47aEEOQytymDR97ZeVxp1VyvFG
zt3T9ZN6bpX9V1vyROy3iNzyb8A4+hxPGbvJNfv44oRjk9XKsuutdT0wx8+6
n30evvK5+916rs+tsv9qS3Kt/B69O/U6l9+HeR/9jCeM1eR6epx9nX/UcftK
+/dqZRlR/6u350pt8jb2wfs6ieWP1/fsVfZfbUkO9T2W+h5LDvM++hhPyGHI
JYd5brWyjKj/1dtzpTZ5m9nXVa1yTVasfu7q63p/BbPbY/W2fDt1PY96H0cO
8076GLW8N5LrLkf53ELny6l5Qsu4O1ZOzR9b1ipWK8vsTEUOQw+ntOkp2wH2
5bnU/xhymHfSv6glh3m3kva/O2+PZTDX+znTtnh8t/5VrFaWVN5xl23lPJeb
t8lhaO2k97RTtoN3G7Ufr3aN00pl+WmlspxKDvNe+hc1VnufYKySa7Rrc5i7
c/tUZiOH6S8nh+ndTjV/chhCVjsPg7cb3RdX7PsrlWmlspxIDvNu+helHLO+
W+h7PXf7RE7eUZKNyGHmKs1F5DCsTg4Da5HD/LJKuVYpx6nkMO+mf1HKMese
YnnJiNunDHfnxHffObm7H3v9bhkl5/exZcyuu5Vvb89hWi6LuULjFjDP6H74
fbxyXXfouOZ6P7SM0P3Y8mPTz7BKOU4lh0Efo4Tj1XfLOVf/nrbk3PzufP8u
Byg9f695vIrVypKbe8TaNpTrpOaRw9CSHAbWMqMPhrKT3Dyl52srjEkrlOFk
chighOPVd8vJX76njeUwT86r5TDj5bRdaJoW18PU7jtyGK5yxzBgnFk5zN3j
pzlM6PqZkmWuMiatUo4TyWGAEo5X363k3KXm3Dv3vLr341WsVpaSdkm9Jodh
hliWrH1hnpVymM/90PUyoelj9+/mjS1/lfFolXKcSA4DlHCs+m4l7X93Hn13
Kz2njs1/fT72OLT+lfbv1cpSksN8P5bDsAo5DKxpVg6TykxSOUzJPE+ut5ll
hTKcSg7Dh35GDseq5Ko9b579t9L+vVpZcuoulYXdPVeTl81oz5Xag3pyGFjP
6P53zVBiGcv345xc5brcu/Wklr/KuDR7/SeTw/BNXyNlhfcE9iCHeW61ssxu
m9ntuVJ70IY2hTXs0BdXvF6ltzds4yxyGL7NyqJj5/Y5eXAooy7NmlP3c14v
Xfdudi034zlvf261ssxum9ntuVJ70IY2hTXs0BflMLQkh+FqVH+7W09qfEtl
MTnz5b4WutYwtZzS5e9GDkMu5+3PrVaW2W0zuz1Xag/a0Kawht36Yunx8Ojv
GbVa327tshM5DHd697nYtS8l0+TOK4dpRw5DLuftz61WltltM7M9V2oL2tCm
sI6T++Po62haru/kdplNDsOdlXOYnGW2zGE+9+++Z3S3HDkM/HL9Pt9Ot1Ws
VpZdb622n7NoU1jHyf1RDgOU6Nnv7pZ9PWbumcOEHt+tPzdHCZU7tq4drXae
yr5+/Pjxx+2UdbWkr61DW5xHm8I6Yv3xLle/O76+Hs+XTpNa35Ppcx9fXyv5
vCF3+0oYJ2G80TnMk/Xnjpep8S+07tyxtWTdu5LD0IocJk1fW4e2OI82hXWk
+mPqGo+ca0BKrhOpnfbufmje1LS191uObcZJmKNX3ysZj2rmHeGt45Ichlbk
MGn62jq0xXm0KayjJIfJ/Qw1tY6abCVVxlhGElt/yxwmtL4axsl+/D4MMSOv
iUmNT6Fp7qYdMWa8dVySw9CKHCZNX1uHtjiPNoV1tM5hPs/Fvp+Tk8PkXsMf
W35thtLiepin45xxsh85DCm9s5jU93VypglNO9Jbxik5DK3IYdL0tXVoi/No
U1hHrxwm9Xro3KHkeLc2F7k7v3ly3YscZi9yGFaRyqud/69BO9CKHCZNX1uH
tjiPNoV15OYwoWvnc69Hia0zlaGkynfNRELXuKQ+Y459RyC0jtAynh63Gyf7
kcOwgtg4GHuO8eQwtCKHSdPX1qEtzqI9YS2r5jA5ZRvBtf7nkcOwAjnMPuQw
tCKHSdPX1qAdzqNNYS05OUwsT8nNWmKvxbKX2WOGHOY8chhyteyLd9fJpa6d
y7nOL7Ws0PWAd6/drev6XGj6WFl2zzF2Lz/rkMOk6Wtr0A7n0aawnlTOUvN6
zjxPzi1qtqfUXVlGME72JYehROsspmS5sTEoJ78uvfaw9/J3JYdZT+r4I9Vm
d8cid9li6fOhMvQ63omRw/CEdjiPNoX16Jdr0R59yWEo1TLbvT5OnSuGHvfO
YXLKIYdhhtz97u5xznwl92v6QEn5n5DD8IR2OI82hfXol2vRHn3JYSjVI4fJ
OfeSw6xBDrOO1D4a21fvrj95el8O056+tgbtcB5tCmvSN9egHfqTw1CjRd+s
yWFi8+Sce+Yuq6R8ueegqXxnF3KYdaTawfUwv8lheEI7tPedB99lw9dpYs/d
LS9n/cCa9M+51P8YchhqtM5hPo9Tx1fX+3evXZcVW07uskPLzTk+PCmD+UkO
s46eOUwqvwzlME/ynNj6npLD8IR26OOuXnPGrZppSl8H5nGsOY+6H0cOQ62n
fXR2H69d/+xyz2Z8XkfuZ76pNgtli6FzndwcNLb80fmlHIYntEMfoXqNZbU5
r8eeT70GrENfHUt9jyWH4Ykn/XV2X5fD1JHDrKPm/KPH+krXO2P/kcPwhHbo
I3cM+85qc6/zk8PAGXI+T6Ke+p1HDsMTT7KMmX2+5brfNm4Zq9cSOl8Zsa7S
10una0kOQy1t0E9JDpPz2vdzsbFQm8Kerpms2/Mb88hheEofjjttrDtpW05x
3cdq2icnY4md06T2i9n7jByGWtqgn9IcJpS5tFovAIwih+EpxzNpJ9WRHIZW
RmYjchhqaYN+euYwK+fCACCHoTXHN387qU7kMLQih0nT1+bTBv30ylVWvz4P
AKCl0u/g3H2f4u7x9bXUNHfLz5235LsXsfVd572bPrXc1LaHytGTHIZW5DBp
+tp82qCP0t8qyP3uZM73M7UpAHCCJ7/7FMosRt6PlaGkbLHXS9ebu/zQPL3I
YWhFDpOmr82nDc6jTQGAnaWuN8ldRujxLjnM3XSxaWtzmLvljz6elMPQihwm
TV+bTxucRXsCsAK/D0OtWAbzlhwm9P2h2Hy56w2VM5TJjMpH5DC0IodJ09fm
0wZn0Z4ArEAOwxO9cpi73CH0PZ/YNKH71+lLcpia7wiFro9J5TCxcqbW2Ysc
hlbkMGn62nza4CzaE4AVyGF4qmUOk5uplE6Tymyu2xHbzu95U9enxNYfW29p
OUdmI3IYWpHDpOlrc6n/czw5TgGA1uQwtNLqehjW5viVVuQwafraXOr/DLHP
QABgBjkMLdVkMY6D9uLYlVbkMGn62lzqf3+517kCwEhyGForyWFcH7wf7UUr
cpg0fW0u9b+/VBtqYwBmkMPQy+xjm9jvtFBPPdKKHCZNX5tL/e9v9Rwm9Bt7
O9zUk3pST+pp1dsORuYws9vj9Lbkt2ubfT/Wns/oE7Qih0nT1+ZS//tLteHs
Nv65/n9s+DfjfHD2Nqsn9TT7Tz2tWU+1Rucws9vl5Lbkt1gOc/eYfHIYWpHD
pOlrc6n//cXes1b4vM2xsXpST+pJPe1dT7XkMOe05U7ujn2uz4UeX+/nLu+6
furMPmblHHKYNH1tLvV/hrv3rdgxw8j3uc+x8fd6r8egqVts+tBrufOEXnc+
uOY5xNN6Su0jd/tDbN/ZoZ7uyh97PbbtoWXlPnf3+s79rqSuQo932J9qrZ7D
5Oy7qf7/dHzYpS13k5OPXI+RQs/F7ofWoV3ryGFoRQ6Tpq/Npf7PUZOzPMll
cqcPnYd9P76bJvVcapl3j3OPk2ccBzw5hp+RK8w6h2hV5px9pGbfWbWenj7+
fi5n2tJ17JrDPKmrJ+ve5b179Rwm1X65bbVjW9YcM+ykRQ6Tmje2jtPqc5QT
90XmkMOk6WvzqPszPWnXkuOy3GO30nPcUJ5Qc65Xeix9XedTJct5ehyfUwex
jGvmOcSoeirdR06qp9L9ILa9ufVSm5vOrKfats19LZTP1KxzB09zmBFteUoO
U1pXublCbz3XmzqeCeUwd/M8uU8+OQytyGHS9LV51P15erx/xY5JcvOau2PV
VN5yzV52zmFK66nmOL62PlY4HxxVTzl18l0vq+YwNfX0JIepzRJyzm/v1jWz
nmrbNqceP49brXMHrXKYEWPoXb+P7bclr49oy9y6qn2tl5I2rln23f3rur9f
j+UqOdOE1k8eOQytyGHS9LV51P1ZehzDpNaTc/x0PUdJneOGzhFLzpdDx9M5
x9rf6+9ZV7F6qjmOj50PXLe51bngbvWUu4/k1utO9ZTTx0rqKKc+Ss5nd+x3
NXV1V/ez9qcReuQws8fQkv16ZFvm1lVqfaP3rZI2rln293/v1nv3+nX9d9Om
yt1yO95EndGKHCZNX5tH3Z9l5Ht+7Pjj7ngmdKx6fa3kXDDneDp1fB07nk5t
Y8vbtZ5qjuNj54F329bi/GG3esrdD671WLoPrlhPd22f83zJPKl6js2zY79L
1dX3PnP33132px1uLcbQnP0z9/Hqbfnk/T20nN7z1R6rfP+X9T1pb/gmh0nT
1+ZR9+dodczyZH05x8ZPjl1bHB/nrr9VHZYcW7Y4h4g9Dj33ZL2f5exST6X7
Qek0K9fT53Hp86m6yJ0uNf13OWbWU23b9pg2tZwd9LwepscY2uJ9ZlZblrwn
p5YzUkkb1y6ffYw4huUd5DBp+to86v4crY9batYXO+Zrdeyamy+EHpecg/Y+
H7yb9slxfKtzgpp171JPT+orN3tYtZ7u+krstZp+1GJ9s+up5q9kf3pbDvPU
yLYsabdrf1g9h7mbLraMkXrlL9/LZx9yGFqRw6Tpa/Oo+zP0PH7JXWdq2u9j
1e9b7THr9/x3x8N360it/265resptkw5TP96ytkPcufdqZ5S5b7b90P1lOpb
1+WG1hdb1qx6arU/per5yfpa1tMORrdlbhvnzjuyLUvr6vr6rPPf0ccvb7Fr
Xe5abtYjh0nT1+ZR92cInQes0r4jM4GWfy3PB3vW05Nc4U31NPuvdb6gnsL1
Yn96ZqX3EG3Zp66+p5/d3qvsa6farW7tD7Qih0nT1+ZR9/uLZTC92rfmWG/2
ce7MY2P1pJ5a1pNz0mf18vZ6KqmXFp7+PkwJbQn3dtrH5DC0IodJ09fmUO9n
mJHD5Kz3+tn07OPcHY6N1ZN6yt1+9VRfL2+vp5J6aUEOM78t3+juOCh0bBQ6
bknNmzruud7PmSa17JJlXrdxF3IYWpHDpOlrc6j3M41q19wM5jPt7OPcHY6N
1ZN6yt3+z39jy3xbPeXWy9vrqaRePv99si45zPy2/NRN6rOa2POxaUZ89lMj
J4+4bkfqfs08s+5fn1utfUJW3JfYkxwmTV+bQ72faZUc5jrt7OPcVY+N1ZN6
Sm3r3XOp4+7T6+lJvbypnnK1rM8rOczYtkzVT+q5VtOsQA7z53MrttEdOQyt
yGHS9LU51PuZRnxGWpLB5M6z6m2k2duqntarp7t5rs+Fljt7W3vW05N6eVM9
5WpZn1ejc5hdbyOE1vP9/F275+wLs7chNn2snkPbnqqTHe6nXlvVyD7B2eQw
afraHOr9TD3aNXQMM+tYEt6i5/nxztRLW6fkMMSV5jCf+6H9Y+R7f+26UjlE
6xzmu87u6i93mpzll5b17vGKHE/SihwmTV+bQ72fqUW75h5fyWCgvdRn5tf+
9pa+p17aGlWfcph1tM5hUstt5cmxRk6WFLp/l4E8zVRKp6nJdXIfr2qHMrIH
OUyavjaHej9TbbvWvD97r4S+7j7LDJ0nv4l6aatnfcph1lGSw6Rylli+0VIo
JyyZ//u/pfPtZtdyfzOG04ocJk1fm0O9n6fmOMP7HaxL37ynXtrqWZ9ymHXk
5jB3uVxonp77ztMM5ns5I+ZZwa7l/ua4lFbkMGn62hzq/TypNm1xPAOMo5/e
Uy9tyWHeIfX9otxpUs+3cJfBjMxhVlj2TmVoyTEqrchh0vS18dT5mULHT97T
AJhBDrOGnFwj9lxJPtOrrG8/jnlSDzvV305lZW1ymDR9bbzd6zz2Hr36rXe9
XOsHAGaRw1BKDvO3nOuWapazore3Ne3IYdL0tfF2r/Of5f/Hhn+jPjsCgBXI
Yaglh/mtVQ7zdN4R3t7WtCOHSdPXxtu9zuUw4X9DEQBWIYfhidocpvR6mpzv
aeUuM3R89v1c6H5o/tRyc9bzPc3K5DC0IodJ09fG273Oa3KY6/tmyeupeUfl
MKljid3bFYCzyGGo9TQ/CGUksee+84vY67nLL11OaP7ccj9Z3irkMLQih0nT
18bbvc5rc5jQ41AukzNvzxym9HOg3dsVgLPIYajV4rOrls9dnx+Zw3zu51wD
LYeBX+QwafraeLvX+ZNrUq5ZSmxZodd65jAlucvdvACwCjkMNVoczzzNYULf
AypZVo/rYa7fOcotY06GswI5DK3IYdL0tfF2r/PTcpgn2ct1OQAAO2uVw+Rc
Vzzye0kly0+VJ7aM1DSh8q9ADkMrcpg0fW283ev8SQ7zGd9zMpW77yM9Xfen
/K2yl+86AQDYWa/jothyQ9eV5F7fUrKsu+dTz12fvx5Plq6n9TFoS6uWi/3I
YdL0tbFOqO8n16PkPHf3WqtrcHrV/wntCgDQQo/rP3p8t8fx25/kMLQih0nT
18Y6ob5rMpGa7xjlfHeptAw96wQAVuL3YZhFDrMnOQytyGHS9LWxTqjvFjlM
6lqX2OtPrsfpWScAsBI5DDPk/jZMzTKv92lL3dKKHCZNXxvrhPp+koN833Jf
y3ldDgMAf5LDkMtxDD/JYWhFDpP29r52l9nvcptZZzU5yOw/OQwAbyKHIZfj
GH6afY7BOeQwaW/vazIFddaqTgBgJXIYcjiG4UMOQytymLS39zWZgjprVScA
sBI5DDkcw/Ahh6EVOUza2/taKlMIfScoNl3q+etzNb97Iocp/5PDAPAmchhS
HL/wTQ5DK3KYtLf3tZxMIZS7hF5PPc6dZlam0KLOVvyTwwDwJnIYUhy/8E0O
QytymLS397WnOUxo/lhOc/fcbjnMrrde9QEAq5HDEOP4hSs5DK3IYdLe3td6
5TB306e+17RLDtPbbtu2W3kBeAc5DDGOX7iSw9CKHCbt7X0tN4cJ5SglOUwq
1yn5nZiT2223bdutvAC8gxyGEMcu3JHD0IocJu3tfa3mepgnOUzO95hylntq
u+24XTuWGYDzyWEIcezCHTkMrchh0t7e13rlMKF55DBhu27TruUG4GxyGO44
biFEDkMrcpi0t/e1pzlM6HHpb8C8PYfZeXt2Ljvnm/3b2KfcYEdyGKCE9zxa
kcOkvb2v5eQd11tqulCOkjNvbB1ymDXtXHbOIj/oR72yIzkMUMJ7HK3IYdLe
3tdyMo8V/05qt923Zffycwb74Vjqmx3IYYASchhakcOkvb2vyWHmOmE7TtgG
9uWYaR71zurkMHwzZpHimIJW5DBpb+9rcph5TtiGn07ZDvZk/5tL/QO7MF6R
IoehFTlM2tv7mhxmHtsAz4za/1b7XZSVyvLTSmUBuGOcIsdq76/sSw6T9va+
JoeZY/fyf5yyHexn9L634r6+UplWKgvAlTGKHHIYWpHDpL29r83+t1Cf3Ha1
c9mvTtoW9iKH+WWVcq1SDvjm92H4yfhErt3PMViHHCZNXxtHXZ9XB6dtD/uY
lcPcHaPdZcR390PLCN2PLT82/QyrlAO+yWH4yfhELjkMrchh0vS1MYxrv5xW
B6dtD3uYsd+FspPcPKXnayv0wxXKAFdyGIxNlHC+QitymDR9bQzj2pn72onb
xPpm5TB3j5/mMKHrZ0qWuUo/XKUc8CGHwbhECecrtCKHSdPX+jvld12eOHW7
T90u1rZSDvO5H/uu0d30sfux7z2lljHTKuWADznMuxmTKPXmcxXaksOk6Wv9
vT2HOXmbT9421rXr95JK5nlyvc0sK5QBvslh3s2YRKm3nqvQnhwmTV/r65rB
vLG+T97mk7eNdY3e764ZSixj+X6ck6tclxv6nlJs+auMr7PXD1dymPcyHlFj
hfdSziCHSdPX+rrLYd5U56dv6+nbx5p22O9WvF6ltzdsI3uRwwAl3naeQj9y
mDR9rZ9QBvOWOj99O0/fPta1w74nh4H55DBAiTedp9CXHCZNX+snlsOcXu+n
b99Pb9hG1rTbvlc75o0eL5+ub7d24XxyGKDEG85RGEMOk6av9ZHKYE6v99O3
76c3bCNresO+N/p6mhbre0O7sBc5zDsZi6j1hnMUxpDDpOlrdWrylLfUte2E
vt6w78lh4Dk5zPsYh3hCDkMrcpg0fa1ead3Nquuca3NWva1s9fJxrpx9L9aP
Un3uOt/dskqWcVeO1DJLHqfKU1rO2r5tTGA1cpj3MQ7xxA7H3+xBDpOmr9Xb
KYf5x4Z/q++bq5ePc6X2vdi1Han7JdPW3K8pR2q+FmVr0Z+NCaxGDvMuxiCe
ksPQihwmTV+rF/usNzb9aHKYPlYvH+eK7Xup/KJl/lFz/265sflyMqWWedGT
fm1MYDVymHcxBvGUHIZW5DBp+lqe0Oe5uecaOa/3kpvDXK/ZD70Wmye0jNhr
chgoU5PDXKcJjV+jcpjQsd6TbCWV6cTul4zlIcYEViOHeQ/jDy3IYWhFDpOm
r+VJXVcfmibntd5yM4/Uc6WPr8+F7sthoMyTsaY2jyi9nuR6v2U5rtM8LWds
2hLGBFYjh3kP4w8tyGFoRQ6Tpq/lOTmHCb0ey1lycpvcrEYOA2VaXQ8Tmu96
bUnN/dyyhpZxff1u2txtys2H7tZTwpgAzGDsoRU5DK3IYdL0tbDQOUDsnCG2
rFlWymFKspiV982Vy8b5asaakutkTjFym06sP2APxh9akcPQihwmTV/LE/vs
NWfM2i2H+c6c7p5LzROapiSLWXnfXLlsnK90vFl9jOpFDgOczthDS3IYWpHD
pOlreZ7W0245TM50pY/lMNBOTq4S+w7O3bRP1tdKq/WUXK/Yan2wGr8Pcz5j
Dy3JYWhFDpOmr+V5Yw7zNHeRw0A/9sG1aA9WJIcBSshhaEUOk6avjbFyDhPK
UFrmMCUZjRwG0uyDa9EerEgOA5SQw9CKHCZNXxtj9RzmO3v5TB/7bZhQbpP7
+zG55VnVymXjPeyHa9AOrEoOA5SQw9CKHCZNXxtjhxxmtb+V982Vy8a72Bfn
Uv+sTA5zLmMPPchhaEUOk6avjSGHkcNAD46Z5lH3rE4OcybjDr14X6MVOUya
vjaGHEYOAz3ZJ8dS3+xADnMm4w+9yGFoRQ6Tpq+NIYeRw0Bv13+rmrbUL7uR
w5zH+ENP3uNoRQ6Tpq+NIYc5J4dZtVzw7e63s92e3WA3cpjzGIvoyfsdrchh
0vS1MWbnMLveVrRquQDgmxzmLI4/6G3l42/2IodJ09fGOLGeT9ymHG/dbgD2
Ioc5i+MPepPD0IocJk1fG+O0ej5te0q8eduZJ3ad2A7XkQHjyWHOYWxnBMcR
tCKHSdPXxjitnk/bnhJv3nbmuO5z349D9wHkMOcwvjOCHIZW5DBp+toYp9Xz
adtT4s3bznih/e3zvBwGCJHDnMHYzihyGFqRw6Tpa2OcVM8nbUuNt2//U9fv
z+R+3+atcrZdPQF35DBnMLYzimMJWpHDpOlrY5xUzydtS423b38Lse/Z5M7z
Fqntdj0MECKHAUrIYWhFDpOmr41xUj2ftC013r79Lchh8pVcDwPwTQ4DlHA8
QStymDR9bYyT6vmkbanx9u1voSSHefsxQer3YQAAWnj7MRftyGHS9LUxTqnn
U7aj1tu3v5W7HCb1OzFvFqovAM5lnGc0xxe0IodJ09fGOKWeT9mOWm/f/lZS
18PIYv529/vGqeneXmcAuzJ+M4NjB1qRw6Tpa2OcUs+nbEett29/K7k5jDyh
TiirUY/wLn4fZl/Ga2ZwzEUrcpg0fW2ME+r5hG14Sh20UXM9DGVcUwTIYfZk
rGYWOQytyGHS9LUxTqjnEduw+vUPq5ZrJ3ffr/Fdmj7UMbybHGZPxmhmcYxA
K3KYNH1tjBPqedQ2PFnP3fnmLjdo7U3XGc3uv/o+K5LD7MeYwEzel2hFDpOm
r42xez2PLP/THOYfE/9q17/7/sE6vvelt+UwM/v+kzHjzWZnYKfnZ3KY/eyy
b3GmncY31iaHSdPX+juhjmfkMDXvBbPPxeQwrOCNx1Gz+/6TMePNtFtfcpi9
7LJfca43Hj/QhxwmTV/r74Q67rUNd8u9vgeUrPvumP7788vYa6HpYvOHjs9j
y9/5mB5W5Xx+T9qtLznMmkLXV+2yX3EuOQytyGHS9LX+dq/jnuUP5TC164/l
HLHj6dBzd5lMzvF56LEcBvp4ci1aaU5bMy7E1v9mcpi+5DDruTvPde7LKuyL
tCKHSdPX+tu9jt+Yw+Q8f3dOVpvf7L6P1Nr1NxdWof5+qzmfz81MU1mqHKZe
ztiYyr5KrmXMfe6UdpPDjJE7/same/sYzhrsh7Qih0nT1/rbvY5blz/2GfP3
6zXrH5HDpI7NQ/OmyrC70vdunwn+Sf39rWR7SvtrTs56N23oXL90rDip798p
OS+taavcrDt3LK7Zf3YghxkjNxNP7Te77Fec67TjCOaRw6Tpa/3tXscjr4eJ
5TG5ywsdM+d8rvrkuPx7ntJl7r6P/FRybYbPBP+m/v5WWic1fTU1zd21E7n9
PbccJyo5Ly1tq6fjuBxGDtNa6vOl7+lSy4GZTjqGYC45TJq+1t/Oddy77K2X
n3ssHvt8+8lxeWq5b8thQu/njkX/pv7+Vlonpf0193U5TLmS89KStgrVeWzs
jeXwuftDbHlubiW3VL+BmXL2U8ghh0nT1/rbuY57lz1n+aXHODnH2N+Pc+ep
OV4vWeZbbjnt/j1dzbHtifN9z5tTf2+6fba5RV+865d3830/X7rut/b90K2k
re7q/64eU/PX7A/X6XfgepgxSsap0L4Tew1GsR/SihwmTV/rb+c6XqXsT8/F
ao7LY8f6JcfqOcf6q9TzE7lt9Jk2tay3UX9/K62T0vPomvPx1Hl+6d8pbXX1
dMy+q9/YuJ3zWslYf0q7yWHGyBmjrtOmnoMZ7Iu0IodJ09f627WOVyr3k3Ox
u+nvXkudd+Ucy+fMv/MxfczT49Cc106m/v5WWicl/TJ0vp6Twzw9hz+p74fa
JLftcnOYVPaVk7HIYeQwveSMUU+mh1Hsj7Qih0nT1/rbtY5XKnfLY/oV/1aq
61q1x6Gp595C/f2tpE5q+35JzhrKA3Lym9P7/t1zOW2Xm8OknqvJab6fC93f
vd3kMGOcNvbyXvZlWpHDpOlr/e1axyuU+/v9oNdn4iv8rVDXT9W8d/tM8Df1
97eSbdL354nlMDnzpuonlX2FMvrrPKFlp+bdud3kMECJE48lmEMOk6av9bdj
Hc8sc+xalxafra74t+M+AivR9+e5ZuWl885ug7e2G+OE8r7QNNfnY9OcmsMz
h32JVuQwafpafzvW8Ywy54z9qWkc08M76fvz3J0Xlsw7uw3e2m6MFbpurMc0
UEsOQytymDR9rb8d63hUmUs/x8nJaWYfnzumh/H0/TFCn8dfpylZ3uw2eEO7
MV/sOt7QNKnrY1LLhlJyGFqRw6Tpa/3tVscjyttrnI9933/1G1Bvdv99c9+X
w6zL78OsozSH+dwP5S4njSGswz5FK3KYNH2tv93quFd5dzlmiJVx9bIDjHYd
M0tzmF1vO5DDrKN1DpNaLtTYaXxjbXKYNH2tv93quGV5dzpmTeUvu2wHwCjf
46Ixcj1ymHWU5DCpnCWW0cATxnFakcOk6Wv97VTHrcq60ziem7/ssj0A8JMc
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
kvO32fnZCbfa8+PUPiCH6S/WrtfpWtR5qG2vfVE757nbvtDxaCqjCbX757nY
67Hn7/ar2HN3y71bT2z+VBlD5Q6VP7X9sW2Ole3zGn+SwwAlYmMslJDDpM3u
a6ljuJ2VbFPp+XjsnDt13nW3jpJz+FHnaSfuEzE158o57fZkX8ktg1vZ7Ul9
39V5yT5Qu/6S7bvu17vMF+ub3/PEpr17/fvx3f3Q8krmC92PrSd3/pJ5U9OU
ljl3XanX3koOA5S4e3+EGnKYtJl9LXQ8fIra7co5T4qde6XOte5ee7K872lm
193Oas6PS8/Ba9t2VLvvLPe8v1UOk3oceu5JDnOynBwmZ9rr67l5TyobOjGH
qVm+HKaMHAYocfJ5GWPJYdJm9bXY55JPllPzOWgvvXKYu+3JPd/Kmf5u/pxz
uFb1+tbxv3UOc/c4dxrn5+Vyx5sROUyPv9Pb+a6dQu8XT3OYu2wuNW/sfion
mpXD3JVPDjOWHAYoIYehFTlM2ui+NjIXmT2O9MphVv2TwzxT2u65+VnpPLPa
fXe545ocZk3fOUFJzhJ6PZbD3a0z9vqT+ULT380Ty0pqcpgWZc4pW6ocbyaH
AUrIYWhFDpM2sq/lfl7ccn0zyWHG1VkrM9f/5nY/Qe5Y9rSd78ZP7fxcyXtR
aU5z9zj03N1743X6UEZxXU7O69dpUjlHzvJKtjVV5tyy5bz+RnIYoIQchlbk
MGmj+losg5HD/D3fmDPotc7TZrfXbG9t97fRzvt7msOMXn9vq2Tw9tG/yWGA
EnIYWpHDpLkeph85TP+6as31MGPb/Y208/7kMOH1PXnfa1kOfpHDACXkMLQi
h0mb0dfkMOn5Zp9zjTxPm91O3+Qw49r9rbTz/nK/u9Pj/a1mmSParvX2rriN
O5LDACXkMLQih0mblcN8/turv5d+x72HJ7nErreR9dTLrPI4P38H7bw/dbEe
bXJPDgOUkMPQihwmbeb1yz3LsMJ126uMY6uU486qZVvlOrFdbuSb3VbauQ31
sRbtcU8OA5Twfk8rcpi0FXKYGet5Sw6z8ni6Wrm+y7Na2eCbjGQ+db4W7XFP
DgOUcExBK3KYtJF9baV1fV7vOd7MHsdWPkdbvUwrlo/3cZ3KutT7WrQHwHOO
K2hFDpO2UjYycl3XcaZH2WaOYyufp61Wnm8r1hfvJodZl7pfg3YAaMNxBa3I
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
lRwGKOFchVbkMGfZZVzYpZwAwLnkMEAJOQytyGHOssO4sEMZAYDzyWGAEnIY
WpHDnGX1cWH18gEA7yGHAUrIYWhFDnOWlceFlcsGALyPHAYoIYehFTnMWVYd
F1YtFwDwXnIYoIQchlbkMGdZcVxYsUwAAHIYoIQchlbkMGdZbVxYrTwAAB9y
GKCEHIZW5DBnWWlcWKksAABXchighByGVuQwZ1llXFilHAAAAC3IYWhFDnOW
FcaFnDJ8xrAVygsAAJDi/IVW5DBnmT0ulKx/dlkBAAByyWFoRQ5zjtljQun6
Z5cXAAAglxyGVuQw55g5JtSs+zOP8QwAAFid8xZakcOcY9aYULve6zhmTAMA
AFYlh6EVOcw5ZowJueu8+13e67zGNAAAYFVyGFqRw5xj9JjwdH1yGAAAYBdy
GFqRw5xj5JjQYl2+lwQAAOxCDkMrcphzjBoTWmcwxjMAAGB1zltoRQ5zjhFj
gnEHAAB4IzkMrchhztF7TDDmAAAAbyWHoRU5zDl6jgnGGwDg/2/vDnAc1ZUo
gG69dzZb+xo9RUPng+2yC4PhnJY13cQB4wBS3SEJwJvJYcgih3kGGQwAAMB5
5DBkkcM8w1nXA9cZAAAAOQx55DDPcMb1wDUGAADgP3IYIj7Hy4qNNtlzZe4B
AAD+UaMS8fdY+bPgj2O8XeZcmXcAAIDf5DBEyGGeL2uuzDkAAMD/k8MQEclh
tu8JOlp+1Gfbt/ZcOUyujLky3wAAAPvkMESOgUjuEfm7d5kcJt/oXJlrAACA
Y3IYIp9p25J7tNzb0nr/S2SZHCbHyFyZZwAAgDI5DJHvGBrJYaJZTU9fOcy4
3rkyxwAAAHVymHXc4Xuf75TDRLIYx3i7nrkyvwAAAG3kMLRmMJ++q+YwjvM6
GQwAAMC51KfMel9S7+fD9Czf67fdV/ZF58ZcAgAAxKhLyf6c3r185LPeUn5S
evzz99Hy1hzme5/5LTIn5g8AACBOPUrkGIh+Nu42f9n+u9dKz//OaI6e05rD
9Oz7G0SOAwAAAOLUoUREso87/dSOcefBf1rmwDwBAAD0U38S8dQcZrt/bz4f
WvIqAAAA+r297iTm6TnMdj/feF7UPhsIAACAMW+tN+nzlhxmu79vOj9Kn6MD
AADAuLfVmYx5Ww6z3e83nCdH31UOAABAjrfUl+Q4+q6jFVrm/j/V3vd7AwAA
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
   "], {{0, 0}, {
   1122, 761}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->500,
  PlotRange->{{0, 1122}, {0, 761}}]], "Output",
 CellLabel->"Out[301]=",
 CellID->2006014202]
}, Open  ]],

Cell["We can highlight the components:", "MathCaption",
 CellID->632012813],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigureHighlight", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}], ",", 
    RowBox[{"MemberSet", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"Query", "[", 
       RowBox[{
       "\"\<SpikeMin\>\"", ",", "\"\<G2S2\>\"", ",", 
        "\"\<path:hsa04662\>\""}], "]"}], "@", 
      RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}]}], ",", 
    
    RowBox[{"ORA", "\[Rule]", " ", "True"}]}], "]"}]}]], "Input",
 CellLabel->"In[302]:=",
 CellID->785230029],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Pathway\"\>", "\[Rule]", "\<\"path:hsa04662\"\>"}], ",", 
   RowBox[{"\<\"Results\"\>", "\[Rule]", 
    RowBox[{"{", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
tSNw+YYu+SbYyRr4BF8rjRZIHYrR1/VH8uZ1sUJ7HN5JSoIiKalzu2ZKTXOH
lPSGlHRVJS+3xGwKtEhJ+auBlAR8SUlQJCV1Tkq64WealHRy3atqIJqS1hfb
vSlp/Zj4+3q9pDIQSUnADykJiqSkzh1OSeuJWXRm1X9KWrc/umQz/8ysWLkh
uEHm4N+U3JzXSywoLcF5vV63JiUtbgHwPlISFLlFdi41m8qnpM2LcHI1REqK
zus2S8IuZyaEJ7t225lyckOXtNNl4YxUOFoXqDngl+ADgfyZXlNV9OB3I4C3
kZKgyM2xc5enpGMRKRMljh0/lXkt/5F45vNzKenxZrxZJh99C9SnpJpwlE9J
mdNh3Ty3A3gPKQmK3BY7dywlbVJDu5S06/jZzBtPpqTK+aSU1ElVr1I8L+5M
SfmTImynmwK8gZQERW6InTv5LCm6/FhWSs2misdPqliLlHSsj5OlpEtqaFEV
X6kDeyPz1vc4X78I101VWDz43RpgblISFLkVdq5+tp+aHa1/Xb84k5I2U69o
szPv1nctVSZcvkhJl9bQoiq+jp2DLX7y+9feh1lJSVAkJXXucKIpBo3Ds6nI
h9qrPwCvP6IapaTf+5PgfCnpqkour4ofo6QkYFZSEhRJSZ3rLSVFI9Kxo+hA
Sto8MKopKSVdwlXiWpnz6H5729x0ZIB7SElQ5K7XueXEP9z948LPnM9PtHZ1
LdxKqmvRJZenpM9dYeGSrVzeVBcKfrhrwASkJChyv+tc3YfBzzvWtasS3PkA
WN/mAz3d66qtXN7ae7rPEA6f+EAPpCQocqfrXOdRIhWUag6qzruWanNlyTO6
TUmN6mRc7iAwKCkJitzjOjdilPhUp6R+XNiv8y7cyuUNvmcEGMuukwjogZQE
Re5unVvGT0nfY6zyYDu8oRtISY3qBOBOUhIUSUmdGyslpR7TrA+zYj1SUucp
qV21zMHhAcAEpKTO1aekbyo58G7TZ0mf4NHSrnX3bqup4VJSpraTW3HdIGPv
d1kBoDduZJ3blWsyEalYRkrqZ1tDpKRLamB6bjEADMotrHPTpKRG37g7vMox
I6akVIWb6Bp+N/JYtRByo4He+LskKHLz6tzhlLT546Dvknu+cRf24tPmX284
vMoxE6SkJeazM8m2ayoTc7uBfkhJUOS21bljKWnz4v5nSWEvGhU+uVafG7r/
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
mEs2tix1aWi9MPNWz9+4k5LWcqfenjJMxr4elJT0Bl0NxT2NiU5vvpepJQgs
6yXLKihFc80m/hQjUvT1WClpfYXP3PpvbOZlJutvsTs1QSYsk0lJmzw1bkoK
FS8j+WdJS+wxUGZhtMLMVqSkDuVOvVWB1K/Myo4elJT0Bl0NxVWNydSTmdt8
HUtJNUsqE1P0MVb/MiP/fbdYQ+Vuerbkt/CS7u9w/t6f3SkpH4u+S/ampNEV
v3G3BPEnuvqS/lpdZitSUocyR8snMVWOLmQy9vKgpKQ36GoormrMmXqW61JS
6vt10fLRCi8ZjQul7u/rAqkVb2ngxSbrb7E7Z1JSmIY2L/ampIcGqVZ+MJej
KSn6LOlrb0qKNpJupY60uw5qnpHZ+/RMSnqD3obikvYsf05XlvQnddF1M890
zj85WhJ/shRdcn4orlW8p0eXj3sLmKy/5SnZcsGzpHempPDdYkr6pphM6tks
yf/qWVLnlpj1u6m17mogz+j2lkGelPQGvQ3Fmfak7kHrS1Cx/qUu/lQWq0xJ
qU0cHopGai7m4a2/w45Umqy/5bYdSkmbEBS+WIIv402TkjLv1qSk1LMkKWlK
qXz0fTe1Vvum8aSe7xpkSElv0NtQXNKeTSU1n9etC1yVkr6B6EcqJaXiVW+7
pl5+MjCfefpbF2Q28af4ovgQasSUlJfKL9+DJPotu/Ct9ZL8r1JS/4rJOhqd
xr6kUMFeHpSU9Aa9DcWgKak++6SKRbd7fihgh+og830ZXbj+kZKe/ZGSBrKZ
LZs8v4QdPSgp6Q06HIrzTQpT0nfJ3pT0/cA2ujB8N1o+lZJSlUhJPGNPkGn6
IyVJSe+0uSl8urxHcy0paVBS0ht0OBSXN+l7r6mpOR9wzv/U19/hrqHSqHc9
KekiUtIPKem8Ia8k7DHq/eL1pKSX6G00GqWk+sJSEmdEH1yOsTelpIuEj5sf
9OA4SEmXeHYn0trj5ynHSEkv0eFoXNukXbU9NpWJuXAQuN96D46xN5+PR6sf
xiclXWKMqwdHud0PSkp6iQ5H48ImPZU4OhzV1tZDLe59/vyq58uHgneSkq7i
0jExt4ZBSUkv0eFodNikvSbowgGppycvHI1Nl184AiAlXcUFZGJS0qCkpJfo
czT6bFW90dt/TD4lved5yre/myXwKlLShVxDZvWS2+J8pKSX6HM0+mxVvdHb
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
wG2kpA65GfVGShqUlNStfEpaq09JYbGwnhFT0qeP3d1DGwDuJCV1yM2oN1LS
oKSkblU+S8o8J6pJQ/m1pKTh2gBwJympT+5HXZGSBiUldet8Sso8P+onJUX/
MPwp5/tyyZgAjEJK6pP7UVcumWNwPympW8vOlJSJP6nynaSkX3/79PBzSTdH
P+oAdpGSuuV+1A8paVBSUrdS+SV8AhJ9N7Vk/Wu0BinpZHfOVwIwCimpW+5H
/ZCSBiUldavmKc89P1LSru6crwRgFFJSz9ySOiElDUpK6paUJCUBdE5K6plb
UiekpEFJSd3K/SsDt2vazcfzkZQEcIyU1Dl3pR60nkrRiJT0Kh2OSX1KWqe2
/MLMcikJ4EJSUufclXogJQ1KSnqVDsekMsVsklG4MLVcSgJoR0qa1cmvlHzX
EhA+BmFYUtKrdDgmB1JSJv78LDz2LT4pCWAvKWli6zvasaB0eN3Da/VJShqU
lPQqHY7Jrmc9lSnpWFC65CLW4QgDwAFS0lWkpEFJSW/T27DsijPrvzPKp6RN
4fpnSWe+YPDpb3gB4PwdLVrD5na5uXVmUlJqxc2S1K+f4GZdX9uZW/xhUtKg
pKS36W1Yjj30qUlJex8qFS/j9T26bngA4ALHHgZlPjnchKAwE6VSUipJFetJ
bSu6SuqtsD03kJIGJSW9TW/D0nNKWjey/hLX2wgDtOPvkkZxLCXt+nVzr9yb
koovPumUVNx0qjH3kJIGJSW9TW/DUplilj7+jbvMp2rrMpeOEEC/pKSBnPxq
xK5fPy1T0if4il3NpjcJ605S0qCkpLfpbVjqU9JXcXmq8PmUtGl59LrX2wgD
tCMlDSQaNyrLZ36NPt+Jvsg049izpPPr3kNKGpSU9Da9DcuuINP05/DIbOJS
byMM0I6UNJaab0SEJVPlN8s3t8LM6uF98/tr+CIsn6ohU9v3rdIINSElDUpK
epvehmWClLTuS+XdB2AOUtJAiqlnFIeDj5TELlLS2/Q2LOHHTQ+6qkef2Adf
APORkobQ7pb3iOVQSnqwy6MP+GtJSW9jWFrbjPAE9yOAFCmpRiahRH8N7yOX
N2D0u9KuXjze38cbwDFS0gsZmaZSwzvNvYk3m+/ona9H9S7pu5RUKRN8ipno
kj11OCVdtfXzlTy+icPc+gclJb2QkWmqZnjFJQY130E7X4/qSUl3ymSf8HFS
WKxFUKpf68JiN+inJV/u+IOSkl7IyLS26+5Tc/F0gaUTm7ncd/427vE5X4/q
XdJ3KalSPiWFv26KXXVA7g1K9Vvv55TppyVfL7mkzEdKeiEj09qBEc7ftg58
+gcXWmI+f976xzo45+tRvWv7LiVVKqakTyKSXH5Ank9J4TGzqTD66+bFplOV
b2XqCVuSen2/BzfNGVLSCxmZ1k6OcHgxD+cz8IjU/C18axTz9ajeJX2XkiqF
QxqNA2HJFhf/+grDRqaWR0tWRp6atzL11DQg7MKd3LsHJSW9kJFp7aoRXtIq
i93vko7r3SMqG5z6Nazh4f786ZIeDde7vOVo39cuT0kPD+WfTvZl06/UkuXP
kV/SO6J1k6JloqMRNj7VnQdfpBbe7/LDiXtISS9kZFq7/EaWv33/9fr353cP
Py0OrWWi/+9wtHeP77Vd+y6cKWUmIUPsu109Gq53eYf7vtYiJT0+pCcHNtWv
1K/H3rpBTcM6T0nfX6UkDpCSXsjItHZPSlrfER6fY0tJh3v3+F47s+++04/o
6iPuu3yPRu/dVX1fk5IqOxW9eq/fWi+JvhWWbE1KuoqUNCgp6YWMTAv5INOi
5m/9y+Az7WL3H58sXT5lWvfu8b12PiVl3n18r+3dd7tKPt6va4/MY/VISbMq
ZrTwTpQqnLpzrV9k3kpVUlx93dR2A1UjbBJDkJLeyeBcLnoBPz/ONZUsg8+0
i717fLLUbso0+r7LrzXivttV8vF+XXtkHqtHSqJ/j+9KKWlQUtI7GZwWWqSk
yu0+Psc+PNMujlL9lGkz8j1MmWp69/heO7nvMisON93Nfxw9eu/q+97U9ANb
+dHWDbcJM/MfPQyCfTEoKemdDE4LjSJSscKfmfZm0/Vz42/571rRqlL1b2o4
07vo6rumTOvCl8+1GvVub5ap38u7Doam++5bJhzS7/IlEK4Y1hOtM7piu97V
Hz9hB8MCt03mn9JiYPNDnS98+cDWdHC9PFXsvGJLptdPx/tpCbtISe9kcBpp
cVcKJ1ebTSyrILOe9NZMjDcz6tRbqYVhDZf0blPg2Hxp14qNpkw1vTvw0Kdm
L0f3WtOUlN93P+/mc0H0dWaf1tf5+JFZeXweO2gP9O5Blw9scSSXP1N264HN
dzDsb2rhecWhrq/n8ra9TaNdTGtS0jsZnEbO34+KdYabWA6lpLBAavXK+o91
Od+1z0Up6afCza+7ar5wpr3pXeuUVF9t0323/D2tFJek9mn+3VSZ5dKUdPjI
zHRhV4ELJ/NX2ft3SdcObHgUFS8FrQc238FUnS12YnGo6+u5vG1vc2DY6YGU
9E4Gp51jt6GaClO3uSWbYn4Kb7LMZmHlVDy6cP1r5qZ8zGf/lOkrNc1esrPu
ysov7N1VKemnzs1e3lVti95lZrOpJcVimVgRFvuu3rR3u6b0mxfrDq5b++CR
+aADp3xmv+dfPzWwu67z4VpXlay/AX3MGU7bNeb0Q0p6J4PTzt57UGVtmRvc
EvvToWjAWRLRKZxXh1VlEtZ3yYFe1/TuzCx0M9s5MAVdV9KidwdSUnTXZCJt
ZbVN991m10T31LqezcLiHk/Ngb+ba9q7A7PuaAeXxJz/8iPzQpc8S9oUuPCU
Lx4hlw9svoOpOlvsxOJQV1YSNu9b1RKEsmiBVEsOt2o4L+nmfKSkdzI4TZ28
HoZ3tPw9bsnOkL8rho8bTj4/is7ez3Q21buTU6bUwl01XzLTzuy7XXEmujvW
O/qRlJTfd0tdSkotTO2sJTsHXlfYtHeXHJ/HDsvDk/mrnExJ0QK7+v6VORKK
yy8c2HwH6xeeVxzqyko2L9aVf1Y5KCyfeSusf26NdjGtSUnvZHBa2zXCNdOG
zDV2Saek8EU4ne4hJeULHJiFRmeky+lv3LXo3SUpKb/Hm6akfIHU7ojuhege
ye+vJT033rxu2rsDx2emzTccmRc6lpLyBY6NZ/FY2ju2xwa2poObmNBoD15S
c+retPwZecJiu15Mr91epikp6bWMTyPLn2qK1dSZfzc1bd68lfo1H4gqJ96N
7gK7pkw/NkvWb60dmOK26N3hlFSfixulpJre1eSX/KQ3U6Cmqm8lTXt3Zlaf
afaDR2a9B/+vstHxzA9gJwNbeZt43JJIRp9YSsqsG3YztdasOt/RpEhJr2V8
WthcCde/trstfiPPj01siYqWCRfmi4XLWxxUu2Y1TX8a9W5vlonumtTu7iQl
fdsTZoHv8rDx0RXzv26Wr+tp17v64yffwfD145P5Gk+lpMzBsHkrtUrnA9uD
ZX9KyrwIq3rPCP8ceE+3gt2kpNcyPpeLXga/9+Wm2937PKLRTw9z0blTkn3X
1b57vF/telfvwWdJcw/s4zY3r/Wv4evPn3fAzLrr+m/ry+OkpEFJSa9lfC6X
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
FZbMNDJ/LmQurd8CZ4bo8XwkJZEhJZ3kzHqD4n2EPl0eaqSk0S2xMA4tRKPN
Iz/F47zmXFiCD76iy/cO0eP5SEqKiqbjpzw4DlLSSc/uPu7x+HnKMVISoSUx
2YNrLeOkpG+D699dpKSp2TU/pKQznFYvISUNSkoiFA6dE5wWbvmUvdauNqfe
iv5aX3m0zszc+Mfmdf1bA03FO3RgDKUkeKdddxn6ISURqpwEwknjzjMrb3kH
UtiuIVq/m3qdf2uUqXiHxj16ryUl7XLswxlGZ3cPSkoilBk6ZzoXGn2eecPp
cCAlhatk3hplKt6h0Y/eq0hJX8ULwqaA++l72NeDkpIIFYfO2HKJOeaZTW9/
e1NStHz+rcy7/UzFOzTH0XuelPSVf05Uv5D52NGDkpII1X+V6IbGMLGZ5pmN
zohdKSlVOPXW+hmTlLRX5Wh/58zr1+uFqRryZfrZNVLSV7h/lz+fHKXWuquB
PMaUaVBSEqH6oTPInDFTSvr26NqTYldK+rXzWdKy55t4TvaNzKBt3gp3U3HY
K4v1sGukpK9oSvpeE6SkN5OSOpc5ee93W5fv2dB8dg3dnfuUySyJj9w3M8Bw
eU2x6MUnM4+9tl8XVrUrJe1KQ5lVepuKdygzaJmDrWaoD6QkhpA6kG4+dLlf
5gCgB8t0n9nWdPmeDc3nwNAZbQ5Ygkl7eKVKLcxPLKMRYP0iLHx51y6pM3/p
Xuqm4sViS8WfJjnHNzLDtRnPzJinjszM3uxt13iW9JVPRtFrgsnzS9jRnZOS
2OVYUDLm7BKdzIfzw2Kx/GSyMlI16uDJmvNT8fWkeh39Kt/aTMulpF2KKSl1
SGd2QbRY8fb97K6Rkr5S+WhTIPUrE7OvOyclscvh0TPs1Js+JX27eeaEevyi
3cNUvEOHU1J4BIZRKP+rXdOnmjO9mKSYkt3duRfeah2QZ5wZPSNPpdRUcDO3
zBcrziQfT0nfzh7Yygsv3aOoSUm/sn+jlCpTf2zbNTAEKalzL7zVOiDPODl6
LgjUOJySvmpmkp2kpG+XU9uKLl960nhsBrPUpaQwNKXKZ4pltiUlQf9cQjuX
usZ+b3+pScj33U3JcMVUJddez+tXd0Ceccno2QXkpaaCSzol7Z1/9paSvh0P
l0Rvo38t+f353cOP03mj/q6auW+mCoS34G5Tkr9LgiIpqXOZy2xxChGdq4Rl
UtOVa2cjUtI9rho9VwYyKiPPsZSUunD1kJI+ib/jlpIGUgwvt/1ISdA5c6HO
nUlJNfOT1CpNU9L3qEvNLs5s6OWuHT37gqjwk5Yw2qyXh2XCtzJlUtt6cJ4Z
NnvTEimpW1LSDylpLXM6R38Nz/f72sqNotNU+pG5nkffCucqx1JSuPDYcZKa
S6wPPFebC10+ei4RhMwzv+OQmVk9no+kpKjoXekpD46DlLSxpKcimbdSS5jD
4+cpecv+lPR1OCVtVr9kNnLm+kO9RqNnp7CWuS69JyXl572LlDSvOYZUStrI
ZJ/NVDk6aZnjqGBDSurcgZQUvrs3JaWKnexI6lcp6VrtgpJdw4+qT8nv0uEg
fLIp6Vts87r+LSnpWXMMqZS0Ee7WZZWSwl83xeY4Kth49i5D0TLj3yV9fOOu
paYDaO/Ap5QTP6VnSet3U6/zb0lJD5pjSKWkjWJK+iQCUWoywwSkpM7Vp6Ql
+B835BfenJLCfn386w1ttB5AFw069+Dxuc5Ke1NSuErmLSnpQXMMqZS0cSYl
rT8hYSZ2a+cyEWYjtTAsH60nX6xRStr7FjXuGUC7iW71cHDuTUnR8qm31ims
GKB6GI3JzDGkUtJGTUr61P2NEtOQkjqXSkn3/0hJo7htAO0p+hSd0lx4s6v5
3HhXSkoVzr9V+YzJeXpS+PFjytMt3UdK2sjknWNvMYERT+1XmTIl5e8pDsiT
7hxAFxD6kZq4ro/Sy4NSZqPtniVJSc+aY0ilpLVM5o0uib41aF4mww7tXP5e
fLPbunzPhmZ1/wDaZXRlqf7g98wm8pfKpfHfJS1S0nPmGFIpCYrunP1yoV8r
fVZ4mAPypEcG0JWEfjyYktYF9qakMPVk3qqMSFJSC3MMqZQEReY2g5KSSHlw
AO07ehCmpGX1lZirNpF/2p6JMN/ym9f1b702JXXSl06acZKUBEVSUudSn1g+
4rYu37OhiT04hnceKlBjufRfb6i8PC4n/u3uyuxTX/J8rzvRSV86acZJUhIU
mdJ0rvWtdtdN+bYu37OhiT0+ho83AL7OH43RNJT/+EhKaiEc/88T05g5hlRK
giIpqXNSEgf0MIauLXTi8HFYzEGZmnNP5W93rPv9SHVq3bv6bt437hVaDVkF
KQmKHj9PyVukJPbrZwz7aQnvtHc6etUMdpnxf+LwuE1flj8fLdVX8vj99Oa7
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
Yd9cHtcX1b1X2rDaXSseOzbW9V9ydI1+iI7e/o+UBBXMbAf1a6WrCh1OV5GS
RtHnnrLXblbzOVLq1zM77radfm3lox+fo7f/IyVBBSlpUN2mpI+D6iLhJ8wP
enowurZ0mZI+U0zkBlIc7c2plHp9ZrtN9/i1lY9+cI7e/o+UBBVMgTp382Q4
b2/LG40JdOXp8/IP0bY9MixvUxzn5c+/Glti6SZVybrAks7C0dXXx8Z69ejB
s6ktrDysKlyl8qgb+sgcuvE/pCQocg/t3NLrx9SVjXd0weOchjeoTEmfIC59
SuEimkei60Zjcn7rYf7KFNi7St7Qh+XQjf8hJUGReWznhk5J3y5cOybAXk7D
1k6mpHwlmTv1Znn4a7RAfQiqLFnTi3zLxzJ0439ISVAkJXVugpT0cZiRFv0k
fP1r/qNy6hm9pupT0if7N0rrAuFTm+J2o8VSYSeT1OrDUabOvKEPyKEbD1Qy
8ejcHCnp25dLxoTJFD9Uz88nqWf02tmVkj47j+pNcqms9pNONNFcFi1w4FlS
paGPxqEbD1SSkp5VHP+ZUlJNf3mhAynJo6XDDFojxSt55tlNzY1gXTisNlXJ
Zvn61/zraOVR0VUqBmzsQ3HoxgOVzDSetbnFRAvkk8uPn9frJeu3ouXXC29L
Setew49lf0pK/UoNg9bCWKOaOaduq3OsEdsYuvE//F0SFElJz1pinwpuCmRi
yyb+RFNPdPl64f0p6ePAY2XzufR3Yb7AZ4qJylMM3eXGGlIp6aShG/9DSoIi
k9VnRQd/vVNSESZcnkpJxSWPpKRM93mb1FlQLOD4OcPoXau38SyeINFPHi7Z
aGWdvY3Y20hJUPSSmcbyp9Ty0A0lM6397ElJlZmoq5SUGQTeI3UW5AsU36LI
6F2ok8GsPHF60HnzpiclQdH0c9TOO7hpW9ja6VNSdBx4FSnpQQbwKp2MpJRE
JSkJijoPEWcM0bXvA6PMc6XLU1L+10dS0mf//io+s7tTu2GZXnQM1wuLBTjJ
MF6i9TBuzohw+Sc4L77lozVsakvV0+5cG/rAG7rxP6QkKJp1pjFKp4rjv1z9
d0n5dx9MSd/+hkuim65s9g0/oxxskOIYPu+GMcwnoLAZ66STKlZZz+V9aVft
PYZu/A8pCYqmTEkz9SiTBVLZZ0k/Koomqa5S0if7SWnlyEhJsNeU94I73ZOS
wtfR50dhmeiL8Eqbj0vXGvp4G7rxP6QkKHJn7Fw+C3zva+GS4lupGjrJAt+b
+ObeXTkyUhIc4GA+7JGUVPkMKAxH9atLSVFDN/6HlARFUlLn3pwFwsRnZKA1
x/Mx96Sk1MOgypR0YGGjfo1+mI3e/o+UBBWkpM69OQucSUnrZ2Th47OaYj2P
DDTlkD6m9bhtngR9F66vkJsX4SrRQBTW07pHox9jo7f/IyVBhclS0kx9+REm
hQf10PF1gWJ4Kb7OvyUl8VqO6gNaD9r9O6XdFkc/wEZv/0dKggr3z36bmqkv
eb9W+qzwjJqwdiwlLX9/bCQlQZ4De6/JUlLTzY14dPXw+eGFpCQoGvocD83U
l7y5U9KalARPcWzv1fThy23369YbGvS4ijZ70L58pCSoICUN6j0paeN7xNYk
mkwmChcei0hSEnNzeO9lxPKGHp9N44fui5QERVLSoF6bkr4Op6QvKQlqOMJ3
meyueq3RR0ZKgleZ7Ho+U1/ypKQDKWmzSuZreFISrDnI9zJioTnGZN2LoXsk
JUGRlMSgKkNN5s+Ozv9F0ttSUvg3Yq/y9PA/zAjs5fj5ZP/P4IP6dmSaHgEp
M127Pn1ftdZ3iu9/87fRJXi4n9lf0XfvGZBHjqJlZ0r6jk/qVykpZbJJzmHG
YW/f42nzIY3GZNDRuM3To369RUqC15jsOtZtX5Y/n9GnLrOpYuFb+fqjNTR1
/8gvL/7/7d5p7t4d8+Yx2dX3vwr//vzu4efNu4zLTTZxAlImO9n77Esm1FTm
nczr/OakJCnpsMkuDtd68+Ck+h69mj2ej6QkLjfH6e/vkqBojpP9q8++ZFr1
VErafB0i+usnlubWbxUfYKUKX0JKam3Wfl3l5eOTv3Z9lzyej6QkWpjgiJKS
oGiylNSn3lLSJvvkw040MUXTU/hrdBNXWXpyee8eN2WnLjfrKFX2a1MsXGuR
krjFgxf/Z50ZNCkJis6faBRlRjh8a0lnnJprY7jKrjJLIuZEX4QLoy10gA3H
Lqs35VjVdyp/pi+xlPS9RPy8Dpd/3/q+Lv4aXSIlTe+SsDC0MyMgJUHRy68w
98hEoV0pKVy3mEfuT0nFzdG/a3fZ8qfNwgO/1jT4tivblIf35hz/nt3FK1L4
VphWNrkmujyzMPo69a6UNDH7dO3AaEhJUDRZSuq2L6kskwks4a/RJeFbu3JW
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
        "], {{0, 761}, {1122, 0}}, {
        0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{1122, 761},
      PlotRange->{{0, 1122}, {0, 761}}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[302]=",
 CellID->475821867]
}, Open  ]],

Cell["We can zoom in:", "MathCaption",
 CellID->983872788],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
    "exampleBCellReceptorFigureHighlight", "[", "\"\<Results\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]], "Input",
 CellLabel->"In[303]:=",
 CellID->325866016],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzs3U+u7DyDH2Yh8SDDbCG7yNTDTG14AW64Y2TSAdoBDM/umr4s4K7Lo/Lb
fdzVuuJfSaRESs+Dixd1VBRFUaLEX6nOef+Pv/t//93//b8sy/Jf/re//vPv
/uN//bf/+I//8b/9+//9rx/+wz/8l//nP//D3/+n/+sf/r+//89//4//59/9
r38t/O9/lf27f7Ms//QaAACAjQ8AAAD/TEoCAABYk5IAAADWDqek6FoCFwAA
MLtjKSmziqAEAABM7XxK2tQQ1rb5GxGpHzd/TSJ8sVm3+JcoigtTzQgbuWsv
Mm1O7UJ+FQAA4EoHZuNLLBNFF+ZXia6+eVEskCoZbVh0ySaeRFu4q82prWcW
1jceAADorVVKShXYLAkTSv5FTVXhE5/MFmvqvDElbVolJQEAwPWuTEmZLJBJ
SfkCm5KZmottDhNWtOWZdHYmJW0aIB8BAMBdWqWkfHRKbSUaK9bBpFggVTLa
sOKSMKTkU1KmkeG2whUPNB4AAOjtZEr61lBMSdHlnyAyRFNJ5uFOuHr0rUz7
o/VEt5tparEZ0RUzrQ17FQAAuMaxqXhmlXwwOT/tv6CGERoJAADc5eKUlF/3
5KZb1SAlAQDAmx3+WtfeL7OlvoG2d6PhiruqKm794u+5yVMAADAav/wCAACw
JiUBAACsHf69pNSKmW/Wpb56l/oe3aZwuNbmrdQm9u4dAADwZgdyRP5PMSyH
/sesm3ryq+ffOvmLSwAAwMs1SUlLTFgmU0NxE9GSqcdJ+QoBAAAyWqWkA0tS
P6YKH0tJmS/1AQAAhFp9427zIvy9odRvEkWXRAuHv3+Ub1LmNQAAQErD30ta
PzOqyUqpOlOFM0+gpCQAAKCVhinps/OBUf6tXUukJAAAoJV+KSl8N7Nu5Z9c
KH7RrvKbeAAAACnH/qxB5u8h5HPTJ3jelG9ANPVE10o9wypuAgAAYE2CAAAA
WJOSAAAA1qQkAACANSkJAABgTUoCAABYk5IAAADWpCQAAIA1KWlSv1bubgsA
ADyKlDQpKQkAADqRkibVPCWJXQAA8ENKmpSUBAAAnUhJk5KSAACgEylpUlIS
AAB0IiVNSkoCAIBOpKRJSUkAANCJlDQpKQkAADqRkiYlJQEAQCdS0qSkJAAA
6ERKmpSUBAAAnUhJk5KSAACgEylpUlISAAB0IiVNSkoCAIBOpKRJSUkAANCJ
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
/pGS4FWkpEm9JyWlfj2kGGoy4Sj61uGg9J6zjrdxbu/Vr8eu/O2e3hua9LyK
NnvSfflISVBBSprUs1NSmIykJLiYE3uv3j128RERlDbyt6TpSElQNPUYDz1p
X37k88LFRtjxdYEDKSmMQpm3pCRey1l9QO9Ou/6g9Nvi7CfY7O3/SElQ4frZ
L7scm7f3+HfLDToT0/I9811l8zqMRaliI/cMdOWUPuaalBR+XrS+Qm5ehKuE
L6L19N6j2c+x2dv/kZKggpQ0OCnpWEp6ds9AP87nYy7otzDs5LNPk4Wd9mv2
02z29n+kJKggJQ2u/onJZknxrVQNg2SBzceh4dalJGjOyXzYNSlp83pvSlpf
VytX9zgpaurG/5CSoOiRKelJe5TJAsuJ37vJlL89C2zOydQpKiVBQ4+8F1zp
lpT0Cf72XU1K+sQSUKoeKSlq6sb/kJKg6Kl3xll2qtj/qSwQLo8moJpMNFRK
ij4zkpKgK+fwedekpFTMSaWkYrFdz6Tamvqsm7rxP6QkKHpqSvpMsmvr7z/s
ygKVz5iiS/I/3pUF9h6vZST9uuXxon24XlgswEm6sYne3bgZEeHyTzAuliAB
hWMqWm1xALbao+Z1Xmbqxv+QkqDo8TONwXcwOvfbLGmekn6N9427kY8RvUWP
/mYeuGtd6unAVgbpycqBM4LBm/d4UhIUDR4iWln+lFoeuqBkprWfF6Skl5yB
ZKRGQb5A8S2K9F5Dg3Rm5cAZweDNezwpCYrMUe+VSUnf13uj0EQpybnH52hK
cu06Se+1NVp/FgdI+MFdq41W1jlaj72NlARFZhr3ij6E2hSoeWb0s2I09USX
rxfekpKceHylnrTmC3zMsk7Qdc3N1aU9HjntrXOuHtuYuvE/pCQoMlm91xL7
bdxNgXxy+cac7383UuVvfJbklGMtOrnKJKbUulTSaT3M1atS0klTN/6HlARF
UtK9iv1fGWEu+NfkPHG+ETqQkqKPlqih0zopXslTT0trTuZN4bDaVCWb5esf
86+jlUdFV6nosLlPxakbD1Qy0xjc8qCU5EwjKjV1zBfgAL3XT7FvNwV2ndXf
DLKr2k9sQKWqShWof7H37Jr6bJy68UAlKWlwz0hJTjNSws+l1wtTBThA73W1
KyVtTuZoZglHRM12U0kqGm0yH1AcSEn5dhZbPpepGw9UMvEY3ANSkhMMbmcY
9lafksInL9FHqJt1j6WkcMVdISgVr/J7VHmyTX1OTt34H34vCYqkpMFNnZKc
XTACw/ACJ1NS5mnpd3nm3dTq9Ylms5VdT46kpBlJSVBkHju4ZSR7W96pT2Ao
d4/LP0Tbdku3vE2xn5d0lIgujFYeHtBoPZsC37XWq0dPnk1tYeVhVeEqlWfd
1Gfm1I3/ISVBkXvopH6tjFahk6qJAzPkfu7ujKEtoz7wdeCuVOztzVBKvT6z
3a5HvG3ls5+cs7f/IyVBBVOgSQ2bkpxOrQw792ZjzCPlqF2sJiWlfjxz4KSk
W8ze/o+UBBWkpMF1fDywX01Tr+mWN1iGnHsTKh6p7wgKf8y8lVpSc6Qcsltk
un1zeVxfVPdeacNqd6147NxY19/k7Jr9FJ29/R8pCSqY2Q7ur6Pz+/N7hH/5
88RZ1JyUNIuaI7Ups8lBqWKZhZkj5XjdRc/X01e3k5KgSEoa3PgpySnUyd4n
FJnnFKlHFZXPKYY6voc/de+nVUpK1bMrJQ3SJ++k8+vpq9tJSVDkrjq4fEr6
zhXDJeFbYfmwwN6U5OTp58Dcu2Zh8cnFXSmp5lq0KXPN5au4lfpujMbSb6Td
dZTzm+jdJ6To/Bp6aQRSEhS5pd6rZgKWiS3F18Ufo0tqUpIz56Qmc+8zKWnX
3PuyDsnM86PLLzgPaxpW2Y3Rng9z05mUtGlz154hSrfnPaN/HrAXUhIUuZPe
q2YCVoxImyX5HBStsCYoLX9+hn9hJz1Tk7n34ZRUP/G+KyWF3ZJqxsUpKdqw
+pQUFi4ekQMpKdr4rr3El97OeEznPGAvpCQoeswla1I1E7DKlFT5tGhJfAev
GJSW4H9KyBlN5t7rdVOT6vDd+ll3uJW7fLIp6faGnU9JmTRUWX8xz67bTG/6
OfSkPnnAvkhJUOSmecY1E7B+KSn1OlUtl/nsf5a0pCfbYbGayivn3heMpm+B
1Iq3N6y+JysPYvSAFjdU2RXhLtwr1Z5Mn3+C/09Q5lTJ19PPUJ18o0f2wwN2
R0qCouddu+ZSMwEbJyXd21cPU3PoW6WkY1PuEVJSWCC61u0NO5ySvhWGP0a3
2/xIRffoYkss+2ReFH+srPAy8XH+Ghf39jUesF9SEhQ9+CI2heI9Zen5e0mp
11LSBWoO/cmUlH+3Pihdc+hrZlabt665fBUbVtmNF/w70xuDTGuXupS0BF/C
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
LpWSNsLDuiTC0RKbtDzjrGDj3rsMRcv+lPR1OCVtVpeSJtKp9xwU1jLXpYv/
DZiSvu8e/o5c238Gb3PP6FIpaSOfkoqTlmecFWxISYM7kJKaPEtqlZJSs4jN
dGKzyvl+e63mvecSQUhK+vZDNCJ9pKSBpeLtLW7sBylpYznxWe69h5J+bh+n
5C1P/L2k71kXPf2ckGe07T3Hgqjlzw9hfoQf1HyXh2XCtzJlUtu6MSUVZ7yL
lDSqzF31VRlfSlrLDOfoj+F4v66tXCg6TWUcmet59K0l9ggpnGlsZh351Zun
pFYlCbXqPVcGMvKXlMrrSfGt4iXulnlmzZTpIyUNTEr6ISVBkbnQ4FLX8/wH
ret3NyXDFVOVtL2eS0nXaNJ7DgF5+VwTjTn1KSm//N6UFE1DUtJc6u+qmftm
qkB4C5aSYF5S0uBe+KmXE/KM82FW/1N0ICVtZpLFNDRaSsoMjejy1LT5Fp37
ZjLLzv8LYfFszBTLbOv2lAQUuYQOLn+NlZLYONN7ep5KqangUkpJu2aSmXnp
ldelY3fJF166Z1GZkn6Oe/FszJ/MUhJMTUoa3AtvtU7IMw73nm6nXnQqGE4p
i8XyM8nbU9KZ++MLL92zqElJmYdEmSSVOucdmsHVjHTPZ9/J4R7cC2+1Tsgz
jn3orc/Z5fEp6fygyE/Fv7Pr9ev6t9bz83CibiqedzglZQ5BtFjx9n3vofF7
SV/FBLRZ7qb5Ho714KQk6h2LSD1awrOFUSWafSoDUVhb5kVYuPmuNamzmFyK
r2uKhbP00abiAyqmpPDEq1kYTUyD3FWjpKSvJWbzbnSVa5vJDRzowUUH710u
2+VrNvQ8u7ruymPKwyyxD8+jKWlJT/tTxaIXn0yOaLtfDavam5KinZNPT/mt
jDAVH1Cm0zInW01XH0hJTCF1Il186nK9zAnAyH6tjFnhYU7Iw+q7TidzxvK4
Z9zNb4X5LlqCuXS0fOqtRUo6IdNpSzrUp16fTEk39oNnSV/5fCQlvZmUNCkp
iVBN1xnynPeklNRpROxKSanCqbfWKWnwqfiAKnv7O0/+FXvok6khX2acQyMl
faXy0ffd1FpXNZDbmDJNSkoiVOw6fUsTz0hJXW9/u1LSr53PktZTeilpr2ec
vedJSV+pfLR+t2Yhz+NAT0pKIpTpOiOdhmafZ14wHPampGjeybw1y1R8QLOf
va1ISV/FC0L4dMmwegnHelJSEiFfDOAa884zK295mQ+Wm3RRNCWFaSjz1ixT
8QHNe/a2JSXtkn/exFM53JOSkgj5VgDXWEayq82pt6I/1lcerTMzN/6xeV3/
1kRT8QEd6EMpCd5p112GcUhJhFKTPWjrr1Pr9+f3CP8qT/J8sYtT0qum4gNy
aH5ISWcYVi8hJU1KSmJj3W/GNV1NlJJqxoKU9Cq7nlT2dmM/SEkn3Xv4uMbt
43Qu0Stb5nIXvvX9MXq1DF9ES4Y1pFYptvBLSprd0mJqBzWWVUoKr06bFLNZ
mC9fXKs+JRUveplL67fAmS66PR9JSWRISScZWW9QvI/wtfwZdjILM8XyldS/
qCmZWhglJc1uc2JAP2EUiv64iTnF8qmF+XWjzds1EDbXzO9QkpJ4MCnpPIPr
8aSkSqkEFEaS9WeS3+VSUj0n5DHGMpepSUnR5z6pWPS9bJ5MScdGQY+BIyUx
OCmpCePr2cysKqV6qfgsKbyJh68Pv4jmLynphQxkrnQsJeUfHp18lnRmCHRK
SeNovnc8gJTUhPH1bC6hlVK9tJRSUurFJ8g7mxf5GooFUptIkZImFZ4z0NuS
+OWjH8UolHnrQEpyF4MDpKRWXH8ezP2lUqaX8rfp9bvh608pGW3KRN8N2xD9
Mb8XUtKMookYegujSs3X6ro+SwJ2kZJacRV6MCmpUthLx/rtfG9n4tiZaqWk
uYQjV79xmWMpqSZASUnAdFyInkpKqrf53F5K6sQJWRTtIv3GZWpSUvi6PiWt
C0tJwPhcix5JStpl85W587Uda8DJ7UZJSVNInQA6jSuF8ecrmneW1d9zSJXM
fysvU//dnQHgLvxMUtKkmocaKWl8mZ7RaVyp5itz1/xz5sMxfi8JiqSkSUlJ
r1IcpzqNK0lJMDspCYqkpElJSe9R0yE6jStJSTA7KQmKpKRJSUkvUdkbOo0r
SUkwOympExelJ5GSJiUlPd6usanTuJKUBLOTkjpxUXoSKWlSUtKz7e0EnRa1
jOTuzmjp7r78w92dAVOSkvpxXXoMd5lJSUlPdWxIvrzTUv7qll9/+3T9V7mJ
hx2gCzq2vv/v7gyYkpTUj+vSY0hJk5KSHunwvr+50zKkpE6kJJidlNSVS9Mz
SEmTkpIe5sxIfGeP1chM5r/f18osDMtkluSDw8OOUaZPMj9mvjW3iZyZAmFt
d3cGTElK6s3V6QHcZSYlJT3JyV1+YY9VKiaX/MIwQ4WvM+XfkJKKfVLs0tS7
lbU9rGPhMlJSb65OD+AuMykp6RmaDMBX9dguZ1JSZnK+XvLIlFQ8LcN9T/VJ
sYs2HR59riQlQXNS0gVcoGbnLjMpKekBWu3pe3psr8MpKTOZzyx/WErKfKUt
1Uub/LJ5VHQsJeVrm6tjYRxS0gVcoGbnLjMpKWlqbcfdG3rsmGJKCufe4VRc
SgpP15qUVHwStCslpWqbq2NhHFLSNVyjpuYuMykpaV7Nd/DxPXZY/bOk1Fy9
MiWlslU0kc3uU52SwgKpJUtwLPJLpCQ4SUq6jMvUvNxlJiUlTarH3j27x87I
TOOLTyuWuocg0Uqi2+q3j80v4/mI9Cn9XpKUBOOTkqDIXWZSUtJ0+o21p/bY
eWdSUj4o/RzNEVLSp8/TyVQ++hbI9EmmN1JJp7gwVcbJD8dISVDkLjMpKWku
c02SHyMfW9Y2C6M/bpZkij0sJUUL5Pskn2sySzIlUwex7b7DS0hJUOQuMykp
aRa9h9jDuqutfHK58t8F50DDM61Y1Us6FqAVF6sZSUmTkpKmcMG+PKm7mnvq
ZH4Jvv/2XXLN+fDUjgXoxMVqRlLSpKSkwV02sp7RXZ08dTIfpqTUW508tWOf
anmlu3sdtpyW03ExGdytN5mty3b5sg2N48xeNOyTh1keOplfpCQpKavV5WVq
eiDP7yXdwtk4FxeQwf11dH5/ftf/W5ffu26x5st2+bIN3T7HOz/TM34znnGI
17sTzdfry7iUhD4J6ZOQlHQLp+JcpKTBSUldN3T7HO/8TM/4zdjxMK+/tvu1
2cfPtRfz2zox5ppdnoIOydAzG1LSXZyKE3FRHdzyZ+r5EeaXVLFwlc0EI1U+
uuJlu3zZhm7PR1LS4Mbs3jFbxe2cGHn6Z01KuovzcCJS0r2K/b/JRNGItH6R
KXDg9ab+y/rksg2lMsvXZkn4Y+q1lPQAw14ex2wV92p7VnyvZg3rzG/rgg19
jJ0VKelGzsNZDDsNeInNg5togcqUlHm0lI8/UlKYWcLXm8LRMmExKWleV84S
4aQeJ+rFJ//zbjGDk5Lu5TycgmnAvZaYTYHMk6N8qJGSihuqyS9S0jtJSUzk
ASnpsi0a1D+kpHs5D6dgGnBGNOM09ImlpK/8N+7WLzarFFNSdJV+u3mj2VPS
4RXJ25wndzcHCnqcpUvsr4JsxsXmRbhK+CJaT7+9CBnRP6Sk2zkVx2cOcK/M
BP5bIP+oaJ1forFoqXhmVPn6sj65bEP55LKJPxuplBQWkJKmEx2MMKZOp2gY
dvLZp8nCC4abEf1DSoIic4B7ZfLRt0D+t5CK/6SkzIaKj5BSSzIp6cBzJSlp
KPkhCaPpl5I2r/empO9a9atfM9wM6o+UBBXMAe5VnIxlUlJlYpKSMhuqjEhS
0ntEP7jQz4zsspT0CX5fryYlfWIJKFWPlHQZKQmKTADuVez/JfubQTURKVp+
vST6Oqz/nSlpOfF7SVLSjKQkptMvJaViTiolFYtV1tN8XzaM6I+UNAxn48hM
AAZXE4Wu+feelPQr+PWi9evNj9HX68JS0nSkJObS4/xcR55oFPqsRsq6GZt3
N8Wi1YYFeo84I/ojJY3ECTksE4DBLVJSzw3VB5mu/6SkMelepnDjibpc+wyo
lYma2o+UNI5+H3REJ/mZzyLCjz5qPtBIvcgsr6m8eZ8cME5LiJKSum7o9nwk
JY1M9zIFKWmviZraj5Q0lLbn5Ka21DhNBaVMyfzCb8YprlVTzwikpMFJSV03
dHs+kpJGpnuZwggnas1cYvPRccPt7q1zhB67nZQ0mlanZVhPJn1UFpaSGJOU
1HVDt+ejMynJyO1K9zKLKc7VHk+dDtc5RY/1JiWN5paUlFn9cEr6JH5pcf1a
SqKJZSSX7fJlGxrHsfY37xO+dC+zmOJcXaQkKGlyZm4qWU8zaupfSoEofL2p
P6whrCpf+Tgj9PAMjXv9WhmzwsOckJV0VFe6l1lEz9XNJzCbech6blPzVqrO
XWXyr9cL86KrnO8xuF2TMzNTSbH+/BhPjd+w8vxFoFj5rv3t6sDlhRFISeio
rnQvs0idq5tJS/F1/q29BTYvwsKpAvUvDg9So5thnT85i2OtsnBD8444KWlS
UhI6qivdyyyKKSn/kW+qqsoQlNp0NNpE6z+cksI6KxndH7+XNKomJ2fqsU7+
rU2BhsNk3hEnJU1KSkJHdaV7mcWZlPT583tuxWqLD3FS9dRHngPPkvaOVqP7
IyUNrFVQ+o6m1JBPbSt6QWhlrtEnJU1KSkJHdaV7mcX5lJRaHk6WinOG+kSz
mafVx6jiHhUZ3R8p6TVSn4GY/9fQS5OSktBRXeleZpFPSZuME5ZPfaQcrpgp
vFlxHWc2GWcTvjIRbFNDZpW9Mxmj+yMlvUN0FEd/JEpKmpSUhI7qR98yketT
UmajDXXahNH9Q0p6AynpJClpUlLSy+mlrnQvE8mkpGj2yQei6MJoOOo9TKSk
rqSkwR0+UTdPV1MPWzNPe1Mrhs+CNws/wRVmszx8HX3r2I73MFp7qCQlvZxe
6kr3MpdUGqpcnim2axJV2bYamw0dqKFte55HShrf4XO1ZuxEh1h0xW9+ydS/
KXOynnFISbuk7i+pblwC4cL8knAT5+9ZUVLSXPRSV7qXuThj6+mrH1LSFA5/
yLB+nZqghq9bpaTMVqSkp8of2U/i4GbOgZrTrGat1MJdpKS56KWudC9zccbW
01c/pKQpnExJmcmhlFRDSqqUOvTRE2DzfGfvCynp3gZMQS91pXuZjpO2hl76
kpJmceCkrUxJ0WKZyW1+xeJ281PcVM66l5RUKdVLniU154Ss8fJeWgLhW9Ef
N+tm6u/XeOjEeZunf9akpFmcSUmfxC1vnUpSUSW/Vr6SsIbMfXlT7VDyUwW+
Ur0UjSrRAuFpEF3yCc6l4otonXtJSXPRS5seyIzEyrdqlsPI3NAzdM6GlDSR
vadu71O9vv7ZB53rRqVML4Vxe/PWJxaIPqtMFBb+BFkpDOapH/OtTZGS5qKX
wh6IfoCQWR5dkloIs3ACh/RJSEqay65zWEpqRUqqVDm/OllnTc2djpeUNBe9
lB+Sy0rlKvmFMJHMZ3evoh8ypKS57AomXU/7w5XPOBJdQOqFc7CGFdYsr3n3
MClpIrroU5GSMgu/P0YHsu7lMZZ3u7v7hyYlTeepp/TIA3bYho1pfSgr+y1V
LNrzmVOl92GSkiaiiz51KWkJYtGxmgEeRkqazoPvTcPumpQ0qeahRkqaiC76
NEpJt3wiAXA7KWlqD7tPDbs7UtKkpKQ300WfFgnorue2AHBYzVfUNt992rxe
L0y9taknX7j45ahonevCn+CmHK0h1fhwK000r5BrSElvpouiF+2wTH7dVBnd
C8CAije+TeHwddsX0U0UNxpdXlNzvp6w2HlS0qSkpDfTRV3pXgCGEn42OGNK
Cvco1dTKxq/r6XHvlpImJSW9mS7qR98Cb+D3kiYSjUhzpaR1m8PGH0tJm3rq
e6aelDQpKenNdFE/+hZ4AylpLudT0iZZbCJM6q3wxbpMMSVFK8xUm685tfVU
tedJSZOSkt5MF/Wjb4E3kJKmczgl5eNPzVupGLVuVbS1n1WESa0VvojWXLP1
5qFGSpqUlPRa+qeTXXcfgKlJSZM6kJI4zHxgUlLSa+mfHqIfYd3YHoCupKR5
VQYld7HzTAYmJSW9lv5pLv9tAYDnkZKmVkxJvhfRhD6clJT0WvqnuVSX6mrg
qaSkB+h9k1pHrXfmhXfu9QNISa+lf5q7KyUtI7F39s7eXa/53tVrnpLu7ss/
NOmil1v+/BZ6uPANnE6TkpJeS/80l+rS3l39V/2/P79H+NdjT/+q89ffPiP8
67R3tx81x87endEjJd3epSN07GNEU9LnZZMQKWlSUtJr6Z/mopfBCz6TNNOe
d8rk2E197G7fr357V09KeqrNzWv9Y/j68+cdMLPuuv7L9uV2UtKkpKTX0j89
bK6E0dtE86vlz0z7W/N63psSLRMuzBcLl/c4qZZHT5mWnSkpdWhSh3uQlPRt
z/fHcHnY+OiK+R83y9f19Nu7+vMnv4Ph6ykm83elpMzJsHkrtcrgHTuCJZ1r
ltWtLfwx+iKs6j09/HPi3d0KdpOSXkv/dLKZCNUUq6kz/+53orue9K6X5H9M
rb55vWRn3Z3uArumNJspUDhrWpsxJRUPTeXBuv5Z0t7X3x8zBWqqWoZJSbt2
cFfl917Mb3yWFO3PfAcO0rGVt4nbLftTUqpwtKqR972twQ80KVLSO+mc3nb1
cPGOmb+Z1kyVl+yjospklJ94H7sLFNfaO6vJTDg3k9K9s9xOe3c4JVXGpX4p
adexqzkK0SOSP16V8+Tbz8zKXViC3HTvZL7G3pTUsGMrj37xELTt2JodzCeI
VprUnLo3LUFK2hTb9eLx+h1lupKS3knndHXyehi93UTvU993KzPR90V0Fr3c
l5Lye3dgFhqdL20W7qr5zEy75tidTElh+N1bc+9jt+xJSeHC1MFa0vPkTYVd
967J+XnstDw8mW/lWEpqOOS/MmdCcXnDjs3vYP3C84pdXVnJ5sW68s8qJYXl
M2+F9T9bp0NMb1LSO+mcfk7eklK1Ze53y2pi/BWdUW9K5ufYmyWphevaDux1
zd6dnIWup1KHJ6JNZtqZY7crzkQPTT5DXZCS8sduqUtJ6yNVExzCAx0tcPuZ
WbmDSzYStp3Mt3IyJZ3s2OiJlOrqvX17rGPzO5iqs8dBLHZ1ZSVh875VbXZt
SUSkVEsOt2o6L9nN55GS3knn9NP8sh+9v2zuTfmHQUtF0kk9sEhNvJcgKG0q
b+LT4oPlpWJ+vrfyhnt3ICWlXi9ByD0WvhruXZhWikuKxTKT3rDYd/Wue3d4
Sv9T22Y3vwvvOjNvdGDIZ457/vVdHbvrOh+u1apk/Q3oY85w2q4+ZxxS0jvp
nE6O3YZ21RluYtn/7bhogdTqlfUf2+XiTXw5/XtJ4bTzu4m9U9wee9cqJRWP
b7Harsdu2ZOS8skidcQzs+Xbz8zKKfqBOo/tXUNNniUd7tjwLCpeCnp3bH4H
U3X2OIjFrq6vp3nb3uZAtzMCKemddE4nZ+5ElXVGb7sHUlLmSUR9SgpraLJ3
mwLHZqG7Vuw0ZarZu94pqXITvY/dz7thl6YO2RILR0uQiSrrvP3MrDw/j520
B/buRs07ttiT63Np7/Wk+Q6G+5taeF6xq+vrad62t+l0iOlNSnonndNDk/tR
vtpUgd/BN6bqp9zf8stqXh1Wlap/U8OZvYuuvjwoJaWO3a6IVH+Ud50MXY/d
t0zYpd/lSyBcMawnWmd0xX57V3/+hDsYFrjmzLxRj47Nd3W+cPOOrdnBpZSb
mii25PHG2fFxWsIuUtI76ZwewlnQNf287H8e0enfgf0t9lL9rCY/BT3/r9Pe
3X7UzqekTIHmR6HrsVvvUcMzc5C9q9/3rh7fsTXdeM1twsz8xwid4FhMSkp6
J53TXDQine/nyhvu7XPswzPtmh64fbLUcC4a7t3tR+3MsXvedHdXydv3q+2Z
eayeG/+vsrN0LLe7/VBKSZOSkl5Iz/TQKSVlav7WP/tMu7j7t0+W+k2ZZj92
UtII/6SkwTt2Upu7WHhTC+9EqcKpO9f6ReatVCXF1ddN7ddRNcImMQUp6YX0
TG9tezh6a9jcO26fY0tJh/fu9qN2PiWlJgAzHrv8Hs2+d632fU1Kqtyp6NX7
k0gf0bfCkr1lssa6VakXlcX6vVj/eO/MR0qalJT0Qnqmt2tS0rrA7XNsKenw
3t1+1HYdu3D6kZqZfCY5drv2aLq9yzu872tSUv1+pX489tYFpKRWpKRJSUkv
pGd6a9XDqXwUndsMosmO27tbVDY49WNYw83786cmezTd3uUtR/d9rUdKGsfJ
fdnsV2rJ8mfPL+kD0btJ0TLR3ggbn9qdG1+kFl6v+enENaSkF9IzvZ3s4fCW
1O/GDbtk5myTnpnP26N6Tfa9eUp6qpqUtMSeevS4+NdXmEoZZ1LSdzc3+5t/
K1NPTQPCXbiSe/ekpKQX0jO9Hejh/H1QROJeS8znz1v/XCfn8/aoXtt9l5Iq
hV2amt5vSjY/IXfdUFJN2pwzmwqjP25ebHaq8q1MPWFLUq+vd+OmOUNKeiE9
01t9D1det11gGcT6PIzOrqfzvD2q12TfpaRKYa9u4kCYDqLvnm/GWk35yq2P
M2TGacnXSy4pzyMlvZCe6arybuKayYyed9I+b4/qNdl3KalSPiVtEmtYrMnB
2huRou05WewC47Tkyx1/UlLSC+mZrlLde+DeBKN53tn7vD2qJyVdKZp9im+l
lhxrQNeUdEElt2/iMLf+SUlJb6Nbegvvdy6PwFNJSTUyCSX6YzE3nW/A7Hel
XXtx+/7e3gCOkZLeZrRuiV6679Jqjz7CEfAOUtIU+t3ybrGkn8RVrnWx2Tv8
taSktxmtW5YH/Q8En3H3AagnJU3k5Slpb+GGZu/w15KS3ma0bnlAStrccUbr
YYB+pKS51KekmmdPm+WbW2Fm9fC++f0xfBGWT9WQqe37VqmHupCSJiUlvc1o
3VKZktZX2uLyVOG2KSl14xithwH6kZImsjcvhNEm+uM3j0SX5+upWSssn2/J
rnWvISVNSkp6m9G6pT4lha/DxJQp3CQlrfNXpkzTHgIYl5Q0kQMfBh7+8dMz
JX2Ch0c1m5aS2EtKepvRumXX45518ImuGC5skpKKyWhTuF33AAxNSprFgXvT
3pS0uVde8Czp+2Nx05lIdQEpaVJS0tuM1i0jp6Rd4Wi9VrvuAYAGjqWkzDco
wqgSXR5uOv9s6FhKqq8tbM8FpKRJSUlvM1q37EpJP9eZTPxZgt9O2lX5p+47
dfndad1DAHDK+TtatIbwCU7+OVFxxc2S1I+f4GZdX9uZW/xhUtKkpKRXGbBP
6oPMkvgtpOjCXflonarO706TbgGAe518/pJJSXu3PjspaVJS0qsM2CeVcSYs
lklJByJS9Bt3x3bnfCUAs/B7SQ8mJbUiJU1KSnqVAfvkQEpKPTCKLt/1rKrJ
7pyvBGAWUtJTLX86tvpHQPhnOmFSUtKrDNgnu1LMV35hZrmUBNCQlDQ4d6UR
SEmTkpKGtYyk624e+HZcj39NdrNrXwGMRkoanLvSCHpPpehEShrWX+3//fk9
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
SUkvMXJvjNy2oqkbT1R4TH+WSEkQkpJ6cJF5GClpUlLSSwzbG8M2rNLs7d9r
/X2z/HfSbmpgA5nGP2DvoC0pqQcXmYdx45iUlPQSw/bGsA2rNHv7D4h+Gy1f
bC6plnuWBCEpCYqkpElJSS8xbG8M27BKs7f/gNempI87HQSkJChy75iUlPQS
w/bGsA2rNHv7DyimpNlvB6nfSwKAA2a/Lb6WlPQSY/bGmK2qN3v7j9mkpNRv
J13erpbCfbyxMcB7uNo8kvvIpKSklxizN8ZsVb3Z239M6lnS84LS+u9UpN6d
fTeBcbiePJWbxaSkpJcYszfGbFW92dt/TD4lvSc7hAHqDXsNG34vqSHXkKd6
yW3xeaSklxiwNwZs0l4P2IUDKp8lvcHDHp/BAVJSKy4gDyYlTUpKeokBe6Nh
k+56fjFgr/a2+R6aL57pCl5OSmrFpePB3BomJSW9xIC90bZJu2pbRtKwE7je
Mt3TtL8aOc4/5iclNTHH1YOj3O4nJSW9xGi90bw9uyr8q/Dvz+9+/+rrH+24
UOl74GZMSXdHo//5b/aUdPXnKVk39oOU1MS9B5Hebh+nHCMlvcGAXdG8Scvq
i081haUkTpr1rrfcn48ek5J+/e0zwj8paXZTXknYY9b7xetJSW8wYFecb9Km
hvUlqFj5JsV8P4+NLgzfjZZPBaVUJVIS95CSGpGSfkhJe4XPAd0IHk9KmpSU
9AajdUWT9oQpqb7+aFopPhL6+XETl2oeJ60Tk5TEzapT0vdldOH63/pdKUlK
urEx49vMlk2eX8KBnpSU9AajdcWkKSmzZPOoqD5PjXZo6oUfhz7bc/a3LshE
s0/mhZS0ziw/1ksyb62X5H+UksaXvz5E353+kkIFR3lSUtIbjNYVZ9qzxHz+
vAQV66+JP5UpKfMgaYk9iho/JdVczDdlpr7+P2x/y22rCDJhmZ8l+ZT0CR48
zZ6SijPeTGxJ/RiulSkcLS8ljSy8N23eTa3Vv2ncaeS7BhlS0huM1hVN2hOd
tVZeiKLx56tTSprlG3f5u/zncR+HPmx/i7tzLCVtolAqLj0yJWVmvDUp6Wdd
Kekllpj1u6m1rmog9xj2lkGelPQGQ3VFq8acqSefX5bsrxHVRKRUDTOmpPDa
/rAb/cP2t7g7Z1JSKhy9JCWFM95iSvp5sSS+fRd+7y6sM7OVcF3GlzrTrjqp
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
3pQMG1xZT6rCcOG8pCQoCq+cTEFK2ltnavZ1uMImDTtffzSw3PJPSorOqH+E
zyyWxOOMTbEnzdvz8iP0QMxZpKTsLT6zPDwKm/hQn5LyASSfkqIBpzIlHWhG
ZqOprUxNSoIiKWlSUtKuCqWkMVPSON14rPJWE++XzNvz8gNzb29vxvsLe7t4
oatJT5vX4Y+bi+q6TBg91mtlln8q0kpm3WKDU83IbzSzfFJSEhQVL6SMSUqq
ry3qfLVNmne+/mXalDT7lWeRki6kt5uryQJndvbKrHGgzmtWGZmUBEVS0qSk
pF0VSkmjpaRrLjtdt2LefiW93dwjU9KuK+fhrTyDlARFUtKkpKQD1UpJg6Sk
y645UtJj6O3mojvS6jpZuXrDzjzT5oubOggpCYqkpElJSceqbZKS8rOLMzXn
N5EqOY7me3dev20t5u0X0tvNPWZHrvG87pKSoGjX3IZxSEln6jy5idTqDVt+
zai8Zexfv9FOW7w0f5b02MGh3N3Bf7i7M5p50r709ry+kpKg6GHX/PeQkm6s
M1Vbw61cMCpvGftXbvG7LZe4d3pqtGlIt9R7Xl9JSVDk9jEpKWnACpfgz9s2
30Qrt0wd79qcS9wbvOTpT1t6pp6+ghdyB5mUlDRghevRdHKjXUflLbPHW64z
rm+vIiUdoHNq6CV4J3eQSUlJt9S2qXMzB1tva9iUdMvs0UWGC4hIx+iiPP0D
r+UmMikp6Zba8nWOn5LumkC6yHANEekAHZXx4M7xe0lQ9OArwLNJSYerOj99
yqSk6HOlhps4Wectc0hXGHpbgse7bm176a7Qs/tESoIit5JJSUlnquoRYb5D
qcmYaj4qoxHpgrHv8kJX4WksIh2m6368pB+kJCh6w6XgkaSkM/UM+KDnmk1c
nJJcW+gkcwK7qZ2X+lDlJe7u/otISVD0qmvCk0hJZypZTjz0uWa89NvKZfMB
FxZ6cM+CJqQkKHLHmZSUtKuS8Mfvkr2be0BKungr0IS7FTQkJUGR+87g2n2J
oIHLdrl5DUs6NO3d3DX90G8rs7efd3JGQVtSEhRdOfvlgL+Ozu/P7wP/vtHm
5/WxSjYVXrbLzWuQkrpWe8tWADhMSoIiKWlwxwLOeq1vVnpJStokoOgTsfVp
LyV9mv5NJ9cTmnBvgq6kJChyJxqclNRk9TA6fY6e/POmpHydIhKDcFeCC0hJ
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
7cvshQAAANzCdyIJJQAAgEf8LwkAAIBPH+V+yKo=
   "], {{0, 0}, {1122, 761}}, {0, 
   255},
   ColorFunction->RGBColor],
  ImageSize->500,
  PlotRange->{{0, 1122}, {0, 761}}]], "Output",
 CellLabel->"Out[303]=",
 CellID->2019329860]
}, Open  ]],

Cell["We can also create snapshots and an animation of this data.", "Text",
 CellID->973016157],

Cell["\<\
First, let's extract the members of the pathway in the analysis:\
\>", "MathCaption",
 CellID->499168171],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"membersBCellReceptor", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
      "\"\<SpikeMin\>\"", ",", "\"\<G2S2\>\"", ",", "\"\<path:hsa04662\>\"", 
       ",", "3", ",", "2"}], "]"}], "@", 
     RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}], ")"}], 
   "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[306]:=",
 CellID->1448324815],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"PTPN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IKBKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPPL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NFATC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q08209\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JUN\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PPP3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CARD11\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"VAV1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAPK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AKT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPP5D\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RELA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IFITM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P29350\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NFATC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKCB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CHUK\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SOS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RAC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PPP3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAP2K1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CD\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SOS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MALT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BTK\"\>", ",", "\<\"RNA\"\>"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[306]=",
 CellID->863400676]
}, Open  ]],

Cell["\<\
First, let's extract the members of the pathway in the analysis:\
\>", "MathCaption",
 CellID->401232237],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"intensitiesRNABCellReceptor", "=", 
   RowBox[{"DeleteMissing", "[", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", "membersBCellReceptor"}],
       "]"}], "@", "rnaFinalTimeSeries"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intensitiesproteinBCellReceptor", "=", 
   RowBox[{"DeleteMissing", "[", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", "membersBCellReceptor"}],
       "]"}], "@", "proteinFinalTimeSeries"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"intensitiesAll", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
   "intensitiesRNABCellReceptor", ",", "intensitiesproteinBCellReceptor"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[307]:=",
 CellID->411555679],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PTPN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.038778745126709355`", ",", "0.`", ",", "0.3308909839321027`", ",", 
      "0.2206704394223557`", ",", "0.2874901450208439`", ",", 
      RowBox[{"-", "0.04372751379598624`"}], ",", 
      RowBox[{"-", "0.0980776066271067`"}], ",", "0.12251107438865769`", ",", 
      
      RowBox[{"-", "0.3241506774095029`"}], ",", 
      RowBox[{"-", "0.33317776309605013`"}], ",", 
      RowBox[{"-", "0.37502722437199104`"}], ",", 
      RowBox[{"-", "0.21910186659265724`"}], ",", "0.39717063159367816`", ",",
       "0.04620549589280256`", ",", 
      RowBox[{"-", "0.40805572502422266`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"IKBKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.41824938578802684`", ",", "0.`", ",", "0.4346283454510505`", ",", 
      RowBox[{"-", "0.09710561003766262`"}], ",", "0.15912542561628146`", ",", 
      RowBox[{"-", "0.1626590038855592`"}], ",", 
      RowBox[{"-", "0.19573472345395784`"}], ",", "0.10553716044254315`", ",", 
      RowBox[{"-", "0.2071194529277627`"}], ",", 
      RowBox[{"-", "0.28202825579531565`"}], ",", 
      RowBox[{"-", "0.10536321562270572`"}], ",", 
      RowBox[{"-", "0.17518129203252875`"}], ",", "0.12695507826666746`", ",", 
      RowBox[{"-", "0.25526064190720155`"}], ",", 
      RowBox[{"-", "0.5291533255664163`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"INPPL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.10615989393495232`", ",", "0.`", ",", "0.18840596303037413`", ",", 
      "0.048047135096177244`", ",", "0.16619626570031684`", ",", 
      RowBox[{"-", "0.21175531708410275`"}], ",", 
      RowBox[{"-", "0.12432399739780184`"}], ",", "0.03841171024699074`", ",", 
      RowBox[{"-", "0.5024806637593322`"}], ",", 
      RowBox[{"-", "0.16603574538014687`"}], ",", 
      RowBox[{"-", "0.19614635461512267`"}], ",", 
      RowBox[{"-", "0.307538378078446`"}], ",", 
      RowBox[{"-", "0.017124915407234483`"}], ",", 
      RowBox[{"-", "0.3080918215676708`"}], ",", 
      RowBox[{"-", "0.5943143512516815`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NFATC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.05041220188957137`", ",", "0.`", ",", 
      RowBox[{"-", "0.15159602607738404`"}], ",", 
      RowBox[{"-", "0.3418182940818629`"}], ",", 
      RowBox[{"-", "0.10165562085013555`"}], ",", 
      RowBox[{"-", "0.13035895850832396`"}], ",", "0.26759080168486116`", ",", 
      RowBox[{"-", "0.0967033158357252`"}], ",", "0.7683894970650806`", ",", 
      "0.0553952007923425`", ",", "0.1603313546397198`", ",", 
      "0.15817945741016387`", ",", "0.0784527804797115`", ",", 
      "0.20758000806705793`", ",", "0.23641401575061569`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"JUN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.47668369234111063`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.21499367785632137`"}], ",", "0.17941260040124263`", ",",
       "0.21054955024730262`", ",", 
      RowBox[{"-", "0.043220651159810164`"}], ",", 
      RowBox[{"-", "0.272109969536928`"}], ",", 
      RowBox[{"-", "0.19091017669392285`"}], ",", "0.2568869926746049`", ",", 
      
      RowBox[{"-", "0.08590868949633254`"}], ",", "0.20594997280838284`", ",", 
      RowBox[{"-", "0.3944573995520664`"}], ",", 
      RowBox[{"-", "0.30324047113994684`"}], ",", 
      RowBox[{"-", "0.2250957883007071`"}], ",", 
      RowBox[{"-", "0.35166129631647564`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PPP3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.016629257206749837`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.46936479241186474`"}], ",", 
      RowBox[{"-", "0.1347145588576748`"}], ",", 
      RowBox[{"-", "0.26808358766824847`"}], ",", "0.04078121233113895`", ",",
       "0.2734643155740791`", ",", 
      RowBox[{"-", "0.14573410310223814`"}], ",", 
      RowBox[{"-", "0.1347145588576748`"}], ",", "0.26356252374763406`", ",", 
      
      RowBox[{"-", "0.48081353732225546`"}], ",", 
      RowBox[{"-", "0.08746382927257018`"}], ",", 
      RowBox[{"-", "0.5055941746797294`"}], ",", "0.03411635754083646`", ",", 
      "0.09211339971620953`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CARD11\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.11121721141851255`"}], ",", "0.`", ",", 
      "0.21626391246224105`", ",", 
      RowBox[{"-", "0.38169948822881583`"}], ",", "0.12294951236820212`", ",", 
      RowBox[{"-", "0.11267241876505982`"}], ",", 
      RowBox[{"-", "0.24187539695241472`"}], ",", "0.09026581699905412`", ",", 
      RowBox[{"-", "0.6816227833021119`"}], ",", 
      RowBox[{"-", "0.19950063694707412`"}], ",", 
      RowBox[{"-", "0.005313630005752559`"}], ",", 
      RowBox[{"-", "0.07275149486016533`"}], ",", 
      RowBox[{"-", "0.026962565586229257`"}], ",", 
      RowBox[{"-", "0.24773153848263935`"}], ",", 
      RowBox[{"-", "0.3589900252045054`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"VAV1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.16786761644547143`"}], ",", "0.`", ",", 
      "0.08511549101992526`", ",", 
      RowBox[{"-", "0.09588517585046787`"}], ",", "0.05464155304336848`", ",", 
      RowBox[{"-", "0.07928233004292208`"}], ",", 
      RowBox[{"-", "0.19251986600408416`"}], ",", 
      RowBox[{"-", "0.009326149016929316`"}], ",", 
      RowBox[{"-", "0.6419092268717677`"}], ",", 
      RowBox[{"-", "0.20359394490186375`"}], ",", 
      RowBox[{"-", "0.20013072508875882`"}], ",", 
      RowBox[{"-", "0.30835064547338437`"}], ",", 
      RowBox[{"-", "0.07671201247995124`"}], ",", 
      RowBox[{"-", "0.3658060131969946`"}], ",", 
      RowBox[{"-", "0.42500639615153174`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MAPK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18138248999321507`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.08977285477189995`"}], ",", 
      RowBox[{"-", "0.169229556455112`"}], ",", 
      RowBox[{"-", "0.08681793038600419`"}], ",", 
      RowBox[{"-", "0.1816373745988602`"}], ",", 
      RowBox[{"-", "0.21979066981068787`"}], ",", 
      RowBox[{"-", "0.16471189634013272`"}], ",", 
      RowBox[{"-", "0.6859762549997955`"}], ",", 
      RowBox[{"-", "0.11192443485740455`"}], ",", 
      RowBox[{"-", "0.053510227687117516`"}], ",", 
      RowBox[{"-", "0.32349878752971556`"}], ",", 
      RowBox[{"-", "0.18604523095988545`"}], ",", 
      RowBox[{"-", "0.3282300261180281`"}], ",", 
      RowBox[{"-", "0.28545062326456044`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"AKT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18166493911072917`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.030819659285723028`"}], ",", 
      RowBox[{"-", "0.2729441269266965`"}], ",", 
      RowBox[{"-", "0.11342959819258822`"}], ",", 
      RowBox[{"-", "0.19522720479585642`"}], ",", 
      RowBox[{"-", "0.2887644913340973`"}], ",", 
      RowBox[{"-", "0.0677041487423092`"}], ",", 
      RowBox[{"-", "0.52735465330263`"}], ",", 
      RowBox[{"-", "0.1568865238867638`"}], ",", 
      RowBox[{"-", "0.0753421617956879`"}], ",", 
      RowBox[{"-", "0.26016912239448475`"}], ",", 
      RowBox[{"-", "0.20377938610793608`"}], ",", 
      RowBox[{"-", "0.4247794469533678`"}], ",", 
      RowBox[{"-", "0.39313667030617344`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"INPP5D\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.0946381024990129`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.049984151316888624`"}], ",", 
      RowBox[{"-", "0.2095209987368932`"}], ",", 
      RowBox[{"-", "0.0834030741831631`"}], ",", 
      RowBox[{"-", "0.2060534090399563`"}], ",", 
      RowBox[{"-", "0.19423460952173655`"}], ",", 
      RowBox[{"-", "0.13857663323255798`"}], ",", 
      RowBox[{"-", "0.4455559038634096`"}], ",", 
      RowBox[{"-", "0.18885978233256123`"}], ",", 
      RowBox[{"-", "0.19184147400734922`"}], ",", 
      RowBox[{"-", "0.2648788290396264`"}], ",", 
      RowBox[{"-", "0.21162241201560938`"}], ",", 
      RowBox[{"-", "0.44345153067800686`"}], ",", 
      RowBox[{"-", "0.50568388038928`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"RELA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18218411686836491`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.10283215314268605`"}], ",", 
      RowBox[{"-", "0.1920873392381627`"}], ",", 
      RowBox[{"-", "0.10709101837664896`"}], ",", 
      RowBox[{"-", "0.10788619319749143`"}], ",", 
      RowBox[{"-", "0.20980765573945362`"}], ",", 
      RowBox[{"-", "0.16111518044662473`"}], ",", 
      RowBox[{"-", "0.7322285320440992`"}], ",", 
      RowBox[{"-", "0.12830505287795277`"}], ",", 
      RowBox[{"-", "0.17930374405806218`"}], ",", 
      RowBox[{"-", "0.09545359444054347`"}], ",", 
      RowBox[{"-", "0.1867661108641838`"}], ",", 
      RowBox[{"-", "0.32184454851160965`"}], ",", 
      RowBox[{"-", "0.3064378479173295`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"IFITM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.07629081318852289`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.07629081318852289`"}], ",", 
      RowBox[{"-", "0.32878631152146626`"}], ",", 
      RowBox[{"-", "0.10386155158442957`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}], ",", 
      RowBox[{"-", "0.4365214579425223`"}], ",", 
      RowBox[{"-", "0.03143304260487128`"}], ",", 
      RowBox[{"-", "0.5947599533539297`"}], ",", 
      RowBox[{"-", "0.3587043950845741`"}], ",", 
      RowBox[{"-", "0.16703826387813744`"}], ",", 
      RowBox[{"-", "0.15371768783658935`"}], ",", 
      RowBox[{"-", "0.29091194672606924`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NFATC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.20739212171844623`"}], ",", "0.`", ",", 
      "0.024329303972880016`", ",", 
      RowBox[{"-", "0.20679162695780465`"}], ",", 
      RowBox[{"-", "0.04541867681895519`"}], ",", 
      RowBox[{"-", "0.21049641191594368`"}], ",", 
      RowBox[{"-", "0.16460612265663285`"}], ",", "0.029870991732781956`", 
      ",", 
      RowBox[{"-", "0.7339397004527469`"}], ",", 
      RowBox[{"-", "0.23686986404231467`"}], ",", 
      RowBox[{"-", "0.02764694400425035`"}], ",", 
      RowBox[{"-", "0.13681417005109897`"}], ",", 
      RowBox[{"-", "0.22953820969994437`"}], ",", 
      RowBox[{"-", "0.21280867785729338`"}], ",", 
      RowBox[{"-", "0.35642973827330393`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"KRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.295758816890077`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.27052189163675444`"}], ",", 
      RowBox[{"-", "0.1974399735658353`"}], ",", 
      RowBox[{"-", "0.19504468595725166`"}], ",", 
      RowBox[{"-", "0.027428112771337044`"}], ",", "0.06476880377705634`", 
      ",", 
      RowBox[{"-", "0.15653009856345715`"}], ",", 
      RowBox[{"-", "0.337895550763809`"}], ",", "0.06968633132184608`", ",", 
      RowBox[{"-", "0.41527764850834437`"}], ",", 
      RowBox[{"-", "0.37286394963599834`"}], ",", 
      RowBox[{"-", "0.3713356020907587`"}], ",", 
      RowBox[{"-", "0.31580056712389853`"}], ",", 
      RowBox[{"-", "0.25443647294027055`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PRKCB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13479893500866622`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.20256396195516896`"}], ",", 
      RowBox[{"-", "0.3610197671146908`"}], ",", 
      RowBox[{"-", "0.19426929181946417`"}], ",", 
      RowBox[{"-", "0.36800638206399594`"}], ",", 
      RowBox[{"-", "0.23440823093535876`"}], ",", 
      RowBox[{"-", "0.27803373202732246`"}], ",", "0.012962179524894387`", 
      ",", 
      RowBox[{"-", "0.22718003626881278`"}], ",", 
      RowBox[{"-", "0.30994005350769777`"}], ",", 
      RowBox[{"-", "0.3360468790676116`"}], ",", 
      RowBox[{"-", "0.40015637638006324`"}], ",", 
      RowBox[{"-", "0.13208386643695547`"}], ",", 
      RowBox[{"-", "0.25826766023589887`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CHUK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.221425773380745`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.243571757903387`"}], ",", 
      RowBox[{"-", "0.11039225752290059`"}], ",", 
      RowBox[{"-", "0.16365139325744832`"}], ",", 
      RowBox[{"-", "0.016607048325296567`"}], ",", 
      RowBox[{"-", "0.026500877616898285`"}], ",", 
      RowBox[{"-", "0.14315269682400197`"}], ",", 
      RowBox[{"-", "0.0850637578773461`"}], ",", "0.0363063162929521`", ",", 
      RowBox[{"-", "0.4105726758454418`"}], ",", 
      RowBox[{"-", "0.4435978247897623`"}], ",", 
      RowBox[{"-", "0.35068581293552653`"}], ",", 
      RowBox[{"-", "0.48387468310257825`"}], ",", 
      RowBox[{"-", "0.31652206757825097`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SOS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.10961168351076114`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.21094976529594717`"}], ",", 
      RowBox[{"-", "0.1809635103255571`"}], ",", 
      RowBox[{"-", "0.21846939773037327`"}], ",", 
      RowBox[{"-", "0.22268432131751967`"}], ",", 
      RowBox[{"-", "0.13436623870338474`"}], ",", 
      RowBox[{"-", "0.21481163653785168`"}], ",", 
      RowBox[{"-", "0.14265099815527352`"}], ",", 
      RowBox[{"-", "0.1196553373738772`"}], ",", 
      RowBox[{"-", "0.334893616086209`"}], ",", 
      RowBox[{"-", "0.511375697391697`"}], ",", 
      RowBox[{"-", "0.3366464866173687`"}], ",", 
      RowBox[{"-", "0.3632234465426997`"}], ",", 
      RowBox[{"-", "0.3092482808431163`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.295624122684205`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.3275732750314186`"}], ",", 
      RowBox[{"-", "0.2460544962162692`"}], ",", 
      RowBox[{"-", "0.2669404747070069`"}], ",", "0.006903975694237867`", ",",
       "0.07898322273499543`", ",", 
      RowBox[{"-", "0.28317273365747764`"}], ",", 
      RowBox[{"-", "0.20431057830799113`"}], ",", "0.13048602424656103`", ",", 
      RowBox[{"-", "0.27170966624312526`"}], ",", 
      RowBox[{"-", "0.3712295648446653`"}], ",", 
      RowBox[{"-", "0.3389559939504886`"}], ",", 
      RowBox[{"-", "0.3547789024245206`"}], ",", 
      RowBox[{"-", "0.275432570820624`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"RAC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.2705696810595979`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.20025780756710837`"}], ",", 
      RowBox[{"-", "0.2534677964673615`"}], ",", 
      RowBox[{"-", "0.2068992066988645`"}], ",", 
      RowBox[{"-", "0.20025780756710837`"}], ",", 
      RowBox[{"-", "0.18838552003780887`"}], ",", 
      RowBox[{"-", "0.24035913476428952`"}], ",", 
      RowBox[{"-", "0.4929615140796191`"}], ",", 
      RowBox[{"-", "0.1548251192956156`"}], ",", 
      RowBox[{"-", "0.19438304192338338`"}], ",", 
      RowBox[{"-", "0.2705696810595979`"}], ",", 
      RowBox[{"-", "0.24035913476428952`"}], ",", 
      RowBox[{"-", "0.29196024516290325`"}], ",", 
      RowBox[{"-", "0.35395332412631997`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1341251261847756`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.22184935747682982`"}], ",", 
      RowBox[{"-", "0.399220401629133`"}], ",", 
      RowBox[{"-", "0.20673779815922316`"}], ",", 
      RowBox[{"-", "0.1426194015624961`"}], ",", 
      RowBox[{"-", "0.09852130467542528`"}], ",", 
      RowBox[{"-", "0.19422939570954087`"}], ",", 
      RowBox[{"-", "0.35359264817812963`"}], ",", 
      RowBox[{"-", "0.0867094984306964`"}], ",", 
      RowBox[{"-", "0.31664425672943974`"}], ",", 
      RowBox[{"-", "0.2814255432205854`"}], ",", 
      RowBox[{"-", "0.38325435746914155`"}], ",", 
      RowBox[{"-", "0.3156410477634368`"}], ",", 
      RowBox[{"-", "0.32307998127545584`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PPP3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13430780661217814`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.32419203478149977`"}], ",", 
      RowBox[{"-", "0.23668378749500305`"}], ",", 
      RowBox[{"-", "0.22721176999258677`"}], ",", 
      RowBox[{"-", "0.03923614817812529`"}], ",", "0.0005982652764247334`", 
      ",", 
      RowBox[{"-", "0.25444684932444966`"}], ",", 
      RowBox[{"-", "0.3890983856520298`"}], ",", "0.07045515766801566`", ",", 
      
      RowBox[{"-", "0.23298106167244387`"}], ",", 
      RowBox[{"-", "0.28937072607727043`"}], ",", 
      RowBox[{"-", "0.2964728885394952`"}], ",", 
      RowBox[{"-", "0.4343597132050111`"}], ",", 
      RowBox[{"-", "0.36330688452428045`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MAP2K1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.29060174811021067`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.26341817204080253`"}], ",", 
      RowBox[{"-", "0.09721299602844978`"}], ",", 
      RowBox[{"-", "0.16207559355446263`"}], ",", "0.011300368006674008`", 
      ",", "0.05844643404406884`", ",", 
      RowBox[{"-", "0.16383822112003374`"}], ",", 
      RowBox[{"-", "0.5516878912619715`"}], ",", "0.09898848695764009`", ",", 
      
      RowBox[{"-", "0.21599395317462206`"}], ",", 
      RowBox[{"-", "0.3371591747633452`"}], ",", 
      RowBox[{"-", "0.3238673959517276`"}], ",", 
      RowBox[{"-", "0.34842378244085476`"}], ",", 
      RowBox[{"-", "0.2815649306296724`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.05780273280375747`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.3187547588750017`"}], ",", 
      RowBox[{"-", "0.10176932897826184`"}], ",", 
      RowBox[{"-", "0.14223545799051943`"}], ",", 
      RowBox[{"-", "0.028628367984999917`"}], ",", 
      RowBox[{"-", "0.08888635849585656`"}], ",", 
      RowBox[{"-", "0.24565143729098476`"}], ",", 
      RowBox[{"-", "0.3377629421284371`"}], ",", 
      RowBox[{"-", "0.014764011480735292`"}], ",", 
      RowBox[{"-", "0.49459800646072816`"}], ",", 
      RowBox[{"-", "0.24891046199384032`"}], ",", 
      RowBox[{"-", "0.524683600432957`"}], ",", 
      RowBox[{"-", "0.13215080026032225`"}], ",", 
      RowBox[{"-", "0.28593570492914033`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CD\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.042558634300996406`", ",", "0.`", ",", "0.08198978697165296`", ",", 
      RowBox[{"-", "0.24595210487045965`"}], ",", "0.054631747891002745`", 
      ",", 
      RowBox[{"-", "0.12223621407006559`"}], ",", 
      RowBox[{"-", "0.02075468445961393`"}], ",", "0.10630718071476095`", ",", 
      RowBox[{"-", "0.5044872256907823`"}], ",", 
      RowBox[{"-", "0.27312245331401525`"}], ",", 
      RowBox[{"-", "0.293283851979613`"}], ",", 
      RowBox[{"-", "0.12097875547569602`"}], ",", 
      RowBox[{"-", "0.16025169453032473`"}], ",", 
      RowBox[{"-", "0.3127861494923794`"}], ",", 
      RowBox[{"-", "0.589953737737302`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SOS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.08439118564169859`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.14065722814083692`"}], ",", 
      RowBox[{"-", "0.19975840111640467`"}], ",", 
      RowBox[{"-", "0.1550361905508878`"}], ",", 
      RowBox[{"-", "0.22514123129829777`"}], ",", 
      RowBox[{"-", "0.11811067040877182`"}], ",", 
      RowBox[{"-", "0.17988904253126553`"}], ",", 
      RowBox[{"-", "0.38704904435955473`"}], ",", 
      RowBox[{"-", "0.11278738394610092`"}], ",", 
      RowBox[{"-", "0.2943193759037332`"}], ",", 
      RowBox[{"-", "0.3831074318615434`"}], ",", 
      RowBox[{"-", "0.38532091442119687`"}], ",", 
      RowBox[{"-", "0.33817412019803783`"}], ",", 
      RowBox[{"-", "0.39166077399173954`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1093931281135468`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.16150511710402168`"}], ",", 
      RowBox[{"-", "0.217788835823636`"}], ",", 
      RowBox[{"-", "0.14151209402131568`"}], ",", 
      RowBox[{"-", "0.02187515159569934`"}], ",", 
      RowBox[{"-", "0.005107192548820926`"}], ",", 
      RowBox[{"-", "0.11509486383751792`"}], ",", 
      RowBox[{"-", "0.34416740603812057`"}], ",", 
      RowBox[{"-", "0.06847667951758128`"}], ",", 
      RowBox[{"-", "0.3673865412674147`"}], ",", 
      RowBox[{"-", "0.26329300004781453`"}], ",", 
      RowBox[{"-", "0.3704355806623292`"}], ",", 
      RowBox[{"-", "0.40242068482847`"}], ",", 
      RowBox[{"-", "0.5041219068423514`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MALT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.17655612267617768`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.11521393610234593`"}], ",", 
      RowBox[{"-", "0.27020814693938333`"}], ",", 
      RowBox[{"-", "0.1534255449761702`"}], ",", 
      RowBox[{"-", "0.15262993678398293`"}], ",", 
      RowBox[{"-", "0.14313180484622515`"}], ",", 
      RowBox[{"-", "0.13596341915181728`"}], ",", 
      RowBox[{"-", "0.436426134637418`"}], ",", 
      RowBox[{"-", "0.03370529303435752`"}], ",", 
      RowBox[{"-", "0.23597089951911646`"}], ",", 
      RowBox[{"-", "0.37278194555901395`"}], ",", 
      RowBox[{"-", "0.40824824711322666`"}], ",", 
      RowBox[{"-", "0.3316737833629997`"}], ",", 
      RowBox[{"-", "0.3657958303097142`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13768718576799685`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.0350415471099589`"}], ",", 
      RowBox[{"-", "0.23329032760889032`"}], ",", 
      RowBox[{"-", "0.30507233309062876`"}], ",", 
      RowBox[{"-", "0.061472837011514486`"}], ",", "0.0061646627801911725`", 
      ",", "0.088498660325098`", ",", 
      RowBox[{"-", "0.701171314093717`"}], ",", 
      RowBox[{"-", "0.10976830408444116`"}], ",", 
      RowBox[{"-", "0.22873495834860416`"}], ",", 
      RowBox[{"-", "0.4042465754624842`"}], ",", 
      RowBox[{"-", "0.30008380000288404`"}], ",", "0.10574589498282079`", ",", 
      RowBox[{"-", "0.003761552628280958`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"BTK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.0774534869145951`", ",", "0.`", ",", 
      RowBox[{"-", "0.1576362287901149`"}], ",", 
      RowBox[{"-", "0.06526105131879513`"}], ",", 
      RowBox[{"-", "0.1309914632199784`"}], ",", 
      RowBox[{"-", "0.16306774666450977`"}], ",", 
      RowBox[{"-", "0.12646989712224893`"}], ",", 
      RowBox[{"-", "0.25672840278318193`"}], ",", 
      RowBox[{"-", "0.35420591012501973`"}], ",", 
      RowBox[{"-", "0.16918919314037137`"}], ",", 
      RowBox[{"-", "0.4403921634493964`"}], ",", 
      RowBox[{"-", "0.4247697049765375`"}], ",", 
      RowBox[{"-", "0.3772944648027281`"}], ",", 
      RowBox[{"-", "0.26321964735090364`"}], ",", 
      RowBox[{"-", "0.3148678217079514`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Q08209\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.02168638832940146`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.266154607197602`"}], ",", "0.06610177744422054`", ",", 
      RowBox[{"-", "0.05373241640194315`"}], ",", 
      RowBox[{"-", "0.18256867810695832`"}], ",", 
      RowBox[{"-", "0.8257260055841014`"}], ",", 
      RowBox[{"-", "0.03140438984890247`"}], ",", 
      RowBox[{"-", "0.42971666907446715`"}], ",", 
      RowBox[{"-", "0.09984301541494858`"}], ",", "0.0013423131090658262`", 
      ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"-", "0.06591568501104547`"}], ",", "0.0159995291855583`", ",", 
      
      RowBox[{"-", "0.07788521151629395`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"P29350\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.10114460966671077`", ",", "0.`", ",", 
      RowBox[{"-", "0.046451459039807026`"}], ",", 
      RowBox[{"-", "0.021365981724342998`"}], ",", "0.021192705232220825`", 
      ",", 
      RowBox[{"-", "0.08577537228510858`"}], ",", 
      RowBox[{"-", "0.33997196450847056`"}], ",", 
      RowBox[{"-", "0.1535604201471789`"}], ",", 
      RowBox[{"-", "0.8763840010256423`"}], ",", 
      RowBox[{"-", "0.1077819799473775`"}], ",", 
      RowBox[{"-", "0.1663252205448133`"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"-", "0.16293749015093129`"}], ",", 
      RowBox[{"-", "0.0754141410705864`"}], ",", 
      RowBox[{"-", "0.02492730161271568`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[309]=",
 CellID->778663946]
}, Closed]],

Cell["We can now extract and plot the sequence of figures:", "MathCaption",
 CellID->1111199700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigureTimeSet", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}], ",", 
    RowBox[{"MemberSet", "\[Rule]", " ", "membersBCellReceptor"}], ",", 
    RowBox[{"Intensities", "\[Rule]", " ", "intensitiesAll"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[310]:=",
 CellID->1553382050],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd0HNXZhg2YBBJCM5AAgZBAgv8ADtgEGxeMIXRMDLaDSzA27gX3bsu9
W1a1eu+997arsuq9WLJ6723Vq63/1d54z6IdrVbF0q70PWfOnpk7d+7cuTP7
ve+0O3/+ac93Wx6cNm3agUfw892GI0v2799wbPmTmFi5+8D2rbs3b/pi98HN
Wzfvn/fTQ0jchWz6GOkf7yMIgiAIgiCIqURLS0t5eflE14IgCIIgCIIghsfV
q1efffbZia4FQRAEQRAEQQwP8rEEQRAEQRCEMkI+liAIgiAIglBGyMcSBEEQ
BEEQygj5WIIgCIIgCEIZIR9LEARBEARBKCPkYwmCIAiCIAhlhHwsQRAEQRAE
ocg0NTVxppOPJQiCIAiCIBSWrKysTZs2cc4iH0sQBEEQBEEoLMePH3/mmWc4
Zym+j3Vzc7O0tCwqKproihD/4z7tEdrRBEEQBEEM4O7duy+//PJnn33GOXdI
H9vT09MtQW9v7/2p5qD8/ve/nzZtmoODwzivlxiM+7RHaEcTBEEQBDGA0NBQ
2ANra2vOuUP62H//+9/TJHjggQeee+652bNnX7x4saamZpR1q6uri4+PLykp
kZGH7M14MoF7REF2dHp6+uHDhz/44IM33nhj/fr1VlZW8ix169atbSISEhIG
y4N/4p49exYtWjRz5swVK1ZcunSptrZ2NDl9fX2PHj26ePFiZFu6dOmVK1fa
29vl3EyCIAiCUAp++umnxx57rK2tjXOunD728ccf/4uIGTNmwMoyT4sFR3kX
WEdHB+Xs379fRh4FsTdThAncI4qwo+EM8WeZ9ks2bNjQ3d0tY6mmpqbXX3+d
Zba3t5fOgMXhjcV/HDHPPPOMh4fHCHIKhcLvvvtumhQvvfRSfn7+WLUGQRAE
QUws7e3tsKDr1q0bLIOcPnbnzp2SZVpZWT355JNI/+CDD0ZTvTNnzpCPVSgm
cI9M+I7Ozc196KGHUIelS5cmJyeXl5ffvHlz+vTpSDl27NhgS929e/fbb78V
O0lOH/vzzz+zuZs3b+bz+Xl5eTCl+O88/PDDQUFBI8j5j3/8A3nQYurq6hkZ
GWVlZfhLsgZcsGDBGLYJQRAEQUwgUFVIW2Bg4GAZRuBjGdBNpENeu7q6Bszq
7e0tLCyMjY0tKSmByssoHMUO1zV1dnYmJCRUVVXJWGRYyF9bxQTVTktL6+np
kZFHEfZIa2urnp7egQMHMjMzx6pYnFLdvn0b2Zqbm2WvHTQ2NqKhYFBRE84M
u3btQgUWLVokefXV1NQUiU899dRgS12+fBkZXn755dmzZ3P62Pz8fPxNMMvY
2FgyHTsiJydnZDlhcT///HM4bclEHo/HPLDsx0IIgiAIQln46quvXnjhhTt3
7gyWYcQ+FprLRDM1NVWcGBcXt27duqefflp8eeqxxx67ePHiAJf15ptv/ulP
f3ruued+9atfIQ9+H/8loaGh4szM3nh4eAgEgk8++eTRRx9lJf/tb3+LiYlh
eRwdHbHUn//8Z/FSTU1NKESybjAkyLN48eJh1XbBggVY6vz589It09HR8dJL
L2EuTIWMBhxz/vrXv2Kl9fX1qBXsE6v5I488smrVKulegidqj0hz+PBhlg3H
G+dt+mEVizaH4RRv1AMPPPDKK68cOnSourp6QM6WlhYtLa05c+aIb9ZjZN68
eenp6ZLZ2trafvvb32Kui4uLZDoa6g9/+APSjYyMpOscFBT00EMPPfjgg2if
uXPncvpYtD/S33///cFaZgQ5BwN7CiX4+vqOuASCIAiCUBCg6dOnTz948KCM
PCP2sfHx8cwVVFRUsBR2S5oBSwmb8cwzz7DJXbt2SS4LW8XcEZsrj2v6z3/+
g2wwDG+88QYcC1vwqaeeYs4tJSWFpRQUFLClTExMMPnHP/5RXM6mTZuQsnXr
1mHV9ubNm0iBwYNrHdAC1tbWmAX7J+M0QTZZWVmwlMNdijUIawTs33feeQd7
kNX873//u+Tl8QncI9KwW+GMiIiIwbZLnmJhzpnLxeYsX74cBh6NwK5kzpgx
Q/LCaWVl5fPPP88KgU2FfX3rrbfYwwO/+c1vJK9b3rp1iyVKe2x2jXrPnj0D
0ouLi1l7XrhwAZOoA6ePRcsj3d3dnbNZRpaTk8bGRrQbSkhOTh5ZCQRBEASh
OGhoaEz75fVSaUbsY3/88Uek/+EPfxCn8Pn8J5988uzZs+J3qzs7Ozdu3Mjs
lthhSrJ06dJp8t3FZtepsrOzWaKdnR1LhM/sE903Z6/nIJ1lWL9+Pcsgfu2F
+SgzM7Nh1ba9vZ25xAG3esGHH34o9jAjA+bwkUce2bdv37CWEjfItm3bxPfT
sR9Zoq6urjjnBO4RaXbv3s0yoEqcr9XLX+yWLVuQMmvWLMly4CpxqmJubj6g
WOymJUuWoCnEXcbFxsayC9Q//fSTOFtgYCBSXnvttT7R4aSiorJmzZqMjAxM
Xrt2DbNgmCWLRUv+85//RPqyZcvYoxqcPranp4fZ5qKiIvhMeFScV27fvl1T
U3PAC1ny5xwM9hDRE088MeITK4IgCIJQHObMmQOtl51HTh+7du3abBExMTGQ
y08//ZS5CzU1NcnM0s/KtrW1sat8nO+/yO+avv766wGFw+1IXlf8+OOPMSn2
hK+++upLL72EFFNTU1YNZhIkH86Us7bnzp1DyptvvimZMycnZ5ro8eDKykoZ
lR8Sf3//X//617JbYACsQaQv5LIWgJuSTJzAPTKA+vr6y5cvw2rCRo6yWFhK
pLz33nvSF8mlkW4BgLMPlDBz5kxxCnsOduHChRj38fFhhzcOfkxaWlpifN68
eZIlbN68mZUgPpXg9LF5eXnsOHF2dp4xY8Y0CbDf8e8bQU5OYH3ZQyaHDh0a
sk0IgiAIQsFh90mvXbsmO9tw+48VA8GVcSERjtfNzQ2+ZevWrcw1Xbp0STqb
/K5J+jV2dl3xu+++Y5MnT57E5Pz58zFeUVGBcaQ88MAD69evR0pERAS7VMX5
lpPs2sKAsYu9kq/Lsac9V6xYIaPmcuLr6wujIvvxD0kGaxAjI6Npoh7SOJca
/z0yXOQvFj6T3UDH2cqZM2eysrLkKb+lpQWHAVoJTu+DDz6YJnp8QjxXT08P
KR999FGfaI+wgxymGpOoEsbffvttcWZjY2Ok/O53v5NcNaePDQ4OFv9lXnvt
NVVV1aioKBxIzIrj+AwJCRluTk7+85//sAahLmQJgiCIScDRo0eh9WVlZbKz
yeljn3/++UUiPv74YzjD8+fPc/YcW1hYuH37dvETiZLAb0jnH41rgotG+jff
fMMm2TW0Rx55pLu7mxmPoKAg+AH28teNGzeQ8q9//WtktWXr+uKLL9gkVvHc
c88hBd5DRs0Zd+TA09MT5wVyXkkbrEH8/f1Z5RsbG0ewjYwx3CPDZVjFenh4
sKdJGX//+9+PHDmCjeUsGd5y2bJlODakG0GyQEy+9dZbffeeK/jxxx/ZcwXa
2tqY9dVXX7Gc8fHxOO9AioGBQbUEqIM4UfyMbmxsLFvRl19+KRQKJWvFmhoV
G25OaXASxA7+yMjIwfIQBEEQhBIxa9as119/fchsI34+Vho+n8/uh8KQbN26
1c3NDTagra2NPUd6n1wTu/PbJ7pqyl5IT0xM3LVrF8Zh59asWTNN1A3RqlWr
pomu0I6stqWlpfCZKJNdf3NxcZkmeo9+yH66UlNTpb2TDFxdXWUXKKNBWK0e
euihzs7OEWwjYwz3yHAZbrE4m4D/37hxo9ilT58+fcuWLZKfTu7o6GDHAM7p
Fi9erK6uLhAIysvL0TIDfCwOm2mivhSkK8Yu9aNkNjnYHQpJPv/8c5YZhyVL
ke4ZzNnZedq9J3KHlXMAOGNl+33AJxUIgiAIQnlhXm6wK1RixtDHsutjK1eu
HPDtMBmuiX2TaMeOHTKKld/ezJw5EymGhoazZ89mj7Pq6upOE93q/b//+z+M
eHl5jbi27MUxVtVvvvkG4zdu3JBRbUZPT0+OHLC3mdauXSvPGzqDNQjryPSv
f/3riLexb6z3iDQy+rkdcbE4m4iJiRF/30ryzTsLC4tpoudJBlw5Zx9rlvSx
tbW17DwoJSVlQPnvvffeNInHMA4ePPg+F6zbLrQ/xiUfuWFfDJHs8IHh5+c3
TdQVxghyijly5Mg00VMH0i+4EQRBEITykpCQME2Ot+nHyseWlpYyYzDgLfje
3l7WPzyna2I9z4svXnEiv7356aefkALDya7LISUtLY1Vnn2VqaamZsS1vXXr
FtzCY489lpub+/DDDz/yyCP19fWy20ROkpKSnn766dWrV0teSJQBZ4N0dXX9
6U9/Yq6VpSjCHpEkOjp61qxZsJSc6x1WsYN9kgDVRs5PP/1UnMKerUXbDsjp
6uo6wMeKFx/wnho7hB588EHO7h0kGazfLXYvQPqpgBMnTgxoavlz9on2Izvg
cWxbW1vLrpuY27dvL168eMaMGf/5z38434AjCIIgCAXhjTfe+L//+z/ZecbK
x9bW1jJjIHldKCUlZc6cOSyd070YGBgwkyAQCMSJ3d3dktcP5bc37EUnZlkt
LCz6RFfqnnrqKdbXqORXEkZWW3YZ9vXXX8fvDz/8ILtB5CQ5ORkmFqZCThPb
J9F/rLi7ezTX999/z24ui7tZU4Q9IglrPVZJzse25Sy2ubn5r3/965IlS+Lj
4yWz4SQF+3qaqDsycSLr+vXNN98UW19sy7lz59jnHgb4WHbZE9UT28KKigq2
u7/99lvOjZJkMB/LTnwwS1VVVfwgSlhYGHteV09PbwQ529vb2RMgmDWsxwlw
3E67hzxPdxMEQRDERHH9+nWoVUJCgow8Y/hcwUcffcRucX744YerV6+GAcD4
r3/967/97W+DuSbIMXMvMA9wJmvWrPnkk09+97vfwWmI88jvmjIyMsQaDUvA
Er/66iuWMuCi3AhqGxUVJS5/TF6ogeecMWPGihUrZH9VdgDiflanie5iY0PE
n+s6evSoZM4J3yOSLFy4UFxtzo765Sw2Ojr6xRdfZNuFc5Mvv/wSB+fatWtZ
Izz55JPs5SwGn89nPRugcGzLv/71L2wLJsUfZZBcEawj+6IWSobbR8msY4eX
XnpJ3J+tDAbzsX2iRz7YQws4tVy1ahWqwSa/+OKLAY9Yy5lT3PEd22Ts0+m/
5NatW5yV3L9/v3jBU6dODblRBEEQBDFRVFRUwI3s3btXRp4hfey3334LyZNd
CKOmpmbZsmVilYRhwLI5OTnq6uqDuaY+0TetxFcIGTAkkt+BfeGFF2TYG8ne
6SH07AlDyScJ2VOjQENDY/S1ZX2ZsrfaRw+M8YYNG4ZlYvvu+T01NbXPP/9c
/K3VZ555xtLSckDOCd8jklhZWbGLjaxvK2nkL7ajowN78+2332b9BjDQFDhn
SUpKkl4v+7AsA2b+5s2bd+7ceeKJJwb42D7RIaSioiI+L4AhXLx48ZCdfjCY
jx3wWVsxfn5+f/nLX8TV+M1vfnP27FnOO/vy5GTPkMhgMB9bVFTE/tFg48aN
8mwXQRAEQUwUX375JURcxj3rIX3scKmsrAwLC0tJSRnWR4XKy8sjIyPDw8Pz
8/PH82tEw6otmpH1raSjozMOdRsM5mMdHR37RL3fx8TEiC8+c6I4e6S6ulr2
3YHhgj2SnZ0tEAjS09NbWloGywYTiAwhISF1dXXyFAs3m5mZGR0dPeD9uNFT
W1vL4/FgMod8jET+nCOAPeMxgm8iEwRBEMR4wnpS9ff3HyzDmPvYScylS5fQ
mDNmzBjsPaPxYbD77wQhD01NTew6Ns5uJrouBEEQBCGLzs7Op556SsZLSeRj
ZXPnzp2enp6ysrLr168z9R/yC6H3G/KxxIjJz8+fO3eujKc7CIIgCEKh2LZt
22OPPTbYHVLysbIJDAyEfRU/hvrNN98M+e2D+w35WGJkREZGsjfXFi5cWFJS
MtHVIQiCIIihiYmJgXLZ2NhwziUfKxsDA4Mnn3zykUcemT17tra29ng+uzsY
77777jPPPOPu7j7RFSGUjLy8PBzMOjo6E34uRhAEQRDyM3PmzC+++IJzFvlY
eSDdJyYHE/toN0EQBEGMgMuXLw9mVsnHEgRBEARBEApLWVnZ/v37OWeRjyUI
giAIgiCUEfKxBEEQBEEQhDJCPpYgCIIgCIJQRsjHEgRBEARBEMoI+ViCIAiC
IAhCGSEfSxAEQRAEQSgj5GMJgiAIgiAIZYR8LEEQBEEQBKGMkI8lCIIgCIIg
lBHysQRBEARBEIQyUlRUxOfzJ7oWBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQI+fxxx9///33
V6xY8T1BEIQcvPnmmy+//DJFHoIgxpMxiTzE5OPzzz9PS0ub6FoQBKE0nD9/
fs2aNaMshCIPQRDDYkwiDzH5WL16dWZm5kTXgiAIpeHs2bPff//9KAuhyEMQ
xLAYk8hDTD5wVNy6dWuia0EQhNIwJmpCkYcgiGFBPpbghNSEIIhhQT6WIIjx
h3wswQmpCUEQw4J8LEEQ4w/5WIITUhOCIIYF+ViCIMYf8rEEJ6QmBEEMC/Kx
BEGMP+RjCU5ITQiCGBbkYwmCGH/IxxKckJoQBDEsyMcSBDH+kI8lOCE1IQhi
WJCPJQhi/CEfS3BCakIQxLAgH0sQxPhDPpbghNSEIIhhQT6WIIjxh3wswQmp
CUEQw4J8LEEQ4w/5WIITOdUkOzubz+cHEkMREhJSUFDQ3d09DvuOICaE8fSx
FHnkhCIPMekhH0twIo+a9PT0HD58+OTJk+rEUPz888/Xrl0rLy8fn91HEOPP
uPlYijzyQ5GHmPSQjyU4kUdNurq6rl+/np2dPT5VUmri4+PNzMxITYhJzLj5
WIo88kORh5j0kI8lOJFTTa5evZqVlYXxvLy8yMjImpqau3fvsrkFBQUIoTEx
MQKBICoqKjo6urm5ubi4ODc3t6Ojg+WBEkVERCAxJSUFI7dv366oqEhMTMSC
mBSI4PP5RUVFcXFxAQEB+fn5JSUlmFtWVhYbG4tEoVDIimppaUlOTkadExIS
amtrUR9kQ91QYGtra1paWkNDQ2NjI2ZlZGQgc1VVVVJSEjKgMkhBgZhMTU1t
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
rrlXuYf3hetH6FvYW8THxTc3N4+4PlCTiIiI6upqyFxjYyMJCkHIjxL5WIo8
BDFpIB9LcDI+alJWVpaWlpb0Sw4dOvTJJ5/gyHR3c7dJsAluCYaaGKUYORY6
3gi+YZJmohmhaZ5pDlkxSTZR56t71nmG3Q0zjjLOLMjs6R7tF8nj4uIKCwvZ
13mEQiHqU1FRQW9bEMSQKJGPpchDEJMG8rEEJxP4lFpNTU1LS8vdu3eLi4ut
o62di53dy901QjQ0+BpXfa6q2KjcjLhpmWlplWV1zuXcKdtTtjm2PrU+ujzd
2wW3B+vFUX5iY2OhJt3d3WySCUplZSUJCkHIRol8LCcUeQhCGSEfS3CiCG8N
I5KHCEI8Aj3OXj+rYaThGuDqG+brG+7rHeqNwYvvZe9lr3JFxdTe1DPY0yvI
i92VG+VK4+PjJdWEVSM5OZkEhSBko+w+VgxFHoJQIsjHEpwogpqIcXRwDOWH
SnbDyKiqrDI1Ms3PzR+9iIjJzs5OT09va2uTTOS8NsL62Onq6hrDtROE8jJp
fKwYijwEofiQjyU4URw1QdC2t7cPCQmRfhG4rKzMyMjo9u3bY/hCBMpMSEho
amoakD7gibXu7u7S0lI3N7fw8PCRvaFMEJOMSeZjKfIQhFJAPpbgZMqqCTSC
U01AY2Oj+NpIQUFBTEyMmZmZs7NzfX39WK2dIJQX8rGjgSIPQYwM8rEEJ1NW
TSANkIn+D/RwwQSlqqqqp6cHsuLg4JCent7V1TVWayeUFxyEU/w5RvKxo4Ei
DzEyKPKQjyU4mbJqApkICwurra0dLINYUOrq6vLz89vb28dq1YRSU11djeOh
ubl5yj61SD52NFDkIUYGRR7ysQQnU1ZNuru72Yd1ZOSBoCQmJrLbfFM2dBAD
SE5O9vb2Li0tnbLd15OPHQ0UeYiRQZGHfCzBCamJjDxQkJKSEh6Pl5ubi5yd
nZ2kKURqaqqvry+pySgLocgjIw9FHkIaijzkYwlOpqyaQBeio6MhFpJPHEFi
uiQQCoUxMTFubm6enp7+/v6FhYVtbW3iuaQsUxNSE/Kxo4EiDzEyKPKQjyU4
mbJq0if6sE5xcbFYTSAQaZlpUQlRkYmRUYlRUUlR0cnR8enxGBIyEvAbkxKD
RDZXECeoqqEPo09FSE3Ix44SijzECKDIQz6W4GQqq0lcXBzUhH3oHNTX1hv6
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
7zzczZcNu4CDtkXJzHvgCIEs4rQdyuXs7Ozi4sK+2aQIkI/lhCIPQ4EjT82u
vF0LEXBK52NYULJgYfHCBaUL3i97f35J/yR+2az3S9/fdmtbflO+POVLRx5U
+Ny5c7t37/7555937ty5ffv2bdu2bd26dceOHbt27UI6xjdv3oxZ+/bt27Bh
A/7jkl1SDAZFngl5PtbPz495OcnnXfvuPRwLtgwCdrd04ThfuH79+qJFi5gp
Zdc80fLiDAriY/tE0QNuc+PGjc8//zxbZPr06dgu2edcqamp0lezZeDq6iq7
Gow5c+YgM2IX51xSE3mQX0367nWVI30vDxuIEIStCA0N/frrr9955x1zE3OL
YAuvai+HEgfnSmf7EvvgzuDA1kDncmePWg9+Dz/8TnhwVzBmBTYH2hXY8eJ5
UCKhfCAWXblyBYEoLy8vLCwM/w6c/hcXF4v7h8RRil+WGbWFTuGEUTwLB7l4
FgKdjo6OqqpqVFRUUVERSnZzcxMIBOyupZzgNAr/Xz6Pn5mdtbhq8YM9D03r
m/Zw98OP1z8xo/LZR9oend758O/qH3+qasZvmn7zQO+DmIthQfHC6OoYYaNc
q0C8hZTgKDpz5oyBgUFsbNSOHWZffeX50UfmCxZovvfeublzz73zzuGFC9Xm
z1f9+GOLefMuYHLJEqOvv/b75BMjH5/o5uamrqFAe8bHx0OdodRDZpYTtDmi
JQ4MBIGAgAB/f//g4GDWqxIOmJKSEpgQOQ+/cYB8LCcUeRQ88mTlZi2uQeR5
kEWeJxqeeKbqmUfbHn248+HHGx5/uvppRJ4H70UeWNzomuiRRZ7o6OiLFy+e
Pn16//790P3/ilixYgW8K1zBgQMHfvzxR0zC0MLuwsrCMaIFKPIMyUS958Us
4gsvvCAZInAcMieGf/0I1oKTHW1t7d///vco4YknnhCfJ4pts/SpzZj4WOxQ
Vr78pyc42cEJznfffccWvHDhgozMOGHMkQM7OzsUtXbtWjkDJk7ScQ740ksv
odml55KayMOw1IT1coy4JJmIrUMkZ1/oTklJwen5v/71ry2bt1yxumKba3vS
5uQZpzMnbE64lLsYJRpp8jW1wrW8ar2cS52ts63V+eqmaaaW2ZZW7lYIOLHy
cf78+ZkzZ86dO1dLS8vc3Dw7OxsnPohUOCAxNyMjg33GnWXGBuJ8HGdqGMfx
IDkLm4NTyGXLlr344ovr1q1DuMY+ysrKMjU1RWlyVgasWrXq5Zdf7r+T4uL4
Qdni6T0PQyyerX7u9xXPv1T4ysuFr/yx+OU3k99+K+md58tenN4znanJ3Jz5
TlHOsTFDl48dFB4ejkPIwsIC525/+ctf9u7d/f331776yu3jj81nzz4ya9ae
f/7z7Ftv7Z4799Jbb+14//3LixbdnD//2mefOXz9tf+SJVpmZh63bmXkDgVO
UQ0NDbEuNOmQmeUEDmTJkiWvv/46dNDMzMzX1xftjPLH5HOWYw75WE4o8ih4
5HFwcVhcvvhhFnlqnn2+4vmXi1/+U9Gf/lj6x1mps95JeQcp4sjzfu77TtFO
I4s8e/bs2bt376lTp+BjV65c+e9//xs+dunSpevXr8d5BH6xF2Bojx07hrba
sWMHlkWzUOQZkonysZmZmdOnT0fi0aNHxYkIF6wrKskeDGTA2V0V/hTMHOJM
jaWIr2diRDInTsdY+mA+Fsf5NK7+vgZQ9//sfQdYHEeC9d067P3+79Yre/f7
dm/v312vT7dee73K8llWtBVQBiQhCZSQkMgi5yQBIiMyDBmGIec4hCGKnJNA
iIxMECCSAEWL/zFlzY5hECPEoAH3+/praqqb7qrqqvdedagaHCTHwalfK6kA
Do5/3Lt376tPMS8qKys/+uij06dPv+6b3gwG4/3335+dPEpN+AHItuSVo99w
4+nTp0jDjM4OSj42NhYZBAljjbygOt3ruMfIYUR2RppEmrgXutum2oa0h9zM
vhnVHhXdE41402hT2zRb10JX+h061IRZwASx9/GHxMREUFNERARIKTk5GewH
NQFbQs6wFWefnJzEmuxMbomgD47wgwcPZmwaHh6GJFlYWKBPhNqCDmNGRgZI
FUfmMzGAh4cHSDsrK+t2U8POvm/fYevFx/2//aj/N78a/vVntV+sL/rqr3Wf
f1G15jf3f/uL5+8QNdnStjW3I6+vl69TIP1INsQadIfTFRcXyMn5iIjE7Njh
u3mz5bp1uhs3Xtu0yRw+dt06g3Xr9L/+2v7rr+327Ik6cIC5bdtNGi0UTbty
PoSHh7u6uqanp5eXl8+7M58AiUHdjh8/7ubmRqPRIOU4PsRdeN5M4wZPNUGV
3rFjx8cffywhITH7luBsUMzDDyjmWUzmuXt7V9+ud9hPgn4z8JuPBj/69fCv
P7/9+aaSTX+7/bcva76Euf3n/diOrXkLZZ6ioiJTU1NDQ8OrV6+eP38eLUJS
UhJWFm5cgo1LbMDHYv8rV67A7VPMww8WhXnmBc9xt5SVlf+F/SoszD8n0tLS
knhCXG7u26dIkpqaGncZomw//PBD7D+jYFFJyBH6Xg6DgOZAPLO4uDjJDhoC
KjDnQfxcPlZfX5+8kHDv3j0SMxcd/ed//if2PHLkCHea0dZIYGxsbPXq1ejd
oFPM/V8gllWrVuEf0Qubq+j4AbpOMLG4WAv7XPHLL7+c/XYBpSb8YGBgAGrC
udDzAj30zs5O7i4tJAZMjm4deruRkZHkm9PJicnIW5EBNQG2TNuI1gjzaHOL
BAu7VDsbpg2thEavpSMeP3V8dbyKvXyrfAtqC/gfghhnJ69RoSjI+JBk1p7X
zTsn/ZyXstrb20GAyAsOC+nh85icI/QO9B3oPvzx2G9WTa769fiqTzo//WP3
n7FeU7Phb3e+/K/eP/1m6LerJj6a3jq5an/bwYaxxtf6dpgzVf3DhyO6unQx
McahQ37793scOuSL9YEDXvv3ux886Llvn4uIiBsWUdFgcfHIw4ddc3Kq+ckL
GY18xouIbwgcChWGjGMPkSJj0aPKCWLYkzcHTzU5e/Ysh2lZLNa8B6GYhx9Q
zLOIzNP3oO9Q96GPH3686tGqVeOrPu369M/df/7Lvb+sq1/3RdMXf+z742+H
fwvamd4K5mnf3/hwgcyDhmxvb29gYKClpaWqqqqtra2ioqKuro4w1jC3Kmxg
BxMTE0TCxFLMww8WhXnmBU8fi/pGXNzhw4c5kbjcBw8eJKf+/e9/f+jQoVOn
Tq1fv558zOXk5MTZE50FMuHXv//7v2/atAk9Gnl5+W+++Yb8r4yMDPe5Ll68
SOJ/97vfffXVV2TcWhERERz5FT6Wc9P4nXfe2bZt21/+8heEs7OzZ++JykmO
/6c//ekYG3//+98/+OADYmvRC/vDH/7wL+w5vD755JMDBw4oKipKSUmRmch+
/etfox4uuGxramrQ40C/acE3/FGSxsbGMyIpNeEHT9jfn/KcwZwnwNtg7xkZ
AVEgj0lJSei2E5Z48vhJSm5KCCuEkckIuRVCz6AHpAaE5oW6x7p7JXuFF4TT
YmgBaQGBaYHB2cH+Kf5V9VX8fA4wA0jG3bt3UX9QgOQux4JpEOlHAlADEcjL
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
sn59/IYNaRs2pK5dG/73v/utXRuN8MaNaRs3pm/cmLphAxPL+vXpX3/tfevW
7efPf2RXUBnEZWBgAFewsLSQXk4PbwtHSrBEdETQG+mhLaFIGxKGeMZdRlRH
FDZFdUV5pXh193eTg5DHT+C3nJyc8fFxW9u4LVtC1q1DehKRjLVrI5EkrNev
j127NmrDhjjEb9iQvHZtzOefB1pbx/f3D6FYUHPA/5AhsDH754i6utfBg56H
DvkfOuSHZf9+dxERpwMHvA8e9D5wwItEYjlyJGDvXquMjBLuizsxMYGUoKiz
srKQO06NamlpgdBwBlFEAaIYoTVtbW3btmV/8MGdDz7oYC/tH3zQyl5qP/jg
9gcfNH/wQQs7suPf/q3r009T4E1Q6zmnw3F6enqwLi8vRy7i4+MhW3fv3iXz
wiNy5OVHEChnToGT56FTbEWGquIfUUshQFAHNKV8NuATIHPICNYQF+gUCpm8
mYZNqGZY478Qj3PxU70pH8sTFPMsiHl6TU1N1dXVtbS0tLW1lZSULl++rKqq
qs2Gjo6O1ksgLC8vj4bAsXyCYB4/Pz+cXU1NTUNDA4GrV68qKytjjRgVFRWk
E/GamprYdOXKFewMHpjNPMippaUl9uQkHvsja+R/ueORKVlZ2by8vDdkHmNj
Y04ZYq3JBkm2BhskHqdDdtDMuX3sz415KKw8UGrCP0AXVVVVs5MnCCD9oNZP
PvkE7IfszNhaWFgISgcjOTo42gXY2STYeJR6JPQmZD7OTOpPYjQx8DPgdsDN
7JseJR4O2Q5Ot5wCGwJvJNygx9JBUH0vAR4GOaNTnJubdfIkXGvRxo1VmzbV
fPFF5F/+YvP55yH/+EfqmjWZ//hHyvr1hRs3VrKX2s2bwxMTC7///h45CDiQ
KBEuX2xybGxHbNazrNyp3FtTt5LHkp3znb0qvVKGUljjLK/y6ek1WZMsbM2Z
yvHL9Ku9U8tJTGlpKfQRx8nMzDAxiVy3zv2zz5CA2M8+8/rrX93/+levzz7z
/NvfAr74IvTLL2PWrElasyYRKfzkE1cDA0Z9/R1yEJCng4MDSgYqnJ+fd/Wq
j5hYhLh4vLh4HJZdu+y++cZs3z6vffs8d+92Onw4jMSLiyeKiLhHRbHA0n0/
BZgZHAuS58SA2ysqKjo6OshrYO7u7tALLy8vMPmmTeXvvvvwvfeev/fei/fe
63/vvcb33nvw7ru577yT/+67le+91/Hee4+x9Z13pv7wh8Lk5Jre3u85h6XR
aOQ4EIL09HSwfW5ubnt7O4p3aGhobGwMpoLsCeGwsLAgBY6fpKrDEqB+Yn/o
Mva/f/8+Ag8ePMDOPWxA/pBgxEOGIExYI1PkdTVyEcEDI/zNn075WJ6gmGcB
zIP2ZWZmBhuGSoUAToqKIScnBxsG04VKbmRkdJ0NbIUrY7FYSJWAmAcHR5Jk
ZGTgLZG8CxcuwM9LswHXSjKO3ZAMhKWkpBwdHRsaGmYzD2oCWijJFIBE4oDw
/+psKCgo6OvrI5JkCidCk39D5sGhOGWIckM8TnHp0iXkBafDSckIFTgpEo/k
kVb/82QeCisPlJrwD1DNUg5Hg9Ph6gQFBZEzovMLZgAhNDc3o8u8cePGHTt2
uLq4Ogc7q7up6wXpWSVb3cy6aUA3MI81d8h0sEmz0aBpGAQb6PjpmISb+NX6
aXhp2LjaoHw4E4urqqr+9a9/BYeHhoacOBG+YUPBxo0VmzZVff45409/0l+9
2vXTTy3/8hfzTz4xXbOGuXFjGXup2rw5JCAgqaKinBwEHfb9+/d/9tlnurq6
gSHTcxJlPMuAWGRPZSc+SNT1170Wdc21wPUm66ZOgE5ATQDrCYtsdWe6Z+dn
cxKD7jkytXnzZhrNVU+PsWaN/SefmH/6qcWnnyIB1z799AYS88kn17/8MvzL
L8O++ILx2We0zz+n/+lPFioqTtnZP2aqsrISwve3v/1NVFQ0LCxYUZEmKhou
JhYrJhZz7Fj8li2GGzeqfPPNtS1bjNatk9+zx1VMLBqbYHT37XPx9o4sKyud
Mfc6DlhdXc0dA55HRc3Ly0NlwE8I3OrVqy9duhgcHLx+fcn774+9//7T99//
4d134Wn93n//9rvv0t99N/a991Lfe6+CbH333Re//31uYGBWdXUF57DQ7v/5
n/+BYlpbW0NPi4uL6XQ6zlJbWwuNgBag/mM3/ATzHz9+HHnU1tZGJOdtN3iM
rKyse/fukWGUKtmA8BWyUVZWBvmY69n048ePZ3xU8gpQPpYnKOZZAPOEhITA
gJF5GeDB0AoOHz585syZEydOHGNDQ0MDHoxshd2KiIhAlRYQ88AZwovCu+K8
SABamZiYGNYoDQTgseEJ4UjRSLEWFxdHwmD5ZjMPMoU2QjJFUo6cYv+zZ88i
a8ggGfoMm2AskSkUNbz0wpjn4sVp5plRhkgtToGU47zwz3DdZCs5XWxsLDnC
z5N5KKw8UGrCP9AtLSkp4ec1nkUB+qogVfKmPfJeV1dHWAKUAtIzNzdnMBj3
Ou/RU+g6vjqmcaaq7qqXrS5Lm0tfj77ukOPgmOc4LTEpVrpBurQKWlRXlHaA
tleQ152mO5yeeGJioqenJyioqqpcQiJ67dqCdesq1q+v/Oyz8E8/dV692ueP
f7zxhz9o/fGP5n//e8a6dWXr1pWvW1e1cWNIfPxP7scGBgb6+fmBr5iZzOi2
aKImWOIfxEPIrFOtISiKToqQs9i+WCIlWVNZ3izv2sZ/3hVBBpGY8PDwxsZG
U9PYL790+dOfrP/8Z6u//MX+z382Q+DPf7b45BPLv/0t5LPPQv76V7///m9P
pPD3v7+uq+vLuR+Lbn56ejqNRgPnNzTUKSv7HD4cduRI7JEjMUePxn71leGG
Derr16tu2KDxxRcXt22zOHQoAvFHj0772MjIjNl3RchY9DPuk0CncBXI/QSI
IConaB/8D5//i188fOed5++88/QXv0j7138NeOcdrOm/+EX9L35R/ItflL7z
ztg77zz713+Fj72VlFTNfT8W4oLsk+PgimRkZOTn53d0dGDTyMjI5OTkwMAA
SQ/cBRLg7++PAofBIPcxsAN5Sw3/6+vri5rj4+PjxwYCUH9co7t37y7KO5aU
j+UJinkWwDwwPKhOZPYxAJ4K1gueCq4PHhWeUFNT04QNbIUHQ7vgvh+76MyD
wIULF+DW4GNRRZEMhImjlmMDacMOWMOO2tracu7HcjMPKvaNGzdIpkjipaSk
cATiivft24d/52QZhjMhIeENmQen4JwObhnlhjVxs5cvX4bj5WxVUVHBv3Df
j/25MQ+FlQdKTfgHuo3ofc9+6V1AALHgdEwmEywB+QBhEm4ZHx8HJ4Bbnjx5
8uL5i9CkUKswK+c0Z9MgU32avinD1D7B3jbG1j3L3S7OziXD5UboDd9iX588
H+MA40RWIvddHeSI9Kn7+/sUFMJ2747Zsydpz57EXbuCd+1i7NwZuHOnz7Zt
bjt2+LA3JWLZvTv54EGf0tKm58//yUucr57LKsuCCoPC6sLCG8IjGiICygJu
Jt50SXexibYx9jNGCgNLA7EJS1hDmH+Kf89AD+cgSAlyRI7j4ZGyb58zTr19
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
8w+oCwhuDvZj+vX097ziyPOqSUlJuZKS9blzlmfPmp08aXjypIGk5PVTp4wQ
wE8JCYOzZ80vXLCVlrY9f95GScm8paWD87+cAcmX5skORATZiYuL6+zsFNBY
Lm8RUAryUInM6oLMkk8nEAMJaG9vJ3151M+ioqLs7GxoCiIhIuj419bWgtIR
g5JBj5684IeePoh0eHhYoGrS1NSEiwJNWfqne8gXSgA6O/t7H6QH8SwWKz09
nQxcg31QVqg8kAxITFhYGNTWz8/P19fXycnJ39+fzM8eGxsbGhrq5eWFcubz
5tuy9rFvkXlwXQwMDDQ0NFRVVeXZuHr1KpnqFJCTk1NTU9NmQ0tLS1dXFw6B
878U8ywiKOZ5Xawk5qGw8rAEaoImQOah4waav4WFhZmZWWFhITOHGdoQap5o
bpdhF9UVxRxhJvUn3cy8eSPhhmeZpx3LzjLF0pppbRprSqukBbACvr///bO5
AdoBw4Ca5tohP79IWdlRRsb92DF9UVHtffvkDh1SPXBASUREUURE6dtvL4qL
61+54iYn53n5Mk1Z2bq5uZM7OyCoJXtDCdRx7NixTz75BO2d833oigF5usfz
hg9KGFwHAvTw8PD09EQvntzxCAgIcHV1DQoKotFo4eHhCKD2co4wY8AWhAXx
dO8tfjVMhj+Fbs6+IYPEkI90oMVkdkhknwyUikgILtb9/f0oDaz7+vqwRiQ0
aJAN/IT68HmfZ7n4WGFjnoKCAhMTEyMjoytXrly6dOnUqVPnzp2TlJSUkpLC
Gi1dVlbW2Nj4GhtwvNw+dopinsUDxTyvi5XEPBRWHpZATdDVIvPW5XKByWRu
3rz5d7/7nby8vGeAZ9idMG0/bZMwE9t0W2gKAlo+WkpOSm5Fbk45TjZpNtap
1noBeqbxplZBVgnMhNy54eLiAiKCpsy1g6enj4yMpYyMm5SUxeHDajt3Xtiz
5/KePbIiIgoiIvJ798pJSd24csVDTo4mI0NTUrJCz5s7O+hyQl+W5rWxyclJ
yNmGDRtycnJW3gcXLS0tPDv4U+wnsOTxEwQlODgYtQVSkpKSQqYIr6yshI4g
Ej367u7uuTgQXFpUVLToY2C+ra+GcbrW1lZk5+2Ogj61fHys8DGPp46ODnys
mprahQsXjh49KsHG6dOn4WkRQDzxsbC7s30sxTyLBYp5XgsrjHkorDwsgZqg
FaBdo+c1wAU0RkdHR/RtK8orkjKTGPWM63HX6XfoTnlOVilWukG6mj6aFokW
diw70zjT6zHXzeLMTCJMbjBvuMa5NjY3DswN9FgbGhpIB5AnUlMzFBRuXrrk
fvy40aFD6nv3youKau/fr7JvnyKWY8eMZGTcr1zxvHzZ8+JFmqKiVXNzB3d2
7ty5U1dXJ6B7FCiljo6ONi4kJCSoqalmZWW1zcLw8PBsQnvy5EljYyPYuKen
h2f3mfu6oFPc3t4++8g8gU734vIYkldYWMhzliKkH/YDSkGqDXr05ANzMjrQ
48eP8RMWpbOzcy5ZR+5QDRZ36HiCqqoqyNzSqwkyiywv4giiC8Zy8bHCxjzp
6emGbMjJyZ0/fx7e9dKlS+RmLMLw1bC45GYsfKyent4MH7v0zKOqSjEPxTwr
jXkorDy8xbfUQBRk8L1bJbc8kjysI61t4myswq2u+V3TdtHWdtK2j7a3jbK1
CLUwY5jpeeldC7hmE2PjHe3d19/3iiPfunXr1W+RVVZWa2raXLx4XVra6MIF
wwsXDKSljRE4f14fy8mTmqdOacvImF+5Yo61lpZFW9tP7sc2NzcLrFH/EBAQ
o6bmfvWqh4qKl6qqF9aKiu5nzlgpKLiwYzyxVlGhqah4XrlyMyYmbXR05hCF
IGcfH5/Q0NCwsLDs7OxXDM336NGkqytdQ8NFQ8NDXd1NXd0VCwmz19NhDQ03
9k93JSWbvLwS7qmO3hzkWVVpaSkuGZkEhzO9Ixnws6mp6RVTQJJBXXhuAuHj
mDjIoivgFNtO4OB9fX1LqSaTk5MlJSVL9nrkq7FcfCxPvEXmQbWEQdXQ0FBh
Q1lZWU1N7erVq8psXLlyRVZWVlNTU1tbG2t4WrRl7n8XJPNMgS7Mzc3NzMyw
vsEGrjKSigQjTCLN2TAwMEhMTJxNLPwzDyoz9uQ+JifMHUN+4nTwnBTzTFHM
Q/lYCnNAGL4aHhkZaf++vbmj2cPPIywmrOZ2TVNLU1NrU2tXa0tXS0tnS3FF
sZ2TXWZe5t3Ou9/3fP/qT2jn/doC3erm5raGhrsNDc0vl3+Gi4rKg4PDo6MT
Kitr8LOlpe3Ro59QaHt7O6hvEQck58IPdnZ0KSmP06d9RUXtjx61FROzP3bM
SUzMTkLC9ehRO3Hxm4g/ccJNSsrv8GE7f//4oaGZE6CDdnBBa2pqGAxGZmbm
7HS2trYWFRWxZxWcuH7dS0LC4vhxC0lJh7NnXc6edZWQsJKUvCkhYXn+vOvJ
k9aSkvZSUo7S0p5HjxokJLAW/V7Qs2fPhoeHu7u7IRxQh9qX4MzzWDs3XrED
CP/evXv8v3b1WhgaGkKCURRL+ZSts7OzpaVFEJNdLgDL2sdyY+mZp62trbGx
EbUdVZSzJoCtggmMi4uDF8JP7DnjcguSeaZoNJquri5Mo6qqKqw1bLa6ujrW
Wlpa+Am/jXiEDQ0N8RNOdfZItq/DPJP29vY4OA6FY+rp6eHU5PiIQRpwOlho
HR0dnA72nslkUswzRTEP5WMpzAFhUBPgxQ8vnj97HhIckpGeMToyPa4IYqbn
SflhOnCv654nzbOxofHZ0/kHmuNvNPIXbCrgsTx79hT8BpqqrKx48OABTj/j
PwX07hMbP9jbM86d8zl3jrFnj+7OnSo7dijv2qW2f7/J/v3XDh40/fZb9e3b
lURETM6c8T92zNXKyrugoKj+p8DVBJ3Gx8fb2dmlpaVBVmbs4ObmtnPnTlFR
0aCgoKtXTUVFDQ4e1D50SBcLXCvCEhLWO3fKiIub7dp1BZH79qlJSTnv2CEd
GRk/MSGQe0G4WI8fPx5fPOBogrt7sPRfDcM+DQwMzBii/y1ixfjYqSVnnhdz
4+lTDvNUgnlmH0eQzDPl6elpbGyMK3v+/HlcGgkJCUlJSRkZmcuXL8vKyiJ8
/PhxhLGPpqamk5NTYWHhmzAPPCoMqrS09MWLF7GGg71w4QKsrLi4uKKiIs6F
+LNnz2I37B8bGyugu9AU87waK5J5KKw8CImaTLG/8UQ3n2dHfulnh0TLRT+0
pKQEXdEZN2FAVgIbkJz4WO9z54J37dL87jvNXbvUv/nmiqiozZ49esePO+/b
Z7hzp+ru3dqSkj7i4i7wscXFJQ2z0NjYWF5eTqZTmb3V0dERaiIvL5+Wliov
rysmZnTqlM2+fapbtkiJipocOKAJH/vdd/Lbt1/atk1aRET1669PHzqk/803
UpGRsQLyscsLS/y1BRQEHqCnp0d4hj9aST52imIeNuBjjYyMTE1Npdg4ffo0
DKSSkhLspYaGBlzlqVOnYCwNDQ3xEz6WzPa7MOZJTU1VV1eHPcYa5zp06JCc
nBzxsSdOnBATEzty5MiZM2cOHDgAI33w4MHo6GgB+djlBYp5KB9LgScoNZkL
EJHBwUFQB7k9wumQPnr0SGADkv9gYxN4+rTHqVP+27erHzxo+e23+tu3q+7c
qb17t9Hu3YY7dmhu2nTxu+/0T570OXjQwd09srt7eibN10J7e3ttbW1HR8fA
4ICujsMBEa0DIno7tst/u1Np97cq27dd3rldbtuWS3u+Vfl2l+KW/z2/e5fy
t7uUNm+SiIxMpHzs1JKrSW9vL2qggO7CLQyUj+WJ5cw8U+7u7uS9AvhVBQUF
8hkazKS0tDQcJmwt/CQCenp6V69eDQgIIHP4LpB5BgbMTM0unLtw8fzF48eO
nzpxSuqUlLio+AnxE2JHxU6fOn1K4tThg4exPi1xes+ePbExgrofu7xAMQ/l
YynwBKUmrwAUhLzSVlJSwpnahsw5iDYugEctL4KDY7W0pr+3UlKyUVV1VFa2
V1KyVVKyUla+iRg5OTMZGSNlZVvsoKhom5DAGht77ZflOCUzMf7wupX9WWXN
cyq6Z5Q1z6ton7mqdUZJQ0pJTUpJ47yq3jkVbYTPqeicu6ojek4miZm68kaS
XACWUk1Q5VD3uru7heeWyBTlY+fAcmaeqYiIiBs3bpiZmcHK4voaGRkZsGFs
bGxoaKitra2mpoYAdsCayWSOjc38wnRecEoGptTSwVJBV0HRQFFOX07BUEHe
QF5WV/aK7hVZPVlFI0UFA4XLOpcRUNRXlJKXYqYt/vuxyxEU81A+lgJPCFpN
5mpxs6mYqAmLxRIeNSEgt0fIa/yEvcnALIIgk/7+Bx0d37e1fd/e/uOaO9Da
eq+1tau9/R5iEB4a4jH6Df8YGxkLTKeH1IZGtsdGt8dFTS+x7CUmkh2IaY+L
bo9HILY9wS3XM78in1IToLq6eslGI0fdQ2UWko8sOFgWPpZintcCTtTV1dXJ
C4jv6Ohob28nPxHmOe4W/5hmHlZgSH1IdGd0bGdsTGcMWaI6o2K6pgOIjOuK
w8/4rniPWx75lRTzTINiHsrHUuAJgarJ5OQkGDgtLQ0tgjPaHlSjr6/v/v37
6JWT9kgmQ6msrEQHsLm5mTyx4nz+MPW21WTq5e2Ru3fvIoWgkeLi4tnTTC87
jA6PRpdGexR42KXbhjSHBDYEOmY5WiZaeld6Z0xk3Jq6RW+gR3SEuxe5B9YH
BNQFlDWW4bq87VS/fQwMDEDKXz1C5qIA1gXmYQlO9LoQfh9LMY8wg4t57OZm
ngg28wRSzMMBxTyUj6XAEwJVE/A/Do51UVEReSIGQk5PTw8MDGQymUlJSYmJ
iTk5OdnZ2SwWKy4uLjY2FjERERH4WVhYiL4nSBu68NbVhACdU2QBneLo6OiK
igph66u+LqbVpCzaOcdZP0gfi/Mt5/DWcKdcJ+8q7/SJ9JynObRSmku+CyTG
IcvBs8wzLDmspaVlhoai286zqEGAMAxtbW2t/GF0dFTYOHMuoE7CIwl6dhsc
HDUNsrU08ze9FoTfx1LMI8ygmGdhoJiH8rEUeEKgaoI+XUlJCYgXwhEZGZmb
mwvJ8PPzCwoKwk9XV1dnZ2cvL6/g4GAajWZvb29hYYE1YrAVjA0FQcslY1YL
g5pMsW/poJeamZmJ5BGlE8RZlgZQk7iKOCiFWZyZQYiBfaY9vT4QauKQ4+BT
6RPaFOKU4+SU52SbbuuQfdOv1i8pJ6mgoADGABknFIdyhivIz89HZF9f309n
GH/i7Bx16VLQhQsh0tKh0tJh7IU7gCWEvYRKStKYzEJBPDp89uzpkyePnjyZ
nHd5+vQRn+rAudEn0Kvf09ODhiNUH1lwIPw+lmIeYcZs5gkkzJM9zTwhhHly
p5nn5uszD3bw9/cnEzpw5nTgBpnugeygr6+PvowgmAfJeMwfYMgp5uETlI+l
wBMCVRM0UvJWFTp30AIQTnNzc2NjI9b19fWgpvLycjKdSmlpaU5OjqOjIygI
kWSo8JqaGvJWmPCoCQGyk56ejhMJYvLBJcPDkYd+KX7mUTcMGMYWCZZWKTbW
yTaWiVaGISY3Eqw8CmkWiVbWTDuzaHO7tJtWCVY5JTm4gpASXKCqqqoHDx7g
4kZERCQnJwcEBCCSuyiePp3U1w/Zuzfqu+/it28P3LrVe8cOxrZtfuxAEAK7
d8fu2ZO0e3fi3r3JW7f6hIZmL/oA7xMT4z4+sSYmdBMThrExw8Qk+OVCfk7H
IEA2GRp6V1c38HMLQtBfW0CUUe1xlt7eXqH6yIID4fexFPMIM35knmhzI4aR
ZYKlNdPaJsXGKsnKKNTIIsGCVkhD2JZpaxZrZp9ub51o/VrMg0uPq6mnp2dg
YEAmTVNXVyczppEAvKuRkZGhoSHWSkpKiYmJAmCeiZCQECTDiQ/Y2dnV1dVR
zMMPKB9LgScE/bUFOpvPnj1DoyC9zmcvAbZBYycdUvycnJzEz9DQ0KysrOHh
YRLJGVP6/v37fn5+bW2t/PRbl0BNRkZGIIVQSRQddBDJE85W/2pMTDw0uO4m
cc7h+FknCWnnkxddTlxwlrjgcvysg8QF51My7hLSricvuiPm5EW3wyevJaXk
4CLhuoyOjsIPFLHR0NAAiSHDns/wsQYG4SIi8Xv3pm3aZLt+/bUNG8y+/tpt
/XqzDRtubNnisXNn8M6dYXv3JomIZGzfHhQamrPoajIy8kBT019UNFBUNBjL
0aOBR44EHDrkd/QoXVQ0FDGHD2MrQ0wsVFw8/MABx8zM8ldP2EQAIwQvgVwv
4tO97u5uMpE96nx2dnY8G4ODg4t1/MWF8PvYqUVmnjaKeRYRaOnWDtYahhoa
RhqaJpra17Q1jTURUDdQx1rHTEfrmpbOdR1Eaptqy6rKpmekT/DNPLh2MIfw
qNeuXZOWlpaUlJSSkpKTkzt79uyZM2fk5eU1NDTItL9mZmZqampJSUmLzjxD
Q0PW1tYwzGTMBzJhmY6ODgKGbCCMrQiYmJjAWuOaUszDDygfS4EnhGH0m/7+
gerq2uLiEisrGxrNOycnr6SkjHtJSUk1Nr4WExNbVFTa1NT06hsRS6YmICuI
IHrHEJTGxsZld3tkYmJMVzdw317HAwe8Dx9m7N7tfOhQ4KFD9CNHQvbuddu/
32f3dw47d1rt3etx4IDfnj03ExJucR7AgXWRfWhKYWEh6g/679jEXeYvfWzc
vn2pmzfbr11r/OWX2jt2MDZsMF+zxnD7dv+NGxEw+PbbqH374GMDBeFjh4cf
aGgEiIlF7tvnuXOn7ZYtplu2GH/1le7OnXaiopF79nh8/bX+9u2WR46Ei4sn
7tvn4uMTWVpaUj0fIiMjXVxcMjIyKisr592ZTzAYjO+++27Hjh3QtfDw8Lt3
78bGxpJH24tbJouCZeFj+UF/fz8Kv6SkBK7D09MzNze39KdgMpm4IrgW2Idi
nsUCWrq9vb2SkpK6ujqsHQLabMDyXVW+CpOpqKAoIyOjqqKqqaGpqKgI88Y/
83D72IsXL6KaiYuLw7vCzUpISKioqMDNIhJO0tTUVFVVVUA+1sbGBmmAT75y
5cr58+fhok+dOiUrK2tsbHz16lUyVxqZeAI/g4KCcCkp5pkXlI+lwBPCoCaZ
mbm6ujdVVGxlZc3k5MzV1Ow1NBw0NR01NR3YAWyyuXTJ5OpVG2Vlaxsbj+7u
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
Aqw3gBMnTiDkxlz8DA4ORqhMyjMBUh4zoTiW4GRhnu4NDQ31/xRcj0MWIFa4
NpdpZf55/uHN4fxsvq3a1iHB4U7YnUeyRx7ZHo9iHjno7DFFUCeQtEnCnoW5
x7jnFORAypKSkqBUfX19/a8GlJyTk4MaQkjVat3Jk46HDvG+/hpx7IVdu+4j
cP3kk0ubNl1EQPvBB9989NF3+/bZfP01/+BB/qlTlpmZ+R1TAwcZ75slOxva
KJVKw8LC5HJ5bW3tVPmxsfCF+Pj4hobaGzf8tm8P2bFD8sknQa+/fvFPfzrz
9tt3//Sn0++88+jTT4P++tdbH33ksW1b+I4dEevXu505cw9LsXYT7AbIDB9I
ISdrI4wxrId9oJA1NmHtLNj0qUrD6lJTU6G32IfI+fz5866uLkzEmJXACsHP
7u5u4xT2pXLTbsbZH2E6EXXAhmRmZpaVlc35MS4cypz7KtRqeLnEsWPmKo/D
oiuPVqtlz+sRRh44cOD06dNHjx49fPjw/v37EUwiLv3qq68uXryI6PHWrVvX
rl3Dgq9CeRBPIqjGKlCNq1ev7tq1a9u2bajP1q1bURms98svvzx//jwODGQ4
c+bMlStXSHkmQ8pjJhTHEpwsYmsL48mYV5AXIg3yifS+9vjKLbubbiEuPIE7
X+jhLfHih/E8wz2cAx0vWX5v72+HPJEKSUdnB0QGUsza7Zr5rGcajJe9iYkp
J08+3Lfvzhdf3Nu9+xoSn312Y9cu6PmVXbuu7d6NxOW9e29//rnF3r33Tp++
X1FRM02xUFcmxQAaC7WHrk5zic0EGbsLGn/liseGDS7r13u9+67N669fW7MG
oezFNWsurVlzGVPWrLny7rtP1q/nb9jg/dZbj6ytvfT68S7TF/j6PT8/n30/
qLW1Va/XazQapVIJA9XpdPAC2Ac2B/+gQqGIjIxESADzgq1gP8A6UVuMscn4
W/H/QrpZVzYwJvaqHsqvrq6Gocy5txz27HXOW2e8K0JuYg5LRHmCY4K9I7yv
Pr560/ama4ire4i7R6iHt9ibL+Tzw/lOgU6XHl2y87NDnkhF5MIrT3Jy8uXL
l7/99ttz586dOHECiVOnTh03gJ8swd6VZdHj9O/Hzll5kLC2tsYqEKweO3YM
8fPOnTsRzeJP3L17N6YggTGq8d133x05csTZ2RknPinPBEh5zITiWIKTpdBq
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
oti0tDSjv1Or4aUQx5LymELKs1iQ8iwkFMcSnEx2E5x38IjumYFraqlUivN3
hvmZfHHWBNNxna5Wqyf3pQOJ5vP5JSUlOH9xsuPEX5onMnMTJkemj6JQW7gA
9CcjIwOJuLg4+AXMBTLOXsRKSkpiT6bEYjH2J7Sxj6thhZm9FzJQq56eHlSg
ubn5BwOoVXtbu3+UPy+RZxNrYxFuAQe5I7xzX3L/QcSDe+J7DyQP7oXdO2V9
6pLXJdckV3utvUQjWTpugk3AXk1JScHOiYqKcnd3R7qyshIugN3LxkVFRXK5
HKaABP4IHOQtLS34s9oNsHcjRSIRa+mDv6awsBD7B2mEAXB8lGz8GCW1Gn5F
cSwpz5wh5VkUSHkWGIpjCU5M3QSnGHRMaUA1MxQKBftg9wzzA5zUWCOuWyfU
hLkJMkx2k/r6eg8Pj+Li4iV+/hrvimDrnj17BuuEbrPbO3BAXLanpqbCf9nt
IFyAYxbSuFRnl+QQNOxPKBgmYhbysFnsJ/uyDITOTDcZ+7EphHFnssealTWV
2fnZGfkZmXmZGFgiIy+DDUinZqam56Rn5WWl56bXN9Yv2DfTXwoqj90CkcfR
i7/Ax8cnJCSE9Wf+9OlT/GSfVYLL4FjFT2dn57KyMng3DipEKY8ePXJ0dMSx
hzSPx7O1teUZePLkCSsEfsRu1rHVlZeXJycnt7a2LvGj8dUx73EsKY+ZkPIs
CqQ8CwzFsQQnRjeBmOMcYd3r9c8GpnUzp6urKykpafK3XVaGm+BSGtfLQqEw
xAAEysnJKTIyMiAgAGOBQABlCwoKQgZsLC63kcB0TIHcsSYkYrEYC0L6kNPb
2xvZsKxarYY3wYDMvysyFdj/Iz/CnoJNgE00fiPpVdRhbsBNsOcrKys1Gg1i
Feyi6Oho7GrsfBhHTEyMl5eXg4ODv79/eHi4i4sLnCInJycuLg77FuaCXY08
bBZsBf8XPAj/Av4XlINCKioqkNnoJjiA8S/j6KVWw+ZAyjOPkPIsCqQ8CwzF
sQQnRjeBBuKyvbOz03iO4KocszibqeI6mr3ZzlnmZKlBsbiKNL5LhgJx+k/o
DnrFuAn2GOQLkoXLbdbG2c7OzvBRBsvHjx9jDGXDT+gVMsM44CNQMFyDswtz
6BtLYFfgCl0ikWBKSUkJ9g98JCUlZeZ9Da0SmJtA7fsNt5IGDR/fRJAD84W/
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
c3JysEh6evrAwMAibgtBEAvAq4hjSXkIgpgeimMJTia4SXt7e2ZmZnNzc01N
TXFxMQwCrqHRaBISErKzs3t6ejC9oqKipKQEs7AgcsJiGgy0trY2NTWxB3wo
56VP+pCBXksjiGXHq4hjSXkIgpgeimMJTia4SVlZWVFRUWFhYWJiYlVVFQxF
IBDExMRUV1fDLDDu6Oh49uxZXl4eLAaeAnPBRFhJX18fXCY2NratrQ0ZxGIx
7AaJuro6lqexsVGr1WJdKBYTsQpmQy0tLfX19YODg4u4EwiCmDmvIo4l5SEI
YnoojiU4meAmMBG9Xg/7SEtLS01Nhbl4enrCU1JSUpydne3s7DC+detWQECA
m5ubr6+vo6Ojg4PD48ePIyIi4CasdQaPx7tx48bTp0/ZG27e3t6urq7I4+Li
gkVgNJiCuY8ePbp//76NjU1wcDA8aBF3AkEQM+dVxLGkPARBTA/FsQQnE9wk
JycHbhIbG6vT6QoLC/Pz82UyGfRfqVTCC5ycnDw8POAIsJvAwED8tLKy8vf3
R5q9qyYUCkUiEZ/PxyyBQBAdHR0VFYUExrAYOAgSkZGRLBuMCUvBmBQKRXd3
9yLuBIIgZs6riGNJeQiCmB6KYwlO9u3bB9cw/hwdHe3t7R0cHGxvb8d41MDw
8PDIyMjQj7CfGCONPMM/MiHnyI8YJ7KEcQqWNaYXcQ8QBDErLCwsoBtmFkLK
QxDErJgX5SFWHr/85S+3bdt28EcOHTp0+PBhNj5IEAQxiT/+8Y/QDVIegiAW
knlRHoIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIJYMP7+7/9+7dq1u3fv/owg
CGIG/OY3v/mXf/kXUh6CIBaSeVEeYuWxcePGlpaWxa4FQRDLhtOnT+/bt8/M
Qkh5CIKYFfOiPMTKY+/eva2trYtdC4Iglg3ffPPNZ599ZmYhpDwEQcyKeVEe
YuWBo+LZs2eLXQuCIJYN8+ImpDwEQcwKimMJTshNCIKYFRTHEgSx8FAcS3BC
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
yChNVKAk8Ps73weKAyNUEVGKqO7uefhagU6nM3UTVg0yFIJ4Kcs9jjVCykMQ
ywiKYwlOloKbGOF78JOTkoeHhydMr6+rd7RzbG1pncd15eXl5efnT1gX572R
0dHRvr4+084hCWI1s2LiWCOkPASx9KE4luBk6bgJRJvH4yUkJEzW7erqajs7
u8bGxnm8X1FVVQXjmNzoeMIba6gM1h4UFJScnEyGQhBjKy6OJeUhiGUBxbEE
J6vWTSorKzndZMzQjth4b6S4uDgpKcnNzU0ikfT398/X2gli+UJxrDmQ8hDE
3KA4luBk1boJtlqv10/VhQ4zlPb29hcvXtTV1fn4+FRUVKCG87V2YvmCQ2KV
HwkUx5oDKQ8xN0h5KI4lOFm1bjI8PMw6JJ8qg9FQWltby8rKRkZGpspJrCoa
GhrKy8tX8y0yimPNgZSHmBukPBTHEpysWjfBWuRy+TRuMmYwlOTk5I6ODlwI
U1NigpGUlBQREbGaW5dTHGsOpDzE3CDloTiW4ITcZJo8WF1FRYVCoaipqYF6
UGsLAqSkpERFRZGbmFkIKc80eUh5iMmQ8lAcS3Cyat0ERanV6paWFtMyh35K
Z2dnXFxceHh4ZGSkTCZraGgYGBgwzp2vmhDLC3ITimPNgZSHmBukPBTHEpys
WjcZM3xYp7m52Vjm4OBgenZ6YkZiQkYCxomZiUlZSWl5aen56RhjSM5OxkQ2
V5+i7+yiD6OvRshNKI41E1IeYg6Q8lAcS3Cymt0kLi4ObmL8sM6z5mdPRE/8
8v38y/wx+JX6+Zb6Gsd+ZeMJNiuoLOhhxMPcolxqgrEKyc7O1mg0HR0d5Cbm
QMpDykPMClIeimMJTlazm+Tk5BQWFhodoaWpxSfBRzuo1Y/p1aNqfg6fn8X3
yvXyLfa119nDRJBWDivjxuISxxI9Mz0LSgvITVYh3d3dOGUmf/tp9UBxrJmQ
8hBzgJSH4liCk9XsJuXl5WlpacbVwU284r1UAyr4hbhFfF9y3z3F/WbwzQcR
D676Xr3ie8Uz21M5pNSOaXVjOs8Mz/ySfHKTVUhmZqZSqaS7ImYWQspDykPM
ClIeimMJTla5m2RkZJi6iWe8p3Jg3C8UAwrXZFe3VDcbpY1nvqedxu6q/1Vh
nVA9qtaMaWA35CarluTk5MjISHpLzcxCSHlIeYhZQcpDcSzByWp2k5qampSU
FOMHIp81P+MpeRHNEbIuWVBV0C3BLc8cT+tYa9cUVyupla3K9p7oXnhjeHRn
tLRL6qx3Liihp3urEWptQXGsmZDyEHOAlIfiWIKT1ewm/f39ph/W6XveJ5KJ
BDGCEFlIqDw0ODr4nsO9tVvXvrHhjfN3zwfGBIbGhgpkAgyhstAAcUBjU6Ox
pQaxeqC7IhTHmgkpDzEHSHkojiU4Wc1uMjAwMM0HIiViyR9+/4d//82/n/n2
zIN7D6orq+keCAHS0tJiYmLITcwshJSHlIeYFaQ8FMcSnKxmNxkcHJzGTXJz
c9esWXP27Nno6GixWIycdXV1dBuEwHFIXzmnONYcSHmIOUDKQ3EswclqdhNY
g0ql6ujoaG9v7+rqev78+cDAAFsFEnl5efHx8Q0NDUqlMisrC2nUDTlX7bUw
wcDRmJ+fj6NlsSuyaFAcayakPMQcIOWhOJbgZDW7CdBoNPCLkJAQgUDg5+cn
lUphK4ODgxkZGVgpqoQ8CoWiubkZOWtra1G93t7e+a0DsbxISkqKiIjAWbNq
4wqKY82HlIeYLaQ8FMcSnJCbwCm0Wm1iYqKnp2dAQEBlZaWplYwZ1AOOg4ph
XFJSkpubu5qf7BDUapjiWPMh5SFmCykPxbEEJ0vNTaDqk92kpqbG3s6+qalp
3s/f5OTk2tra4eFhlOzv76/X6zHF1EpYnqqqKpgODGVgYIB9i2dyJYlVArnJ
ioxjSXmIJQ4pD8WxBCdLwU0g5lDp/v5+Nzc36Hl3T3c/fpkM5eXltra2dXV1
SBs7XZwXiouLs7OzUQHYR1ZWFvxigpWMGdykoqICE5VKZXt7OyqQmZk5ORux
SiA3WTFxLCkPsYwg5aE4luBkKbhJfmF+hCZCpBZdf3zd0dcxTBkm1oolGsn4
oB0ffMW+39//3j/CP1wdrk3UzqOhFBYW5uTkwE1GRkbgWfn5+ZO/Xm10k6Ki
IpZ5aGhIp9Ot5veUVjMFBQWJiYnd3d2r9t9fMXEsKQ+xjCDloTiW4GQOboKT
yPSGAH7OoU8YLNXR0dHb24tlRXKRb4mvqE0U1RUlbhcLnwlF7aLwtvCwlrCw
Z+ODqFMU2RUp7hCHPgvliXk9fT2zXd1UVFVVZWRk9PX1wUrY7ZHJeYxugtqq
1WrW2gIXxUlJSV1dXatWUlYt+NNbWlo4D5VVwmLFsaQ8Y6Q8qxhSHopjCU7m
4Catra3QXpxN/f39AwMD+Nnc3AxBZr3HsImm+aG3mNL3U7DSEydOPHr0qLCw
UKwQRzyL0Pyg0Y/pPTI87kfcF9QJnhY9tdXYWsdaW4gsgiqDNKOa8Y+Pjyq8
pd7tne3ztfmos1KpZLc7pnrxzOgmSCckJNTW1jL3rKyszMzMXM29oKxOqDfy
xYpjSXlIeVYzpDwUxxKczMFN4uPjPTw8qqurRSKRSqXi8XhRBnx9faMNqNVq
03a1g4ODWET2U8LCwv7t3/7t5z//+ZHDR5y9nSXPJOof1AljCQ5ah4v8i5d8
LjnoHQJLAq1irM46n32ieqIeVMNNVKOqh14PdfE6WNgEz5ob8DVvb++MjIxp
LnJN3QSXw9gW46rLysqys7PnpSbTs2qFawlCb6ktVhxLykPKs5oh5aE4luBk
tm4y/jBOJIKDaLVaZ2dnT09PiUSCsY2NjbW1tYuLC8TZ1dW1vr7eeK6xuyL9
PwWy/ODBA4FAgLVLYiXiZjGcQv9Cb6e1uxN25xL/ko3aJqgsyCHO4ZzLOcck
x9i+WPULtXxE7hntmZuXCxdLSkrCGQ0X6O7unpuej4yMFBQUeHl5Td8xI1Zk
dBPW5gJeZty61NTUqqqqV/rhSFSvvb0dY+w3+qzPokNusihxLCkPKc8qh5SH
4liCk9m6yeDgYHp6OtQV51RCQkJaWlpmZqZCoXBzcwsNDc3Pz8/IyEhOTjbV
25cSpYzyzfUVVgkFVQJrmfXNoJtO8U7wkceyx7axtg5aB4y9sr1Cq0ODqoM8
JZ69fb0ovLy8HI4GO7CwsAgODp5tJ+GseUVWVlZ0dHRnZ+c0ObGlyGl8MQ9r
zM3NNd5FQQL7oamp6RXpPMqXy+Xw6MDAQPh4c3Oz6Y7F39Hb34sdMpOhr79v
1QrgPILjITIyktzEzEJIeUh5iFlBykNxLMHJfLUaLioqqqmpmVuHMFk5WT7B
Pjx/3olzJ+4+vusZ4ukd7O0d8v8GW57t16e/tnO34/nxpEqp8R4ItBTXp//6
r//6n//5n0qlsqe3Z2Bm9Pf3swdzQ0ND0OrplQHWCdM0vsP2/PlzlUplal4d
HR1QmFckL9il8Ou4uLiAgAA/Pz94mekdmOT0ZK9IL2+pt7fsJYOnzDMkKgSG
Mu81XG0gmpLJZKv5O6FLqr8CUh5SnlUCKQ/FsQQnS6H3G5laxtPyvFO9nbXO
vASed4q3T7rP07SnGHzSfDB4JXs5qh0x5qfwvcK9cIFvXDYpKenixYsHDx78
5tQ3QaIgqU4q1Uul8T+OJwz6vw3CaGFqWiozCIVCMb0ytLS06PV60weIiYmJ
xjYXjNbW1vj4+J6eeWvOPAFUTyKRaDQa1riju7u7r2/8Fke0Ojq0LlQ+JI/s
jZQOSGNfxCpfKDEggSG6LxoTo59Hy4ZlshEZL3o+G1yvWvBfNzQ0rObu6JdU
HGsOpDwvhZRn6UDKQ3EswclScJModVR0Z7T+B338WLx2TOuc7KzoVWj7tXED
cfphvX5sfMAsjNVj6qfyp6ZuYiQ7O9tOZhdaExraFCpoELCxoEkQ0hAiaBRg
CG0Yn4VB1CSyjLQsryrv7xtv4BwXF1ddXQ1xnuoWSl1dHfJ0dXUZp0BMdDpd
Z2enabbS0tKMjAzTbPNLXl4eKxzja9eu8Xi8ysrKaFW0uFksaZNc8b1irbCO
7oqW98llvTJFnyKmN+aJ8oljvKOV3Morz0s5pPSM8ezq6Vr4/3eFgT86NTUV
kQPdFTEHUh5SHmJWkPJQHEtwskTcRNIy3moYVqJ+ob4Tfsctzc1CbGGlsPLI
8lANqzBdM6bBIB+Rj7tJ/3i7A/aeGM7okZGRwcHB0uJSn1Qf7ZAWvgPxDKwI
5OfyfQp9rKRWzonOSPgU+GiHtSgqcSzRResSIgpRKpVqtdrb29vLy0uhUKin
ICwszMHBQSaTGadgQVtbW7FYrFKpjBM1Go2rq2tgYGBsbOxURZmDXq/XarVY
i1Qq/eUvf/mzn/3swP4Dbj5uMEdpv/R7z+8vel28H3X/ZsjNix4Xr/tfd4p3
cs90t9PaBVQEOCU4KQeV1v7W+QX5vb29r7RtyIonKSkpIiKC3lIzsxBSHlIe
YlaQ8lAcS3Cy1NxE+4P2YfTDa/7XvrH75pzLuVuht2Kfx45PNwyKEYWv3Le+
sd7Pzy8zMxPC2NnZWVFRkZCQ4O/n76ZzUw+Od6HjkuTine8dUBpw2eeyg87h
jOuZ6wHXnVOcNUPjXUHqx/SuetecghwIQkdHB5aFPrS0tHRMQXFxcXR0dFNT
k+nE5ORkyPvkpSD7qBgr+RVRX19/8eJFGFx5WXmEIkLcNH5X5LLv5fvi+/CU
rx9+fdrx9AXehUvel+x0dpZSy6u+V90y3BR9CleJa5wuDlZYXl4+YmBx//dl
CrUaXpFxLCnPSyHlWVxIeSiOJThZEm6iihI1iBTPFco+paxP9kT5BAIIYbSS
Wj1RPInsiIzti2UD5jqFOp0+e/oXv/jFlStX5AbYO2OFBYU+qT6qAVX8D/Gu
Ka6uya4hdSHX/K6JnokeSB5c9LroluqmGlRpXmjiXsS5JbhV1Va9GB1/zQxm
kZeXN00vjs3NzaY9NzL6+/thHJO7Ikc22NOsGk2bg0Kr4CfwvZK9HoQ+eCx5
7Brn+kDw4EHIA5som0fhj+4F3XOMdbQItMDYJ8OHH87v7evt6uoqKiqCGJaW
lsKLV/PbVnOD3GTlxLGkPHOFlGfhIeWhOJbgZCm4SVhUmFW0la3G1j7O3i7O
zknvdC3g2nn38zYKG8d4R0w0DnZau0MXDh35+sj27duvX79eVlZWU1PT0tKC
U7uyopKv4oeXhwtKBc5q5/sh9yGhliJLjxQPyKxPuo9fjp+oSiSuEUtqJM4x
zjX1Nay5REdHh1arHZi6H8impqYJrS0YUJXKysrJDaW7u7sxC3t1AXpcxLqq
qqoqKiqqqqsqq1GdSiRYGtOraqoqq8anYFxeXm7aRQ82BzYKl8zMzEQhg4OD
1D/kDElLS5NKpeQmZhZCykPKQ8ozK0h5KI4lOFkKbhKpigyrC5P3yxWDClm/
zK/YT9YrG0+U+YU3hiMhH5SzIbov2it6vNUwBBAmkpyc7OXlJRQKBQJBbm5u
XGKcNknryHOUx8n1GXp92vjg4uWiiFPoUnQYtMlaDHHJ49mMLXxRlEqlMv0M
0ASmchPsN0zv6+vr7R2/1YACWUtezKqvr4dKd3Z2LnHBGRoagss0NzfDlOvq
6mCs9MjvpcCyc3JyVvNXQVdMHEvKs1iQ8swBUh6KYwlOloKbmL6lphpR3Rbc
DigLcNQ5XvW9+kT5RDU4qbXFj62GcV7HxcWJRKKnT59mZWWxJ3Sxitie7v/X
x0t+Xn5FecU0IgkvgJvACKbKMJWbjI6OYu0wtaSkpJiYGLVajQQEmTlIRUUF
NGe2faQvFrW1tYmJiag/fBD7iu6QTAOOBxx404QfK54VE8eS8iw6pDwzh5SH
4liCkyXiJhHPIv7W2mJMayWzuiu6u//m/iu+V5BWDaiMrS1iR2NZq2HjskzS
FQpFV1cXk3G5XG7aKyOuXuEFTORZg1mYjqla4icWn6YDRiyr0Wg4H/+VlJTA
xWJjYyUSibu7u4+PD6YYvyNZUFBQXFw8ODg4XzvqVdPY2Ig6Y3sbGhqwD6d5
4rmaoVbDKymOJeVZCpDyzARSHopjCU6WgptEqCLC6sMU/YrYgVjZc5mFxOKy
z+VjVsfOup511DvKe+SYjkExoIju/9vTPdPFcYlqah8T3ASUl5dnZ2d3dnYq
lcqioqK8vDyopenbZVgEEjpV9WA9yMB52wROoVar2VtekZGRUqnUeFdkzGAo
qampNTU1y+uRGTYnPT09Pj4ezggvntuXklYw1NpixcSxpDxLClKe6SHloTiW
4GQpuIlSp/RP8xcUCHiJvKfpT/1S/O753jty+cgt3q3grODQwtDAnED3BPfA
3MDgvOCA6IDn/dO9IDTZTYaHh3U6HUzE2dlZKBTa29vjqtb06QwWmf5D5zKZ
bKrHf8nJySiZtSyerDA9PT1paWmNjY3L7nkZtgUWjJpj07A/sbt+MLAwGwJ3
HjB8xHO+mMd7U+QmKyaOJeVZgpDyTAUpD8WxBCdLwU1QgYLCguzcbIt7FgFB
AZnZmdAxiHBOfk5ufi6GWGXs1WtXtTptTl5OdU319Nfpk91k7Mc35MvLyyGP
fD4/ISHBtNeXuLg4TIfpQDlbW1sn38SYyk0grWq1+tChQ05OTlO9kNbS0oJt
Mb1bsoxAnUtLSxMTE+GY2Ks1NTWpqanTvNFnPpB97LGysrKCgoL8+QNbgWLn
xVPITVZMHEvKs2Qh5ZkMKQ/FsQQnS8FNjHh6eiYnJ0/uULG+rt7R0XGG9eR0
ExgQJBFm0dDQoFKpJjT5hHnBazDLx8dHIBBM7oNxKjeBJdnY2PzjP/4jDAUr
napKdXV16enpL/0GOrypu7t7mv4kFwvUCm4Ceb93z+KNN96IioocHHwlL7DB
x4uLi/V6fUZGRmFhYdH8gf2v0+lQuPm9VsKbUJTxrchVyIqJY42Q8ixt5ckn
5Rkj5aE4lpiCpeMmEHwejzfhfgWjurrazs6usbFxJucvp5uMGToVh1XBKSZ/
nxpWkpSUBMH09vYWi8XYIdO4CTS/t7e3p7eHDbW1tQcPHjx16lRtXa1xonGA
bbGiWMuL6e8nDBg+uQ5Tm+oJGirWVFfXOIOhvrZ2vu5dPHvWVlvbXFvbVFJS
/umn2//hH/6/1177S2Jiak1NIyaaDphi3N650dTUpNVqYV6cN75MS55qLdM8
f0SxarUah4GZDyhxCOE/WkaNaOadFRbHkvLMRHnq6makPbW19fOoPDU1zRhK
Sio/+WT7//k//7RmzRuJiWnV1Y1sunGorm7q7SXlWflQHEtwsnrcBOVHRES4
ublBsSdIAa6acak7PDwcFhaGdU1WG1M3aWtrU6eqtRnauKw4XZZOn6sXKoUW
9hayJBmbosvWxWXHIR2XGadJ1LA7MCgTbjX9VTlyovKlpaWcWjr64oWfh4ez
hYWTYXDmGpzu3h2fde/e4+vXs9LT56OVxw98vvDy5afff//0zBneZ59ZrF9/
7le/2vzFFw8vXPDCRJPB7+xZd70+ZWho1nd1jH9WfHx8fX09ZL+iogJ/Ivsj
sDdYhzw4UNnLcqzDTDbR+GchG9Lwo5aWFmPDbexS9rYby4Z/efovKM0ExB4a
jWbpd9H56qA4lpOVqjwvXmD/+N+963znDhtcuIbxWXfvul69+iQ9PWtelIfH
Cz9/Pujs2cCTJ3127LB8773v/+mftu/e/fj06YBz5wLPnQsyjMcT33zjqden
kfKseCiOJThZPW4C/fnuu+9+9rOfWVtbG98og8hAmmpra2NjY6FC0CJOJTd1
k4KCAkelY3BZcEB5wNPip4FVgf5l/oJaQUBFANK+Jb6+pb7+5f5+ZX7CKqFV
mFVTSxOrDCwsIyMDajnVVTlWnZubO1WfM0MjI4gdHx86ZHPo0JNDh+59/jmG
h19+abl///0vvhhPf/WVrWGu7ddfX962LTY6es5X7hBqbGZlZWVf3/Nvv3Ve
t07wwQfCDz8M27hRsm7d0/fe461bF4gpGNgsw9zwP//ZJTBQ2t8/uwd/kHrs
f/xl+N/x3+Gvqaqqcnd3Rxr/O/4ROAvsHhOlUml6ejomQswh6ageDgnMxQGM
LcWOraurCwwMTEtLYwtizD4bBAdBNqwI+RMTE828oZGcnEy931AcO5mVqjyj
o0Pnz1tCXfbvt9+/327Pnkd79jz8/PNHX3755Me0FaZj7sGDDlu3XouOjp0X
5TlxwuP116Nef13x5z8r/vpXzeuvh77+euDrr0e8/roME197Tfr663LD3Njf
/tbX319OyrPioTiW4GSVuAkEvL+/j8/nv/banywtLdvb24aHhzBAuzIy0tVq
lb+/n16va25uGhwcmGwoKBPX11Chrq4u1NAv308/rPct8rXV2IbUhrgku8QO
xnrleSHtlurmlODkXeAdUBagH9G7adwqqis6Ozq7DMCwlEplTU0Nrqm7uIAG
dnR0cM7CApYXLzoeP+5y8qTD8eMnN28++tFHp7dsubx796nNm49t3IiE04kT
zidPun7zza19+8RCYUNDQ+ucwA7fvHnzPhQiDj9xwm7TJtHmzZEYPv1U+pe/
PPj970++/bb9++97fvih77p1/E2bxJj1ySfRa9d68/nhdXX1KKHPACQXafwd
w8PD2C5WOFTdOAsTYRPBwcEqlQqyLxaLYe74ox0dHaOjo/F/PX361NnZGQcG
0n5+fg4ODi4uLvAapH19fUUiEeYKBALsUolEIhQKMQv7Fp5ib28fHh6OxUND
QzHRxsYG/ojdOFWHnDOHWltQHMvJ1MrTj6N3zZo1UyiPv04H5WlessoD7blw
weroUedjx9yPHnXZuPGbDRuOffzxuR07rm3adHrDhuNIHD3qevy42/HjvD17
LEJDJeYrj0QSfuSI8zvvxL77rhbD2rUJ//3ftv/+7+f/9CePP/85+M03w//y
l+B33lG++67m3Xd1a9aE8ngiUp4VD8WxBCerxE0gcfHx2UlJuY8eOZ85c1Um
S9DpMvX6LK02NSxMERoqFQplAoFUJovXatMLCkpNn4vBRHAVDNErKSlJS02D
73ile+mGdXYauwseFx5FPboVckvZo7wdcvtO2J3bwtsXeRfvS+6H1oXGv4i3
k9rJY+VJiUnJBlJTUyF6QUFBCoUiKelvE01BhskTGdgzN06eZHEsItWzW7ce
3bjxwIcffr527alPPjn44YcWX32FWSyOvfv55052diqlUjcnsA//9Kc//eEP
f7h8+fs9e259/DEi1SgMn34qe/NN69///sRf/2r5u98dR+K1125+9JEQsz75
JOa9955aWDjFxo6vtNpAYmIi0thSKHxaWhorvLa2FjsTm4M0tquwsBAOq1ar
Aw3ATWANUqkUs0JCQpDw8PBAZjiFp6cn3MHb2xt7Dz4Cs8BScCKk6+rqUAgy
R0ZGogTUH36EpdLT07VarY+PD0qGW03TsfzMQcWwFnITMwtZNcpTl5ycnpqa
ZW1tf/7890qlNjExLTExHcd+RERMeHiUWBwlEkXGxmrj43EulCxB5UlMTDh+
/BYiWBapfvrpd4hd33//0Nq1X27a9O26dYe/+OLB0aOY5XbihMfevRa2ts5K
pcpM5bly5fudO+8ZIlUEsdr33kv64x9dfv3rs//zP06/+c2Z3/zm7O9+9+Dt
t+WIY9eu1b/2mvDOHVdSnhUPxbEEJ6vETf5/9t4DLqokbxfed+937773vrs7
aXdmHN2dtDs7O+oYZhRUFEWRHEVUFMGAAeOomDMoOWeaTJNzk0M30CDd5JyT
pAHFISpi5HvoM/Yy0GirgC3W86vf6TpVp+vUqVP1PP8651SVv3+kurqpiorV
xo128vJGysomyspmiorXlZSMVVRMVFUtVVXNNmywUVe3kZc3u3zZqbe3HyLS
19fX2dlZV1eHbjVUAHSEsiotLfUt8U1/kG7Ltj0feP5qxNVLoZdCboZci7p2
NfKqcazxGZ8zpommER0R6Y/THZIdKqoqqE+nKHR1dRUXF4MPcVFI/JbQaOvo
uPbTT1Z79tju2eOwb9+5zZtH7Nh162DB7pWV3Sktbb5rl+3evYi127v3nKYm
MyEBtPn0lTA4OBgaGgr+HxoaPH7cTU4uVFY2Sk4uUkGBIS5+XUzMWFzc6Pvv
D8+du3f5cjMZmTBEyctHrlzpFhSUcO/e4PgEh3mfoo33AxCajIwMKDX1dq+3
txclTz2DGhgYwIVDygsKCpp5QImVl5e3t7fDg3uBWCaTCSmBgpSVlUG2cLOo
x0oocyop3ETUB/hxUTgXBGjw9RZ2RDXA7XtLpzOaFBA7ViAEMk9QUNjOnad3
7jy3d+/lrVuP6+ic0tE5s327wfbtJ+Hftevcjh1n9PQu7d59Ydu2U9evW/X1
iRzzdHa2HTlyfedOu127HPbscdbQuAjKgR0LJyOjLyW1S1fXGlFwenqOiE1I
YE4K8xw65CkhkSAhkQK3alXa99/bLFhgPX++1T//efLrr48sWOC4YkUiolau
ZC5aRPf3TyHMM+NB7FgCgXhH1MTXN0pDw1tTMxhOUvKClNRleXmblSvPrFlz
WVLynLS0iYyMxcaNQZs2haqq+hsY2NfXN4KXcnNzMzMzS0pK4uLiQGXUW7+q
qirPLM+Y1hi7FDujYCObZJtLvpeuBl49733ejetmnWp9Pfy6dZK1bYptTEuM
Q5zD7a6xY5CB6upqpPNSM7E8fvLEycTE6vhxq2PHrI8dszh69PqBA+f19K7u
23dp797rBw9a88JHYo8fv7Jv3w02++Frz/QyPPzE2NhHR8d3+3Y/ym3d6qGt
7bVtm6eWFm3rVnd4qHAdHf+NGx3j4zOGhl79pAKnhYeyoKyysrIgBKmpqc7O
ztjivkA7UlJS3N3dsU1MTGSz2U5OThDB9PR06gVcU1PTmBe1qOoCF6x/KUC8
qPWGXieRtxrEjhWICXrQofr6ZocP2x49aquuflBD4/D27edUVPbCo6q6f8sW
g61bTx05YnP0qP2+fRYXL5rV1zeIGvM8ffrYxMTp6FEbXj5tjxyx3r/feNeu
C3v3Gu3efVlf3xRRlDt2zG7PnqtsdvYrDLkahyeGhnRNzRBNzTDKbdhA19AI
0tAI3LDBj+cP0NQM5UWFKyq6x8ayCfPMeBA7lkAg3hE18fODHeuhqRmwaVPw
smUHlyzZIyNjtmLFcTk5CzEx/eXLjyopOW/aFLhpU5C6egDExd8/MCsrE7xB
veYDcSEPFDXduXMnIT0hLiMu4UZC4o1EuKTsJM9QzwBGQFBckIWzhXuQe3hK
eEJmQiI7MYGVIHCWciQLqUL6LzWCtaG+vqykpLS4eMSVlJSNzNReSm1L+eE8
V8JbDXNSuu1NTTdxqqKi0meurLi4jNpSblRUaVfXa73z4nK5/HIeDegIBCI+
Pj4oKIjBYISEhEDfHRwcfHx8oCBeXl5mZmZRUVG+vr50Oj0mJgaaYmdnB4kZ
IxzUzOSvOWoYdkVlZSVRk9dM5B1hnoAA2LEmhw9bHTliKyurvW7dJhiuCgo7
tbVPS0tvVVDQ3b37yuHD1jARDxyw3LHjEI95skSNeWBdgwSeEc9vuOe3xDPC
PZPKPOWgmmeufJRndHgZYZ53BMSOJRCId0RNfH0jN2wYsWM1NWHHHoXhKitr
uXr1ORUV2ooVxyQkTikqOmpqjtixqqr0PXuMkAjoi1qK5d69e+hK85+KCER7
a3tebt7Q/aGO9o7cnNzCgsKf237u7e19zl9AR3l5ec+Zs/EdREdHR3Z2Niok
Cgec//gZILvV1dVFRUX5+fkNDQ1QhFweCgoKsniAv6ysjM1mFxcX8/04HmpC
pTA4OIjbgSjc0NcscJgWULTxU9a/OyB2rEBMbMdehx17+DDsWB05uR3a2mfV
1PT37LkGa1ZZec+OHZd4Vq7Nvn3mR46cTU5OJswz/SDM81aA2LEEAvGOqIm/
P2PTJmdNTU9NTS9p6Yvr119UV3eSlTVUVXWQlb2qoGAsJ2eI2M2bvVVVaVeu
uHd393Z2doKa0tPTS0tL0eN+fkd4aGiIGlk8zPsEC+wHzqGeezxn+RWUPARF
4Fw97yxQ2lwuF0LQ2NjY8gxtbW3UpDfQdxTpzzxAeqgt5YEuUx6+H1t+CtAX
JIv/Pn9pUWFARg0TO1YgJvg+Nnz/fqODB83gNDUPbdp0eM+eq1paR/X0Lm3Z
8pO2tsGWLUcPHjQ9dMgclq2pqUN3dw9hnjcCwjyiD2LHEgjEO6Im2dm5Fhb+
JiZ0U1O6uXmgmRkcfdQ2AA5RcMbGvqGh8fypCNGtRjfc3d0dHeGKigr0qQWu
+YKONrrhYLDRPW5wF/r40BQI07179wRmHsega//ChSPfKaBC1tfXQ2fB/5xR
oELGBAoJ3Luurq5JeQBF1ITYsQIhkHk4nBwHB08bG3dbW3d7ey84OzsP/pZy
iIKztnaNjIzlDwUizDP9IMwj4iB2LIFAvCNqQp1BaDcWIJDCwkJ01TMzM8Fp
6GWDTMaswYoOe3Fx8ZjMU09IoCnolVMvCsdkDLtVVVWVlZWTtZgjwVSDqAmx
YwViIuZ5+vTJ06ePhXACTB3CPAR8EOYhdiyBQLw7avI6gBxAQZBD5K25uRm7
GRkZJSUl7e3tfX191Nf7EBcmkylQFO7fvw/JgBKVlpaO1xT4IVX19fVUOtSE
MNR05WMEi0AUgFvJ5XJx39/ZW0PsWIEgzEMwpSDMQ+xYAoEgaiIMOBzOmKlU
QCbV1dVsNjsvLw9C0NXVBeZPTk5+TmcZmlJZWZmVlQUZGqMpg4ODRUVFfMFK
TU1N5AEHv8usJZrAvYYV8ZpLTL7VIHasQBDmIZhSEOYhdiyBQBA1EQYVFRWl
paXjZ02hBrTm5uZCVnAA+L+wsPD5k12DhShNwfHgJT4pQYyys7MhRgMDAwkJ
CUjKycnJ398fKkaGFYsUCgoKcHfe5TEyxI4VCMI8BFMKwjzEjiUQCKImwqCt
rQ0Ze05HuL+/v66uDqd2dXWFWFDztzxngCqSol4S4V9QECrljo6OvLw8JFJe
Xn7//v2QkJD09HQyEEPUQFaHJHasQBDmIZhSEOYhdiyBQBA1EQbUiIkXvtB5
8uRJREQEk8mkphBsaWnp7u5+zkMSxKKLjUuura1FnnEk/r5o0SJzc/OBgQEO
h0OkRAQxpaMtYEVQT8ao9TF7enoePXpErfI56ed6ZRA7ViAI8xBMKQjzEDuW
QCCImggDIdVkmLcEdmNjI6igrq6OWsGwsrKSmjOHWqBnDCBAv9z5JS8vL5Od
WVZWdvXK1e+//15RQbG1ZWRBn8ej8OTxDHrH90ToqSNe5jailEDF/O/6sL13
796A0BDyLSr1VGSKZiOvr6+Pj4+nbAzUh7i4OJwIZxS4NtObArFjBYIwz1uA
J0K712Oeu3fv9fcPCOMI8wgPYscSCARRE2EgvJpQ85DzjwQVgBMyMjLQlYbK
YHdwcJDHciOrxsDT1NrU0NLQ2N6YV5oXGh3q6e/p4OagvVs7KT2purG6rrmO
cvXN9VWNVb19E05s/hbh/v3H5R1NhR3VhZ08dwuuqrCz6lcP5bDLi63q+Bmi
KkyyKHOodmhoKIvFop5EISQlKSmOwRDoYn+7Gx0VhYYgTPEWFRUxmczu7u6p
uBdVVVWoaTgFnU738/Pz9vaurq62srIqLi4WaI28ERA7ViAI84g4Hg4N1XdX
l3eXUq6spwTu2S7l5++W3vyl8fFjoVqcQOaJjc0ICkoLCkrnbSlP+rPd9FEh
8CTfuiWUaUqYh9ixBAJB1EQYCK8m1JjfMW/lEIgUIChsNruioqKjoyM8PByk
19fT5xjq6JHp4cHx8Mrx8sr1sk22pd2guWS6uGS4eHI8vbhenlxPd667N8fb
PNK8oLRA+BW6+/r6wK5UYcLf2dnZ09PzygM3qL+jVJECKgx2nz+oZDzwLzAw
/l7f1L8268C8MoV5FXLzKmTnlSjOK1aEZ2657Nwyubml8tjyouS+K5PdlGLc
NSDUK06UKsrWxcUlKCgIwn3v3r07d+6cOHjQYP/+o3v2wB3eufPQzp0Hduw4
oqf3k57eib17D+7Yoa+rC/8pff2dWlrFRUXCrLmDUkX6Y9ZPf01Qj46xra2t
TU9Pz83NjY6ORkXCtWRmZmIbEREhOuuqEztWIAjzUBBZ5rnd2b61TF2yUWzV
zaVwkg1iq+vFJZvEVt5cCreqQWxlk9iqppEo7Brk7+sZ7BYm/fHM0919e+NG
izVrPCQlXSUlnSUkHCQk7FassF21ynnVKhdJSXcJCdsVK6wQu2aNz4oVhnl5
ZcLYzIR5iB1LIBBETYSB8GoyzJsqBxkebxEhBCpTXl4OHVm2bNkPP/wQHRHt
nuKe2Jfo3+gfcSsisDkw7XFaUn9SSGsI4xcG+wk740lGylBKSFsI8x7Tr9Yv
MycTN6tXOICODA0NY2JiWlpaUlJS4uLiYmNjKVGg5odELxsqQx0MkQKbUX7q
iQ0/Coch6tq1a7gFhYWFSA1pRkZGcrncrq4uITMDoGtvaWnJ4WTnl7TNblnw
u8e//93w7/7X4P/9P82z/1D7xe/v/s/vB/77/7TM+kPT337f9f7vnvwXYuGW
5G+q+bmpt0eoU4DnUYXCwsJOnz7t7e2dl59/3sDA9Pz54/v2HdDV1dXU1EV1
V1Y+uGvXPm3ts4cPb9+4cbOKyplDh0wvXjy2d29Bfj6u9MGLUFVVBbaHMqI+
vPBgIYGKAb2gxpLjTqEOM5lMaBZuNySyvb29qKjoZeV76kDsWIEgzCPSzJPN
qaut+Pb2l//F45Y/DP3vD2//6ZO29/9w///876H/74Nbf/pL53v/r++//+vp
7yjmka9ZU99V92rMU1iYt2WLs6Ji4urVtOXLbZYuvSwmdnXhwhOrVtkvW2Ym
Le2/ZMnFRYtOrlvno6SUvHatY05OMWEeYUDsWAKBIGoiDF5KTdra2sC0Yw4G
Jzc0NCAKV5Gfn7958+a1a9cePHDQIswipDnkuNtxoyijM75n4vviHW842qbZ
2rHtICvBTcF+NX4WKRa+Vb4+1T70EDoIJ0c4gFHnzJmzcuVK8KqHhwdO7efn
l5aWhrwhtrKyEnwIdaAOvnPnDrUgI/xgy9FRKEx01SF/n332mb6+PvU8p66u
zt7ennprKSSkpaVnz56ttWVLUETG35uW/Nfj/wWx+GPNN/+v/uv3iha+X7zg
T+VzP45V+CRR5v82fknFwi3K2pDAZuZwX5w+GB75odPpPj4+X3755T//+c9z
588f3b/f5Nw52LEaSkoaCgo7N21SkZWFEauwbp2+js6hXbv0tm27evKkyfnz
B3bujI2JwbXXvQhQKxcXF5wRxfLCg4VEQUHBd999N3fuXAgu7ldycjKuArVO
NCc+InasQBDmEWXm2bJlS0I8Y37HN79/MtKDntP68ayf//qPujlfNcz+oulT
cc53S3K//az9L1Qs3PriValZya/GPOfPn1VRMVNUjF+zhrZw4bHvvz+ydKnR
3Ln6y5ebf/fdbgkJq5UrYdCaystHwtaVlLSIjEysribM82IQO5ZAIIiaCAO0
6+fPfjMayD/YYMy7GHR7QXShoaE0Gg3bpqYmZLK5sdktxS2yM/KU9yn3Qnfj
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
f/+lZhfk2bGO27bRtbUDNm+mrVt3XkLioKLidUVFEympk2vWGKiq2sDE3bbN
f/Nmvz17rmdnc4t5AFOhRYMQsC0oKBDBhXXecbS2toJ73/gUNGD+lpYW/hMP
2CHu7u7e3t5QGTabHR8fT6PRIC7YolJBQRITEwN5QCsLCwuLi4sLDw+H38HB
gcFgeHp6IgSxqampL/xckNixAiEizMOzY/0UFWOUleNlZYOXLTP+4YeTq1bZ
r17tKC5+ZenSS2vXwo6NhZOVjdXRsbxxgzDP2wHCPMSOJRAIoiZCAl1FtEfh
p1WMi0vR1DTT1LTftMlJVdVs3brjMjInZWROy8ickZE5KyV1VFnZaNMmx02b
HNTV7Y4etejq6gYz4ErLy8vR/KEj4ISAgAD0VXFSUR5z8a4Bt2aK6tgwr5rd
vXsXTQAepA8b5smTJwJPVFJSYmhoSKfTqToJNYmIiEAVhR0C7eByudiF/ePv
7w/7pLCwMD09PSoqCjoSHR0NyWAymZAeZ2dn6Ah2g4KCsEVq1dXV5HksH28j
88TGpioqOsjKesvL+0pLOy9bdn7lyisSEoYSEldXrjQSFz+zdq2tvLwPnLS0
t76+ze3bhHneDhDmIXYsgUAQNRE+e8nJyb29vUIeX1lZ4+kZ7ebGoNFiXF2j
nJ1D4HdxCXd2DnNxiXRyCqGieLGMyMikwcFf5zNBzsEPbW1teXl5aO85OTng
DeoVDM7Of/cnyvN1vyxwyeDAezy88nUNDAzgviOFwcHByVrjHhSNBEHpoxOc
0tlvWltboQVVVVW46fX19fAjD5WVleOfVKCef/PNN1u3bkVOhnkLQuEvtbW1
aD74Cxr1yPvnzk6EtLe3o+ZgF55WHrq6ulDBioqK4uPjYb00NjaiduHI/Px8
Yd5aEjtWIESHeVxd45ycEuAcHOJsbSOcnOLt7aPt7aMcHGLs7EA+8U5OiXD2
9olhYcmEeQjzDL9LzEMw80DUREggwbS0NOFXeOR1bwf6+/vgBgb64fge/u6z
2L4xfEUBgdCvlpaWuro6dGyLi4tLS0tBLCAZUIGXlxeEBtyLTnRvT29Pd48w
bqJ3hbgo5KSvrxcM+kLX3987USEgfaQhZGaQc/6bKfTWMzMzU1JScI1IBIog
ZGbgHjwYQmlnZ2dT/X14wJZPeUAp946g54UO6YweoA1yZrFYCQkJqE6Qj9FD
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
K8epqCSsXGm9ePHJNWuc1q/3lZEJWLfOU1ExWlk5lucSZWVtudyCqWMeGF9X
r9orK/+koXFhy5ZrCgpHFRWPKisbKCkdV1c/o6l5afNmmLImW7cab9hwbv36
gw4OHk1NTYKYh6ura7dhQ5iGRoSGRvjGjRFr1hitWnUJFqWsLC7NSl09cOPG
cERpakbJyVkymVmvyTzOmpoR6upRcBs2eCsq2q9fj67ypZUrzdessUYhystT
sQx1dQs1tbLi4p95KbybzEMw80DURHigKzqd09HgdFJSUuAW6ozYggRQCOgp
oyf75ZdfysjIeHl6WflbHbY7fD7gvGmCqXWa9WmP09djrtuwbEwTTY/YH7kY
fNGAZnAl7ApoXN9a39bJNjc3l7+wuK6u7hdffKGnpxcVFSkr67tiBXvFihsr
V+bMn+/81VfHYDf+61+XvvkG7qKYWBKiVqzIWrEiZ/lyNwYjuaiokEokLy/v
xx9//Pe//33t2jV6CD28LZz5hAmxSBtOi74djTwYMYycOE4WyRYn3E8E1QWx
HrOoWOtQa24ul5+ZwMDAr776SkJCIjDQ96efvL/7zghn/9e/rn777eV//vPs
v/515dtvDb/55tyPP4bAfF20yGv+fLuFCz2//PL8hQsOXO6vF1VYWHjkyBFc
lJaWVnR09IED1/btc4Qpu3+/04EDLtLSu9au3aGsfFRBQX/Vqi06OiYIp6K2
bDkfGhqB+ztm7XUkWFxcPDokNjYWWc3OzqbCNTQ0cC8OHToUHh6urEyTlY2T
k0tQUEhevtxq3ryjUlJ+8+YdXrrUaOlS45UrXahYObkkWVnL5GRWcXERP1m0
RGQb6VhYWGRlZXE4HHd395ycHJB8S0sLqjS1gjx20WCXL1/+3XffGRoaQgv4
VR02RlpaGqQBdwSH4VqQeWyp1PLz8xE10bvp+zwI2WqIHSsQhHlejXk2bnSi
5rOFHbtihdn8+XuXLzdevPj4Dz8YLFz4k5xcEKxcxCorJ8jIWDIYiVPHPP7+
9MuX7WRk9q5du0taeg+2q1frSkvvXr9+DzxbtxppaJzfuPG8khIM3fOrVm2/
ds2Cy80ZzzwxMZHbt9tqaIRSDnasmNhRMbHDMGVXrDizaJGeoiJNQyOMFwXi
NQ8OjkJLfR3mcdy4MUxNLYJnx5qsWXNg8WKavPy+RYsuSUhc5i198Wusurqx
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
zPrffktbuRInCFiz5tj8+ScXLDg6b57xkiW7//UvpxUrdv773xkzceTyK2Ca
R1vgLAUFBV1dXaLwXo/CTLJjhwnzjICyY6u+/vrmJ5/YzZrl/emnrh9/bPr5
55mzZnl++WXhZ5/5wpT97DO/r7+u++yzGyYmQa/DPDduZKxZc/Wzz1I/+4z7
17+6ffAB/CzKjv3oI4uPPrL58EPTTz4JeP/9859+mvTRR2dYrIwpsmPfLhDm
IXYsgUAQNZkI6ISiZKg1B0dPcA0dSU1NnZrBm0+OHnWRlg5dv54xf/4pSUnP
H34wXLTowo8/gv8tli41XbTo8r//rS8ubrl+ffTy5TQfn9ju7p7Bl0RdXV1J
SUlra+vt7l8sNDXNF/9gvXjJme/mXfl+wdX5C099O+/8vAUnvv3u+oJFl+Z9
f/ibb42+X3hl3vc7/vlNZno6sWOHp11NcKfy8vJEaqV7YscKxNvMPI90dIL/
9rfyOXPqPvjA/pNPbnz0ke+HH9L+8hf6xx9H/PWvIR9+6Pnee0Z//WvU3/5W
9+GHbHd3XOmrM093d+e6tV4ffRD24fuM9/7k9N6ffT54z/e9P9q992e39/5o
+8F7Ae+/5/7n/zF9/z2/9//s/d6fTrNYNwjzDBPmIXYswQQgavIcIJG+vj7Q
L4fD4S9tQ6052Nvb+8K/v8IJbW0DDhxw37fPffdu63373PT07OB277bZu9dJ
T89GV9ds+3bDPXuc9PW9du2yTU3NfoWP5fjDbPv6B4yO7r26Y4Phrg2Xd6gZ
7t5weafq+R1wKhd3qF7brXFlp9o5XdVreuqXd6gfUF+fk03UZATTqSYwaTIy
MkRtmXtixwrE28w8T8zNwzdvjtLQiFZX99m4MXzDBv8NG+jq6t4aGkHwqKm5
qqraamiE4ABVVf+kpNzXYZ67A33aelaSqo5wq1VtJNWcV6vaSqpaS6pajWyx
q+awStWCF+4gLn0mMyuHMM8wYR5ixxJMgKlWk4kmJxnfOsDVrq6uIqUmFKjH
I4WFI9+DUR+nJSYmTtH4zY6O242N7Q0NcD/ztnwPtj/X17fCUSHw9PUJmP1G
ePR29zpFO0RWBUU1BDMawqMaQsa4mIZwRkMYPPENkQ6p1gUlBURNAC6XO22z
kaPuwYwRkUEWfLwVdixhnpdCe3tXbe2t2trOUdv/uJqajpqadioc/t7e12Se
Hrsol4DS6KCa6OCauOAaRlANI7gmhreNhQvhOcSG1SRYJDkVlEz+OK+3EYR5
iB1LIBBTqiZ3794tKChISEjo6urif+sFT1tbG0Lu3btHtUcoDtoLh8PJzc1t
bGzs6OiAoPAHXg2/aTUZfvZ4pLKyEkzS2dnJZrOxnZ4JyacOPXd6fG/4OmU7
myaahTSHepV5W6ZYGTNMPMo80x6mZw5neRR5hLaF27Lt/KroXqVepdWlokZr
bwS49U1NTVM0JHk0ent76+vrp2Zcz2tB9O1YwjyiDB7z+DhznCwSTUObQ3zK
PK1SLEwY173KPNIfsrKG2Z5FHuFtoQ5sW3qVn3eZJ2EeCoR5iB1LIBBTqial
paVg4Orq6qysrMzMzO7u7oqKivj4eC8vr5SUFAaDgd4lwlksVmpqakRERGRk
ZGxsbFBQUFpaGjXnM/WR+RtXEwogEOgg9BE5xIW87dQ6oibZvrbptic9T573
P+/IdQxrCrNItfAs82Q9ZKU/SLdj2zlkO1gzra1Z1rQCWnBUcHt7+xgNnWh8
LgJxMGyDBuEAw2O6rvt1gdyWlJRM9eo2KECYLuMLXBQg+nYsYR5RBmGeVwNh
HmLHEgjElKpJbW0tRKGwsBAyERoaeuPGjbCwMHd3d39/f3isra0dHBxoNBq1
aLWFhcX169etrKxwQHh4OA5wdXWFAA2LwFMRPh4/ftzX1xcXF4ccitRAzlcA
1MQ/x9+SaXk14upZ+llbtq1fpR92bTJsPIs9A+sCLVMs7bPsTRNNbdKtvSu8
E1ITODzgRlAU19TUBMWnAseU+aNHQxcv+mprB2lrB2/fHsZzoaM9CKccdjU1
XbOzi6bi1eHDhw8ePLgvhBt88EDYuWXy8vISEhKm+u1eS0tLbm6uSA2y4EP0
7VjCPKIMinmsmJaGz5iH/h/m8QgaYR6LV2aehw+HTExcjh1zPHbM4fhxZ55z
Gu356ScHRPFinfbvv87lTsnnUo8ePXhGLC9wDx8K+9iTMA+xYwkEYkrV5P79
+3V1da2traCdqqoq0G91dTU89fX1paWlmZmZEJri4mLsZmdnp6enm5iY0Ol0
ROGYmpoaRFEz14mOmlDARUFQkOepWHxw2tDX3WcdZnMt4vpZ3/MmcaYmcWam
cWYmDJOz/hdM4kzccmiGkUaWyVZXwq5aptoYR5nkFOSAQnEvcnJycGv6+/tx
+X5+fihwmARjHhM9eHBvxw6apGTcqlWJYmK+YmLey5aFiIn5UB5xcd9Vq5JW
r05ZvTpJUjJlyRKPpCTOpE/wPjDQ7+Dgff26+zPn8cy5X7vGD6H8HoaGdo2N
TcI8gpjq0RawWHp7e/Pz80VtkAUfom/HEuYRZVDMYxRufMb3vDE4J9bMONbc
ONrkrN9F4zhTVw7NMOKaeZLV5RBDq1Tb61HGL8U8Q0ODx46Z6+g46ug4bdx4
bcMGw82bzTU0jDZsMOJ5runquuzY4crbuqmpXUlNzZwK5rGy8r94kX7hgj/c
xYsBlKN2qZBnHv/z510bGm4S5hEGxI4lEIipHm0BOUDreMTrnQ7zVlF5xAPC
0eMb4gG7g4OD2HVzcwNFU7NJU8dQram9vd3e3v7OnS5hzjgNaoL009LSOjs7
S0pKwC0ismbfy6K/v+/QiSu6+0109l3fcdBk50FTXX0TnQPG2/ca6h4w3X3E
bIe+6a7D5rr7jbHdoH2cw8179HAE4DrqjS2Xy4UHRkJUVBQ8Y+zYXbu81qxJ
Xb2auWCB6fz5RgsWmMBenTcPHrOlS72WLQtdvjwMsVJSbDEx+lTYsb/80qWv
b7x7t8OOHba7djno6lrr6lpt326uq2uze7fjzp22OjoWO3fa44Ddu503bbpQ
VlYlzMK7BQUFiYmJkztsvLm5GfUW9RyFAEOFwWBER0dPw4dwrwbRt2OHX5J5
aDRXDueGIOZpI8wz6RgY6NXdYy2j6rNO2VtG3UdWnS6j6i2j5rtW2VNGzU9e
019G1U92A7Y+MuoBkjKmWTcKhGce2LHHj1vt2uW+cydNRuYnaelD69cfgb0q
LX1QVvYnmLVbtlhu2YIDaHp6Xhs2XGMys6aAeW7r6DioqASpqPirqAQqKvop
KvooKHgpK9NVVIIRAr+KSgAOUFUNl5OzKCmpIcwjDIgdSyAQojD7TUdHZ35+
IZebc+HCZS8vn6ys7JycvNEuJibu5MnTiYnJXG5ufX398x9ETIOaQD5YLBa1
EAx4gMPh1NbWvnWPR2DHHjxgDibfvNlSW9tRVfWK9jYHLS07HR1XdXVDLS0b
VdXLiornNDXNtbSsIQSc7Dz+CzgIPQoZCpKZmYktqhCob3SZ8+xYzzVrUlav
Tvv/2TsPqDiuPN2fs2/2vLdvZuyZs7vv7OycXc842+Mg2bI0sq0EkkDBykIG
ycoC5YgklACRESJD0+ScU0MTGugm55xzzogokAAhZN5H17gXQ4PISf/fuae4
fet2dVVR9X3/W1X31ooVep999vCTT+6sW8f97DPVzz9/uHat1+efqyO/YQNP
QiJmzRrnuYhj29qenD+vc+aMjYyMxp49d+Bi27bB184fOKBy5ozV/v1qyO/d
e/fMGUt5eduDB5V9fPwzMtKzX4erq6uxsXFsbGxWVtZrK08SW1vbb775RlJS
UkdHx9fXFweVm5sb9vDs7pDZYknEsZMBypOampOQkHH3rpq1tUtsbFpiYtbI
xOHwrl+/GxwsSEzMLC19zds5SXkmyfPnnYcOOXz1ldvq1QFr1kSsXOm0Zk34
mjXBf/975MqVrqu/CVqxwv7zz62+/tr3m2+CVq60j4vLmrzyMHHsyZNWiFSl
pa9v3nx+48bTR46YICMpeV5WVm/z5ouSkmePH2cL41iNuYhjoTxHjpjv3h0o
IWGxYcPjtWuheA9Xr76zcaPZrl0cCQmz1auV1q9/vGuX/+7dQZKShl5eAaQ8
k4HiWEIsi8FNAgNDr17VvXr18ZkzD8+d07x+3UBR0VBR0ejGDUwNIUpXruie
OKGMCpcu6RgaWnV3T/Sg+zy4CXxENCA5BBY/l5OTk5aWNtdP4M8uiGOvXjWS
llaUlLy0a9eD9etPIGSVlLx49Chry5bLiGO3b78tIXEega609M3hODYpfdSD
ZNgP2Pa8vLyEhISysrKRry8cfq7gmO3334V//234Jx9rfvShyt8+1vniM9OP
P1T92yd6n39m9MnHGh++f2fNas6676O+Wuk0Z3Gsrry89Y8/aktIyK9ff3T7
9mtr18ps335906YzO3Zc//77wxISZ06cMFNQsDt4UCUgILigoKDkdURERPj5
+WVmZsJGX1t5kjg4OKxbt+7SpUscDsfGxgbHsLOz88gx8BcVyyaO9fYWSEtz
JCURRPl//z13yxb+1q1RW7dGCjMCTDduDP36a28JifANG0KVlT2fPp3ooUFS
nkny7FmnrKzr3/5m9NFH2l9+afP++3dWrfL7+GOttWv5n3zyCLHr55+bf/yx
BgLdv/3N5KuvHOLisievPMPPFVzTP/YT+6fDbImNFzesV9iy6co2KaWN689u
lbwqJXVTYuOFdd+ekj1kePyYzd496nz+nMSxwisDgZs3W61apbhixQXEsZ99
dvq779TwEdMvvzy3atWNnTs99+wJ2rLFyN8/lJRnMlAcS4hlMbiJm5vvqVNa
8vL6srJKZ848Onz4/oED12VkbiHz449KR4+qHTumfuKEhpzc3WPHtFRVDbq6
fnWWQeJw3onsYx7cBAvHr4w82Z89e1ZdXZ2UlFRXVzeZO0SLAWEca7hjx531
60+uX39q06aziGZXrz60e7fK5s0Xjxwx2btXHRHsTz+Zbt16dd8+MXEsA7a9
qakpKysLm9/c3AxtzMjI6O/vu6iou/+0EdKe4+q7j6vtOam157jGPzInNHaf
wEe1faf1D54xkTp4L0IQO0dxLGLUAwfUpKUvS0iclZK6vG3bFVlZ3XXrjm7Z
cgGh++bNCseOmSoo2MvIqKamZjB3liemoaGhoqIC/32Y6WsrTxLmTnFtbS0W
W1NTU1hYuDj7CzMsmzjW1jb4s8+iPvoo4733fD7+OOn997l/+Yvbu+96vv9+
0Lvv+n74YcSHH0Z+9JHgvfc4f/lL/Nmzrh0dv+rbTsozPRDHysm5ff4564MP
7n344b2PPlL74gvrd9+99OWX9p98orNmTejKlc6IYNes4X36qb7YOPaX5YhX
nhsPHp5RVD19U/WnKzd/uqx47Orto1dv/ZK5ffTK7SNXFE8qPpC/rXbg1CVB
VPQcKE/LkSOs3buDJCTM16xR/vrr25iuWaOyZYvNF19cWLXq7ooVV1atur19
u+fu3aFbt5okJ2eR8kwGimMJsSwGN/Hw8FNQ0Lt0yXTnzrMKCvr791/bsuXY
Dz+cP3jw5q5d52Vl7+7dexlx7I4dCj/9pK6ubjQyjoV0x8fHu7q6BgQE8Pn8
lpYW6Pw8PDaGX3n69OnIEiit6G2SS2Isl+7uLoR5EhLXJCQuS0peXbfu7Lp1
ChISV9avP/fttyclJa9s3qwoIXH14EGD9esvSEvfjh//rTrY2z09PRBAbL68
vLy0tHRmeiYrwNKz0N+rguNVEYCpd0WgZ4X/LxlMA4SJ41sRZBJjkZA+nXeT
TUxnZ9vFiw+PH9fEIXTw4K1Dh5QOHlRERkbm7oEDivv2Xd2z5yIywoaStqys
Ym5uwWQiAch+VFRUZ2fnLB5j2LE4orDY4uJimDJ2Y0FBQWVlJY7nRegpyyaO
tbML/eKL+M8+y3vnHbNPPkl9913H//ov7XfesXjvPfe//IX9/vt+f/2rHeLY
d94xf+edqIsXPUbGsaQ80+bZs44DB+w/+MDo/ff1PvjA4K9/VUcSZjT/8pf7
77+v/+GHxh98YPjll4Hvvqvz6acW0dHjDikwjvJYeJf4+lRxfKr8vKv9fKr8
var9vav8fKr9var8fZGqOT7VHP+qQLNYszlSnlOn9PbuNduxQ1daWn37dm1p
aVUpKQ1paXx8uGXLfUlJJSmph7t2mezZY/HDD6o5OYWkPJOB4lhCLIvBTYRx
7KOLFxHHyp8+/WjnTgVJSbnduy/KyNxANHvkiPIPP1w4e/Yx5srKKqupGT99
+j9xLM613NxcHo/n7e3t6OhYVFQ0d6+8GQksrK6ubtSZLnqbZHJyMlq4i/zy
SH9/r6Gh7Z07RnfuGGKqpKR/+/bjO3eMkbl1Sw95JSWUG96/b6akZHD7tl5h
4XBnhAk0H3PLy8u3bdv2ySef/CT3k56XXlSvIHJAYBhloB/+mJ1iYZ5oZhCh
jwwSvz8iZigaKX4o1qXUOSlr9p8rePnyZUFBcWZmfkZGbkZGHjLZ2UWxscnO
zh5paTnZ2YXp6SjPRTlTZ+LnVUTMxVt1sCgsE0cUPAWHMaIjHNUcIYuwz8Wy
i2Pz//u/TT75JBER7J///PCvf7V67z03xLEffsjFFPHtO++YvPNO2MWLniPj
WFKeaQPl0dZ2P3fO7tw5+/PnHc6etT571urcOSbDFuYxy/bCBdezZ23On2cX
FJRNVXkieyMFw8pjqB+u/4vyGIxSnrihOJdSlzlSnry80rS0orS0/LS0grS0
wqys4ujoVHt775QUSE1xamoeU4466el5pDyThOJYQiyLwU1cXb2PHVM7eVJ3
69ZTO3YobNp0ZOPGw7t2Xdq2TX77doUff7y3bdtpGRklaWlM7ysr63V1/epy
RF9fX1dXl7+/f0hICHxkfq6KoN06Xg+L/v5+NGbT09PRsO3vn+yopPMPdlFT
U0ttbeNrU11dY01NPfYzzDo0NDQxMTE1NVXsZYGEhAQrKyvooZaGlq67ruC5
IOrnKP0IfXWO+gPPBwF1AWq+apoBmv5N/ii0zrLmD/Bjh2KdS+Ykjh0SBhvw
OEyEfwfxHwkP55mbm0VHR5WUFL940c+UM3Umucy5GP0GK+Du7p6dnR0cHOzk
5IR8TEwMMjY2NjjMFltYsmziWGtr7ocf8t97L+U//9Pwz39m/b//p/3v/671
5z/b/8d/mP/pT+x33gn8j/8w++tf/f70J9M//SlMXt65o+NX8QYpz/QQvqrg
SXV18y+pRZhGZUSzmnp7l6LyDI5MYpVHlCa5TFIeimMJsSwGN4mLS9RSN1FV
MZQ5cFL+9PU7tzTv39VWuf/4/h1d5XuPVZQNrl9V3r/vpOJ1VeV7+q4uXmKH
aM7Pz2ce7JmHp9QA87D9eD2FmcsjqIAW9OK8QTMNsFGwSDTYPTw8MM3KEvPm
AgcHh2+//Xb16tVqKmpmXLPovujooVhtro6Kj6qqz0PnfGcV74caAVpu5W6a
QdrsdMuYgZiEoUTXCrfk7OSZuEn/OC/3GQUcEIbI8efUVNeMfLJxSsyRm6Sl
peXk5OAYhqfU19dXV1fn5eXl5uYuwsfVlk0cGx2dcuWSp4K8+6b1Snt3a585
aaVwxuasvPPZM/Zn5R3OKbgdkTVd/73S0SOsM6fcbKyDnj0Tc4WKlGeumZ7y
xAzF6HB1VH1UHwqVR9VLFXGsW5mbFlfLMm1YeRKHlceVlOdNUx5i+bEo3CQ+
muXHtghg37dQfuSiZxFoaRlkZRlsxeZasYOGp8ZexnfN7hn7mJpzWG4ct+e9
YuLYfuFwkUPz0ttiSDhAOlRl4osevb29jY2NqampaIzPxStj5h8oMLYILXc3
N7eamhpG5ZirQFDCuLg4CwuLr7/++sGDB0UFRUbu+o4ptg4ZNupu91Wc72n7
qWv5PFRxvqvjr/6Io6XEvm7C13fMtHXNsn8UqBWfMv1ewz09PVil6OjoiIiI
7F9GsB8S3t0rKy/LL8zPL/hHwj8iPiHe0dkxIzNjZPnwrMKCST5biH9oSEjI
rA8VzgxkimMY648diwMGGeyTRTiq0vKJY6E8PlYsf8t7Zqpajo9ZHGsLrq1F
oC0rwNYiwAbJwNNMyeS+kZe5mT/b1d+DlGehmJLyGHgY2qc52GXbq3iq3nd9
oMnRVPfTuO+qrMnR0grUVrS6aRhpZJ9t75jrrBOkG59KyvNmKQ+x/FgMbhIc
Fexb48vrDOU94XGaOdw2bsCTAL8Gv9COkJDO4KAObmhHaNATLq+TF9TJdQh1
6Hm+wONuAew0yFdf32teKci8IQUilpycPPaeI+ZCQObirtbcwVwbKS4uxuaU
lJRgu7AfEhISCgsLYTRowiPf3Nz8bGDA7qisYM1n0Ws+i/r6k+H0zd8iV348
nFn1t6ivPgn77P3o1X+LXvN5zN8/d/ny/WRe6EzcxNvbWyAQWFtb+/j44NeZ
/dzR1mEbYuuV4+Vd6I3kU+TjVeTlkevhmOk4XFLszZQj+Rb6mgWblVZM6j4a
/vV1dXWL+b7tXLNs4lih8vgMK09raEALlCcw4AnHr8F3hPKECJUnFMrjSMqz
oExSefr7exXvqp+5rCl/RevUZc3Tw0nr1CUNJnP6ksZRedUzV7TOXNVSuKYt
c/yGIDKGlGepQHEsIZbF4CZBkUGBTwJjfo4J6QixTLfUDdN96PPQQGCAvFG0
kVmCGZJ3rXfUYFTEYIRjmONicBPmxTqvdRMGNHjr6+shvCPfJgkfgSj5+vrG
xsYuwifqxQLBx9ECN4mJiYmPj8/MzCwvL29paens7BSNRs4IcvfgYOCOnY1v
v42U/PvfJ7z1Vu7bbye99VbiW2/lvP12yltvpf/+rYK33m56++32t99O/L//
N4PLZe7QTQP8ItYBK2ZhYREXF+fh4aGqqsrn88vLyq2jrcM6wyJ6IwJaA/Qj
9dEUCusNexz22DjWmNvORT68NxwpsjeSncTOL8mfzCUIeGhqauq0bw4uA5ZN
HEvKs/yUZziOVXx06pTpqZMmMjIqBw8qy8lpycgo/5JRPXRI7chhbVRQOMM6
cOCBQBBHyrNUoDiWEMsicZOAlgC4iW2OrUOhg2+Nr06wjme1J05/FS+Vx/zH
JrEmLqUukS8jw1+GLxI3gfRFRERMfpQbKF5HR0dOTo6on0JjY2NRURGbzeZw
OIt8tBzmheZwQ5hIUlIS5BQrj53c09Mz3l1LxLHBO3e2/fGP7X/4g/fvf+/6
u9+5/+53SW+/jYzP734X89ZbTr/9rffvftfyhz/0/PGPGW+95aKrKxAIYmcA
/h3q6upcLldBQeG//uu/JCQk7G3t4SZR/VHRQ9G8Z7xHvEfmceY2mTa37G7d
tLnpUeUR+SoSs6KHx0yIt820LSgpmIyb4D8YHBy8aF9BPg8spziWlGdO13aG
TEN5EMfevPlYQcFCXp69ffslKalz0tIXDh1SlZY+t2PH5f37727denb79sun
T5ufO2fz44/qpqZWpDxLBYpjCbEsBjfhRnK5Hdz4n+P9m/xZySyHfAeNAA3j
OGPjGGNkHkc8hqHY5dvFDsQKfhYsEjcBPB5vqq/RQX1m0PLy8nI4CDTZ3t4e
+cXWLXRIeAGkubk5Ly+P0erMzEwYCg4V5gLIa7/OxLGtf/xj5x/+gMDV8be/
tfztbyvefttBmE9/+2233/4WoWzjH/7Q/cc/pv/+91Gurg0NDa0zoKWlpaqq
Cmvo5OSkrKwMwc/LybONsxX0C+AXwd3BWlyty2aXtYO0r7Ov33O9x05lRw4M
u0nUUFTsUKxthu0kr4rMRW+LpcWyiWNJeZaf8jBxrLw8S0FhOI7dskVh06bj
x4/rb9kiLyUlj8AVAa2UlMKpU6bnzln/+KOav38wKc9SgeJYQiyLwU3CosPs
4u1c0l3MI811/XRZESyDQANdH12WgGUcYmzCM3kc8FjLT8s+2d4x3dGR4/js
+UTXEOZnFMchcQOST4aBgQEIcnZ2dk5ODlyvpqZm8XTEwE7DKpWWljIXQCCb
zOtdoNXwwSk9RYY4lrNlS+O//Ev9//7fLr/5jd1vfuP1m99w//mf7f7pn/x+
8xv3//W/tP/pnzj//M91/+f/tP3LvyT85jepHM5sPa2HTYAPYmktzS2WkZYh
T0PCX4QHdASYJJpYZFiwUliaIZp6Aj23Wrew3jDeCx4S/wXfPMk8rySP3GQy
LJs4lpRnLlZvGsyi8iCOvXJF++hRw59+MpKUPLNhw8ktWy5IS1/ZuPHk1q2X
JCTOfvPNPimpS6hw8qTZ3r13IyKm/3zsKEh55hqKYwmxLAY3SctIs/W2tfKw
uqJ85aHRQws3C+TZ7mxrT2tkkPSt9c8rnTd2MLb0sAwKD+rr62tsbITijX3i
HU1jNOHFDsw1Q169GhgcfDEyxcfHVFdXvHjRO7IQ1X7++fVjlUCcy8rKUlNT
6+vrF3xsE+xG7E/m2bO4uLiMjIzq6uqmpiaYMna1aPWYR8JE+YlXGzsiUFMz
/Kefwg4f9jl82FtOzl9OzldODhmOnJy7nBxLTs5PTi788OEI4dzijIxZ7x4L
r3fmOrtFurnGuLpEuziEOThHOjtGODqGOyLvGuWKcia5x7hb+llW1VRN5n+R
lJQUGBgIhyU3mQmkPJPk558HXr16MTLFx0dXV5cPDPSOKodKvXZpy155Xr4c
YLEcHz5kqaqa3bnz+O7dx/fuGdy5o4fM/fuGSko6V6+q3L9voKKCCiyU5+RM
KoacEqQ8cwTFsYRYFoOb8KJ5LlkuPhU+rkWuXhVenFpOQF0Apv7V/v51/pwa
jk+1j1O+k3eFt1e5l5WP1SO9R5ISklu3bkX7tGwEzGv7amtrZ12fc3MLdHUd
NTScNDWdtLRctbRckK5eNbh9m6Wp6cx8RAYV1NUdbWy8enpeb2ddXV2hoaFW
Vlbh4eEQKKj3a1d7cHAwNjaOyw0ODAyaOKEOhxNQXz/RAICdnZ2lpaVwNJgI
rLm4uFj07Flubi7WCtY8MDDAvEkHytnW1oav4CNk/9mzZ1jnCXrOQmfbGhtb
KyufVFa2VVa2/jqhsLmigsm0CvO9c/Cc3qvBV09anzS1NjW3Nje3Nbe0t2CK
lF+Y3/ikcTjf+j+pqaWp/8WkOgJXVlbiSJvqjd3lxLKJY5eE8mhquqqouKuq
ejx86PnwoRfShQumN27YoJD5iFlI+Ghp6TNHyvPq1aBAkOTlFeXpKZg4eXlF
eniE1dc3LpTyDA23KZ7U1TXW1TUIp79KtbUNNTV1orm1tfVzctGDlGduoDiW
EMtCuQkESiAQMA9oBUUF+Tf7CwYE3vXepgmmSHp8PatMq4D2AJdyF686L3Ya
O+RpCH+QzxvgWXOt7RztNm/evHbtWjThC0dQUVGBbZnFxjXz1mkskM+PPXjQ
TEbGQUbGaedOwx9+QDL+4QejnTsNdu822b3bDIX79lnJyDju3etw6ZJBR8dE
d/2am5t7e3uh88hgE3g8HqwQ+jxeKxu+AxlnXk2lpqZz+7aGkhKTNDG9c0fz
zh2tu3eZpI2psFDr/Pkb8fGJo24dMheUMjIy4CCJiYnZ2dk1NTXYafiJkQN6
w2UihYSFhQUEBHh6emI9MbW3t8cXfX19IyIigoODl0pn51FER0fPpHtLfX09
9s8S3fZZYUnHsUtLecLD43bssJeW9t22zX/TJqtNmywlJGw3bbJBRlLSDmnj
RraUlJu0tP+WLb5nzpi1t3dPsNhpK8/PP7+4eNFh69agrVtDt24NkZIKlZJi
pkg8YQrHFHMxXb/eLioqjZRnLKQ8M4TiWEIs8+AmUGO4RsGvQWN83bp1q1ev
1tHRcfB0CGwNDO0JhY+4FLoYRBoMvzow2xom8ij8kVGUkYa/BmwlajAKhmLo
ZhjBj4DEWVpaoi2fNQK0VQtmj9zc3O3bt69aterBg/s2Nk7791vKyHgeOuTz
3Xe3v/vu5tq11yQlNTduVPn+eyXkN25URQSLCnv3epw5o19VVdc5Pnfv3j16
9KidnR1+AsocHh7u7+/f1NQ0Xn0fHx/8m9TU1DIzM5WUVBQV1W/e1Lx9W+vc
udvXrqnKy984fvzykSNnDx9W2L//pyNH5BUV1TD35MkrMTFxL14Mu8nTp09F
Iy7CRJhnz9rb2yGqYs0XKxYYGBgSEsJisfT09OApfn5+2OeOjo5YVdiKrq6u
jY1Nd/dEpomfSEtLgw3NpC/wKJiOKjPsnILtmsk1DfwXYKbz8yTk4mSpxLHL
QHmsrJylpFwQOm7bFvH11w9XrFBeseLu3/9uuHq17tdfa6xYcW/NGj1JST/E
kxISvKNHTSsr50R5cnLS5OTs1qyJXrMmds2a+JUr/Vev5q9Y4fXZZ46ffmr5
6afsjz9+hOnq1VF//3viF1+4hoenkvKMhZRnhlAcS4hl3tykqKho5BWMlJSU
tWvXbtu2zdXF1cXfJag9KPRZqGGUoUe5h3mi+eOIx9aZ1qwUlnqAuk2mzXX2
da9ar+hXwx089Vz00DZHkxzegWUW/5rC2SMvL2/r1q2bN2+2trZ2cvLYv99K
Rsbjxx/9vvvu2rp1SuvX35WWNpSUVPv+e8WVK08gLyPjjjh2/35POTk1Ho+f
MD5btmz5z//8z7Nnz7q7u2NDoLqmpqYCgWC8+srKyv/+7/8uISHh6elx+7by
rVuaSko6d+/q7N175Nixi2fOXNux4yCmFy8q7dt35MyZG6hw964u4tvAwKDM
zAzoOXMBpLKykun2+9p3KdbW1mJntrW1QTmZF1w2NzdXV1dXVFTA9bDC+Pdh
1gR39/DfwRfxf29sbGz+NU0jGFsyilFzsQ7p6en49Zl0zZjSsEVjwXZxuVx6
Sm2GCyHlmYzyODh4Yk2lpEK2b0fceG/VKvVVqzS+/956zRqDFSvuf/LJuXXr
rKWkgqWleZs38w4e1AkNHVdGZqI8Xl5ucnLW334bt3Zt4nffJX30kcYXX9h+
+aXrBx/cX7nSddUq/48/1lq50n3t2rjvvkteudLD2zuClGcspDwzhOJYQizz
c3cPstP7a9CgZjqlQtz8ef4uJS7+Lf6W6ZYGAgPTRNMHng/0IvRs82w1AjTM
E8yNE4z9mv0C2gJ8Wnws/CzKKsrwXTSQsea9c8bz58/RqC8oKICohoTwDxyw
PnjQ+9Ahv++/v7VzJ3vTJg0JCfUNG1S+//7Ot9/e2rBBec8eu0OHfPbu9ZKX
N6isrO0YHy8vLz8/Pyy5rq7O398feegbZHO8+thSFxeX1NRUyOn9++q3b2vf
u6d77drDnTsP7Nolc/iw/LZt+06evHzzpibi2GvXVO7cQQU9xLH37j3Iyspi
lgz9nHz35BdCmH9cX1/f4OAglPOlkKHhh+VeMeXjfR3/F5ggPAi7Ecvp6enp
6urCbnz69KnwHuXPTGcNrNXIkrGjkWOd8SsjS7ACOHKg57CVaV8bqa+vn8l1
Feo1vFTi2KGZKo/ZgisPlyuQknKTkgqTluZ/9ZXqhg0ua9YYIohdtUpHeD1W
5ZtvdCQlfaWkwiUlw48eNa+omBPlaWlpOHrU8dtvE779NmX16giErx9+qPLZ
Z+bvvXf7yy9RHoM49ptveAhxv/sudeVKT0VFDVKesZDyzBCKYwmxLGBvC1FH
gPTMdOcgJ4dAe0VNRTWTh9Y+VmwPto2PtX2AvbW3ta2/rYmLyQ2NGyxPln2g
fQg/BAoDnUEbn2l3z90QiKIl8/nRBw5o79ljsHev0Y4d6nv26O/apYXMjh1q
O3dq7Nypiczu3Xp79xru3q1/6ZLuxM/HQg+Z6wmQI+z8xsZGiOoE0oTKzDNs
yNy8ee/cudsXLtw5duzC3r1Hdu+W3b1bbvfuI3v2HD59+uquXT+ePn3t/Hml
ixfvyMnJ29rai30r5VyTkZHBvD8IRiYQCJj3j8NDYYswF5ga/AX/RA6HExwc
3N7ejpoIKiDyMB3mHT0oQYW4uLj8/PzW1lZmDzCP6mH5WDh+YtoXRhAk9M7g
GTPmqgi5yQwXskiUxyXI0THI/qbWdXVTVRsfKytPtq2vpUOgnY0v297fxtTN
WFHzGtvL3CHILkQQNP/KExERs3On0datltLSVhISj6WkWJKSxpKS+shLSOhL
ShpISOht3WouJWW5eTP73DnD9vY5UZ6BgV5ZWdbKlQFffsn929/s3n9f9/33
Nd57T+v993Xee0/n889d331X44sv3L/8MuCrr0I++YRtbu6anJxCyjMKUp4Z
QnEsIZbF0Gs4lMe7fVsF6eTJi5eu3Lp95+Hdexp37qkp3XnITK/fuHvixLnr
1+9dv3GfxWIzjxhBTHBGo9Wfnp4+sRrPnNbWtpSUvKSk7KSknIlTYmJuTk7R
wMC4PT4gidBYGApWvqGhYUovGYS7BQfz3N293Ny8XVw8hMnNycnVxcUdU1dX
Tycndzc3Tze34QoogeHW1taiFY9/8XyOsRMVFcW8ahzb6OnpyWazYSiPHz9O
TEyEdaIEFoN/GdbYxsYG8QAsw1sIHAeFjo6OPB4P1QICAnx8fFxcXJgeH3w+
n7kUg30YGRk5bUcICwubyVNqOOSwJsyrkaa9kCXNUo9jRXC5/OMn2XKHraS3
ae/dZ3LkqM2xY/ZHj9v+9BMydj8dtTl0yHzLFvVDh1g/yrIf6zt3dw/fFJ5n
5UlOzk9IyIuPz0tIyBdOh/PMR2H6x0ek7OziOVKeV68GfX2jLSwiWKwIc3Oe
uXmImVmwmVmQMMM1Nw8T5sNYrHAWi29qyi0vryblGQspzwyhOJYQy0K5Cdq5
0BCmaent7X/1qvLNm5pXr6qeO3fn0qX7Z8/evnTx/vXrahcv3L1xQ/3a1YeY
3rypdeWKira2vmgMcHwXaoxoDTJVUVExd5dHhPeVBiaZoPkTLAq66i8EmgaF
DA0NRSN98k1sbC/TifgXun5Jnb+ednZ0DF9bGBgYwMIzMjJaW1vnzVAg9S0t
Ldgi5vYlvADyi42FtZWWlrq7u6MERx1cA97BjGZpa2trYWGhq6vr4ODAYrHM
zc2RNzY2NjIygg2ZmZnp6OjApJgrIfAU2M203SQ4OHgmboI9iTBg4pF/ljdL
Oo4dqTwuLsFbtnht3hyyaSNn/XqXDRs81q932rDBU1IyYMMGd0nJwE2bOJKS
Qaiwbh3n1k37zs5/HDZvoPI8fdoDbenoYNLTX6euX6b/SKQ8YiHlmSEUxxJi
mS036RQOCYgQCydaSUlJUVFRTU0N83bsIiEIPqEtollVVVXM01loC7NYlteu
qSKOPXr0gqzsmV27ZHfvPnz48Nljxy7Jyp6WlVU4dOj0rVs6Sko61649HBnH
MsBEIA4QzISEhMXflxOSCDnFNCkpic1mx8TEhISEYOXn9N06+EdAsZubm+fH
UERuAsnFfwSy3yUE/ylsJvMQIPOUGtPbIj09vb29HV/hcDiBgYFNTU3MU22Y
1SgER46Hhwecl3EQxk2mPfAjjsCZdNbIzs7GBi7+I23uWFRx7LSVx8fHS1/f
cfNm302beN98Y/bVV3qffXb3iy+Uv/7aYM0ai5UrH61aZfDVVzqbN4dt3sz/
/vtQRcX/iWMZSHleCynPSEh5ZgjFsYRYZu4mUAyoARr7kER4SnV1dU5ODs64
8vJyaEJ+fn62EOThIMysSiE2NjZoHQsEAjbbGnHslSsqCGJv3FA/efLa0aMX
5eUVjx+/jMj2+PErsrKnbt7UFr6K5aGW1ug4VrQa0BzRuIvMRYDysjJPZ2c3
O7vhZG8/nMbmhcnV1jYkKKhv7ofmg1pCzTIzM5n7VhAlCCP2yVy/I5IxFOyi
eTAUkZsMCS8oMYWiDIwDUUReXh7Wh8/nYz/Y2dmlpaXFxsYyl1AQFcBkcUTh
uGK6YGCd8U9HzMAsBIVwlmm7SUVFxUz2NvW2WCRx7AyVJzKSb2zsLCnpu2GD
/9dfP5aU5K5da7V6tdm33zqsWcNevdp0zRrLr7569EscGzI2jhWtxljlKSsr
d3LysrNzHy/Z2rqJUlBQSG/vuH2XZgtSHlKepQ7FsYRYZu4mkKmamppnz54x
715h7igBZIQdBP7BqFkQBJzUcB+0cN3dvS5fvn/jhubx45d+/FFeTu7s9u0y
hw4NX4mVlNyFj7t3H1ZU1L51S+fSJVUNDd3x3i3OXB6BYfn5+cnIyJSWlQnC
wtROndI7ffrR6dPaJ04gPTpz5vGZMzonTmidOKF7+vRjeXkmPcLcmze7Ojpm
sismA1YeOwpbzTwegN3CjAQ+1787JHwlJTOE46y/h3EUoqfUxM7FVsM+nJ2d
dXR0DA0NYa8sFsvR0dHa2hol3t7e6urqvr6+lpaWCAzE3rHFPkTzZ9p392by
3SFyk0UTx85ceeztAzZs8Fu/PmzVKvaKFYYrVhh/9JHSF1/oIf/++5dXrDD5
9FPVTZvCN24UrF0bcuWKrdg4dmiM8pSVlYaFCY4f1zx5Uv/kSYPjx3WPHYPA
GJw6ZXj8+KNjx3SPH9dHnknHjj2+cUO7o6NrJrtiMpDykPIsdSiOJcQyQzdh
TGF6YigSCh4v/NYtFUXFB4cPnz59+sK1a0qXL9+8elXp+vW7yFy7dufcuauH
D59CCfIWFpYTP2IEqTl+/Pjbb7+NZfl4eOieOmV27pzuiRPy27ad3Lr14s6d
Dw4dOiMtfWrLFhU5ObOzZ5lkhOBWUXEe4tiFBf+pvLy8oqKiOTWU3NzcCTyr
vb3dwsIiKSmJubOZkJAQFhYWFxeHFcvOzm5sbIS/oNDf33+8BktZWVl6evo0
7tDhkMOKsdls/NC09wC5yWKIY2dFeYKDI0+cMJeTs5CUvLdz50NZWeMff9ST
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
PetbiB1AEEsJimMJsSwGNxkYGKirrSsvLdfU0PTx8SktKa2qqqqprqkSgkxi
QqLyA+XkxOSK8oramtqXg78aIEusjzC86O/v7OrqGENBYSHb0rK8okJU0t7R
0d3dPdakCIIYxbKJY+dOefr7B1pbn7a2do1KeXmlLJZ1SUmVqOTJk66uruek
PATxWiiOJcSyGNwEAWR8SnxUUtR9jftWTlaCeEFMSszI5Bvke1vlNofHiU6K
jk+O733+j3tw8JFnz55lZWUxPtLf3z/JX0TgGsjlxsfHU+xKEFNl2cSx8688
nZ0dXG5gQgIpD0FMGYpjCbEsoJvACxglLyoqMo4wditz86739mrw8qzz9Kwf
Th61HqK8T6OPR43H8OsjfbRr62sHBgbgI9nZ2VP1EYZXr16Fh4c3NDQkJSV1
dnaSoRDE5FnqcSwpD0EsRSiOJcQyP24CuX41Big5jKC7u7ukpMQ11zV6IDr6
VbRDgQMrmWUcY2wUZeRV5+Vc5myaYGqdZe1U6hT5MjJhKMEq1qq8qhw+EhIS
kpubO1UfYYCR8Xi858+ft7e3k6EQxJRYQnEsKQ9BLBsojiXEMj9u0tjYWFpa
WvJrDh48+K//+q+ysrKenp7M6DeOBY6WGZbsJPZ9l/s22TaPeI9s8myUPZRd
il00OZq8nuHRb4zCjFzdXXOyc/r6pt8zAm4SFhYGI0O+ra2NDIUgJs8SimNJ
eQhi2UBxLCGW+XGT6urq7OzszF8jLy8vISHx+PHjIG6QU5ZTzIsYhwIHmIhP
jY92iLZTsZN+pL5LmYtZgpl9rv3jiMdhz8Nifo5hCVi19bXjvVVn8sTExMDj
mOW0t7enpqa2traSoRDEa1lCcSwpD0EsGyiOJcSygE+pNTU1PX/+HJny8nLr
eOuAxgD/Bn+9ED2TWBPtQO17zvcsUyydi5ydipweuD1QcVfxqfUJaQ0xDjWu
b6wfbxTHyRMdHd3Q0CByJcZQ2trayFAIYmKWUBwrFlIegliKUBxLiGUx9Bru
6OgIFgQHhAfcUb9j7mgeyA8MiQkJiQ0Jig7iRnODooLcAtxuPbzlxnELFAQG
hQc9nY23FcTGxo50E2Y1yFAI4rUs9ThWBCkPQSwhKI4lxLIY3ESEjbVNclLy
wMDAqPL6unpTI9PWltZZ/K28vLz8/PxRvyX22sjg4ODz589HDg5JEG8yyyaO
FUHKQxCLH4pjCbEsHjeBaFtZWSUkJIzV7erqaiMjo8bGxlm8XlFVVQXjGNvp
eNQTa1gZ/Lq7u3tycjIZCkEMLbs4lpSHIJYEFMcSYnlj3aSyslKsmwwJ+xGL
ro0UFxcnJSWx2eyAgIDeXnoHOkFQHDsjSHkIYnpQHEuI5Y11E2x1XFzceEPo
MIbS3t7+6tWruro6BweHiooKrOFs/TqxdMEh8YYfCRTHzgRSHmJ6kPJQHEuI
5Y11k4GBAWZA8vEqiAyltbW1rKzs5cuX49Uk3igaGhrKy8vf5EtkFMfOBFIe
YnqQ8lAcS4jljXUT/EpYWNgEbjIkNJTk5OSOjg40hKkrMcGQlJQUGBj4Jvcu
pzh2JpDyENODlIfiWEIs5CYT1MHPVVRUhIeH19TUQD2otwUBUlJSgoKCyE1m
uBBSngnqkPIQYyHloTiWEMsb6yZYVGRkZEtLy8hlvvg1nZ2dMTExfn5+XC6X
x+M1NDT09fWJ5s7WmhBLC3ITimNnAikPMT1IeSiOJcTyxrrJkPDFOs3NzaJl
9vf3p2enJ2YkJmQkYJqYmZiUlZSWl5aen44pUnJ2MgqZuXEpcZ1d9GL0NxFy
E4pjZwgpDzENSHkojiXE8ia7SUxMDNxE9GKdJ81P9P31nfOdXcpckJxLnZ1K
nURT57LhDDPLvcxdO1A7tyiXumC8gWRnZ0dFRXV0dJCbzARSHlIeYkqQ8lAc
S4jlTXaTnJycwsJCkSO0NLU4JDhE90fHDcVFDkba5NjYZNnY5do5FTsZxxrD
RJDnD/BjhmIShxJtM20LSgvITd5Anj59ilNm7Luf3hwojp0hpDzENCDloTiW
EMub7Cbl5eVpaWmin4Ob2MXbCfoE8AtOC0czQNMyxVLZQ1krUOuu0907Tnds
s235L/jRQ9GxQ7G2Gbb5JfnkJm8gmZmZfD6frorMcCGkPKQ8xJQg5aE4lhDL
G+4mGRkZI93ENt6W3zfsF+F94RbJFuxUtgHfwDbf1ijK6K7LXZ86n8jByKih
KNgNuckbS3JyMpfLpafUZrgQUh5SHmJKkPJQHEuI5U12k5qampSUFNELIp80
P7HiWwU2B/K6eO5V7ipeKrY5to8jHlukWDwKfWQoMNTw1/Br9AvuDA7tCjWP
My8oobt7byLU24Li2BlCykNMA1IeimMJsbzJbtLb2zvyxTrPnz335/l7hXh5
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
Yl4nVKnmKyDMQ5hnkYAwD7FjCeRCGWa/YfKY3nzvgLwAd767d7Z3QG5AYEFg
UH4QXGB+IJy/2N+V54qtb66vf5w/OvjSY0Uikamp6ZEjR84YnomIj2AIGYxM
BiPr9XaSy/zRxaTG5OXnUQLBYrFmZobu7u7MzEzZF4g5OTnSMRcUenp6srKy
BgfnbDjzJCB7iYmJGRkZ1OCOgYGB4eGJRxypvNTotuj0Z+nJQ8mMUQb7FZvz
igMHD1zqcCoCU5+mMp8zmS+Y3qlzOeB60QJ13dHRsZino1cqO/ZdQJjnjSDM
ozwgzEPsWAK5UAY1SeGlpPalZv6QmTWexR/nu4vdWUMs/ghfMCrIfJ6ZOT7h
EIUtb5wXlB4kqyZSlJSUODGdoluiozuj6R10akvvpEd1RNEf0uGiOyai4OI7
462TrRuaG0aGJwY4CwSCBw8egJyne4TS1taGffr7+6UhIBOhUNjX1ye7W11d
XWFhoexuc4vy8nIqcWyvXr3q7e3d1NSUyk1N6EpIfJx4OfiyHcsutT81fTid
OcRkDbPShtLsOfauWa426Tb+5f6cZxy/NL/+wf73X78LDKjovLw8WA7kqci7
gDAPYR6CtwJhHmLHEsiFkqhJYvfEqGFICe8V73bcbVo+zSLBwoZl41Psw33O
RXjGeAZc+ov0CTUZmRh3QH0nhjv6xYsXY2NjdTV1gXmB/Gd86A7IM7wx3LfM
N7Aq0IZh457jDk9gZSD/OR9J5YznePA9ouKjOBwOj8cLCAjw9/dnsVi8aRAb
G+vi4sJkMqUhONDR0TEhIYHL5UoDMzIyPD09w8PD2Wz2dEm9CzIzM/l8Ps7C
YDA+//zzTz755PChw7RAGsSRMcK45HfJ1N/0bsrdG1E3TH1Mr4Vec8ty8yry
cuI7hTWGuWW7ccY4dqF2FZUVQ0ND8zo2ZMFDJBIlJSWRr9TeMRHCPIR5CN4K
hHmIHUsgF8qmJvwf+PdT718NvXrG6cwFjws3o2+yn7InwiWO9YIVnB7c/rA9
JCSkqKgIxNjX19fY2JidnR0aEkoT0nhjE1PoeIg8AioCwurCzAPNXYQu5z3P
Xwu75p7rnvFsYirIzPFMz0zP0spSEEJvby+OBT90d3f3ToOamprU1NTOzk7Z
QLFYDHqfehRoHxmjUp4ntLe3m5qaQuAa6huSWEkJnRNPRcyDze8m3IWmnLh/
4pzruYveF80CzJyETtYM6yvBV2iFNNYwyzPRUyAUQAobGhpeSPBh6/0jBRk1
vCDtWMI8bwRhng8LwjzEjiWQC6VQE25KfEc86ymLM8xhDjPtOfYgQBCjDcPG
nmWf3JvMHmZTDrFu0W7njM59+umnly9fTpeA+masqrIqMC+QO8rN+iHLM9fT
U+wZ1RZ1NeRq/KP4e4n3TP1NaXk07hg341WG4JWAlk1rbm1+9XLiMzOIRXl5
+QyzOHZ1dcnO3EhhZGQEwjF1KnLsBnl6q0HT7wIWn+Wb7esv9r8Xfc820dZT
4HmPfu9e1D2HFAerOCvLCEtXtqtFuAW2gYWBvnG+Q8ND/f391dXVIMO6ujpo
8WL+2mp2IGqycOxYwjyzBWGe9w/CPMSOJZALZVCT2JRYm1QbxwxHZ4Gzk8DJ
LdPtathVYy9jB5aDa5YrAqXOie909OLR4yeO79ix49q1a/X19S0tLd3d3bi1
mxqbfLm+cQ1x9Dq6O8/9btRdUKh1vLVPrg9oNrAgMKQ0JL45PqElIbEl0T3N
vaW9hRou0dvby+fzR6efB7Kzs3PSaAsKYJWmpqapA6UHBgYQhVJ9DzMu4lzN
zc2NjY3ND5qbHiA7TfBQfoQ3tzQ3NU+EYNvQ0CA7RQ8uBzIKlSwqKkIiY2Nj
ZH5IBZGfn89gMIiavGMihHkI8xDmeSsQ5iF2LIFcKIOaJHOTY9ti00fSWWMs
5ggzpCaEOcSc8NSHxD2Mgyd9LJ1yqcOp/qkTo4ZBgBARsVjs7+8fExNDp9PL
ysoEOQK+iO/q7ZouSM8szMzMn3Ae/h4sAUuYK4Tji/lwAvHEbtIRvkiKy+XK
LgM0CdOpCcoN4cPDw0NDE48akCA1khdR7e3tYOm+vj4lJ5xnz55BZbq6uiDK
bW1tEFbyyu+NgGSXlpYu5lVBF4wdS5jnQ4EwzyxAmIfYsQRyoQxqIvuVGvcF
9xb9Vlh9mKvQ9UrwFXuOPXdsymiL16OGcV8LBIL4+PigoKDi4mLqDR2bxR4c
+OscLxXlFY0NjTOQJLQAagIhmG6H6dTk5cuXODtETSQSpaWl8Xg8eEDIlII0
NjaCc952jvQPhdbW1pycHOQfOoiyIk9IZgDaAxreDObHgseCsWMJ83xwEOZR
HIR5iB1LIBdKoiZJj5J+HG0xzrdh2tyJv3PoxqHLwZfh545ypaMt2C/Z1Khh
6bEUpbNYrP7+forG09PTZWdlRO8VWkCRPDVgFqIjy5b4i8NnmIARx2ZkZMh9
/VdbWwsVY7PZiYmJXl5egYGBCJGuI1lZWVlTUzM2NjZXBTXfePjwIfKM6+3o
6EAZzvDGczGDjBpeSHYsYR5lAGEeRUCYh9ixBHKhDGqSxE2KbY9ljbDYo2zm
U6ZFooV5oPkpm1NGnkauma7pg+kIh2ONslJHfny7J3s4uqiy8jFJTYCGhoaS
kpK+vj4Oh1NdXV1eXg62lP26DIeAQqfLHqQHO8h9bAKl4PF41FdeycnJDAZD
+lRkXCIoeXl5LS0tH9crM1xOQUFBVlYWlBFaPLuVkhYwyGiLBWPHEuZRKhDm
mRmEeYgdSyAXyqAmHCEnND+UXkn3zvEOKggKyQ2xDLY8bn78pvfNyOLI6Kro
8NJwr2yv8LLwyPLIsNSwpyMzfSA0VU2eP38uFAohIu7u7jExMc7OzujVyr6d
wSEzL3TOZDKne/0nFouRMjWyeCrDDA4O5ufnP3z48KN7X4ZrgQQj57g0lCeK
6wcJ3s+FQJ1HJYt4zhXm8NkUUZMFY8cS5lFCEOaZDoR5iB1LIBfKoCbIQGVV
ZUlZiYWlRVhEWFFJEXgMJFxaUVpWUQbH5rCvXL3CF/JLy0sftDyYuZ8+VU3G
X38h39DQAHr09fXNzs6WnfVFIBAgHKID5uzp6Zn6EGM6NQG18ni8o0ePurm5
TfdBWnd3N65F9mnJRwTkua6uLicnB4qJUm1pacnLy5vhi753B2gfJVZfX19Z
WVkxd8BVINk50RSiJgvGjiXMo7QgzDMVhHmIHUsgF8qgJlL4+fmJxeKpEyq2
t7W7uroqmE+5agIBAiVCLDo6Orhc7qQhnxAvaA2iAgMD6XT61DkYp1MTSJKD
g8OvfvUrCApOOl2W2traCgoK3rgGOrRpYGBghvkkPxSQK6gJ6N3S0mLFihUp
KcljY/PyARt0vKamJjMzs7CwsKqqqnrugPIXCoVI/N1nrYQ2ISnpV5GLEAvG
jpWCMA9hHsI8yg9ixxLIhfKoCQjf29t70vMKCg8ePHBycnr48KEi969cNRmX
TCoOqYJSTF2fGlIiEolAmAEBAQkJCSiQGdQEnD80NDQ4NEi51tbWI0eOGBoa
tra1SgOlDrJFJUWNvJj5ecKoZMl1iNp0b9CQsYft7R0KuPbW1rl6dvHo0ePW
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
kFLa+vVBhHkWA4gdSyAXi0RNwsPjdu+21NGx2rfPQVv75o4dFjt33t2+/daO
HXd0dO7q6t7ftev+nj22u3fbbNt299Yt14GBQYjIwMBAV1dXfX09utVQAdAR
yqqsrCy4NJj/jO8sdL4Wce1O3J2b0TfpD+h3E+7eib9zP+X+5aDL1kzruM44
/ku+G8utsrqS+nSKQk9PT0lJCfgQF4XEuxXGw87O26am986etT53zvb8eZND
hw5v3Qo7FhbsUW3tA2pqloaG1ufPT8QaGZkePMhhMkGbP8wKIyMj0dHR4P+x
sRETE29V1WhV1QQ1tQR19eTly+8vW3Z/6VLLL788/4c/nF6xwlZFJQZRW7Yk
fv+9T2Qkc3h4ZGqC45JP0ab6AQiNQCCAUlNv9/r7+1Hy1DOooaEhXDikvLCw
sEUClFhFRUVHRwc8qAvEcrlcSAkUpLy8HLKFyqIeK6HMqaRQiWgP8OOicC4I
0Mi7LeyIZoDq+0inM5oTEDtWLuQyT1hY/PbtNlpaDjo6rlu23NXUtNbSstXQ
sNLQuK+tbaOtbb9tm+2OHU7btzupq9veuuXR3690zNPZ+dDY+O7Jk/anTjnp
67vu2XNVTe34pk2HYcGqq5/C9vhxm9OnnSSxzohlMLhzxTxbtkRLuCVeQyNp
+fJ7YJ7lyy2/+urcH/94Cl1pVdUYRKmrx69e7R0ZySDMs+BB7FgCuVgkahIS
Erdvn9fBg8F6esGbN5upqV3bts1mwwYTVdWrmzZd0tC4s3XrPT29oEOHQnbv
9jM3d2poaAQv5eXlZWZmlpaWpqamgsqot37V1dX+Wf7JbckubBfLKEsnltPN
4Jt3Iu5cC7zmLfZ25Djei73nmO7ozHZObk12S3V71DN5DDJQU1ODdN5qJpaX
r1652tpamZtbm5nZmJtbXbp0y8jI/PTp6+fOXTE0vHPhAsKtEWtujtirZ85k
Z2Y+f+eZXsbHX927F3TwYIieXijl9u3z19ML3L8/YN8+n337/Pbvx9+J2IMH
w3R03NPSBGNjsz+p3GnhoSwoq6ysLAgBh8Px9PTEFvUC7WCz2b6+vtgymUyh
UOjh4QER5PP51Au45ubmSS9q0dTlLlj/VoB4UesNvUsiHzWIHSsXcpknODhh
585AXV26jg597dob69ff2bLFedWqy+vX316z5vqmTdYqKnY6OlG7d8doa4eb
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
pqm5T1//+qVLjseOmRYUFOFKn70J1dXVYHsoI9rDG3dWEGgY0AtqLDlqCm2Y
y+VCs1DdkMiOjo7i4uK3le/5A7Fj5YIwj1IzjyinpLLp/3R8+ZNX/w3E8ndj
P/v79n/9X83//ndP/+G/j/zPn3X8y9+3/vp/9P7jT179yDwry7bXdTXOjnmK
ivL37vXU0Ehfu9YXJuu3395eutRiyRLTVatcV6yw27w5/Ntvby1ZYrZxY4iG
BnvDBo/c3BLCPIqA2LEEckHURBG8lZq0t7eDaSftDE5ubGxEFK6ioKBgz549
GzduPGN4xi7Gjt5CN/E2sUywvBx8OW0gzT3b3TnD2UXoAlmJao4KqQ2xY9sF
VwcH1QSF0kNBOLmKAYz6b//2b6tXrwav+vn54dQhISEZGRnIG2KrqqrAh1AH
aufHjx9TCzLCD7aUjUJhoqsO+fv1r39tYGBAPc+pr693dXWl3loqiM2bN//m
N7/Zu3dvMoPx+84v/5tETf6l7d/++eGv/r3hP/6t8fNfNX/2Ze7SL/K++/Th
r6hYuDVlm1lZ7Fzxm9MHwyM/oaGhQUFBv/vd7/7zP//z2rWrJ06YXLpkf/y4
uYbGHlVVXR2dE5s27di3z3Dduq0HDpw7fNh4zx79Cxfum5k56umdTU5OxbXX
vwlQKxqNhjOiWN64s4IoLCz8wx/+8Mc//hGCi/pisVi4CrQ65Zz4iNixckGY
R8mZJyaJ+7vWv/z05X8HsXzS+PknzZ99WvHHX1Z98U81//e33A2/zVj385b/
Q8XCLc3VYmZyZ8s8V7S07DQ0GOvW+fz5zyZffXV+6VLLP/7REEbsF1+c+P57
h1Wr3JYvt1ZTS9DUTF+zxj4+nllTQ5jnzSB2LIFcEDVRBLivZ579RhbIP9hg
0rsYdHtBdNHR0T4+Ptg2Nzcjky1NLd5s7/iueLNAM98i3/vJ92M6Y6wYVsmd
ydHt0TEtMVdDrzrwHNxF7qH1oVATtpDd2trapRjodPrVq1eTkpJwLkiASCSK
iooCcXV2diIWZx8dHaXe0wHw9/f3U35IyaQohNy5c8fGxgYSU1FRkZycjD57
QkIC6kXBzAA43NLSEtmoqK39ffcffiqxVP+549efPPr0f/V+8kXet3/OWvl5
+R/h+fmTf/rp6+exG6vVKx5UdnUqdIru7m5cFzTR1NQ0ICCgoCDv3LmrJiY2
R46Y6Oic0tTcv2vXiV27juvqntLSOqildUhP7/yePQYXLlibmtrv3WtAp8fg
2KI3AaLs4uIC5YIEvHFnBQEjYdu2bbAx/P393d3dm5qaUHHl5eXK82WaLKaq
SU1Nzdq1a3/5y1/q6upOvX/lgjCPIiDMM4fMU1TW9Fnbn3/6coJ5/rH5t/9v
x6/+vvvTf+et/V2a2q/ES/89Y+0/dP3LT173oFcUbS9vrp4d8xQV5enouKqp
pa5e7f3dd/eWLDH/9luLb7+1XLr0/pIlV5YsubpihfPy5bYqKklbtjBXrrSO
jIwjzKMI5oR5CBYeiJooAjAV7nfFP0wC1eAQ2S4tLgqkgZvOz88vLi6OGnM6
PDTsz/EPqQy5l3QvsSPxavBVmzQbW6atDcPGp8AnuDzYKsnKPt3ehGYSVBrk
U+RTUFag+Fdq0j2RDWp+SGrVnre6cNn8S/11dXUg0urqapTz48ePFUxTmkJL
58MlbUv/6ekvPxn5xSdDv/iP+v/6TftnnzX/51f5y39f/eWvHv72l33/MhEF
N/wL7WrdnpHHb5XVVxLA09fXa2Z2++LFe/r6106fNj979taJE2YGBtdPnjRD
yLFjJqdOmZ88aW5sfNfU1PrkyUtVVTWKXAs1G/nAwMBb5WpmoDE0NDRQS4ui
paWlpXl4eHxEaqKnp/eT1+BwOIokQphHERDmmUPmqX/Q84fG1f/Y/y8/H/r0
5wOf/rriL582/de/Vn/1OX/jb4qWftry//1jz69+PvjPiP3fQ59uLjrUPfTk
rbIqZZ6BgSfHjnls20ZXV/dRU6Npagaqqrqrq/upqblv2eKrouKspuYJp60d
uX17rIaGS0VFPWEeRTAnzEOw8EDURBGMjY2xWCzFPxOqra2Fdky6EGQJ5BAV
FQVNoVhibHQsmhkdwYsI4YZEZEUEpQcFMgMjsyJdo119Gb7Romg3ulsIJwSB
4fxw/xT/6rrqWcgBeA/MX1JSglxRw5bfNgUpcHZIKjUbDxiVzWbHxMT09va+
VSKPnvTdrbG70GR2ofmSUbOp0QPT8y2UuzixfTDhEEXFulf6Do3OcpQBspqY
mBweHh0REQNHeSIjqS1CYiXbiXC4sLDIzs4uRZoNdBlsP6+zkff398MAEAqF
yjmN51Q1MTY2lqrJjRs3FEmEMI8iIMxDYU6Yp/PRwLUid/2qG/rV1/Wrr+nX
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
MjarlEU5+DllHHYpm1POmfCXc/CXU8pJyU2pqZf/7gb85uub7OaW5uaWKnEM
d3cGtq//yjqGh0dcT4/8ZwJIn5nPZJW8zgmVh1K2NGOy+eTkcEbHJp4FUW+m
oCYeHh4JCQnDw0+ZTD6NlurpmSxxKTIu+fX2xyhn57jc3GKoj0gkQtUHSUBN
coh0IiIS/fxifX1/dH5+cXAST+ykcBotrKPjr5WLRsjn86FNPj4+wcHBLS0t
0qjpnorgPkqm0dJcXJguLgxZ5+rKnBKY6OXV39c3tQBRv2hmsBxQIBDHiIgI
FAs0RVIsk98soyW4ublR9y9KICQkJDAwELoAD41G8/PzQzvBgTA8ULAoltDQ
UE9PT3hiY2OxxaVhfwS6uLjAboEHW0XmOSd2rFwQ5pkF8+DeDw+PCg6OCA6O
xDYkJCI0NCokJFIS8jcOUWit0z2NnCPmGeaw2RFhYeGhoRMOHspRf2Uc9gkM
CCjIz5+OeYKDU9zdU93dU167NImjAv8m3NU1pr298x2ZByUWGAgXRbmgIGpL
h4fySx327OuT82x/8TAPwcIDURPFgT4j+pXvZ1pFcBdIQFdX19fXdxKNgDfQ
Zd61a5eenl5ocKhjmGNAYUBEQ0RcS1xsa2x8a3xUc1RwdXBkU2RQRVBEfURQ
dVBoTWhUU5RThhMvhyfb7UWHGqWKK2pra9XRsd+yJVBdPUhdPXjjRpd166xV
VLzgh9PQCJGEUy5UTe1eff0DSByVCIoaveze3l54uAJuQHFA9INo5AQu6kFU
UGUQcoK8IWPwhNaGxrZMREW3RtPiaYPDP875A3KGbqKWqUc9t297a2o6aGl5
aGt7bt3qrKnpqKHhgK2WlrumppO2tjvCqagNG+4FBsZL3umNDA4OJiUlgYHR
5Ydo9vX1GhjcOnzY6uhRa7gjR6wPHLi9b9/Nw4fvHT58/9ChewiBQ9Tx47a6
uhdLSsplK3doaAglj6IGn8tOIFNVVQXlki54BKGhnpXV1tY6a2mFqKiEqqpO
OBWVYBUV/PVav95v06bAzZulUeGbN1traXW2tcm2UaRDvYCDWqENQwVwIqRJ
rQuPYpHyPDIpLXBkksozFJnH40H+cO1sNht6B1XC3ZSVlQVhgqykpaVBRJBs
SkqKQCBgMBhRUVHwR0dHYwsVi4mJmfrsRS6IHSsXhHlmxTxt586Znjt3xcjo
6oUL106evHD48GkDg0sXLkz8hUM45S5cuH78+JmmpiapXTcfzONgb3/O0PCi
kdElY2OjM2eMDA2NDAzOnzljcv680dmzpufPI2cTUWfPnjxyJDIycmREDvMM
DDzR07PX1PTT1AzQ1PSHU1NzU1Nz1tDwU1f3htu69cdwLa3ATZssi4sr35F5
Tp26ZGh4w9DwlqHhTQODGwYG17E9fvzSqVNXTp+G/zrCJe7W8ePG6LDLLuW2
2JiHYOGBqIniqKmpKS4ufj/DeMFOtra2v/jFL27cuDF1jUgul3vgwAFjY2M3
VzebIBubVBvvQu/UnlTeM15SVxKkxEPsARGxZdt6FXjZc+xdsl0gKDdjbkYl
RFHsRwHdYUNDQ3Sfs7IydXU9tbSStbXhGGvXOn7zzaUNGzxUVYPU1GB2+W/d
Go9YyQ4MNTUHsbjw4cMOKhHUy4ULF0xNTcFUcalx8Z3x/Fd8wbggczwzuT/Z
nmvvV+bHGmSxh9juOe4hNSEZLzIQyx/n05JojQ8apZlB1W/ZsuXatWs5OVnX
r3uvX39DRcVOXd117drra9feXL/+FtymTfdVVR3U1V22bqVpanqqqFivWHHF
xSWoqamZSgSMamVlZWBgQKPR8vJyz5y5p6/viX8GBp6Ghp7bt1/U1j5/6JD1
/v0We/ZcP3nSFeGIPXPGe9++6zyesL29vetvwWQy6+rqcI3SEJB8YWEh9Jf6
DAynA7sGBwfj1P7btqWpqzPhNDQiNm3yXrs2QUXl3tKlLitXeqxeHbZxIxXL
2rIFklZeXPxQkgIFVDfqAumA9lksFs4LFaPkHkqBNkDNwgTAf/HiRarA+/v7
qaYOIwH5xJ2CWLR/7IYoaDT+4qKQVQQiKSSCQEThrkc49bkaAhFVVlam4GAi
YsfKBWGeWTAPGrmJydXLl+9duWJ17Ro6lWe2bdsLa/bcuctGRtfPnDEzM7t7
5cp9OMSeOmUMk156M84588BjZ2NzRE/P8NSpC2fPHj5w4LCe3rFDh+BOHzt2
5tQpGLSmRkawafVPnNi/e7cXjdbcLJd5xAcPum3fHr9jRwLl1qy5t2qVhZqa
v6oqbeNG9MRjXkelqKo6c7lZ78g8587dMDW1MzW1v3TJAZ33o0fNLly4p6Nz
8uBB0J2Jvj5i7SWxjidPmpaUlHUuYuYhWHggaqI40BV9n9PR4HQbNmwAt1Bn
xBYkgEJATxk92d/97neqqqoB/gEOYQ7nXM5dC79mzbB2zHA09zO/l3zPiedk
zbQ+73r+RtQNUx/T2zG3QeMGjgbOHs4QAunC4ocPH/7ss89OnDiRkBCvo+Ou
pZUIB0t11SrrP/3p1KpVd7/+2uSbby5+/bWRunqkllaCJDZNVdUuKYlZXFxE
JZKfn//tt99+8cUXd+/eDaWHxrbHcl9xIRYZ4xmJjxKRB8skSw+Rhx3L7qLv
xcj6SN5LHhXrGO0ozhNLMxMREfH555+vWrUqPDzk8mXPVasuLlt2duVKo+XL
zy9bZrB8udHKlReWLTPU1HRTUbFRVbVetw6GrvXXXxvcvu0kFudSiRQVFZ0/
fx4XtW/fvsTEREPDu6dPu8OU1df3MDSkbd58bOPGI1paRhoaBmvW7D10yArh
VNTevdeio+NQv5PWXkeCJSUlsiEpKSnIak5ODhW+a9cu1MXZs2djY2N9tLRS
1NXTJHasA7L+5z8Hb9x49ssvLZcuvb98uceaNSlbtlCmrL2aGo/FKpZJGXci
so107OzssrKyRCKRr69vbm4uSL61tRVNmlpBHn9xw65cufIPf/iDhYUFtEDa
1GFjZGRkQBpQI9gN14LMY0ulVlBQgKjp3k2PSqDgXUPsWLkgzDM75jE2vmxu
fvfy5QlLVU/vtKqq1v79J7S192hr7966VcfY+AasXLhr16xOnDiPXMGknyfm
CQ0Ntb5/f5+urs727btxY+/YsR2Z2LFjt47Ojm3bTM6e1T950uDkSRi68GzT
0IAlSY2Gm8Q8ycnxenqu27bFwpTdvj1u587EpUtNvvvOCKbsihVXlyw5uWWL
H8LhduxIVFFxiIpKxJ36Lsxz5sz1ixdtLl60NTNz3L//jKqq7unT11RUduno
nNDVPX3kyEUq1tTU4ehRYzabU1JSvGiZh2DhgaiJ4kDXEjemIp/xzAlAFLdv
346LiwON1NTUgB+oaR5BKSCZy5cvg74edT1yj3EHS99NuXvG6cwJqxOHLQ7f
S7nnJHByEjqZ+pvase0u+l8MqAqIbYs963Y2ODIYhSntidPpdBqNhouCUbpz
p4eGRoKmZuLWranff2+3dOmNlSut//zn8198ceIvfzFVU4vU1ExCrKYm7Fh7
kJPs81h3d3d055GxpPSk2I4f1QQu/lG8WYCZPdf+etR1fXt9Uz9T5lMmJSW8
cZ57ontj81+fiuDSUMu43qamxhs3vFeturJs2YXlyy+sWHHp228Nly0zXrYM
Bq0RaH/TJpt16+6sWXNr7do7X3110tHRv+n181gQZlJSEvIDXq2urtLXtzx5
0u30aY9TpzxOn/bctOk4TNn16w9hu3z5tp07L586NRGLqD17rnK5gqlPRaTP
ImSfk0DvoOnUM42QkBAfHx/UCBjbR1MzWUUlTU0tVU3txtdfG3/5pfV33xn/
8Y/B69fbL1vmtmJFiiSWoabmqKZWUVIi+zw2LCzMy8uLSge6wGKxIFhUfgYG
JkYCUjnB9unTp6g1nBcFLn2OgUDkKjAwkPrYzxGF8hrIHppKQEAAUpuTbyyJ
HSsXhHlmxTzFRkaXL12ypEzZgwcNdHQO6umdVFffuXmzppbWbmPjm2Zmd+EQ
e+LEuUnPY+eaeZrs7ez09uzR3bEDbq+u7nbkYOfOXdu24e+Z06dPnzhx7NAh
6iGthqoqbjTp81hZ5qmpqdy/30VLK1ZLK15LK05bO/6bb0y+/fbiX/5yHtsv
vji4bp0DYhGurZ24ebOD3Oexb8U8hoZXjY2tTUxsjI1ttLUPq6nt0dFBj0D3
1Klre/ca6ukZUbEmJvbHj5tInsf+9THvYmMegoUHoiaKY2RkBEzy3qahxrnA
8+iDx8fHo3tbXV3d0tICMkEGXrx4AQ9K7IeXP9AiaVZRVm4ctxv+N67QrliG
WzqkONjE2tD4NGzdee53Qu4EFwd7Z3hf8bnCFXJlixdJUfTy8GH70aOue/YE
7NkTuHt30Pbtzjt3um3b5qStbaOpeU9b2373bj9JFFzw7t22zc2t0u9jAek8
k8IcYaAoMKoyKqoqil5FD8gNsE2wdee4W9GtrvleswyzDCsJQxRcZFWkX6Lf
0PBf51rB5YyNjVHp2NsHbdt2Y/t2i507LbW1r23daq6tfUNT03z79tvbtt3a
ufPu9u23dHSstLSubN58PjIyWTpr2bikg0+NKOnv7zM1tTI0tKPcmTN2e/de
2LvXePfu89jq6p49ePDKmTO2kiiHo0evVlVNu2a9LPLz89PS0qiPxKgypDwN
DQ3uenrBOjpwgbt2Waip2WpoYHtHVTVER8dOQ8Nx69YgSWzYrl0OenrdaM8y
yUrToT5CQ3VPZ7dQ8yNJWzi0Bof09/cLBAKhUAg9ghglJiaKxWL8ReOB7nA4
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
y8iYSEkZSkkZsJP+5cvm8vJW8vLWly9baWremZycmvsuVB1VzpVfd6vk1atX
+Dlc+1CPnfeADyYyMDAwMzMDZWaGhmRaVTAjevf19aEKj7p8C7v/FmggXBW2
gv83Pj4e4okFenp6UOXHYlNTU3Alpvn5fJ1fDzfB9sDX8Isb/4/gF7u7uzm2
94HH1dfX42xhGlzAfHF9wUHgF3CK0NDQ6OhoGHFgYCBzTykkJATO6+Xlhbkw
IMzCf7HCGyPbOo7dROUpKCg/c8adjy+Yh8f72DEnbm4nHh4vbm4Xbm5nJJSc
OuXPzx+CdOpUyJUrTg8fkvKsC6Q8n8pOUh5i57EBboJL4M0iIMg6OjrW1tao
viXnJUf2RN6Ove1U6JQ8lpw5lZk6nmqdYW2ZYunX6GeTZWOVYWWTaXMn/o5f
q19QZtDjp48Xr3AOVPGgRbjcllogNzcfYaqKioeQ0A1h4Rs8PFcEBK7x8Snz
81/l51c+cUJWSspIVdVTRcVLWdn92jWL+XHsLFugNuwNJUjH4cOHf//730NL
17Cp8haBebrH8YYPXAPV+ZiYGDc3NxaLlZ6e7unpCfXz9/dHCWYx7QiCg4Pn
d5QEMZy/NuTX4+neJrYaxi8yz0MXz8K+w+AQRzHNdpiXQvEReUyxtZjiukAG
07GxsYmJCeSRYeaicOXPrLdLHLvVlCc7u4gdpqYdOGB74IDDN9/o799vs3v3
re++M9m92/if/9Q+fNjz9Om006czTp1Kl5Fxf/jwgzFYSXnWClKeT2UnKQ+x
89gAN0HtDNW04g+BPnz11VdffPGFnp6eX5hf9L1oDVcNswQzuxw7hzyHm2E3
b7BuqDqr+jf646Ntti08RddP1yLdwjrQOjsvu3hp7O3tcbEXFRUttYCrq8fl
y+aIYy9cMDl3Tv3YsfO8vIq8vAqIY3l5lZG5fNkac5GUld00NRfGsVgDquob
89oYavrKysp///vfYSs7765Ie3t7U1MTR5dEDR31dNTxUWGHdyDDPNHLZ9PY
2AiLgcPGxsYuM1jn5OQkToM1bxqzWa2GccoxXaFu5I9yZLvEsVtNeZycPPn4
AhDHHjvG2rfP9O9/19y1y3DXLoPvvjPetevm7t2GJ0+GsePYtFOn0mRlF8ax
G6w8V6+S8pDyvGeHKQ+x89gAN8FVgOt64kOGhobMzMxQyW1taU3ISgjrDjOK
MooeirbPsbfOtNYJ1NHx17HOsHbIdzCJN7mTeMc8yfx29G3LHEvPeM/B+4MT
S4PKMmrK2KmlFkhKSr1yxUJZ2UNY+Ma5c9d4eBRFRHT5+FT4+N7HsZKSt65e
9bh61evqVU9FRTcNDbNHjz6IYyGA83vPW1tQOWV6ip4jNjYGoWx9fX3/Ip4+
fbpY0FApxhZiPSMjI8vfEMD/gmUW/NwyrPntBdTcmRbBi60ZdX+4BhSb+ctw
/jANzKGlcFjsI3awoaFhGVtHORZY267jGSorK1NSUjbeTXp7e5cy3w1mu8Sx
W015EhMzeHiCeXnT9u933LvX+p//NNq/3/nbb+/s2mX8zTcmR4548/On8/Jm
8vJmnDyZcenSwjiWlGetIOX5JHaY8hA7j018Sw2CAGXAJZldlO2W5mYdbW2X
bGcVZWXsb6zjoqProuuS4mITY2MZaWkaaqrvo28aYmqXaOcf5//8xXKNHVB3
Xv4tsoqKKmVlY0XFO3JyRkiXLxvKy9/GlElSUtfPn9dTVjZTVjbFMvr6lo8f
fxDHwkqam5vX56J+5+AQpqgYqKAQrKgYyqTLlwOFhZ2uXAlkfwzBlD035OJF
9+zskleL2lBDP11dXePi4iIjI0tLS5fpmu/59LSnqam3ltb7dO2aF5OYvJbW
v/LsZH31amtT09o2+mCeVVVUVGA7W1pauru754Z3ZG6YzC9ZDP6Frq4ujrNg
vsXFxfj6erSJwO9i5Rv2piIDdgQ/ClfdCjfHtkscy5FNVJ7y8ruSkk4iIh6C
gvYCAo4CAnaCgs6Cgg7IIJ04YX7qlI2YmKeoqJegoKempvPk5Adx7Hoqz1tT
04SzZ3P4+XPPnCk8c6YA6dSp7D17Ynh5c9gl+Sg5fTrv9On8kyfj0tIqV6M8
09PPzcw8tLWRvK5f97h+3R2JybOn7/OYy/7oqapq3dTUSsozS8pDcSyxBFuh
1fCjyUf9Q/3d97rt3ewT0xLbutu6eru6+rr67/f3DvYilVWXmVmbVdVV9Q71
joyOLK9pH21tgcp4Zyf0qrujg0MqK6sOCgpNTk5rbm7Hx76+gTdvPvg5aBSq
22vexzWbdzdueJ8+HXXmTCw3t9fx4z5Ip04FYsrLG3rsmAcPT8Dx4968vOFn
zsRzcXnFxOS8fLnQLGDQzGCLLBarvLx88XZ2dHSgfGpq6sX0tL2qqq2oqLWw
sLuUlOf58x7nz9uIiLhIStoIC/tevGgrIuIsKekmJeUvI6PPz3+3rGzNPRQr
hELev3+/s7OzeR7Y/tbW1uZlYQaC5DgLLjMyMrJOnRRNTEwMDw9v8NDzvb29
fX19a36H5/PY1nHsfDZceZ52dPS1tnJOJSU1/v6RiYlZ9fWd+LixyvNWQSH6
D39o/P3vO778Mu/LLwu//LLod7+r/O1v8373u7r//u+c3/2uHIXI/+EPnV98
URgaWrwa5ZmefqGubisubi0qann+vDOq5BcvuomJWZ0/7yQmZiEr6yUubiUt
7XjhgvPly75nzuiWld0l5Zkl5aE4lliCreAm4Id3P7yZeePt5V1aUvrq5av3
46O8++H9sDLv3mf6+/odHRxHhkfevf34u2Er6438h6WYmXmNrzc2NqBmze5H
ZeF6MLd4vUYef6ejwzp7Nl5AIG3Pnpt79xrt3q27d+9NLi6Hw4ftuLicvvvO
YNeuG0eOOAoIpHJzBzo5BdbV1bd+SFtbW1NTU1xcnLW1NbaTkeX52Nra7tmz
R0xMLDEpyVBGxvjsWX1eXgM+PkN+fg9p6RsnTzpLSFzav99BTEzmwIE7Z89q
njjBunhReu/e4qKidXq0hD8ax/P52gGpX7+7Bxvfaph5mrnB/rUMOyaOnd0M
5VkqQXkmJx9CeRoa6jZced4oKMR+9VXXV1/d+9WvfH/5SyS3X/7S77//O+k3
v0n4zW9SfvlLz//6L9ff/Cb1q68Gvviiyto6cjXKk5SUKCtrICh4i59fB/Jz
+rT+xYsuvLxaUlIOBw9elJCwPXRIRkDg9smT6rKyPvv2SRQVFZPyzJLyUBxL
LMEWcZNZdhtPX19fjhX5jR8dEorU399fWVm5uFkrLCY/P399atxMHBsnIJCB
eHXfPtM9e4z++U+Nkyf99++/zcsbfuCA6Xff6R84YH7uXDI3tz/i2IaGxvZF
MMPNMMOpLJ5rbm6+d+9ebW3t4tJSiIK5gICTuLgaN/eFvXuthIS0eXhcJCSu
HDqkePjw5YMHdU6dkvjuOzMBAUwL1y2O3V5scGsL/EpdXd3ExMRWeK7HsJPi
2FlSnvcwcWznV18N/fKXrl98EfyrX/n853/a/va3Zb/6VcDvf9/w61+H/OpX
Xr/6VdhXX/V/8UWFtXXUapSntLRYUlJVRMRUUtLuxAnV/fulREUtmDj2yBE5
Li6Fw4dl+fi09+wRFRK6g2lRUSEpzywpD8WxxBKQmywFKqE4MsyYg/M7uIaP
5OXlrU/jzXdaWl6nTsXw8iZ8/bXOsWN+331n+u23Rnv2mO3bZ7tvn/WuXbf+
+ter+/fb8fImHTrkExKSOjk5Of2J9PT0NDU13b9//+Gjh8aXr+if4Ll1ilf5
wGFNrmNax7gV9x9SO8ylsO/ADe7jyMh8t+f6UW7NI0dFvvm2lOJYNhvsJvin
ampqttRI9xTHcmQ7K88bGZnoL79s+/Wve//3/3b7r/8q/4//CP33f/f7j/8I
/8UvEn7xi9j/83+C/u3fLH7xi+Rf/7rv3/+91M8Pe/p4Ncojf8WY75QuP6/B
kUOKx49pnODWPHzoylGuq4f3y/Gc0Dp2VGX/3os8x68dO6q6e5dIUVEpKc8s
KQ/FscQSkJssA1by5MkTyG9lZeXc0DbMmINTU1Mf/fpn/KCra7iqKktFhaWg
4HT1qreSkquioqu8vJOSkoeiorOcnI2srAnyqqp+V6645OVVfMbLcnPNbJ88
fXZbT01P7ZK+xkVdVWl9jUt6aue1VaWuX5W6oXreUPOSvvp5ratShpoyemoX
5M6fraysIDeZ3Vg3QUhTXFy81Ya5pziWI9tZed7Z2cWLiyeJiiYLC4eIiiYI
CYWLiIQLCQWJikYLC4cJCvoICrqIiMSIiqYICoZnZ1evRnmePX2ioXfzkobu
JU39C+raMpp6FzR0zqtdP6+qdUH9hsw1g0uautKq12Su6V/S0Dt3/nJ5ZSUp
zywpD8WxxBKst5ss1TnJ4qsDWu3j47Ol3ISBuT1SX//+fTDm5bSsrKx1ar85
Ovp9f/9IXx/H9KC39z4SMviIzJMnHHq/WTlTk1Meye7xXbGJAzFJAwlJA3EJ
A3GJP02RUJg8EJ84EJs2kOie51LXXEduAqqqqjasN3Kcewhjtkgjizm2RRxL
yvNJjIxMdHePd3ePzZv+K3V1jXZ1PWDKkZ+aWq3yuCd7xHbFxQwkJgwkxb1P
iUixAwlMBoXxA8mxA4lJA6kuee51TaQ87yHloTiW4Mi6usnz58/r6uoyMzMn
Jibm3vVCZnh4GCUvXrxgrkc4Dq6XysrK6urq/v7+0dFRGMpcw6vZzXaT2Z9u
j7S3t0NJxsbGSkpKMN2YDsnXj8cPH4eUh3hVeNlk2cYOxga2BDrkOlilWAe0
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
Ug17cbSfPXsGAcTuKyoq8vLy1tfWeyZ7x3TGx/YnxQwkxfQnxvYnRvcnzmUw
jRtIwtzE/hTXEo/y2s8Zm2x5Hj9+qKZmJiNjKSlpKCamJyGhLyKiIyamKy5u
JCJyQ1DwmqCgBjIXL2IZK3Fx3ebmtpVEApD9wsLCx48fr+E5hgOLMwqr7ezs
hCnjMLa1tfX39+N83oKesmPi2PDwJCkpnwsXQo8d05aU9OPhuXXw4FVubh1e
XpPjx3XPnLE8edJQRMQNc8+dc7l1y5OUZ01gK4/joUPvlefwYSiP+t69GhAc
6AxbeXQOHzY6dEj/7FmPffuuHTt2+1OVxyvZK7Y7NmEwMW4wHgmZ2MG4uQym
iUOJCYMJiYOJ7qXupDw/N+Uhdh5bwU1+imNZJ0+qXrrkxMurwcUlw89/TUDA
kJf3Gqqr/PwasrKuJ0+qiIpamJh8cFcE11pzc3NWVlZsbGxwcHBHR8f6DXkz
H1jY/fv3F1zpc6NJVlVVoYa7xW+PvHo17egYdOOGG5KOjsf1685IurqeTOb6
dacbN1xu3HDV0/PGFCXt7V3Yo2U0H3N7e3v5+Pj++te/XpS+aBdjVzBdUDCT
71To6JBj733Xy6PC3THXARmkvFe5xbNFSKWzpWHdYZUNlWvuJm/evGlt7ayv
b62ra6mra0amsbG9pKQqNDSqpqYZ+draZqacvUzz8k+N51iPUXWwKqwTZxQ8
BacxoiOc1UlstmCbi50Vx3pfuBDGxaUlLu7DzX1j3z7548f1eHnvIC8gYIeY
VkLCH3NPn3a4edOLlGdN+El5XNnK466t7ayt7air68FkPlQeZJw+T3ny3yuP
k0OOg9ePyuPoxVae3Fe5RbNFRaQ8bH6GykPsPLaCm4SFxUlK2ly44MLNrXTy
JCrmsocOyfDyXj9xQgUfhYRMjh9XFRS8xc2tIiBgZmTkODX1we2Ily9fTk1N
JSYmZmRkwEc25q4I6q1LtbB49eoVKrO1tbWo2L56tdK+ATceHKIHD8aHhkY/
TA8WlAwOPmBPh3GcYdaZmZkVFRXV1dUcbwuUl5f7+vpCDy3NLW0ibfJf5Bf+
UOiQ62CWZHYr+lby/WTTeFOLZIvE0UQUshpYeTN5JbMloV2h6+Ems+xgAx6H
CZPwj+TkZHl4uBcVFXZ1db5+/Yo9/y2zzArXuR6932ADIiMjGxsb09PTQ0JC
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
8/N7+vTp4u/OgZ+oqamBDa2mLfACmIYqq2ycgv1azT2N+vp6mOnGvAm5Ndku
cez2V55b/v6BWlpGBgbmN29aiYtfFBWVFhKSkpFRPn9eXlJSVlBQ6uJFhRs3
bhkYWOjrm+nqGt27N7geytPYWKug4M7PH3f6dOKZM4nc3H68vFHHjvlwcTkf
PGhz8KD1nj03MeXnjz1zJpmLyz0vr5KUZzGkPKuE4liCIxvmJh0dHfPvYNy9
e3f//v18fHzhYeFhiWFpj9Iyn2c6FTpF9UZ5VHjY59qz6lmedz3Nks386v2u
e1+PGYopeve+gaddmB3q5qiSwzuwzs4PaV87WlpaeHh4Tpw4wWKxQkKiJCTc
paVDL12KQgR77JjOsWO6Z8/anjp1m4vr2q5dF5HHXCaOvXjRJCsrr3xpTp48
+etf/1pZWTkyMhI7AtV1c3PLz89favnbt2//53/+Jzc3d0xMpJqatZwc68oV
P3n5QG5u5XPnboqImHFxyYmImEpK2h0/riImZiEn56ugECgqapGUlFlfXwc9
Z26A9Pf3M81+PzqW4tDQEA7mw4cPoZzMAJdjY2P37t3r6+uD62GD8fdh1jJP
9/Dv4Iv43x88eDD2IaPzWFyygAVzsQ21tbX49dU0zfikbosWg/1KTU2lt9RW
uRJSnpUoT3h4xLVrhohjb9+2FhaWFheXQfiqpKQlI6OEmJaH5zTy+vrmhobv
41hV1esITddHeSKuXHE9ezbx3LlkAYG03bv1jhyxP3bM/dtvNY8edefhCdy9
W/f4cS8sgLnc3F4JCdmkPIsh5VklFMcSHNmYp3uQnekPQYWaaZQKcUvMSgzr
CkscT/Sp9XHMd3SrcLsVfcsu186/xd882dyj3N2l3CVhLCH5YXLceJxXgldP
Xw++iwoytnx63Xjx4gUq9W1tbRDVjIw8SUlPaenwCxeiubi0hYQg3Xd4eIy5
uQ2PHtXj4rqOjJgYS1o6QlIyQknJrr9/cHJpYmJiEhISsOb79+8nJiYiD32D
bC61PPY0LCysurp6bOyBlpYDE8ReuuR65Ijc0aPyZ87oHjokIyRkLCvrc+KE
KsqvXAlQVAwUEbEwMDBuaGhg1gz9XHnz5NdsmD/u5cuXb9++hXK+YTP7/mW5
d0z5Ul/H/wIThAfhMGI9z549m5qawmF88uQJvsu02kAGWzW/ZHFv5Nhm/Mr8
EmwAzhzoOWzls++NDA8Pr+a+CrUa3i5x7Oz2V56srOzr128iTL11y0pM7JKa
mp6MjDKCWCkpOQkJGRGR89LSV7S1bxoZWSGa1de/OTBwbz2UZ3x8REnJmwli
+fgiv/lG89tvrx88aPn112pcXC5nz8bv3m3Azx8hIJAiIJCJOFZPz5SUZzGk
PKuE4liCI5vY2mKuIUBtfW1YenBIWqCOpZaZh4lfnA8rxts/wSc4NcAv3jsw
0c890uWGxTWfWI+gtICM/PethqEzqOMz9e716wJxbs15eUXi4uZiYnbi4vbn
zpmIiloLCpoJCpoICCAZCwjcQaGIiBXmCgnZampaL/9+LPSQuZ8AOcLBf/Dg
AUR1GWnCwsw7bK9fv1JTs8BmSEg4njt389gx1aNHlZGQQRISMuXiUhQSMpOQ
sMcC/Px6LFYwx1Ep15u6ujpm/CAYWX5+PjP+ODwUtghzganBX/AnJiUlpaen
P3r0CEsiqIDIw3SYMXpQggVKS0tbW1snJiaYI8C8qof1Y+X4ic++MYIgYXoV
75gxd0XITVa5ki2iPKFpIUGpgTcstE1d77DifL2jvP3iWIHJgcj7J/q7hrlq
m2t7xngGpgRm5GVsvPIUFhaqqGipquqoq+tcuaKqqqqtqKghL6+KpKCgJi+v
JienggXYL8peNzS8jWtkmdWuRnnk5By5uQNOnAg+eNBx1y7Db77RQ/r2W0Pk
jxzx+OYbnSNHPI8ff7/Avn1WPj6hVVV3SXkWQMqzSiiOJTiyFVoNp6TkS0oF
CQmFcnE58/KyhEUjxMSjRMUiRUTCxTAVjTh7NvDgQfuz5wIFBEKsrCOfPn3/
aAZigisatf7a2trl1Xj1TEw8rK5urqxsrKpqqqxsmpuyM81MhilEam7umJlZ
ssUHJBEaC0PBxo+MjHzSIINwt9TUnJCQpODgpMDAhICAuICAWH//2MDA+ICA
mMDAxMDA99P3PV0GJ6Okr29gaGgItXj8xRvZxw7MlxlqHPsYHR3t7e0NQ7G3
t6+oqIB1ogQWg78sPDzcz88P8QAsI5YNHAeFwcHBWVlZWCw5OTkuLi4sLIxp
8ZGXl8fcisExLCgo+GxHyM7OXs1bajjlsCXM0EifvZJtzXaPY+fIzMy+oWN2
/bqZzOVrV1UMb+hY6OlZ6ehZ3tAx130/tdDQvH3hgiqm166ZuHmwmNNmY5Vn
oq6uvqamtrq6dv6UnalDft7H2ra2tmXufK5Ged69e5uUlO/nl4Hk65vi44OU
7O2d5Ov7fspipbCnqSzW+wW8vRNJeThCyrNKKI4lOLJZboJ6LjSEqVqGhGR9
913Wrl1V//xn8T/+kfr111lff5389dfZ335b+s9/Znz7bdk33xR9+23F7l2V
f/tbsaZm+OPHP75ihO9Cjfv7+yFTfX1963d7hP1caWaFCZq/zKqgq4lsoGlQ
yMzMTFTSV17Fxv4+fjw1Ocm0w5halB4zc5n0BlszM4OV19XVwRA3zFAg9ePj
49gj5vElvADyi52FtXV3d0dGRqIEZx1cA97B9Gbp7+/v5eVlY2MTFBTk6enp
4eGBvIuLi7OzM2zI3d3d2toaJsXcCYGnwG4+203S09NX4yY4kggDlu/5Z2ez
rePY+coTG5uoctVcQ8NORcVSXt5YSenO5cu3lJRM1dRsFBTuqKlZq6hYq6vb
amrYKylZmZs7PnnyY/OijVWelbL8ZqyR8jDi86Pg4ONP0yfsWYz4TJHycISU
Z5VQHEtwZK3chOkScGpqChdaV1dXR0fH4OAgMzp2BxvUgqEtc7MGBgaYt7Pi
4mLs7UN27Sr4+uu7f/lLyB//6P3731v94Q+2f/6z/1/+EoaPf/4z649/9Prm
m5pvv23461+r1NUjJic/eFUe6g1xgGCWl5dv/backETIKaaVlZXe3t7FxcUZ
GRnY+HUdWwd/BPv12rGNMZQ5N4Hk4h+B7E+xwT+F3WReAmTeUmNaW9TW1j56
9AhfSUpKSklJGR0dZd5qw6wHbHDmREVFwXkZB2Hc5LM7fsQZuJrGGo2NjdjB
rX+mrR9bKo79bOWJjY11d/dVVbXU0LCXkLgmIqLCxydz+rSsuLiGlNR1fBQT
UxcWVr52zenaNeerV23MzZ3m4lgGUp6PQsozH1KeVUJxLMGR1bsJFANqgMo+
JBGecu/evaamJlxxvb290ITW1tZGNsjDQZhZ/Wz8/PxQOy4oyHN0DGfHsUV/
+pPPP/9Z8de/Rv35z8H/8z9Jf/lLBDJ/+Uvkn/7k/c031d9+W484VkMjfEEc
O7cZ0Jy5fheZmwC9PT1RYWFhgYFhQUHh7BTGTvPzcykjLe3l+nfNB7WEmtXX
1zPPrSBKEEYck/UeI5IxFByiDTCUOTeZZd9QYgrnMjAORBEtLS3Ynry8PByH
gICAmpqakpIS5hYKogKYLM4onFdMEwxsM6IRxAzMSlAIZ/lsN+nr61vN0abW
Flskjl2l8uTn53t5+SGOVVKyFBFRVVOzvXhRR1LymqyskZTUDWTOn9cVFr6q
qenIjmOtF8exc5uxWHl6enpDQ6MDAiKQAgPfp8V5Jvn7h6elZUxPL9l2aa0g
5SHl2e5QHEtwZPVuApkaHBx8/vw5M/YK80QJIIOPMz+xYBYEARc13Ac1XH//
tL//veD//b/aP/0p8quv/P7wh6Df/Mb897/3+cMfAr/4wuCrr4K+/NL+H/+o
+8c/Gv7v/626ejWMYxw7+9PtERhWQkKCuLh4d09PXk7OzatXzVVVzdTUTJSV
kczV1Cx+ypupqlqoqzPJTFnZVE9vatlWEmsCVBEHCnvN9DGOw8L0BL7evzvL
HpKS6cJxzcdhXMDcW2oc52KvYR+hoaHW1tZOTk6wV09Pz+DgYBaLhZLY2Fgz
M7P4+HgfHx8EBhwfleIYIgj57Kd7q/nuLLnJloljV688ERGxSkpm6ur20tLa
wsKqoqIaJ09KCwoqiYqqc3GJiIqq8fNf1tBw0NR0UlKyNjV1mJri3H5zgfL0
9HRnZ+dduWKqoGCrqGgrJ2eJpKhoo6hoJydnhbyCwvs8k+TkbHR0rCYnlxu/
YE0g5SHl2e5QHEtwZJVuwpjC54nhnFCkphZKSfkLCQUePGhx/LitoKC3oKCb
kJCXsLAPO+PNz+904IDF2bMsQcEAW9twpp3XUkBqZGVl/+3f/k1eXj42KspU
RcVeS8v06tXLZ89ePH1aUUhI99Il2XPnLpw+rX/5sv21a0yyVlc335A4dnPB
P9XS0tLR0bGuhtLc3LyMZz169MjLy6uyspJ5slleXp6dnV1aWooNa2xsfPDg
AfwFhYmJifgrOa6hp6entrb2M57Q4ZTDhnl7e+OHPvsIkJtshTh2TZQnKytH
W9v02jUTKSllGRkNDQ0jFRV9DY1bmpq32Jnb8vLakpLKamo3kffw8F3+5cb5
yhMVFaegYKWi4o4wlY9PnodH7uxZVUnJm0xeWhrrd2OSoqLzxsSxmwspDynP
6qE4luDIKt0E13tBQcEyHfqthOnplxMTTycmnjk4OGVmZo+MPJqYeIKP7OkU
po2NLaamFu3tnePjk0+evFj+KoZg1tXVQTEsLCycHBxMVVUdtLQQysoJCFwR
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
27fHbt0a/e67ditXXl292n79erfVq2+/886V9evdt2/nb98es2NH/MaN/hER
8Y2Nja2zAjb41q1bDx48yOfzzp513b6du2MHH9LOnYK//OXun/50ZsMG1w8/
pG7Zwty82X/79qgdO6J37IjdtCmATufV1zdACb0GQHIhD7tjaGgI1osoHHaE
cRKMBJsIDw+XyWQg+3w+H8wddrSXl5dAIID9FRgY6OPjAwcG5IODgz09PX19
fcFrIB8UFBQdHQ1TORwObNKYmJjIyEiYBNsWPMXDw4PH48HPuVwujHR1dQV/
hI04VYec5oOtLTCOJWVq5ek1KM9bjx49NCpPT0/XM+UJNirP6KhlKk/HrVu3
rl+/bWdnD8MDBw7v23fg8GGbEyfOHDxoDXnI3Lx55+bNu7duOZw9+zWcd3NX
npgY3vHj3ps2JW7cKNu0SfbBB8o//9nl9dcvvPOO/5o1oe+9BzFtyMaNiTDp
/feTVq4Mo1KjUXmWPBjHIqQsEzepq6tPScnWanWOjl7nz19NTFQlJ2fBFbNC
kR4dnRgVlcDjCblcgVisVioziorKTJ+LgYnAVTCIXmlpaUZ6BkS8jEyGakjl
nuT+bcC3D+Mf3oq4Je2S3o64fSfqzu3I27ZU23sx97j13OTRZHehe6IkUZOq
0RpIT08H0QsLCxOLxRrN9yNNgRkmj3yG2tracds2HsSxO3ZAPHkf4tg337z4
pz+dW7Xq1ltvXdy8mbZjR4xhavymTVQXF4pUKlPNCtiGb7311htvvHHlyqWD
B2/t2BFpCGL5u3YlrF376I9/PLV27cM33jjxxhunVq68sW1bBMSxO3fGbd7M
cHDwlkikUEKNgdTUVMjDmoLCZ2RkEIXX1dXBxoQdDXlYq6KiInBYuVweagDc
BKxBKBTCpIiICMgEBATAzOAUdDod3IHJZMLWAx8Bs4BfgRNBvr6+HgqBmePi
4qAEqD/4EfwqMzNToVCwWCwoGdxqmo7lzQcqBktBN5ljIctGeRpUqny1uuj+
fcrZs3YCgSYpKS8pKV8iyeFwZGFhkogIWXh4IoyXSnMKCsqHhixOeWDLXLz4
7fXrEKnaQ6R65MixvXutdu7cs23bzoMHD+/ateerry7CJGLquXPnIeSD4HCO
ynP16qW9ex0gUt24MWnTJvkHH6jfesvrt7/9+q23PH/zmy9ff/38G2/cW7dO
aJiUtHo1984dH1SeJQ/GsQgpy8RNQkN5+/c77Nv34NAh15077Xbvvrtnz73d
u29/+untvXvv7dt3H4YHDjhaWT3ctcv+9m2vzs4uMJHOzs7m5uby8nK4rAYX
ADmCbZWXlxeUG6QYVHioPG6E3bjLu3uLe4tTw7nHv3c3+u6D+AdXA68+Ej3i
NfEUIwpvsXdhcSHx6hRBa2urTqcDPYSVgsJbzKa5ueHECY9PPuF88knk1q3R
GzZ4vfXWFYhj//zniytXXn/zzW8/+igUJhFT163ziY9Xgmx+Nyv6+vq4XC7o
/8BA/7ffUj75JHzrVig2cvv26DVrHNassV+9+i7Ez3/4wwkIaD/+eHzqtm1R
69f7hYcLe3v7Jhc4ZngVbXIeAKNRKpXg1MTTPb1eD1ueuAfV3d0NKw5WnpWV
VWsAtlhBQUFjYyNkYF/AVHBMsBJwkPz8fLAt2FnEbSXY5kRRsBPheIA8rBQs
Cwyob24fdoTDAHbfIu3OaF7AOJYUUuUJDo7dsIH63nuBGzeGrlrlt2YN5Glr
1lD+8hfK2rW09euZ69bBMHjduuB336VfvUrX67stTXmamh5fvXr9ypWb167Z
Xb9++9SpL/buPQBxLESw+/cf3LVrr63tNZhkmHrr1KlzYrFkPpSn7+uv6evX
x69fL9qwQbRxo/TNN13/+EfXP/3J+T/+49tf//rLN9/0XLcuHiZt2CB+++3g
0FARKs+SB+NYhJRl4ya8Q4f8ra0DIX344eWPPrq+a9ej99//ZsuWq5s3227d
enf7dofDh1k2NsFWVvQrV9wrKipBl9LT09VqdW5urkAgACkj3jcoLi5mJDPi
6uM8JZ4OEQ7uYvdbQbfuht29wbpB1VLdpG73o+67Jbp5SDzi6uK8Bd5PWie2
QQZKSkqgnBn2xDJy+zbDxibwyJEgG5ugI0eYBw/67t3rZGXlaWXldugQhRhv
SGwrKw+FQjuLhg+T+O7BA9gszCNHAmHRULi1dQAs+vDhgMOH/Q8fplpb04hJ
R4/CpvNMSFAODMy+exnSbuHBWWBbJScngxFIpVI/Pz8Ywn4B75BIJDQaDYYi
kUilUvn6+oIJKhQK4gFcdXX1hFdE4FAn/WD9jADzIr43NJdCFjUYx5JCqjx0
etzatQlr16asXav+z/90++Mffd5+O/T3v3f64x+9/vAHiMpob77JWrtWtW5d
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
//5+bOJJXWlZ82OzFtHS0gLrBZ5oa2vLZDKzstI/+8x5796ILVtcIYJdter8
2rXXIK1fb7dq1YXVqy9+8MHDDRvu7tkTtndv5KZNtyMiouC32c8DTNnT0xOc
CyzguTObCQQJO3fuhBiDwWD4+PhUVVXBjsvPz7ecN9NMmewmJSUl69evf/XV
V/ft2zf5/CUFlcccUHnmS3mgGoVlJa8/+Y+/MUSqELL+pPXVH7e/8vvMN/+c
uurfC34HmR+3/eRvjPdjS7YU1BU2N81GedIzM6+cP3//8uULx49/bmV1YPt2
4pbsCSurg7t2Hdq5E2LXk4cOOdjaPrp69dThw5FcLiqPOcyL8iBLD3QTcwCl
gvPd/BeTQGrgJ6aXtLBSIBpw0tHpdB6PR7Q57e3uZUgZwYXB92PvxzTGXA+6
7pjg6CRychQ6BmQGBOUHPYx96JLocpFyMTA3MCA7IDMv0/y31IxzQjWI/iGJ
r/bMaMVN62/Ml5WVgZAWFxfDdn769KmZZRpLyM4f+lXW1h89+Zcftf/8Ry0/
/1HSBz/KevdHKRt+FHb4R6KtP8p780e1//ajtl+MT23/+RvCy4/b9TNqOzxq
YGz83by206c9Dh5kffqp565d7vv2+e7c6fLpp96Goef27Y927XLdudP54EHG
oUPBn376qLCwzJx1IXoj7+zsnEGdngccDBUVFcSnReFIS0hI8PX1XURucvjw
4RXPkEql5hSCymMOqDzzqDx1TY1/anznJz2vvtL3/7/S/ZP/U/n6Pzf+62vV
v/5T9srXS3//86Z/ebXjf49PGk8/2Vm6r7WvdUZVNSpPe0fH7StXHC5fvvrl
l5e++OLG+fMXz5y5+tVXtqdPw5gLJ09eOnPG9uzZu5cu3bty5ZszZ0qKilB5
zGFelAdZeqCbmMPAwIBYLDb/NaHS0lLwjgkrAlUCcYiIiABPIVRioH+AK+KG
ycOCZcFhyWGBiYEsESs8OdyL60UT0rgarjfHO1gaDCNDFaGMeEZxWfEs7AB0
D5Rfp9NBrYhmyzMtwQgsHSyV6I0HFFUikURGRra3t8+okMrqkdMijpXa3SrF
1SrVxUrjbKWF5GSV5mjIOFtpXMYnGdK3sbL2jll+hxGqGhUlZLH4LFZsYGAc
ixVjGI7nAwNhGG8Yjo9nMmNYrKimpmZzDhvwZVD7F9obuV6vhwBApVJZZjee
k93km2++MbqJnZ2dOYWg8pgDKg/BvChPa3v7/VLHi1WXvqmxvVBre6HuW0jn
x9NFIg8jYdL41Bpb3yJqd/8s2zdBVeNiYjjh4dywMC4Mf5gin2U4MDUsLDwk
BE52VB5zmBflQZYe6CbmAKUJhULiotUcenp6ZDLZ5GaeYCK1tbWml7r9ff3d
nd3dXd3d+u6erp7xTGd3ZnqmJkXT9qStt7sX/h0fbxjO7p0l2G58Pj8gICA8
PBw2DulnLs2BuLsCP29oaIBNwePxFAqFQCDo6DCrVa9JOWOD3WODerPSUN/M
OnJ8CRAvlb0Enc/MzLTMF9Umuwmcobt27SLc5PPPPzenEFQec0DlGZs/5Rnf
NXBNDKnfjGR5z6hReeZFeZClB7qJOcAZLRKJzHcTAJS2udms+3uTAdE27Qpy
jsD+lcvlgYGBaWlpsHlh+8yu5xYwx6SkJCgBVg2qV1BQ0N3dvQR6lZwpsD3h
gJyvvTMNYFiNjY0vYUEzZarWFtu3bwc3uXfvnjmFoPKYAyrPGCrPM1B55kV5
kKUHuok5PNdNRkdGh4eGTdN4w4S8gr7evgnjzXnvCGREJpPNV28nLS0tUqlU
IBBAgfn5+bm5ubO7K9LZ2alSqcDpwJUcHBwaGhqWoZWMveCvQ04ANvJc3i18
QZC6CRwef/d3fwduolQqzSkElcccUHnGUHmegcozL8qDLD3QTczhOW7y3VhV
bVVJdQmk4upiSJBJzUrlxnJzS3ON44lhYXlha1vr9I9swE2Mn4aZl8oT75WN
mTTBmAVQQmlpqVarLS4uDgsLA2MCn2qdP0CfYcUt36FeppvAUkCcLerTkGNk
blJZWfnuu++ClWzatMnMQlB5zAGVZwyV5xmoPPOiPMjSA93EHKZ3k5GhkQB+
QHhheGRFZFhJWEhJSFh5WHBhMLuYHVIcAkNOOYcYwgx+Gj9Zimz6RzZE/zmW
+aY98a5aTk6OTqcrKioqLCwsKCgwDonMZCaML3yG6UiwJygTRlp49ykv000A
2CBg3xbVfHiCm8A5++Mf/xis5L333qurqzOzEFQec0DlMYLKg8ozL8qDLD3Q
TaaC+Bw5kZ/eTYYHhlmJLHmfXNIjYZez/TP9YeiZ7BlSEULNpvpqfSMbIwML
AyNqI9Qjak4DR6qVPvfVI1iLmbbGfTn09/enpqaWlpbCRu7s7ASVg41DNCWG
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
Byddu7YM83R0tKupBUtL58jI5MnI5MJxcLgiK2HhaH7+EF5ePwmJjPdJVH5+
v9ra5g0yj6RkjIgITUysUEysmJ8/hZMzXFg4h4XFlZXVj4MjiI8vSVS0kJ5a
IirqB7P5X5l5SOw9kGqydqArup3L0eB0586dA7cQZ4QPEkAloKeMnuz333/P
y8ubEJ/gn+ZvEGxgl27nVeYVUBdgFWflUeQRWBvoVe5lGGLokOVgHmPunOsM
GtcN0A0KD+ro6FjcWFxNTe27777T0tKiFhQ46ukFGhgEwo41NjaQlpZkZ78k
JaXCx6fKx6fIy0vR0QkwNAw0NAw1MjJXVS0rKYGwEpl0dnaePHnyp59+cnd3
T81OzbuVV/OuBmJRN19H+4WGMrgVuoW3hftW+prFmmVezax9W0ukBuQEtHe0
LxYmIyNj3759Z86cSU1L83dzUxcRUcLZhYSUBQTkERAQQFiBj88e5quiopmy
so6UFAxdOS4uHw8PYk4K0NPTY2hoiItSUFAoKqLKyETy8pbx8pbD8fFVHzli
ffiwJUzZY8dcDhzQZ2dPf59azcoalplZ2NPT/dHe68iwr69vaUxxcTGK2tra
SsRLSUnhXujr6+fl5XFyZrCwNMNYPXOm/dChmL//3frUqYJ9+6x+/jnwwIGg
o0fTWFiakMrMfBlmc0VFXV9f72K2eBJRbOTj6+vb3Nzc1tYWGxuL6wLJ37hx
A02a2EEeP/HAsrCwHDhwwNXVFVqw2NRhY9TV1UEacEdwGNoqCg+fyK2rqwtJ
K32bfkHHGp8a0o5dFiTzrIN5CgqoSkoBsrLpMGUVFHK4uJxPnFA/d86BmVkf
jolJT1IyXlY2Q04uQ14+W1TUvaiofOuYJz09xdo64swZM0ZGfRYWIyYmQ0ZG
XSYmIxYWY0ZGPSGhUB4eb15eL3Z2GLpex4/rOjsHtrcvzzwqKgHS0tmEk5XN
Z2REVgZsbA5nz1ofP64pLBwlI7OQJCOTz8/vk5VVsEHmkZCIFBGhiokVwFJl
Y/M+duwSD0/8kSO6LCwucOfOhRCpoqLFgoJelZW1/8rMQ2LvgVSTtQNdSzyY
axnGsykAUTg7O+fn54NGxsbGwA/EMo+gFJCMtbU16OuXmV/CcsPA0u7F7pcC
L2lRtNRc1TyKPQIbAgMbA83jzX2rfM3izRJGEvJu5umH6idnJqMyF3vi2dnZ
kZGRuChIg6OOjr++fqC+fpChoYmsrLaIiKG0tCInpzgrqwro++LFAH19uGBD
Q3MVlY/ex4aFhaE7j4IVVhTm3f5dTeCov1AtEyz9avzss+x1/HTM48zLn5UT
UlI7XxtGC5uc+udbEVwa7jKud/LatSBPT01RUTUBARUBAQ0REXkeHjVBQWV+
fti0FsrKsGP1ZWR0JSX16fZ2ZEjI4vtYEGZhYSHKA169cmVYWjqSi6uUi6sc
jpu78uBBm0OH7H7+2eLQIdu///08E1MEF1cZPbX6zJmwZd/HLr6LWPqeJDU1
FZpOvBVJSUmJiYnBHQFjc3BkMDA0MzG1MjG1/PCD17599j/9FPb993bHj9MO
HIg+eDCJSD116jIra1Rv7/DStyJpaWlRUVFEPtCFyspKCBZRnsePF+bjECWB
/+zZM9w1nBcVvvgeA5EoVWJiIjHYLyAgIP49UDw0lYSEBOS2KWMsSTt2WZDM
sz7mUVAIkJFJk5HJkJXN5uR0P3vW4tw551OndI4eVWNi0peQSJSRSae7LGFh
j/b2D97Hbi7zXLs26eAQfeaMDSOjMROTMTOzxcmTeoyMJnQr1IiHx5+Ly5ud
3YWV1YmNzeXwYW08ZNeuLcM8Y2PDyspB4uJZEhLZcJKSuQwMRsjnxAl95PPz
z0qcnD5EkpRUPi+vT01N0waZR0wsQkiIKiRUAHfypM3Ro4bMzO5HjhhwcSWc
Pu3FyhrwPrVYSMinr2/wX5l5SOw9kGqydjx//hxMsm3LUONc4Hn0walUKrq3
o6Oj09PTIBMU4M2bNwigxn57+1tkZiQlixJaHeoQ72ATaeOW7uZf7O+d5x1Z
Hwk/rDbMJcUluTc5ui7aJsamprFmafUiK4Jebt++7Wpq6mFkRDEy8jIysr1w
wfHiRRttbUsNDWM1NStNTQ8DA8r7VBtdXZRkaQ0vrjPZ2NqY2JaYNZyVNZKV
PZKdcDnBp8AnrDqMkk2xi7VzS3NL60tDElzmSGYcLe7pr/9cawWX8/LlSyKf
mNBQQ1VVUw0N8/Pn9ZWVdRUVDVVULsrLm2hoGKmpWZw/v1Aqbe1LSkrqEhL5
OTkvltwUEC8xo+Tx49mLF8MlJVMlJdMlJdPgeHndeHndubiceHk9ubkdBAT8
JCRS6UkZYmIBg4NX1jJGq7Ozs7S0lBgkRtQhEZiYmJCSiuPnz+PnL+Djy2Fn
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
S7dbQnnwZEVFRcEmmZycJAakhYWFwVTLogOWW0ZGho+PT2ZmJmQFDxqeKRyT
nZ0NQw5m3to/Iu98O5Zkns+CZB6SedaBPcA8JPYetnq2BbgCvVT07ol9ovHU
43QEXSz6eCjm5uYQQIOvra0Fu370PWt6ehotH5Ty1dUEBW5qatrOz22okK/e
Ad8idHZ2Qp3RPCIiItA3BwFCO4iOPOJBjFBSJNXV1eHWoxJgdRBDsIg5raOj
oxALGCH4C/QIFgv+jmMWWRHtCodt+jslnOLrvhWBoYVn5KMtcoiLxWMCNUEV
hYaG9vX1oYZRsRBlGHLEqDO0Xvy8ffv2+Pg4wsRnd+j4F30J3fl27DzJPBsG
yTwk83yEvcE8JPYedsLqN2jGvz779enjpyFBITXVNbMPZ589fbbUjY6MelG8
Jq9OPn3y9NXLz3RyP6sm9FWvF74LrcW9fPmBcEANQV/b+bmN2Op60z9R7QSA
6K5fv47KTE9PT0tLS0hIgCgkJycnJSUhCTEgOvTr0WHHDYW+QFlwDDEZFrQZ
Fxfn6+sLn5jlitTg4GD08RfnQaDS0Bg2/Z0SOBkq9unW89uGGzdu3Lp166OP
cTDGoKewx6B0lZWVqJbZ2VlilRscD+0j9jpHJOoHBw8MDEBBiH3PoU3EW7g1
FmBX2LFrwfYzD33JzF/X4kjm2TqQzLM+7A3mIbH3sBPUZPjKcG1PbW1/rXeC
d2JRYnVPdV1/Xd1AXf1gff1Afd1gXUFTgXuke2FrYU1vTWt368tXq32G+Kya
XLt2PTGxPC4OT1x1fHwN3PvA4s8qemplTExlXt4H2kEMG9vOGaOgiOnp6bWP
INpFaG1thZqgMokdw9FtB0u304EA6A4139bWhhq4du0aOLyhoQEqExUVlZGR
gbtcV1dXXl5eXFxcQgdoE7KSn5+/lOdxwKarCTHH+Wt9cn316hUMjE/3Kx8b
G0MdQkpSU1OJScFPnz7Nzc2FUtfW1qIekJSTk1NWVoafBQUFiXgGystpNBpy
Ky0tRTVCYtb4nmfP2LHbzzypqSWJiaXJyWV0V053i4HypKSypKRSOBxDpVZ+
tFcUyTybBZJ51oE9wzwk9h6+lprgWVgcPlRcXZzYm5g0lJTYn5g5npl7LRcu
bSwteTQ5azIrdTQ1eTg5YSAhcSgxfSI9tiB26ZaCn+KzalJb2ywiEiwkFM/H
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
Q9qxJJYFqSYrAZ1Q1Ayx5+DSBa6hI9XV1VszeRNqEnP2bDEra+X+/XaMjGmH
Dnn9/LPL4cPeR44EHz0aeOCA+9//bnTsWCgra8Xx48mJicWzs4+efyGuXr3a
399/8+bN2dlfpKX8Dx8KOHokbP8Pdj/v9zj4k+f+f9j+9KPzj3+3PnjAa/9+
l398b3LwZ6+f9rvt+16zvn7zv+7tRmyzmuBOdXZ27qid7kk7dlnsaubR0Uk4
caL2+PHm775zO3So4O9/D9q3z/uHH0J//DHmhx8i9+3z/9//tfzxx7gTJ5r3
78+Ljy/bCPM8ePjATkvbWEDIQkRUg51Dl5tXj4dPnY1D6xy3Kiu7Pi+fNie3
PMsZfR6+i1w8YqcYGkk7lg6SeUg7lsSyINVkFSCTx48fg37b2toWt7Yh9hyc
m5v77N/XccLAwAxt7UQ4NbUQLa14dfVwOITPn49SUwtXVfVTVPTQ0IjS1k7C
z6qq1nUMllucZvvs6WNtAw8xVXcxdXcRNWdRdU9RNVdhNSdhVUcRVUcxdYqY
mpuQqj094H5O/FJLy2VSTea3V01g0jQ0NOy0be5JO3ZZ7GrmCQjIUldPU1VN
U1KKUFVNUVaOVlKKUVSMVFGJV1KKlpcPkpX1UlZOUFXNUFCIrqpq3wjzPH7y
1NbKyNxQzdxYzdhIxdJYzcRI1chA2chAydhQ2dJE3cxIzVBf0cJ0IaCuLN7W
1kIyzzzJPKQdS2IFbLWarLQ4yadPB7g6KipqR6kJAeL1SE/PwngwYnBaeXn5
Fs3fvHPnl8nJuxMTdyYn78BfDMCHu3r15sTETeKAq1dvPX68zOo3a8fc7FwI
LTxzhJo1UZA3UQwfLpvu50zQsidoeRNFuRNF+EmdKAmoCu3u7yHVBGhvb9+2
1cjR9mDG7JBJFovYFXYsyTxfBDDPxMTM1avglruEv9SBbeCI8Pj47Y0zT2hh
aO6V7PzrOdTrVOpUbv5ULnUqL4/uU6/DUWlT+UgtmioIqQnqHugmmWeeZB7S
jiWxArZUTZ49e9bd3V1WVnb//v3FsV4I3Lp1CzG//vor8TxCcfC8tLW1dXR0
XLt27e7duxCU395j/muryfz71yMjIyNgkpmZmcbGRvjbsyD51uHRg0fJLckR
reE+5V4509mJgwn+Vb6UQs+Ewbj613XN801xvXF5t3KCG4NSR1MSBhIGxgZ2
Gq19FeDWT01NbdGU5KWYm5ubmJjYmnk9G8LOt2NJ5tnJeM88EV7l3jnTOQmD
CX5Vfp6FnvGD8XWv65rozJN7Ky+4MThlNJVknkWQzEPasSSWxZaqycDAABh4
bGysubm5qalpdnZ2eHi4tLQ0ISGhqqqqsLAQvUvE19bWVldX5+fnU6nU4uLi
zMzMuro6Ys1nYpD5V1cTAiAQ6CD0ESXEhex2al1Qk9bkoPogi3gLuzS7sPaw
3Klc32pfqEnt69r6V/XQkdDW0ICagIDagJjumKyCrNu3b3+koSvNz0UkDoZt
MLk2wPDYruveKFDa/v7+rd7dBhUI0+XTCt8J2Pl2LMk8Oxkk86wPJPOQdiyJ
ZbGlajI+Pg5R6OnpgUzk5OS0tLTk5ubGxsampaUhEBAQEBoaGhMTQ2xa7evr
6+Hh4e/vjwPy8vJwQFRUFARofge8FVnE27dvHz9+XFJSghLuqImc6wDUJO1y
ml+Nn0u+i02qTVBjUOpICn4GNgTG98VnXs3wq/ILaQ7xKvcKrA9IHE4sqy5r
owM3gqC4qakpKD4R+VGdv3r1KiAg2NHR09GR4uREcXb2Ivz3gYVIeuqCMzOz
7ezc/MVpgTdvXr569eLVq+efda9fr/XlQ2dnZ1lZ2VZ/3btx40ZHR8eOmmSx
iJ1vx5LMs5Oxpczz+vVLD48Yff1Iff1oA4NYuA8DSIp672I0Nb3b27dkuNTr
169I5tl0kHYsiWWxpWry4sWLq1ev3rx5E7QzOjoK+h0bG0NgYmJiYGCgqakJ
QtPX14efra2t9fX1FAolNTUVSTjmypUrSCJWrts5akIAFwVBQZm3YvPBbcPj
2ccBuYHu+R42yXaUEi9KibdXibdnIcUm1d6zhBJ9OcaV6uZX4e+c4+JXHehZ
4Hm5+zIoFPfi8uXLuDVPnjzB5aekpKDCYRJ89Jro5csXdnZOZmbOZmZOFy+a
XrhgcumSFXwigBhzcxcLC1dzc2dLS7fz5w3q6xs2fYH3Z8+e+Pml29qm29ll
2NkRPuGIyPQl4Qwbm9jJyetreQWx1bMtYLHMzc11dXXttEkWi9j5dizJPDsZ
W8w8zw0MAuTk4mVl44WFfYWFfcTFQ+ATARERX1nZBHn5JDm5RDm5JAEBSnV1
86Yzz9OnTwIDU5yckpyc4Cc7O6cQDmG6+2cYAUfHyMnJKZJ51gLSjiWxLLZ6
tgXkAE8HeIbgCvR839CBePT4XtKBn8+fP8fPmJiotrYWYjVp4hjiabp9+1Zo
aMjDh/fXcsZtUBPkX1dXNzMz09/fD27ZIXv2fSmePn2sZ+KqqOUrr+GtfMFP
+aK/oraP0gX8pChf8FfVDVDUDlC5CN9X9WKAmIJla3vnm9cLANcRX2zb29sR
oG8cX4DAR3asvb2bpaW7lZW7rKyalJQKfE1NA3pAXVvbSF/fSl/f2tLSw86O
cuGCaX1946aryezsL0pK4QICufz82QICeXx8mby86Tw8KXx8WYKCVAGBbD6+
VH7+XCThJzd3YH//lbVsf9nd3V1eXr6508anp6fRbm/fvo1KgKFSWFhIo9G2
YSDc+rDz7dj5L2Se6OhoGIfLMc/tkJCQBw9I5tlMPHkC5nFR1vZR1KSo6PjB
KV0EBXkr4OcFX9VLoB1fVZ0ApQteYCFxBfMvZJ7nRkbBioopCgopnJwWbGwm
586ZCwp6srGZcnBYCAl5S0iEwuEAJaUMmLXV1cvM79sgHj785fz5AGnpZCmp
BGnpJAmJOAmJGHHxSCkpWNfJ0tKJCMOXkUmWlU0XEvIcGBgjmWctIO1YEsti
J6x+c/fuvfb2gaamHmtr1+jo9IaGzpaW3qWuoKDCyMi2pKS2qan3ypXP7JG3
DWoC+aitrSU2ggEPtLW1jY+P77rXI0+fzuno+IsI+4DVZWVjBQU8ZWRipKQi
ZGUThIR8pCTD+PndeXmdRUWDJCTCBQXdW1v/+ekfQo9KhoI0NTXBRxMC9S2t
c7od6wo71traQ15eQ0JCUVhY2sTEQVxcAeFLlywlJZUQsLBwsbX1pNuxm/8+
FmqiqBgpIFDGxhbDwhLAwOB26pTbsWN2Z89G8POXnD0bdeyY7enTQfz8xYKC
lezsoVlZtO7urr7PIS0tLSgoqLGxsbe397MHrxFxcXGnTp3i5OSkUCh5eXlo
VOnp6ajhza2QzcKusGPXgrt373Z1dcMgdHBwTExMamlp7ejoXOqKiootLCxB
Ke3tlycmJkjm2RQ8eTKnq+snKuIlKRkkKxslJISubrSsTLiCQryIiKe0dJig
oCs/n6OERIC0VKiwkNsXMs+CHaugkAxLlZPTipXViJlZR0YmmpXVkI3NUFw8
hJXV+OxZA7Ac7FhhYZ+tsGMfPPhFQyNIRiabnz+Ik9Odjc2WldWWhcWMh8cX
kby8/szMptzcuNIsWdl8fn7vnJwCknnWAtKOJbEsdoKaZGbWs7A0Hz3avW9f
4/79rUeP9h0/Pnjs2MCxY/10v+/Qoa7vv68/dKgbASsr2tzcakN3tkFNoCOL
C5KDYHG6/v7+zs7OrR6Bv7mAHaunF0pQPS+vKxOTtphYEBubsZxcHDu7qZRU
OBeXHRubEaiek9MG+tLa+vHqN6gHXPvg4GBLS8vVq1eXbl+4MK7AxtnczMXM
xFlSTElURE5aUlVRXltMRF5GWk1eVlNcTFGQT0pfz8bSwl3rvOFW2rGl7Oxx
x45ZHzpkAFP2wIELjIzux49bwT948NKxY5a8vFRBwQoOjrD8/LLh4eErn0NV
VVV+fn5PTw9k9LMHrxGJiYlnz57V19cvKCiIjY1FG05JSVm6Bv6Owp6xY4uK
Si0tXSwt3fT1rY2N7W1tF74OwNnawvdEDwupuroWVlZu5uZOwcHhT56s9oCT
zLNGwI7V1w/h4rJkZzcSEHBhYdGEQQsjU14+9tw5EympUF5eWzY2fRERLy4u
KxGRD3rQBFZlnucG+sGyMonSkolnTpswM+qznTXnZHdgZkLAkoPN7gyLMROD
jrhouJxsqgCfT3XV5o8rWLRjBQVDmZmNT526wMZmd/SoKhubPTOzEfwTJ7SY
mQ2lpFJkZfP4+X0KCkpJ5lkLSDuWxLLYCWoSFVXxn/859u23d7/5puUvf5n+
5pvOP/2p6k9/qv/mm65vvmn+9tvhb78d/fOfR7/5pv0Pf7iupkZ9+PADOxYU
h+duUT62QU2QOc6y9GF/9uzZ9evX29rabt68uZYvRDsBhB3Ly+vAzHyRmfnC
2bN6vLwuJ04o8fO7s7NDTaIEBSlcXDbS0tEcHOZCQh6f2rEEcO13797t7e3F
5c/MzIAbu7u7ITTWznYGDhaGTmba1vraVnoXrQ0uWl1aDFy0MbhgpafvaGrs
bKmqr1nbULcFduw9efkofv6KM2eiT5xwOXrU9uRJl5MnXdnYEn/+2fD4cfuD
B02PHrXj5s4TEKji4Ahvb+8jviyvjtu3b09OTuLu4xo/e/AaQXwpvnHjBrKd
np4eGRnZmfOFCewZOzYrK8fAwM7Y2FVd3dDAwFFT01RZWVdF5RICamqGOjqW
urrWeno2GhrGuro27u4+jx8/Xvp3knnWB7odG8zHZ8fCon36tDYrqx4/v9PJ
kwpCQq4cHMayshHCwh48PNayspGcnGbCwm5tbV/APOhBm9i4qBm5qRm7Klyy
VtCzVNK3lV8IWCGgeMla8ZKNvK6VqqGzuomHhIZRdW39Ftix99TVg2Vkcnl5
/c+csWFiMjl71gYOZu2JEyBbs5MndZiZTcXFk2RkqAICvpcv95DMsxaQdiyJ
ZbET1CQ6uuq//mvyL3+Z+/bbrL/+9faf/1z6pz9Ff/tt7rff1sD/859bvv22
6K9/hR2b9cc/jqurFy61Y0Hdzc3NaWlpNBqturr63r174PltGDaGs3wqaou7
Se6KtVyePn2kpeXHymp55ozp2bMWTEyXGBkvsbKaMzMbnDoFs9aMjc2KldVC
WDiEhcWIk9O+qaljpYm9qO2nT5+CAHH52trafHx8PV09EYUROeM5+dPU3Om8
3OlcBHKmcxEmAvDzp/PhqNPU0KbQlq717E22Oh49eqCh4ScsHMXH58PD48HL
68XF5crF5cnF5cfF5XbunBMHhy03t5ugYJiwcAwfn2t//+haLAHQfl1d3aNH
jzaxjaFi0aKQ7djYGEQZ1Tg8PHzt2jW05x2oKXvGjs3OzjUycrawoEhJqZqY
uCgqXhQWlpOR0VBVvSQtra6hYSQvr62nZyslpaajY+Xp6bf0kSeZZ9148uSR
trYvO7sZK6sxG5sZE5MuC4suAiws+oyMMGtN2dkt2dnNxcSCT5/W5+KybWpa
cSfB5ZmHFplzJS93qiBnigqHQPZUPj1Azab/JBx1ihbcELZFzHPhAkVGJkBE
xFVIyElExFlAwF5IyBE2uaCgHT+/FR+fuaCgvaSkn7R0kJiYXX//CMk8awFp
x5JYFjtBTd7bsY+//Tb9r3+d+vbbnD/9KeSbbwr+/Oeab77J+ctfOr/5Jhf2
7TffpP7xj4Pq6rSldiyetYGBgfLy8pycnKSkpNHR0a3b8mYpIGE3b9786Elf
3E2yvb0dPdwd/nrk5cvn/v4JFhZBFhbBlpahZmYBpqb+FhYhpqYI+OGnuXkQ
nJVVBHwzM/+RkYVpUKtwPlInJib4+fl/+uknZQVln2yf2ue1Na9rAuoC/Cr9
Ii5HhLWG+lf5IxB5OaLqZVX9fD1c03xT6nhqW2/bpqvJmzdvBgfHOzpGOzqG
4To7R3t6xurrOxMSci5fHkK4o2OInoQDRjs7h1b/aryIrdhVB1khT7QoaAqa
MawjtOoCOnbgnIu9Zcc6WVpSJCVVEJCSUufnl5KT01RV1ZWW1tDSModNa2zs
IiGhrKlp9pEdSzLPukEwj6Xl78xjbg6q8be0DLGwCDAzA/MgHAheAvPQY3w3
xjy+ke+ZJ5LOPNUvqxrm6xu2mHmGhq50dY2AVeAQ6O0dra/vSEzMBuf09IBt
Bunxw0jq6iKZZ60g7VgSy2InqElERPl//MfQv//7nX//95Q//CHv3/4t+t/+
LfKPfyz9v/83Gz//+MfOP/wh6//9v5Y//CHz//yfISWlvIcPP3jn8OLFi7m5
OSqVWlpaCh3Znrci6LeuNMPi5cuX6Mx2gaSGh18uGbi104Aqunv33o0bd2/c
uEN3d9+HlwZ+T5qevoV6hliXlZW1trZ2dHQs+1qgpaUlOjoafOjh5uGV4VXz
a03db3V+VX6uBa72Wfa0mzSXPBd3mjv1LhWRMb0x1a+rG+cbU66kbIWazC8Y
G2/fvXtD9xcc7khlZXlYWGh9fd2VK2OvXr18n7RwzBrz3IrVbyDEGRkZfX19
JSUlycnJCDc0NCAQGxuLZrbTzJI9Y8emp2fp6FgaGDiIiCjAlOXjk+LllZSR
0RQXV5aQUFVXNxYTU1JTM4CPsLOzx9zcBy9CSeZZHz5hnqXuo8hdzTxv18A8
b0nmWTtIO5bEstgJalJT03lRq1BFsYiJwZmPO1BJIVVFKV1FKVdFKVNFKVtV
mSohFnfyuIu0RIKyPDUysvzZs2UWjh4aGiIG9mzDKDWAGGy/0kxh4vUIDkAP
emd+oFkHcFGQSHTYMzMz4ff29n76sS8xMZGFhYWBgcHF0SW0KLT+RX3DfAOl
yNMp18k51zllKMUp2xFqkn413aPII6orquF1Q+t8a9pkWntf+0bU5OUKm/t8
BCggBLGAWjB9fXrpyMYvwhapSWdnZ39/P9owNOXWrVvXr18fHBwcGBjYgcPV
9owd29zcQvH0d3PxUZBV07lgaG/r6ujg5urk6eTg4eTo6ebsbW5qKyejYmlu
7+JEyUjPXnZxeJJ5thobYB7KIvM4Zjv9k3k6Seb5Hf+CzENi72EnqEl9c31Y
bkwYNdomxMU9yS+cGhdBi4cLL4gLp8HF+mWFWQY5+GeFB+dHpVEzllWTl/Tl
Iue3ZbbFPH2BdLDK6i89nj9/fufOnY6ODnTGt2LLmO0HGBhXhJ57enr69PQ0
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
J9XVdX706ZB4odTd3Q0FaW1t7evrm56eRqXhFEsX9IbK1NJRUVFBo9GysrJQ
TvgJCQn4Y15eXlVVVUlJyW6Z7PwR6uvrNzK95datW6ifXXrtm4JdbcfuLuap
qWlQUfFRVQ1TU4uQlXWXkXGXlfWUk6NIS7vBl5f3kpFxU1IKRKqKSqixsffs
7GrjDdbNPDAhHR39DA19DA196b6fkZGvkZHfojM29qcHFiI1NGyam9tI5vkU
JPNsEKQdS2JZbIOagI2hGsMfAp3xs2fPMjAwUCiUxKzEwvuFZU/LoCOpI6n+
tf4LWwf2xUBEvCu9A+sC3ahukJW6t3UQlID0gKrqKlBcVFQU+vK9S4C+6vDm
YWBgQEBA4OTJk/b29nFxCTBT7e2dHB1d5eUVZWTkpKRkNTS0VFTU5OWVpKVl
VVXVraxsHBycbG2drKysr1+ffrQybGxsVFRU4uPjcQowc2VlJZVKvXv37krH
5+bm4ja5uLj093cqKCQcP9584kTbyZNthw4VHT1ad/Bg3k8/pe3fH/vjjzF/
+5sf/BMnGk+e7DhwILuysuPVqwU1efz48eKKixARYuzZw4cPQarLii8KVlhY
WFpaGh4e7uPjA03Jz89HnSclJaGokBUvL6/Y2NgnT56sct9xis7OTsjQRuYC
fwRiosoGJ6fgujbyTqOnpwdiuj0jIXcmdosdu/uZxy42NklZ2V9dPfb8+QQu
LgNOzkvnzukIC9vy8Vnw8BhzcOgKCFgqK4epq8erqMTq6npMTd3YCuZBmzc3
d9XV9dPT8790KUBNzfnCBS8VFVs5OUtpaSMpKUMhIW34Ojq++vpBCgrWdXXN
JPN8CpJ5NgjSjiWxLLZNTUZHR5e+wbh8+TIzMzM/P39aaloqNbX4YXHZs7KA
uoDMicyw1jDfKt+Ynpjwy+GuNNfYnliTSJPsG9n17xYmePqk+qBvji45tAN5
jn2Ikc3D4OAgDw8PFxdXTExMWlqamZkF7FhnZ3cZGRkFBWVFRWVdXX0NDQ1Z
WXleXn6Ekerg4AxfX98QAtGyMri5uf/nf/7n4sWLGRkZuBCwbgh97ZeVjndw
cPiv//qvc+fOZWeny8nFMzC0MTBcZmTs+tvfKD//nHjoUOb33zsePpx15Ejh
P/7hefhwDg5gZOw+fDg3J6eqp6cbfE68ALl27Rox7fezeyneuHEDlfngwQMw
J7HB5czMzPXr1ycnJ6F6KDBuH5JW+bqHu4M/4r7fuXNn5kPcXYJPYz7CR6ko
Q1dXF86+kakZX7Rs0afAdRUVFZGj1DaYCck8a2GelJQMFZUA2LFaWomwWmG7
wklIuAsKWnNxXWJiUpCUdEeqhkacmlqcqqpdRUXV1jBPhrGxq4FBgIFBkKFh
qICAuqysmZKSNTe3EnwNDWcBAQ1lZVscYGgYoqJiR6OVkszzKUjm2SBIO5bE
stier3ugnecfAh1qYlIqyI1aTk29kkq9R43qivKv8Q9pDbHPsvep8okbjHOj
uYW1hAW1BOXP5NMe0HLv5UbkR1ydvIr/ooOMkj/fMvz666/o1A8PD4NUy8vL
LSys7O2dnZ3d5OQUjIxMNTS01NU1VVTUFBSU5OTklZVVLSysHR1dYMdaW9uC
9GZXRnZ2dn5+PnK+efMmlUpFGPwG2lzpeFxpampqR0fHvXu3lZSS6UZs9/Hj
tfv2Oezb57x/f9T339v8/HMKA0PLP/7hdeJENSNjByNj78GDuWZm7r29vUTO
4M+1T09+RQdx4168ePH27VswJzGRbX5hsNw7In6lv+O+QAShQahG5PP06dO5
uTlU4+PHj+mjI34jJmugVEtjPl2NHGXGWZbGoABoOeBz1PC6343cunVrI+9V
yFnDu8WOnd8Y84TuAOYpLa1UVg5UV4/T1Ezi4jKQkfEVFLQVErLm4zPn4THi
5NTn44M9GaKhkaCikqCnR7l2bXormGdm5o6VlZehYSCM2AsXvGC+8vKqSEnp
nzsnp6hocemSv6DgecQbGgYbGYXCoLWxcSCZ51OQzLNBkHYsiWXxFWdbLE4E
6OrpSilKSShMMHM3cw52js6NjsyMjM2NTShIiMmJiaPGBacGm7qZhmeF45jS
6lIwDHgGfXyi3711SyAu5lxXV3fpkoGBgZGRkYm2tg5CFy/qXrhwUVv74oUL
OnR3UU9vYawsjgGHrz4+FnxIvE8AHaHy79y5A1JdhZpwMDGG7fXr57KyUYcO
FR06VL5/f/L333t/9x3l++8p+/b5fv+9z4EDWd995/7TT9kHD5YePlz+j3/E
hIWltbdf3v7vUN3d3cT+QRCympoaYv9xaChkEeICUYO+4CYWFBSUlJQ8fPgQ
R6LGQPIQHWKPHsTggKampqGhofv37xM1QAzVQ/7IHKdY94sRGAnPNzDGjHgr
QqrJBjPZIcyTXJySUJRousA8LtG5MZFZUTFgHloCwrHU+N+ZJzsioTCx5Gsw
D54eRUUneXl3BQUPSUlbeXlXaWlHSUk7hKWk7KSk7CUkbOXkXJAqJ+dmZOQ+
Ozu3SrbrZp5Xr14aGzurqjpqaLjKypoKCGjw8anx8anz8Z3n59dQVLTi5VVV
VLRRVXXCARISBrGxicvuh7vVIJlnb4O0Y0ksix0xa7ii3M7WFn34ixe0TYyN
HOxsHR0dHB3s7O1tHR3s7e3tLC0sNDU14FtZWUZGhBNDjEAmeKLR6+/q6lqd
jTcOEFp3d09nZ1fnArpWcETSwouUVd4/gBLBsRAUFP727dtftMngu3dv8/Lq
w8Orw8KqQ0LKQ0PhSkNCikNDy+h+ZUhIaVhYJVLDwmqCg0smJq7fuHEDvXjc
4u1cYwdmP7HVOK4xKysrMjISguLr69va2grpRAwkBrcsLS0tNjYW9gAkI4cO
KA4ik5KSysvLcRiNRsvNzU1NTSVmfFRXVxOvYlCHtbW161aEioqKjYxSQ5ND
SYitkdadya7GbrdjF1FRWuJpbOxpaGiqrOCgre1lbOhjauptYkwxNvI2NYXv
oqdrJC/voqfnpq8XGxryNZjnQWdnf1tbb3t732fd4ODo69crzjXbCPMszIkr
rkhLy09NzU9Kyk5KyoJLTMxMTib8HPgpKTlIhUtMzICpTzLPpyCZZ4Mg7VgS
y+JrqQn6ueAQomsJxrC2sHCAJWtpaWJkZGFiYmRoaGFqamtlZWZsbGdtbWNl
ZW9j62hra2Vu7u3ltbgGOP4LNgZngqYmJye37vXI4rettWD1YoBXqXSA08CQ
ZWVlMH3X3sV+/Pjpo0dzs7OEe/yhm3vv/+5QGFjUyLy7uxum+LYJCqj+3r17
uCLi8yW0APSLi4W0jY+PZ2RkIAatDqoB7SBWs4yLi4uIiPDy8kpMTAwPDw8L
C0M4KCgoMDAQMhQaGkqhUCBSxJsQaArkZt1qUlJSshE1QU3CDFh95Z+9jV1t
xy5lnoKsLO/z54O1L/hparqpqFDU1FyVleEHaGt7qqoGamv7a2oGaWsHX7jg
p64e5Or6ZO73t53bzjyv1+LQz10lqw0yD66XWL7gPeY+dI/e+49mZx+RzLMs
SObZIEg7lsSy2Cw1eURfEhBEhwftypUro6Oj09PTxO7Yo3TA+AS3LCZNTU0R
o7PQF46MiIAFCztW6/x5dRUVaUlJGWlpDTW1C1pa6srKGqqqKsrKTvb2zk5O
MGi9KZSP9rKBiIAcQJgtLS07fy4nKBF0Cr+trS0yMrKhoaG0tBSF39K9dXAj
6IPcZrZHUBbVBJSLOwLan6MDdwqXSQwCJEapEbMturq6Hj58iL8UFBQUFhbe
vXuXGNWGpDt0oOVkZmZCeQkFIdRk3Qs/ogVuZLJGX18fLnDnt7Stw46yYzfC
PNGhoX5aWiHa2haSkkYiIhrc3Fq8vKZiYlbS0obCwsZiYgbCwmE6OpE6OoEa
GsEuLot2LAGSeT4LknmWgmSeDYK0Y0ksi42rCRgDbIDOPigRmnL9+vX+/n48
cRMTE+CEoaGhPjoQhoIQSdfoiI2NRe+4pqYmOjoadqylhYWasrKdjY3uhQta
mpoGly5d1NbWPn9e58IFNSUlRzs7Z0dHHPapHbtYDHDO4rqLxEuA8fGJ+Pi8
qKjs6OicZV1U1O8uMjKnsLDi+fMVZxBsFsCWYLOenh7iuxVICcSIOtnqPSIJ
QUEVbYOgLKrJPP2FEhG5GIBwwIoYHBxEeaqrq1EP8fHxnZ2djY2NxCsUWAUQ
WbQotCtiCgbKjJsOm4HIBJFQlnWryeTk5EZqm5xtsUPs2I0zT2xYGOxYP3V1
QxGRIC0tWzk5K0lJJ0VFa2lpCwkJGxkZGLehFy9G0O3YoE/s2MVifMo8V69O
pKWlJyWlJCd/xiUlJZeUlK4yd2mzQDIPyTy7HaQdS2JZbFxNQFPT09PPnj0j
9l4hvigBCNCnJv2Oj5JACHiooT4gcHR4LczNHaytL2ppqamoqKupiYuKqigq
qquqCvDyaqiqSktKwo51sre3NjPzcHdfaW9x4vUIBCs/P19GRmZ8fLysrFZI
KFJQME1QMJWfP5GfP4EeTqeHEwUEkoWE0oWE0uD4+FJ0dIIePvziXcu/FCg8
KgpXTXykQ7UQK4Fv9Xnn6VtSEks4bvo+jB9hcZTasqm4ashHSkoKhUIJCAiA
vIaHhyclJcXExCAmJyfH1dU1Lw+9jygYBst+sUUdwghZ99e9jfx3nlSTHWPH
bpx5YM/5qKmFaGnZSEoaCQubioqqsrMbCAqaiojIsrDgpxY3d5i2dvjFi/6q
qgEODsvasfPLMQ/sJWNjc3NzMJa1sbGFiclC2MLC1sTEAvFmZlYIE87U1MrO
zn71maGbApJ5SObZ7SDtWBLLYoNqQojC+shwkSgqKipsra2tLC1huF7Q1rYw
MzOhc72lmZkxNMDcXP/SJTVVVTOwv7l5ZGTk6kOMQDVqamp//etftbQ009Ly
hYQShYQKYKaeOGF9/Lg5E5MTO3vYyZML4XPnIoSF84WFC4SFqby8+RcuhDx8
uNry2nsAuFODg4Ojo6NbKigDAwOraNbDhw8jIiLa2tqIL5stLS1oAE1NTShY
X1/fnTt3oC+IpFKpK3VYrl692tXVtY4vdGhyKBiaEE607hog1WQn2LGbwjyV
ZWXuRkauBga60tJGysqOOjp2Fy866unB2dIDlufPIwnxznp6saGha2QeTU3N
zMxsc3MYqM6mptbS0nISEtIKCioXL16ih2X09AzQLyeclZXDZ3cA3AMgmYdk
no2DtGNJLIsNqgme99ra2g1+FMPfiQkC/v7+5eXlKM/s7OyjxTkDjx719/e7
ubmBAxf24P7cNFsQZnd3NxjD3d3dyytYSCheRASWagEjoy3c0aOXjh83YWJy
OHHClJ8/DUkiIjQ4Pr4CHZ3QPW/HztNnWw8NDW2poDx79gwCsdKXxCdPnnR2
duKYlx+CmCWHm4v2ABNlpWFgaHKtra1oJOsgc1w7RKquro5Go6374yB0EHpH
qskGM9khzDMHhnn4MIBgnnv35h4+XHCzs0RgEMzj6jo2Ojr74MGzL2EeUBks
WNixsFRlZZVkZRWFhcXFxaXk5ZXhI8ne3tne3gXO2trRwQF27GrrZe0NkMxD
Ms8GQdqxJJbFxtXkS7+V4DFElxYdZ/R8h4eHwSroCMNARQxIBjTS09NDrAyz
+NoEDz5SP3r3gq7xsmONiM+I+Mvjx3NUarmQUJKISKGoaBkbmx8Tk93x46Yn
T5rBoGVmdoZxKyZWJCq64Pj5YceGb4odOzY2hjop31QQw7o2ayTbMoLy2/zA
0EBjW2NDa8NnXX1zPe7O6qPd7t2719zcXFpaSuzpsw6AtD+NrKysrK6unpmZ
WfcM8d7e3qKiIlTmusUUz8v169fJWcMbzGRvM09xcbGFBYxVVycnT03NC3Jy
iuLi0hISMrKyCoqKqnZ2Lk5Obo6OC87W1snR0WlT7FiSeeZJ5tnTIO1YEsti
42oCUVj7WxHoDuilu7sbPI+eKbHTH8KgX/ycmJhAhkhFvzUvLw+KAJXBMaC+
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
m5ubuXwuV8jd77r/VNApnwQfbiLXN8HXP9kfmQBRgGuU6+cOn3sIPPyT/L3C
vc53nmdaagwODubk5IjF4vLycvIUglgeVnsca4GUhyBWERTHEqzYg5vAGkyj
JtMFk7uTuzJNOdA3MDo8ap2qK6rPnDhTX1M/MjQy+xvo8JTs7GyJRDLbUyYm
poaHkS7akkZGlne1CWJ1smbi2KunPJOTF02mCQwzmS6bJsbGKAwmiMtDcSzB
ij24SVNTk3e0t6/Q96DHwVO8U94J3r5JvtbJNdp1n+s+N4GbX5KfW6ib5a6I
NRcuXICnpKamWntKVtbkn/7U9/bbPebU/c47SD3mNJ2/NHw6/f73XSdPDlt9
yYcgCHbWTBx79ZSnurrzxAn9wYOFBw/qrRL+Fh44YD1Ev2+fPjy8fGiIeqYl
iMtAcSzBygq6iclkGh0dhS9A/4P1wbIxmXpKLRuXScekqaOp4hEx8mkTaWnj
00k5rlROKVVTKi+lV1NL01wP8mbcIREKx7dtq7jlFv2WLfqbbiq/8caym24q
u/lm/JbfdFPF5s1FmzeXYJR5rH7Pno7OTroxQhCXYbXHscugPFlZTTt2FGze
XHzLLcXbtuUhbd1acPvtBVu35t91V86ttxbedlshoz8/+1nxZ58V9PbOvNlL
EMQMKI4lWFkeN5mYmBifhbu7+6lTp4qKikpLSsP0YcoxpbhP7KJyORR56Av/
Lw5FHfLUeXpoPc6knHGUOzrKHFOHUzVTGrhJZVVlX1/fABtwE5hIR0eHXC5P
Soo9c0Z/993ld91VdPvtFTfeWG+dfvrTlptuqkNm61YUKL7tNv2bb3Z2dVEc
SxCXYRXFsSuiPAkJccHBabt25UNbtm/X/+pX6Q8/nLF7twoZpF//Ws78veee
wjvuKL3llpIvvtD39VEcSxCXgeJYgpUV7P3mqaee+td//dcdO3bAVnh6nmZM
w83nhleHizpF51LPJXQlwEFi22PPpp6dzqc5Si5I4CbOEufwqPCkxKTkuUlJ
SYmLizt0aP9vf+t2xx0ld92FVLx5s3HTJuMNNzTdcEPzpk01+L31VsPNN9du
21Z2KY49T3EsQVyWVRTHrojyfPPNgbffPrBzZzbC1DvvLL7//uwHH8x67DEF
Ithdu7TI3Hdf/kMPZVjHsXQ/liAuC8WxBCvL4ybDw8P9s3Bycjp16lRpaWlR
UVFYcZh6RB3bFOue4e6X73c05qiTwslV7Xoy+eQRwZEjcUeOxR+TDkozJjJ8
1b5tHW1zfVVnYmJidHSUMS+j0ZCQMHbvvYY779Tffnv5jTfW3nhj/U031d58
c82NN9bddFPd3XcXIXPbbRV33aU3x7FdFMcSxGVZRXHsiihPdXWVTtf08MNF
t91Wun27/pe/VD/8sOahhzQPPpj5yCPpu3Zlbt1ahoH33luwdWvJ5s10P5Yg
bILiWIIVe2htUV1d7RLv4q/z99X6now/6ZLmcjb57Lfh33ooPE7HnT7BP3Ek
7MihsENcLTcoL+hM+Jmm1qbZrS3gI/CsgoICsVgMe2IaF4vF4w8/3PSLX9Tt
2FF73334rUMe6Z57au65x8jkmbHbt9e8+25vdzd9dJIgLsMqimPn5+opT0FB
86uv5jz1VO5TT+U9/XTO00/nIf/007m/+Y3u8cd15uG55oF5jz6ac/x4YX8/
xbEEcRkojiVYsQc3GRsba2psMlYZTxw/ERMTU1VZVVdX11DfUGcGGW2m9tA3
h3RaXY2xprGhcXxi3HpyVh9hGBycqq+fqqmZmTIz206fjs7J6bYe2No63U8X
QRDzs2bi2KunPCbTWGdnf2dn34xUUlLl5eVXWVlnGXL+fF9v79Ds8JggiBlQ
HEuwYg9uMjAwkJGdocxSHjx+kMvjyjPk6dnp1ik2Ofarw18JJUJVlipDlzE8
NMxMCB+5cOFCYWEh4yMmk8nGOfb3d4lEQq1WMzjYOzVFDkIQC2DNxLHLrzy9
vT1JSYmZmRmYNSkPQSwIimMJVlbQTeAFzF2IiooK1zTXiOoIQbOA38KPboqO
bp5OUY1RlnxMa0xUQ9T05yNjTjU2N46NjcFH9Hr9Qn2EYXJyUiqVtrS0ZGVl
9fb20s0QgrCd1R7HkvIQxGqE4liCleVxE8j15Cyg5DCCgYGBysrK8OJw1ZhK
NakKLgv20nm5pru6KF34TfzQ6lD3THe/Qj9eFU8xrsicyuSqucY6I3wkJSWl
uLh4oT7CACOTSCRDQ0Pd3d1kKASxIFZRHEvKQxBrBopjCVaWx01aW1urqqoq
v8trr732ox/96M0334yOjmZ6vwkpC/HN9/XJ8jkYdtBf7+8gcfAv8T8UdSjM
EHZCeEIyON37jUuqS3hkeJG+aGQR35GFm6Smppof7U11dXWRoRCE7ayiOJaU
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
P8mVAksFNykvLz1+/NiuXQ8mJyeaTFflBTb4uMFg0Gg0+fn55eXlFUsHtr9a
rUbli++1Et6EqixvRa5D1kwca4GUx56VB4HlsWNQnl3JyUmkPKQ8K70UhN1h
P24CwedyuTPuVzDU19e7uLi0trbacv6yusmUuVNxWBWcYvb3qWElWVlZEMyg
oCChUIgNMo+bQPMHBwcHBgeY1NjY+O6773788ceNTY2WgZYE22KqYlpezH8/
YcT8yXWY2lxP0NraumtrO2tqbEkdFy4ML4nadXT0MDMtL2949tk9//f/3njf
fb/MyMgzGs/Pmun5gYGhxWhsW1ubSqWCebHe+LKuea65zPP8EdUqFAocBot8
QIlDCPtoFTWiWXLWWBxLynNZ5eno6GxoaG9sbLtsamhoNXcCdtmtdXnOn+9q
apqeaWWl8cUXX/7JT27YuXOXVpuNWcyaaYtlfa8MUp5VAcWxBCvrx01Qf2Ji
oo+PDxR7hhTgqhmXumNjY7GxsZjXbLWxdpOuri5FjkKVr0ovTFcXqjXFmhhZ
zDHXY5IsCTNErVen69ORTy9IV2qVzB0Y1Am3mv+qHCWx8FVVVXM8vhw/eVL8
hz8o3nor3ZzUbCn9UkrU6UqXopXHRRcXydtvY6aqV15Jffhh3tatzt/73n/t
3h3xxhtyDLRKmKlIoSgcHV3wXR3LzsrIyGhubobs19TUYCcyOwJbg+mQBwcq
87Ic02EmM9Cys1AMefhRR0eHpeE2NinzthtTDHt5/i8o2QJiD6VSaf9ddF49
KI5lZa0qz8WL456e0V99xfvyyxBz4l1KIVYZJoV+9pl3To5+SdqXBQQIDh70
P3DA/4svPH//+2+effbj229/+p13ju7fz8VA6/Tll+4ZGdmkPGseimMJVtaP
m0B/Pv/88x/+8Ifnzp2zvFEGkYE0NTY2pqWlQYWgRaxKbu0mZWVl7jL3qOqo
cGN4iCEkoi4irDqM38gPrwlHnlfJ41XxwoxhodWhMXUxDrEObR1tzMLAwvLz
86GWc12VY9bFxcVz9zkz/Pjj4muu6eFwTOZ0nsNp43C6OZwBc76Dw8Go4Utj
K6Kjs02mK3ySBaHGatbW1g4NDbz8csIPfoCaR8xpnMNp3rCh2jzfYfOQQXOG
yRv9/NTDwwu7XQCpx/bHLsN+x77Drqmrq/P19UUe+x17BM4Cu8dAsVicl5eH
gRBzSDoWD4cExuIAxrbFhm1qaoqIiMjNzWUmxC/z2SA4CIphRiiv1WoXeUND
p9NR7zcUx85mrSrPxMToRx95Pf549BNPxDz+uODRR0N27w7avTv08cejzPng
Rx8Nf+IJAcY++WT8Aw+4JSQor/gUs1KeC3/7m8uLL/q/+GLQK68Ev/ZaxPPP
ez73nMsLL3Ax5OWXg196KRCZl15CPuTXvz4XFSUaHl7YKwekPKsOimMJVtaJ
m0DAR0aG/P39du78hYPD6Z6errGxUaQLFwby8/MUCnl4eKhGo4afmEwjk5Mz
DQV14voaKtTX14clDC0N1YxpeBU8Z6VzdGO0l84rzZQWWBKIvE+Oj0emR1BZ
UHh1uGZc46P0qamv6e3p7TMDw5LJZA0NDbim7mMDGtjT08M6qq+v66mnpNdc
g4hxisMZ43BSOJx4DkfB4RRwOBIOJ47DKTQPnzInY2Cgqrm5pfOKwAZ/7rnn
3nrrrYSE2OefF/zgB0MbN06a09TGjWkbNnhv3Ji/caNx48bmjRtrNm40MaM4
nCZXV2ljYzNqGDIDyUUeu2NsbAzrxVQOVbeMwkDYRFRUlFwuh+wLhUKYO3a0
u7u7SCTy9/cPCQnx9PTEgYF8aGiom5ubl5cXvAZ5Ho8XHx+PsXw+H5s0ISEh
JiYGo7Bt4Smurq5xcXGYXCAQYKCTkxP8ERtxrg45bYdaW1Acy8pcyoPjHUcv
lOfMmdPd3X9XHkRNjPKEhU0rT3u7PStPz5//7P3MM8Lnnkt69tmEBx44smPH
wQcfPP6rX7k+8MC3O3Z8/cgjbs8+m4Sxzz+fsnu3X2Rk8uKVRyiM+8tfzr7+
eugbb0T97neRb70leOyxgzt2vP/UU6deeMHtxRe9n3/e7fXXw994I/LNN6Oe
ecY9MDCmqYmUZ41DcSzByjpxk8bGFoWiXKWqPHrU76OPjiYk5MhkZTJZuURS
HBGRHh6uCA9XhoUpMDw1tbikxDg29j/PxWAiuAqG6FVWVubm5IaFhQXmBarH
1C5Kly/8vjidfPpw9GHZgOxI9JFvY789EnNkL3fviYQTgiZBxmSGi9glNS01
S5ulM5OTkwPRi4yMlEqlWVl/H2gNCsweeIn0hx6K/d73hi5Fqipz7BrG4fhz
OGIOJ4LDqeNwJi+NrTl6NFQmk6uvCGzDX/ziF3fffffXX+/95S/9fvCDC1Zx
bMaGDZ4bN6o3bHDfsMFrw4bEjRsHmVEbNjR/9VVIWpoMNdSb0Wq1yGNNofC5
ublM5Y2NjdiY2NHIY63Ky8vhsAqFIsIM3ATWIBaLMSo6OhoZPz8/FIZTBAQE
wB2CgoKw9eAjMAtMBSdCvqmpCZWgcFJSEmrA8sOPMFVeXp5KpQoODkbNcKt5
Opa3HSwY5kJusshK1onyILjKzNRnZRWfPu356adfi8U47AuRlMq82FipQCCO
jU3FYS6RZKpUeWVlVdZP5O1GeTS///1ZRLDPPZeMSPWhh04idr333i+2b//L
/fcfueeevU88EYgg1jxW/NhjfufO+S5eefbt+/IPfzjwu9+FmePYqP/4j5gn
nzy2Y8d7Tzxx5L773tm5891HHtm7Zw8PIe6bb0Y//7zXiRNupDxrHopjCVbW
iZsEBYnuvluwbZto+/bULVuib789duvW+K1bo7duFdxxR9wddwjvvFN4110p
d94puuUW4d/+FtrbO30PpL+/v729vbq6GpfVcAHIEbZVcXExr4inGlW5ql0P
Rh48Gnf0sOAwv55/QnjiaPzRU8mn9ofsPyM5E9cWp5pQeUg9yirKmFenGDo7
O/V6PfQQK4XKOxZAw+OPJ11zTfel5/gl5jgW4Wskh5No/u26NAqpgs/PGRkx
XbwihoeHBQIB9N9kGvzd70T/+I/dGzcOX0qKDRuQ0jZs8N+wwW3DhsyNG/uZ
URxOtb+/ZmhoZHaFU+ZX0WbnAYwmPT0dTs083evr68OWZ+5BDQ4OYrVh5fn5
+Q1msMVKS0tbWlqQwb7AWLlcDiuBg5SUlMC2sLOY20rY5kxV2Ik4HpDHSmFe
MKDhxX3YEYcBdt8q7c5oSaA4lhVW5QkLi3/ppbPPP+/yyiteTz998tlnHZ57
7twzz5x+9tnTL7xw7sUXnZ9/3vGll9xfesn16afPHTrk1dc3aG/K097e/MEH
br/9Lf/pp4WIZn/1K4/77vv6nnu+uPfevTt2fIPfp56K+u1v45GeeUb4yCOe
iYnpCNgWrTwj+/Z5vvpq4Guv8ZDeeCPisce+efTRbx577MD99390773vPPnk
0VdfDcKo118Pe+op5+ho0dDQMCnP2obiWIKVdeImXK7k1lvzN2+uveWW6p/+
lHfDDVE//7nsuuv8b7gh4qc/DfnZzxJ+9rOUzZurbrml7oYbKt9/P6Kqqg66
lJOTo9FoioqKRCIRpIx5ga2ioiIwIzCpKcktze149HEXqcth3uGjkUcPBh/k
6rjOMueTsSedU51d01yTGpM8RB7nO2e2QQYGgwH1LLAnltE//Um0Y0fR9u3l
5oSMdvv2lO3bldu3S7dvz96+vezSKCSFVHolTa5mMf7550n33495lV5Kedu3
67dvLzDPMdecKTEPx0zVsbHZIyNX3r0Ma7fwcBZsq4yMDBiBTCbz9vbGL/YL
vCMtLc3f3x+/EolErVZ7eXnBBFUqFfMArq6ubsY7hzjUWT9YvyBgXsz3hhZT
yaqG4lhWWJUnJET48sshe/bE7tkT88gjh3fvPv7UU+4PPfT17t3fPvLIoccf
P/vkk06vvirYsyf++eejvvjCw2istT/lmThyJOg//5P3n/8ZivSHPwS/+abv
a6+de+MN99dfd0b+7bdDmVFvvx3+2mtuKpVuKZTn4pkzgR9+yP3wQz9z8n//
fc8//tHn/fe933vP4/33kbwvjQr4wx8cxWLVYt4+JeVZFVAcS7CyTtzEz09y
2205t9xSuWWL8brrzv3kJyd+/vPE667zvOmmlOuuO3PddW6bNmm2bMHYqptu
Mjz11Mnw8MiMDA10g3nMB+HCMjDS1NXVJVaJRekicaZYkilBStWmBgoCIxIj
okRR57zP+Uf5x6bFijViiVoiVohZeylHtbAq1L+gFqxGY11BQXl+ftmlVJGf
b7iUKqyGI5X29CxNs9ba2obCwvLvVs6kcnP6zkw7Oxf1zEun01m2szXwERhE
SkpKVFRUYmIin8+Hv3t4eISEhMBBgoKCHBwchEIhj8cLCwtLSkqCp7i5ucFi
ZhgH0zP5IlsNI64oLy8nN1lkJetEeXg8xLHBr74ajTj2/vs/3bHjT08+eW7X
rr2/+Y3rzp2fPPjg3557jvvqq/w9ewQvvRT1xhtf2qvy1BQVlRQWFpsTMqVF
RWV6fZn5t1SvL740ajotlfLU1dVjpqj8UiqxylgPn06kPOsBimMJVtaJm5jv
x+Zu2lS1eXP1dde5/uQnbj//eer114fcfHM2otnrrvO78UY1otxbbqn+2c8M
e/Z4SiRpkC/mUyxDQ0O4lLbcFWGlpaklNyfXNGJqa2nLyc4pyC9obW7t6+ub
ZxLIUW5u7jx9Nq5D2tratFotDkhsHGj+xCVguwaDobCwMC8vr6amBo6QYyY/
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
didOXGtsbO6XAsU84gmKeSg7loJQUGrSLw8ojfr6esjEnd/u1N+Bt/7OnZ4/
aKph4WHVNdVk4G2g/vYzqD4ggPff/6Z88knVp5/WTp6c++GHnv/+N33ixPCP
P75J+J0mTUr69NNqONi6a9a4JiSkV1RUgCJ62UBsN9b5mwO1MTc39yW+lOgm
1ghCBew7c6exsdHDwwMy197ejhpbVlYGHYHoMBiM0tJS1GpkG4GVlZWJiYnw
lJeXo0FlZWXl5+cjsLi4GEdcKYoBQ9mxQiEmzBMWFqWgYLZvn8P+/XR5eYu1
a0//9NPRzZs1tm69vHbtyVWrju7adW3/fsQ6Kio6qKhcSU5OpZjnlQDFPJQd
S0EoKDUREZ2dnS+0uiCLxfvyy7RPPqn99NPbEhKFH37I/Ne/bCZOjPr4Yw5h
x7p//DHsWMT++tFHt9escYuLS8kiAKZCiwYh4Jieni6GG+v8zVFTUwPufelL
0ID5q6ure994wA5xdHR0cXGByggEgvDwcAcHB4gLjqhUUJDIyEhvAmhlTCYz
LCzM398ffisrq+DgYCcnJ4Qgls1mP3e4IGXHCoWYMA9hx17ft4+upOS8Z4/l
unVnpaRUYcRu23Z1zZpT0tLHf/7ZUEkJsU6Kio6qqlcTEhIp5nklQDEPZcdS
EApKTUQEuopoj6IvqxgUxJsyJeI//0n5/PO0//yHM2mS4+TJrpMne3zyicfk
yV6TJtn95z9hn32W+vnnqRISqbt2edy50wxmwJ3m5eWh+UNHwAleXl7oq+JH
xXnOxd8NeDQjVMe6iWrW3t6OJgAP0ocN8/jxY6E/lJ2dra2t7eHhQdZJqAmL
xUIVhR0C7UhKSsIp7B9PT0/YJxkZGTweLzAwEDoSFBQEyeBwOJAeW1tb6AhO
fXx8cERqRUVF1PvYXryKzBMREb17t568vLG8vNmuXTrS0sfWrTu5YcOZ9etP
b9x4ZvXqw9u3a8nJmcL98ovRmTMGDQ2NFPO8EqCYh7JjKQgFpSaiZy8qKqq5
uf9YssGQn19qZCTQ00vU00vS1Y3X0YnS00vQ0eHp6sbo6vJ1dNg4RRSctnaS
p2fsvXt/dEWRc/BDbW1tamoq2ntycjJ4g/wEg1/v/fYnzut1vyhwy+DAewSG
fF9tbW147kiho6NjuPa4B0UjQVB63wRHdPWbmpoaaEFhYSEeellZGfzIQ0FB
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
hu/YsQPP4ujRo/7+/u6rV/N//JFP2LG2P/xw7uuv/efPP/P11ybTp5tNn+46
Zw6PiE1YutRqxYqYqKjMPimjJSLbSMfY2DguLi4xMdHR0TE5ORkkX11djSpN
7iCPUzTYRYsWffvtt9ra2tCC3qoOGyMmJgbSgCeCy1BXkXkcydTS0tIQNdi3
6U4CIrYayo4VCop5hsA8AYGBlw8fNj961Pz4cesTJ07s3Ll9+fJj27fvkZZW
kJaWk5Y2VFExP3YMzvr48bN79kSEhcGkHyHm8fD0tLh8+aC09H4pKeWfflJa
uVJx+XJ44ODRk5W9tG0bLFgYtzgqLFlioqubnJQ0kHlCQoJUVAz273ck3YED
zitWKC9bprR+vZq09LGFC3fDoCWjlJScd+zQYjAC/iLzHDigc+iQ1aFDNkeP
2m3friYlJbdnj97y5TKbNh3ZsuX4L79oELEwdG3l5dWjozlZWZl/W+ahMPZA
qYnoQNcSDVOUYTzDAhDFlStXWCwWaKSoqAj8QC7zCEoByZw/fx709Vv9b9ZM
a7C0bqjuketHDhgcUNRW1AvVu86/fl1wXc1JzTja+IzTGecCZ/8a/6NWR918
3FCYvT1xPz8/Ozs73FRWVvqiRQFffZX/1VdF33xT+umnDAkJ+08/9Z44Uf/D
Dy9OnGjy1VfpX31VCCcpWfr99+DSP72Ptba2RnceGQu+Gexf94eawAX8FnDO
+ZwJx0TDV+OgyUE1ulpkeyQpJdxurnWQdXnl/96K4NbwlHG/lZVlCgqR48dH
0Gj+hO0aAmOVRmMRBi2TeI+aTaMl0Gh8Gi2RRnO+csW/930sCDM4OBj5Aa+W
luZ+952gz/vYbsIqZhKp4WhM2MMPyahx49LDw5MHvhXpfRfR9z2Jh4cHNJ18
p+Hu7u7g4IAnAsZ2X7mSt3gxf8kSOIMpU85LSlpOm3b+v/9lzZ1rO2OG04wZ
PbGLFycsXGgjJZWXmdn3faynp6e9vT2ZDnQhKioKgkXmp6WlZz4OmRMc29vb
8dTwuyjw3vcYCESuXFxcyMF+ZmZmTk+B7KGqODs7I7VhGWNJ2bFCQTHPEJgH
RukVVVWzo0evHz1qeezYqZ07lTduPL5jx24pqW0//rhn9eprfWLPycv3ex87
vMxTXlFhra19RFpaZeVKZSmpQ6tW7f3xR+WVK5VghkpJXd6589LWrWc3bToN
e3Tjxt0LFtwwN6+sqBjIPEVFBcrKBoqKN8h90/bvd1q+XAVp/Pjj/mXLVObM
2b55s9bevQ6I2rfPaft2TaHvY1+Iefbv11ZRsTp40EpV1WrNGuUVK+Q3bTqx
YsVueXm9bdtO79ihrqpqiShVVds9e85nZeXcvv2/17x/N+ahMPZAqYno6Ojo
AJOM2jLU+C3wPPrgAQHorWcUFhZWVVWBTJCBhw8fwoMSe/LoiZ2PnYGvgRXb
StNJ84LdBR0vHdNQ02v+1+x4djhac62vul91y3S7EXPjgsMFjoDTt3iRFEkv
t2/XbtvmsXRpFOHYCxf6LFrkv3Ch94IFLvPnOyxY4Ll0aSQZu3gxd/Vqx4qK
ut7xsUDvOpOCBIFLootvvq9vga9fgZ9zsrNRoJE129rAz+CS4yUdTx3PLE9E
wfkU+NCD6G33/rfWCm6nq6uLSOeJunrEtGlMSclwSclISUmGpKSXpCRLUtJD
UjJMUjJQUjJKUjJUUpIrKekrKeng5BTTu2pZN9HBJ2eUtLb+vnZt2NdfZ0tK
Fjx1fpKS/k9Tc5OUvCkpmUtGTZkSlpVV/vjx88dopaamhoeHk4PEyDIkPWVl
ZQ67djHWr2du2OCzfv21FSssVq0yXLHCYMUKxsaNVj/9ZL16td+GDYwNG1jr
11vu2nXn9u2+dbQ3HXIQGh73YHYLuT5Sbw2H1uBfmpub+Xy+QCCAHkGMgoKC
kpKScIrKA91hs9lcLne4DCHKjhUKinmGwDy1dXU6p04ZHDtmcOKE4fHjGsrK
WqqqF5WVz+3de0pB4cL+/fqIOn4czuj48QsHDyInfUt4uJmnm25uriYre15W
9qK8/Olffjmxc6farl3Hd+5Ul5U9JyODQHg0FRRO7tqlsnFjoJ9fZ5+H0ss8
LS1Np08bqahcV1W9jiPczz8jmXPbt+P/zm3bdnL3btyoGRFrqaCglZ9fKMro
0Gcwz7FjOkeOXDtyxPjwYUNZWZTcOVnZkzIyJ44eNVZQUFdUvHDkiBHhjI8c
0YJR2jfZvxvzUBh7oNREdIDrkDi6n8OeslCgd08utAKWGGz4EG4zKz8rOTc5
pSAlKS8JLrmA8OcmJRX8cdpzzE9GSHxmfE1djdB+MW4qLCydwcggXDqTmclk
Zj09ZuPIYGQ+jc0MDExqaek/cI4E0k/JTUnK7/nFnh/FT+f1eHD8I3tEeE9U
flJmXuZgazYmJhZ5e+e5u+cTLo9wOU9Pc5+GFBDHrMLCWw8fClGB+/e7wsKy
PTx608nvk05en2OP8/ZOb2hoEqXaDLb6DVg9KSwsOSAgOTDwDxcQkEQc/wh8
6klBCYaHi76y/WBABmBmODo6QtpQkvDn5eWhOUNZiJW9ehYdgypFR0fDLEHz
Qcsi9bqLAGoC/gsSAyFD64OHvKCbUGREDaatlB0rFBTzDI15YmNieDdv8m/e
xFEQHS2Iiupx0dGx8EdH84moHhcVxYuKQpUWmp/hYp6cjAwBshERERsZKYiM
5EdEwOG0x48Qwh9LnMaEhpaVlAhtI3hePF5iZGQscS3pBOHhfNLT59jjwsNj
fv9dpGrzDOZhs3syiEIisvk/1xvytBQFHI6gvf1vzTwUxh4oNREd6GujYTYJ
Wy7pL0JobisqKhgMBovFev6SO49Fc88vkieiueelIWJ+noPhuqvhyU0vUlNT
IyIiRqiOiQ60F2Rjx44dsrKyd+7c6SZmtQsEAi6XC09WVhb8qQR6vxVCbjIz
M2GZwMNmsyExsbGxiYmJMFfI8Wz4Lx6PhyNCYmJiECh0TCZlxwoFxTx/gXmG
A8PGPGIKinkoO5aCUIy0mvRrceQa0QNjyXB7e3vUcLFVEwBNFcU1jIlDJnJy
cnJzc9HLRh+2oaEBvdHq6urs7GyckmtEUxudixXwdAoLC0ft5dhggJqgvXz/
/fcHDx5sbGzsJmQuNDTU0tISVhmizM3NHR0dfX19cYTf2toa4bBP0DpwxGV0
Oh3hPj4+tra2bm5ufn5+CLeyssKV1wkwmUyh37JfCTuWYp5ng2KeVw4U81B2
LAWhGFE16erqQtceHbHWp/uwkJMTuwmBILfzKyoqAn/CDyJF3624uHjgctni
oyboM96+fXsYFyRHPgMCAlBEoAJ0S8PDw3Gz8ISEhKBkcMvx8fGibHTy6gL1
oa6urqysrHT4gFo3cnWgqqoqPz//pasJ7i4tLQ2q4e/vD84nv+4BCQkJycnJ
qKjwJCUlwVCBJzo6ms1mCwQCWCm4GAYMqhyqWWxsLK5xd3dH9SO3bUpMTMTF
+HckLrQxdr8KdizFPM8FxTwU8wwNrzrzUBh7GFE1KS8vR/UGH6KioiMJyais
rERVR02GcMQTQJcNNRx9/6CgINRkcmIs2KDvCBnxURM0MZCV0CY2NCCfYAMU
FBo7uqXot6Itk9+PUCxQWD6fP2rzlEcfuEFy48vcYQWKDmlCoYbxSfUCdRWi
P0K7nIsOiALqSVNTEzlNAx5IQ319PTIGpSPHqjU2NiKcXLMRFQktiNi8shnN
EE0MIo7yhzjGxcUhkfv376PRkQPVoE1I89UdH0sxz3NBMQ/FPEPDq848FMYe
RlRN8vLyyF2V0ccHZ5JjYGxsbMCZTk5OONrZ2RkYGCDKzc3N3NycyWQGBgY6
ODigp9b3k5b4qAk0EXcx2ByBIeDx48dcLhe0UFBQwOFwIK+QVPAhGjiYAToC
cRm1ecqjDLAWbhyV5M6dO/cIgAY7CMDf2toKTzsB2CG94R1/BmIHBra0tFRX
V6MMQZjDvpsnzCGhu0OOMvIJ9FZF1Png4GDUFhg8uHd4kE+oHkQkISGBNNtg
wpGD0yIjI2GuhIWFobIhCo0OTUz07aLE346lmOe5oJiHYp6h4VVnHgpjDyOq
JuiU5eTkQE3S09MhEPCgu4qqC8IPCgrCEfKBCo8oNgFUeISjnver2+KjJqWl
pYMNQR8akE/0TCEcoFZ0YMGNrQRwC6BBxKI0/vrEdvFETU0N2AzMLxAIcMso
WPTWa2trUQ6okykpKWBLWCOQG/KLKvkVmOy2k687EIh/AXmSq8EAfR9NWVnZ
SIzxG2zW8GgC9QTZ6LvdEvKDlmVvbw+bpLy8nByQZm1tDVPNlwAsN29vbyMj
Ix8fH8gKGhraFK7x8/ODIQczT/SPyOJvx1LM81xQzEMxzxAwBpiHwtjDSM+2
AFegl4rePblPNFo9fo6ki94jGkVzczM8qPBcLhfs2u97VlVVFWo+KOWlqwky
HBsbO5qf21AgL70DPkJITU2FOqN62Nraom8OAoR2kB15hIMYoaSIiomJwaNH
IcDqIIdgkXNaCwsLIRYwQvAv0CNYLPh3XNPLiqhXuGzY3ynhJ17uWxEYWmgj
/bbIIW8WzQRqgiKysrLKyspCCaNgIcow5MhRZ6i9OK2rqyspKYGf/OwOHX+h
L6Hib8d2U8zzl0ExD8U8/TA2mIfC2IM4rH6Danyv/V5bS5uluSWHzWm829je
1t7XFRYUGhoYlpeWt7W23e96Tif3uWry+PGjrq57XV1torgHD/4kHFBD0Ndo
fm4jt7oe9k9U4gAQ3a1bt1CYXl5enp6ezs7OEAU3NzdXV1dEIQREh349Oux4
oNAXKAuuISfDgjbpdLqxsTGO5CxXxFpYWKCP3zsPAoWGyjDs75TAyVCxgVvP
jxqqq6tra2v7fYyDMQY9hT0GpYuKikKxNDY2kqvc4HpoH7nXOQJRPrg4JycH
CkLuew5tIt/CiZiBV8KOFQWjzDzEevs9X6RFcV1dFPOMFCjmGRrGBvNQGHsQ
BzXJL87nZnC52dxrztdcQlzYGeyY7JiYnBheLo+Xw4vJjQmMDdS10w1OCOZk
chLSE7ruP+szxHPVpLy82tw8ycAg3dAwk3BZfTykyzA0RGy6gUGGu3v8vXt/
2rElOjp6NGeMgiKqqqpEH0H0CiEhIQFqgsIkdwxHtx0snUQAHtAdhCYxMREl
UFFRAQ7n8/lQGXt7e29vbzzlmJiYyMjI0NDQMAKgTcgKi8Xqy/O4YNjVhJzj
/LI+ud6/fx8GxsD9youKilCGkBIPDw9yUnBbWxuTyYRSc7lclAOiGAxGREQE
TgMDA11cXBAYFBSE1MLDw1GMkBgR3/OMGTt2lJmnouIWSp1Oj3JyinZyYhOu
19PjEEU6B4cof/8/Wa0U8wwjKOYZAsYM81AYe3hZaoK20Dt8KJQd6pLp4prn
6pLt4lPiw6xgwnkWeboVuvmW+3oUerjluznnOLvkuXiVeTkGOvbdUnAgnqsm
0dGJkpLcjz7K++ijpA8/ZMN99FHihx/GfPghh3DREydmTpxYMHFi/vvvF65b
5/Pbb//bQQasji6n6O3uL6Krqws/h7YP9hh7H/ggIpWVlQ8ePAAzk1tDkrMq
yB29y8vL0YVHXz6XWL8FHAhVhazg+fr7+4M8cUFpaSm6/LisubkZqkROP+/L
8yOhJsgPdA2/OPpPBL9YUlIidL4PNC4jIwO1hZxwAfFF+4KCQC+gFO7u7r6+
vhBiZ2dn8p2Sm5sblNfW1haxECBE4VmI+GLklbZjXyLzcLlxmzebb9zotGaN
9erVxqtWGcMjLW26apXJ6tUmq1YZrV9/Y9Mmp02bnNeudT5wwOTu3ebe/6WY
ZxhBMc+LYiwxD4Wxh1FQEzSBhwMAQlZTUzMwMED3LYgd5F3qrcnQNIsxC6oP
imiOCLkTYhBuoBes55jlaBhpqB+ubxhheMX/imOeo0uES1Nr08AEe4EuHrgI
zW3wC+I+/jjv7bdbJ0yIeustzvjxLhMmRIwf7zt+PGP8eL8337zx1lvJ77zT
9s47rePG3ZOSCr5z5087IYKgRm2EEqhj6dKln3/+Obh0GKcqiwnIr3tCX/hA
NdCd9/Pzs7S0dHBwCAsLs7GxAfvR6XSEIIqcR+Dq6tp3oSSQYd/U4B+Jr3sv
cdYwfpH8HjowCvcOgYMdRU7bIQeF4hR+HJFbHNEu4MGxvr6+oaEBfnjIWASK
/s36VbFjxY15bt7kbdpE37gxcOlS/R9/NJwzR23xYt358y/Nn6+xYMGlWbNO
rlhhuWlT4JYtQevWBe3fb/n77819b4dinuECxTwvirHEPBTGHkZBTdA7QzeN
/2eAH7788stJkyadO3fO0cPR95bvMYtj2ixtoygjE7bJJY9LZxzOHL5+mJ5F
x+m1m9egKWcdz+qG6Ro4G9xk3+QPDmNjYzR2Ho83+AU3Jk7MfOedlrfeyho/
PujNNy3Hj/ccP95twgTYsV4TJni88075u++2wL3xRvtAOxYpoKs+OsPG0NNX
VVX9/vvvIStj761IQUFBdna2UJVEDx39dPTx0WGHdsBDftHjEMjKyoLEQGEZ
DMYzNutsbGxENRj2qTEva9Ywqhy5FOpo/qhQvCp2rLgxj5mZzYYNN2Cprlpl
t2jRlVmzDs+frz5v3jnYsfDMnau+Zo3r5s2wYwPXrQscaMeOMvMcPEgxD8U8
PRhjzENh7GEU1AStAO264c+orq7W1tZGJzcvN48VyfIo8bjoc9G32tc4ytgg
wkDNWU2NrmYQbmDCMbnsf/lKwBWdQB1NX029KD0bf5uqmqqGwYHOMnrKuKnB
LmAwbn74Yd6bb7a/8QZv3LjI//s/nzfeiP2//2MRzu/NN9Pfeqtt/PiO8ePv
/eMfncuWhfSzY0GAfVfPG16gc0quFN0LPz8/mLIZGRkVA9Da2jqQ0NApRg6R
Tl1d3bNfCDx+/KSurrbfzz0Dw/56AT13ckbwQGlG3x+qAcYmHxnqDznBHFwK
hcU94gYzMzOfIesIxwXDu3Q8icTExODg4NFXk7KyssHEd5Txqtix4sY8AQFh
69f3vI9dvNho4ULd2bPPL11qMneu5rx5GnPmXJSSst60KXjDhh63Zk3w3r0W
/ezYUWYeBmPkmOcxrqGY50VBMQ9lx1IQipc4Sg2EAGZAk7zJu2kZamnga2AU
ZKTvo69F11IzVztrftY82NzQz1DPW++q+1V1e/WrbleNAozoTHr7vWdNdkDf
+dmjyOLi0hYtYk2bxv7++0DCBUybForj99+z4D7/3OfzzwOmT+fMmMGeMoUr
J+feT00gJTk5OSPUqO1tbXWvXNG9fFlfW1v/6lW4K1pap44d00HI1at6RAgu
gOeCujqXw7k/YOU98KeFhQWTyfT29o6NjX3G0nxdXS0HDoQvWpQxf37u/PnZ
Tx3pz5s/P4vw5xAua+HCqNTUkkePhpOZyW9VCQkJyGdubm5JSUnv9o7kC5O+
IQOBp1BcXCw0CuLL5/Px7yMxJwK/i8RHbaQiCdwIfhSqKg4vx14VO1YoXiLz
xMcn7d5t/PPPltu2GW7fboTjjh1m27YZEM5wzZqra9fq79plCbd9u+WJE2aN
jX/qQY8k8zw2MvLcu9dTQcFr714fuH37fOTlPTZssFRQ8CBDCOcNJyNjf/Om
oGvA6g2iM09nZ/ulS44HDngcOOCupORGOpwqKbkTR1cyinSKihaZmQXDO92M
Yh7RMfaYh8LYgzjMGr7beLeiuqLkVomxpXFAaEB+SX5xWXFxeXFFTUVZVRlc
XEqctoF2UnpSWXVZ3e26Z3Pac2dbtLS0ZmdXZ2RUZWTUPHXVvX42O8fOjunr
y0lJKU9Prykurnn48E8/B45Cd3vY17gmYaCnd+nsWa1z544fOnTi8OFTR46c
O378xKFDF06fPnbw4JljxxAI/2V19WOqqqHBwQM/XUGgyc0WHRwc4uPjB+az
sLAQ4c3NzQ8eNC9eHPPaa0U0WgmNdpdGayZcOY3WQISQ/noiqvX112E1D+d2
QiSQIBiypqamqKgopw+Q/7y8vJxngtwIUmgUVKaurm6EFilqaGiora0d5a3n
y8rKysvLh/0Nz9DwStuxfTH6zFNQUJ6XV5aXV/7U/c8vEKQ6OXkHBERmZhbh
tKzs1igyz6NTpxxWrgxcuTJ4yRL60qXOS5a4LlvmvWSJ8/LljMWLHX780ZPw
M3/6KWz+fCdfX3ZnZ//6LzrzdHa27dtnu3Klo5SU3Zo1XmvXeq9d67Ny5Q1p
aQ8pKfv165lSUg6rV7tKS3tu2BC4dKlebGwqxTzdFPNQdiyFQSAOagI8efzk
4YOHdrZ2sYLYrs6unv1RHj/p2VbmcY+norzC1MS0rrbu8aPnjw0TbTXyx4O5
hw+7Ght/z87OyMxMb21tIQL/BCTOH7Gdxw319S9fuKCrqbl7505ZPJtt2+R2
7VJRUlLZu/egkpLsjh0/b916SElJR0MDNq29rW16enren5Gfn5+dnc1kMg0M
DJBPkpb74tq1a/Pmzdu5c2dICHPePPfXX0+l0WJotDgaLZZGa6TRIgnb1YZG
K6PR7Gm0DBothEa799prxhxO/IMHI2K940GjPNuHD6D6kXt7MPqzhsmvmaOs
X8/AmLFju18C8zwZzKFx3b37e1ZWJsE8rUTgnzCSzPPo9Gn6Tz+FS0uzZ826
MnMm3MVZs67On2+1YIHFggU2M2dqTp9+YcECa2np6CVLPE1NXdPTM4bMPEFB
rJ9/vrpsmenChXpLlhguWmQgLe21YMGVVatcp09XXbXKacaMwz/+eH3evIsb
NrCmTdvP4wlG6PsXxTzPxphkHgpjD2KiJt3EHM8bN24I7ciP/u6QYKSKiorE
xMSB01ohMRwOZ4R63D127PnzelpasFcVd+/e/fPP2zZuVDt2bI+MzMUzZxTl
5GR27NgrJ6d96dLpo0dhx0LzCgaA3G6G3E5lYKyOjs78+fNPnz4dH8+fN8/k
9dfzaLQKGo1Fo1nSaMU02k3CjnWm0TxoNEcaLZpGM6bRsl9/3YDDEYyQHftq
YZRnW+BX0FtpaGgQh+96JMaSHdtNMU8PSDs2TFqaO336+Tlz9GHNTpt2aulS
jx9+0JWSYs2erT9zptacOQarV99cvNgDdmxmZtaQmScujr9ly+nly61WrXKe
M+fitGnKUlJ2hB3rNmvW8VmzTs2ceXTBAp1vv927bJnFd98pxsTwxGFw5ksH
xTyUHUtBKCg1GQzohKJkyD0H+y5wDR1hs9kjNHlT7+rVS2pqWufO7dyy5eTh
w/IyMjBcFWRklBQU9snLw6zdsGbNAUXFy+rqR1VUmH5+jY2NHS+I0tLS7Ozs
mpqapqbb8+exXntNQKMl0Wh+NFoEYcR6EzatJ43GptGCn5qyof/v/8GOTaDs
2O5RVxM8qdTUVLHa6Z6yY4XiVWaeR0ePOixbFrx8ecS3315YsMBjxgyD7767
MmOG4Q8/XP/hB7Pp07W/+urY7NkWy5dHzpnj6uoa2tjYNGTmudv4m6yM4fy5
egvmG8/8Xm32LM3Zsy7P+P7UrBnnp087OXfO1VkzL3w39dDc2fBcmvq1Ao8X
S9mx3RTzUHYshUFAqckzgERaWlpAv4mJib1b25B7DjY3Nz/334cAR0dHnStX
dK9cuXD+vI6WlsbFixoXLlxUV9fS0NA4f/7smTMnjh+/rKGhd+XKpfPn+Xz+
EAbL9U6z7bjXslPeev4a57nSbnNX0+dKu8+Vhv/GXGn7ntPVXnNXu85dbTdX
2nPeaufpS64KYlMoNekeXTWBSYOnLG7b3FN2rFC8yszzxNzcS1XVWVnZWVHR
XFmZvnev1b591nv3Wuzfb79vn5WCgvHu3TpKSvYqKrjAKjo64a8wT1tri8op
7R37L+9UvrxdSeNn5SvbD2hu239h274LPacqV3cc0Nq6T/1nFe0dSpeldx6M
T0iimKebYh7KjqUwCEZaTQZbnGRg6wBX29vbi5WakCBfj2Rk9IwHIwenRUZG
jtD8zTv19VUEqp8e+zqUw63Kyupbt6oIfyux4vSQf6u5sck8wN4zO9irMMS7
MNynMNSrMNS7MIw8Eg6B4d6FIb6FkcYRdmnZGZSaAElJSaO2GjnqHp61mEyy
6MUrYcdSzPNCuH37t/LyXwdzZWU1cKS/tLS2pUXIuluio7mx2SrIxreQ5Vse
6F8e7Fce6Fce4FceRHh6nH95CJMIDygPvc62Ss9Op5inm2Ieyo6lMAhGVE3a
29vT09MjIiIaGhp6x3rBU1tbi5B79+6R7RGKg/aSmJiYkpJSUVFx+/ZtCMqT
p+h+2WrS/fT1SEFBAZikvr5eIBDgODoLko8cmn5vcot3tUu0MY40ZFT5uuY6
mUYbGwTrOefSeQ+4cd0Cp0y6f62flcDco9ANsTlFOeJGay8FePSVlZUjNEC6
L5qbm8vKykZoRuFfgfjbsRTziDMI5nGzTbC51sM8fi65zibRJgbB+k65TrwH
MXHdsfQe5mFY9DCPu3OOM8U8JCjmoexYCkIxomqSk5MDBi4qKoqLi4uNjW1s
bMzPzw8PD3d2do6Ojg4ODkbvEuFcLpfNZrNYrICAgNDQUB8fn5iYGHLNZ3KQ
+UtXExIgEOgg9BE5xI286tTaoyYJbuY887NOZy95XrJOsmZWMo3ZxlAT7gMu
7z7PQmBhlWBlxjEz45o5pDv4BvrW1dX109DB5uciEBfDNigXDTA8Ruu+/yqQ
2+zs7JHe3QYFCNNlYIGLA8TfjqWYR5xBMc/QQDEPZcdSEIoRVZOSkhKIQkZG
BmSCwWDEx8czmUxHR0dPT094zMzMrKysHBwcyE2rjY2N9fT0TE1NcYG/vz8u
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
0quUly/foyhvoKpis2vnpZGxY2/PnAk7tpPYY9eHRnMg7FhTwqAlN3qwI/Z9
aIEdO358mq8vu6Agv/h5iI6OZrFYGRkZkNHnXiwiXFxcli5devTo0cDAQEdH
R9Rhd3f3vmvgixXGjB3LYHBXrgxfupQ7c2bovHmRy5bxly2LW7YsdtkyAXEE
L3FmzAjCBQsWcDQ0mM3Nzxo0SDGPiIAde+mS3q5d+7dtU9iz58j69TsOHryw
bZvcqVNXd+5UPHLk0u7dqlu2yCkrn5aRUdq//2RSUv+Vq5/BPLBjdc6f1z1+
SvfESflNW2XXb1Tcsk11l4zsuo37tu1Q+XkXAn+WXnPp4GGD02dPK+4biXEF
sGNVVIwVFFy3bTNavvzwwoWKq1efnTdPFgbtsmWH4F+0SPHHHw/Kydnv3eu+
bZtOYGBYfj7FPM8HZcdSEApxUBMbG/Y//1lHo3XQaNk0WjOxO2oyjZZGeBBS
Q6P9SqPVES/QmnfvDr97909qAopDu+uVj1FQEySOX+nb2Nvb22/dupWYmFhT
UyPKFyJxAGHHct55J2LCBNsJE2zeesvpnXfYb76p++67fMKarXznnfi33gp+
772qCRMY77/PH2jHksC93759OzMzE7dfX18PbkxPT4fQnNW8rHpWQ0X9kuKp
U3D7z6gpnnzqOXV63+kziidPqpy7cPCC1i8qhzgjoCawY7//Pp54H1tAbFUW
QKNFEqZsNY3mRKMF0WhuRGAb8T42UyAoaG9v63oe6urqysvL8fRxj8+9WESQ
X4qrq6uRbFVVVUFBgXjOFyYxZuxYR8dIScmEzz7L//TT0M8/z/j00+jJkxmT
JwcQnpDPPov9z3/iP/ss7pNPIj7+OE1Z2bex8U9z2ynmGRpgx168qLt798H1
63fCbd4sq6BwREpqg6LiMVi2x49r7d9/SkZG+cSJyzt37tu37/hAO5bEYMxz
6Yr6WY2j5zSPHD2nfPSs0vHzKsfVDxw9p3T8HDzKOB45d+DMpcPqWscPHJGP
4XNHwI69AztWUdF982Z9KanTy5fj7k799NOZ7duNFy7ct2zZsUWLDixbdlRW
1l5R0RN2bEpKBjmmhWKeZ4OyYykIhTioia0t95///I1Ge0xshNpOowloNA/C
5EgmzI9cGi2GsD0Qe1tOLvLu3f+9jwV1x8XFeXp6BgUFsdnsO3fugOdHYdgY
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
zhUVFenp6Q0NDcvetwl2I/Yn8+6ZWq3Oysqqra1tbm6GKWNXG1aPeSXMkJ95
tUdHh+3sgo8d8/3mG5+jR12OHnX+6itXDJnM4cP2n356+csvXTH22DG/I0ec
c3JmdUdiTsDr/aP8gxRBgfGBAaoAH4mPv8LfN87XV+qLfKAyEOVMCo4Pdot0
q9HUzOa/SElJEQqFcFhyE1Mg5Zklo6MjOJv0wx9TQkJ8TU310NCgcSESTspb
1rYOlGfI2jrs0KHQQ4dCDh70+vRTz88+8/n00x8zBw+6ffyxBTL6CbgHD3rm
5BST8qwWKI4lWFkJbiJWiQNyAsKrwgNLAsOqwvh1fEG9AENeLY9Xz+Nr+OG1
4X6FftwqblhlGCecc83i2vNbnt+6dSuuTyuMYD7bV1dXt+D6nJdXfPJk5Ndf
C7/5RnjsWAyT9uzx2b8/+Jtvopmf33wThbFffSV0dBT09Nz6+VdnZ6dIJOJw
OFKpFAIF9b7lat+4MSqRZPj7J/v6ziap6uu1M9TZ0dFRXl4OR4OJwJpLS0sN
757l5+djrWDNw8PDzJd0oJytra2YBT8h+729vVjnmVvOarXXNRqtRtOsT9pJ
qba28WZ5M/KLEQCMjY5db7ne3NKsbdFqW7W6Nh2GSIXFhU3XmybyLf+bmnXN
g0OzaghcXV2NI22uD3bXEmsmjl35ylNQUGRr62ZpOZFsbNytrSfS999fPnvW
2srKjflpZcXBWAsLV2/voN7eW59H81CesbFRlSqJx5NGRt46cbmxDQ0zdT26
yMpzo7m5pbZWq0+6KQmFTTU12psTNM9mj80VUp5FguJYgpXlchMIlFwuZ17Q
ilZG87Q8+bCc28B1SHJAspBZcLI5gjZBQGVAWH2Ya4ZrbFesbFQmHha7R7l7
+Xq98MILmzdvxiV8sRFVVVXYlgW8uGa+Oo0KJZKkRx8V/c//pP/lL5n33x+1
YUP0hg2iDRtiN2wQ3n+/+IEHxCj8858T/vKXjPvuy3znnYCWlpmkRqvV9vf3
Q+eRwSaIxWJYIfR5uqts+A5kXO8LA2++GfvHP1befXe9PjXdfXeDfojUfDNp
b45NiovLm/TokLmhlJWVBQdJTk7Ozc3VaDTYaViEcYfecBmFHolEIhAIQkND
sZ4Yent7Y8aIiIi4uLiYmJjV0th5EiqVypTmLQ0NDdg/q3TbF4RVHceuLuVR
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
KFQff/zdvn0/fPLJ6X/96+t9+0598MHx99//Gvn33/8G6b33vt679wTG7tlz
8tixc+3tM70fO2/lGRoa3L/ffOdOp1273LZsubJ58zdPPnl006Yv//Y3ZL7e
ts1y06YjW7da79rljAmee+4sh+OXmppGyjMJUh4ToTiWYGUltBqOjEx4cav4
yScV994b9tBDsZs2xf/tb4mbNyc8uVm1+W8Jmzer/vqo9A/3BD/6mHTTk7Kz
Z/ldXRMtTCEmOKNx1Z+ZmTmzGpvO9ettiYklSmWJSsWkUqMhkyk1/MzOLhse
nrbFByQRGgtDwco3NjbO6SODN24MBwWlWFikmpunm5unmJur9Sne3DzR3Fyl
L0kwN2fGIsVXVGjq6upwFY+/eCn72FEqlcynxrGNoaGhrq6uMBRLS8vk5GRY
J0pgMfjLAgMDPTw8EA/AMrh64Dgo9PX1FYvFmEwgEISHhwcEBDAtPmQyGXMr
BvtQoVDM2xEkEokpb6nhkMOaMJ9Gmnclq5rVHscaiImVHjl67fND5u++d3zf
J2cPH7Y4ctTqyFHLw0euHTmCjMXBgxfffOurg59e+vSzq/b2Ht36w2Yplael
pTUzMyc9PTstLdswvJnJMeSZVFhYPMOdT1OUZ2xsVCCQeXtHI3l48N3dkSL1
iYehp6eAw4n08hJ6eU1MwOFEVFXVkPJMhZTHRCiOJVhZLjfBdS40hLm05HCU
/+//1d92W9fPftb+85/X3HZbw223Vd52WyNKbrut7rbbOn/+846f/azjttu6
kT78UNTW9mNPKZgXalxdXQ2ZqqqqWrzbI/p7ocOzTND8GaqCrvL0QNOgkCKR
CBfps7/E7urqaW/vamtjUvdPU9fNIZM6R0ZG4WuoPCsrq6WlZckMBVKv0+mw
RczjS3gB5BcbC2srLy8PDg5GCY46uAa8g+nN0tPT08XFxdzc3MfHx9nZ2cnJ
CXk7OztbW1vYkKOj49WrV2FSzJ0QeArsZt5uEhMTY4qbYE8iDJi5z7G1zaqO
Y42VJyxM8NFH1vv2uX70kd0775i//77lO+9cwXDvXsd//cti716nPXvs9+51
/nify/vv250969jZ+WPzoqVUHv1D9eFZpJFFVR5sb0dHZ3s70wKs0zi1t/84
xFgmTawxKc8USHlMhOJYgpWFchOmS8DOzk6caGVlZSUlJRqNhvk6dokeXAVD
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
EseS8oyT8qxpKI4lWDHdTWAKs78rAt+BvGRlZUVHR+PKlPnSH/KQX/ysrKxE
hRiL69aIiAg4AlwG00D6ysrKUF5cXFxTUwPTwU9oAjKQ7vT09OnEjctV/epX
CF+r9d9sLTczy9dHsxlmZjn6twtq9eU/puefD9XpTHITGFlCQgJWGHIHl+xb
OFpaWmCy8fHxposYY0kwFFh5amoqKkdmoHfAg+cRUhrCreVya7gRdRFh1WFh
NWHIh9VOZPAzQhOBfERNhEuaS1xi3Mxrwnx5BzuhoaEB2lvzU2r11MwI6zQI
M7DC0xkZ07u7Zkby8vLOnDkDT0HlM08Jmpubp5pOdXU1KjGl/5zVzgqJY1ey
8giFkuees/37392fe87zmWdcNm+2ffJJq02bLDdvtnnmGcdnn/V89lkPJm3e
7L5nz7WZv5xyS0h5DJDyrGEojiVYMdFNcK61t7fPviFqd3c3LvBxkkIbVSoV
dAxmFBMTk5uba2Njg2tenKoQZJzszPMX6CfGRkZG4qeLi4ujo6O/v7+zszOP
x+NwON999x0ybm5udXV1rOtQW9sQEpLm65vi65tqlFKmlEwkmSxzYGD+naIA
yB2szdC41QB+4hofmwxDxCYjk5+fX1JSYvjYFswCPgvh1el0uN6fqmD6T+oM
wXmxf0zprBL7H97NvCGGFUBtWGE+n9/T2eMt8Ra1i+AUlwSX3LLcrkRfuSS8
ZBFncVV0lZPBsZRa2sbbojCqNSpEEyJLkg0MziqEGF1QZnighohCoVBgu7B1
qTMikUiSk5NnnoYBkQ9zTBrvc/wLzMeA6OmeKaxt5amrq+fz5eHhMkOKiIiL
iJAZl9xMcUpl8uAgKQ8pDynPLaA4lmDFRDeBOuHknf2lOk7A0tJS+AWuK7lc
Lgylvr5eJBIV6GE+sAK/yMjIiIqKwjV1RUUFc/oLhcKwsDB4CuzD0tKS6f4R
YCzKp/tGJAr13+OeVRocNPXZGaRsuvszoaGhQUFBAQEBsBJsDrbC09MTm8k0
GYBdwlWxFchAqaa7+wH9N7GfHNgWlotFwIKx95iuNX18fLo7u/3l/t6F3j5F
PjZKG2u5tZXcyjnN+bDD4eDK4Li+uKuxV495HjsVeCqsNiy0LlSeIp+lmywN
HR0dMpmstbV1QM/gwoHYADU3NTUZ/la4CX0dctnj2LWkPENDpDykPKQ8t4bi
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
bkIP7whi5bP24lhSHoJY+VAcS7AyyU3Ky8vFYjHzNK26ujozM1Or1WKIn0lJ
SYODgw0NDaWlpbm5uTExMQUFBfn5+SqVqra2FnPV1NSwdjNOEMRaYjHiWFIe
giBmhuJYgpVJbqLQo1QqHRwczM3NuVwuh8Ph8/nwFJlMhqG7uzvsIzY2Fv4i
EomkUmlUVFRycnJ4eLhcLofdLOO2EASxBCxGHEvKQxDEzFAcS7AyyU3gI0Kh
MCAgwMLC4uzZs4GBgbAPHo8XExMDZ6mrq8MQY/EzMzPTz88vISEhNDS0tLTU
w8OjuLh46rfLCYJYYyxGHEvKQxDEzFAcS7AyyU2QT09Pb2trq66uhkcgn5aW
plAokpOT8/LyBgcHKysrDaNKSkpaWlowbG5ubmhowFxNTU3MAz7Uc8snfXQL
hSBWI4sRx5LyEAQxMxTHEqxMcpOioiI4RXFxsVqthkHgZ0BAgFQqbWxshHHU
1NR0dnbqdLqcnBxYTFVVlUajqa2thYkMDAxgRrFY3NfXh58hISEFBQXwF40e
TAPHkUgkFRUVqAQ1YyyMCVOitvr6enq9jSBWC4sRx5LyEAQxMxTHEqxMchOZ
TJacnBwVFZWbm5uamlpdXW1vbw8rgblYW1sj7+TkdPLkyfDwcEdHx8DAQBsb
G2TMzc3hFHV1dRkZGXANKyurH374ITg4mMPhCAQCd3d3FxcXTOPq6gpvEgqF
KPHz87t48eLly5dRA2rr7+9fxp1AEMTsWYw4lpSHIIiZoTiWYGWSm6SlpcE4
pFJpYmJiWVlZfn5+dHQ0n89XKBSQfWdnZw8PD39/f7FYjCHMBR4RGhoKW4mM
jCwuLkYGZgHXcHBwQElsbCyMCRMgAxuClSCDCbhcLuq0s7NDHraiVCrpSR9B
rBYWI44l5SEIYmYojiVYee+991paWgw/R0dHu7q6hoaGUDgyMoKfGA4PDyMD
wR/Sg59MIfIoHL7J2NgYSjCKmWzkJsz0hhkNJZjXUPky7gGCIObE4cOHoRsm
VkLKQxDEnFgQ5SHWHvfcc8+777679yb79u375JNPkPn444/3EgRBTOHPf/4z
dIOUhyCIpWRBlIcgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
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
e4f+b7Lh2Pz78L9t3Ww5/hyRTGS4BwItxfXp73//+/vvv18mk3X3dA/Mjv7+
fubB3NDQELR6ZmWAdcI0De+w9fb2yuVyY/Nqb2+HwiySvGCXwq/j4+MDAwP9
/f3hZcZ3YFIzU72ivLxF3t7iWyRPsWdodCgMZcHXcL2BaEosFq/n74SuqP4K
SHlIedYJpDwUxxKsrITeb8QKMUfF8U73dlI5cZI43mnePpk+vhm+SD4ZPkhe
qV4OCgcMPdI8vCK9cIFvmDclJeXYsWN79+499PmhYF6wKEEkUotEiTeHk5L6
xxQeE56ekc4YhFQqnVkZdDqdWq02foCYnJxsaHPB0NLSkpiY2N29YM2ZJ4HV
EwgESqWSadzR1dXV1zdxiyNGEcOt50qGJFE9UaIBUdxYnGxMhoQMUkxfDApj
emPEw2LxiJgTs5ANrtct+K8bGxvXc3f0KyqONQVSnltCyrNyIOWhOJZgZSW4
SbQiOqYjRn1DnTieqBpXOaU6SXukqn5V/EC8elitHp9IGIWhYlzhK/E1dhMD
ubm5tmJbrobLbeaGNYYxw7DmsNDG0LCmMCRu48QoJF4zzzzKvLKmsr9vooFz
fHx8bW0txHm6Wyj19fWYprOz01ACMUlISOjo6DCerLy8PCsry3iyhaWgoICp
HMOTJ09yOJzq6uoYeQxfyxe0Cr73+95SahnTGSPpk4h7xNI+aWxPrJXMyiHR
4ZrkmleBl2xI5hnr2dndufT/7xoDf3R6ejoiB7orYgqkPKQ8xJwg5aE4lmBl
hbiJQDfRahhWohhTnIs855rheoF/4Zr0mnuOu3xYjnLluBJJMiKZcJP+iXYH
zHtiOKNHRkYGBwfLS8t90n1UQyr4DsQzqCrII9/Dp9jnmuiaU7ITMj5FPqph
FapKHk92VjmH8kJlMplCofD29vby8pJKpYppiIiIsLe3F4vFhhLMaGNjw+fz
5XK5oVCpVLq4uAQFBcXFxU1XlSmo1WqVSoWliESie+655xe/+MWej/a4+rjC
HEX9ouOex495HbsUfel06Olj7sdOBZxyTHR0y3azVdkGVgU6JjnKBmWWAZaF
RYU9PT2L2jZkzZOSkiIUCuktNRMrIeUh5SHmBCkPxbEEKyvNTVQ3VFdirpwM
OHnI9tCXzl+e4Z6J642bKNcn6YjUT+LX0NTg7++fnZ0NYezo6KiqqkpKSgrw
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
8EDi/fenPvBA8oYN0vvuk2zYoNiwQX0zr7z//pQHHkj985/T7r6bGxmpXhDl
2b/f49FHxY88onj0UcWmTQmPPsp/9NGQv/419q9/lf/1r4pHHpFiiPTYY1h6
oL+/lJRnzUNxLMHKOnETCPjAQJ+Hh/vjjz967drV9vaWkZFBpN7e7qysDKVS
Fhjor1bHw0+GhgbGxiYbCurE9TVUqLOzE2voX+ivHlb7lfjZKG1C60KdU53j
BuO8CryQd013dUxy9C7yDqwIVI+oXZWuVbVVHe0dnXpgWDKZTKPR4Jq6kw1o
YHt7O+uozs72Tz912bGDv2tX1M6dgk2bzj722Kknn7z497/bbdp07rHHTjzz
jP3OnVEY+/LLsc8+6x4cHN3Q0NgyL7DDd+3a9d577/H5kZ99ZvPyyxGvvCJA
evXV2KeeurBx42fPPmvzwgvu27Z5Y8iMffXVqP/P3neARXX069/7f+6935d8
GjUWQFTAGBUM2HtJYokoajQxlliTaOxdbDFWVJAmHaTDUndZOktZlmUpS2fp
HaQFFKUKYgv/lz1xQ2DRVQFXnPeZZ5idOcyZM2fmfX9zzpmZr7+2tbVllpdX
IIdmIUC5CON2PHnyBNdFZQ5WFyUhEjLh7u4eHh4O2vfx8YG440abmJgEBgba
2Ng4OjqamZmhYSDs7OxsbGxsbm4OrUHYycnJ29sbqZ6enqhSX19fBoOBJNQt
NMXIyIjJZOLf6XQ6Ig0MDKCPqMTuFuSUHGS2BbFjxUJi5nkMRzEPh/NeMM+D
rVudpk5NnDJFMGVK4mefGY8da/D555YTJriNG2c2dqw+AlOnJk+dmjptmmDi
RH8aLfjtmcfXl/nzz+bz53PnzYuePz964cK4SZOMP/vs1JQp9jNnMmbN8pkx
gz5vHhdJCxbETp3KtLLyIczT70HsWAKx+EDUpLS0ks3OCw8vvHjR/pdftLy8
UoKD84KD8wMDc5ydox0deU5OUY6OkUxmSlBQTlpa0ZMnf78Xg4hgFAzSy8vL
S0xIpNFodkl2vCe8WxG3Tlqf1A7Qvuhxkd3IvuRx6bLX5UuMS5q3Na/5XqOX
06OfR99i3QoJC+HH8uOESEhIAOm5ubmFhoby+X9FdgQO6Br5AlFbt+rCgl21
KgCW6rx512G7Tp16cvLkQ7NmXZoyRXPpUjsYscJU1tdfW+vpWbHZ4bw3Aupw
+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
rrDdp5IQ2J2w+0HzA0ny78o8Dx7c27Hjyrp1+mvW6KxZo62hcU1DQ2vlyiur
V99YvVr722/1EF6x4tK3395ct+6WuvrppKT0ZxLYzIR5iB1LIBZETSSB5GrS
JlwqBwXuahEhBiqTmZkJHZk7d+706dN9mb42YTbBDcEuxS7Mu0y3UreIZxEh
jSGe5Z5+D/x4z3mRzyPDWsM8KzzDm8Od852j4qNws+olA+jo6tWr/v7+ZWVl
YWFhgYGBAQEBlChQ60NilA2VoQ6GSIHNqDD1xEaUhMOQdO3aNdyClJQU5IY8
vb294+LiampqJCwMgKG9vr4+P5afW5T7ec3n//38v/+r7b/+7/H/Db4/aHjV
sH89+tf/tv7PoJpBn9799KPGj/77z/ZUuG8Kvyl4UFBfJ9EpwPNoQgwG48yZ
Mw4ODklJiZqa53/7TXfPnhM7dx7YsOGnjRt/Wr16E6zZrVv3HT58/ocftq9Z
s+ngwbPnz+v++uvxpKRkXOnjVyEnJwdsD2VEe3jlwRICDQN6Qc0lx51CGw4P
D4dm4XZDIisrK1NTU19XvnsPxI4VC8I8Us48mTmZStVKFPP8b+v/Drg7YFDZ
oP9r+b//af0fhD+p/ORftf/6rz//i2KeL7O+zK/JfzPmSU5O3LVLb8cO17Vr
9VasuLx48cmlSzUXLNi7atVVdXXQjtnixScWLNi3fr3x9u1ua9dqJySkEOaR
BMSOJRALoiaS4LXUpKKiAkzb6WBwclFREZJwFUlJSZs2bVqyZMnBAwf1GHqe
pZ4nbp/Q8tE663Q2qCHILMbMKMLImGcMWfEo8XDOc9YL03PKcXLMdaR50kA4
8ZIBjDpq1KiFCxeCV21tbXFqZ2fniIgIlA2p2dnZ4EOoA3Xw/fv3qQ0ZEQZb
dkxCZWKoDvkbOXLk/v37qec5BQUFJiYm1FtLCbFs2TJ5efnNmzcHhgaq3FP+
f8//H8RC7g852SpZhTsKcKPKR01NmTIldfLwe8OpVLjFWV+HxYTFx706fzA8
ykOj0RwdHZWUlD7//PPz53/bs+fYuXM6sGM1NDZoaKzfuPHn5cu/3bZt79Kl
Gtu37//55yNbtuzR1Lz62283d+486O8fgGsveBWgVpaWljgjquWVB0uI5ORk
FRWVSZMmQXBxv0JDQ3EVaHXSufARsWPFgjCPlDOPT5DP53/8NYIeVjrs0/JP
5fLk5PLlZIpkxkePn8CfMKRyCJUKNz91fmh06Jsyz7lNmy5t3+68dq3u/Pl7
5s3bDTt29uyf1NV/nzHjRw2NS6tWaS1ffv7HH21h665adcHXl5WbS5jn1SB2
LIFYEDWRBOjXL1/9piNQfrBBp3cxGPaC6Oh0urW1NfySkhIUsrS49HbYbe9q
79MOp21SbG7432BUMbRZ2v5V/vQKOqOU8RvtNwOOgRnfjFZAg5qE8cLKysqq
JYOnp+dvv/3m5+eHc0EC+Hy+h4cHiKuqqgqpOPujR4+o93QAwvX19VQYUtIp
CTFXrly5efMmJCYzM9Pf3x9jdh8fH9wXCQsD4N+1tLTap58UZk+8N5HSC5lq
mSEPhgyuG6SWqjYrbuaEnAlqArXBtYP/fh6b/01WWVZ1lUSnuHv3Lq4Lmqip
qWlvb5+UlHD06JnTp6/v2nVs06Zf1qzZTD2S3bRp97p1P65duwW265Ytv2pq
ap09q7Nt2x46nYH/TXkVIMrGxsZQLkjAKw+WEDAS1q5dCxvDzs7OzMysuLgY
Ny4jI0N6vkzriK5qkpub++WXXw4dOnTDhg1d+69YEOaRBIR5epB50nPSx/0x
jmKeoeVDB1UP+s+D/4yLHacSoaKQovB57OcD7g0QMc+XmV9mlmS+GfMkJyfs
3KmzZYvT6tXaS5acWbBg/5Ilp+CWLj27cOHhhQsPrVhx+ZtvYMc6bNtGU1f/
zcODMI9E6BHmIeh/IGoiCcBU6O+Sf5gEqsG/dBzS4qJAGuh0tra2TCaTmnPa
3NRsx7ZzznK+7nfdt9L3N6ffbgbd1A3Wvcm6aZ1k7ZThpO2nrR+if8LyhGOa
o3WKdVJ6kuRfqYmObP8kVbg+JLVrz2tdeMfyi8L5+fkg0pycHNTz/fv3JcxT
lEPFvYrpldM/ffjpkJYhQx4OGV8yXuEPhc/Kxk5Pm65coDzqrvyw+mHtSUL3
fcH3NY9qXquoz4VAoK6u9syZS6dPax06dPbAgVNHj57ft+/E4cNn9+7VRMyv
vx7bt+/U/v2ap05dOXPm2r59x7OzcyW5Fmo18oaGhtcq1cuBxlBYWEhtLYqW
FhQUZG5u/h6pybZt2/7rBdhstiSZEOaRBIR5epB5SipK1ErVBjcNHtQ8aFDj
oDF5Y+RK5cYUjFGJUxmbOVa2QhYj6MEPhakPB63MXHmv+fXap4h5GhoeHDyo
v3Pn7c2b9TdtgkFr9MMP2ps26W/YoI2Y9eu1Nm7URnj7dqudO202bdLKyson
zCMJeoR5CPofiJpIgtbW1tDQUMk/E8rLy4N2dLoQFAnk4OHhAU2hWKL1USs9
mO7GcXMOd3aLdnMMcXQIdnCPdjehm9iwbOh8uqmnqTPbGZGuXFe7ALuc/Jw3
kAPwHphfIBCgVNS05dfNQQScHZJKrcYDRg0LC2MwGLW1Es3DEuF+3X3tAm3N
0pMny06cKDtxvPz4X67irwAiTwrdidLjVnlWTY/ecOEXFNXX19/d3dPNje7u
3tUxqICbW/sBLi7u0FxJmg10GWzfq6uR19fXozA8Hk86l/HsqibHjx8XqcmF
CxckyYQwjyQgzEOhR5jn3v17l7MuHyk4crjw8OGiw4eKD7W7kkMHSw5SYUS2
JxUePlR4yCjNqPHRG/Y+FJXJZDk6ejs5+Qqdz4sA5fyogKMj4r0dHRlVVdWE
eSRBjzAPQf8DURNJgNxYLBY1aJUEDx8+DA8P7zrNEyJSWlracaj7qOVRU0NT
U2NTU33Tw8aH7YGGpqSEJH4M/8G9B81NzfjZHi/03+ybJdSbj4+PtbW1u7s7
KkfsNpeSgHq6gn+vqKhAVTCZTC6XGxgYWFdX91r5tN+a1jZJnfS9KaI+KusD
nk9KSpLOD9W6qgl66Lp16yg1+eWXXyTJhDCPJCDM09bjzNMikfuzVerWGSPM
0yPMQ9D/QNREEqBHBwcHS64mAJi2ulqiUXZXgLQ7LgX5lsD95XA4jo6O8fHx
qF7Uz5ut3AJxjIiIQA64NBQvMzOzqampH6wq+bpAfaJB9tTdeQkgWJWVlX1w
otdFd7Mt1qxZAzW5du2aJJkQ5pEEhHnaCPO8AGGeHmEegv4HoiaS4JVq8vzZ
86dPnnZ07RMT0jNbmls6xUvy3RFoJDw8vKdWO7l79y6bzQ4MDESGGRkZaWlp
b/ZUpKGhgcfjQemgSlpaWhUVFR+glLT18u6QnYBKfptvC3sJYtUEzeNf//oX
1CQyMlKSTAjzSALCPG2EeV6AME+PMA9B/wNRE0nwCjX5s624tDi3JBcupyQH
DoHY5Fi6Hz0tL00UT/lZBVk1D2pe/soGaiLaGqZHCk99V9bWYQrGGwA55OXl
xcXF5eTkuLm5QZigUzU9B/AzLlz6Faov1QRnATlL1daQbeLUpKioaPbs2ZCS
xYsXS5gJYR5JQJinjTDPCxDm6RHmIeh/IGoiCV6uJs+ePLP2sXbPcmcUMtxy
3VxyXdwK3JyznGk5NJccF/ieBZ6UjwMs+BbhMeEvf2VDrZ8jnV/aU9+qpaam
CgSC7OzsrKyszMxMkU8FuqJTfNYLdIyEPCFPREr58il9qSYAKgTyLVXThzup
CfrsJ598AilZsGBBWVmZhJkQ5pEEhHlEIMxDmKdHmIeg/4GoSXegtiOnwi9X
k6etTx1CHDgtnLCHYbQCmlWSFXzjaGOXQpfbKbfN48wZlQzHLEePUo+oZ1Ge
FZ7sOPYrPz3CVbzubNy+waNHj2JjY/Py8lDJDQ0NYDlUDjWVGAHqZ1fgnnaK
wb90isRPNEVkLnZPIulBXFycv79/n6nJw4cPi4uLpUphO6lJYWHh4MGDzczM
XqtCCPN0B8I8YkGYhzBPjzAPQf8DUROxKC8vZ7PZycnJGKfX1NSgbC+ZNQw1
sQ+xD28Ody10vZ16+5rvNd0Q3YNGBw3CDa76XD1td9qMb2adam0RZ8F9zHUv
cw/nv+KpCBAaGgo1kcLuWVJSkpiY2NjYWFBQwOfzUVGQ3bS0NJS2rq4Obamp
qQkEiEjqPkJfcDDqEPE4APFPnjzB5aNu8b9IQt1Sx1MXi8genGnSGwB5pqSk
9OUzK6g2uoD0PBjp+nbvDXZgJ8wjFoR5ugNhHsI8PcI8BP0PRE3EAqN+Z2dn
b29ve3v7+Ph4FAnZdkcglJpwW7iepZ42aTY3w24aRhhq2moa8YwuMS797va7
Pkdfj61nlWzFe8zzKPeQRE1QD1L4mX2bcA1D0CnuBUqYmpoaFRXF5XLd3d2p
fSchwTweLzIyEgEk1dfXZ2Zm4mdYWFh4eDgUGT4OQwydTg8WIiEhAdKZlZVF
sSUkG/8rPTt6d0VFRUV+fv5rTSF/S+BcqFVUppRYF2RfWrEgzNOrIMxDmIfs
S0sgFkRNxAJD+KKiInRhaEp2djYG8tRqNmJnSTx7/MzGx8Y9w90ty80wxFDb
R9uYbQzfiG10wenCRZeLugG6v9n+ZsI2YeQwLGMtOXzOK9UE425p+zaJAp/P
Ly0tRVVQ7/jA/Pr6+oaGhg4ODkFBQU5OTra2tsbGxmZmZpaWlrm5uQEBAY6O
jiYmJriDiDE1NbWwsNDT08O9xjGINDc319XVhaZQM0Fw43AHpXmULRAIIJ11
dXV9ye1Q24yMjLeZLNODIHasWBDm6VUQ5iHMQ+xYArEgavISYERPvclCnmfO
nLGyshK7J+Cfz/+MF8RHp0dHZ0ZzBVxuKpcn4EUKInlpvPCkcEs3y6DoIE4y
B/HRGdGIKS4tfuXjjtTUVKlVk5KSkkePHhUXF+fn58MHtYaFhSUnJ0N/09PT
qUclcXFxHA4nLS0NVwEaRNje3t7Pzy8+Ph5J+BeOENHR0eHh4ahY1LOIKoOD
g6VZTfr4KzUKMG9gYEjJS09ix4oFYZ5eBWEewjzEjiUQC6ImLwG0o7m5GQXD
MF9JSenXX38Fh4gv/NNnj1sfU+5J6xNRGC4nMyclOaWpsUmUKknZqE+hpOob
ewpQEygINbdCtKIOVA/huro6aAduE2SF0pSgoCBKdCArXl5eEJHs7Gz8xDHQ
oydCQDigQVAokcJKuZr08axhEaqrq9GwpWGTHWLHigVhnl4FYR7CPMSOJRAL
oiaSICsra86sOTRn2ht8PYXLEQgEINjX+uSspqYmMjLyzba/6VVATbq7ltLS
UldXV39/f1tbWxsbGx8fH3Nzcz8/P2dnZ/yk0+mIx08ajVZQUNAxh05h3MG+
/AbsdREXF4er6Hs1QdtLSkqShpohdqxYEObpVRDmIcxD7FgCsSBq0hGtra2p
makpOSmdXFJm0qFTh5gsZlJWkigyQZDQ2NTYJsF5GhoaEhISuvvITSxqa2s5
HI4Uqkl2dnZ3+6TjNuEOUt+qubu7c7lcT09PFosVHBwcGBgIJkRqaGioh4cH
blB3+aOuenAl9t5AWlpa33+l1ibsIGhF1COpvjxvVxA7ViwI8/QqCPMQ5iF2
LIFYEDXpiHt379kG2dLT6PSsdsfIZsDRs+leOV4OcQ5uaW6ieGYW0zTAtOhO
0fNnEgkECk998CZhSZqamkCq0jAE7oT6+vrIyEhcTldlrKiogFhANEtLS3HL
8BM+jqwTAspYWFiYkZFRUFDQ3dd3uPXZQkjJtAKxwHXhEt6J3qGr8vn8dy61
xI4VC8I8vQrCPIR5iB1LIBZETTqivKzcNsqW3cJmVDGsBdZe97y8qr1s0m08
KzyZd5msRyxGNeO24DZSI55GWPItcwtzJR+i5ufnSz7xE3z7kvV23iFQseDS
lJSUrKwsBIo7ADGIh2QUd4/U1NTuDsjLy0tPT8/JyYGSSskyL2KB8iclJb2T
WwMFR52/80/4iB0rFoR5ehWEeQjzEDuWQCyImnRERXmFQ6xDZGukQ5bDKbtT
OkE6prGmtxNv0/JpNwJv2KXbOWQ6aNppWsRZRD6JtI63fpWaoAzPhX67e/Lk
cXp6aklJ4bNnT0SRL5wYsFgsKVSTNuH0ivLy8tzcXIhjWgfgZ2ZmZtpLgQMg
GWKT8O/SLyVt72jWsAiofMjZu33tS+xYsZA+5vnLgXkyMlKEzPO4Y7zQiQFh
HukEYR5ixxKIBVGTjoCaOMY5RrVGOWY5nnM+d9r+tHaQtscdD1oeDeFL9Etm
sWa/e/zuXuAe/SzaJsHmJWpSWlrOZMbT6XAJL1yioyPn+nWaq2tMh8gET88E
LjeltbXzVbPZ7B6fNtKzaGlpaeo5SMnSLq/Eu5o1TOH58+fJyckdJ1n3PYgd
KxZSwzwVdHqyq2uKq2uqyNnY8K5edXd0TOgY6eKSGh6e2tra+TktYR7pBGEe
YscSiAVRk46oLK80DzX3K/MzizP73e33q95X9dn6hhGGJjyTK8wrFz0uIkaH
pcMsZwbcDTAMM8wpyOmuU4eERC1f7rZ4sd+SJXD+ixf7LFniu3Sp39y57ogU
/vQRJvktWuR78KBdbW1Tpxz4fL6U7/f9YeLdqkmb8Fs1dBPo7zs5exuxY7uB
lDAPixU9d67/tGm86dPhoqZN406fHgmnrByMyGnTIqZNw88oOFXVqN27XR88
6PyymDCPdIIwD7FjCcSCqElH1NfV+0T6sFJYvnG+bmw3ZizTN9HXM9LTm+/t
EOxg4WXhGu7KjGEGpQYFpwV7cjyrqqu6mwjs48OZMYM1ZUritGnJU6bwJk50
U1b2UVFhTpoE5z9xoouqKnvq1ORp05ImTUrcssX+/v3O5JCUlJSfny+FC5J/
4HjnaoIml5KS0mnacktLS3Z2dqdZMOgIaEINDQ0dj3z7pUGJHSsWUsI8TCZ3
7Nh4OblSefkKObm8ESNCZGSiZWQiZWR4srJxw4cHy8oK5OXL4IYNK1u71qOm
prMdS5hHOkGYh9ixBGJB1KRTGVAb1dXVkIm79+5W30Ww+u7d9j/oqoFBgWXl
ZVRkFVBd9RKq9/WNmD2bNW1awsyZsGM5EyaYjRunp6JCU1FxHT/eZNw4AzU1
/xkzEuFg6373nRmfn1RcXAyKELGB1G6s84EDrTEjI+MdPpRoE64RhAbYceZO
bW0tjUaDzD18+BAttrCwEDoC0aHT6QUFBWjVKDYiS0pK+Hw+AkVFRehQAoEg
KysLkXl5efBxpCQGDLFjxUJKmMfbmztuXPzo0XcUFMpHjUofMYI2bJi1rGyg
rGwwwsOH244cyVdQuDNmTKmsbLm6un1sbDJhnvcChHmIHUsgFkRNJMSjR49e
a3VBHx/YscHTpiXPmCGYMiVywoTbY8feUFFxmzSJ/vnnpp9/bgw7dvp0pKZM
npzy/fcW0dEJAiHAVOjRIAT4ycnJUrixzgeO8vJycO87X4IGzF9WViZ64gE7
xMbGxsHBASrD4/GCgoKsra0hLvDRqKAgwcHBbkKglzEYjMDAQC8vL4RNTU39
/Pzs7OwQg1Q2m/3KzwWJHSsWUsI8TCb3s8+SRo0qHz26ctSorBEjGEOHmsvI
hMrKhg8f7jx8uJOcHH/MmIrRoytkZStXrHAkzPO+gDAPsWMJxIKoiYTAUBH9
UfJlFf38OHPmuE+fHjhjRvCUKXRlZf1Jk0wmTTKF++IL84kTdSZPdp4xg4VU
NbWgnTut792rAzPgSjMzM9H9oSPgBFdXV4xVcVJpnnPxoQG3ppfaWJuwmT18
+BBdAAHkDxvm+fPnYk+UlpZ29epVGo1GtUmoCZPJRBOFHQLtiIuLw0/YPy4u
LrBPUlJSuFyuj48PdMTX1xeSER4eDumxsLCAjuCnu7s7fOSWm5tLnseK8D4y
j68vd+JEloJCvJJSkqIie+RIG3l5x1GjaELnIidnOWZMoKJigpJSwsiRCZs2
Od+9W0+Y570AYR5ixxKIBVETyYsXGhpaX18v4fFZWfnGxmwDgwgDA66+fvjN
mwEGBhxd3RA9PZa+PltXNxA/kQSnq8v18Ihobv5rPROUHPxQUVGRmJiI/h4f
Hw/eoF7B4Oyid3/SvF736wKXDA5sFuKNr6upqQn3HTm0tLT01B73oGhkCErv
mGGvrn5TXl4OLcjJycFNLywsRBhlyM7O7vqkAu18/PjxW7ZsQUnahBtC4V/y
8/PRffAv6NTt75+rqxFTWVmJloOfCJQLUVNTgwaWmpoaFBQE66W4uBitC0cm
JSVJ8taS2LFiITXMU6Cry7t+nX/9etz169FaWqHXr8deu8a9di3i2rVILS02
fgqT+Fev8l1cIpub/2pahHneLBPCPO8X8xD0PxA1kRDIMCIiQvIdHoXD28am
poYXrvGF39jh51/u0SMxBAgSg36VlZUVFBRgYCsQCNLT00EsIBlQgb29PYQG
3ItBdH1dfV1tnSSuu3eFuCgUo6GhVhLX2FjfXSUg/4b6BgkLg5KL3kxhtB4V
FRUWFoZrRCZQhPp21L3SgfIfP25FbcfGxlLjfQTAln8K0YiySpxPxwnaIGcO
h8NisdCcIB8dpzZ0N9sC/94uQJKcrL6+oZvFKnF/0cySk5M9PT2ZTKadnR21
52anfeHb2s2VrB07dqirq0MdqBj0HRQV144kFBJhqBKUIkUI5FxUVAQFyc3N
RROijuHxeKhwVDsOSBBCkjWIiB0rFtLDPM3NoJd6oWsQslD9w4cNL5woCZH1
0sA8jY1SxTzN6MSSledlzCOkU0nzeXvmkbwOcd8/cOYh6H8gaiI50M3F7orY
G0D5QUzgE+gXwjgprDHUA/gByuLt7f3FF1+sWrWKE84JiwoLTwsPSw8LTQul
HMLsdHZYWhg7g90ezmDjJzuNHRAfkFsg/t0NbCtDQ+6lS/GXLiXAv3w56fLl
ZGG4q0vS0Qm7d098DSP/4MTgUMGLklBlSAsTFaxjOdmx7Eet7U+hqTdTUBNz
c3MfH5/m5odBQTwTk2BjY8qFdHDBL/y/kgwM/Pl8AexePp+PW+8oBLXIIfLx
8GDa23s4OIicp6MjnQoI3d/xNjbOlZV/31w0Qi6XC22ytrZ2cnIqLS0VJXX3
VAT9yN/KKsjYmGViQvkiF/wigPggBIyNfW/fxlV3rUDcXzQzWA6oEIijm5sb
qgWaIqyWzm+W0RJMTU2p/osacHZ2dnBwgC4gYGlpaWtri3aCf4ThgYpFtdBo
NAsLCwS8vLzg49JwPCKNjY1htyAAX5J1zokdKxaEed6MeYyNOVevxly9yr96
NVbox1+9GicM/8NducLX1Q29e7d3mcfPL1ZHJ+rGDcpFd3BRL3zKxVy5Eh4b
m97cLIZ5WloeWluztbUjb9yIhC90UUKHAE/o/o6/eTOwvLwKNU1dyJsxj74+
5/Jl/uXLcf90CZcvx3eKMTQMq6sT82z/w2Eegv4HoiaSA2NGjCv7ZllFcBdI
YMOGDTY2Np1oBLyBIfP69eu3bdtGc6IZuhjaJ9u7FboxS5leZV7eZd4eJR5O
OU7uxe6OmY5uBW6OOY60XJpHscetiFucWE7HYS8G1KhVXFFlZdnMmUxZWYGs
bLqcXKaMDGf48AAZmXiEhS5LTi6dcrKyOePHu+fnl4mIF1WNUXZtbS0C4ZHh
9qn29Dt0lATO446HY5YjSoKyoWAI0PJoXqXtSfQyuqW3ZWPzX9sGgZyhm7jL
1KOeCxdsv/7acvFi56VLaV99ZfPVV9ZffXUb/uLFDvi5ZInjkiXtSV9/bTNn
jpGNjZ/wnV5LY2Ojn58fGBhDfohmXV3t4cPn9+27LHK7dp376acze/de3LMH
7oIo/sABrS1bDqWlZXS8uU1NTah5VDX4vOMCMtnZ2VAu0YZHEBrqWVleXp7R
mjVO33zjrK7uvHy50/Lljt98A2e1eLHt0qX2wjDi4Vy/+UZ7zZqqioqObRT5
UC/goFZow1ABnAh5UvvCo1pEPI9CiiochaTKDEXmcDiQP1x7WFgY9A6qhN4U
HR0NYYKsBAUFQUSQbUBAQGRkJIvF8vDwQJhOp8OHijEYjK7PXsSC2LFiQZjn
zZhn7lx3RcU4JaV4JaUEBQXW6NEMRUWuklKi0CUhUpgUr6iYqqbmmJdX2qvM
o6npMnGi78SJbBUVzsSJgRMmBEyY4Ad/4sSQiRPhhykrh6uoRCBJQcHDwoLV
3PyoK/M0NNzX0HBQVWWrqkaoqnLgJk3yU1Hx+eKLsEmTQr/4IlQUr6oaqapq
m5yc85bMM2WK9+jRSaNHp4wenSx0ifgpLx8xalTM6NHxwp/t8fLyaTNm0MrK
qjtuIvmhMQ9B/wNRE8mRm5ubmpraN9N4wU66urqffvrphQsXuu4RGR4evnXr
1uPHj5uamN50xID+5u3k24E1gZzHHL9qP0iJeZw5REQ3TNcqyUqfrW8cYwxB
uci46OHjQbEfBQyHDxw4gOFzTAxvyhTOiBH3hg9/MGJE/eDB7EGDrIcMiRk6
NGvo0LxPPxUMH141fPh9uGHDGpSUgmNjU//4o5LKBPfl2LFjmpqaYCpmINO7
ypv7nBvZFhnVFuVf768frm+bbhvaGBrWFGYWa+ac6xzxNAKp3DaupZ9l0Z0i
UWFw61esWHH+/PnY2OgzZ+xmzdKZN89i0SL7GTNuzJypPXu23qxZunPnGs+f
b7lwof2XX8K+dZo710xNTcvAwLm4+A6VCRhVW1t7//79lpaWYOBjxy6fOKF/
4sStEycMT5402LTp4IYNe/fsufTLL+d27NA8cuTmyZOGSNLUvPXzz6ciIngV
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
qHEu8DzG4N7e3hje5uTklJaWgkxQgKdPnyKAGvvz2Z+W7pbaHtqmbNMLdhfO
WZ7TctUyCDC46XXTkmsJ34xjdsX5ilOq0+2I2+esz4XzwjtWL7Ki6KWqqkJd
3WvKFP7kyXGTJyeoqgaoqYWqqvp/8QVj0iRXVVWfyZNjhUlxampJCxa4FRVV
iL5SA0TrTPJieQ58B48sD49sD89sT/t4e10fXTO2mban9nmb81ouWi4CFyTB
uWe72/raNjX/vdYKLqe1tZXK5+ZN2sqV11es0F25Un/58qvLll1avvz60qUX
V6y4qa6uraFhsGKFzqpVRt98c2XhwtOurgEtLX9LPIiXmlFSX1939qzW8ePX
jh+/LvSvbd9+cMeOw1u37tux48iPP+7dtevksWPt8SdO3Ni791R2dq4k32gl
JiYGBQVRH4lRdUgFCgsLzbZvd/zhB6cNGxx++OEqSr9q1WV19SvLlyNGd/Vq
wzVrqFTaDz8YbN9+F+25Q7aifKiP0HC7u7NbqPWRRC0cWoN/qa+vj4yM5PF4
0COIka+vb1xcHH6i8UB32Gw2h8PpKUOI2LFiQZjnzZhn9WqPWbMihS5q+nTm
jBn+06d7TZvmNm2aw/TpSIqgUmfOjPn6a6eiospeZZ6rVxlz5ljMnm07Z479
7NmmM2femj3bYuZMw9mzbebMsZwzx2HOHIyjabNmGaupXXd0xE35+6NfEfM0
NNRu2+b01VdBX34Z/NVXLLi5c02Q25w5BkJfd948O6R+9RVSQ7/+2jYjQ6Kv
Q1/CPMuWMadNQ+3FTpsWOXmy7eTJbmpqtmpq1tOmxUyZ4jF5Mn369Ojp0xHm
q6u7/PHHvY7fx35ozEPQ/0DURHKA65A5hp89nrNYYHRPLbQCluju8yFcpiBL
EJ8Rn5CdEJcZBxefLQxnxMVl//Wz3c+KR0xMakx5ZbnYcTEuys8vxd1d4OYm
EPoZ7u7p7u7wM4UOAcELl85kJtbXd/5wjgLyT8hIiMtqP2P7SXHqzPYA/L+K
J4xvT8qKS81M7W7NxqSkTD8/vtDF+fryfX1jfX1jqBhhGP5fqT4+0Xl5xU+f
ilEB3C8eLzYsLCI0lCtyISGc0FAq5m8/LIwbHBwuYbPpbvUbsHosi0UVK/af
jt8hQLmY11nZvjugADAzbGxsIG2oSYQzMzPRnaEsKEyTcOkfqFJYWBjMEnQf
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
g78DO4UdkRYRkR7BzeBy07kRGRE+UT7XLK/5xfqFp4bHJse2Pn7Za4hXqklx
8R0Hh2Bb21A7uzA7O7bQiQLtDkmUs7YO9fL6h3ZQn4315YxRUERpaankXxC9
R4iNjYWaoDKpHcMxbAdLxwmBAOgONc/n81EDxcXF4PDIyEiojJWVlZubG+5y
REREcHBwQEBAoBCgTcgKk8nsyPPBPbHdQCdQc5zf1SvXx48fw8Doul95bm4u
6hBSQqPRqEnBTU1NDAYDSs3hcFAPSKLT6SwWCz99fHwc0AeCg319fZFbUFAQ
qhESI+Fznn5jx/Y585Ta2LAtLCIsLCItLHiWlnBcYSBS6KifSI0wM4ug0yOa
mwnz9AoI87wB+g3zEPQ/vCs1QV8QfT4UwA5wSHVwzHR0SHNwz3dnFDPgXHJd
nHKcPIo8aDk0pywn+3R7h0wH10JXGx+bjlsKdsUr1YTDif72W6PVq+3U1c2+
+UZv2TI9BJYvN1i2TP+bb/SXLdPV0Li9Zo3dmjX2K1bY796t/+BBveh/weoY
ckre794Sra2tOB36Ptij/73gg4iUlJQ8efIEzExtDUnNqqB29C4qKsIQHmP5
DOH6LeBAqCpkBffXy8sL5IkDCgoKMOTHYfX19VAlavp5R57vDTVBeaBrOGPf
3xGcMT8/X+x8H2hcSkoKWgs14QLii/4FBYFeQCmcnZ09PDwgxPb29tQzJScn
JyivhYUFUiFASMK9kPDByHttx75T5olZvNh+4ULm3Lm02bNvwyEwZ47N7NnW
cLNmWS1Y4LlwoTfc3Lne27aZ3b/fIPpfwjw9CMI8r4v+xDwE/Q99oCboAk+7
AISsqampra2N4Zsv29etwO0C/YJhhKFvtS+rnuV/1187SPu633UbgY1OsM6N
oBs6LJ3LXpdtMm0cWA51jXVdMxQBQzxwEbpbdweEhHDXrLFdvdpn4cIbixbp
zJihOX/+tdmzz8+e/fucOeenTj329dcma9b4rF3ru3Kl7y+/mNy/X9/xckBQ
ffaFEqhj4cKFioqK4NIenKosJaDe7ol94APVwHDe09PTxMTE2to6MDDQ3Nwc
7Gdra4sYJFHzCBwdHTsulAQy7Jgbwr3xdu8dzhrGGan3oV2TcO0QONhR1LQd
6qNQ/EQYPkoLH/0CAfjV1dU1NTUII0ClIlLyd9bvix0rfcwTuWgRc/78aFVV
88mTLSdMuKKqaqqsrK2iclNZ+eaECb9PneqE1PnzY2fPjtm82aamhjBPr4Aw
z+uiPzEPQf9DH6gJRmcYpkX+E+CHsWPHysnJnT592oZm43HH47Dx4avMq7qh
uvps/fO08yetTx64dcBWYIufN0NuQlNO2Zy6FnhN2147hB0S2T309PTQ2blc
bncHGBqar1p1G5bqsmWW8+Zdnjr1wOzZZ2bNOg07FoGZM8+oqzt++y3sWJ+V
K3262rHIAUP1vvlsDCP9ffv2qqqqQlb631OR7OzstLQ0sSqJETrG6RjjY8AO
7UCAeqMXLoRAIIDEQGHpdPpLNuusra1FM+jxqTHvatYwmhy1FGpfnlQs3hc7
VvqYx3L+fM8FC6KmT3f/4guDzz8/PXHitYkTr0yapKOsfF1ZWWv2bF+kws2e
Hd3VjiXM01MgzPNa6GfMQ9D/0Adqgl6Afl3zT5SVlV29ehWD3MyMTGYwk5ZP
+839N48yD71QPW2Wtqa9pqatpnaQtn64/iWvS5e9L2v5aF3wuHA99Lq5l3lp
eWlN98BgGSNlXFR3B3h7B2potD+PnT9fd+7ca9Onn124UH/mzAuzZv0+Y8Zv
ixebrVnjt2pVu1NX9/vpJ+NOdiwIsOPqeT0LDE6plaJFoNM99+7dm5KSUtwF
jY2NXQkNg2KUEPlUVla+/IEA7guO6XS6l6DHHy9g5E7NCO4qzRj7QzXA2NQt
Q/uhJpiDS6GwuEZcYGpq6ktkHfE4oGeXjqfA5/P9/Pz6Xk0KCwu7E98+xvti
x0ob8zCZrPnzvebMiVZVvT1pkumECTdUVW0nTtSfMEFvwgSdKVNc5s+PmTs3
du7cmBkz+Bs3WneyYwnz9BQI87wW+hnzEPQ/vMOv1EAIYAZ0yRBuiEmAibaH
tq6v7g33GxdtL2oaaZ4yOmXkZ6TjqXPd7foV5ytnrM5ccbqi661ry7B92Pyy
yQ4YO7/8K7KYmLgtW/Q2bDD57jud77/Xhb9+veF332kLnY66+pUVK25s3GgC
9/33JkePGtbWNnT8d0hJenp673TqZ9ev09ev9/3uO//164O+/z5w/frAb7/1
XbTIad06Xyrm++/hB8CtXu0SFBTT2mUONfjT2NiYwWC4ublFRUW9ZGk+qIOe
nv7Vq9e1tK5duUI5LSos9NvDV6+2/4R/9uzZ9PSMnp30Qb2rio2NRTkzMjLy
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
eYzfmHmOHPFdtIi/cGH8okVJcAsXJnQMLFwY98IlzJ+P4UzvMU+rkHxe6SRd
1YowD7FjCcSiV9Xk0aNHBQUF5eXloJ2cnBzQb25uLgKFhYXp6elRUVEQGoFA
gJ+xsbFcLldbW5tGoyEJx+Tl5SGJWrlOetSEAi4KgoIy98bmg32GhtqGW4xb
Wl43zjqdvxF4Uzvg5o0A3Rt+2udoF24E6ljxra8ytXRDDC7Trxiwja773IhP
jgeF4l7Ex8fj1jQ2NuLynZ2dUeEwCTo9Jnr69P+zdx5gUVxt+7+u7/u/3/cm
b2JiYtQU05sxxRYRGzYQLEnUxJZEjTExib1X7DSRDsvSe2+71KX33nvvXaog
HcP/difZj8CCIG3B53eda64zZ8rOzM7c93Nm5px58PXXLrNmFcycWThjRsSM
GWGvvJI0Y0Y40iuvJM6YETlrVvGsWaX8YflLLwW5u8eNegfvzc1NqqqW169b
XLtm2S9Z9MnLyurl5xcO5RbEWLe2QMTS2NgYFxcnao0sBIh+HEvKI8pAedQc
1W85Klw0k5X3UFaE7LjfleMqXrK4Ku9+hx1peNNJ7o636nX72yq+GnIcxWEp
T3d306ZNrs8/X/n881XPPZfw3HNxzz2X9dxz8fyU+dxzidOm3Zs2rY4/rH/m
mUg3t/ixUB5tbRMFBYN/JkMM5eX75A1v39YsKCDlGRIUxxJCGevWFrADXB3Q
GUYrOlH15YNy1Pja+WC0tbUVowYG+pGREUxv0sw8zNVUXl6mpaVVW1szlF8c
BzfB+gMDA6uqqpKTk6EtIvLNvuHS3Nz48x8qm74z2Lhdf8suoy27TJDfvMNI
Zht7y06Tr/eYbNlp/BUKdxh+tdN03Zbb4RHxXZ2PgNYxT2yjoqKQQZDA4XCQ
+Wcc2/z1166zZlXMmlX54ou2L7xgNn269csvB734ojlGX345ZMaM5BkzUjB1
1qy6l16KdHcffTepq7v300+aW7dafvONxdat1l9/bfrVV6Zbthh+/bX5tm02
W7dafPWV0TffWG7bZr19u62MzN2UlKyhfP4yPj6ex+ONbrPx4uJinLfl5eU4
CAhUXF1duVzuOLwI92SIfhzbM3zlQXBIyjM+NDc37PiB/eVKtwXLXZdIuC9Z
7bl4FfdLCfcFKzhLJDzE1nl9KeG5ZLXXYgl3sdXe88XZoWEJQ1cefhzLmzat
Ydq0+8884/zMMzbPPuv4n/9EPPOM7bPPuvznPzHPPZf93HM506Y1TpvW+uyz
CW5uCWOgPDVHjsj/8ovmzz+r//KLxk8/qf70k8r+/XcOHFD79VctFO7fr4xy
5A8d0tm163JqagYpz1CgOJYQiij0flNZWRUbmxgZGXvlynVjY7PQUKhUXO/k
5uZ55swFHs8X8+Tl5Q1+I2Ic3AT2ERAQwHwIBjoQGRmZk5Mz6W6PtLQ0/PC9
gbi4yfLldhISbmJLDDBctcpp9WpPcXHjFSuclixhL16stXy59cqVTkuXskND
EwSthmH0OMhwkNDQUAxxCkH6eh/zv+PY8lmzqvhxrPELL2i/8krOiy8aIj9j
RtKLL5ogw78fW/vSSxFjEcfW1t7bt09r2zaOpKT26tVKK1ZcW7Hi6tKl59et
U9u61Wn9eq2lS8+tWaO8davj9u2uUlIq9vbc+Pi4pMdhZWWloaEREhKSmJj4
2JmHiJGR0Zdffrlu3TpFRUUnJyecVNbW1jjCo3tARotJEccOBUZ5oqL+Uh7E
R9HRcb0TKc9Y0NJSv1HG+fXX/efMiX7zzbRXX+W9+WbqnDmJb72V/eqrfnPe
iH91tsfs2Zw33gh74434N95wDwpKHrry8ONYr2nT6hGpPvss99lnrZ55Rn/a
tJJnnjFH/vnnM595xvrZZ83592Nbnn02fiziWCjPH38o/P67wc6dN7/55sLm
zcc3bTouJfXbd99d/fVX9s6d15Hftu3SL7/o/v674c6dVxwdXUh5hgLFsYRQ
RMFNuFzvAwd09+83/PZbjT17WAcOGP/8sxk/mWJ44IDp3r36W7eq7ttn9MMP
bCUlk/v3B3szfxzcBD4i6JAcAoufS05Ojo2NHes38EeXBw8a9u41X7hQ6fPP
b375pc7cuWeXL7dBfs0a9/nz5RC7Llyo+vnn15cuNVmwQHnZMoOwsMQ+vd/g
OGDfU1NTw8PDc3Nze3++EHHs5k2uL71Y8eIL5f/5t8Wzzxj95xmb5//j/sy/
jZ571uG5/3Cefcb8mX+zpk/LnP5C7bTnIsbi6R4Tx27f7iItzVqy5PSCBb8j
lP388wMrV15fsuTUihXXFyw49OWXJ7/6ymb7do60tIqLi1d6enr24/D19XV2
dk5ISICNPnbmIWJqarpy5cqjR49yOBxDQ0OcwxYWFr37wBcppkwcC+U5eFD7
wAH9HTvUfvhB6+BBo19/NfnlF+ODB435Q6P9+9nbtyv/9JP+3r26SkrGTU2k
PKMA4thNm9xnz7aYOVN/9mzXGTOU58yJmDlT7803M2bNMp4zJ272bNtZs3Rf
f91v1iybOXM8g4JShq48iGNlNnj9+3/r//d/6v/1X3b/77/M//Xfzv/6b9//
918W//pv7r/+2/tf/2X/3/9l8L//U/Tv/2n9n/8X7+o6JnHs4cOKv/2mv2fP
LUnJXyQkfkAcu2zZjs2bT65b98vmzSdWrvx+3bqff/5ZA7Hurl2yXK4HKc9Q
oDiWEIoouImFBeebb/S//tpq/Xrlr74y2bBBfe1auXXrFJBBycaNrE2b2EiS
kqobNhheuMBqaPjHVQaJw3UnsI9xcBOsHL/S+2J/8OBBUVFRZGRkaWnpUJ4Q
iQL8ONZs0SL1Tz45h/TZZ7Jffqn9wQe/L1nC/uKLm6tWuSxdarhwoYqEBGf+
fPmlS/X6x7F/r+dBZWVlYmIidr+qqgraGB8f397e+tNhrTXfWEp8Y7XqG51V
X2uv+lrv7wx71Te6q75G0pH4xkxiq82S9ao8HyG9d46Q2trqH3/U3r7ddd06
TXHxK2Ji58TFZZctu7phA3vBgj+WLDm/YMFRFG7ebL1tm6u0tHpUVCLzZHlw
ysvL8/Pz8e/DTB878xBhnhSXlJRgtcXFxRkZGaLZXphhysSxUJ5t2xCpmklL
K23bZigjo7p+PQIPeRkZlQ0bFLds0f7qK9bXX7OkpZU3b9a7eJGUZ3Rg4thX
X7V/+WWVGTPuvvKK9quvcqZPv/Laa+6zZhm8+WbSa6/5zJ5t89ZbyTNnms6Z
494/jmUQqjwdHa37f9NZvtlu2WbbZZv1xTfrim82FN+sJ76Z/VdmkwHyyzZZ
L9/ssHCNBs97LJTn3h9/KCJG/e676zIyRyUlf5OROSIjc2zPHrlVq36Ukjok
IbFfUvLQ/v2av/1mvGvXtZiYeFKeoUBxLCEUUXATS0vu9u3G331nv3z5+e3b
LdesuSkmdnTlykvr1ytgKCWlsmbNtS1b9JYvv7Bhg96lS+zGxv+7+QDpDgsL
s7Ky4nK5fn5+1dXV0PlxeG0Mv3L//v3eJVBawdckJ0VfLg8e1O/apT9vnuIn
n8jNm6fw8ceyH30ky8/c+OCD8598Iv/pp3cxVUzMYe7cG/PnqwcHxw3UGzmO
dnNzMwQQu//rr79KS0snxCXouOjbpLraZrva5rhaY5jtbpPNtfk7gyE/uTlk
e6oFsMPjIkbdTRoaag8evLN9u/bmzfIbN97YtOm2tPQ1GZkbGzcqyshc37Dh
kqTkBRmZq1u3qm3frvPVV9eSk4f0lhpkPzAwsKGhYRTPMRxYnFFYbVZWFkwZ
hzE9Pb2goADnswh6ypSJY6E8O3YY7txps2rV2W+/NV2//rq4+GEJiQtSUnIY
btigtGaNLOJYTN20SefyZVKe0QFx7Pr1Li++aPnCC6Yvvmj+wgs606bpvvAC
MnrPP6/+wgtmL75og6mzZsVPm2YwY4ajv7/wGnTPAMqjDeVJgc64Idk8Gnrw
lYfJoNzD7lFyd8j2Ug3QGyPlOXr0xk8/ye3Zc3HnzjO7dp3fsePkjh1nd+26
uGPH6e3bj2/denjHjlP79l0/cEBu9+5TKSnppDxDgeJYQigi4ibbt5t8953D
8uXnvv7aZOXKC4sX/75q1ZV16+RXrrwoLa25cuXlbdvMMFVSUvPiRb3eboJr
LSUlhcfjOTg4mJmZZWZmjt0nb3oDCystLe1zpQu+JhkVFYUarojfHmlvb1VQ
sDp2zPDoUYNjx4wOH2YjHT1qyM+wjhzRPXpUH+n4cfPDh/Uxmp6egz0aRPMx
NS8vT0ZGZu7cuT/u+VHZ/k5gq39Ap596oKqqz112NEsnQlvNVwUZdrSuX7tP
cE9QcE9gWE+wZa5FVGLkqLtJV1dXWlpObGxGTEw6EjIJCVlBQTEmJvbR0akJ
CZmxsalMOT+lNjUN6eHsWHxVB6vCOnFGwVNwGiM6wlnN4SOCbS6mVhxrsHOn
7cqVZ7ZvN5SQOC8mdmj16stSUrdWr76waZMKotlvvzVbter0hg0aly/rkvKM
Ch0dLTduOO3fb7tvn92+fQ5791rv3WuJzL59Vnv3WvDztvzE4Q/N09Jyh6c8
Dn2VhxWhJVAe/3FRnvT0rISEtPj4lPh4SE1aUlJmaGiUublNbGxyUlJGXFwy
U56YmJaQkELKM0QojiWEIgpuYm7utGmT7ubNZmJip8TFLy5ceHjBgsMrVlxb
uvT80qUX169XFRM7t27d3SVLzkhIaJ09q9Xn6V5bW1tjY6OLi4unpyd8ZHzu
iqDeOlALi/b2dlRm4+LiULFtbx9q34DjDw5RRcW9oqLKoqKqxyXMU4HjDLP2
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
/OzZtm+9lfLOOwWvv164ZYt1Xl5Zw8BcunRp7969xsbG+Akos4+Pj4uLS2Vl
5UDzOzo64m+6efNmYmLC6dNyv/2m9vvvGocPa+7bd/PXX+9+//3VXbvOb916
Amnjxl+3bTvx22+qhw9r7d59KTAwrKPjkZvcv39f0OMiTIR596yurg6iKtR8
sWGurq6enp4sFktZWRme4uzsjGNuZmaGTYWtKCkpGRoaNjUNZpr4idjYWNjQ
SNoC94FpqDLCxinYr5Hc00hISICZjs+bkKLJZIljp4Dy6OkhTHVZtix0xYrI
uXPvfPSRwscf3/r8c71PP9X85BMV5D/9VFtMzHv58lAxsbDdu9n5+WOiPMnJ
cT/+aLhsmf+yZUHLlwctXuy4dKn3woU28+ebfP4567PPdD7+WAlDcXHf5ctD
Fiyw8PGJJuXpDynPCKE4lhDKuLlJZmZm7zsY0dHR4uLiMjIyVpZWli6W7nXu
Xg+81ALVbPNsdSJ07vreNUgwYEWzbnFvGSYYnmKfsi+xD3r4qIGnsqUy6uao
ksM7sM6sf5IxeqSmpkpJSa1fv97AwMDExAlx7Dvv5L33XsmsWTqzZhnPnm06
Z47P66/bz57Nfvll2Tlz/N55J/fdd/PffLNw7Vo9D4/A8IGRlJR87bXXfvvt
NxsbG+wIVFdLS8vf33+g+a9evfrKK6+sXbvW3t7m5MnbR45oHjmidfQoS1r6
wI4dZ/bsubR+/Q/ff395//7bGzce/OGHK3/8oXnsGOuHH2S5XM+EhHjoOXMD
pKCggGn2+9hvKZaUlOBg1tbWQjmZD1xWVVUVFRXl5+fD9bDB+PswaZCne/h3
sCD+94qKiqp/UtmL/iV96DMV2xAXF4dfH0nTjGF1W9Qf7Jebmxu9pTbClZDy
DEV5TE3tEceuWBGyahXi2Fvz5t399NO7CxdafvGF7scfy73zzvFFi6yWLw9e
sSJs6dLwr75S8/IaUEZGpjzW339vsHJl0MqV2JLwuXNvLligv2iR+YcfXsJQ
TMwZ24YtWbEiCFMXL7Z2dPQl5ekPKc8IoTiWEMr4PN2D7LT+E1SomUapEDcX
notltqVLtYtenJ6qv6pWhJasnayyr7JRqtFt7m2dcG2NcA3nKmduLdex2lHX
WTc3PxfLooKMLW8dM1paWlCpT09Ph6hyuUEffRTx5ptFb79dNnOmwZw5kbNn
O/Pvx1rPnGn6yit6s2ZZv/VW8ltvFb/+eumWLTa5uWX1A2Nvb+/s7Iw1l5aW
uri4IA99g2wOND/21NLSMiYmpqqq4vz5O0eOaCNM/fXXO+vX/ygltW/r1hNr
1uzZtevCH3+oy8j88ssvd44e1T5+XHfPniuXLl1NTExk1gz9HHrz5A4+zB/X
1tbW3d0N5ezi0/PoZbmHTPlAi+N/gQnCg3AYsZ7m5ubGxkYcxvv37/OfUf7J
NNbAVvUu6d8bObYZv9K7BBuAMwd6Dlt54nsjZWVlI7mvQq2GJ0sc2zNc5YkU
OeVxdQ1YsYKzbFnEihXRH3+stHgx97PP9D77THfePM1PPlH9+GPFTz/VEBPz
XrEiQkwscvdu/by80rFQnurq8v37TVauDJaQCBcX9/rww4sffXT1iy+0Pvjg
7MKFxitW+H/yiby4uOeqVaESEpELFlidPXublKc/pDwjhOJYQigT2NpC0BAg
LiHO0t3MzN3krPypW1rXDR319e3YRk56pq4mhk5sExdDLWuNM3Kn2PY6pu7G
nv6PWg1DZ1DHZ+rdY9cFomDN3t5hixfbzJvn8emnnnPnWs6b5zp3rt3cubZz
51rNnWvDTyjkYOpHH3l+/73B4G+pQQ+Z+wmQIxz8iooKiOog0oSZmXfYOjra
T5y4sW/fzX375L777iyiVimpnzZsOCAt/Yu09MFduy5LSe3fs+cyfwb5bduO
GxqaCv0q5VgTHx/PfD8IRubv7898fxweCluEucDU4C/4EzkcjoeHR11dHeZE
UAGRh+kw3+hBCWYIDQ1NS0urqalhjgDzqh7Wj5XjJ574xgiChNYRvGPG3BUh
NxnhSkRCeRLjLD3MLNyNz8mfvKVzzdCZbeiga+yiZ+ZmZATl4ejr2KifkT+u
76Bt5jExyuPrGyopqbtqlfmqVRbi4tqrVpksX663bJnOsmXa/CFLXFxr5Uoj
CQnzZcvMDx7UqqsbE+Xp7Gzds0dn8WLnRYs4n31m9NFH8h98cOvDD28h8+GH
cp9/bvHBBzfmz7dctMhl0SLuvHk6urpWUVHRpDx9IOUZIRTHEkIRhVbDbm5+
Px1gf/+9nrSM/LbtGj/uNdi333jvfqO9yOwz2rvfYOcuHUmpWxju2s2+q2LR
1PTo0QzEBFc0av1xcXGDq/HIuXevNjQ0MzAQKavfkMkwKTMgIDMhIaezc8AW
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
y8vLx8fHzc0tIiLC0dHR398fdjOB+0IQxDgwFnEsKQ9BEINDcSwhlD5uAh9x
dXW1tLRUVla+fv26lZUV7MPFxcXDwwPOUlJSgiGmYjQuLs7c3DwkJMTOzi4r
K8vQ0DAjI6P/t8sJgphijEUcS8pDEMTgUBxLCKWPmyAfExNTV1dXUFAAj0A+
Ojo6ICAgIiIiOTm5vb09Ly9PMCkzM7OmpgbDysrKsrIyLFVRUcE84MN6Hvuk
j26hEMRkZCziWFIegiAGh+JYQih93CQ9PR1OkZGRERoaCoPAqKWlpY+PT3l5
OYyjsLCwsbGxuro6MTERFpOfn19cXFxUVAQTaWtrw4I8Hq+lpQWjtra2qamp
8JdiPpgHjuPt7Z2bm4uVYM2YCmPCnFhbaWkpvd5GEJOFsYhjSXkIghgcimMJ
ofRxEz8/v4iICDc3t6SkpKioqIKCAk1NTVgJzEVVVRV5HR2dy5cvOzo6amtr
W1lZqampIaOkpASnKCkpiY2NhWuoqKjIysra2Njo6+tzuVwDAwNdXV3Mw2az
4U2urq4oMTc3v337try8PNaAtbW2tk7gQSAIYuiMRRxLykMQxOBQHEsIpY+b
REdHwzh8fHzCwsKys7NTUlLc3d05HE5AQABkn8ViGRoaWlhY8Hg8DGEu8Ag7
OzvYirOzc0ZGBjIwC7iGlpYWSjw9PWFMmAEZ2BCsBBnM4ODggHVqaGggD1sJ
DAykJ30EMVkYiziWlIcgiMGhOJYQyp49e2pqagSj3d3d9+/f7+joQGFXVxdG
Mezs7EQGgt/BB6NMIfIo7Pybhw8fogSTmNm6/oaZX7CgoATLClY+gUeAIIhh
cezYMejGCFdCykMQxLAYFeUhph7vvvvu7t27f/qbAwcOHDx4EJmff/75J4Ig
iH588skn0A1SHoIgxpNRUR6CIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIKYG
06ZNW7169Y4dO3YSBEEMgQ8++ODNN98k5SEIYjwZFeUhph7S0tLV1dUTvRUE
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
KyvLycmJx+OVl5fDRGANLi4uenp6Dg4Oqqqq2trasBtTU1M2m+3s7MzhcFBS
XFws6NGR3IQgRIdJEceS8hDEFIPiWEIoY+0mycnJAQEBgYGBMBFXV9e4uDhz
c3MNDQ0Yh5aWFgzl5s2b1tbWMBdDQ0NkmNmMjY3hQYKVkJsQhOgwKeJYUh6C
mGJQHEsIZRxaW2D93d3d9fX1zAO7mpqaqqqq2tpaZoipKGltacXQ2dk5Oiq6
sbGxob6B+cIOQ3FxMQyosrIS6yFDIYiJZVLEsT2kPAQxtaA4lhCKKLQahsvk
F+Vn52Tfvn3b1t42PTM9Nz83JzdHkIJCgq5cvRIWHpaVk5WXn9fZRV+KJIgJ
Y7LEsY+FlIcgJhEUxxJCmUA3EdzfyMnJueN0Rz9MnxXBYkezDWINDOL+SvrR
+o9SrD4rksWOZBtFG90yu1VWXvbnQ7o3QhATw2SPY0l5CGIyQnEsIZQJdJOS
kpL6+vr29vasrCzrdOuQzhD/Tn+LPAtODceuxM62yNYqz8q/wz+0J9S20Na+
xD6oKyiyJxKmU1ZJbkIQE8Zkj2NJeQhiMkJxLCGU8XGTBw8eNDQ01P+TQ4cO
ffnll3fu3PH387dMsgzqDHIsczytf/qqzdVL5peQzhmdM04zDu4IvmRx6azB
WZt8m5DuEA1vjYjoiJaWFkGbYoIgxpNJFMeS8hDElIHiWEIo4+Mmqampvr6+
3v9k8+bNM2bM+Pbbb42Njc2SzOAmrg2ucA2jJCPVAFVFD8XDaodN0k1ssm3g
LxdML7CiWSEdIbp+uu5e7p4enpmZmW1tbeQpBDHOTKI4lpSHIKYMFMcSQpnA
p3vR0dHp6eldXV15eXlm8Wb+D/zti+0VPBQ8Gz2vO16XtZGFfaj4qVhkW1y2
vnzd6bpxmnFgayArkFV1r6qpqSk2NtbTkzyFIMabSRTHCoWUhyAmIxTHEkIR
hVbDZWVl+vb6+hz9ixoXFUwU2Fy2vqu+HlfP0N0QGSMPIw1bjdN3Tms7aBu6
GbKsWPdq7jEtNZqbm2NiYry8vDIyMshTCGJ8mOxxrABSHoKYRFAcSwhFFNwE
1tDe0d7+oF1LVSvQN7CpsamjtaN3ys3MVZJTKsovamtp6/8NdHhKdHQ0j8fr
7ykPH/7Z1d7R3fb41NXW3t3RPb77TRCTkikTx46p8nR2dA4xdXWR8hDE46E4
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
Dgw83Is/UD3qH6cM5x3nDqemrq7O19cXYZx3nBEoC+QekRwOJycnB5Egc1A6
iodLAqm4gHGkqNimpqawsLDs7Gzqj1hS0wZBQbAZdoTtMzIyHvGBhlKpJKPf
ED/2fkxV5vnll6HXXw+fP79w7tyyefNK5sxRzp6tmD07d+7cgjlzMmfPVs6Z
kztvXqnaKp59NjUqKn1SmOfwYcaqVZJVq+SWlmlr1igtLZMtLWMtLPiIgVlY
SKmApWWGqWlUcDCfMM+UB/FjCXRimqgJCHxwsJ9G89+4cb2Dw4XOzmu3bt2E
9fXdyM3NFomEoaEhcrkUenLz5uDdu6MFBXmifQ0W6u7uRglDikPkt+TBZcHO
YufIxkgvpRd/iM8oYiDsk+Xjke4RUBIQWhUqvy33EfvU1Nd0dXZ1qwHBEggE
DQ0NaFN36wI4sLOzU2dSd3fXsWMXPv3U9bPP3I8ccT148JMDBw6//PLnb711
7OWXjxw48I+33z6GJNgXX3j++c+no6LiWlpaOiYEVPjBgwfffffd+PiYjz7y
2LUrdedO4a5dwj17pGvXXjYz+3rjRl8bm7CtW+HThu7cmYqk3bvFmzaF+/nF
NjU1I4d+NUC5CON03Lp1C8dFZQ5W1yQhEjIREREhFApB+3FxcRB3nGh3d/fk
5GQajRYUFOTp6YkLA+GQkBA3NzcvLy9oDcLBwcGxsbFIZbFYqNL4+PioqCgk
oW6hKa6urjExMfg7m81GpJOTE/QRlTjWgJz6g/S2IH6sTozFPLjecfWCeS5e
HMU8OWAeJhPMI2trax0aMljmufbmm5GLF1eYmtaZmlbMncuYPdt73rwQI6PE
OXMYc+b4zJ+fuGhR9aJFtYsW1c+bJw0O5jU3PzrzRH/wge+GDekbN2bBNm1S
LV/ubWz848qVIZaW8atXc1avjtuwIUOdlGNunujrG0+YZ8qD+LEEOjFN1KSh
oUUoLBWLK8+cof3zn2fj4nL4/FI+v4zDKQoLkzGZktBQcUiIGPFcLtrQ1bdu
/eu9GEQErWCQXkVFRXZWNpPJZOQwZLdkLmKX7/y/u5B04XTkacENwc+RP5+J
PvNz1M9H/Y7ax9uzm9hpd9NcOC6p/FRFhkKpRlZWFkgvPDycx+MpFL9GagMb
3B9JATVz5MhJeLCffeYBT/W1176EH7t374c7d7596NARBD744Oxnn7kh9csv
Pd9777SLi4dAIJRNCKjD9evXW1pa/vjj92++aQdPdedO8a5doj175OvXuy9f
/uX69W7Lln1uZvaVpaX9tm0cdZLY2pp95ownny9ADvVqZGRkIIwjBcNnZ2dT
mTc2NqIycTgI47hKS0uhsCKRKEwNqAmkgcPhICkyMhIBf39/bAyloNPpUIeA
gADUHnQEYoF/QYkQbmpqQibYODExETmg/NAj/CsnJ0cikQQGBiJnqNU4A8vr
DxQMeyFq8oiZTBPmaWxslskK5fIye3ufI0dOJScrxOJCsbiIx8tnsYTh4fzI
SEF4eGpyslIgUBUXVxkg8yiV0gMH6IsXV8KPhac6d27EnDnes2Y5z5x5Xu3H
uixcKF+0qGbRIqQ2zJ8vPXcuYFKY55VXzm/cCE81GwY/1tycYWz8/fLlNBOT
7xFYssRp3TqZOinHwiLl9GkfwjxTHsSPJdCJaaImDEbKypWxS5emrlghMjWN
Wro0YenSpCVLEBO7bFm8mVnysmVJZmZ8MzPewoXJX38d2tU18gykp6enra2t
qqoKzWqoAOgIdVVYWBhcECy5KXGVuZ4MP3k25uxp9mlWPcs+zv5s7NnzSed/
DPrxIvdiTGuM5I7Eg+dRUlZCfTpFoaOjIz8/H3yIg0Lm7XqjtfXKN9/Y/vOf
lz/+2AXe7DvvHN+//+8vvPDh3r0fHDjwDywPH76IpI8/dj5yxOWdd05wOALQ
5i8TwsDAAJvNBv8PDQ18+SV9+/ak7du5O3Zwd+4UrFvntHq105o1jubm3y1d
+vm6dW7btiUhaccO3oYNIWFh3P7+gfszHFZ/inZ/GIDQSKVSKDX1dq+7uxs1
Tz2D6u3txYFDynNzcxvUQI0VFxe3tLQggHOBVKFQCCmBgqD5AdnCyaIeK6HO
qaxwEnE9IIyDwr4gQAOPNrEjLgOcvt/ocEaTAuLH6oRO5gkJSdi2jbZlS8iO
HeFWVr7W1nQbmwBrax9ra7+tWxlbtwbAtm8Pff555saNAceO0bu7ew2Nedra
Gl9/nWlqWmxsXG5qWjl/fsqsWV4zZ8KPdZk1y2/GDFdjY5WJSbmJSZmJSeXc
ufzo6PRJYZ5PPw1Zv166bl36+vXpGzYozcx8YMuWeRobn1iw4DszM/q6dVJ1
ksLMLDYkRECYZ8qD+LEEOjFN1MTPL9XEpNDIqGXBgsZZsyJmzYqeM0cyc2bQ
rFnsmTNDZ89OAf0uXNiwYEHLzJn1f/1reGVlHXgpKytLLpcXFBQkJyeDyqgP
2MrKyhhpjMSmRDe+m12knQvP5XTw6bPhZ08GnvRT+jkLnM9Fn3NOdXbluyY2
Jnoke1ztGN0HGSgvL0c+DzUSy927dy5e9Pr2W8dvv70M+/prh88/t/vHP45/
8smZjz8+9fnn56h42NGjTh9/fFomS59Ax4f7d2try3z77fC33mJR9uabIW+9
FY7lG28Evflm8J/+xHzrrci330YS++WXaUlJsqGhiQ8vo3NYeCgL6iotLQ1C
IBAIvL29scR5gXbw+XwajYYll8uVyWReXl4QQYlEQr2Aq6urG/XNIS51nRPW
PxQgXtR8Q4+SyW8axI/VCZ3MQ6cnbt3K3bIlY+vWDAsLF0tLr3Xrws3NHVet
8ly50nn1asaaNcFbtsi3blWsXy/57DN6VVWtoTHP8PCtb79l79ol2LFDsnOn
GI3ZHTvin38+ZNu2qG3bItDIVUdSSZKtW6MEgtzJYJ47Z86EHzoUf+hQgtoS
X3qJfehQ7EsvRR08GPnSS6xDh6KopJdfTtq7NyQhQU6YZ8qD+LEEOjFN1AR+
7KJFqoUL64yNG557zmXGjAtz53JnzvSZN0/w3HNOM2d6zp+faWyM1Pq5c+te
eMEhNDQ8LU0O3qA63oK4UAaKmq5du8aRcJKlyZx0DjedC0vNSGWwGWEJYRHJ
EY7ejrQIWjQ/miPncGVcjoijc5RyZAupQv4P1YO1urqmoKAoP78QVlBQWFhY
NDJW+8iyCKtU/D0rmKxurXV19QUFxSpV4T1DuEhtxffCVPxIoKPjkd55KZVK
TT1rAzoCgUhJSYmIiEhISGCxWNB3Dw+PoKAgKEhAQICDg0NcXFxwcDCTyUxM
TISmuLm5QWJGCQc1Mvkj9hqGX1FaWkrU5BEzmSbMw2DAj03ZskW2dWuamdlP
S5ceW7s2wNzcbt065rJlJ5YvP7tpU+zWrUiVW1lJDx36OTQ0zCCZp1alKrl3
y5eorUylKlUvNfEjlpdX2Nk5ucxT9O+Eo22aJMI80wLEjyXQiWmiJr6+qaam
qgUL6hcubJwxw2PGDO+5c4WzZoXOn58/Y4bPjBkB8+Yp4eUuXFg/a1bd66/7
cLl80Bc1FUt/fz+a0pqnIjrR0tSSnZU9NDjU2tKalZmVl5t3pflKd3f3OH8B
HWVnZ48zZuM0RGtra0ZGBi5IVA44/849QHbLy8tVKlVOTk5NTQ0UIUuN3Nzc
NDUQLioqkslk+fn5mjC2h5pQOQwMDOB0IAkn9BErHK4FFO3+IeunD4gfqxNj
PI9N2LIlxdpabmMDP/aMmZktPNiVK103bUpavvycubnDxo3RNjayLVvSNm6U
vP/+5dRUHmGeJw/CPL8JED+WQCemjZqkmpunL1lStHRpvrFxqLExc/HidBMT
9uLFEixNTBJMTKKWLctfurTIyCjvq6+ir1270dbWBmqSSCSFhYVocY/fEB4a
GqJ6Fg+rP8EC+4FzqOce40y/gpqHoOgcq2faArWtVCohBLW1tY330NzcTA16
A31HlV5RA9JDLakAdJkKaMJYanKAviBb/Hf8qUX1Aek1TPxYndDJPEFBSTt3
Rm/bxt2+nbt2rcv69a5btkRv2OC1ZQsLy02baFhu25aMVCurxB9+YF6/3kOY
56mAMI/hg/ixBDoxTdREJss9cSL5++85auOrjau1TP3+ex6V+s03yWFhwv7+
X98KoVmNZjiNRkNDuKSkBG1qnXO+oKGNZjgYTLvFDe5CGx+aAmHq7+/XWXhs
g6b9AyeOnFbABVldXQ2dBf8rtEDFjIrUEzh3HR0dk/IAiqgJ8WN1QifzpKfn
2NpGnT4d/fPP0WfOxMF+/jn2zJlYankvJgapP/3EioxMJczzFEGYx8BB/FgC
nZgmaqLGLb1tNEAgeXl5aKrL5XJwGlrZIBPNzI8U0GDPz88fVXjqCQk0Ba1y
6kXhqIJhtaysrLS0dLKmkSV43CBqQvxYnRibeeB83tbPRoMwD4EGhHmIH0ug
E9NJTSYOyAEUBCVE2RoaGrAqlUoLCgpaWlp6enqor/chLkKhUKcoDA4OQjKg
RIWFhfdrCsKQqurqaiofakAYarjyUYJFYAjAqVQqlTjv0/bUED9WJwjzEDxW
EOYhfiyBThA10QcKhWLUUCogk/LycplMlp2dDSHo6OgA8/N4vHEay9CU0tLS
tLQ0yNAoTRkYGFCpVBrBEggEXDWw8XRmLcMEzjW8iEecYvI3DeLH6gRhHoLH
CsI8xI8l0AmiJvqgpKSksLDw/lFTqA6tWVlZkBVsAP7Py8sbf7BrsBClKdge
vKQhJYhRRkYGxKi3t5fD4SArLy+v0NBQqBjpVmxQyM3NxdmZzn1kiB+rE4R5
CB4rCPMQP5ZAJ4ia6IPm5mYUbJyG8I0bN6qqqrBrX19fiAU1fss4HVSRFfWS
CP+CglA5t7a2ZmdnI5Pi4uLBwUEWiyWRSEhHDEMDmR2S+LE6QZiH4LGCMA/x
Ywl0gqiJPqB6TDzwhc7du3djYmKEQiE1hGBjY2NnZ+c4D0mQiiY2DrmyshJl
xpb4+9q1ay9dutTb26tQKIiUGCAea28LeBHUkzFqfsyurq7bt29Ts3xO+r4m
DOLH6gRhHoLHCsI8xI8l0AmiJvpATzUZVk+BXVtbCyqoqqqiZjAsLS2lxsyh
JugZBQjQ9WvXs7Oz5TJ5UVHR2TNnLS0tD/7xYFPjyIQ+d7Rw984Uesd3V297
mNOIWgIVa77rw7Kvr//GjV59DNDzLSr1VOQxjUZeXV2dkpJC+Ri4HpKTk7Ej
7FHn3ExPC8SP1QnCPL8B/EKYRzemD/MQTD0QNdEH+qsJNQ65ZktQAThBKpWi
KQ2VwerAwICa5UZmjUGgrqmuprGmtqU2uzCbHc9mhDI8/Dze/+j9VElqeW15
VUMVZdUN1WW1Zd09Yw5s/hvC0NCt8s7qws5iygq6imC/hqnVe0mw2uv1t/Ub
Pxx1DtVms9kikYh6EjU0NJiYKI2IkISHS3XZv8WHhfHa2/USCJVKJRQKOzs7
H8e5KCsrw5WGXTCZzJCQkMDAwPLycicnp/z8fJ3eyFMB8WN1gjCPgePm0M3K
rsqirqKibrX1FBZ1F6rDhVpGpRbWddXCg9cnW13MM6RmHjFIBvzzICPMoy+I
H0ugE0RN9IH+akL1+R31Vg6RyAGCIpPJSkpKWltbo6OjQXo9XT2ebE+6nE5X
0AMyAwKyAlx5rv7p/j5yHx+pD0PBCFAGMJQMmpIWqAi8FHsptzBX/xm6e3p6
wK5UZSLc1tbW1dU14Y4b1N9Rq8gBFwxWx+9Ucj/wLzAw/t7SdvW1oj9b1W7f
VL8NZlWzfXP1Dqs6rD4Ps6rZZlX3/Ka6berU5z/OOdo50KVP/qhV1K2Pj09E
RASEu7+/v7Pz6uuvO2/ZEmJtTbe2Zmze7GNl5bNpk/fmzTTE2NgEIrxpk8fm
zYwtW8KsrM5nZRXdufNgxkatIv9R86c/IlCxVC/yyspKiUSSlZUVHx+PCwnH
IpfLsYyJiTGcedWJH6sThHkoGCzztF+98nb5G1vrbbY0WsMQ2Fq3ZUuDtc3I
6uYtDTYIU0kIfFXweddApz7562SeN964vH17wNatvlu3+m3Z4rVli4eNjfvW
rT5Y3bYNdORmbe3y/PN+27cH29jYZ2cXE+bRB8SPJdAJoib6QH81GVYPlYMC
39/VAjFQmeLiYuiItbX1+vXr42PiaXwat4cbWhsa0x4T3hAuviNOvZHKamIl
XE+Q3ZVJ70r5Q3xWM0vYLwypDJFnynGyuvUD6MjW1jYxMbGxsZHP5ycnJycl
JVGiQI0PiVY2VIbaGCIFNqPC1BMbTRI2Q5K9vT1OQV5eHnJDnrGxsUqlsqOj
Q8/CAGjaX758WZGhKKmsMr26/D/v/ud/DP/Hfw397r+vPvtM8+z/M/i7/z30
X//d/of/aZvx//T8v//xy0gqbGfFgaqO6u4uvXYBnsclFBUV9cMPPwQGBubl
Zb35pt++fSIbm6DNmz3WrrVft+78qlU/bN7svXGj8/bt7HXrbFet+nHbtsh9
+8Tbtvkplfk40psPQllZGdgeyojr4YEb6wlcGNALqi85zhSuYaFQCM3C6YZE
trS0qFSqh5Xvxwfix+oEYR4DZ57yqrJlV5dSzPN/bv6fZ679z6zW5343+Lv/
Gvrf/9Px+2fb//B/b/zf//zlPyjm2Vv9QvW1qokyT/bbb3sfOMDbvh3tZdcN
G85u2GBvaXkU3uzmzZf37Alft+7M6tXHdu1iHjgg2LnTKzOTMI9eIH4sgU4Q
NdEHD6Umzc3NYNpRG4OTa2pqkISjyMnJefvtt3fv3v3Zp585RjmyGljf+n1r
F2f3Y/CPKT0pnumermJXN5kbZCWyLjKkIsSR7xhcFhxUHsRkMUE4mfoBjGpk
ZPT888+DV+l0OnYdEhIiFotRNqSWlpaCD6EO1MbXrl2jJmREGGypnYTKRFMd
8jdv3rwjR45Qz3Oqqqrc3d2pt5Z64oUXXpg/f/4777yTkMJZ1rrqf939XxCL
WU1GM6/MNapaMr9m0Zw6kxWKzcuzNs5omUelwrbl7+WlCTKVD84fDI/yMJnM
oKAgU1PTpUuXnjx5/I9/dNq3j29jE7By5fcrVnwHP9bc/IuNG12XLfvnpk3u
mzf7bNzotHt30t69Yhsb59hYbnl5WdWDALXy8fHBHlEtD9xYT+Tm5q5YsWLl
ypUQXJwvHo+Ho8BVZ5gDHxE/VicI8xg486Twkla0L6e4ZV7LnDmts01rF5rU
LVzYYLQ+Z/Ua1arZbTM1zLOneAc/nT9h5jl0yPHAAe62bTRLy28tLb/etMlu
5cpPN292NDc/bG3trHZoL+3dGw9fd9s2J8I8eoL4sQQ6QdREH+C+Hn/0G22g
/GCDUe9i0OwF0bHZbH9/fyzr6upQyIbaBj++X2xb7LHAY7Q82vnE81GtURc4
FxJbE9nN7KiGqBPME04iJ0+FJ7OKCTXhy/iNjY1t+oHFYp04cSIhIQH7ggQo
FIrIyEgQV2trK1Kx98HBQeo9HYBwd3c3FYaUjEpCzNmzZx0cHCAxxcXFiYmJ
aLPHxcXhvOhZGAB/t7OzQzGKyyuWtq/8T7VezGyZ98zVGf9f5zPLMzdayraa
Fq1E4L+v/eE/7z2P3VV6oLi+pK1Vr120t7fjuKCJR48eDQgIyMvLeu017z17
Ujdvpq9Z42BhcWLNmvNr1lxYt87B0vLUqlWnNm70WL/eZfduzp49IiurS+Hh
Mfhv3oMAUXZzc4NyQQIeuLGegJPwyiuvwMdgMBienp61tbU4cUVFRYbzZZo2
7leT8vLy7du3P/fcc3/605/uv391gjCPPiDMM4nMU1ZVan7V7H+pn8fOaZ31
XMcfnun6/eo8i03KdctLl63JW/WH6/+jYZ69FXtKGosnzDxvvOGxf3/K1q1+
Gzees7T8cd06u/Xr7TZtAv+cXL36hLW1m5WV4969iS++yLOxcYiIIMyjFyaF
eQimHoia6AMwFe53/T9MAtXgL9pNWhwUSAM3HZ1Oj4mJofqc9vf2MwSMkJKQ
cwnn4lviTwSfcEhxuMS95MBx8M/xDy4KvpBw4XLq5W99vg0qCPLP888pzNH/
KzXNligGNT4kNWvPQx24dvk14crKShBpWVkZ6vnatWt65qnJoaH1ypomq2d6
n3um/9lnep81rVoxr9nUuNZsVbb14jLLuVeMn+ucNZKktkNlb18duPZQRb2r
xvDIt3nX/vpX34MHY/btC3zhBb/9+5l79vggvHu37759Abt2eb3wgv+ePdgg
+uDBuP37PYqKqvQ5Fmo08p6enocq1fjAxVBdXU1NLYorLSUlxcvL6zekJu+/
//5/3INAINAnE8I8+oAwzyQyT3Nb08aWtc/2PfuHgT/8ofeZZXVLjK8sWNJg
ujF/3cpKswVt82Z0zRhJGrFn3qx8rWOg46GKqsU81//2N++XX2YfOEDbv9/n
4MGgffu8XnyRoV7SXnjBdd8+EJH3oUORr7wSc+CAW3ExYR69MCnMQzD1QNRE
HwwNDfF4PP0/E6qoqIB2jDoQFAnkEBkZCU2hWGJocIjNZYeLwkOEIeFp4UGp
QYHcwIi0CHe2O41DYyvYHiyPEEEIIsMkYYwkRlll2QTkALwH5s/Pz0epqG7L
D5uDBtg7JJUajQeMyufzo6KiOjv16g2hwdXrXXZll7+q/eGrumNf1X3/Zd3R
L+vV1nAvUI/IYyOptd+7F9N7ByfYywBFZbNT6fQkOj2FTufQaMlYUmHtJY2W
pE6KvXKlTZ/LBroMtn+so5F3d3fDAZDJZIY5jOf9avLNN99o1OTUqVP6ZEKY
Rx8Q5qEwKcxzvevaxcpz39d9e7Thm+8av/n2V/v6m6avqTAikTSSWv+NX7l3
7+AEh5xSMw+XgYpjJMNAQQxGijpMLTlUmE5PVCcR5tEXk8I8BFMPRE30AXLj
cDhUo1Uf9PX1CYXC+7t5QkQaGhq0m7qDA4O9Pb29N3p7u3v7bvSNBHp6c7Jy
FOmK61ev9/f2Y3UkXr2c2DdLqLe4uDh/f/+IiAhUjs5pLvUB9XQFf29ubkZV
xMTESCSS5OTkri69xhPQYOTUDA0PD+hlvxjeXOLUR2VPgOdzcnIM80O1+9UE
d+irr75Kqcnf//53fTIhzKMPCPMMTzrzwAb1MMN7R02YZ1KYh2DqgaiJPsAd
zeVy9VcTAEzb1qZXK/t+gLS1h4J8ROD8ikSioKCgzMxMVC/qZ2Ijt0AcxWIx
csChjXzmWlzc29s7BUaVfFigPnFBTtbZGQcQrJaWliewo4fFWL0tDh06BDWx
t7fXJxPCPPqAMM8wYZ57IMwzKcxDMPVA1EQfPFBN7t65e/vWbW0b6ZhQWDzQ
PzAqXp/vjkAjQqFwskY7aW9vFwgEycnJyLCoqKigoGBiT0V6enpkMhmUDqpk
Z2fX3Nw8DaVk+DHPDjkKqORH+bbwMUGnmuDy+N3vfgc1kUql+mRCmEcfEOYZ
JsxzD4R5JoV5CKYeiJrogweoyS/DtQ215XXlsLK6MhgCGbkZ7AR2QUWBJp5a
llSVdFzvGP+VDdREMzXMpBSe+q5sWKsLxgSAHCoqKpRKZVlZWXh4OIQJOtUx
eQA/48ANX6GepJpgLyBng5oacliXmtTU1FhZWUFKdu3apWcmhHn0AWGeYcI8
90CYZ1KYh2DqgaiJPhhfTe7cuuMf5x9REhFVHRVeHh5aHhpeFR5SEsIsY4aW
hWLJqmJRS2zgrfAWpgvHf2VDjZ9jmF/aU9+qqVSq/Pz80tLSkpKS4uJizZIK
3I9R8SX3oB0JeUKeiDTw4VOepJoAqBDIt0F1Hx6lJrhnf//730NKtm7d2tjY
qGcmhHn0AWEeDQjzEOaZFOYhmHogajIWqOnIqfD4anJ76HZgaqBoQMTv4zOr
mL45vli6pbmFVof65fl5Kb2iWqKCSoIiGyLld+SsZpZAKXjgp0c4ioftjftk
MDg4mJGRUVFRgUru6ekBy6FyqK7ECFCr9wPndFQM/jIqEqu4FJG5zjmJDAdK
pTIxMfGJqUlfX19tba1BKewoNamurn7mmWc8PT0fqkII84wFwjw6QZiHMM+k
MA/B1ANRE51oamoSCAS5ublop3d0dKBs4/QahpoEpAYI+4Vh1WF+Kj/7ePtL
qZc+c/3MSehkG2d7jHHMU+Hpr/L3VnpLbkoiGiOEigc8FQF4PB7UxABvz7q6
uuzs7Bs3blRVVSkUClQUZLegoACl7erqwrXU29sLAkQkdR6hL9gYdYh4bID4
W7du4fBRt/gvklC31PbUwSJyEnuaPA6APPPy8p7kMyuoNm4Bw3kwcv/bvQnM
wE6YRycI84wFwjyEeSaFeQimHoia6ARa/SEhIbGxsQEBAZmZmSgSsh2LQCg1
kQxIWA0sWgHNge/gLHY+Sj/qKnP9Oernn8J/uiy67Chw9M31ld2URTZF6qMm
qAcD/Mx+WD2GIegU5wIlVKlUcrlcIpFERERQ805CgmUymVQqRQBJ3d3dxcXF
WOXz+UKhEIqMJTZDDJvN5qqRlZUF6SwpKaHYEpKN/xrOjN73o7m5ubKy8qG6
kD8isC/UKirTQLwLMi+tThDmeawgzEOYh8xLS6ATRE10Ak34mpoa3MLQlNLS
UjTkqdFsdPaSuHPzDi2OFlEUEV4S7pzqfCHugpvADUtXgeup4FOnQ09fSrp0
gn7CXeAeVRblk+EjUogeqCZodxvat0kUFApFQ0MDqoJ6xwfmv3z5srOzc2Bg
YEpKSnBwMJ1Od3Nz8/T09PHxKS8vT0pKCgoKcnd3xxlEjIeHh7e3t6OjI841
tkGkl5fXpUuXoClUTxCcOJxBQ25l5+fnQzq7urqeJLdDbYuKih6ls8wkgvix
OkGY57GCMA9hHuLHEugEUZNxgBY99SYLef7www++vr465wT85e4vmfmZaYVp
acVpknyJRCWR5cuk+VJZgUyYI/QJ90lJSxHlihCfVpSGmNqG2gc+7lCpVAar
JnV1dYODg7W1tZWVlViCWvl8fm5uLvS3sLCQelSiVCpFIlFBQQGOAjSIcEBA
QEJCQmZmJpLwF5EaaWlpQqEQFYt61lAll8s1ZDV5wl+pUYB7AwfDQF56Ej9W
JwjzPFYQ5iHMQ/xYAp0gajIOoB39/f0oGJr5pqam//jHP8Ahugt/+87NoZuU
3Rq6pQnDyorL8nLzem/0alL1KRv1KZRBfWNPAWoCBaH6VmhG1IHqIdzV1QXt
wGmCrFCakpKSQokOZCU6OhoiUlpailVsAz26pQaEAxoEhdIorIGryRPuNaxB
W1sbLmxDmGSH+LE6QZjnsYIwD2Ee4scS6ARRE31QUlKyedNmZghzAl9P4XDy
8/NBsA/1yVlHR4dUKp3Y9DePFVCTsY6loaEhLCwsMTGRTqfTaLS4uDgvL6+E
hISQkBCsstlsxGOVyWRWVVVp5zAqjDP4JL8Be1golUocxZNXE1x7OTk5hlAz
xI/VCcI8jxWEeQjzED+WQCeImmhjaGhIVazKK8sbZTnFOZ9//3kMJyanJEcT
mZWfdaP3xrAe++np6cnKyhrrIzed6OzsFIlEBqgmpaWlY82TjtOEM0h9qxYR
ESGRSFgsFofD4XK5ycnJYEKk8ni8yMhInKCx8kddTeJI7I8DBQUFT/4rtWH1
DYKriHok9ST3ez+IH6sThHkeKwjzEOYhfiyBThA10cbV9qv0FDq7gM0uGbGo
0igYu5QdXRYdqAwMLwjXxMeUxHgkedTU19y9o5dAoPDUB296lqS3txekaghN
4FHo7u6WSqU4nPuVsbm5GWIB0WxoaMApwyqW2LJLDShjdXV1UVFRVVXVWF/f
4dSXqmEg3Qp0AseFQ3gqeodbVaFQPHWpJX6sThDmeawgzEOYh/ixBDpB1EQb
TY1NdDldMCCIao3yz/ePvhod3RZNK6Sxmlkx7TGcQU5UW5Rfvh9SxbfFPgqf
8upy/ZuolZWV+nf8BN+OM97OUwQqFlyal5dXUlKCQK0WEIN4SEbt2FCpVGNt
UFFRUVhYWFZWBiU1kGFedALlz8nJeSqnBgqOOn/qn/ARP1YnCPM8VhDmIcxD
/FgCnSBqoo3mpubAjEDpkDSwJPB7xvcXUy56ZHj4ZfsxK5nnk88zChmBxYFH
GUe9ld7SW1L/TP8Hqcldbbt162ZRUV5dXfWdOzdHJen8M4fDMUA1GVZ3r2hq
aiovL4c4FmgBq8XFxQXjAhtAMnQm4e+GLyXDT6nXsAaofMjZ033tS/xYnTAk
5vllFPMUFhLmIczzSJgyzEMw9UDURBtQkyBlkHxIHlQSdDzk+LGAYxdSLkTW
RzIrmAj/zP7ZM8Pzp8ifIqoi0u6k0bJo46hJQ0Mzm50bFpanZSp/f5mtbWRQ
UKZ2PJOZJxSqhoZGPy0RCAST3m1kcjEwMNA7eTCQoV0eiKfVa5jC3bt3c3Nz
tTtZP3kQP1YnDId5oqOzIyJyIyNzNBYQILGzC2MyFdqRERE5IhGYZ/RRE+Yx
TBDmIX4sgU4QNdFGS1OLF88roTHBU+n5U/hPtrG2lwWXncXO7jL3szFnT0ee
RsxFzsWYppik9iRnvnNZVdlYNzWHk2ZtnbR2rXzdOljaunWSdetk69fLzc1T
16yRr12LVak6Sb5qlfyjj8KuXx/9ykahUBj4fN/TE09XTYbV36rhNoH+PpW9
DxM/dgwYCPNwufKdO6OtrXk2NnwbG4GNDdfGJnXLltS1a+NsbHjUqjqJv2lT
6scfB3d2jr6QCPMYJgjzED+WQCeImmiju6s7ThrHyePEK+PDBeExGTHx2fEs
KStWERvIDfSO9g4ThsWkx6SoUrgFXJaI1drWOlZH4JgYiYlJ1pw5TfPnN8+d
WzFzJm/WrLSZM6WzZslmz1bOmMGdPbtw/vymefOan322+eWXWR0do/3YnJyc
yspKAxyQfJrjqasJLrm8vLxR3ZYHBgZKS0tH9YLBjYBLqKenR3vLRx8alPix
OmEwzCNesUK8dGmpmVn5kiV5xsZxJiY8ExOuqSnH1FRsbBy9eHGGmVnpsmXl
xsalf/oTs6NjtFtCmMcwQZiH+LEEOkHUZFQZUBttbW2Qifar7W3tCLa1t4/8
4FZNTklubGqkIluBttZxqD42VrJ4cZaRUcOCBc3z5xfNnBk6YwZ99uyUOXNS
1WHG3LnKBQsaYfB19+8PysjIra2tBUVo2MBgJ9aZ5sDVWFRU9BQfSgyrxwjC
Bajdc6ezs5PJZELm+vr6cMVWV1dDRyA6bDa7qqoKVzWKjci6ujqFQoFATU0N
bqj8/PySkhJEVlRUYIkt9XFgiB+rEwbCPHFxklWrxGZmJebm5cuWZS1YQFuw
wMPEJMrUNM7Y2N/IyGvJEuHy5aXm5mVLlpS99JKvQkGY57cBwjzEjyXQCaIm
emJwcPChRheMiZEsWpRjZNS8YEHrvHllM2dGPfus1+zZvDlzhGo/NmTOHPix
SL0ya1br/v3BaWlZ+WqAqXBHgxCwzM3NNcCJdaY5mpqawL1PfQgaMH9jY6Pm
iQf8EBqNFhgYCJWRyWQpKSn+/v4QFyxxUUFBuFxuuBq4y6KiopKTk6OjoxH2
8PBISEhgMBiIQapAIHjg54LEj9UJA2Ee+LEWFjIzszJz8yozs+yFC0PmzXMy
NY03NU1S+7S+ixfDjy2Hl7t4ccXLL9PT0jIJ8/wmQJiH+LEEOkHURE+gqYj7
Uf9hFePjJcuXcxYuzDIxyVm4UDh3Lm3+/KD585lGRsz588PmzvVZuDDZ2Djb
xCR73rzst95itrd3gxlwpMXFxbj9oSPghLCwMLRVsVND7nMx3YBT85iusWH1
ZdbX14dbAAHkDx/m7t27OndUUFBga2vLZDKpaxJqEhMTg0sUfgi0Q6lUYhX+
T2hoKPyTvLw8iUQSFxcHHYmPj4dkCIVCSI+3tzd0BKsRERFYIrfy8nLyPFaD
3yjzrFkTu3y5eOVK2fLlSaamHosXw3elLV7sv2QJ3cTE1cwsasUKCWzJEsl7
7zEI8/xWQJiH+LEEOkHURP/i8Xi87u5uPbcvKam6dEl27pzi3DmlvX26nR3v
3LkMOzuJvb3Y3l5qZyfAKpJgtrbK0FB5f/+vTVGUHPzQ3NycnZ2N+z0zMxO8
Qb2Cwd417/4MebzuhwUOGRzYr8aEj6u3txfnHTkMDAxM1hz3oGhkCErXzvCx
jn7T1NQELSgrK8NJr66uRhhlKC0tvf9JBa7zZcuW/fnPf0ZJhtUTQuEvlZWV
uH3wF9zUI++f29oQ09LSgisHqwg0qdHR0YELTKVSpaSkwHupra3F1YUtc3Jy
9HlrSfxYnTAc5nFyEl+8KHdwSLt4UXLhAvfiRdmFC4ILF/gXL4rVq0gasQsX
5GFhEsI8hHmGpxPzEEw9EDXRE8hQLBbrP8Mjmpb9/Td6e7vV1tPXNxLu6+u5
Z5okRHYPDuogQJAY9KuxsbGqqgoN2/z8/MLCQhALSAZUEBAQAKEB96IR3d3V
3dXZpY+N9a4QB3XjBuizUx+7caN7rEpA/j3dPXoWBiXXvJlCa10ul/P5fBwj
MhkY6AeX61ceHNQQajsjI4Nq7yMAtvxFjd7eG90j6HqgIR/tDtogZ5FIxOFw
cDlBPrS7NozV2wJ/178OcUnovERxfnGZ5ebmslismJgYBoNBzbk5al744RF3
peSDDz7Yv38/1IGKwb2DouLYkYRCIgxVglLkqYGca2pqoCDl5eW4hKhtZDIZ
KhzVjg2y1NBnDCLix+qE4TCPFr1QVNOjMW3mgRkM8+h1s/+mmEffg5os5tGH
5WCEeQimHoia6A/c5jpnRXwcQPnBg+AT6BfC2Cm8MdQD+AHKEhsba2FhcfDg
QZFQxJfzhQVCfiGfV8CjDGFBoYBfwBcUCUbCRQKsCgoESZlJ5VW6392A39zc
RLa26ba2GVja2Sns7DJtbRXq1VGmuHSJ196uu4aRPzeby8u/VxKqDAV8TcG0
yynIEAwOjYyqTb2Zgpp4eXnFxcX19/clJmY4OEjPn5dduACTa5ns3pKyNDs7
yEdhf/+AQqHAqQ9SgxrkEPkEByd5eCRrzNMzBaYOjJh2vLt7VHPzv/qA4yKU
SCTQJn9//+Dg4IaGBk3SWE9FcB+5uaVeuCC+eFECc3AQOzhI1Ca9F5Cok7CB
1MMjpbNTxxM2nF9cZvAcUCEQx/DwcFQLNEVdLaPfLONK8PDwoO7fgYGBkJCQ
wMBA6AICPj4+dDod1wn+CMcDFYtqYTKZ3t7eCERHR2OJQ8P2iHRzc4PfggCW
+oxzTvxYnSDMMzHm8fTkXbgguXBBiuXFi/KLF9Nwg6hXR5nM2Tn56tXHyzwJ
CRlglXPnKEvXsrR7S8oyzpwRjsU8AwO9/v4ClBkMds/AWmk4BK0YTXxKU1Mr
apo6kIkxj7d3kosLx9WVq7ZUtSHAuxemVrkuLjwfn/iurmnNPARTD0RN9Afa
jGhXPplhFcFdIIE//elPNBptFI2AN9BkfuONN95//31mMNM51DkgNyC8Ojym
ISa6MTq2MTayLjK4LDiiNiKoOCi8KjyoLIhZzoysjXQRu4gyRNrNXjSoUas4
opaWxi1bwk1NlYsWKRcvzjIxSVmwgG1iIkZYbdmIp8zEJNfSMrCiokFDvKhq
tLI7OzsREEqFAaoAdj0bJYFF1kcGlQShJCgbCoYAs4IZ3TCSxG5k+8T63Oj/
ddogkDN0E2eZetTz/fdMC4uYlStTLSwEK1YkrFwZv2JF3IoV8StXcrBqYcG1
sOAjydw80dQ03Nc3pb9/ENVy48aNhIQEMDCa/BDNnp7r7713+eDBgIMHA9VL
xr59Xnv3uh84QD9wwP/AAZpWUvCePXYqVYn2ye3t7UXNo6rB59oDyJSWlkK5
NBMeQWioZ2UVFRXbtgWuWcNduzZVbVx1mGNpGbV6dcLq1ckIIxJJa9YIduzw
gnip510a1uRDvYCDWuEahgpgR8iTmhce1aLheRRSU+EoJFVmKLJIJIL84dj5
fD70DqqEuyktLQ3CBFlJSUmBiCDbpKQkqVTK4XAiIyMRZrPZWELFoqKi7n/2
ohPEj9UJwjwTYJ6mpsY9ewJWr+atXi2ErVjBMjcPWrUqafVqkToGSwFllpbi
TZt8KyvrHyvzfPdduJlZ4rJlIjMz6dKl3KVLU5YsSVq6lLNsmQCrZmZCMzOx
Oil1/nyWtzd3DOa5duBAoIWF0MJCbGEhgoGpli+PA2WtXMmDqeOpJJmFBT03
t/wRmeePf/TYvTts166I3bsjsNy1C+Gw7dv9t28P2rmTifDu3eGI37GDffCg
4zRnHoKpB6Im+qO8vFylUj2Zbrxgp0uXLj377LOnTp26f45IoVD43nvvffPN
Nx7uHg5BDg7JDn65fskdyaKbooS2BEiJl9ILInKJf8k3x/ey4LJbuhsE5XTU
6ci4SIr9KKA5/Omnn6L5nJ4u27w52cSkHmZqemXu3MRZs9znzxcuWJC9cKHK
yCjdxKTa1BRJ2KDV3DwuI0N15UoLlQnOy9dff3306FEwVUxyTGxrrOSuRDos
lQ/LE7sTLwsv0wvpvBs8fi/fM8MzpDxEfFuMVMmwxCfBp6a+RlMYnPoXX3zx
5MmTGRnyL7+MWLyYtmRJjJkZx8SEZmpKW7Qo0NQ0cMmS8KVLY5ctSzEzE5iZ
8RYvZs2d6+vgEFFbW09lAka9cOHCkSNHfHx8srKUf/mLx8svx73ySjzs1VcT
tm07t3Wr7f79AS+84Ltzp8uhQ1GvvjqS+tpryfv2uQqFac3NzW3/Di6XW1lZ
iWPUxIDkc3NzIcTUZ2DYHdg1ODgYu962LWbtWtW6dfnr1xdaWgpRUWvWKJYu
9TYzCzU3j1y1ir9uXR5S164t3rYtAG5za+u/ssXpxrlAPqB9Ho+H/ULFKLmH
UuAaoEZhAhD+7rvvqArv7u6mLnU4CSgn7hSk4vrHZkiCRmMVB4WiIhJZIRNE
Igl3PeKpz9UQiaTCwkI9OxMRP1YnCPNMjHl27kRDr3D16qLVq8uWLg03Nr5k
ZoZGq3DlSpm5eerq1XnqVFjZ+vWhCkXeY2Wezz9nLVwYuHBh0qJFAiOjACOj
oAULwoyMmMbG0cbGSSYm/EWLZIsWSYyN42fMoJ8/H6mTeXJyMvbvj7SwKLKw
KLOwKF21qszUNMTEhGFmJlm2LHXJkriVK1WIV1vFihXRfH7GIzLPSy8F7t3L
27uXv2+fcMcO1pYtAbt3J65ff9HKytPGxnf79sh9+/hIfeEF8f797ipV0XRm
HoKpB6Im+gNN0Sc5HA12t2vXLnALtUcsQQKoBLSU0ZI1NTXdt29fACPAKdTp
C7cvToadvMi56Cx2/oH+w7nEcy4il4vci1+6f3kq8tRR/6Nnos6Axo84H3H1
cs3KytJMLP7hhx+amJgcPnw4Li7WyirRxKTG1LRu0aLmuXPZzz13Zu7ciFmz
XGbOdJ0508nYuABJpqa1JibNy5ez4+P5KlUelUl2dvaGDRvMzc3t7e2ZLGZ0
c7TwrhBiIR4Wx1+NRxnsEuy8FF6OPMfvaN9FVEWI7oioVGe2szJLqSlMeHj4
okWLtm7dGh4e/OmnoSYmTkZGF42NHRcsuGhkZLdw4SVj48tGRvbLlnGXLmUt
XRoF53bpUvbs2fbHj3splb8eVF5e3pdffomDevfddxMTY//8Z/eXX4555RU4
q7Gvvhq/YcO3GzZ8BVd28+af1qz5GA4t4pEKF3fvXqfIyPi8vNxRc68jw/z8
fO2YpKQkFDUjI4OKf+ONN3Auvvji86io6Oefj1q7NgfOKvxYM7MgY+NTq1Zx
Fyw4uXSp19KlPitWsNaty0bq2rUFNja01FRxfr5Kky3uRBT7888/d3R0TEtL
UygUNBotMzMTJN/Y2IhLmppBHqu4YW1sbFasWGFrawst0Fzq8DHEYjGkAWcE
m+FaReGxpHLLyclB0ljvpgfV0POuIX6sThDmmRjz7NzJWr06X22lS5cGzp//
w5IldGPj87CFC+0tLNI1qWvXBiUk8B4r8xw5Ej5/vtucOZfnzXOZO9dp7tzz
8+Y5z5uHmIuLFglNTOJMTGIXLMCtHfvccw7Hj/voZJ6kpOh9+yIsLAosLIrh
zcKPXbDg0oIF501M6CYmXnPnnjQzE1FJcHTNzdnh4YkTZh4wRnR09MGDjL17
uXv3psKPtbJyXbHim+3bQ1eu/HLduvPr11/YssWfSn3hBRGIbpozD8HUA1ET
/YGmJW5MfT7jmRSAKM6cORMTEwMaKS8vBz9QwzyCUkAyP/74I+jrattVzyhP
sLR9kv1nLp8dvnD4Q9sPzyWdc5G6uMhcjjKOOvIdv2N8F1AaEN0U/bnH58ER
wahMTUucxWL5+PjgoPLzczduTFqwoHbBgnpj46bZs+NnzAicPTv6D39wfOaZ
n597zs3IqGTBgjqYkVHzsmVRo57Henp6ojmPgiWkJkS3/KomsNirsccCjl0W
Xv4p8qdPLn9ylH6U28elpEQ0LPKM96yp+9dTERwazjKOt7a25quvIhcu9J43
z2n+/MsLFrjNnXvOyMhp3rxL8+ZdXrw4YdGiKBOTYGPjQGPj4GefPXPhAlPz
VASEmZCQgPKAV8vLS9591+3QoZhDh2JhL78cv379d+vWfb927VcImJv/Zds2
50OHotWpCXv2OOl8Hqt5FqH9nITJZELTqaciISEh/v7+OCNgbBubKEvLHPUT
pFwTExcjozOLFtGMjH5esYK7ZEnQsmXhSF2zJm/VKvixAXl5//ZUJDQ01NfX
l8oHusDj8SBYVHl6enpw1VElwbKvrw9nDftFhWueYyASpQoMDKQ+9nN2dmbc
A4qHSyUgIAC5Tco3lsSP1QnCPBNjnu3b2RYWKnh9q1aVLFoUtnChh6lp8Lx5
tnPm/IA27IoVCguLfKSuXFm6Zk3IqOexk8s8dXU1X3wRNW+e3+zZ7rNmuc2e
7T1rloM67IwW/YIFHCOj+PnzI+bPZ86fH/7739udOxemk3kqK4tfeCHc3LzQ
3LzY3LzI3LwM3AWvGM4wGGzmzG9MTKKXLy9UJ5UvXx7F46U/IvO8+CJ9927u
nj2pMEvLM+bmR9evdzQ3/w6++YYNrlZWXrt2jaTu2iXat89VpSqezsxDMPVA
1ER/DAwMgEme2DDU2Bd4Hm3w2NhYNG/LysoaGhpAJijA7du3EUCN/XLnF58I
nwuRFzwEHqcYp477HLcLs3NKcnKIdvCR+GDpKfI8G3I2WBXsJ/Y77n9cKBNq
Vy+youiltbX50KEIKyuJlZUUtmFD9MaNCViuXx+2bl3Ahg2RVlYiKmnTpvSd
O4Nqalo0X6kBmnEmZRmyQEVgZElkZGkkq5QVkBlwKe6Sp8DzAuvCSdpJu1C7
0PxQJMEiSiPo8fTe/n+NtYLDGRoaovKxtWVv2eJhbU2zsWFs3uy2aZOzlZXH
5s2Xra19N2/23rKFYWPju3VriJWV25o1tsHBOCn/kngQL9WjpKen68gR93fe
ob/zTsA77zBgBw6cOnjw5xdfPHnw4Jn9+4+/8spFKvXddwPffNMBoq3PN1rZ
2dkpKSnUR2JUHVKB6urqV18N2r07ac+epN2747dscd22zc/GxmXLFuc9exKf
f562bRu0JhGpu3ZxXn/d98qVq9pfqWnyoT5Cw+key2+hxkfSXOHQGvylu7tb
KpXKZDLoEcQoPj5eqVRiFRcPdEcgEIhEoslyhIgfqxOEeSbAPFeuNL/xRtDO
nSk7d3Jg27aFbtsW+fzzzK1bcY97P/984I4dyepUWOqLL/rV1jY/VuY5ezZ6
82bfTZsYVlZBGzZ4r1/vsnEjlq6bNtE3bvS3sgreuJFuZRW2YYPHqlXng4Jw
Uv710a8W83S+917w9u0p27dzKQN9qc3Jyspz0yZHa2vG9u2cHTuQxN++nV5U
pNfXoeMwz5//7P3aa8zXXgt/9dXgffvOvfii09699rDXXgt98UXnP/7RFQHY
K6+Ev/ceruf26cw8BFMPRE30B7gOmaP5Oek56wRa99RAK2CJsT4fwmHml+Rn
FmVmlWYpi5WwzFJ1uEipLP11dWRZkomYdFV6U0uTznYxDiopKZfFUrFYeWpD
IF9tBSxWoTrwa1JkpCo2NrOnZ/SHcxSQf1ZRlrJkZI8jO8Wui0cCWP5aPHX8
SFKJUlWsGmvMxqyskpiY3KgoynLUlq1e5t4LUOGcyEhlRUXd7ds6VEA9gk1m
YmKGtiUkpN8LKzSRSUlYSq9d69Tnshlr9BuwemJiVnR0zj3L1rIcrQAsNzlZ
2den78j2YwEFgJtBo9EgbahJhIuLi3E7Q1lQmF710D9QJT6fD7cEtw/uLEqv
h9TAlYB/QWIgZLj7EKA2GFYrMpLG0lbix+oEYZ6JMU9KSo7WXaOKjs5Tm+qe
/ZqE+x0uEi5pneWZROaJispjsynLVVvOv6/CVFhGRGSWl+tmHtxGPF4ubvN7
DJZ7j8FyNcR1Lz4vJkb56MzD4Sji4hSoH7Up/t2UWgEll6vQf06NsfCbZh6C
qQeiJvoDbW3cmF1dXZOes87S1tbWstnsmJiYBw+5c1c/e3CV/KKfPSgPPcvz
BArzGJCdnc3hcMa+xp5QsXG/oBhvvPHGu+++297ePqzu1S6TyUQiEQL5+fkI
Z6uheVcIuVGpVFAxBAQCASRGLpcrFAq4K9T3bPiXRCLBEjFisRiROr/JJH6s
ThDmIczzePL5FQ9inieE3zrzEEw9PG41GXXHUWNE359Kxfv6+uIKN1g1AXCr
oromMXPIRGFhYVFREVrZaMN2dHSgNdrY2FhQUIBVaoxoMtG5QQFnp6ys7Ik9
HBsLUBPcL6tWrfrkk086OzuH1TKXlJTk7u4OrwxJrq6uNBotMjISS4Q9Pf9/
9q4DLIprbSfX3D+axCgqoMYoomKJLdYQOyqKDewx1qixxBqNJbE3BOm9Lr3v
wrLUBRaWDtJ770VAlKYooob/deeGi7AgUhfueZ/zzPPNmdnZmTPnvO935jQd
xMM/QenAFqfRaDTE29nZ6enpWVhYODg4IF5bWxtnqvPAYDD4tmX3CT+WME/b
IMzT50CYh/ixBHzRrWpSV1eHqj0qYjU1NVS9nhqc2MATCGo5v7S0NPAnbBAp
6m7p6ektp8sWHDVBnbGkpKQLJyTHfTKZTCQRqADVUg8PDzwsDFdXV6QMHjkk
JKQ9C530XSA/FBcXZ2VlZXYdkOu6Lw/k5+cnJyf3uprg6aKioqAajo6O4Hyq
dQ8IDQ19+PAhMiqM8PBwOCowfHx8OBxOYGAgvBScDAcGWQ7ZLCgoCOdYWloi
+1HLNoWFheFk/BwX51sYG/qCH0uY54MgzEOYp2Po68xD0P/QrWqSnZ2N7A0+
REZFRRKSkZubi6yOnAzhCOEBVTbkcNT9WSwWcjI1MBZs0LSHjOCoCYoYyIpv
EesYcJ9gAyQUCjuqpai3oixT7UdIFihsQEBAj41T7nngAamFLxO7FEg6XBMK
1YVvqhHIqxD9blrlvP2AKCCfVFZWUsM0YEAaSktLcWNQOqqvWkVFBeKpORuR
kVCCeKv0VqEYoohBxJH+EMfg4GBc5NWrVyh0VEc1aBOu2Xf7xxLm+SAI8xDm
6Rj6OvMQ9D90q5okJSVRqyqjjg/OpPrA6OrqgjNNTEyw1dfXV1BQwCELCwsN
DQ0Gg+Hs7GxkZISaWtMmLcFRE2ginqK1MQIdwNu3b/38/EALKSkpvr6+kFdI
KvgQBRzMAB2BuPTYOOUeBlgLD45MUlZWVssDaPAFD7BrampgPOcBfkhj/Iv3
gaMtI6urqwsKCpCGIMwuX80T7hDf1SF7GMk8NGZF5HkXFxfkFjg8eHYYuE+o
HkQkNDSUctvgwlGd09hsNtwVd3d3ZDYcQqFDEWv/clGC78cS5vkgCPMQ5ukY
+jrzEPQ/dKuaoFKWkJAANYmOjoZAwEB1FVkXhM9isbCFfCDD4xCHB2R4xCOf
N8vbgqMmmZmZrXVB7xhwn6iZQjhArajAghtreMAjgAZxFKnR+eGlgonCwkKw
GZg/MDAQj4yERW29qKgI6YA8GRERAbaENwK5oVpUqVZgqtpOfe5AJH4C8qRm
gwGavpqsrKzu6OPX2qjhngTyCW6j6XJLuB+ULAMDA/gk2dnZVIc0HR0duGr2
PMBzs7W1VVJSsrOzg6ygoKFM4RwHBwc4cnDz2t+ILPh+LGGeD4IwD2GeDqAf
MA9B/0N3j7YAV6CWito9tU40Sj3+jqKLxi0KRVVVFQxkeD8/P7Brs/as/Px8
5HxQSq+rCW44KCioJ5vbkCC9XgHvJkRGRkKdkT309PRQNwcBQjuoijziQYxQ
Uhzicrl49UgEeB1UFyxqTGtqairEAk4IfgI9gseCn+OcRlZEvsJpXf5NCX/R
u19F4GihjDRbIod6WBQTqAmSSFtbOy4uDimMhIUow5Gjep0h92K3uLg4IyMD
NtXsDh3/qJZQwfdjGwjzdBqEeQjzNEP/YB6C/gdBmP0G2bj2ee2z6mdaGlq+
HN+KpxXPnz1vGlJTUhUVFLMzs5/VPHtV94FK7gfVhDfr9bt2oQ+Gly+f19W9
JxxQQ9BXTza3UUtdd3kTlSAARJeXl4fEtLGxsba2NjU1hShYWFiYm5vjEGJA
dKjXo8KOFwp9gbLgHGowLGiTRqMpKytjS41yxVFNTU3U8RvHQSDRkBm6/JsS
OBkq1nLp+R5DQUFBUVFRs8Y4OGPQU/hjUDpvb28kS0VFBTXLDc6H9lFrnSMS
6YOTExISoCDUuufQJuorXDtvoE/4se1BDzPP27dgntq6umftCfX1hHm6C4R5
Oob+wTwE/Q+CoCbJ6cl+MX5+8X4PTB+YuZpxYjjceC43geuf6O+f4M9N5DoH
Od/Tv+cS6uIb6xsaHVr3qq1miA+qSU5OnpmZl5GRj7Gxr7GxHy80GlTgGBm9
C4aGHEdH36baQXUb68kRo6CI/Pz89vcg6kMIDQ2FmiAxqRXDUW0HS4fzAAN0
h5QPCwtDCuTk5IDDAwICoDIGBga2trZ4y1wul81mu7m5ufMA2oSsODk5NeV5
nNDlakKNce6tJtdXr17BwWi5XnlaWhrSEFJiZWVFDQp+9uwZg8GAUvv5+SEd
cIhOp3t6emLX2dnZzMwMkSwWC1fz8PBAMkJi2vmdp9/4sT3MPNnZBRoa4QoK
0YqKsbwQ18SgQoyiIo5GKyjEWFqG1NYS5ukWEObpAPoN8xD0P/SWmqAsNHYf
cuO4mcWamSeZm8Wb2WXYMXIYCNZp1hapFvbZ9lapVhbJFqYJpmZJZjZZNsbO
xk2XFGyJD6qJn1/I+vU6a9daSksbrFihvmKF2urV+lJSGlJS6giIWbOGJiNj
ibB6teWhQ2pPnlQ1/hasjipn+8tdJ1FXV4e/Q9kHe/S/Bj6ISG5ubn19PZiZ
WhqSGlVBreidnZ2NKjzq8om8+VvAgVBVyArer6OjI8gTJ2RmZqLKj9Oqqqqg
StTw86Y83x1qgvuBruEfe/6N4B8zMjL4jveBxsXExCC3UAMuIL4oX1AQ6AWU
wtLS0t7eHkJsampKfVOysLCA8urp6eEoBAiH8C7a+WGkT/uxvcg8Pj5hEyf6
iYgkiYiECwtzEEREwoSFucLCvrzgIyoaKyqaIiqaPHRo6rp1do8f/3ftKsI8
XQjCPB+L/sQ8BP0PPaAmKAKvWwCEfOHCBQUFBVTfWByWbabtdfp1Na4aq5Tl
WeXpWuaq4KEg7yJvHGesyFa873Ff0VPxluMt4yRjM0+zyprKlhdsBKp44CIU
t9ZO8PLyX7cObqq7pKSypKTq999f/uEHxblzb8yff3Pu3JuzZl1YvFgXR9et
85SW9ti/X/vJk/dWQgRB9VgPJVDHkiVLxMTEwKVdOFRZQEC17vH94APVQHXe
wcFBS0vLyMjI3d1dV1cX7Eej0RCDQ9Q4AnNz86YTJYEMm14Ndne07vXiqGH8
I9Ue2vIQnh0CBz+KGrZDdQrFLmxscbfYolzAwLa0tLS8vBw2DOooItvfZt1X
/FhBYx4Pj+CRI5O++qrmiy+8v/zSd9Agsy++8Bw0yH7QIPqgQQ4DBxp++eXD
wYOfDR5c83//Vysl5VJWRpinW0CY52PRn5iHoP+hB9QEtTNU0wLeB/hBXFx8
1KhRly5dMrYyts+zP615+o7THSVvJRWOylWrq38Y/XFC/QQtjobdB14PoCkX
jS/ec7+nYKrgxfEKaB3Kysoo7P7+/q2doKamu2aNCTzV5cuNFiy4O2PGmblz
r86Z8+f8+TfmzIHx16pVNuvWwY91l5Z2P3CguR+LK6Cq3jPdxlDTP3782IwZ
MyAr/e+rSEpKSnx8PF+VRA0d9XTU8VFhh3bAoFr0fHmIi4uDxEBh6XR6G4t1
VlRUIBt0+dCY3ho1jCxHTYXak3/KF33FjxU05lFWNhQVjR08uPrLL+MGDWIN
HKg1aJD1oEEWX3wBP9bmiy+sBg/O/vrraoTPP3/e0o/tYeY5dowwD2Ged+hn
zEPQ/9ADaoJSgHJd/j4KCgru3LmDSm5SYpIT28kqw+qK3RX7Antlb2UFT4UL
phcu0C4oeCio+KrcdLx5i3nrrvPd6/bX5b3ldR118wvzy1sHKsuoKeOhWjuB
yfSQljaXlvb84Qe1+fMVZ8++JimpMWfOrTlzbs6efXPpUsO1a93XrmWvXeu5
apXnvn3N/VgQYNPZ87oWqJxSM0U3gk53OHbsaExMTE4L1NTUtCQ0VIpxh7hO
cXFx2x8E8F5wTrO/awNd/nkBNXdqRHBLaUbdH6oBxqZeGfIPNcAcXAqFxTPi
AWNjY9uQdcTjhK6dOp5CWFiYi4tLz6tJVlZWa+Lbw+grfqygMQ+d7iUsnDRw
4PPPP/f/v/9j//vfdp9/HvTvfzvxgsPAgdFffvls0KAXgwbV/utfL5ctc23m
x/YG8xzrHub5mzBPB0CYh/ixBHzRi73UQAhgBhRJL38vLTctBXsFJZbSfbv7
N2g3LmhcuKhxUcNFQ9FBUd5W/rbl7csGl29b3FZiKtEYtOe1bQ12QN257V5k
ISEPd+5U27pVR1ZWRVZWddMmZTk5ddgwEFaturdmzYOtW/UQ5OR0T59Wr6h4
T00gJQkJCd1TqN/cuuUsLc2Vlg5YsyZYWvpdWLGC+/33zitXcnkxQbzIABjL
l7u4uobXtRhDDf7U1NRkMBi2trZBQUFtTM0HdXjwQPXmTcWbNxUQbtx4Fyj7
n8j7jfEXL15LSEjs2kEfVFtVaGgo7jMxMTEjI6NxeUfqg0nTmJbAW0hPT+d7
COIbEBCAn3fHmAj8Ly7eYz0VKeBB8KdQVUH4ONZX/Fi+6EXmCQ6O+vFHp+nT
OTNmOPMCc/p0N2xnzHBCEBOzExNjzpzpO2sWZ8oUvz17LJv2zG/oXuZ5q65u
dvas3pkzCAZnz74LJ0/q7N5979Qp3bNnDc+e1ae2OOHXX5W8vQM6wzwvXz6/
fNl83z76vn2MvXsdqEDZ2O7ZY8+z6bx4xq5dhrGxKYR5GgjzED+WoBUIwqjh
pxVPcwpyMvIylLWUmW7M5Izk9Kz09Oz0nMKcrPwshOCI4DsKd8Kjw7MKsopL
itvmtA+OtqiurklJyUlMzE5K+k9oagcGRhob2zKZ7JiYNOxmZ+e+fv3e34Gj
UN3u8jmueaj/5RfGqFEZoqK5wsJBwsKhwsJhoqKxIiIhoqLJI0YEiohE82JS
REULhg4Ns7AIfvGiuVhAoKnFFo2MjEJCQlreZ2pqKuKrqqpevHhx+fKN48cv
HDt2/uzZa+fPXz937vrx43+cPn0FMRcu3ObZf509e/XSpTt79hwJDQ3rcg3F
BcGQhYWFaWlpCU2A+09KSkpoE9RCkHwPQWWKi4u7aZKi8vLyoqKiHl56Pisr
C3mxy7/wdAx92o9tip5nnvj4gpiY/JiYwn9CQaPN4STo6zPs7X0jIrKjowvT
0wt7kHne/vWX1q5dBj//bLx5s6KcnOKWLcrbt2vIyT3YuVNXTu7+1q2qcnJK
sPfsMd24UcHR0bNlo3n7maeurmb3btoPP9gsWGC5aBFr8WI3hIULrX78kYnt
0qXeCxfaSEo6LVrkvGyZ7/ffqwUERBHmaSDMQ/xYglYgCGoC/P3279f1r/X1
9IMCg+pe1r1bH+Xt3++WlXn7zsjJzlFVUS0uKn775sN9w9o3G/nfrYX6+lcV
FU/i4qAY0bx5VJpfBxcP6K6Vx+HHMkeNyh858vGwYeZCQqZCQgZCQpYjRrBH
jPAYMcJLSIgmJKQvLOw1alSpkFDc/fv2UVExSe8jOTk5Pj6ewWAoKCjgPila
booHDx4sWLBg+/btTCbzt9/OHDhwYvfuw/v2Hd2z59jvv1/96adfTp36c80a
2RMnLsvIyB08eHL79n0XL95ZvXo9rtZNTUt40UjP510HUH33fT3o+VHDVGtm
D+tXG+g3fmxDLzDP29bC69d1YJ74+Bge81TzIt9DdzLP2ytXdPbtM9m/32rF
irMIy5adXLHi3IYNN2VkbmzYcHvFijNLl/4GY/9+yy1b1DQ0aNHR0R1mHhbL
afPm+3PnGsyerT57ttbs2ZqLFrnMnPngxx8dJ036/Ycf7CUkzs+bZzRjhvyS
JT4SEie53EDCPA2EeYgfS9AKBERNGnhjPA0NDflW5Ht+dUgwUk5OTlhYWMth
rXBufX19u6fGTfmxeSNHlsNfHTbMVkjIbOhQVVHRKCEh65EjU4cNsxMSMhkx
wmHUqBIhoRj4sbGxcSktQC03Qy2n0vLo3bt3Fy5ceP78+aCgwP37Dx8+fPbU
qUtbt+6Wlt545MjvPD/2rw0btm7atENGZvOuXYelpGQOHTqFLZfLFYQuUr2O
Hh5tgX+Bz1BeXi4I7XoU+pMf20CY5x3e+bF799IOHLBeuvS4tPSF5cvPLlp0
aNs29ZUr/9i5U3f16ovLl5+Wlr60b5/F5s1qmpq0zjBPcHDAhg2XFi40lZR0
mD79zqRJpxcssJg1S0lS0nHKlMtTplyZMuXCrFnKEyYcnz+fNnHiET+/7qpB
9y0Q5iF+LAFfEDVpDaiEImWoNQebTnANHeFwON0zeLN+zx7GsGG5QkIlX3xh
OHRozFdfOXzxheVXXzEGD/YYPNjliy+sBw5UGjzYS0ioeNCgKAMDztOnlS8+
EpmZmfHx8YWFheDDM6f+2PXT4b27j25av3Pr5n3bt+7fuG67nOyuDTLbdm4/
sEVu99rVctu37d8st2f50jX+/kRN3qGH1QRvKjIyUqBWuid+LF/0ZeZ5e/my
xs6dhrt2mSxadFxWVlVK6sLSpWdXrLi4evW11av/Wrbs97lz969Zc/3nn03W
rVO0tGRWVFR0mHkqKh5v3aI2Y5rGrBl6EhOvT518f+oURYmJVyZPvi0x4a/v
pqpMkbgzQez8tClKUybLi4v96s8NJszTQJiH+LEErYCoSRvARaqrq0G/YWFh
jUvbUGsOVlVVffDnH483CgrOW7e6y8q6b9pkLSvrKitrLytru2mTjawsQ07O
duNG2oYN2rKyjnJynhs2OLDZER3oLNc4zBYSef7apaMXTx27fOrIpRPHLp/G
9tCF44f+OPbrhd+O/3Xm6OVTB88fO/7naRg7Dv4cGt71/WP7InpSTeDSBAQE
CNoy98SP5Yu+zDx/6+panD+vde6c1okTCr//rn7qlBIC7DNnVE6cUDx27Pav
v149fVrl/Hkd7Pr58UmrD6KReZ4/q/71lLzs/nuy+xU27b8tu/++7P47G/fe
fBf235I9oCh74N6GPTfkDijIHZBfIXcqJOQhYZ4GwjzEjyVoBd2tJq1NTtKy
dICrDQwMBEpNKFCfR2Ji3vVEpTqnsdnsbhq/WVxcnp5exguP/9k2NUrS0x9R
J6SllVZV8Zn9pv2oqqjSdtWhZzAY+Y7MfKbju+DolO/0z9YJkU75zjjKynfR
9NOMTogmagKEh4f32GzkyHtwYwRkkEUj+oQfS5jno1BS8jg3tygnp6hx2zRk
ZxcgUIdgVFd3lnm0WLp2KUy7LGdGlqt9lrN9Fsshi0VtERBJ58Uzs9zVfLSj
42MI8zQQ5iF+LEEr6FY1ef78eXR0tKenZ3l5eWNfLxhFRUWIqa2tpcojFAfl
JSwsLCIiIicnp6SkBILy9z9o6G01afjn80hKSgqYpLS0NDAwENuemZC8+1D5
pNIixEIvVO8B+wE9n26aaKrio3Lf5b5Jogm3nhvUEESLpTkWOWoGalqlWpom
mCakJQgarfUK8Opzc3O7aUhyU1RVVWVlZXXPuJ5OQfD9WMI8gox/mEdXia1I
z3cwSzRV9VFWcLlvmkjzr+cG/4d56JqBGoR5moIwD/FjCfiiW9UkISEBDJyW
lhYcHBwUFFRRUZGcnOzh4WFqaurj4+Pi4oLaJeL9/Pw4HI6TkxOTyXRzc7Oz
s+NyudScz1Qn815XEwogEOgg9BF3iAfp69T6Tk1CLTT8NS6aXLxqfVUnXIeR
y1DmKMOP9av383/lDw9WO1RbzVdNzU/NKNrI3tm+uLi4mYa2Nj4XkTgZvkF2
+wDHo6eeu7PA3cbHx3f36jZIQLguLRNcECD4fixhHkEGYZ6OgTAP8WMJ+KJb
1SQjIwOiEBMTA5mg0+khISEMBsPY2Nja2hqGmpqatra2kZERtWi1srKyvLy8
qqoqTnB0dMQJBgYGEKAGAfgq0og3b95UV1e7u7vjDgVqIGcHADWxfmit6qty
x+n2Fas/NYLUrVIssasRoG4SR7PLtFXxUdYK1lRkK6r7q5klm3lyPMN4wIug
KC43NxeKT0U2S/M3b15evOiwcaPXhg3eGzf6ImzY4NPU2LDh3SFe4KxdaxMc
HF9f3/XqXF//6tWrl69evfhgqK9v78eHyMhIT0/P7m7dKygoiIiIEKhBFo0Q
fD+WMI8goynz/GX1F8U8Kl3HPCdPukpKRi1cGLdwYfzChQk8I6GJEbtwYQwv
YNcrMDCxO5jnzZu6169r2xdetpzdkS8I8xA/loAvulVNXr58mZmZWVhYCNpJ
TU0F/aalpcHIyspKSEgICgqC0MTFxWE3NDTU399fQUHBysoKh3BOeno6DlEz
1wmOmlDAQ0FQcM/dsfhgj6G6olqNoX6Hcf9P8+vy7koKbkr33ZTvsRT+tLgu
7/ZAP8z4tqP8A7baTYe7Kt4a95wVHkY/BIXiXTx8+BCvpqamBo9vaWmJBIdL
0Owz0evXz3futJ84MW7ixHgxMR8xMc8JE4LExLxgiIsHwpCQSJSQSJ40KWHS
pJSxY109PDoyZq1tPHtWo6pqdeOG1fXr1k2CDW9r1cy+etUgOzuvPZ8gunu0
BTyWqqqqqKgoQRtk0QjB92MJ8wgyKOa5C+axuHb/P8yjdI+l+JflP8zjdO+B
l+o75vHRkHe+/1HM8+ZNjbQ0+9//Lv/ss6rPPkv97LPkzz7L420pI+2zzyo/
++wZLzz/9NNYF5eYLmee58+r7993PHvW5cwZF97W9exZKryL4YVG2+3sWevs
7HzCPO0B8WMJ+KK7R1tADlA6wDMUV9Sj6ssD4lHjq+MBuy9evMCukZFBWFgI
NZs0dQ5VmoqLi7S0tJ48KW/PP/aAmuD6XC63tLQ0Pj4e3CIga/Z9LJ49q9y6
y3jWD97fzWfP/tFrtiRn5g/smZJe3y3wmCXpM2eJ76wfOLN+9Jv5g9fsRdzp
82iBQTGv698BXEe12IaHh8OAk+Ds7AzjfT/22c6d9EmT0iQk0kaPNh49Wu+b
bwzHjXPlGSbjxnmIiweLi4fgqIREzrhxXh4ekV2uJk+fPt6/X0tOzk5W1oo3
7YP5xo1m69ebbNpkiUg5ORvYsrLWmzfbbt7MkJFRjo9Pa8/yl9HR0Ww2u2uH
jefn5yPfFhcXIxHgqLi4uLBYrB7oCNcxCL4f2/DRzGMI55AwT88AzLP7gPZi
aYbkSvrStY5L1jIXraYvXsP4Qcpu8RrmMhnmEmmnJWuYi6QZS9c4L1yuGRQc
3X7mgR+7ejXn3/9+MWDAqwEDPAYMYA4Y4DpgQDTPwG7cgAF5Awbk8442/Otf
qS4uXb9EWkXF440bbWbPDp01K3jWrLBZs/xnzvSfMcN31qzAWbPCEc+zQ2fP
hh01e7Z1XFwGYZ72gPixBHwhCLPflJSURkTEhYRE/fXXbRrNMjAwIjQ0pmlw
dmafO/enh4dvaGh0RsYH1sjrATWBfPj5+VELwYAHwsLCMjIy+tznkdrailUr
XYYPDxYWjhcWzh42jCsikjViRKqoaP6wYcHCI5KGCXGEhDxHjIgeMSJZWNiH
y/3v2u4QeiQyFCQoKAhbZCFQX9M0/8ePTYWnOmaM6ejR2iNHKk2aFDV6tObo
0Tri4gFwaEeP1pCQSJCQyO4mP/bJk8f79mnLybmsWqWzbJmSpOQtSckbCxf+
KSWlISvrLCWltXDh5WXLlDdtctq82U1aWs3BgRUdHRX3IVhbW2toaAQGBsbG
xn7w5HaCRqPNnz9/5cqVCgoKjo6OyFQ2NjZI4a5NkK5Cn/Bj2wMwT2RkbHh4
xNWrN01MzOEfPXwY1TS4unpcuHCZzfYJC4vMysoizNMlAPOgXjlxouvkyX6T
Jz+cMIE5dcrDKZODp06N4UUGiYszxovZTZ7MkZAImDSJHhAQ137m4X2P9YEf
+9lnrwcM8BwwgD5ggPmAAY8GDLDn2Tmffeb4r3/Z877Hwo9N6R4/tmzdOvsZ
M5IlJNzFxW3FxAwQxo7VmDiROX164qRJLmPHqk+YYD99esL06WlTpzrY2bkR
5mkPiB9LwBeCoCaOjhxZWbqMjOuSJXYrV9LXr3ffuNFzwwb2hg0eGzbAcF+7
1nnRIpu1a12lpZ1v3bKrrm6rZ34PqAl0pHFCchAs/i4+Pj4yMrK7e+B3LWpr
n0pLewsJOQwZYj5smNfXX6uPGBEzdKiZiEju0KFWwsLJQkLMoUNpI0YEDx3K
EBHx43ITm81+g3TAsycmJoaEhGRmZjZdvhB+7Lat9PHjUseNTREZri88TENU
mCYqYisyTEtU2ERU1EZkuN5wIaWx3z4UG5c1emQ3+rGbN7NWr9afP/+P778/
sXjxzZkzDy9adGvevPOLFt2ePfv4/PnnN2yw27wZWUuNyfRMTk5O/xB8fHyc
nJxiYmIgox88uZ0wMzNbsmTJqVOnnJ2djY2NkYctLS2bzoEvUOg3fiyL5XX0
qNavv+rt2qWyb5/GkSMGR48aHTuGYHj0qOGxYwYHD+rs3Kl4+LD+gQPaSkq0
mpq2CjhhnnYCfuzmzUwxMaNvv9UcP97+m2/uSkhwxo7VnDo1auxY3cmTA8eP
N4OnN3Gi27hxJhISTgEB8e1nHvixK6Xe+bGffvryk09Yn3xi/8knHp9+GvDJ
Jw6ffML+9FN/XqTFp5+Wffrp35980o1+7MyZyZMne4wdqzRmzM3x4w1Hjboo
Lm6EXdjffHPt228Vv/suYsaM1O++s3d09CbM0x4QP5aALwRBTUxN3ebN85w9
O3jaNOvZs/2mT6dPmWI6dar59OmO06bZzJzpOnOmx6xZ7ijvU6b4nDplUVHx
HmmD4lDuGuWjB9QEF8e/NC3sz58/z8vLCwsLKywsbE8LkSCA58d6DR/O+vpr
LTixQ4YYDh/uOXjwzeHDfYcONRcWThs+PEBIyFFUNGPoUFve99jmfiwFPHtJ
SUlsbCwev7S0FNwYHR1dV/fi11Nqa3bSpHfSVm5XW7ldddUOzVXb1RuNd/Y2
Vemdhmt2mi1ed9+bE9wNfmzZnj06cnJuUlI6P/xwbd68SwsXXpeUvCEtbTR7
9okFCy7Pnn163ryL8GNlZd3WrNEID4+lWpbbRnFxcXZ2Nt4+xPSDJ7cTVEtx
QUEBLpufn5+SkiKY44Up9Bs/1srKaedO7R07aOvX39uxw2DTpgdr1txcu/Y2
DBmZe5s3q2/ZorVli+aGDYqysjp//qldVfWevhPm6Rh4fqyTuLjF6NHycGLH
jFEZP96O5+bRx47VmjIldOJElpgYJCBs3Dg9CQlGSz+WAl/mefXqxb4jepIy
jIUyTgtljHnBfKGMyT+GKS8YLZSxXyjjPGupjqdXaDf4saVr1tBnzEibMIE1
bpz+mDFq336rN26cgYSE96hRt8aM0Rw16u6336pPnfpw+vTMqVOdQkPjCfO0
B8SPJeALQVATMzOPBQt85s+PmDRJde7cwClTDMePvz15ssa0aWYSEprTp9tM
maI/c6Y7jk6Zwj592qqy8r/fY0HdwcHB1tbWLBaLw+GUlZWB53ug2xj+pbq6
umkMmLZxNck+MZdLbe2T5ctdv/iCPnCg7aBBDgMH0hA+/9x+4ECzzz/XGTjQ
btAgJ8R//XXK559bDB7sxuHEtTYbOVL72bNnIEA8/pEjR9auXRsTFaPjbGib
5Gyf6WL3LrAcMl3tMp1hUwa2vODCyHRX5+qFRHW9mlRWPjl8+MHmzdrr19+X
kbm9bt29tWtvrllza+1ahbVrb0lLX1m9+jL8FllZjS1bdDduvBkfn9IeTwC0
z+VyKysruzCPIWGRo3DZtLQ0iDKSMTk5OScnB/lZADWl3/ix1tbOu3YZ7Nlj
uWLF+Z9+MpaWvrZo0XEpqQvIJytXooIjv3r1X1u3auHopk0a167pNvVjCfN0
GPBj162D42okKqo3cqShiIiqiIgaDFFRjREjFEaO1B892hS748cHiopqffut
lZ9fq+sg8GUebaahTTzLLs3NNs3NJs3FNs0d20YDW7t3wc0hzUPNT787mKe6
+gmqRZKSjPnzTebN0583z2juXJ05c/S//9587lzdOXPUv/9ead48nYUL7X/4
gSkpqRUbm0qYpz0gfiwBXwiCmvD8WM78+ZGTJinNmeMrIaEuJnZNQkJ76lST
yZM1Z86kw5udOzcARydPZp0+bd3Uj0VZS0hIYLPZdDrd3Nw8NTW1+5a8aQpI
WGFhYbOS3riaZHh4OGq4Av555NWr2hs3mHv20Hfvdty922n3brvdu2337IFh
v3u3Dezdu3GIvmeP2+7dDnv22CQmZuKJ2uB8HM3KypKRkZk6deren/cqOTzg
vvD1q+eoc1VVvZX1H+rphGqr+ajAQODU+QQ0+Ac0cIMbAqwyLcNjw7pcTV6/
fp2YmBEZmRoRkRwZiZASG5vm7x9pakp/+DApOjotIiKRiueFxLZbjRvRHavq
4FK4JnIUNAXZGN4RcrUzDwI45qJ/+bH6e/ZYLVv2OxwPKak/fvjh8MqVl1DN
gS0rqwSfdudOGo6uX69y9apeUz+WME+HAea5e9fh0CGrQ4esDx+2PXjQDOHQ
IZuDB80PHjRF4B2yPHyYfvCg5aFDpklJGR/HPPRmzKOrG6rFYx5dBN867+5n
nvr4+Kzw8Izw8PSwMITMyMgsX99YIyOnkJD0iAjEw2lEgJH58GEqj3k+nG0I
8xA/loAvBEFNaDTXmTPdpk/3FxNTFBPT+OabW2PG3BAX1xcTUxMT05w82UFM
TGXKFBtsx49n/fababN+BS9fvqyqqmIymR4eHtCRnvkqgnprayMs6urqUJmN
iopCxbauScctQcPff78tKirPyWkWHjeLyc6mYkpfvKiDWHt6eoaGhkZERPD9
LBASEmJoaAg+lL8rr2ir6Fvry/2bq+Kjcsf5zjX7a6xC1m3H2/dY95glTEQa
xRpx6jmBDYGW6ZZh3aAmDe+cjTdNA96ItzdbR0fb35+bnp726lVd06PtvGZ3
zH4DIba1tY2Li3N3d7ewsIAdEBAAw9jYGNlM0NySfuPHWlgwNm/W2LrVYPHi
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
eB9ASktLExMTKa6OiYmBoCCrUB9APvhzyo812bfPbP9+OK4nly8/smSJ9k8/
nVi27PSKFXBcz8KzlZIy3LPH8sABhc2bPZyciouLyzuBsrKy3Nxc3KGFhcX1
69dB+InxibQgmm+dL/TCvcZd3lX+tPbp+273z+mfu2J9RT9C36/+nZpwG7iB
DYG0aFo7v4p0x2iLvoV+48cS5ul/zMPzY02XLuXClZ0xQ2XatNtTpvwlKek6
bdoteLDz59t899297767u3ixD/zYuXOt6HRvwjx9BcSPJeALQVATL38vk2AT
qygrHT8dRSdFXR9dVRdVRYairq+uhoeGJltTmaUs7yRvGm5qHmVu7mz+vLat
bwg9M4tjA78JyduD+vp6EHJcXFx8fDxULz8/X3AGYiDRcEsZGRnUBxDQJrW8
C7gaOvhRvcjgxz44eVJvxw79HTtOLV589Mcfzy5bdlFK6tiPP/6+fPmpJUt2
zp59fvly3R07jHftuiUjE+jt3VW99fAIvG5yr8pKywz8DDyqPbxfebMqWJqh
mnrReroPde953FPyVbIpsPF64cV+xUbgvOLohOkkpicSNWkP+o0fS5inO26v
A+hC5oEfu3ev4YIFXvPnsydOvCMufkNCQmHyZLUJE25Mnqw0aZL8mDEnJk9W
wdEFC/y++87E07PL1kEgzNPdIH4sAV8IgppERkfS6DRDO8Mz18/cUr+lZ6MH
W99W38jeCAaCipHKb5d/0zDTMLAzcPN2e/ny5aNHj8B4LXu8o2qMKnxtLZ9h
xZ0GuK6uaQgJ4ebnZ7x5U9ssvqHhw584QM6ZmZkRERFFRUW9PrcJkhHpSfU9
CwoKio6OzsvLKykpgSgjqRtvj+oS1mi3fdv1r19b6urqX7+uf/Wq6qVLCBqX
L6tfvkwZShcv3jpzBrv6164ZXrumdulSYlxclw+PhdZbulra+NlYB1hb+VuZ
eZlZ+lma+5ibe5vDtuZaI54KtgG2Bk4Gufm57XkXYWFhLi4uUFiiJp0BYZ52
g2Kel02Zp6CAMA9/vHnzSk3N/uxZmzNnbH/7zfDECcOTJ01PnDCijOPHdY8c
UTx50uTMGeoEg9jYdrXpfxQI83QTiB9LwBeCoCZsf7ZVrBUjm2Gdau2Q7eBc
4MwqZGHLzGMyC5nO+c6MPIZFkgU9m+6Q5WDIMHyg9GCl1EppaWnUTzObgFq2
r6CgoMv5OT4+5c8/Wb//7nbunPu5c57nzrER9u61/PVXEKYHLwYBhvvZs+6a
mq41NR9u/6qqqvL09DQ0NPT29gZBgb0/eNtv377hckMZDJ/2BAcHdlFRWxMA
VlZWZmRkQNEgIpDmtLS0xr5nCQkJuCtIc319PbWSDpjzyZMn+Al2QfvPnz/H
Pbc9cvZxaemjggKEksJChHc2z6Dsovz8/0Ty7O5wAN6+efu4/HFJeUlpeWnp
k9Kyp2XYIiSlJD16/OidXf7fUFJWUveqXQOBc3JykNM+tmG3P6Hf+LGCzzxx
cSkXL7qdOeNx5gz7zBkfKvz8s/UvvziePo0Yb14MDPbJk2wNDfeamg+Xo44x
j7d3hLV1sJVV0IdCsKWlH0p57zHP3yUlj/PyShHy88sQeDZlUHYxdZQXSgjz
9CEQP5aAL3pLTUBQvr6+VActN64bs5TpW+9LL6JrhWghKHGUDGMMWU9ZVllW
DoUO+pH6HtUenDccdj3byNXIxNxk1apVkpKSqMKnNEF2djaepQsr19Sq07ig
l1fojBk+EyfGTZoULy7uLS7uKS7OGT8egT1hgp+4OAJ70qQwHBUTS9y+3aa8
vK32x3fTUr14AZ6HgUdgs9mQQvBza7Vs6A5o/O071J87Z7htm822bXbbttlu
325HhR07HJoGHN2+3X7dOs2AgIfNmg6pD0rR0dFQkNDQ0Li4uPz8fCQa/qLp
hN5QGT8evLy8WCyWvb097hNbU1NT/NDR0dHHx8fd3b2vDHZuBn9//84Mbykq
KkL69NFn7xL0aT+2bzEPmx06eXLAt9+mjR2b/s03Ad98wx0zJnD06ECeETxm
TMg33/iNHRszdmzayJEZmzfbdxPzNDTU7d3rNGVK4uTJKZMnJ0+enMozUnkh
jRcyeNt3kRMmePv4NF+qgDBPA2GeToP4sQR80QNqAjaGaiS/D1TGlyxZsmDB
AgUFBTN7M5dyF89nntARqxQrVT/Vd0sHxhlBRB54P1Dnqt9l3oWscN9wIShq
Nmo+HB9QnIGBAerysU2Aumpy1yEhIWHdunXz5s27du2qrq6NhETI2LE548cX
iojQhIUNhIV1R450HDnSduRIM9iiovbffps4blzuN9/kbdhgk5VVVNk6/vrr
r3379pmYmOAvwMze3t5MJrOkpKS18xkMBl7T7du34+KiDh/WkZFxWruWtW6d
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
g1dmbW1tbGwMfwCSQecBioNIc3NzNpuN01gsFoPBsLKyokZ8cDgc6lMM0tDP
z6/DiuDl5dWZXmrIcrgTammkDl+kT6Ov+7GN8PZwVzx7RvHkyQs/77r56yGl
06dVfj+r/PvZB2fPKJ89q3T2zN1jx87t3Hn3+DH5E8eNtTSpbNPDzBMUlO7n
l+bnl/7BACeu25jntb19iIpKKAqxsrK/khIVfJWUuNgqKwfytkHKyiHKymEP
HvhkZuYT5mkJwjydBPFjCfiit9QE9VxwCFW1tLBgL1jAnjcvdPZs/1mzXGbP
9pw9m4Xt3LkBs2d7zJ0bOGeO/5w5IfPnh373XcCZM9aVlf/pYoTfgo1zcnJA
U9nZ2d33eYT3RaK+nQHeZhuXAq8yeQCngSE9PT1RSW9/FRvPW1lZVVGBUIkt
7MrKap7x323j0devX9fX1+Pi0dHR5eXlPSYooPqysjI8EdV8CS0A/eJhIW0Z
GRm2traIQa6DakA7qNksaTSanp6eoqKimZmZrq6ujo4ObA0NDXV1dciQtra2
goICRIr6EgJNgdx0WE3c3d07oyZISbgBbc851r/Rp/3YpszDcnBQOXBA99Bh
jQMHFHbtUt67V5631fzllwd79mgfPIh43YMHdQ8fVt+7T/vWrZqqKuoi/4PM
U139DJTy9ClC9T+h5v1tVWN4/foNYZ6WIMzTSRA/loAvukpNqCkBq6qqUNDS
09NTU1Pz8/Op1bFTeUAtGNzSeCg3N5fqncVgOCgrW8yb5/v99+FTp5pLSOiP
H39fXFxx8mTjKVOsJCR0J082wnbOnIi5c2OmTQs/fdq6ouK9rvIQEZADCDMk
JETwx3KCEkGn2IaFhenr6wcEBHh4eODmu3VtHbwIMHZpaWnPCEqjmoBy8UZA
+1U84E3hMalOgFQvNWq0RVRU1NOnT/ETZ2dnFxeXkpISqlcbDj3iATnHzs4O
ykspCKUmHZ74ETmwM4M14uLi8ICCn9O6DwLlx3aYeeh0upGWlsYvv+gdPPin
rOz59et/lZI6unLlxY0br2zefG79+gsbN55dt87w8GHDI0e09+3Tunmz0Y+l
QJjngyDM0xSEeToJ4scS8EXn1QSMATZAZR+UCE3Jy8uLj49HicvKygInJCUl
xfEAGwpCHcrhwdjYGLVjPz+Oqqr13Lm+s2b5T56s9/33IVOn2k2dajZ9OnPq
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
VPDIkb4jR7oLCzNFRJiioi6iot6jRgUhngrDhgXLytLKy9tav+CDIMzTCMI8
/RjEjyXgi06qCcpaRUVF+wei1tTUoIKPQgpu9Pf3B49BjNzd3ePi4tTU1FDn
RVEFIaOwU+0v4E8cdXJywq6enp62tralpaWuri6TyTQ0NLx8+TIMAwODgoIC
vvdQWFjo7u7NYnm6uLwLMFgsDypQMY3B2dkzICC4k1wNuoO0NQ5ubQR2UcfH
I0MQ8cgwEhISUlNTQeZUGxbEAjoL4i0rK0N9vyWD8RbzegXlRfp0ZrJKpD+0
m+ohhhvA1XDDzs7Oz6qemXqZelZ4Qinuse4ZRBvcd7t/z+Weko+SgqeCYaSh
sreyeoA6Il2fuNrl23FCOC/r2uVCvOlStNGgBo/Cz88Pz4WnC28TXl5eoaGh
bZ9DAZ4PlSebpjneArUYEGnd6wz6N/Pk5xc6OARbWwe2J3A4EXV1HZ+OqYEw
Dz8Q5ul/IH4sAV90Uk3ATii87Xf/UADT0tKgF6hX0ul0CApcTU9Pz0QeqAVW
oBeRkZGurq6oU2dmZlLF38XFxcHBAZoC+VBWVqamfwRwFPGtrRGJSGo97pcv
G7fNwn/RmZn9KIDKWvs+Y29vb2NjY2VlBSnB4+ApaDQaHpP6U8glVBVPAQNM
1drXD/B/J+fJgWzhf/EXkGCkHjW1ppmZWU1VjaWvpWmSqVmymRpXTdVXVcVX
Rfeh7mmt07ZZtj61PgoeChdoF65aX3XIc7AvsPcN822nmvQMKisrORzOkydP
qFdZ13WAb4ArP3r0qPG1Qk3I6pC97sf2EeZpV6ir62yrPWGe3gJhnp4E8WMJ
+KLzrXtcLvejRluADFFIwaK1tbX4IQrpixcvsPv69WvwLYpqRUUFdhFJ9TeD
nZeXB/YrKirC+eANKAs1xzWAS2Hb3dO5tBOQidbGCEBHoqKiUMVOT0+HmNrZ
2WlpaaWkpGA3OTkZDG9kZIRnV1RUhKAEB/P/MoyLf2xqNwNSG68bTKirqwsp
x79AcD08PJ5VPYOa0AvoepF6DzwfaAVrqXBUbjrcvGhyUd1f3SnfScVH5ZTG
qVv0W4wiBr2ELmhqAqcCOgsppxoEqemVmjoYdbzZIJGXWvumhFRFsrTsbwn9
zc/Pb+oykVHDguDHEuZpCsI8vQXCPD0J4scS8EVLNUGpqampqW4fwPDOzs6l
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
gfb29mlpacbGxikpKS3XLicgIOhn6A4/ljAPAQFB2yB+LAFfNFMT2BEREU+f
Ps3JyYFGwH748KGfn19oaGh8fHxdXV1WVlbjodTU1PLycmxLSkqKiorwq0eP
HlENfLjOB1v6yCcUAoK+iO7wYwnzEBAQtA3ixxLwRTM1SU5OhlKkpKQEBQVB
ILBrZWXl7e1dXFwM4cjNza2qqiorK4uNjYXEZGdn5+fn5+XlQURevnyJH7LZ
7NraWuza2dklJiZCX/J5wDlQHC8vr8zMTFwEV8ZRCBPOxNUKCwtJ9zYCgr6C
7vBjCfMQEBC0DeLHEvBFMzXhcDihoaGurq5xcXHh4eE5OTmampqQEoiLqqoq
bB0dnStXrjAYDG1tbWtrazU1NRiKiopQioKC/2fvTcDbqu68/zIzb98BCqQk
kD2BAGnLkgBZgLYUCu887fuWeTqdf6cttEOXoXQ6dCilDRCyktgJ2Em87/tu
S7Ysy4tk7ZsteZEt25ItW/Jux3a8b7K8xf+vdUEjvEVOnFig3+c5z83Rueee
e+6519HnHp17bltZWRm+NS5evHjixIm0tLTIyMicnJyoqKiwsDDkCQ8Px3cT
j8dDSmJiopeX17lz51ACSrNarevYCARBuM7N8Fj6n4cgiJUhjyWWZMG3SUlJ
Cb44hEKhWq2ur6+vrq7Oy8vjcrlSqRT/7YeGhkZHRyclJQkEAizx5YLviIyM
DHytcDic2tpaRPBlgW+NoKAgpBQUFOCLCRkQwdcQvkoQQQY2m40yAwICEMfX
ikwmo1/6COKLws3wWPqfhyCIlSGPJZbktdde6+3tdXycmZkZHh6enJxE4vT0
ND5iOTU1hQj+w5+0g49MIuJInPqM2dlZpGAVk236M5j8jg0dKdjWUfg6tgBB
EKvi7bffxv8bN1gI/c9DEMSqWJP/eYgvH3v27Hn11Vd/+xm/+93v3njjDUT+
4z/+47cEQRCLePTRR/H/Bv3PQxDErWRN/uchCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
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
j9Ta1zbu2KEKDc1tb+9ACeN2IHuI43RMTU3huJjC4ZOOVUiEoKanp0skEggn
l8vFbQVONIwoPz8f5yshISEkJAQXBuJJSUmBgYGhoaGwXMQTExOzs7OxlsVi
oUlzcnIyMzOxCm0Lmw0ICOBwONiczWYj8dKlSzBzNOJyUwG7Dj3nteT42I8+
+uill15ysQTyWIIgCGJN8BCPbWvrlMmMcrnp7NnI//zPj3i8EqnUIJUaCwur
MjLkKSni1FRpSoooN7dUJKo2GCxTU//zizz0lcfjQbfq6+vLSsuSk5Njy2OV
U0p/mf/fov72cd7HpzJOiUfEpzNOf5T10enM00cij3jneLPb2epZtT/fv1BU
qCnWaO2UlpZCt9LS0oRCoUbzaaIzyLA48TMUL7+cvGlTz7339m/aNHjPPblw
1699LeJrX/OH0955Z8SGDZV2ie3buHHo7rsrvLwSxGKJ8rpAGx44cGDfvn1H
jx75v//3kt1UzQh797bs2JFx//2nd+5Mv+++k/ff/9HWrREPP1xlX9u0c6f6
+PEokUiMElrsFBcXI44jhVuWlZUxhbe1taExcaIRx1HV1tbC7aVSaaodeCyk
lM/nY1VGRgYiUVFRyAxHjYmJgZfGxcWh9WCw0FRsBQdGHF6EQpA5NzcXJaD+
MGFsVV5eLpfL4+PjUTI8eYVXWrgOKoa9kMcuSESbbNu2zcUSyGMJgiCINcFD
PDY+Pu/w4ZSnnsp85pmcJ55I2L8/5ckn0558Mmn//uSnn049cCDjwIH0gwc5
Tz+d/eij6UeOxA8OjkJfh4eHu7u7zWZzREQE/BMihLaqrq5OrEqUT8oDlAHH
046f4Zw5xT7FamF5c73PZJ85n3f+aMLRTwSfcLo48hl5sDDYWGdkBm0y9Pb2
6vV6mBgOCoX3rILWV15h3Xtv24YNXV//es8996jvvDPhjjsi7rwz8mtfS8Fy
w4amr38dqy5j7Z13ajMztRMTtqvXhdVqZbPZME+bzfr736c/9JD+wQcNe/YY
Hn7YtG1byvbtSdu2Jdx///lNm05s356xZ48eq/bsqdu6VRwfLxsfty4ucM4+
CHZxHEBxFQoF7hGYcQVDQ0Noeab3e3R0FIeNmwidTtdqBy1mMBg6OzsRwbnA
WolEAimCu9bU1ECYcbKYDm20OVMUTiKuB8RxUNgX1PcGXymLywCn7ws6kdqa
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
t+6TX8E529raHH2tuAOKjo6Oj4+H3yqVyoKCgqioKGgtlrio4K4CgSDNDv7K
MjMz8/Pzs7KyEA8ODubxeLGxsUjBWrFYfM2ByuSxBEEQhJtAHusi09PTMAHX
J3TlcuV79/J37SrfvVu3a5d069bo7duTtm1LRti+PXXr1oidOwt278ba8i1b
yn/+8+SeniE4CY7UYDBAPGCwsJHU1NTm5mbs1J2f9vI0cGpu0jU2Z7/MxsbG
8CeACMrH3dPs7OySO6qqqjp79mxycjJzTcJjORwOLlHcAcFatVotPuLOKyUl
BXdGFRUVcrmcy+XCYHNyciCrEokE0hsWFgaDxcf09HQsUZrJZKL+WIIgCOKL
Anms69UTCoVDQ0Mu5jcazT4+Sm9v7blzWm/vIi8v0blzxV5eci8vmbe3wstL
7O1djLUIZ89qU1JU4+OfdoKh5jCTjo6OsrIymEZJSQmMhfnxF3t3jDpw5zcF
rBYcMuxr3M51H9fo6CjOO0qwWq1rcvZxWwE5RIGQSecCb+q8W+3t7bDQuro6
nHSLxYI46lBbW7u4jxTX+d69e3/5y1+iJnP2V9Fhk4aGBvz5YBP8Uc+PfOnu
RkpnZyeuHHxEpN1Ob28vLrDKysqCggLcNzU1NeHqQs7y8nJXxkuQxxIEQRBu
Anmsi6BAmUzm+rtlp6enx8dHRkeH7GF4bGw+PjY2/FlwrELi0MTEEuoFfYI5
t7W1mc3mmpoavV5fXV0NpYHeQELi4uKguLC+MWw/ODQ4MOhKWG6UAg5qZGR4
aJ7Ba4aRkaHlGgHlDw8Nu1gZ1Nzxm3hmZqZKpRKJRDhGFAIXHUZBw4OuhMlJ
G1q7uLiY6WlEBJ521c7o6IhrhQxg6Tw1BLRQKpXy+XxcThBX54eqlnvOC5uj
De1FXTvgkljyEsX5xWWm0+lYLBaHw4mNjWXe9otrYMHMFbi1+fWvf/3DH/4Q
Xsqk4G8HVcWxYxUqiTh8GI5aYQclNzY2wl1NJhMuISaPUqlEg6PZkaHUjiuz
n5HHEgRBEG4CeazrQDCWfB/rzQD1hxLBZGDOiGOnUEy0A8wETpudnf3444+/
8sorUolUpBJJqiSiapGwSsgExMXVYlGVSFwjno/XiPFRXCXOK8kzmZf+1Rh2
GhnJv3RJeOmSCMHPT+LnJ2Xii4I4KCjnypWlWxjlC8oEQv1nNWHqUCVyVMy5
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
ffONx86d0Tt3xm7d6rdtWyCWZ58N3bbNf8cO8datPtu3C7ZuDdyxI3zXLulT
T/kHBsb39Y3UVBQN2DSvbm5uKSkpo6+zqKgI8R0dHVevdr39Nt/QULZ8edzK
lepVq7JWrco0NJQaGqYbGsatWpWPTYaGKu2m4uXL/RUKzZTbOw4IN6urQzoX
5w4D15+fn587IWwK2jE3wW8bGhqmaXi01tbW+vr6yc8aMCWUl5dXVFRMxzS7
dwB5LEEQBKEn6IPHgp+v/zw4MOjs5JyUmNTf139jZqbrP9+Y0Or6jUBlRaWV
pVVDfcP1a7dvlTq5eRCuj7cMDva3tbXm5GRmZWm6ujq1kbeAgyckJEzPVAjX
vv3We9eu+BdeSN6w4dzjj5usW3fqiSdMn37a9amnnDdvdt+w4SxiNm92e/75
pC1bBBYWPhpNZv6tFBQU5OTk8Pl8U1NTXCcTwuGcP39+27Ztf/3rX8PD+a++
6rBsWejixf5LlwYvWRIEZV282BPuOn/+6RUrEh955OyyZaKFC11Wry5csOCo
TJY0MDAd9n6jch7p2TN1QDKnr95y5scrYO0oZticJ4A8liAIgtAT9MRjh7S9
y11dXcesQpz5eWnhQpWVlSqVanSH+q6urvj4+Omp62MeK33hBeW6dSeffNLy
8cfPrV17eNs23saN5s89F/Hkk1YbNhht2mS9a1fCM8/w4bFZWdmFo2ATXbGJ
nEZvNTIy2r59+w8//JCcnPDKK6eWL49asSJ50SLHRx45vnx57OLFHoaGqQsX
mi1YYLFggfHixd4PP3x42bLIRx45IJMlTJPH3lvMcD8vnEWj0bS2tupDiwIG
eSxBEAShJ5DHjkd/fz9Shs12OnxofRisVCqdnm7j1776ymP79thnn1U8+uip
zZtD1q+3XLPGdP16q8cfd9qwwWHtWjNDwx+eeMIVOzzxRJCnZ2RbW3vvr6Ss
rCwnJ6eurq6trWX3a9wF8wMXzBfMnXNh/jzu/Hkec+dYPTzX8aE5Fgse9n54
rvOcOUaPzPOaN9floTkH5fIUfehkNOvMsMfiSWVkZMzWtAtjQh5LEARB6Ank
sROAg3R2dkL8VCqVblItNttpR0fH3R9/9AltbII++8z3n//0/fhjx08/9dq3
z/mTT5w++shx3z63Tz5x/vBDq/ffP7dvH/df//L/8EPnuDjlHTTT1XXw7+nu
/Gi/1St7bF/5i93Le6zZ+qU95lhe3mP5ynuOL//F5qU/n3/lPYdX9tjseP1w
cnIaeezQzHosClMJCQmzMlbtBJDHEgRBEHrCdHvseMMijX4vwxJdXFz0ymMZ
rGI2M/NGS1TWLFYikUxTz/HGxovl5U3l5Y3D1r8EysrqsbAYBDo7xxh3a/J0
tLXbCZ0D8kRBpaLg0oig0vCgUnHwzTWWkNKIkBvxYn5ptGWMoyYnkzwWpKam
ztg8CMh7KEDpSfcuHeSxBEEQhJ4wrR7b09Oj0Wiio6NbW1t1rUwRqK+vR8yV
K1eYCcB18aZWqVTp6emVlZVNTU1Q2Z9vMjTbHjt0s2K2sLAQDtPc3JyYmIj1
zEyFMH20X2r3SfF2UjmaS8x4NSHeeR5WcRamYhPPPHfFgCx5KNEjy11Qz7NL
tPUr8vXK88gtztU3oZoV8OirqqqmaTCE4XR0dJSXl09Pj8K7gjyWIAiC0BOm
1WNzc3PhfsXFxcnJyUlJSW1tbQUFBVFRUZ6ennFxcWKxODw8HPEymUwqlYaG
hoaFhUVERAQFBcnlcjbaPOveMusey4C6wMBh5rhC3Mi9LnU3PFbpY6uwPeRx
6Jj/MYdUB34V30Jq4ZHnIRuQKa4qLiResFfaW8dbW8us3TRuwcLghoaGEfY+
3sgAiMTOKJVUTA4UeWbqvu8WXG1OTs50z6uFBEShaXSC6wPksQRBEISeMK0e
W1paCh3NzMyEoPJ4vJSUFD6fz+Vy/f39EbC2tra3t3dzcwsICHBwcLCwsDAx
MbGyssIOAoEAO7i4uEB9h/SgPlbHtWvXOjs7IyMjcYV61YX8DoDH+qf5W8Vb
ng09c8TvJ9skG79CX3y0TbDxyHYPKgu0jLOwS75gJjGzUVh7FXhFS6NVWvAg
mFxVVVWhrMEiR6T54GD/Tz8F7tkTsWdP5J490Xv2SPbsidIGom8GIm4u0e+8
45OSkj0wMPXlAlzGwEDvwMCV2y6Dg32Qx8kcMyMjIzo6errbFdTW1qanp+tV
9y4d5LEEQRCEnjCtHtvX11dWVlZXVwfhKSoqgvgVFxcjUF5enpubm5SUBMXN
zs7GR6VSqVAoTE1N/fz8sAn7lJSUYBMbM1N/PJaBm4LK4pqnY9rTGaOzrdOa
b3OWf+4n7+PnIs1NI8zPRVgYi0yP+J4wiTjvrOKeERifj7E6FWJkGWdrLDRN
06RB3vAs0tLS8Gi6urpw+76+vkhwFEZGVFDDDD/4wG/jxtQnnkhdt068bl3Y
44/HrlsnuhkQb9yYvnGjeuPGtI0bNWvW8KOj06Z8aomens5z5/jffSf87jvR
qEV4a1j8ww++FRU1k6n8nO5+XigrdXR0qNVqfevepYM8liAIgtATprufF0QU
72UYDrOUgYGBQS2Iv3LlSr8WfOzt7cVHNzdXyCEbx57tw97jDQ31dnZ2ly61
TuaMM+CxOL5cLm9ubs7JyYHV6Mlsob+W7u72vR85b39R/Mwu4faXwp99MXLr
i8Jt+Ph82LYXI3b8MRLr7S9FbX1RtP2l6M3POSQlZw4O3ACWxdqKpKamIoDi
iVAoROBWj+35xz8CN23KfPLJ7JUrnVassFm50mHtWr6hIQJOa9eGPv64FMum
TVmbNhWsXRseHZ0+5R7b1nbxT3/yeeaZpGeeSdiyJXHzZtnmzfFPPx3zzDPy
rVuTEfn007GI37IlZcuW1M2bfbKzSyeeKo6h0WgkEsnUDlhRU1ODfNvQ0IBE
QBFJLBaLRKIZaIJ7Z5DHEgRBEHqCPoy71dTUnJGRlZqafuzYKQ8Pb/hRWpp6
+BIeHnXw4I8SSZxKlVFeXj5xFegMeCzEVSaTsSmoYCAqlaq0tPSeq5i9cqXt
zTcFy5bGrVihXLEid8mSKMMVuYaGGkPDomXLYlcsz1iyJHzxorAVK5KXL89Y
vjxcocjRjVeAIgYSGe6alJSENbIQpGt4mt/0WM2mTTc81tDQcvly4yeeSDI0
tFixwmrDhpiVK21WrLB48sn0TZvy164VT4/Htrz1VtBTT2WvXy9eu9Zv9Wqn
VasccSXr1vG0kQJDQ6s1a/wh2089lb9xY2BQUIRGo86+Hf7+/ra2tomJiVlZ
WbfdeZK4u7tv3br1lVdeMTU1FQgEyFQBAQFI4alNkKmCPJYgCILQE/TBY0Wi
mP377T7/3On99y0//tj2iy9c9u93+/JLLK7797t++aXLP//psHev2WefOe/b
Z29u7t7VNVEXmxnwWBisbioEqB1Ol5OTk5GRMd19f6YWeOzbb4cvWuS9YIHL
4sXC+fPPL1+evGghnLNg4UIu3HXx4qCFCx2XLo1buNBv+fLI4R7LQDrg3vPy
8lJSUsrKyoZPnAqPff/vgY9v0Kxbq1m66MKSRZbLlzoaLvdastByxTKXFcs8
ly22XbTQeO1j8g3r8lavFE2Tx779duDTT2dv2BC5cqXp8uXHH33UacmSg489
5mxoaIr1smVHDQ3Pbdqkevrp3E2bAgWC2IKCgpLbERcXFxoampmZCYG/7c6T
xMvLa9euXV9//bVQKORyucjDvr6+w2ff0CvIYwmCIAg9QR881s8vdO9e+7/9
zf2tt4z/9jeXd989//rrp3bvPoPAG28Y//nPNnv22O3Zc+Htt83+9CeHn36y
7+i45f0OucIbXyeuM+CxODjOMlwzenp6qqurVSpVXV3dZH6b1ge0HhuxZEnQ
/PkWkNhHHrmweHHo3LlHly4NX7jQZcWKzGXLJIsW+RsaZi9c6Kmtj80dc/xY
3HtTU1NWVhZuv7m5GVam0Wj6+3u//F+rtz9wefND593vm+9+//wbH1jv/uCX
wBsfWCL85keOb3/IffHds7HSpGnw2OY33wx66qm8tWtDDQ0dDA0tsV650hFa
u3TpSUNDq2XLzqxYYfXEE8pNmwqefDJEqcxhbVompqGhoaKiAk8fGn/bnScJ
a6NSW1uLw9bU1BQWFurnSAUM8liCIAhCT9AHj/X3F77/vsuHH/q+9NIPf/87
97XXjv/hD/9++eWDu3efeuWVQ2+/bfLqq0f+8hc7bH33Xdvjxx2HeyykMTk5
2d/fXyQSSaXSlpYWGOYMNFjFWTo7O4fHwPF089jeE6NIwWNfe00wb57PnDme
c+d6z5nj8F//5fDQQwg4P/ig5Zw5XvPmBeDjwoXpc+a4zp/Pi4/PGm8eBKR2
d3c31Au3/8UXX+zevTtTnekgdA0qEAaXiYPKRFhCbgSEgTcDiEcAa35ZpI3c
OUV9J3OTTUxn56W9e53/8Afes8+6btvmuH2789atdlu3Om3Z4oHAli2WW7aY
bdt24bnn/P/wB8HOnTZZWUWTKYNAOOVyeXt7+xTmMSQschQOW1xcjOIAkrGg
oKCyshL5WQ9tljyWIAiC0BP0xmOdP/zQ74UXvvvb31xefvnAs89+9sorh3fv
Po3wn/5kDqfdu9cdW996y/LYMafhHou3fG5urkQi4fF43t7eRUVF0zfZ1nAg
z3V1dSMcQzePbWpqam1trZ5XzF69euX0acGnnwZ+8knwvn28ffv89+3zuxnw
/eQTv08+waagffvC9u0L+PRTr/z8MtzRBLaJreXl5W+88cb69es/+uAj85Dz
8t542YDURm5lFWvhnObkoLS3jrNEAIu0Py5hSIEleSjRr8xXlaWaco8dHBzI
ySlPTS3RLsWpqaVqdVl8fCaXK0hJKU5PL01NLVKpbsRjSUsr0rZXuX22mY75
vHAoHBM5CjaLbIxyGXK1UIse9vYijyUIgiD0BH3wWB8f/p//bPuXv7js3PnN
Cy/8sH37F9u2ffHSS0d27fru+ecPvvGGKQJvvGG8c+f/vv66+eHDNu3tt7Qr
6Ovr6+joCAsLi4qKgsHOTH2sRqMZr29Xf39/S0uLWq0uKCgY3mRU39BOVXCx
qupiZeXES0tlZWtlZXNvbx+KCdHR0UqlMj09fcwKyZSUFFdXV5iYiZGJWaBZ
/JV4+c9yyzjLs8Kzx4OPi+pEZwRnjEXGYU1hiHTLcpMOSBOHEn1LpsVjh24U
c65dvz6oW/BEYmOjHR3tExLkJSXFV6/2D9s62ULHdIy7hSJAYGBgdnZ2ZGSk
j48PwgkJCQhwuVxkM30rEJHHEgRBEHqCPnhsUqLq1Emnoz86/vlP+z/9+McD
35sfOmD142HbwwesDx+yOXrY/n++Ovund/Z/8z8mhw/Z+frwr1wZo4YqPz+f
NSmcgfaxgHXzGW+MAlYxix1SU1P186fhOwA3BTn39/cPCgrCOitrjGYGXl5e
zz333LZt286cPGMfYZ/Qp0gcUphGnDvFP3maf8o33/c076SJyCigPOBchLGL
2jlhIEE5lBJQ4ZeanXo3HjvetGIjgHtDxYVhwprqmuFtqn8V0+SxGRkZOTk5
yMOw2fr6+urq6ry8vNzcXD1sKEseSxAEQegJ+uCximSFk8DFSeh81PGkmZ+5
k8jFJdzNJcLNWeyGgHO4m03whZ/sjtry7R2ETgHCgCu9Y0xyxAaqHZqRfl5D
2qkZ4DMTV7f29vY2Njamp6cXFBSM17L03gLuhzuKjIwMCAioqfnPrAGs/hkO
lpSU5OTk9Mwzzxw/fryooMgy0Iab5uOm8T4ecPaIz8mzoaaneOeO+J46G2Zq
LDz/veOPFlI790xvzyx/E7F5clryHXtsd3c3LkmhUMTFxenmzhi60a5gsKy8
LL8wP7/gPwseRHJKsrevtyZTMzz+xqbCgkm2asYDjYqKmvJJCtgQysjDuH4k
LDIMAkgTPRzPjTyWIAiC0BP0wWMj5ZGCGr6kPVpyUSJsFoZfEosuCkMbQqPb
oqLaIyPawqPboiMuhkvaJRHt4V7RXt1XZnncLYBEgzj19fVNvBubmwn6lJqa
Orq1A7ZCXabj9/Tpg9XKFhcX43ZKSkpwX0iHlJSUwsJCKG5DQwPCzc3NAwM9
773vu3Zzyuqn0lesy1i+LmPF41inL1+LwI2YRauVqzaqH92U8ehTGcvX86Pu
YtwteCyPx4uPj3dzc+Pz+Tg7S+e2S23uUe4hOSG8Qh4WfhE/pCgkKDfIO9P7
Rkwxj8VjERQK7CPtSysm9Qs+Hn1dXZ0+txiZbshjCYIgCD1BHzw2QhYhvihO
+Dkhqi3KRe1iFmN2mn/aKt4KYRuFjX2KPRZeLU9+TR53Lc47xlsfPJZN6XVb
j2X09vbW19dD+YbPYwuDhQ4JBILExEQ97MszJlBN5BZ4bEJCQnJycmZmZnl5
eUtLS3t7u24eBKaC1651/fGV2N/8po3D6eVwCjmcfA6nRrsu0AaKOZxSDqeO
w+nR7pAvFmeytgF3AM6Ia8CFOTk5JSUlBQUFnTp1SiqVlpeVuyncYtpj4nrj
RK0iS5klikIxvTEWMRa2ibbhl8MRju2NxSLrlTmrnPNL8idT+Ql7T09Pv+Nm
CfcB5LEEQRCEnqAnHitqEcFj3XPcvQq9BDUC00jT4OpgiMfJkJMWUosLiRf8
Sv1kg7LYwVg98VhIV1xc3OTH14JrtbW15eTk6HpINTY2FhUVOTs7C4VCPR+n
C87GBmGAvqpUKogcLh6J3N3dPV57iRse+8f43/wGjnqdw5FwOEIOJ4LDydMG
8FHD4Qi0gT4OZwhOa2rqHx8fn3gX4HGcPXs2PDx8//79y5Yte/nllz3dPeGx
8n65Ykgh6ZGcl5x3SHLgZnIPeRw6yD0YVBUkuy7DJsWNMROS3TPdC0oKJuOx
eIKRkZFT3q7gHoI8liAIgtAT9MFjw2Xh4W3hyT8nhzWFOaY6euV7GYmMbJNs
bRNsEbCIs4DKeuR7JA4kxv8cryceCyQSya+dwAv7s+kSysvL4a6wQU9PT4T1
rUP6kLbqtbm5OS8vj1liZmYmVBZZhVW93vbrwzwWmhqjtVYfDqeBwwnmcEK1
lbEibeCKdocSP7+EhoaG1rugpaWlqqoKV+jj43PixAmoZl5OnnuSe3x/PEw1
sivSJNzkG/tvzkWc+975+6P+R53TnWUDNzxWPiRPHEp017hPsj52Ovp53VuQ
xxIEQRB6gj54bIwixiPZw0/t5yBzMAs1c4xztBJbmfHNHOMdbaNsL0guWIgs
TEJNPFM9vdXe3kLvnisT1V7OzPixQ2NNhTAZBgYGoILZ2dk5OTnw7ZqaGv3p
AoZEwyWVlpayqlcIG5tYCpYIA/9V7Vfhsbt2Sf7P/2nXmqpIq6/RHI6cw+Fx
OLEcjpjDseVw4jicLg7nKoeTLxSqp6qdMG4BBo6jtTS3uMhcojqjYq/GitpE
F5QXnDROjmmOxlHG5vHmAbUBMb0xkqsSLNKrUgeVQ15JHnnsZCCPJQiCIPQE
ffDYDE2GO8/dNcj12xPfnrY57RTghLBzoLNbsBsCWCzdLL/68StbL1uXIJeI
2Ii+vr7Gxka41ui+Ni0tLYmJiVeujDGgwd0BY8G5+oaGenWLSiWrrS29fr17
eKR2ub0LQQvLysrS09Pr6+tnfVQlJCPSk7V6TUpK0mg01dXVTU1NKA4gqXWX
xxqj6sITX/b161fPnIn6xz9ke/cq9u4V790r2rs3aliAt3ev2969EXv3yvfu
TUC8Wj3uIGZ3DEoZvuG+AbIA/wR/P4WfV4yXr8zXO87bO9YbYX+5P+LZEpgQ
6BLqUlVTNZlnoVKpxGIx3J48liAIgiBmF33wWIlC4pflx6/g+xf5h1SECGuF
ojoR1mHVYWF1YcIaIb+a75Pvw6vghZSHuPJdz5uff+XlV1577bW0tLSyYbAJ
Q2tra6fcDLOyir7/Pu7zzxWff57w+efJbPnv/w6Fkn32WdLNmETt1gRLS0lX
1+1FuqOjIzo62tXVNTY2FmoEb7ztZV+/fi0uLj0wMMnfP/F2S5Kfn6yurnGC
Y7a3t5eWlsKloa8oFBQXF+tavebm5uKqUCgYGBhgc3jB2S5duoSv4COEs6en
B9c8YZ/9nxsaLlVWtlZUYLmsXS5pFxZAZPPNAJaWnp6p7+l2/dr1i60Xm1qb
mlubmy81t1xuwRpLfmF+48XGG+HWX5amlqb+q5MagqCyshI57dc2KbmfII8l
CIIg9ITZ8lioUXx8PGsaGiGPCGsOix+I59Xz7FLssJhLzV0zXUWXRX7lfiF1
Ic4ZzlGdUdJrUsmAxC3czcPb449//OOOHTuSkpIKh1FRUYF7mcJqPTbfPQ4Y
FZVqaFhgYNBsYNBqYJBnYJBrYFD0298WPfAAAiUGBqXayAYDg4vYYffu8IsX
J5Kc5ubm3t5eGCYCuAWJRAIJhxmOV78H44VAao20/5NPeE8+qd64MWvjxkzt
Olu7zrm55GnXN+LXrYuQSjUjGi2wqmyNRgN3VSqV2dnZNTU1SDScYvhUAvBb
mZaYmBiRSBQcHIzrxNrT0xNfFAgEcXFxkZGR98owCyNQKBR307Guvr4e6XOP
3vuUQB5LEARB6Akz4LHwQPhqwa2kp6fv2rVr27ZtpqamXsFe4lZxdHc0DNav
0M9KZnVj0tJsN+jr+djzNnIbozAjCK38mhwqax1gHSeNg1y5uLikpqZmDSMn
J6dg6sjNzX3zzTe3bNly/PgxB4fguXOrtV3vhziccG2nez6Hk8rhKLSd7hFO
4HA6OZyfscMLL4SXlja0j8+RI0c+/vhjDw8PnAJOGBsbGxYW1tTUNN7+fD4f
j+nMmTM5Oelvvy1YtKhqwYLahQvrFyzIWLCgdP785Icfls6bJ5o3TzhnjjfW
CxZULlzYOG+ePDpac/XqDY/t7OzUjfUKfWWtXi9fvgydG1P7cWFisTgqKsrR
0dHc3Bw2GxoaijT39vbGpUJozczMuFxuV1fX6O/qwCkyMjIgwHczCsEIWBe5
u+wWh/u6m9rUzMxMaPzMtMHWT8hjCYIgCD1hxjy2qKhoeN1pWlrajh073njj
DX8/f78wv4jLEdE90dZy66DyIAelg0WchVumm2Oa41nRWW4m93vn70NqQxTX
b3QtN/cz9/T0jIyMhLXimMW3Ujh15OXlvfbaa3/84x+5XDcuN2zevBoO55rW
Y0M4nEitvhZxOCnaTvc22mFRB7Rbh7ZsCYmIkKWMz6uvvrp48eIvv/wyMDAQ
NwLfs7Ozi4+PH2//EydOzJ8//+WXX+bzfd96i7d0ac3ixQ1LlzbNnevyyCMR
CxbIH3rIesECBbR27lzXBQsSFy+uWbKkacGC5IAAWWamBibJql4rKyvZgAO3
ncW1trYWiXnp0iU4G5tat7m5ubq6uqKiAr6NC8bjw6YJ2hXg6eCLeO6NjY3N
t9I0jNExIxixFdegVqtx9rvpFParBkwbDe4rPDyc2sfO9lUQBEEQxAy1K4Dw
9N5KV1cX6w4PrQqThPmV+IW1hLmoXazireyUdseDj5vHmbvnuRuJjBxSHGxT
bEObQ0WXRPwWvlOoU1lFGb6rUqlw5b3TxpUrVzIyMgoKCqBzYWHJDz9cP6w+
tonDSedwVDfrY8O1PfE7WH3s889HlZQ0tI1PSEhIaGgojlxXVxcWFoYwzArC
Nt7+uFM/P7/09PSWlrp33w1burRu8eKWRYuKoa8PPWT38MOCOXPMH3kkZvHi
6rlz3RYvLoTELllycf785O++O5eVlcWODHOb/MAIV7WwB9fX13ft2jU426CW
oRvNdK+z+PG+jucC/Yb9IhlxnO7u7o6ODiRjZ2cnvsv6iyGAqxoeM3oeBFwz
zjI8BheAnAOThNDeca1sfX393dTo0ngF5LEEQRCEnjCL/bx0XZDUmWrfcF9P
secB4wOnL5x25bs6Bzlz+VxPoacbz809zP2C34UfjH5wDHbEPlHSKLgNDKey
spLV+E3f4Ku6I0dHK9esiZs3L33ePPW8eVJtIGHePJk2LNcGsFWl3ar+858D
Wlsn+sEdJsZqMiFCSPzGxkbo3ARShJ1Z69lr16689Zbfww+r587NfuihmAcf
9Pz9790efBCLJ5aHHkp48EGXhx5KnDcv6+GHc+fMEdrZBaWmps38L+AajYbN
XAaFjo+PVygUEHXYO4QcWgudhtniIQqFwsjIyMuXL2NPFGegl9BdNjsYYrBD
UlJSfn5+a2srS4GbjYSHcHCc4o6rZFE8uZvWraw+ljx2tq+CIAiCIPRjvIIY
ybFjx44cPbJ//5fffff9sWPHT548efzEyaPHj504eeLY8eOHDh/+12f/Onz4
8I8//ujk7MwaN0Jj4BJZWVlqtXpiD7x7Ll68lJBQGhdXMZlFoym/enXcvmaQ
MdgdVBYX39DQ8KumN71+fTAkJMnaOsnKKtnSUmFpGY/FwiLO0lKmXSuwtrJK
tLJiO8SWldXU1tampaXhEc/k6F5yuRz3yIY4CA4OdnZ2hspaWFgolUpIO2Ig
t3hk/v7+XC4XJRHIKk8LXBeR3t7eEokEu4lEIj6f7+fnx/qaSaVSVgmMNJTJ
ZHfsojExMXfTPhZZDlfCJmW744Pc05DHEgRBEHrCbHlsf38/7IVVasFVDh06
fPz4CYjq//7vdz/8cPDbb//3wIGDR346+v33Pxw9cvTHH386doPj2M3MzEw3
+wC+Cw+srKyEIFVUVExfxay2LnTg2rWrk1muX5/oMmB0YVpgU3Cz6OjojIyM
yVfudXZ2t7V1XL7c0dbWOWpBZBc26ZbBwWsDAwM4uEajaW1tnTGVhWS2tLTg
jljDCVgoxA83C6kuLS0NDAxEDHIdfBXWysbRdXd3d3JywsP18vJydHR0cHBA
2NbW1sbGBgJsb29vamoKPWZ1sLBZiO4de2xkZOTdeCxSEgWQCcccu88hjyUI
giD0hKnyWDYYaUdHB17xJSUlRUVFNTU1kExYSpEWyCesRrepqqqKtQvl8XjO
zs5aUz3+r399tm/fvr/85a9//evf9u379Isv9n/88SeffPLpRx99fOLEyVOn
Tv3000/nz58fMYsW9BVaAlVLSUnR/17kkDGIHNYqlQo3npCQEBUVhYuf1lm9
8CDgis3NzTOjsjqPhezhiUA4O7TgSeE2WfNj1j6W9fNSq9WXL1/GV4RCoVgs
bmpqYu1psalRC3JOUFAQnJ+5K/PYO57tAjnwbrqJZWdn4wb1P6dNH+SxBEEQ
hJ5w9x4LV4GHKBQKyBhstrq6OicnB+/68vJy2Eh+fn62FoThrmxTpRYulysS
ieLj411dXeGxhw8fhrUePXr0yy+/+vzzz7/++pv9+/d/9tnn+/d/+ckn+44f
PwGPxW5mZiM9VncZsB3diK+s+rG0tMLRMdraOmr8JZItVlZRfL6st3fcvktT
BTwNHpWZmcl+MYcOQcmQJtM9Oy1TWSTRDKiszmOHtFXZLFIXgLKi/JKXl4fr
kUqlSAcPD4+MjIzExERWeYvyCPQeOQr5inX+wjXjoaO0wg6CSDjtHXtsRUXF
3aQ29fMijyUIgiD0hLv3WAhSTU1NT08Pm/UJDjmgBQF8HLjJiE1QEegEvLev
ry8oKOjgwYNHjx5jFbD79u3705/++6OPPoK+vvHGG/v2ffree3+Fx544cerg
wcMmJiZjeuzQzYpZqHJoaOjf/va3srISkShp9erkRx4pXbCg5JFH8h55JHfB
guIFC0pvhosWLChjy5w55f/938GtrdM+SRMuHgmFu2azGyBZ2BwE033eIe1k
uGzw2CmfAXYEuvaxY27FXUNcfX19TU1Nra2tIfaOjo7e3t5ubm6I4fF4Z8+e
FQgELi4uKJKM2VYEaYjizx23K7ib7w6Rx5LHEgRBEHrDXXos09E70zCdosTE
xBw5cvTw4R9hsFDZQ4cOff/99wcOwG0Pfffdd1h//fXXcNoDBw5gk/PNfl7j
AcnBcf7rv/7riy/+5e0dvmRJ7pw5l+bMKX3gAZ8HHuAaGAgefFDJwg8+mDZn
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
IAiCIAiCIAiCIAiCIAiCIAiCIIgp4P8BMb6Rzw==
    "], {{0, 1078.}, {460., 0}}, {0, 
    255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{460., 1078.},
  PlotRange->{{0, 460.}, {0, 1078.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[310]=",
 CellID->1003128316]
}, Open  ]],

Cell["\<\
We can use ListAnimate to generate a movie/animation of the results\
\>", "MathCaption",
 CellID->1695062567],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{
   RowBox[{"exampleBCellReceptorFigureTimeSet", "[", "\"\<Results\>\"", "]"}],
    ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[311]:=",
 CellID->398502467],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i58$$ = 9, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i58$$ = 1}, 
     "\"max\"" :> {$CellContext`i58$$ = 15}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i58$$], 1, ""}, 1, 15, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i58$1096135$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i58$$], {1, 15, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->0.,
                  AnimationRunning->False,
                  AnimationTimeIndex->2.9568090438842773`,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
NMV8NibZdk3lwVxuoB9SEhS5bHVuX0pavbj+WVK4FY0KH1yqzxVd/yzpEySp
g5VDigMGeiAlQZGU1DkpqelSfa6oxSrCOs9KSTvKA3AvKQmKpKTOHfzGXXT6
xSlp+bWuyvK7V7RvwTespSYl7fjGXaZ+KHIBgrtISVDkItW5g8+SekhJOzb5
9GVPbPygKalYZ/jrpHPrhxSXIbielARFLk+dqw818yOb8O20sC8iSUktqrp4
LTUpqV39kLf1oTNwhJQERa5KnduXa1JfvTvyN0RKSi2++tHNkecmUlLrSng5
VyW4gJQERa5HnZOSjiw+xXx+Pey3rm7clJSp9sSP8Z1POIVrEzQlJUGRK1Hn
dgec1Tfu3pOSojWspqyS1MHKW7g4JY24FgB2k5KgSErqXPRpyF0u2+TTa5ik
pPY1X78W3sMRBeeSkqDoyrtfTvTbQp8V7nbKAZmJRZ8Xf+Pucywh7lsLnMLV
Ck4kJUGR686gpKQjlUyv/Ncb5pqveT7oxEILrllwCikJilxxBiUlHann4Cou
GDKNVnHxtyidW2gkcwC7qB1X+O71093d/ReRkqDoVeeEJ5GSjlR1cBXRxeeh
dMqYOn1U3nU/4PRCU+Fh/LZ73RPpuq+X9IOUBEVvOBU8kpS0u6rjV8BM+Jpn
tQhiB931qakzDK0tx90LHwqcQneFnt0nUhIUuZQMSkq6pbZ8ncvpHaakz+Xf
uFuu95oV8XJ3HeFD01EZD+4cKQmKHnwGeDYp6ZbaVnWu7sT6T0mfmz5sd5Lh
AtGnpY69Il2Up3/gtVxEBiUldVhhKjGduIpT3HIDect5xvntVVIpyTGQoXNq
6CV4J1eQQUlJHVY4dfyvN4T1Xz/271qdU9wbZCKSAyBFz9TTV/BCriCDkpJu
rDOfkpqu4kS3jP1bnl45xb2ToFSkW+o9r6/8LgmKXD4GJSUdqfPgKp6Rki5b
y+0rbbTG/MOLi7XYwK7c3cG/uLszTvOkbWnteX0lJUHRw8757yEl7av2lPuc
6OLn3kHV13PdrWGF07fuuHbr+lnzH/3Rv+3h78r+vMvPbfyDP/h/evh7TG8/
ZkOu8bzukpKgaNO9Df2QknZUu+N+PlPbKa06Xv/Pkj8+P3r46zAlNV2RlHQl
Kel00Q056zxZufiJnXmkzRc3tRNSEhRJSYOSkjZVuPupR6bOU9p2vP4RU9Km
DTxCSnoMKel0qQ1ZTj8YlDZNP2Kus+lnNY/Z9V9SEhRJSYOSkuprk5I6TEmb
trFPUtKVpKTTPTIl9bZIz6QkKJKSBiUlbapQSuowJW3azH08SxpIfmBuTUmr
8f7ClFQ80W1NSasKoyfVZZnli9XraOHwbaqR0cJhyVSDU83IrzQzfVBSEhQV
T6T0SUraWmd4QT9Y4SkNO17/NHJK2rSlvZkqUtJ8vK1ef9/WFHtbSsrc8e6I
M9HX70lJn+wlPjM93AvTr9ln9TbzIlMgLLMqFs0smVZFi9U3I7PS1FqGJiVB
kZQ0KClpX807UtJU7dym1pdMZZalcHpYOFpmVT66uJSUjzDF1/lZ70xJqzE1
SUkbrXovPEelNmRK5IhlJWGZ/Ivl2qcgnoRTUs0oFl6VDBtcWU+qwnDiuKQk
KArPnAxBStpd+RDHfH0Lo4Flji3F16mJm5Y9kpI2bWxXjqSk6fePjaSkWTQl
Le9yz0pJ3zpXb+vrH6W3M8EhU+CTSArRlFETNPIBpF1KSjWjsh4pCfhIScOS
ko7U3/9hX2ze8h7yrJRULJ9Z15GUVLO9HeoqJb3BjpQULju//r5Yvd1abdTy
CLm3ZPSgnYtFC3zq4kO4bLFk+CJaW758sXBqVk0z8hWmJo5LSoKi1XmVUUhJ
Q6xlt8wNTHgvdOKzpCkWiFazMqt7m/oUk49LqWKeJS3n7n6WtFp2rnzfN/FG
6e0pCBfhlOhSYc9Pvw8a4fTolNUejL5d1bCqLVo+teqwJWF7Uu2PNju60lSP
jUtKgqLoqYD+SUn5GvpxSidkapuyKWmp8ht3U5CJVou3eJYU3erOTcdS0kxK
+soPnOmklDQlniU9NSXlTx0HKz9ez1getqVSEhQduZHjRlJSvoZ/8xd/0cPf
wfuQmqiVT0mZHLQpJVU+S9q9scvNOV7JNXanpNWCU/preC9MSZm5u1NSNDFN
B75xd2W37FZz6jhS+Sn1jOVhWyolQZGUNCgpKV/D7fnoSEqqCUfLwuempPDh
UX5BKak+KOVT0r6I9JiUlLc1Jc2DaDXlD4LfK62KPSYlFR3ckE2nqX2VHynQ
wmN2/ZeUBEVS0qCkpHwNt+ejHSlpdddxWUqKPiqKpqR8UDrrTDLKGWlfSpr3
cuqtlBS1NSW1+3tMb3eeMoqFt54qj3vMrv+SkqBIShqUlJSv4fZ8VJ+SUh/J
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
9aznkwM3cmAMSkp6g3664t6UNK99lZJWZVYTo9FmnhUtkCk/XEoKz+2pO8YO
t6XGw7a3uDmVKSaMP8ViqTA1SkoKuyvfmVM2tkx1aWg5MTOr52/cSUlLmaG3
qQwPY18PSkp6g6664prGRG9v5tPUFASW5ZRpEZSiuWYVf4oRKfp6rJS0PMNn
Lv0XNvM0D9ve4ubUBJmwTCYlrfLUuCkpVDyN5J8lTbHHQJmJ0Qoza5GSOpQZ
essCqbc8lR09KCnpDbrqirMak6knc28z25eSaqZUJqboY6z+ZXp+nlusoXI3
3VtyLjylt3c4n70pKR+L5ilbU9Ld/XFU8Rt3UxB/ootP6a/VZdYiJXUoc7R8
ErfK0Yk8jL08KCnpDbrqirMac6Se6byUlPp+XbR8tMJTeuNEqev7skBqwUsa
eLKHbW9xc46kpDANrV684VnScu6+lBR9ljTbmpKijaRbqSPtqoOae2T2Pj2T
kt6gt644pT3TtH4u8Kk+EU3ZZzrHnxxNiZ8sRacc74pzFa/p0enjXgIetr3F
zTnlWdI7U1I4t5iS5hSTST2rKfm3niV1LkhFvxw5qT3V58mEE3V7ySBPSnqD
3rriSHtS16DlKahY/1QXfyqLVaak1Cp2d0UjNSfz8NLf4YZUetj2Ftt25HdJ
mWdJ4ZfxHpOSMnNrUlLqWZKU9EjFZJ1aqn3TuFPPVw0ypKQ36K0rTmnPqpKa
z+uWBc5KSXMg+kqlpFS86m3X1MvfDDzPY7Z3379xV3xRfAg1YkrKS+WX+SCJ
fssunLWckn8rJfWvmKyj0WnoUwo17OVBSUlv0FtXDJqS6rNPqlh0vce7Aurt
+/8lhROXf1LSvX9S0kBWd8tunl/Cjh6UlPQGHXbF8SaFKWmesjUlzR/YRieG
c6PlUykpVYmUxC02BZmmf1KSlPROq4vCp8trNOeSkgYlJb1Bh11xepPma01N
zfmAc/yvvv4Odw2VBr3qSUlnkZK+pKTjRjyTsMmg1wukpJforTcapaT6wlIS
R0QfXA6xN6Wks4SPm290Yz9ISae4dyfS2u3jlH2kpJfosDfObdKm2m67lYk5
sRO43nIPDrE3oz8suuvv7s7gBFLSKYY4e7Cby/2gpKSX6LA3TmzSXYmjw15t
bdnV4t7n1696vrwreCcp6SxOHQ/m0jAoKeklOuyNDpu01QM2YYfU05MX9sZq
k1/YAyAlncUJ5MGkpEFJSS/RZ2/02ap6o7d/n3xKes/zlHl7V1PgVaSkEzmH
PNVLLovPIyW9RJ+90Wer6o3e/n0qnyWN3jmr7xam5o6+mUA/nE+eysViUFLS
S/TZG322qt7o7d9nlYyiYWH0ngm38cbGAO/hbPNIriODkpJeotve6LZhlUZv
/w7F75iNfjmIPjm6pSUAPMDol8XXkpJeotve6LZhlUZv/w6Vv8QZt2fyGzXu
dkELfpcERa4dg5KSXqLb3ui2YZVGb/8Or01J8/RxNw1OJyVBkZQ0KCnpJbrt
jW4bVmn09m+1+jcNor9IGv1yUHyWNPTWwbmkpBacZB7GhWNQUtJL9NwbPbet
aOjGE5X6XZJnSRCSklpwknkYKWlQUtJL9NwbPbetaOjGkxL9VqGUBCEpqRHn
mSeRkgYlJb1Ez73Rc9uKhm48GfnvE9rv8CUlNeIk8ySuGoOSkl6i897ovHkZ
47Yc4DgpqR3Xl8eQkgYlJb1E096YetJuM1PbfvEaAfohJbXj+vIYt9yfcJyU
9BJNe+Nn5T8+P3r4k5K40k2fBPTi7u6nC1JSUwbaMzhnDkpKeommvTG9OCV9
HGnvIyZ86Qc+UlJjxtczOFUOSkp6CSmp6eZfv1LuYneH9MmbSUmtGV8PICUN
Skp6CSmp6eZfv1Ku5zKXoXNeS0pqzch6AGfIQUlJLyElNd3861fK9ezoPP3z
TlLSBQyu0UlJg5KSXuLGlDT/eOH7ejVxnpWfvqpHSuJi9nINvfRCUhIUSUmD
kpJe4q6UFCag1Kz861QBKYkL2MX19NXbSElQJCUNSkoa1NatuyUlhdN3p6R8
tVISTdnF9fTV20hJUCQlDUpKGtSgKelIYpKSuEtqF8/fAk2VyVwZzz1s9tW2
bN5Z7TEc3kZKuozBNS4paVBS0qCWW7e8T7vmliysvCYlrX5YVPz9UThLSuJ6
NWPqrqF33OnN63x7YVwG17ikpEFJSWOZYj4Vnwn3kJJSz4nClFT/VkqitcoB
JSU1qhCYGV+DkpIGJSUNarV1q4+1i+VPb8w1KSkfke5KSZ+nH2wvt3VAra6G
y48vwo818i/yDUh9SBL9FCXfvMzaV3Wm+6mqc4AjDK5BSUmDkpIGNURKqo88
mSgUhqn86tptZr4HblkvF9g0oMJok4o8+ReZzLJ1LctZW9ceLVBkOLyK3yVd
zPgakZQ0KClpUOFdU/Fmpl2HZGLLj8TvjzJTVqJzpSQus/Vjh/koXZYMy2/N
TeEqwtrqQ1D9SqUk8qSkixlfI5KSBiUlPcN8P5O/eWu39vwX4S77k5I4XWVK
yueUc1PSPDEVglJr2bfSrdd3w+FVpKTrGWLDkZIGJSU9Q83GSkntvOpge5vU
zs2EkfDF7ngSbcPuLLZjpTuObcPhVaSk6xliw5GSBiUlPcPtKakfjbax2AO3
rJcLZHZu9KhLHZbLkqsFi4us1pJavPg6ta6atU/VB3l9SR5ASrqFUTaWTadQ
+iElPUDlPcxYHaK1dGKgnbtKUnfVOVCPcZyUdAujbCxS0qCkpAfLf1Dcv1Ha
+RmqqWw10M6VkrielHQXA20gA916sSQlPZuUdI2BmspWPezc+mHbYoz7xh0Z
UhIUDXTrxZKU9GzjRqSvUVo7SjvZ4cad2+LZ0AUGairHSUlQNNzdF19S0uMN
nZI+4+zHUdrJVlLSVgM1leOkJCga8e6Lj5T0AkNHpK8hmj1EI9mhxZ6dB+Nq
VC7frsbsXD5aw6q2VD3XnAeMhVeRkm5krI1i3Buwl5OS3kBKusAQjWSHRns2
n4DCVS+TTqpYZT2nb8uKsfAqUtK9DLchjHsD9nJS0huMnpI+I+zN/lvIPu1S
Uvg6+vwoLBN9EUaqfFxqx1h4FSnpXobbEIa+AXszKeklHjBCO29/581jt8tS
UuUzoDAc1S8uJXE6Kel2Rlz/HnAP9k5S0ks8Y4T2vAk9t40j+vnG3fGJvm7H
6aSk2xl0/XvGPdgLSUnv8YAO6XkTem4bB7XYuasnQfPE5ZflVi/CRVJfpVvV
024rQgbC20hJPTDuOiclDUpK6tbUk7s74+901ZilbhvGcS127vUHzDVrNBDe
RkrqgXHXud5upagkJXXrZ/t/fH708NdbT/bWnq8+W8UpHpCSLludgQC3MPR6
JiUNSkrqlpSUoUlc7Nz9e+VT2iuvzkYB3MXo65mUNCgpqVtSUkaHTfr02irO
Yv/m6R+4lzHYLSlpUFJSt6SkvA5b1WGTOJHLXIaeeS2/S+qHYdgtl49BSUnd
kpKKemtYb+2hBXs5pE/eTEqCIilpUFJSt1IpafWvz6Xmfl+vZm2qqv+U9Ols
L3fVGNpZDZy7m3MPPcCXlARFTpWDkpK6lY8tNa+LKSmzuJS0Q1eN4TLTK93d
6/RCSoIip81BSUndmjampLB8WKymzFgp6dPTju6nJQDXkJJ640rUISlpUFJS
t46npHCRR6akTzf7upNmAFxGSuqQi1FvpKRBSUndyqekpfqUFBYL6xkxJX36
2N09tAHgSlJSh1yMeiMlDUpK6lbls6TMc6KaNJRfSkoarg0AV5KS+uR61BUp
aVBSUreOp6TM86N+UlL0h+F3Ob4tp/QJwCikpD65HnXllHsMricldWvamJIy
8SdVvpOU9C/+xf/Yw98pmzn6UQewiZTULdejfkhJg5KSupXKL+ETkOjc1JTl
22gNUtLBzTleCcAopKRuuR71Q0oalJTUrZqnPNf8SUmbNud4JQCjkJJ65pLU
CSlpUFJSt6QkKQmgc1JSz1ySOiElDUpK6lbuXxm4XNPNvD0fSUkA+0hJnXNV
6kHrWykakZJepcM+qU9Jy9SWn5iZLiUBnEhK6pyrUg+kpEFJSa/SYZ9UpphV
MgonpqZLSQDtSElPdfArJfNSAsJHJwxLSnqVDvtkR0rKxJ/vxH3f4pOSALaS
kh5seUXbF5R2L7t7qT5JSYOSkl6lwz7Z9KynMiXtC0qnnMQ67GEA2EFKOouU
NCgp6W1665ZNcWb5O6N8SloVrn+WdOQLBp/+uhcAjl/RojWsLperS2cmJaUW
XE1Jvf0EF+v62o5c4neTkgYlJb1Nb92y76FPTUra+lCpeBqv36LzugcATrDv
YVDmk8NVCAozUSolpZJUsZ7UuqKLpGaF7bmAlDQoKelteuuWnlPSspH1p7je
ehigHb9LGsW+lLTp7epauTUlFV980impuOpUY64hJQ1KSnqb3rqlMsVMffwb
d5lP1ZZlTu0hgH5JSQM5+NWITW8/LVPSJ/iKXc2qVwnrSlLSoKSkt+mtW+pT
0qw4PVX4eEpatTx63uuthwHakZIGEo0bleUzb6PPd6IvMs3Y9yzp+LLXkJIG
JSW9TW/dsinINP3b3TOruNRbDwO0IyWNpeYbEWHJVPnV9NWlMLN4eN2c34Yv
wvKpGjK1zbNKPdSElDQoKelteuuWB6Sk5bZUXn0AnkFKGkgx9Yxid/CRkthE
Snqb3rol/LjpRmdt0Sf2wRfA80hJQ2h3ybvFtCsl3bjJo3f4a0lJb6NbWlv1
8AOuRwApUlKNTEKJvg2vI6c3YPSr0qatuH17b28A+0hJL6Rnmkp172OuTbzZ
847e521RvVO2XUqqlAk+xUx0yp7anZLOWvvxSm5fxW4u/YOSkl5IzzRV073i
EoN63kH7vC2qJyVdKZN9wsdJYbEWQal+qROLXaCflsxc8QclJb2Qnmlt09Wn
5uTpBEsnVvdy8/3buMfn87ao3inbLiVVyqek8O2q2FkH5NagVL/2foZMPy2Z
veSU8jxS0gvpmdZ29HD+srXj0z840RTz+fXSP9bB+bwtqnfutktJlYop6ZOI
JKcfkMdTUnjMrCqMvl29WG1U5axMPWFLUq+vd+OqOUJKeiE909rBHg5P5uH9
DNwidf8WzhrF87ao3inbLiVVCrs0GgfCki1O/vUVho1MTY+WrIw8NbMy9dQ0
INyEK7l2D0pKeiE909pZPTylVRa73ikbbutuUdng1Nuwhpu351enbNFwW5c3
7d32pdNT0s1d+auD27LartSU6deen9I7onWTomWivRE2PrU5N75ITbze6YcT
15CSXkjPtHb6hSx/+f75+sfnRw9/LQ6tn3X+g3/w//Xw12jrbt9rm/ZdeKeU
uQn5OeUf/sP/t4e/zNZt2qJVyd/97q97+Nt9ZO7e9qUWKenv/b1/38Nf00hS
GYWapqSimoZ1npLmt1ISO0hJL6RnWrsmJS2vCLffY0tJu7fu9r12ZN/Ntx/R
xYdISZu2aFXy9nx0MCXt3vYlKalyo6Jn7+Ws5ZTorLBka1LSWaSkQUlJL6Rn
WsgHmRY1z/VPg99pFzf/9nwkJWXan597ez7al5IqS96ej1qkpK2kpKcqZrTw
SpQqnLpyLV9kZqUqKS6+bGq7jqoRNokhSEnvpHNOFz2BH+/nmkqmwe+0i1t3
ez6SkjLtz8+9PR9JSfX21SMl0b/bd6WUNCgp6Z10TgstUlLlem+/x959p13s
pfqUtOr5HlJSzdbdvtcO7rvMgsOlpPzH0WHh2/PRiSnpslNWTcfeno+OpKTK
j7YuuEy4M//qoRPsi0FJSe+kc1poFJGKFX7vtFerrr83nsvPS0WrStW/quHI
1kUXn7bknWXhTQs2TUn5rduaZer38qaDodHWzSHlKwwv8/QpEC4Y1hOtM7pg
i63bmmVWogVufJZ0jZqO3ZplwilL+cKNUlJ+A5fTU8WOK7bk8frZ8H5awiZS
0jvpnEZaXJXCm6vVKqZFkFne9NbcGK/uqFOzUhPDGk7ZulWBx6Sk6NbteOhT
s5eje61pSopu3SoQRVNSNPJMi4CTykT1dTbauh1xJvo6P/HZKSnasQdT0mri
/Pq7rotT0moDw+1NTTyu2NX19ZzetrdptItpTUp6J53TyPHrUbHOcBXTrpQU
FkgtXln/vk3Ob9rnpJT0rXD1dlPNJ6ak1da1Tkn11bbYujCtFKdEnw0V5xYf
LbXYuiMpaV+BDlPS1t8l1XTs1ogULjLFUtItz5JWG5iqs8VOLHZ1fT2nt+1t
dnQ7PZCS3knntLPvMlRTYeoyN2VTzLfwKsusJlbeikcnLt9mLsr7fLanpFkY
l74vVm/3VX7i1p2Vkr51rvbypmpbbN2+lJQvti8ltdi63Slp+eL7evXfTZWf
vnU3+nSWkhptY/15PlzqrJL1F6CPe4bDNvU5/ZCS3knntLP1GlRZW+YCN8V+
OhQNOFMiOoX31WFVmYQ1T9mx1TVbt+NZ0mqpuebwudKI37iL7ppMpK2stsXW
pRLQlAhEs/zX6u56lrQqsCMlzVYTl+lpa807tu5EpzxLWhXY8XW7Kfj90SyV
nu76xl1qqR3rOtKS+krC5s1VTUEoixZItWR3q4bzks18HinpnXROUwfPh+EV
LX+Nm7J3yPOC4eOGg8+PonfvRzY2tXUHU1Jq4qaaT0lJmX23Kc5Ed8dyR9+S
kqIFtqakc58lLStssXXHnyWFr/dVu3XrTnQwJUUL7HvcU5OGtla+o0PyG1g/
8bhiV1dWsnqxrPyzyEFh+cyssP5na7SLaU1Keied09qmHq65bcicY6d0Sgpf
hLfTPaSkfIEdKSkajqbD37hrsXWnpKT8Hm+akvIF9qWkVNLZlJJWr1ts3e6U
lJo4veZZUr7A1gdJ9d+sq6/8YEqqL9Du/vmUmlPXpunXyBMW2/Ti8drtZZqS
kl5L/zQy/aqmWE2d+bmp2+bVrNTbfCCqvPFudBWYtv//ksIHRlPMBd+4q9m6
3SmpPhc3Skk1W1eTX/KRJ1Ogpqq5khZbdzAlTUEmmmIPmx6WkoqmwVNS5TZu
ugTcZUoko08sJWWWDTcztdRTdb6jSZGSXkv/tLA6Ey7ftrsszpHnaxVboqJl
won5YuH0FgfV1OD/D7vvr9HWbc0y0V2T2t2dpKS5PWGEmaeHjY8umH+7mr6s
p8XWbY1IK8uJ0ddSUs137cK3q1mpRW5MSaOYtqekzIuwqvf08PfAu7sVbCYl
vZb+OV30NDhfl5uud+vziEZ/je5Fb89H/aSk4fZd9MdE1//1kJLa/b0zJV3w
9/Kr5OritXwbvv78egXMLLus/7JtuZ2UNCgp6bX0z+lSXdq6qx9/p317PpKS
dm/d7flISmpNSiIv+gTq87KbEClpUFLSa+mf092Ykvph62ydrbve6VtXr0VK
6scpXfRyUywZva1vHU6DkpJeS/+cLtWluhp4qtNTEtdrfZFaps535oV3bvUD
SEmvpX9OFz0NOjcCDyYlDa341MxjtVPow0FJSa+lf1pYnQmdGIFnk5LGVfnd
Qlex49wMDEpKei3904ivtQPvISUNqv465UJ2nPuBQUlJb6aL2tG3wBtIScMJ
/o2K2pS0/G3Rvlnhi7BV0dbOhaNf2EjVH625Zu2nhxopaVBS0pvponb0LfAG
UtJYwohUn5I+2aSTnxW+WGWf6OqihcOloukmU3Nq7alqj5OSBiUlvZkuakff
Am8gJQ0kGpG2pqQWL4opKWz/JxY9wnpqGr+qp75n6klJg5KS3kwXNaV7AejK
6CkptUWpplY2fllPi2u3lDQoKenNdFHNxSLVS6tPtOoXBIAbjZ6SVkstX9TU
nK8nH8r2kZIGJSW9mS76BJ2QOT+nJm6NVwBwu5qUtPo8cPV6OTE1a1VPvnD0
EhzWk2p/uN5UDanGh2s5xekVcg0p6c100acUi+YTaf0i+YkAT+J3SUN72HWq
282RkjZZJdnKRTJVZeqvrOcsUtJAdNHnpJRUWTPAw0hJw3nwtanbTZOS6p3+
UC8ToHYsdZCUNBBd9KlLSamJ89vUhxVnNhTuM73b3d3fNSlpOE89pHsesN02
rDdhLx3vt1QN+Zob7S8paSx6KT8ko3dKlaNY3zK6nu86rqQfMqSksdQfxq0P
+92VjzgSnUAqZXopc0DO05cvVnXOU1ZllnWu6llNT9WwiZQ0Fr2UiTyrWanp
0SmpiTAKB3BIn4SkpLFsOoZbH/CbIlvTlrQmJVWqee6Tv+MKI0x0yifIR8UX
0Tq3kpLGopdSUWj3rJrp0DMX9AydsyIlDWTroSslncV5o9IpKanyRSr+pF6k
Jm4iJY3l5b00BcJZ0berZTP1t2s8NOK4zdM/S1LSKHYct8VL3vJT+tRH9/ml
8pWENWSuy6tqu5K/VWAW9lK4T6PH1Y4XYZ35F6mJm0hJY9FLTelehuOgraGX
ZlLSKI6kpMzNYepONXNzm1+wuN78LW6fQUlKqldMJdGelJK2ckDW0EtN6V7G
4oitp6++pKQh7DtcK1NSZfn6W9OatdSvtwdS0iar50SZiatZyzKbpoSrSE3P
t6RIShqLXmpK9zIWR2w9ffUlJQ3hYEr6pO/zpaQaUtKgTg81UtJY9FJTupex
RG9Ootf36PRMseOfy+2+zWt042R0f0lJ/dt9rNaMnegQOyslHaynH1LSoKSk
l9NLTeleBpI6XDMpqaaG/M1MZr1naVS/0f0lJXXuSESq+TRjziz1H4PkPzwJ
K1y+DctEV9RbKumtPVSSktBR7ehbBpJJSZ9YrlmVj06MLhh90Y6U1JSU9AaZ
jzUMhBpS0qCkJHRUU7qXUVyfkvKjI/XJ8BQI1xJtbfgiXNemAWt0f6Skd5CS
DpKSBiUloaOa0r2MIp+SPkG0Sd0shdPDAFK8Z0g9dYpOX87KPK6qX6SS0f2R
kl4j+jHCjs8W3kkvDUpKQkc1pXsZxfGUlLqPStWZGR2peupDUGXJzBYVGd0f
Kaljpxyfy9GUiUipYd4uHYw1+qSkQUlJ6KimdC+jOJKSMskok5IyK53nZp4E
VTavPlhlWpJq3tZFnkdK6tNZEWn5OjWuo8Nn94cPle0Zi5Q0KCkJHdWU7mUU
xZRU+To/a2uBVAhKldyRknYPUqObbh0/ODcFn5opx4074qSkQUlJ6KimdC+j
qPnOzOrhy5wyVmVSs1J1biqTf72cmBdd5HiPwe1OOTIzlRTrz4/x1PgNK8+f
BIqVb9repnacXrhS5VXjGpdt8mUr6se+9p/eJ8x0L6MY4lidfr2DurfOIXqM
FzrlyFxVsrzNqKl/SqSeZW2r16v6wxrCqvKV9zNCd9+hcY2fe+fH50cPf5cd
J1eu6M///H/q4U9K6pDuZRRDHKtSUm/8Lqk3LcbFasopKSkzcZV3dqSk+nZe
Q0rqnJTUdEW356MjKenT05nkkXQvQ+jhQK25lzjy6PzcOnvosdtJSb25JSVV
Ft6Uko48S0q16i5SUuekpKYruj0fSUk9070M4cYDtcUTogsM1NR2pKSunP7p
QeptccxKSUtSUuekpKYruj0fSUk9070MQUraaqCmtiMl9aPFATktpGZlliq+
DV+HLzLTayo/vU926KclRElJTVeUiS2z5dvV3NTrZWEpaThTzN2NgqQWx2fq
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
0wJRUtIpjK9nc2dVr5g+UkmqWF5KWnJA7hPGdmikJiVtSjrHnyWtmrdpIEQ/
1Dp4cZSS6JyUdJzB9XhS0ibhc6LUxNSs1SV4KZy7qiRaOL9IsYUzKWl0U3Ui
hoNWsWWl+JAoU764VFgy08j8WMicWucCR7ro9nwkJZEhJR1kZL1B8TpCn04P
NVLS6KZYGIcWotHmlr/icV4zFqbgg6/o9K1ddHs+kpKioun4Ljf2g5R00L27
j2vcPk7ZR0oiNCVu9uBc0zgpaW5w/dxJSnq0nx3yu9/9dQ9/UtK4DKuXkJIG
JSURCrvOAKeFSz5lr7WpzalZ0bf1lUfrzMSWr9Xr+llS0hGTlPS3pCQo2nSV
oR9SEqHKm0A46OcR9Yd/+H/08Lf12K685O1IYWEN+eRSfJ2fJSXtJiV9SUmb
7PtwhtHZ3YOSkghlus5I50TjpqS5/a2Hw46UFC6SmSUl7SYlfUlJs+IJYVXA
9fQ97OtBSUmEil2nbznF6Clp3op2I2JrSoqWz8/KzJWSMqSkLylpln9OVD+R
57GjByUlEar/KtEFjeHBnpGS5m1pMSI2paRU4dSs6dcfK0lJm6RS0rczV2+/
U6ZApoZ8GSmpQ+H+nX59cpRa6qoGchu3TIOSkgjVd51O5ognpaR5i84dFJtS
0tZnSdOWb+IZ7CuZ/LKatQpNqWI1i0hJPYumpPmcICW9mZTUuczgvd5lm3zN
ip5nU9dduU95mGmRkubzQ5hfwuk1xaInn1QN5x7DJ9Y2tfxdUmYRKaloymac
aXsyOpKSGELqQLr40OV6mQOAHvzcO3/xF/+mh7/LjhMH5G47uk5vs8MURJUp
EX/CidHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeYYpEnNXG1
rGdJA8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNVow08WHMm
ucy3YavX9bP+0eIXScuJUlKNYkoK49LquU8+GYUlpaTOpfLRqkDqLQ9mX3dO
SmKT3b2n26n3+JQ0b+aRAVX8Ltw1f4b2yu6UFH2WtKot/7arlMSsZqQXkxSP
ZHd3TkpikyO9p+epFI0/YQ7KF+s/Jc0bu2MtUlK3alJSmICiS0lJ8GxSUuek
JDY52HtOCNTYnZJmA6WkeZNT64pOn3rSuG8GMx3+N+5WEzPFMuuSkqB/TqGd
mxIpab78RScu565KhgumKjk3JdUv7oA84pTeswvIm7anpNQio6SkecPDKdHL
6M8pPz4/evgznFdSyWXeldFv2a1mpQqsZCLS7SnJ75KgSErqXColhekmnLhM
RpkyqcQULnVwQ04vSeis3nNmIKMy8uxLSdGQ1UlK+iR+xy0lDaQYXi77k5Kg
c+6FOnckJWXyTnGRpilpPupSdxdHVvRy5/aefUHUKuN8hRlnnh6WCWdlyqTW
dUtKmnsgtCpwez6SkqKkpC8paSkznKNvw/F+XVu5UPQ2lX5Me1PSlH0qtCNt
7TtOUvcSywPP2eZEp/eeUwShKfEduev/7j0483dWt+cjKSkqelW6y439ICWt
TOlbkcys1BSe4fZxSt60PSXNdqek1eItvnG36fxDvUa9Z6ewNElJ6Zvtee7t
+UhKauQZXSolrWSyz+pWOXrT8oyjghUpqXM7UtIpz5KafuPuIyW11C4o2TV8
VX1KfpUOO+GTTUlzsdXr+llS0r2e0aVS0kq4W6dFSgrfroo946hg5d6rDEXT
E3+X9PGNu5aadqC9A59STvyUniUt56Ze52dJSTd6RpdKSSvFlPRJBKLUzQwP
ICV1rj4lTb//d78rJ16cksLt+vjXG9po3YFOGnTuxuNzmZW2pqRwkcwsKelG
z+hSKWnlSEpafkLCk9itnctEmJXUxLB8tJ58sUYpaessalzTgXYT3erh4Nya
kqLlU7OWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIOtKfo
U/SW5sSLXc3nxptSUqpwflblMybj9KDw48eUu1u6jZS0ksk7+2bxACMO7Vd5
ZErKX1MckAdd2YFOIPQjdeO6PEpPD0qZlbZ7liQl3esZXSolLWUyb3RKdNag
eZkMO7Rz+WvxxS7b5GtW9FTXd6BdRlem6g9+j6wif6qcGv8uaZKS7vOMLpWS
oOjKu19O9NtCnxXu5oA86JYOdCahHzempGWBrSkpTD2ZWZURSUpq4RldKiVB
kXubQUlJpNzYgfYdPQhT0rT4SsxZq8g/bc9EmLn86nX9rNempE62pZNmHCQl
QZGU1LnUJ5a3uGyTr1nRg93Yh1ceKlBjOvVfb6g8PU4H/u3uyuxTX/L4Vnei
k23ppBkHSUlQ5Jamc60vtZsuypdt8jUrerDb+/D2BsDs+NEYTUP5j4+kpBbC
/v/ccRvzjC6VkqBISuqclMQOPfShcwud2H0cFnNQpubcU/nL7dv8fqQ2arl1
9Zt5Xb9XaNVlFaQkKLp9nJI3SUls108f9tMS3mnr7ehZd7A/F/93f//v9/D3
pDG42pbp10dL9ZXcfj29+KoK7CMlde6F53MH5HFd9aGTDP07/bN9KakFKQm4
khuYzr3wfO6APK7DPuywSbxc0y8+SUkthClpniIlAaeTkjpXcz6fL/Q/Fv+r
wZVU+eXETs7nDsjj+uzD419hmm76sTZP0i4ZrdZyez56XkpaiZ4QijtXSvry
uyQocr/RuZrwsoo/0dQTnT79+n/i6OR87oA8rts+PHjC2ffRMTR9bJRa4+35
6CUpKZyY391bP3vMzK25dPZwVY2SkqBISupc/gwczk2lpB+Lx0yphNXJ+dwB
eVznfbi7eatPjE9qDo91cTJarToTW75Wr+tnhW+lpOXE0KpAZYSp/3xSSoJH
kpI6tzUl1QeoyTfuHq3zbqw886xucqQkilL3xtc3I59ciq8rixWD0lNHSmov
R1PS6jQiJX2kJKhw+6WEvBYpqThXSnqAIbpxayNTiQl6SEZLO1JSuEhq1taU
xOyzKyVNi88Yp+y3MqQkeJL5vEGf8qffzNxw1uRZ0puM0o2bTkHzTc4oW0dT
q7vfrkwbU1K0fGrWtPhK3pu/cReVCkfLAptSUioZLUlJ8Eh9Xl+YbU1JqygU
zkp9AiYlPcxY3VjZ2rE2ika6TUZLm1JSqnBqVhiypKRZJh/NBTalpGVQSl0x
9wUlKQk61/+15uVqwktN6ommJynpwYbrxppz0XAbxVny970d2pSS9j1LkpKi
igeJlPQlJUHRQBedd6o594YP/adAZfkezucOyFMM2o2ZZo91k8wpxt3pW1NS
Pg1Nx36XdHdn9GVfSqr8HFJKgicZ9AL0HvvOvS3+pKSxjNuNTkovN9xjo6gd
Kak+DUlJR+z47HH5Iqrzq2qUlARFo1+JHk9KYp/Ru3H09rPJM5LRUia8zFu6
er1jVjEiSUmhF15Vo6QkKHrSVemRUp9c3eKyTb5mRc/2gG58wCaQd/G55UpT
RX7Z/bep8kd27xGTlPS3pCQoeuoV6vF+W+izwn0cjSd6QGc6QT3P9R+83EJK
6paU9CUlQdHjL1VPJSVR9JjOfMyGvNkbktHSmU/xD7u7M/py9974xY39ICVB
0e3jlLx7T+Ar+UaesrHHK2H2pP486xjjSjVnD+AWUhIUuX51bur4uwGVGWrT
xh6vhNnz+vN5W/RIkhH0T0qCIteyzvWZkjY9aarcTMfhyp6nfc3c3Rl/p7f2
8HXwaDl+sFUu6PiBLykJilwyOjd1lpJOv5F2BKb87JY/+ZP/pYe/e3dQ/1Gu
voUXuGvbD1YSfd3I9b3E8ziK4A1uubBSbxonJQ1xUzeQSUoaxM/++d3v/rqH
v2v21Onj9+IDzPHMcY4ieAN3qp3rLSXNrZJ3WpOSRvGSlNR0pK+qnVeUejGX
z5yLwmWj64IdHEXwBu5v71Xs/3xKmu8Kvq+XU5azVoukaqhPScvGS0n71Oz6
2/ORlFTjwSnpygGeyjLR1JMqFs6K1tNmC3iRBxxFfpcERe5v71UMGpn8spy1
TDphDooWC2dtTUmrrWjZTw9Us+uL4WVpNXHH23tTUuVRVOy36xs2PS4lXdm9
4aqLLz7pTJSatdwcJyuOe8BRJCVBkfvbe00xqwLFiLSakplV+XprSmKHml1f
85QnfB2+KE7sJyXl789Xs645fRUb9oyUVOz8a5yekvL1wD4POIqkJCi6/Zr4
ctFb5eVOqU9JNQFKSupHza4/mJKiJfPF+klJ4akperK64AxW07D6FBNO+Qrf
Rtd7ekqKbtHFpnTYib4ovq2s8DLxcf4aF/f2NR6wXVISFD34JHaBCy4uU08p
ict8Tk1JYbGayntISXNvfNK3Ja2bV9Ow3SlpNTH6OnxxMCWFm3CvVHsyff7Z
8p26fD3tdNXJN3pkPzxgc6QkKHreuWssxcv31DIlrbJPzbMkB8xZanZ9TX6Z
pb5HF86tqTm1lrt8sinp9obVR6Sw8FQKQZX1F1PSss20pp9DT+qTB2yLlARF
Lpr3Cu+4wgJbo1BmVipepdaS+sadY+a4ml2/6VlS5cRpqGdJqwKpBW9v2PGU
lKnkSErKH2O0oLczHtM5D9gKKQmKHnPKGlSx/zP5JZV9puBpUf2TpsqUVNNy
8mp2fbuUtCko3ZKSUgVqJl7fsE1ft1uV/1Zbs2B9SpKMbqTb857RPw/YCikJ
ilxJO5ePMPO9UObXQ5nyYYH6lDQ37/o+eYnWKak+KF2ZkjaVueb0VZNnKyPM
rN2zJKf0e+n8GnqpB1ISFLmkdq4+xbT+Sx0nDqFGihFmviVOTVzelkcXidZw
V0qqtPoQ4O7m/I2aFBNNRvlnTLtT0t398V46v56+up2UBEWuqp3rPyXN7bys
T16i8kHPBX92bt5ZKSkViDalpI/BeB89X09f3U5KgiIpqXNTT2qaek23vMEk
JQ1iqvgHur/Ct5lZqSnFlPRxC3qTTLevTo/Lk+rWM21Y7aYF9x0by/pPObpG
P0RHb/9HSoIK7mwH9dtCVxU6nM4iJY2iMsJc8Le6D7+xT16o5nOk1NsjO+6y
nX5u5aMfn6O3/yMlQQUpaVDdpqSPg+ok4SfMN7q7M7o2dZmSPo+4kRtIsbdX
Qyn1+sh6m+7xcysf/eAcvf0fKQkquAXq3MU3w3lbW96oT6Ard4/LX0Tbdku3
vE2xn6dffzU2xdJNqpJlgSmdhaOLL4+N5eLRg2dVW1h5WFW4SOVRN/SROXTj
v6QkKHIN7dzPvfNP/sn/3sPfjuPE0QU9MAwvUJmSPkFc+pTCRTSPRJeNxuT8
2sP8lSmwdZG8oQ/LoRv/JSVBkfvYzg2dkuZNOLdPgK0Mw9YOpqR8JZkr9Wp6
+DZaoD4EVZas2Yp8y8cydOO/pCQokpI694CU9HGYkRb9JHz5Nv9ROfX0XlP1
KemT/Y3SskD41Ka43mixVNjJJLX6cJSpM2/oA3LoxgOV3Hh07hkpad6WU/qE
hyl+qJ6/n6Se3mtnU0r6bDyqV8mlstpPOtFEc1m0wI5nSZWGPhqHbjxQSUq6
V7H/n5SSaraXF9qRkjxa2k2nNVI8k2ee3dRcCJaFw2pTlaymL9/mX0crj4ou
UtFhYx+KQzceqORO416rS0y0QD65fH1fL6csZ0XLLydelpKWWw1f0/aUlHpL
DZ3Wwli9mhlTl9U5Vo+tDN34L79LgiIp6V5T7FPBVYFMbFnFn2jqiU5fTrw+
JX0ceCysPpeeJ+YLfB5xo3IXXXe6sbpUSjpo6MZ/SUlQ5Gb1XtHOX+6UVIQJ
p6dSUnHKLSkps/m8TWoUFAs4fo7Qe+fqrT+LAyT6ycMpK62ss7ceexspCYpe
cqcx/So1PXRByUxrP1tSUmUm6iolZTqB90iNgnyB4iyK9N6JOunMyoHTg86b
93hSEhQ9/h618w1ctS1s7eNTUrQfeBUp6UY68Cyd9KSURCUpCYo6DxFHDLFp
8wOjzHOl01NS/u0tKemzfX8Vn9ldqV23PF60D5cTiwU4SDeeonU3rkZEOP0T
jIu5fLSGVW2petqNtaEPvKEb/yUlQdFT7zRG2ahi/09n/y4pP/fGlDRvbzgl
uuqfE//oj/5tD3+jHGyQ4hg+7oI+zCegsBnLpJMqVlnP6dvSrtprDN34LykJ
ih6Zkp60RZkIk8o+U/pRUTRJdZWSPtlPSlfFbs9HUhKP8chrwZWuSUnh6+jz
o7BM9EV4ps3HpXMNfbwN3fgvKQmKXBk7l48w83UtnFKclarh9pQ0b/jn16/V
hQVuz0dSEg/jYN7tlpRU+QwoDEf1i0tJUUM3/ktKgiIpqXM1+eWav+uPkzDx
rebeno+kJJ7H8bzPNSkp9TCoMiXtmNhou0Y/zEZv/0dKggpSUuekpH0paV5k
9fr7tqaYlMRrOaT3ad1vqydB88TlGXL1IlwkGojCelpv0ejH2Ojt/0hJUOFh
KelJ2/IVJoUb9bDhywLF8FJ8nZ8lJfFajuodWnfa9Tul3RpHP8BGb/9HSoIK
19/9NvWkbcn7baHPCo+oCWv7UtL0+8dGUhLkObC3elhKarq6EY+uHj4/PJGU
BEVDj/HQk7Yl79kpaUlKgrs4trdq+vDlsut16xUNelxFmz3otnykJKggJQ3q
PSlpZT5iaxJNJhOFE/dFJCmJZ3N4b6XH8obun1Xjh94WKQmKpKRBvTYlzXan
pJmUBDUc4Zs87Kp6rtF7RkqCV3nY+fxJ25InJe1ISatFMl/Dk5JgyUG+lR4L
PaNPllsx9BZJSVAkJTGoylCT+dnR8V8kvS0lhb8Re5W7u/9memArx88n+38G
H9S8IY/ZIiDlSeeuT99nreWVYv5v/jI6BQ/3M/srOveaDrnlKJo2pqS5f1Jv
paSUh93k7KYftm57PG3epFGfDNobl7m71883SUnwGg87j3W7LdOvz+hTp9lU
sXBWvv5oDU1d3/PTgVxz7l+3R90pnr11+7y5TzZt+8/CPz4/evh78y7jdA+7
cQJSHjbY+9yWTKipzDuZ1/nVSUlS0m4POzmc682dk9r26Nns9nwkJXG6Zwx/
v0uComcM9lmf25Jp1V0pafV1iOjbTyzNLWcVH2ClCp9CSmrtqdt1lpf3T/7c
NU+5PR9JSbTwgCNKSoKih6WkPvWWklbZJx92ookpmp7Ct9FVnGXqyelbd7tH
btTpntpLldu1KhYuNUlJXOLGk/+9jnSalARFxwcaRZkeDmdN6YxTc24MF9lU
ZkrEnOiLcGK0hQ6w4dhl9R7ZV/UblR/pUywlzaeI7+tw+jxrfl18G50iJT3e
KWFhaEd6QEqCopefYa6RiUKbUlK4bDGPXJ+Siqujf+fusulXq4k73tY0+LIz
2yMP79UYn0d38YwUzgrTyirXRKdnJkZfp+ZKSQ9mny7t6A0pCYoelpK63ZZU
lskElvBtdEo4a1POSpXPv0jNLU5nCKfvr8pjrDixpv7MxBbH4ZOO7Snmkxjy
qwWjs1aBJROaUtEmM1dKeq2H3becZWu3SElQ9LCzTc/bsrzrWE0JZ4Xl83sq
Wk+02mhtmQWjLz7BjVPqhiqcSOda7KnVwZZZUTi32J4pfYtenHLcIw/s8FyU
mrWcHu3wfEqqyVCZpaZfY9S3Db5x93j2ZsqmnpGSoOhht69P2pZu6eRnuzEl
hcVqGpNPSauofvrWPXI47EhJ0Vn5lDTvkeh38PKpp+YLe1LSI9mVefX9IyVB
kZQ0qN8WLq7wPZ38To1SUhhSwlvx1dzKlqRiV5ieGh26zxsRmV1zYkqq/KJd
zRMoKekl7Mcalb0kJUGRlDSou1JSow/k6UfrZ0mVEzc9S4oeltEp9W2u9/jh
sHoqly+2mnI8JdV86U5Kegn7sYaUBGd52B3vk7Yl78ZnSTxbVykpLLYKRJkc
5FnSWbY+1FtOyceiaA7KT5SS3sx+rCElwVmkpEFJSTTSW0rKN6mYklJ1nujx
p50TU9L8e6KvzMTM20zhTJhq0DFcajW6V5+WLOWX3bSifTXUr+j42SncZCkJ
ziIlDUpKopHTB1H01mU5Mby9yb9N1Ryt87M4yzU63T37tJO58wxLhlMyPyk6
8a+4omfvo5fIZ4HjcaO4xhaKq9gx9KQkOIuUNCgpiUbeM4jOose+pCSakpLq
y9QsJSVBkZQ0KCmJRt4ziM6ix1KmntzdGRw1bUlJy50efb0qlnqRmRs2bzVr
WWZ1EKaaEX0dnVVsTLwTF6QkKDpy+ai+Or3dubvsS0qikcojdt+BvRwRjYZG
dF2tV3TBWuDlVgMt9TZ6kpmC/JIqE30RXTYc+MtZyzL1zahvVbSSVOdESUlQ
tONGounN/yO16DEpiUYuCC+X1S8lwWPUp6TUxMys/Ivi3HyZ1aemxWpTIa5Y
SWZKSEqCoq137+4Hjjix96QkGpGSjqwRaGTolJRq+Y5nSZlKMlOAHepTkudH
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
                   
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 2->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
hJSklB6mS52SuF94x+FzKrzS2qywGRPyZmQo+jZDc9coPfvX9j+fPxb+GTk0
OMe/Lar/OgMM/Ft+j/gklxFSEsbRpKSP7neU4A4pyanwSmuzwmZMyJuRoRjU
DOHiU3qKlIRj/ZCSykqJqVR4XhAScRlxQcg7bU/BEVKSU+GV1maFzZiQNyND
MbQZ6UdLwrcUSEk41g8pqez+vpPmxCQlQe9KpE+FW7JPab5BAZs4cE6FV1qb
FTZjQt7sDMWEltzXotIt6UNKEumXiEIOdWSz/lab90NKKksvFMJgllLS91XR
j98t6VI5LJZWUipsKiXxe0lAlfEbB0pISSewMxTTWpJdY4TPLs9HxlOSHAfS
8TTYEaXN+lvtjj4l/XMR/l8flwpky++UkkqDKceW0o+ax+GP6YPs7iYOUoyU
FLJ8ccBCTAynwiutzQqbMSFvdoZibUq69x6lpKhMtDEbbe6nsgWE8u5SUnpt
L60YDfZFY7P+VrujTDE/SfypFiuFKS8pKR0ueTAvMbZcujQUbhSekq2diqSk
kHDqPSqDzXCsnQqvtDYrbMaEvJkaijmNyS5v7svUlQSWcMsVBKVsroniTzUi
ZR/7SknhFV649U9sZjeb9bfanR9FkEnLlF719yp9i5SUql5GhNjyU/gYSNiY
rVDYS1hm4SiRkkLCqRcWKP2IXXGgneoearpX2IwJeTM1FL0aI9QjrG1ubSlJ
s0WZmLIfY9knjPz9bLUG5WFaW/IufJX7686nNSXJsejeoqn812udE2JLKf5k
X36Vv1Yn7CUso7hkjkJKCgmz5VNYKmc3YjMcZae6h5ruFTZjQt5MDUWvxryp
5+qXkkrfr8uWz1bYZTQ6Kt3fwwKlF05pYGeb9bfaHU2QKZVJ01D0QFO598+S
wmeF2BI+uBSfJd1KVQn7giOlmTZrUmMN4ejDsu6hpnuFzZiQN2tD0aU91+/l
ylV+py77WuEznfefHF2FX1nKbnk/FH1V7+nZ7X5vAZv1t9odTZARyvxzcX5e
SkqfFZJLlGKE1BNtkX8s7W7J+HzxWVLoygmfLb1qVgOxhtlbBmThldZmhc2Y
kDdrQ/GmPaV7UHgJqtZ/6eKPspgyJZV20TwUg2gu5umt32BHlDbrb7VtPy9+
L+mn/FlS+mW8bVKS8KwQW0o/kpL2VspH97OlV41vGlayfNeAILzS2qywGRPy
Zm0ourQnqkTzfl1YoFdKugPRVyklleKVtUOjJy8G9rNNf3+a/sZd9UH1QyiP
KUlWyi/3JEmTTvapcIv8IynJPvn6UIpOri8p0OAoO0VKOoG1oXCakvTZp1Qs
u9/3QwHo6YPMPxfhuY2/VumkpKVISY5Eq2UWz4fgQDsVXmltVtiMCXkzOBTv
m5SmpHvL05R0v2Gb3Zg+my1fSkmlSkhJWOLnSZAZ+m/5PeIlUtIXKemp6Kbw
MXmPRl+kJKfCK63NCpsxIW8Gh6J7k+57jaZmOeC8/6ev3+ChgZLTu94PKakT
UtIXKek9j1cSPOL0foHwSmuzwmZMyJC10RiUkvSFSUl4I/vBpYuj+UNK6iT9
uHmhheNASupi7UHEaMvPU7QhJR3C4Gj0bdKj2pYtZXI6DgLmC4+gi6M56OOM
NqsHAx2QkrpwcfVAM273TnW/Ydm5AzIhQwZHo2OTViUOg6M6WjjUxL3P7696
Hj4UOBMpqRcuHRvj1uAUKekQBkfDYJOe2qALDUqfnhw4GlGXDxwBgJTUCxeQ
jZGSnCIlHcLmaNhslZ739reRU9I5n6fc/Y22AEchJXXENWRXh9wW90NKOoTN
0bDZKj3v7W+j/CzJ++BE3y0sPeu9mwDs4HqyK24WTpGSDmFzNGy2Ss97+9tE
ySgbFryPTNrHhY0BcA6uNlviPuIUKekQZkfDbMOUvLe/QfU7Zt5vB9lPjpa0
BACwAe+3xWORkg5hdjTMNkzJe/sbKH8Tx+/IyJ3y2y9gBH4vCaji3uEUKekQ
ZkfDbMOUvLe/wbEp6d7ut2tAd6QkoIqU5BQp6RBmR8Nsw5S8t/+p6G8aZH8j
yfvtoPpZkuveAX2RkkbgIrMZbhxOkZIOYXk0LLetynXjkVX6vSQ+SwJSpKQR
uMhshpTkFCnpEJZHw3Lbqlw3HiXZbxWSkoAUKWkQrjM7ISU5RUo6hOXRsNy2
KteNh0D+PiHHHfgiJQ3CRWYn3DWcIiUdwvhoGG+ewG/LAeA9UtI43F+2QUpy
ipR0iKGjcVkyrpulvk/eIwDYQUoah/vLNpasT/AeKekQQ0fjr8r/fP5Y+EdK
wkyL3gmwYvXwwwRS0lCcaHvgmukUKekQQ0fjOjglfZhp5yEmfDEO+JCSBuP8
2gOXSqdISYcgJQ3t/vydYhUOd4oxORkpaTTOrw2QkpwiJR2ClDS0+/N3ivm4
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
lX9+f8egrTu9RwgAgFfe39GyNUS3y+jWKaSk0gujLaUfP8nNWl/bm1t8M1KS
U91DTfcKmzEhs6wNS9uHPj+KlFTaIlSbtq3hymZthAEAaLg3Xb+VKkwjSelB
+qMcbUrlNbsuPZW2ZwJSklPdQ033CpsxIbOsDYvllBQ2Un+JszbCADAOv5fk
RVtKevRjdK98mpKqDz7llFTddakxc5CSnOoearpX2IwJmWVtWJQp5rLxN+6E
d9XCMl1HCADsIiU58vT29DQllV7ePSV9kq/YaXYdJayZSElOdQ813StsxoTM
sjYs+pR0q24vFX6fkqKWZ6971kYYAMYhJTmSjRvK8sKP2c93sg+EZjxKSXJL
Hr12DlKSU6Sk01gblkdBZqjmkYnikrURBoBxSEm+aL4RkZYslY+2R7dC4eXp
ffP+MX2Qli/VINR2P1UboSFISU6Fq0SbFTZjQmZZG5YNUlLYF+XdBwD2QEpy
pJp6vGgOPqQkPBKuEm1W2IwJmWVtWNK3mxbq1aNP7o0vANgPKcmFcbe8Ja6m
lLSwy94H/FikpNMwLKNFI7zB/QgASkhJGkJCyf6Y3ke6N8D7XelRL5b3d3kD
0IaUdCBGZqjS8G5zb8LJ9pu9+/VIr0vfSUlKQvCpZqIuR6o5JfXa+/tKlu+i
Gbd+p0hJB2JkhtIML3EJTu03affrkR4paSYh+6QfJ6XFRgQl/as6FpvATktu
3PGdIiUdiJEZ7dHdR3Px5AILI6K13L1+8zs/9+uRXpe+k5KU5JSU/hgV6zUh
nwYl/d7tnDJ2WnI75JKyH1LSgRiZ0RpGWL5tNbz7B3R05Xx+3/p9Tc79eqTX
t++kJKVqSvoUIkn3Cfk+JaVzJqow+2P0IOqU8imhnrQlpcfzLdw13iAlHYiR
Ge3lCKcX83Q9AyxRWr+lT3mxX4/0uvSdlKSUDmk2DqQlR1z89RWmjSxtz5ZU
Rh7NU0I9mgakXZiJe7dTpKQDMTKj9Rrhq0xZbL4uHad3SygbXPoxrWFxf37r
0iN3vZNdrX0PdU9Ji4fyt5d9ifpV2nL9HvmrfCBGNylbJjsaaeNL3Vn4oLRx
vu7TCXOQkg7EyIzW/UYm377/evzn88fCvxFT69ro/zuc7d3yo/bo2KUrJWER
4uLYPeqRu97JmvseGpGSVo/o34ZGEmUUGpqSqjQNM56S7h9JSWgQXhBsVtiM
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
L/cP1OmKsA==
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 3->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/v9UxjJ3QLKCjZl0C9bwBp06TbSKkWsdtss48Iq0SrICWRsunuCpCg
Q0uBREUDdSTouIrlJfA66KkOV3L0OL48f/1n7Bn789FPt86xx+Px2GP7e3zO
df+nv/uv/9l/9R9M0/SX//HP//yzf/XXf/gXf/Gv/uY//09+vvkv/vwv//Rf
//mf/Jd/9Od/9Sf/+k/+4j/73X/4c+L/97Ps7/6jafq71wAAAKx8Pp/vfwEA
AF5uGZQAAAAQkQAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJ
AABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUp
CQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAl
KQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACA
JSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAA
gCUpCQAAYElKAgAAWJKSAAAAlqQkAACApRtT0gSM4JbzAwDAjW68C7r3xg+o
dMv5AQDgRjfeBbkBg84ZpADAO0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALyT
lASkGKQAwDtJSUCKQQoAvJOUBKQYpADAO3Wbknb/H1uWi8z/Da1KpmqoX124
VGq9R5p6ZC35pWo2NtrmVI9lSmbqXE4slomuqKb+aNuKm5xqQ75jp8TBlqq2
+DazaZle2ufc2gAARnHjXVBx1atbyso6o/WH95b5ajf1Sary+lk7mhpOj5bc
17aUVJuLKyruynz0KLZwU/2ZttXUn39buV/ys+r3WnHZg6QkAOCdnpSS6u9C
i9U2SkmZ6VubujtWVN6Zb21D/Z18dL9Ha65vYX39m8JXvnmZpm6dUpmSit1y
+liWkgCAd3p2SgpnVd54n56Sdtzw1z9fqJ+yr0k1Zep3Vk0COpiSMsvuO9pv
TEmb1iUlAQCcovOUtFRTYU1VNYtsTUmZ+jett36RU1LSpu5dLpWpNrXeaAOK
i1dWGy1WnFivJnPV7KBQqs5wFcV17du0vE3HBgDAY9x4F1RcdX2yKBZI3SSf
lZJSS21db36RfKjZkZKKjck0MrNFqZZnSrZISdH6823L1J+PNtGaM40sNnVT
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
PK9GD/7V883dB/Nq8XyFdjq8k98lQZGU1Ln6m6WDN1dSUk2Dz+2B01d0yjfB
DtbAJ/haabRA6lCMvq4/klevixXa4/BOUhIUSUmd23Sn1DR3SElvSElnVfJy
U8yqQIuUlD8bSEnATEqCIimpc1LSBX+PSUkHlz2rBqIpaXmy3ZqSlo+J59fL
KZWBSEoCvqQkKJKSOrc7JS1vzKJ3Vv2npGX7o1NW95+ZBStXBBfIHPyrkqtx
PcWC0hSM6+WyNSlpcgmA95GSoMglsnOpu6l8Slq9CG+uhkhJ0fu61ZRwkzM3
hAc37bKRcnBFp7TTaeGIVDhaFqg54KfgA4H8SK+pKnrwuxDA20hJUOTi2LnT
U9K+iJSJEvuOn8q8lv9IPPP5uZR0ezPeLJOP5gL1KakmHOVTUmY4LJvncgDv
ISVBkcti5/alpFVqaJeSNh0/q/vGgymp8n5SSuqkqlcpjosrU1J+UITtdFGA
N5CSoMgFsXMHnyVFp+/LSqm7qeLxkyrWIiXt28aHpaRTamhRFbPUgb2SmTUf
58sX4bKpCosHv0sDPJuUBEUuhZ2rv9tP3R0t3y5fHElJq1uvaLMzc+s3LVUm
nD5JSafW0KIqZvvGYIu//P619+GppCQokpI6tzvRFIPG7rupyIfaix+A1x9R
jVLSj+1J8Hkp6axKTq+Kr1FSEvBUUhIUSUmd6y0lRSPSvqNoR0paPTCqKSkl
ncJZ4lyZcXS9rW1u2jPANaQkKHLV69x04B/u/jrxM+fjN1qbNi1cS2rTolNO
T0mfq8LCKWs5valOFHy5asADSElQ5HrXuboPg++3b9POSnDHA2B9m3ds6VZn
reX01l6z+Qxh98AHeiAlQZErXec6jxKpoFRzUHW+aak2V5Y8otuU1KhOxuUK
AoOSkqDINa5zI0aJT3VK6seJ23XciWs5vcHX9ABj2TSIgB5ISVDk6ta5afyU
NB9jlQfb7hVdQEpqVCcAV5KSoEhK6txYKSn1mGZ5mBXrkZI6T0ntquUZHB4A
PICU1Ln6lDSnkh1zmz5L+gSPljYtu3VdTQ2XkjK1HVyL8wYZW7/LCgC9cSHr
3KZck4lIxTJSUj/rGiIlnVIDj+cSA8CgXMI695iU1Ogbd7sX2WfElJSqcBVd
w+9G7qsWQi400Bu/S4IiF6/O7U5Jqx8HzVOu+cZduBWfNv96w+5F9nlASppi
PhuTbLum8mAuN9APKQmKXLY6ty8lrV5c/ywp3IpGhQ8u1eeKrn+W9AmS1MHK
IcUBAz2QkqBISuqclNR0qT5X1GIVYZ1npaQd5QG4l5QERVJS5w5+4y46/eKU
tPxaV2X53Svat+Ab1lKTknZ84y5TPxS5AMFdpCQocpHq3MFnST2kpB2bfPqy
JzZ+0JRUrDP8ddK59UOKyxBcT0qCIpenztWHmvmRTfh2WtgXkaSkFlVdvJaa
lNSufsjb+tAZOEJKgiJXpc7tyzWpr94d+RsiJaUWX/3o5shzEympdSW8nKsS
XEBKgiLXo85JSUcWn2I+vx72W1c3bkrKVHvix/jOJ5zCtQmakpKgyJWoc7sD
zuobd+9JSdEaVlNWSepg5S1cnJJGXAsAu0lJUCQldS76NOQul23y6TVMUlL7
mq9fC+/hiIJzSUlQdOXdLyf6baHPCnc75YDMxKLPi79x9zmWEPetBU7hagUn
kpKgyHVnUFLSkUqmV/7rDXPN1zwfdGKhBdcsOIWUBEWuOIOSko7Uc3AVFwyZ
Rqu4+FuUzi00kjmAXdSOK3z3+unu7v6LSElQ9KpzwpNISUeqOriK6OLzUDpl
TJ0+Ku+6H3B6oanwMH7bve6JdN3XS/pBSoKiN5wKHklK2l3V8StgJnzNs1oE
sYPu+tTUGYbWluPuhQ8FTqG7Qs/uEykJilxKBiUl3VJbvs7l9A5T0ufyb9wt
13vNini5u47woemojAd3jpQERQ8+AzyblHRLbas6V3di/aekz00ftjvJcIHo
01LHXpEuytM/8FouIoOSkjqsMJWYTlzFKW65gbzlPOP89iqplOQYyNA5NfQS
vJMryKCkpA4rnDr+1xvC+q8f+3etzinuDTIRyQGQomfq6St4IVeQQUlJN9aZ
T0lNV3GiW8b+LU+vnOLeSVAq0i31ntdXfpcERS4fg5KSjtR5cBXPSEmXreX2
lTZaY/7hxcVabGBX7u7gX9zdGad50ra09ry+kpKg6GHn/PeQkvZVe8p9TnTx
c++g6uu57tawwulbd1y7df2s+d/92Z/18Hdlf97l5zb+8R//bQ9/j+ntx2zI
NZ7XXVISFG26t6EfUtKOanfcz2dqO6VVx+v/WfLH50cPfx2mpKYrkpKuJCWd
LrohZ50nKxc/sTOPtPnipnZCSoIiKWlQUtKmCnc/9cjUeUrbjtc/YkratIFH
SEmPISWdLrUhy+kHg9Km6UfMdTb9rOYxu/5LSoIiKWlQUlJ9bVJShylp0zb2
SUq6kpR0ukempN4W6ZmUBEVS0qCkpE0VSkkdpqRNm7mPZ0kDyQ/MrSlpNd5f
mJKKJ7qtKWlVYfSkuiyzfLF6HS0cvk01Mlo4LJlqcKoZ+ZVmpg9KSoKi4omU
PklJW+sML+gHKzylYcfrn0ZOSZu2tDdTRUqaj7fV6+/bmmJvS0mZO94dcSb6
+j0p6ZO9xGemh3th+jX7rN5mXmQKhGVWxaKZJdOqaLH6ZmRWmlrL0KQkKJKS
BiUl7at5R0qaqp3b1PqSqcyyFE4PC0fLrMpHF5eS8hGm+Do/650paTWmJilp
o1Xvheeo1IZMiRyxrCQsk3+xXPsUxJNwSqoZxcKrkmGDK+tJVRhOHJeUBEXh
mZMhSEm7Kx/imK9vYTSwzLGl+Do1cdOyR1LSpo3typGUNP3+sZGUNIumpOVd
7lkp6Vvn6m19/aP0diY4ZAp8EkkhmjJqgkY+gLRLSalmVNYjJQEfKWlYUtKR
+vs/7IvNW95DnpWSiuUz6zqSkmq2t0NdpaQ32JGSwmXn198Xq7dbq41aHiH3
lowetHOxaIFPXXwIly2WDF9Ea8uXLxZOzappRr7C1MRxSUlQtDqvMgopaYi1
7Ja5gQnvhU58ljTFAtFqVmZ1b1OfYvJxKVXMs6Tl3N3PklbLzpXv+ybeKL09
BeEinBJdKuz56fdBI5wenbLag9G3qxpWtUXLp1YdtiRsT6r90WZHV5rqsXFJ
SVAUPRXQPykpX0M/TumETG1TNiUtVX7jbgoy0WrxFs+SolvduelYSppJSV/5
gTOdlJKmxLOkp6ak/KnjYOXH6xnLw7ZUSoKiIzdy3EhKytfwL/7F/9bD38H7
kJqolU9JmRy0KSVVPkvavbHLzTleyTV2p6TVglP6a3gvTEmZubtTUjQxTQe+
cXdlt+xWc+o4Uvkp9YzlYVsqJUGRlDQoKSlfw+356EhKqglHy8LnpqTw4VF+
QSmpPijlU9K+iPSYlJS3NSXNg2g15Y+D3yutij0mJRUd3JBNp6l9lR8p0MJj
dv2XlARFUtKgpKR8Dbfnox0paXXXcVlKij4qiqakfFA660wyyhlpX0qa93Lq
rZQUtTUltft7TG93njKKhbeeKo97zK7/kpKgSEoalJSUr+H2fFSfklIfyR5M
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
nxy4kQNjUFLSG/TTFfempHntq5S0KrOaGI0286xogUz54VJSeG5P3TF2uC01
Hra9xc2pTDFh/CkWS4WpUVJS2F35zpyysWWqS0PLiZlZPX/jTkpaygy9TWV4
GPt6UFLSG3TVFdc0Jnp7M5+mpiCwLKdMi6AUzTWr+FOMSNHXY6Wk5Rk+c+m/
sJmnedj2FjenJsiEZTIpaZWnxk1JoeJpJP8saYo9BspMjFaYWYuU1KHM0FsW
SL3lqezoQUlJb9BVV5zVmEw9mXub2b6UVDOlMjFFH2P1L9Pz89xiDZW76d6S
c+Epvb3D+exNSflYNE/ZmpLu7o+jit+4m4L4E118Sn+tLrMWKalDmaPlk7hV
jk7kYezlQUlJb9BVV5zVmCP1TOelpNT366LloxWe0hsnSl3flwVSC17SwJM9
bHuLm3MkJYVpaPXiDc+SlnP3paTos6TZ1pQUbSTdSh1pVx3U3COz9+mZlPQG
vXXFKe2ZpvVzgU/1iWjKPtM5/uRoSvxkKTrleFecq3hNj04f9xLwsO0tbs4p
z5LemZLCucWUNKeYTOpZTcm/9Sypc0Eq+uXISe2pPk8mnKjbSwZ5UtIb9NYV
R9qTugYtT0HF+qe6+FNZrDIlpVaxuysaqTmZh5f+Djek0sO2t9i2I79LyjxL
Cr+M95iUlJlbk5JSz5KkpEcqJuvUUu2bxp16vmqQISW9QW9dcUp7VpXUfF63
LHBWSpoD0VcqJaXiVW+7pl7+ZuB5HrO9+/6Nu+KL4kOoEVNSXiq/zAdJ9Ft2
4azllPxbKal/xWQdjU5Dn1KoYS8PSkp6g966YtCUVJ99UsWi6z3eFVBv3/8v
KZy4/JOS7v2Tkgayult28/wSdvSgpKQ36LArjjcpTEnzlK0paf7ANjoxnBst
n0pJqUqkJG6xKcg0/ZOSpKR3Wl0UPl1eozmXlDQoKekNOuyK05s0X2tqas4H
nON/9fV3uGuoNOhVT0o6i5T0JSUdN+KZhE0GvV4gJb1Eb73RKCXVF5aSOCL6
4HKIvSklnSV83HyjG/tBSjrFvTuR1m4fp+wjJb1Eh71xbpM21XbbrUzMiZ3A
9ZZ7cIi9Gf1h0V1/d3cGJ5CSTjHE2YPdXO4HJSW9RIe9cWKT7kocHfZqa8uu
Fvc+v37V8+VdwTtJSWdx6ngwl4ZBSUkv0WFvdNikrR6wCTuknp68sDdWm/zC
HgAp6SxOIA8mJQ1KSnqJPnujz1bVG739++RT0nuep8zbu5oCryIlncg55Kle
cll8HinpJfrsjT5bVW/09u9T+Sxp9M5ZfbcwNXf0zQT64XzyVC4Wg5KSXqLP
3uizVfVGb/8+q2QUDQuj90y4jTc2BngPZ5tHch0ZlJT0Et32RrcNqzR6+3co
fsds9MtB9MnRLS0B4AFGvyy+lpT0Et32RrcNqzR6+3eo/CXOuD2T36hxtwta
8LskKHLtGJSU9BLd9ka3Das0evt3eG1KmqePu2lwOikJiqSkQUlJL9Ftb3Tb
sEqjt3+r1b9pEP1F0uiXg+KzpKG3Ds4lJbXgJPMwLhyDkpJeoufe6LltRUM3
nqjU75I8S4KQlNSCk8zDSEmDkpJeoufe6LltRUM3npTotwqlJAhJSY04zzyJ
lDQoKekleu6NnttWNHTjych/n9B+hy8pqREnmSdx1RiUlPQSnfdG583LGLfl
AMdJSe24vjyGlDQoKeklmvbG1JN2m5na9ovXCNAPKakd15fHuOX+hOOkpJdo
2hs/K//x+dHDn5TElW76JKAXd3c/XZCSmjLQnsE5c1BS0ks07Y3pxSnp40h7
HzHhSz/wkZIaM76ewalyUFLSS0hJTTf/+pVyF7s7pE/eTEpqzfh6AClpUFLS
S0hJTTf/+pVyPZe5DJ3zWlJSa0bWAzhDDkpKegkpqenmX79SrmdH5+mfd5KS
LmBwjU5KGpSU9BI3pqT5xwvf16uJ86z89FU9UhIXs5dr6KUXkpKgSEoalJT0
EnelpDABpWblX6cKSElcwC6up6/eRkqCIilpUFLSoLZu3S0pKZy+OyXlq5WS
aMourqev3kZKgiIpaVBS0qAGTUlHEpOUxF1Su3j+FmiqTObKeO5hs6+2ZfPO
ao/h8DZS0mUMrnFJSYOSkga13Lrlfdo1t2Rh5TUpafXDouLvj8JZUhLXqxlT
dw29405vXufbC+MyuMYlJQ1KShrLFPOp+Ey4h5SUek4UpqT6t1ISrVUOKCmp
UYXAzPgalJQ0KClpUKutW32sXSx/emOuSUn5iHRXSvo8/WB7ua0DanU1XH58
EX6skX+Rb0DqQ5Lopyj55mXWvqoz3U9VnQMcYXANSkoalJQ0qCFSUn3kyUSh
MEzlV9duM/M9cMt6ucCmARVGm1Tkyb/IZJata1nO2rr2aIEiw+FV/C7pYsbX
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
Pm+L6p2y7VJSpUzwKWaiU/bU7pR01tqPV3L7KnZz6R+UlPRCeqapmu4VlxjU
8w7a521RPSnpSpnsEz5OCou1CEr1S51Y7AL9tGTmij8oKemF9Exrm64+NSdP
J1g6sbqXm+/fxj0+n7dF9U7ZdimpUj4lhW9Xxc46ILcGpfq19zNk+mnJ7CWn
lOeRkl5Iz7S2o4fzl60dn/7BiaaYz6+X/rEOzudtUb1zt11KqlRMSZ9EJDn9
gDyeksJjZlVh9O3qxWqjKmdl6glbknp9vRtXzRFS0gvpmdYO9nB4Mg/vZ+AW
qfu3cNYonrdF9U7ZdimpUtil0TgQlmxx8q+vMGxkanq0ZGXkqZmVqaemAeEm
XMm1e1BS0gvpmdbO6uEprbLY9U7ZcFt3i8oGp96GNdy8Pb86ZYuG27q8ae+2
L52ekm7uyl8d3JbVdqWmTL/2/JTeEa2bFC0T7Y2w8anNufFFauL1Tj+cuIaU
9EJ6prXTL2T5y/fP1z8+P3r4a3Fo/azzn/yT/7uHv0Zbd/te27TvwjulzE3I
zyl/8Af/voe/zNZt2qJVyT/90/+ph7/dR+bubV9qkZL+6I/+jx7+mkaSyijU
NCUV1TSs85Q0v5WS2EFKeiE909o1KWl5Rbj9HltK2r11t++1I/tuvv2ILj5E
Stq0RauSt+ejgylp97YvSUmVGxU9ey9nLadEZ4UlW5OSziIlDUpKeiE900I+
yLSoea5/GvxOu7j5t+cjKSnT/vzc2/PRvpRUWfL2fNQiJW0lJT1VMaOFV6JU
4dSVa/kiMytVSXHxZVPbdVSNsEkMQUp6J51zuugJ/Hg/11QyDX6nXdy62/OR
lJRpf37u7flISqq3rx4pif7dviulpEFJSe+kc1pokZIq13v7PfbuO+1iL9Wn
pFXP95CSarbu9r12cN9lFhwuJeU/jg4L356PTkxJl52yajr29nx0JCVVfrR1
wWXCnflXD51gXwxKSnonndNCo4hUrPB7p71adf298Vx+XipaVar+VQ1Hti66
+LQl7ywLb1qwaUrKb93WLFO/lzcdDI22bg4pX2F4madPgXDBsJ5ondEFW2zd
1iyzEi1w47Oka9R07NYsE05ZyhdulJLyG7icnip2XLElj9fPhvfTEjaRkt5J
5zTS4qoU3lytVjEtgszyprfmxnh1R52alZoY1nDK1q0KPCYlRbdux0Ofmr0c
3WtNU1J061aBKJqSopFnWgScVCaqr7PR1u2IM9HX+YnPTknRjj2YklYT59ff
dV2cklYbGG5vauJxxa6ur+f0tr1No11Ma1LSO+mcRo5fj4p1hquYdqWksEBq
8cr6921yftM+J6Wkb4Wrt5tqPjElrbaudUqqr7bF1oVppTgl+myoOLf4aKnF
1h1JSfsKdJiStv4uqaZjt0akcJEplpJueZa02sBUnS12YrGr6+s5vW1vs6Pb
6YGU9E46p519l6GaClOXuSmbYr6FV1lmNbHyVjw6cfk2c1He57M9Jc3CuPR9
sXq7r/ITt+6slPStc7WXN1XbYuv2paR8sX0pqcXW7U5Jyxff16v/bqr89K27
0aezlNRoG+vP8+FSZ5WsvwB93DMctqnP6YeU9E46p52t16DK2jIXuCn206Fo
wJkS0Sm8rw6ryiSsecqOra7Zuh3PklZLzTWHz5VG/MZddNdkIm1ltS22LpWA
pkQgmuW/VnfXs6RVgR0pabaauExPW2vesXUnOuVZ0qrAjq/bTcHvj2ap9HTX
N+5SS+1Y15GW1FcSNm+uagpCWbRAqiW7WzWcl2zm80hJ76Rzmjp4PgyvaPlr
3JS9Q54XDB83HHx+FL17P7Kxqa07mJJSEzfVfEpKyuy7TXEmujuWO/qWlBQt
sDUlnfssaVlhi607/iwpfL2v2q1bd6KDKSlaYN/jnpo0tLXyHR2S38D6iccV
u7qyktWLZeWfRQ4Ky2dmhfU/W6NdTGtS0jvpnNY29XDNbUPmHDulU1L4Iryd
7iEl5QvsSEnRcDQd/sZdi607JSXl93jTlJQvsC8lpZLOppS0et1i63anpNTE
6TXPkvIFtj5Iqv9mXX3lB1NSfYF298+n1Jy6Nk2/Rp6w2KYXj9duL9OUlPRa
+qeR6Vc1xWrqzM9N3TavZqXe5gNR5Y13o6vAtP3/lxQ+MJpiLvjGXc3W7U5J
9bm4UUqq2bqa/JKPPJkCNVXNlbTYuoMpaQoy0RR72PSwlFQ0DZ6SKrdx0yXg
LlMiGX1iKSmzbLiZqaWeqvMdTYqU9Fr6p4XVmXD5tt1lcY48X6vYEhUtE07M
Fwuntziopgb/f9h9f422bmuWie6a1O7uJCXN7QkjzDw9bHx0wfzb1fRlPS22
bmtEWllOjL6Wkmq+axe+Xc1KLXJjShrFtD0lZV6EVb2nh78H3t2tYDMp6bX0
z+mip8H5utx0vVufRzT6a3Qvens+6iclDbfvoj8muv6vh5TU7u+dKemCv5df
JVcXr+Xb8PXn1ytgZtll/Zdty+2kpEFJSa+lf06X6tLWXf34O+3b85GUtHvr
bs9HUlJrUhJ50SdQn5fdhEhJg5KSXkv/nO7GlNQPW2frbN31Tt+6ei1SUj9O
6aKXm2LJ6G1963AalJT0WvrndKku1dXAU52ekrhe64vUMnW+My+8c6sfQEp6
Lf1zuuhp0LkReDApaWjFp2Yeq51CHw5KSnot/dPC6kzoxAg8m5Q0rsrvFrqK
HedmYFBS0mvpn0Z8rR14DylpUPXXKRey49wPDEpKejNd1I6+Bd5AShpO8G9U
1Kak5W+L9s0KX4StirZ2Lhz9wkaq/mjNNWs/PdRISYOSkt5MF7Wjb4E3kJLG
Ekak+pT0ySad/KzwxSr7RFcXLRwuFU03mZpTa09Ve5yUNCgp6c10UTv6FngD
KWkg0Yi0NSW1eFFMSWH7P7HoEdZT0/hVPfU9U09KGpSU9Ga6qCndC0BXRk9J
qS1KNbWy8ct6Wly7paRBSUlvpotqLhapXlp9olW/IADcaPSUtFpq+aKm5nw9
+VC2j5Q0KCnpzXTRJ+iEzPk5NXFrvAKA29WkpNXngavXy4mpWat68oWjl+Cw
nlT7w/Wmakg1PlzLKU6vkGtISW+miz6lWDSfSOsXyU8EeBK/Sxraw65T3W6O
lLTJKslWLpKpKlN/ZT1nkZIGoos+J6WkypoBHkZKGs6Dr03dbpqUVO/0h3qZ
ALVjqYOkpIHook9dSkpNnN+mPqw4s6Fwn+nd7u7+rklJw3nqId3zgO22Yb0J
e+l4v6VqyNfcaH9JSWPRS/khGb1TqhzF+pbR9XzXcSX9kCEljaX+MG592O+u
fMSR6ARSKdNLmQNynr58sapznrIqs6xzVc9qeqqGTaSkseilTORZzUpNj05J
TYRROIBD+iQkJY1l0zHc+oDfFNmatqQ1KalSzXOf/B1XGGGiUz5BPiq+iNa5
lZQ0Fr2UikK7Z9VMh565oGfonBUpaSBbD10p6SzOG5VOSUmVL1LxJ/UiNXET
KWksL++lKRDOir5dLZupv13joRHHbZ7+WZKSRrHjuC1e8paf0qc+us8vla8k
rCFzXV5V25X8rQKzsJfCfRo9rna8COvMv0hN3ERKGoteakr3MhwHbQ29NJOS
RnEkJWVuDlN3qpmb2/yCxfXmb3H7DEpSUr1iKon2pJS0lQOyhl5qSvcyFkds
PX31JSUNYd/hWpmSKsvX35rWrKV+vT2QkjZZPSfKTFzNWpbZNCVcRWp6viVF
UtJY9FJTupexOGLr6asvKWkIB1PSJ32fLyXVkJIGdXqokZLGopea0r2MJXpz
Er2+R6dnih3/XG73bV6jGyej+0tK6t/uY7Vm7ESH2Fkp6WA9/ZCSBiUlvZxe
akr3MpDU4ZpJSTU15G9mMus9S6P6je4vKalzRyJSzacZc2ap/xgk/+FJWOHy
bVgmuqLeUklv7aGSlISOakffMpBMSvrEcs2qfHRidMHoi3akpKakpDfIfKxh
INSQkgYlJaGjmtK9jOL6lJQfHalPhqdAuJZoa8MX4bo2DVij+yMlvYOUdJCU
NCgpCR3VlO5lFPmU9AmiTepmKZweBpDiPUPqqVN0+nJW5nFV/SKVjO6PlPQa
0Y8Rdny28E56aVBSEjqqKd3LKI6npNR9VKrOzOhI1VMfgipLZraoyOj+SEkd
O+X4XI6mTERKDfN26WCs0SclDUpKQkc1pXsZxZGUlElGmZSUWek8N/MkqLJ5
9cEq05JU87Yu8jxSUp/OikjL16lxHR0+uz98qGzPWKSkQUlJ6KimdC+jKKak
ytf5WVsLpEJQquSOlLR7kBrddOv4wbkp+NRMOW7cESclDUpKQkc1pXsZRc13
ZlYPX+aUsSqTmpWqc1OZ/OvlxLzoIsd7DG53ypGZqaRYf36Mp8ZvWHn+JFCs
fNP2NrXj9MKVKq8a17hsky9bUT/2tf/0PmGmexnFEMfq9Osd1L11DtFjvNAp
R+aqkuVtRk39UyL1LGtbvV7VH9YQVpWvvJ8RuvsOjWv83Ds/Pj96+LvsOLly
RX/5l/9DD39SUod0L6MY4liVknrjd0m9aTEuVlNOSUmZiau8syMl1bfzGlJS
56Skpiu6PR8dSUmfns4kj6R7GUIPB2rNvcSRR+fn1tlDj91OSurNLSmpsvCm
lHTkWVKqVXeRkjonJTVd0e35SErqme5lCDceqC2eEF1goKa2IyV15fRPD1Jv
i2NWSlqSkjonJTVd0e35SErqme5lCFLSVgM1tR0pqR8tDshpITUrs1Txbfg6
fJGZXlP56X2yQz8tIUpKarqiTGyZLd+u5qZeLwtLScOZYu5uFCS1OD5Ttyup
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
0nz5i05czl2VDBdMVXJuSqpf3AF5xCm9ZxeQN21PSalFRklJ84aHU6KX0Z9T
fnx+9PBnOK+kksu8K6PfslvNShVYyUSk21OS3yVBkZTUuVRKCtNNOHGZjDJl
UokpXOrghpxektBZvefMQEZl5NmXkqIhq5OU9En8jltKGkgxvFz2JyVB59wL
de5ISsrkneIiTVPSfNSl7i6OrOjlzu09+4KoVcb5CjPOPD0sE87KlEmt65aU
NPdAaFXg9nwkJUVJSV9S0lJmOEffhuP9urZyoehtKv2Y9qakKftUaEfa2nec
pO4llgees82JTu89pwhCU+I7ctf/3Xtw5u+sbs9HUlJU9Kp0lxv7QUpamdK3
IplZqSk8w+3jlLxpe0qa7U5Jq8VbfONu0/mHeo16z05haZKS0jfb89zb85GU
1MgzulRKWslkn9WtcvSm5RlHBStSUud2pKRTniU1/cbdR0pqqV1Qsmv4qvqU
/CoddsInm5LmYqvX9bOkpHs9o0ulpJVwt06LlBS+XRV7xlHByr1XGYqmJ/4u
6eMbdy017UB7Bz6lnPgpPUtazk29zs+Skm70jC6VklaKKemTCESpmxkeQErq
XH1Kmn7/735XTrw4JYXb9fGvN7TRugOdNOjcjcfnMittTUnhIplZUtKNntGl
UtLKkZS0/ISEJ7FbO5eJMCupiWH5aD35Yo1S0tZZ1LimA+0mutXDwbk1JUXL
p2YtU1gxQPXQGw/zjC6VklZqUtKn7jdKPIaU1LlUSrr+T0oaxWUdaE/Rp+gt
zYkXu5rPjTelpFTh/KzKZ0zG6UHhx48pd7d0GylpJZN39s3iAUYc2q/yyJSU
v6Y4IA+6sgOdQOhH6sZ1eZSeHpQyK233LElKutczulRKWspk3uiU6KxB8zIZ
dmjn8tfii122ydes6Kmu70C7jK5M1R/8HllF/lQ5Nf5d0iQl3ecZXSolQdGV
d7+c6LeFPivczQF50C0d6ExCP25MScsCW1NSmHoysyojkpTUwjO6VEqCIvc2
g5KSSLmxA+07ehCmpGnxlZizVpF/2p6JMHP51ev6Wa9NSZ1sSyfNOEhKgiIp
qXOpTyxvcdkmX7OiB7uxD688VKDGdOq/3lB5epwO/NvdldmnvuTxre5EJ9vS
STMOkpKgyC1N51pfajddlC/b5GtW9GC39+HtDYDZ8aMxmobyHx9JSS2E/f+5
4zbmGV0qJUGRlNQ5KYkdeuhD5xY6sfs4LOagTM25p/KX27f5/Uht1HLr6jfz
un6v0KrLKkhJUHT7OCVvkpLYrp8+7KclvNPW29Gz7mB/Lv7//qN/1MPfk8bg
alumXx8t1Vdy+/X04qsqsI+U1LkXns8dkMd11YdOMvTv9M/2paQWpCTgSm5g
OvfC87kD8rgO+7DDJvFyTb/4JCW1EKakeYqUBJxOSupczfl8vtD/WPyvBldS
5ZcTOzmfOyCP67MPj3+Fabrpx9o8SbtktFrL7fnoeSlpJXpCKO5cKenL75Kg
yP1G52rCyyr+RFNPdPr06/+Jo5PzuQPyuG778OAJZ99Hx9D0sVFqjbfno5ek
pHBifndv/ewxM7fm0tnDVTVKSoIiKalz+TNwODeVkn4sHjOlElYn53MH5HGd
9+Hu5q0+MT6pOTzWxclotepMbPlava6fFb6VkpYTQ6sClRGm/vNJKQkeSUrq
3NaUVB+gJt+4e7TOu7HyzLO6yZGSKErdG1/fjHxyKb6uLFYMSk8dKam9HE1J
q9OIlPSRkqDC7ZcS8lqkpOJcKekBhujGrY1MJSboIRkt7UhJ4SKpWVtTErPP
rpQ0LT5jnLLfypCS4Enm8wZ9yp9+M3PDWZNnSW8ySjduOgXNNzmjbB1Nre5+
uzJtTEnR8qlZ0+IreW/+xl1UKhwtC2xKSalktCQlwSP1eX1htjUlraJQOCv1
CZiU9DBjdWNla8faKBrpNhktbUpJqcKpWWHIkpJmmXw0F9iUkpZBKXXF3BeU
pCToXP/XmperCS81qSeanqSkBxuuG2vORcNtFGfJ3/d2aFNK2vcsSUqKKh4k
UtKXlARFA1103qnm3Bs+9J8CleV7OJ87IE8xaDdmmj3WTTKnGHenb01J+TQ0
Hftd0t2d0Zd9Kanyc0gpCZ5k0AvQe+w797b4k5LGMm43Oim93HCPjaJ2pKT6
NCQlHbHjs8fli6jOr6pRUhIUjX4lejwpiX1G78bR288mz0hGS5nwMm/p6vWO
WcWIJCWFXnhVjZKSoOhJV6VHSn1ydYvLNvmaFT3bA7rxAZtA3sXnlitNFfll
99+myh/ZvUdMUtLfk5Kg6KlXqMf7baHPCvdxNJ7oAZ3pBPU813/wcgspqVtS
0peUBEWPv1Q9lZRE0WM68zEb8mZvSEZLZz7FP+zuzujL3XvjFzf2g5QERbeP
U/LuPYGv5Bt5ysYer4TZk/rzrGOMK9WcPYBbSElQ5PrVuanj7wZUZqhNG3u8
EmbP68/nbdEjSUbQPykJilzLOtdnStr0pKlyMx2HK3ue9jVzd2f8g97aw9fB
o+X4wVa5oOMHvqQkKHLJ6NzUWUo6/UbaEZjys1v++T//33v4u3cH9R/l6lt4
gbu2/WAl0deNXN9LPI+jCN7glgsr9aZxUtIQN3UDmaSkQfzsn3/7b//bHv6u
2VOnj9+LDzDHM8c5iuAN3Kl2rreUNLdK3mlNShrFS1JS05G+qnZeUerFXD5z
LgqXja4LdnAUwRu4v71Xsf/zKWm+K/i+Xk5ZzlotkqqhPiUtGy8l7VOz62/P
R1JSjQenpCsHeCrLRFNPqlg4K1pPmy3gRR5wFPldEhS5v71XMWhk8sty1jLp
hDkoWiyctTUlrbaiZT89UM2uL4aXpdXEHW/vTUmVR1Gx365v2PS4lHRl94ar
Lr74pDNRatZyc5ysOO4BR5GUBEXub+81xawKFCPSakpmVuXrrSmJHWp2fc1T
nvB1+KI4sZ+UlL8/X8265vRVbNgzUlKx869xekrK1wP7POAokpKg6PZr4stF
b5WXO6U+JdUEKCmpHzW7/mBKipbMF+snJYWnpujJ6oIzWE3D6lNMOOUrfBtd
7+kpKbpFF5vSYSf6ovi2ssLLxMf5a1zc29d4wHZJSVD04JPYBS64uEw9pSQu
8zk1JYXFairvISXNvfFJ35a0bl5Nw3anpNXE6OvwxcGUFG7CvVLtyfT5Z8t3
6vL1tNNVJ9/okf3wgM2RkqDoeeeusRQv31PLlLTKPjXPkhwwZ6nZ9TX5ZZb6
Hl04t6bm1Fru8smmpNsbVh+RwsJTKQRV1l9MScs205p+Dj2pTx6wLVISFLlo
3iu84woLbI1CmVmpeJVaS+obd46Z42p2/aZnSZUTp6GeJa0KpBa8vWHHU1Km
kiMpKX+M0YLeznhM5zxgK6QkKHrMKWtQxf7P5JdU9pmCp0X1T5oqU1JNy8mr
2fXtUtKmoHRLSkoVqJl4fcM2fd1uVf5bbc2C9SlJMrqRbs97Rv88YCukJChy
Je1cPsLM90KZXw9lyocF6lPS3Lzr++QlWqek+qB0ZUraVOaa01dNnq2MMLN2
z5Kc0u+l82vopR5ISVDkktq5+hTT+i91nDiEGilGmPmWODVxeVseXSRaw10p
qdLqQ4C7m/N3alJMNBnlnzHtTkl398d76fx6+up2UhIUuap2rv+UNLfzsj55
icoHPRf82bl5Z6WkVCDalJI+BuN99Hw9fXU7KQmKpKTOTT2paeo13fIGk5Q0
iKniH+j+Ct9mZqWmFFPSxy3oTTLdvjo9Lk+qW8+0YbWbFtx3bCzrP+XoGv0Q
Hb39HykJKrizHdRvC11V6HA6i5Q0isoIc8Hf6j78xj55oZrPkVJvj+y4y3b6
uZWPfnyO3v6PlAQVpKRBdZuSPg6qk4SfMN/o7s7o2tRlSvo84kZuIMXeXg2l
1Osj6226x8+tfPSDc/T2f6QkqOAWqHMX3wznbW15oz6Brtw9Ln8Rbdst3fI2
xX6efv3V2BRLN6lKlgWmdBaOLr48NpaLRw+eVW1h5WFV4SKVR93QR+bQjf+S
kqDINbRzP/fOX//1f9fD347jxNEFPTAML1CZkj5BXPqUwkU0j0SXjcbk/NrD
/JUpsHWRvKEPy6Eb/yUlQZH72M4NnZLmTTi3T4CtDMPWDqakfCWZK/Vqevg2
WqA+BFWWrNmKfMvHMnTjv6QkKJKSOveAlPRxmJEW/SR8+Tb/UTn19F5T9Snp
k/2N0rJA+NSmuN5osVTYySS1+nCUqTNv6ANy6MYDldx4dO4ZKWnellP6hIcp
fqiev5+knt5rZ1NK+mw8qlfJpbLaTzrRRHNZtMCOZ0mVhj4ah248UElKulex
/5+Ukmq2lxfakZI8WtpNpzVSPJNnnt3UXAiWhcNqU5Wspi/f5l9HK4+KLlLR
YWMfikM3HqjkTuNeq0tMtEA+uXx9Xy+nLGdFyy8nXpaSllsNX9P2lJR6Sw2d
1sJYvZoZU5fVOVaPrQzd+C+/S4IiKeleU+xTwVWBTGxZxZ9o6olOX068PiV9
HHgsrD6XnifmC3wecaNyF113urG6VEo6aOjGf0lJUORm9V7Rzl/ulFSECaen
UlJxyi0pKbP5vE1qFBQLOH6O0Hvn6q0/iwMk+snDKSutrLO3HnsbKQmKXnKn
Mf0qNT10QclMaz9bUlJlJuoqJWU6gfdIjYJ8geIsivTeiTrpzMqB04POm/d4
UhIUPf4etfMNXLUtbO3jU1K0H3gVKelGOvAsnfSklEQlKQmKOg8RRwyxafMD
o8xzpdNTUv7tLSnps31/FZ/ZXaldtzxetA+XE4sFOEg3nqJ1N65GRDj9E4yL
uXy0hlVtqXrajbWhD7yhG/8lJUHRU+80RtmoYv9PZ/8uKT/3xpQ0b284Jbrq
nxP/3Z/9WQ9/oxxskOIYPu6CPswnoLAZy6STKlZZz+nb0q7aawzd+C8pCYoe
mZKetEWZCJPKPlP6UVE0SXWVkj7ZT0pXxW7PR1ISj/HIa8GVrklJ4evo86Ow
TPRFeKbNx6VzDX28Dd34LykJilwZO5ePMPN1LZxSnJWq4faUNG/459ev1YUF
bs9HUhIP42De7ZaUVPkMKAxH9YtLSVFDN/5LSoIiKalzNfnlmr/rj5Mw8a3m
3p6PpCSex/G8zzUpKfUwqDIl7ZjYaLtGP8xGb/9HSoIKUlLnpKR9KWleZPX6
+7ammJTEazmk92ndb6snQfPE5Rly9SJcJBqIwnpab9Hox9jo7f9ISVDhYSnp
SdvyFSaFG/Ww4csCxfBSfJ2fJSXxWo7qHVp32vU7pd0aRz/ARm//R0qCCtff
/Tb1pG3J+22hzwqPqAlr+1LS9PvHRlIS5Dmwt3pYSmq6uhGPrh4+PzyRlARF
Q4/x0JO2Je/ZKWlJSoK7OLa3avrw5bLrdesVDXpcRZs96LZ8pCSoICUN6j0p
aWU+YmsSTSYThRP3RSQpiWdzeG+lx/KG7p9V44feFikJiqSkQb02Jc12p6SZ
lAQ1HOGbPOyqeq7Re0ZKgld52Pn8SduSJyXtSEmrRTJfw5OSYMlBvpUeCz2j
T5ZbMfQWSUlQJCUxqMpQk/nZ0fFfJL0tJYW/EXuVu7v/ZnpgK8fPJ/t/Bh/U
vCGP2SIg5Unnrk/fZ63llWL+b/4yOgUP9zP7Kzr3mg655SiaNqakuX9Sb6Wk
lIfd5OymH7Zuezxt3qRRnwzaG5e5u9fPN0lJ8BoPO491uy3Tr8/oU6fZVLFw
Vr7+aA1NXd/z04Fcc+5ft0fdKZ69dfu8uU82bfvPwj8+P3r4e/Mu43QPu3EC
Uh422Pvclkyoqcw7mdf51UlJUtJuDzs5nOvNnZPa9ujZ7PZ8JCVxumcMf79L
gqJnDPZZn9uSadVdKWn1dYjo208szS1nFR9gpQqfQkpq7anbdZaX90/+3DVP
uT0fSUm08IAjSkqCooelpD71lpJW2ScfdqKJKZqewrfRVZxl6snpW3e7R27U
6Z7aS5XbtSoWLjVJSVzixpP/vY50mpQERccHGkWZHg5nTemMU3NuDBfZVGZK
xJzoi3BitIUOsOHYZfUe2Vf1G5Uf6VMsJc2niO/rcPo8a35dfBudIiU93ilh
YWhHekBKgqKXn2GukYlCm1JSuGwxj1yfkoqro3/n7rLpV6uJO97WNPiyM9sj
D+/VGJ9Hd/GMFM4K08oq10SnZyZGX6fmSkkPZp8u7egNKQmKHpaSut2WVJbJ
BJbwbXRKOGtTzkqVz79IzS1OZwin76/KY6w4sab+zMQWx+GTju0p5pMY8qsF
o7NWgSUTmlLRJjNXSnqth923nGVrt0hJUPSws03P27K861hNCWeF5fN7KlpP
tNpobZkFoy8+wY1T6oYqnEjnWuyp1cGWWVE4t9ieKX2LXpxy3CMP7PBclJq1
nB7t8HxKqslQmaWmX2PUtw2+cfd49mbKpp6RkqDoYbevT9qWbunkZ7sxJYXF
ahqTT0mrqH761j1yOOxISdFZ+ZQ075Hod/DyqafmC3tS0iPZlXn1/SMlQZGU
NKjfFi6u8D2d/E6NUlIYUsJb8dXcypakYleYnhodus8bEZldc2JKqvyiXc0T
KCnpJezHGpW9JCVBkZQ0qLtSUqMP5OlH62dJlRM3PUuKHpbRKfVtrvf44bB6
KpcvtppyPCXVfOlOSnoJ+7GGlARnedgd75O2Je/GZ0k8W1cpKSy2CkSZHORZ
0lm2PtRbTsnHomgOyk+Ukt7MfqwhJcFZpKRBSUk00ltKyjepmJJSdZ7o8aed
E1PS/Huir8zEzNtM4UyYatAxXGo1uleflizll920on011K/o+Nkp3GQpCc4i
JQ1KSqKR0wdR9NZlOTG8vcm/TdUcrfOzOMs1Ot09+7STufMMS4ZTMj8pOvGv
uKJn76OXyGeB43GjuMYWiqvYMfSkJDiLlDQoKYlG3jOIzqLHvqQkmpKS6svU
LCUlQZGUNCgpiUbeM4jOosdSpp7c3RkcNW1JScudHn29KpZ6kZkbNm81a1lm
dRCmmhF9HZ1VbEy8ExekJCg6cvmovjq93bm77EtKopHKI3bfgb0cEY2GRnRd
rVd0wVrg5VYDLfU2epKZgvySKhN9EV02HPjLWcsy9c2ob1W0klTnRElJULTj
RqLpzf8jtegxKYlGLggvl9UvJcFj1Kek1MTMrPyL4tx8mdWnpsVqUyGuWElm
SkhKgqKtd+/uB444sfekJBqRko6sEWhk6JSUavmOZ0mZSjJTgB3qU5LnR6c4
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
                   "], {{
                   0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 4->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
Nm3gEVLSY0hJp0ttyHL6waC0afoRc51NP6t5zK7/kpKgSEoalJRUX5uU1GFK
2rSNfZKSriQlne6RKam3RXomJUGRlDQoKWlThVJShylp02bu41nSQPIDc2tK
Wo33F6ak4olua0paVRg9qS7LLF+sXkcLh29TjYwWDkumGpxqRn6lmemDkpKg
qHgipU9S0tY6wwv6wQpPadjx+qeRU9KmLe3NVJGS5uNt9fr7tqbY21JS5o53
R5yJvn5PSvpkL/GZ6eFemH7NPqu3mReZAmGZVbFoZsm0KlqsvhmZlabWMjQp
CYqkpEFJSftq3pGSpmrnNrW+ZCqzLIXTw8LRMqvy0cWlpHyEKb7Oz3pnSlqN
qUlK2mjVe+E5KrUhUyJHLCsJy+RfLNc+BfEknJJqRrHwqmTY4Mp6UhWGE8cl
JUFReOZkCFLS7sqHOObrWxgNLHNsKb5OTdy07JGUtGlju3IkJU1/eGwkJc2i
KWl5l3tWSvrWuXpbX/8ovZ0JDpkCn0RSiKaMmqCRDyDtUlKqGZX1SEnAR0oa
lpR0pP7+D/ti85b3kGelpGL5zLqOpKSa7e1QVynpDXakpHDZ+fX3xert1mqj
lkfIvSWjB+1cLFrgUxcfwmWLJcMX0dry5YuFU7NqmpGvMDVxXFISFK3Oq4xC
ShpiLbtlbmDCe6ETnyVNsUC0mpVZ3dvUp5h8XEoV8yxpOXf3s6TVsnPl+76J
N0pvT0G4CKdElwp7fvpD0AinR6es9mD07aqGVW3R8qlVhy0J25Nqf7TZ0ZWm
emxcUhIURU8F9E9KytfQj1M6IVPblE1JS5XfuJuCTLRavMWzpOhWd246lpJm
UtJXfuBMJ6WkKfEs6akpKX/qOFj58XrG8rAtlZKg6MiNHDeSkvI1/MVf/Jse
/g7eh9RErXxKyuSgTSmp8lnS7o1dbs7xSq6xOyWtFpzSX8N7YUrKzN2dkqKJ
aTrwjbsru2W3mlPHkcpPqWcsD9tSKQmKpKRBSUn5Gm7PR0dSUk04WhY+NyWF
D4/yC0pJ9UEpn5L2RaTHpKS8rSlpHkSrKX8U/F5pVewxKano4IZsOk3tq/xI
gRYes+u/pCQokpIGJSXla7g9H+1ISau7jstS0hR7VBRNSfmgdNaZZJQz0r6U
NO/l1FspKWprSmr395je7jxlFAtvPVUe95hd/yUlQZGUNCgpKV/D7fmoPiWl
PpI9mJKmQGb6qswqUkUXb5eS6rf9XvsSTYu/IbrrICnpdFLSVo/Z9V9SEhRJ
SYOSkvI1FMPLUmr6PHdVMlxwR0qaKznYD9HAcsvfuWeS/s9LUtKVpKTTnT5g
5xNa9PXqjBeeAMMCn19vUcLy0aWii5yysY/Z9UCl/H0a3ZKS8jXU5Jfwdc2L
1eutKakYjrb2w1NTUn0P3CW8/bvR3Z3R3N0d/Iu7O+McJ27I9Gu0WVVeMzdV
JrNs/Uqnk4LSY3Y9UOlJ5/xXkZLyNexLSTVTaioPU9KO+6vKwm1uA3fas7cO
9wCww4njK6xqqotLn0UaWlWymhKeZzIvinN3cDqCF2pxb8MFpKR8DY1SUk3N
q6V2D7FrBmZ0Lf2cFjppBjzSWeMrdRr5VKek+fWqTCbjSEkH+V0SFPVzO8Qm
UlK+hvr88lWTkrZGpHmpu/rh4Io6OTn00AZ4pNNTUvQh0aZiqRc1j5CkpE2k
JCjq5EaIraSkfA2bniUV3x55lvTZO8puT0nz3NtPEbc3AB7pxJEVPVGspqwe
FVW+DV+kClTWs3sDdy/bJykJinq4BWIHKSlfQ6OUtDUorT7b3DTcOklJc5l7
TxROU9BC05H1mGH7mA1ZkpKg6PabH/aRkvI1tEtJm4JSdFsq49KVA7NyXfee
LpypoIVGI+sxA/YxG7IiJUGRlDQoKSlfQzG8rETnpqZEl6pPSct2Zgp0mJLm
wrecNJypoIXTR/ST7isesyEhKQmKnnQ2exUpKV/Dpl8Ptfur/zJbWLLblDQv
cv2pw8kKGjG4Qs/uEykJiqSkQUlJ+Rpuz0f1KWnZ7GX5zlPSvODFJxDnK2hk
9YT97ubc4z09ICVB0RtOBY8kJeVruD0f7UhJc+NvuUYfWd3FrXXKggtMr3R3
r19HSoKit50WHkNKytfQj4NbcbArNq3ueA2XNfjKngF4HikJii6+E+MsUtLj
TYv/x8cFfXLWKsZqLcA7SUlQJCUNSkp6vFU/XBCXTqxcUALomZQERVLSoKSk
x0v1Q7sxe261F5xbHCoA+0hJUCQlDUpKerx8P7R4tNSi5wd6/gXwHlISFElJ
g5KSHq+yH84dwu2eUrXbrQ4YgK2kJCiSkgYlJT3epn4469FS6+c+Q3xXEODx
pCQokpIGJSU93r5+OBiXrvlXF05fi2MGYBMpCYqkpEFJSY93sB92D+1r+v/e
H1U5xgCAPClpUFLS453SDzseLV3Z/3f9qMoxBgDkSUmDkpIe765/l/v6/j/x
LLRjG+e1OxkCADM3BoOSkh6v3b/Lna/5rv4/61yUqWSKWa3a4Qe8gd8lQZGU
NCgp6fGa9kN+4N+4C045IxVrWBVYPVo6uHaA/klJUCQlDUpKeoPWXZF6tHT7
Ljh4XpKSAPKkJCiSkgYlJb3BZV2xikud7IIjZ6dN3yrscNsBmpKSoEhKGpSU
9AbXd8XypzoXrzqlUVAKSzoZAu8hJUGRG4NBSUlvcO8/pNDPjtjdmMw362qm
AzyVlARFXd0LUU9KeoN7/xWFT2fnh32NWX6VTkoC+JKSoKiruyDqSUlvcG9X
rPJFJ/tla0uWcS+6YFdbB3ANKQmK3B4MSkp6g05S0nJKJ3tnU0umXzVtGMAQ
pCQoctswKCnpDXpLSfP0Ts4bNc2YAte0DaBnUhIUuW0YlJT0Brd3Rb4BneSO
4lfppCSAFSkJitw2DEpKeoPbu6KyAT2cRqJtEJQAoqSkGpnLR/Tt6vricjM6
9wyDkpLe4Pau2NSAHjJIZVa6pW0A/ZCSKmWCTzETudyMzj3DoKSkN7i9K/Y1
4PazSjEr3dIqgH5ISZUy2Sd8nBQWc8UZmnuGQUlJb9BDV+xuw+2RJJ+VbmkS
cLp5RBvam0hJlfIpKXy7KuaYHJqzyqCkpDfooSuOt+HeYJLKSrc0BmhhOcyL
ozv8Cu6N2vdNkpRUKdxNU3CwTbFAFBZjOLePU/aRkt6gh644sQ3HzzZX38Fk
ndUtUOPf/MVf9PN3d2esLcdjcWz+LPBP/+n/0sPfvacRKalSuJum6pTkejE6
u29QUtIbdNIV5zaj5qqRmvtz+o/Pjx7+Otk1vMfPbDL9HAEd/PWQklanESmJ
dmpS0qfuN0oMR0oalJT0Bp10RaNmZE4+qVlSEq8lJWWkElOq8O35SEoaSCbv
7JvFQKSkQUlJb9BJVzRtRvhoKfMtBSmJ15KSMubvO9UMTCmJelMgnLWcEp1V
8w0K+mTHDUpKeoN+uuKClsznotQl6SMlZdXfImZy6EAetr3F5klJGeGJItOZ
qZT0XWr19jslvFVeFgsrSRXuKiX5XRIUdX7hIEVKeoN+uuKylkTvMZZzb89H
naekfBwI+7PDDan0sO0tbk59Spr/jYXv61SBaPknpaRUZ+ZjS+ptzevl2/CF
lNSznk8O3MiBMSgp6Q366Yp7U9K89lVKWpVZTYxGm3lWtECm/HApKTy3p+4Y
O9yWGg/b3uLmVKaYMP4Ui6XC1CgpKeyufGdO2dgy1aWh5cTMrJ6/cSclLWWG
3qYyPIx9PSgp6Q266oprGhO9vZlPU1MQWJZTpkVQiuaaVfwpRqTo67FS0vIM
n7n0X9jM0zxse4ubUxNkwjKZlLTKU+OmpFDxNJJ/ljTFHgNlJkYrzKxFSupQ
ZugtC6Te8lR29KCkpDfoqivOakymnsy9zWxfSqqZUpmYoo+x+pfp+XlusYbK
3XRvybnwlN7e4Xz2pqR8LJqnbE1Jd/fHUcVv3E1B/IkuPqW/VpdZi5TUoczR
8kncKkcn8jD28qCkpDfoqivOasyReqbzUlLq+3XR8tEKT+mNE6Wu78sCqQUv
aeDJHra9xc05kpLCNLR68YZnScu5+1JS9FnSbGtKijaSbqWOtKsOau6R2fv0
TEp6g9664pT2TNP6ucCn+kQ0ZZ/pHH9yNCV+shSdcrwrzlW8pkenj3sJeNj2
FjfnlGdJ70xJ4dxiSppTTCb1rKbk33qW1LkgFf1y5KT2VJ8nE07U7SWDPCnp
DXrriiPtSV2DlqegYv1TXfypLFaZklKr2N0VjdSczMNLf4cbUulh21ts25Hf
JWWeJYVfxntMSsrMrUlJqWdJUtIjFZN1aqn2TeNOPV81yJCS3qC3rjilPatK
aj6vWxY4KyXNgegrlZJS8aq3XVMvfzPwPI/Z3n3/xl3xRfEh1IgpKS+VX+aD
JPotu3DWckr+rZTUv2KyjkanoU8p1LCXByUlvUFvXTFoSqrPPqli0fUe7wqo
t+//lxROXP5JSff+SUkDWd0tu3l+CTt6UFLSG3TYFcebFKakecrWlDR/YBud
GM6Nlk+lpFQlUhK32BRkmv5JSVLSO60uCp8ur9GcS0oalJT0Bh12xelNmq81
NTXnA87xv/r6O9w1VBr0qiclnUVK+pKSjhvxTMImg14vkJJeorfeaJSS6gtL
SRwRfXA5xN6Uks4SPm6+0Y39ICWd4t6dSGu3j1P2kZJeosPeOLdJm2q77VYm
5sRO4HrLPTjE3oz+sOiuv7s7gxNISacY4uzBbi73g5KSXqLD3jixSXcljg57
tbVlV4t7n1+/6vnyruCdpKSzOHU8mEvDoKSkl+iwNzps0lYP2IQdUk9PXtgb
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
Zs87ep+3RfVO2XYpqVIm+BQz0Sl7andKOmvtxyu5fRW7ufQPSkp6IT3TVE33
iksM6nkH7fO2qJ6UdKVM9gkfJ4XFWgSl+qVOLHaBfloyc8UflJT0QnqmtU1X
n5qTpxMsnVjdy833b+Men8/bonqnbLuUVCmfksK3q2JnHZBbg1L92vsZMv20
ZPaSU8rzSEkvpGda29HD+cvWjk//4ERTzOfXS/9YB+fztqjeudsuJVUqpqRP
IpKcfkAeT0nhMbOqMPp29WK1UZWzMvWELUm9vt6Nq+YIKemF9ExrB3s4PJmH
9zNwi9T9WzhrFM/bonqnbLuUVCns0mgcCEu2OPnXVxg2MjU9WrIy8tTMytRT
04BwE67k2j0oKemF9ExrZ/XwlFZZ7HqnbLitu0Vlg1Nvwxpu3p5fnbJFw21d
3rR325dOT0k3d+WvDm7LartSU6Zfe35K74jWTYqWifZG2PjU5tz4IjXxeqcf
TlxDSnohPdPa6Rey/OX75+sfnx89/LU4tKYH/X+Ho1t3+17btO/CO6XMTcjP
Kb/99lc9/GW2btMWrUr+i3/x3/fwt/vI3L3tSy1S0v/wx3/cw1/TSFIZhZqm
pKKahnWekua3UhI7SEkvpGdauyYlLa8It99jS0m7t+72vXZk3823H9HFh0hJ
m7ZoVfL2fHQwJe3e9iUpqXKjomfv5azllOissGRrUtJZpKRBSUkvpGdayAeZ
FjXP9U+D32kXN//2fCQlZdqfn3t7PtqXkipL3p6PWqSkraSkpypmtPBKlCqc
unItX2RmpSopLr5saruOqhE2iSFISe+kc04XPYEf7+eaSqbB77SLW3d7PpKS
Mu3Pz709H0lJ9fbVIyXRv9t3pZQ0KCnpnXROCy1SUuV6b7/H3n2nXeyl+pS0
6vkeUlLN1t2+1w7uu8yCw6Wk/MfRYeHb89GJKemyU1ZNx96ej46kpMqPti64
TLgz/+qhE+yLQUlJ76RzWmgUkYoVfu+0V6uuvzeey89LRatK1b+q4cjWRRef
tuSdZeFNCzZNSfmt25pl6vfypoOh0dbNIeUrDC/z9CkQLhjWE60zumCLrdua
ZVaiBW58lnSNmo7dmmXCKUv5wo1SUn4Dl9NTxY4rtuTx+tnwflrCJlLSO+mc
RlpclcKbq9UqpkWQWd701twYr+6oU7NSE8MaTtm6VYHHpKTo1u146FOzl6N7
rWlKim7dKhBFU1I08kyLgJPKRPV1Ntq6HXEm+jo/8dkpKdqxB1PSauL8+ruu
i1PSagPD7U1NPK7Y1fX1nN62t2m0i2lNSnonndPI8etRsc5wFdOulBQWSC1e
Wf++Tc5v2ueklPStcPV2U80npqTV1rVOSfXVtti6MK0Up0SfDRXnFh8ttdi6
IylpX4EOU9LW3yXVdOzWiBQuMsVS0i3PklYbmKqzxU4sdnV9Pae37W12dDs9
kJLeSee0s+8yVFNh6jI3ZVPMt/Aqy6wmVt6KRycu32Yuyvt8tqekWRiXvi9W
b/dVfuLWnZWSvnWu9vKmalts3b6UlC+2LyW12LrdKWn54vt69d9NlZ++dTf6
dJaSGm1j/Xk+XOqskvUXoI97hsM29Tn9kJLeSee0s/UaVFlb5gI3xX46FA04
UyI6hffVYVWZhDVP2bHVNVu341nSaqm55vC50ojfuIvumkykray2xdalEtCU
CESz/Nfq7nqWtCqwIyXNVhOX6WlrzTu27kSnPEtaFdjxdbsp+P3RLJWe7vrG
XWqpHes60pL6SsLmzVVNQSiLFki1ZHerhvOSzXweKemddE5TB8+H4RUtf42b
snfI84Lh44aDz4+id+9HNja1dQdTUmripppPSUmZfbcpzkR3x3JH35KSogW2
pqRznyUtK2yxdcefJYWv91W7detOdDAlRQvse9xTk4a2Vr6jQ/IbWD/xuGJX
V1ayerGs/LPIQWH5zKyw/mdrtItpTUp6J53T2qYerrltyJxjp3RKCl+Et9M9
pKR8gR0pKRqOpsPfuGuxdaekpPweb5qS8gX2paRU0tmUklavW2zd7pSUmji9
5llSvsDWB0n136yrr/xgSqov0O7++ZSaU9em6dfIExbb9OLx2u1lmpKSXkv/
NDL9qqZYTZ35uanb5tWs1Nt8IKq88W50FZi2//+SwgdGU8wF37ir2brdKak+
FzdKSTVbV5Nf8pEnU6CmqrmSFlt3MCVNQSaaYg+bHpaSiqbBU1LlNm66BNxl
SiSjTywlZZYNNzO11FN1vqNJkZJeS/+0sDoTLt+2uyzOkedrFVuiomXCifli
4fQWB9XU4P8Pu++v0dZtzTLRXZPa3Z2kpLk9YYSZp4eNjy6Yf7uavqynxdZt
jUgry4nR11JSzXftwrerWalFbkxJo5i2p6TMi7Cq9/Tw98C7uxVsJiW9lv45
XfQ0OF+Xm6536/OIRn+N7kVvz0f9pKTh9l30x0TX//WQktr9vTMlXfD38qvk
6uK1fBu+/vx6Bcwsu6z/sm25nZQ0KCnptfTP6VJd2rqrH3+nfXs+kpJ2b93t
+UhKak1KIi/6BOrzspsQKWlQUtJr6Z/T3ZiS+mHrbJ2tu97pW1evRUrqxyld
9HJTLBm9rW8dToOSkl5L/5wu1aW6Gniq01MS12t9kVqmznfmhXdu9QNISa+l
f04XPQ06NwIPJiUNrfjUzGO1U+jDQUlJr6V/WlidCZ0YgWeTksZV+d1CV7Hj
3AwMSkp6Lf3TiK+1A+8hJQ2q/jrlQnac+4FBSUlvpova0bfAG0hJwwn+jYra
lLT8bdG+WeGLsFXR1s6Fo1/YSNUfrblm7aeHGilpUFLSm+midvQt8AZS0ljC
iFSfkj7ZpJOfFb5YZZ/o6qKFw6Wi6SZTc2rtqWqPk5IGJSW9mS5qR98CbyAl
DSQakbampBYviikpbP8nFj3Cemoav6qnvmfqSUmDkpLeTBc1pXsB6MroKSm1
RammVjZ+WU+La7eUNCgp6c10Uc3FItVLq0+06hcEgBuNnpJWSy1f1NScrycf
yvaRkgYlJb2ZLvoEnZA5P6cmbo1XAHC7mpS0+jxw9Xo5MTVrVU++cPQSHNaT
an+43lQNqcaHaznF6RVyDSnpzXTRpxSL5hNp/SL5iQBP4ndJQ3vYdarbzZGS
Nlkl2cpFMlVl6q+s5yxS0kB00eeklFRZM8DDSEnDefC1qdtNk5Lqnf5QLxOg
dix1kJQ0EF30qUtJqYnz29SHFWc2FO4zvdvd3d81KWk4Tz2kex6w3TasN2Ev
He+3VA35mhvtLylpLHopPySjd0qVo1jfMrqe7zqupB8ypKSx1B/GrQ/73ZWP
OBKdQCpleilzQM7Tly9Wdc5TVmWWda7qWU1P1bCJlDQWvZSJPKtZqenRKamJ
MAoHcEifhKSksWw6hlsf8JsiW9OWtCYlVap57pO/4wojTHTKJ8hHxRfROreS
ksail1JRaPesmunQMxf0DJ2zIiUNZOuhKyWdxXmj0ikpqfJFKv6kXqQmbiIl
jeXlvTQFwlnRt6tlM/W3azw04rjN0z9LUtIodhy3xUve8lP61Ef3+aXylYQ1
ZK7Lq2q7kr9VYBb2UrhPo8fVjhdhnfkXqYmbSElj0UtN6V6G46CtoZdmUtIo
jqSkzM1h6k41c3ObX7C43vwtbp9BSUqqV0wl0Z6UkrZyQNbQS03pXsbiiK2n
r76kpCHsO1wrU1Jl+fpb05q11K+3B1LSJqvnRJmJq1nLMpumhKtITc+3pEhK
Goteakr3MhZHbD199SUlDeFgSvqk7/OlpBpS0qBODzVS0lj0UlO6l7FEb06i
1/fo9Eyx45/L7b7Na3TjZHR/SUn9232s1oyd6BA7KyUdrKcfUtKgpKSX00tN
6V4GkjpcMymppob8zUxmvWdpVL/R/SUlde5IRKr5NGPOLPUfg+Q/PAkrXL4N
y0RX1Fsq6a09VJKS0FHt6FsGkklJn1iuWZWPTowuGH3RjpTUlJT0BpmPNQyE
GlLSoKQkdFRTupdRXJ+S8qMj9cnwFAjXEm1t+CJc16YBa3R/pKR3kJIOkpIG
JSWho5rSvYwin5I+QbRJ3SyF08MAUrxnSD11ik5fzso8rqpfpJLR/ZGSXiP6
McKOzxbeSS8NSkpCRzWlexnF8ZSUuo9K1ZkZHal66kNQZcnMFhUZ3R8pqWOn
HJ/L0ZSJSKlh3i4djDX6pKRBSUnoqKZ0L6M4kpIyySiTkjIrnedmngRVNq8+
WGVakmre1kWeR0rq01kRafk6Na6jw2f3hw+V7RmLlDQoKQkd1ZTuZRTFlFT5
Oj9ra4FUCEqV3JGSdg9So5tuHT84NwWfminHjTvipKRBSUnoqKZ0L6Oo+c7M
6uHLnDJWZVKzUnVuKpN/vZyYF13keI/B7U45MjOVFOvPj/HU+A0rz58EipVv
2t6mdpxeuFLlVeMal23yZSvqx772n94nzHQvoxjiWJ1+vYO6t84heowXOuXI
XFWyvM2oqX9KpJ5lbavXq/rDGsKq8pX3M0J336FxjZ9758fnRw9/lx0nV67o
n/yT/7WHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzEVd7ZkZLq23kNKalz
UlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHHbicl9eaWlFRZeFNK
OvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQU9uRkrpy+qcHqbfF
MSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH5LSQmpVZqvg2fB2+
yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4UwxdzcKklocn6nbldRd
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
0nz5i05czl2VDBdMVXJuSqpf3AF5xCm9ZxeQN21PSalFRklJ84aHU6KX0Z9T
fnx+9PBnOK+kksu8K6PfslvNShVYyUSk21OS3yVBkZTUuVRKCtNNOHGZjDJl
UokpXOrghpxektBZvefMQEZl5NmXkqIhq5OU9En8jltKGkgxvFz2JyVB59wL
de5ISsrkneIiTVPSfNSl7i6OrOjlzu09+4KoVcb5CjPOPD0sE87KlEmt65aU
NPdAaFXg9nwkJUVJSV9S0lJmOEffhuP9urZyoehtKv2Y9qakKftUaEfa2nec
pO4llgees82JTu89pwhCU+I7ctf/3Xtw5u+sbs9HUlJU9Kp0lxv7QUpamdK3
IplZqSk8w+3jlLxpe0qa7U5Jq8VbfONu0/mHeo16z05haZKS0jfb89zb85GU
1MgzulRKWslkn9WtcvSm5RlHBStSUud2pKRTniU1/cbdR0pqqV1Qsmv4qvqU
/CoddsInm5LmYqvX9bOkpHs9o0ulpJVwt06LlBS+XRV7xlHByr1XGYqmJ/4u
6eMbdy017UB7Bz6lnPgpPUtazk29zs+Skm70jC6VklaKKemTCESpmxkeQErq
XH1Kmv7w735XTrw4JYXb9fGvN7TRugOdNOjcjcfnMittTUnhIplZUtKNntGl
UtLKkZS0/ISEJ7FbO5eJMCupiWH5aD35Yo1S0tZZ1LimA+0mutXDwbk1JUXL
p2YtU1gxQPXQGw/zjC6VklZqUtKn7jdKPIaU1LlUSrr+T0oaxWUdaE/Rp+gt
zYkXu5rPjTelpFTh/KzKZ0zG6UHhx48pd7d0GylpJZN39s3iAUYc2q/yyJSU
v6Y4IA+6sgOdQOhH6sZ1eZSeHpQyK233LElKutczulRKWspk3uiU6KxB8zIZ
dmjn8tfii122ydes6Kmu70C7jK5M1R/8HllF/lQ5Nf5d0iQl3ecZXSolQdGV
d7+c6PeFPivczQF50C0d6ExCP25MScsCW1NSmHoysyojkpTUwjO6VEqCIvc2
g5KSSLmxA+07ehCmpGnxlZizVpF/2p6JMHP51ev6Wa9NSZ1sSyfNOEhKgiIp
qXOpTyxvcdkmX7OiB7uxD688VKDGdOq/3lB5epwO/NvdldmnvuTxre5EJ9vS
STMOkpKgyC1N51pfajddlC/b5GtW9GC39+HtDYDZ8aMxmobyHx9JSS2E/f+5
4zbmGV0qJUGRlNQ5KYkdeuhD5xY6sfs4LOagTM25p/KX27f5/Uht1HLr6jfz
un6v0KrLKkhJUHT7OCVvkpLYrp8+7KclvNPW29Gz7mB/Lv7bb3/Vw9+TxuBq
W6ZfHy3VV3L79fTiqyqwj5TUuReezx2Qx3XVh04y9O/0z/alpBakJOBKbmA6
98LzuQPyuA77sMMm8XJNv/gkJbUQpqR5ipQEnE5K6lzN+Xy+0P9Y/K8GV1Ll
lxM7OZ87II/rsw+Pf4VpuunH2jxJu2S0Wsvt+eh5KWklekIo7lwp6cvvkqDI
/UbnasLLKv5EU090+vTr/4mjk/O5A/K4bvvw4Aln30fH0PSxUWqNt+ejl6Sk
cGJ+d2/97DEzt+bS2cNVNUpKgiIpqXP5M3A4N5WSfiweM6USVifncwfkcZ33
4e7mrT4xPqk5PNbFyWi16kxs+Vq9rp8VvpWSlhNDqwKVEab+80kpCR5JSurc
1pRUH6Am37h7tM67sfLMs7rJkZIoSt0bX9+MfHIpvq4sVgxKTx0pqb0cTUmr
04iU9JGSoMLtlxLyWqSk4lwp6QGG6MatjUwlJughGS3tSEnhIqlZW1MSs8+u
lDQtPmOcst/KkJLgSebzBn3Kn34zc8NZk2dJbzJKN246Bc03OaNsHU2t7n67
Mm1MSdHyqVnT4it5b/7GXVQqHC0LbEpJqWS0JCXBI/V5fWG2NSWtolA4K/UJ
mJT0MGN1Y2Vrx9ooGuk2GS1tSkmpwqlZYciSkmaZfDQX2JSSlkEpdcXcF5Sk
JOhc/9eal6sJLzWpJ5qepKQHG64ba85Fw20UZ8nf93ZoU0ra9yxJSooqHiRS
0peUBEUDXXTeqebcGz70nwKV5Xs4nzsgTzFoN2aaPdZNMqcYd6dvTUn5NDQd
+13S3Z3Rl30pqfJzSCkJnmTQC9B77Dv3tviTksYybjc6Kb3ccI+NonakpPo0
JCUdseOzx+WLqM6vqlFSEhSNfiV6PCmJfUbvxtHbzybPSEZLmfAyb+nq9Y5Z
xYgkJYVeeFWNkpKg6ElXpUdKfXJ1i8s2+ZoVPdsDuvEBm0DexeeWK00V+WX3
36bKH9m9R0xS0t+QkqDoqVeox/t9oc8K93E0nugBnekE9TzXf/ByCympW1LS
l5QERY+/VD2VlETRYzrzMRvyZm9IRktnPsU/7O7O6Mvde+MXN/aDlARFt49T
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
8tEaVrWl6mk31oY+8IZu/JeUBEVPvdMYZaOK/T+d/buk/NwbU9K8veGU6Kp/
Tvztt7/q4W+Ugw1SHMPHXdCH+QQUNmOZdFLFKus5fVvaVXuNoRv/JSVB0SNT
0pO2KBNhUtlnSj8qiiaprlLSJ/tJ6arY7flISuIxHnktuNI1KSl8HX1+FJaJ
vgjPtPm4dK6hj7ehG/8lJUGRK2Pn8hFmvq6FU4qzUjXcnpLmDf/8+rW6sMDt
+UhK4mEczLvdkpIqnwGF4ah+cSkpaujGf0lJUCQlda4mv1zzd/1xEia+1dzb
85GUxPM4nve5JiWlHgZVpqQdExtt1+iH2ejt/0hJUEFK6pyUtC8lzYusXn/f
1hSTkngth/Q+rftt9SRonrg8Q65ehItEA1FYT+stGv0YG739HykJKjwsJT1p
W77CpHCjHjZ8WaAYXoqv87OkJF7LUb1D6067fqe0W+PoB9jo7f9ISVDh+rvf
pp60LXm/L/RZ4RE1YW1fSpr+8NhISoI8B/ZWD0tJTVc34tHVw+eHJ5KSoGjo
MR560rbkPTslLUlJcBfH9lZNH75cdr1uvaJBj6toswfdlo+UBBWkpEG9JyWt
zEdsTaLJZKJw4r6IJCXxbA7vrfRY3tD9s2r80NsiJUGRlDSo16ak2e6UNJOS
oIYjfJOHXVXPNXrPSEnwKg87nz9pW/KkpB0pabVI5mt4UhIsOci30mOhZ/TJ
ciuG3iIpCYqkJAZVGWoyPzs6/oukt6Wk8Ddir3J3999MD2zl+Plk/8/gg5o3
5DFbBKQ86dz16fustbxSzP/NX0an4OF+Zn9F517TIbccRdPGlDT3T+qtlJTy
sJuc3fTD1m2Pp82bNOqTQXvjMnf3+vkmKQle42HnsW63Zfr1GX3qNJsqFs7K
1x+toanre346kGvO/ev2qDvFs7dunzf3yaZt/1n4x+dHD39v3mWc7mE3TkDK
wwZ7n9uSCTWVeSfzOr86KUlK2u1hJ4dzvblzUtsePZvdno+kJE73jOHvd0lQ
9IzBPutzWzKtuislrb4OEX37iaW55aziA6xU4VNISa09dbvO8vL+yZ+75im3
5yMpiRYecERJSVD0sJTUp95S0ir75MNONDFF01P4NrqKs0w9OX3rbvfIjTrd
U3upcrtWxcKlJimJS9x48r/XkU6TkqDo+ECjKNPD4awpnXFqzo3hIpvKTImY
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 5->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
ISU9hpR0utSGLKcfDEqbph8x19n0s5rH7PovKQmKpKRBSUn1tUlJHaakTdvY
JynpSlLS6R6ZknpbpGdSEhRJSYOSkjZVKCV1mJI2beY+niUNJD8wt6ak1Xh/
YUoqnui2pqRVhdGT6rLM8sXqdbRw+DbVyGjhsGSqwalm5FeamT4oKQmKiidS
+iQlba0zvKAfrPCUhh2vfxo5JW3a0t5MFSlpPt5Wr79va4q9LSVl7nh3xJno
6/ekpE/2Ep+ZHu6F6dfss3qbeZEpEJZZFYtmlkyrosXqm5FZaWotQ5OSoEhK
GpSUtK/mHSlpqnZuU+tLpjLLUjg9LBwtsyofXVxKykeY4uv8rHempNWYmqSk
jVa9F56jUhsyJXLEspKwTP7Fcu1TEE/CKalmFAuvSoYNrqwnVWE4cVxSEhSF
Z06GICXtrnyIY76+hdHAMseW4uvUxE3LHklJmza2K0dS0vSHx0ZS0iyakpZ3
uWelpG+dq7f19Y/S25ngkCnwSSSFaMqoCRr5ANIuJaWaUVmPlAR8pKRhSUlH
6u//sC82b3kPeVZKKpbPrOtISqrZ3g51lZLeYEdKCpedX39frN5urTZqeYTc
WzJ60M7FogU+dfEhXLZYMnwRrS1fvlg4NaumGfkKUxPHJSVB0eq8yiikpCHW
slvmBia8FzrxWdIUC0SrWZnVvU19isnHpVQxz5KWc3c/S1otO1e+75t4o/T2
FISLcEp0qbDnpz8EjXB6dMpqD0bfrmpY1RYtn1p12JKwPan2R5sdXWmqx8Yl
JUFR9FRA/6SkfA39OKUTMrVN2ZS0VPmNuynIRKvFWzxLim5156ZjKWkmJX3l
B850UkqaEs+SnpqS8qeOg5Ufr2csD9tSKQmKjtzIcSMpKV/DP/kn/3sPfwfv
Q2qiVj4lZXLQppRU+Sxp98YuN+d4JdfYnZJWC07pr+G9MCVl5u5OSdHENB34
xt2V3bJbzanjSOWn1DOWh22plARFUtKgpKR8DbfnoyMpqSYcLQufm5LCh0f5
BaWk+qCUT0n7ItJjUlLe1pQ0D6LVlD8Kfq+0KvaYlFR0cEM2nab2VX6kQAuP
2fVfUhIUSUmDkpLyNdyej3akpNVdx2UpKfqoKJqS8kHprDPJKGekfSlp3sup
t1JS1NaU1O7vMb3decooFt56qjzuMbv+S0qCIilpUFJSvobb81F9Skp9JHsw
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
Tw7cyIExKCnpDfrpintT0rz2VUpalVlNjEabeVa0QKb8cCkpPLen7hg73JYa
D9ve4uZUppgw/hSLpcLUKCkp7K58Z07Z2DLVpaHlxMysnr9xJyUtZYbepjI8
jH09KCnpDbrqimsaE729mU9TUxBYllOmRVCK5ppV/ClGpOjrsVLS8gyfufRf
2MzTPGx7i5tTE2TCMpmUtMpT46akUPE0kn+WNMUeA2UmRivMrEVK6lBm6C0L
pN7yVHb0oKSkN+iqK85qTKaezL3NbF9KqplSmZiij7H6l+n5eW6xhsrddG/J
ufCU3t7hfPampHwsmqdsTUl398dRxW/cTUH8iS4+pb9Wl1mLlNShzNHySdwq
RyfyMPbyoKSkN+iqK85qzJF6pvNSUur7ddHy0QpP6Y0Tpa7vywKpBS9p4Mke
tr3FzTmSksI0tHrxhmdJy7n7UlL0WdJsa0qKNpJupY60qw5q7pHZ+/RMSnqD
3rrilPZM0/q5wKf6RDRln+kcf3I0JX6yFJ1yvCvOVbymR6ePewl42PYWN+eU
Z0nvTEnh3GJKmlNMJvWspuTfepbUuSAV/XLkpPZUnycTTtTtJYM8KekNeuuK
I+1JXYOWp6Bi/VNd/KksVpmSUqvY3RWN1JzMw0t/hxtS6WHbW2zbkd8lZZ4l
hV/Ge0xKysytSUmpZ0lS0iMVk3VqqfZN4049XzXIkJLeoLeuOKU9q0pqPq9b
FjgrJc2B6CuVklLxqrddUy9/M/A8j9neff/GXfFF8SHUiCkpL5Vf5oMk+i27
cNZySv6tlNS/YrKORqehTynUsJcHJSW9QW9dMWhKqs8+qWLR9R7vCqi37/+X
FE5c/klJ9/5JSQNZ3S27eX4JO3pQUtIbdNgVx5sUpqR5ytaUNH9gG50Yzo2W
T6WkVCVSErfYFGSa/klJUtI7rS4Kny6v0ZxLShqUlPQGHXbF6U2arzU1NecD
zvG/+vo73DVUGvSqJyWdRUr6kpKOG/FMwiaDXi+Qkl6it95olJLqC0tJHBF9
cDnE3pSSzhI+br7Rjf0gJZ3i3p1Ia7ePU/aRkl6iw944t0mbarvtVibmxE7g
ess9OMTejP6w6K6/uzuDE0hJpxji7MFuLveDkpJeosPeOLFJdyWODnu1tWVX
i3ufX7/q+fKu4J2kpLM4dTyYS8OgpKSX6LA3OmzSVg/YhB1ST09e2BurTX5h
D4CUdBYnkAeTkgYlJb1En73RZ6vqjd7+ffIp6T3PU+btXU2BV5GSTuQc8lQv
uSw+j5T0En32Rp+tqjd6+/epfJY0euesvluYmjv6ZgL9cD55KheLQUlJL9Fn
b/TZqnqjt3+fVTKKhoXReybcxhsbA7yHs80juY4MSkp6iW57o9uGVRq9/TsU
v2M2+uUg+uTolpYA8ACjXxZfS0p6iW57o9uGVRq9/TtU/hJn3J7Jb9S42wUt
+F0SFLl2DEpKeolue6PbhlUavf07vDYlzdPH3TQ4nZQERVLSoKSkl+i2N7pt
WKXR27/V6t80iP4iafTLQfFZ0tBbB+eSklpwknkYF45BSUkv0XNv9Ny2oqEb
T1Tqd0meJUFISmrBSeZhpKRBSUkv0XNv9Ny2oqEbT0r0W4VSEoSkpEacZ55E
ShqUlPQSPfdGz20rGrrxZOS/T2i/w5eU1IiTzJO4agxKSnqJznuj8+ZljNty
gOOkpHZcXx5DShqUlPQSTXtj6km7zUxt+8VrBOiHlNSO68tj3HJ/wnFS0ks0
7Y2flf/4/OjhT0riSjd9EtCLu7ufLkhJTRloz+CcOSgp6SWa9sb04pT0caS9
j5jwpR/4SEmNGV/P4FQ5KCnpJaSkppt//Uq5i90d0idvJiW1Znw9gJQ0KCnp
JaSkppt//Uq5nstchs55LSmpNSPrAZwhByUlvYSU1HTzr18p17Oj8/TPO0lJ
FzC4RiclDUpKeokbU9L844Xv69XEeVZ++qoeKYmL2cs19NILSUlQJCUNSkp6
ibtSUpiAUrPyr1MFpCQuYBfX01dvIyVBkZQ0KClpUFu37paUFE7fnZLy1UpJ
NGUX19NXbyMlQZGUNCgpaVCDpqQjiUlK4i6pXTx/CzRVJnNlPPew2Vfbsnln
tcdweBsp6TIG17ikpEFJSYNabt3yPu2aW7Kw8pqUtPphUfH3R+EsKYnr1Yyp
u4becac3r/PthXEZXOOSkgYlJY1livlUfCbcQ0pKPScKU1L9WymJ1ioHlJTU
qEJgZnwNSkoalJQ0qNXWrT7WLpY/vTHXpKR8RLorJX2efrC93NYBtboaLj++
CD/WyL/INyD1IUn0U5R88zJrX9WZ7qeqzgGOMLgGJSUNSkoa1BApqT7yZKJQ
GKbyq2u3mfkeuGW9XGDTgAqjTSry5F9kMsvWtSxnbV17tECR4fAqfpd0MeNr
RFLSoKSkQYV3TcWbmXYdkoktPxK/P8pMWYnOlZK4zNaPHeajdFkyLL81N4Wr
CGurD0H1K5WSyJOSLmZ8jUhKGpSU9Azz/Uz+5q3d2vNfhLvsT0ridJUpKZ9T
zk1J88RUCEqtZd9Kt17fDYdXkZKuZ4gNR0oalJT0DDUbKyW186qD7W1SOzcT
RsIXu+NJtA27s9iOle44tg2HV5GSrmeIDUdKGpSU9Ay3p6R+NNrGYg/csl4u
kNm50aMudVguS64WLC6yWktq8eLr1Lpq1j5VH+T1JXkAKekWRtlYNp1C6YeU
9ACV9zBjdYjW0omBdu4qSd1V50A9xnFS0i2MsrFISYOSkh4s/0Fx/0Zp52eo
prLVQDtXSuJ6UtJdDLSBDHTrxZKU9GxS0jUGaipb9bBz64dtizHuG3dkSElQ
NNCtF0tS0rONG5G+RmntKO1khxt3botnQxcYqKkcJyVB0XB3X3xJSY83dEr6
jLMfR2knW0lJWw3UVI6TkqBoxLsvPlLSCwwdkb6GaPYQjWSHFnt2HoyrUbl8
uxqzc/loDavaUvVccx4wFl5FSrqRsTaKcW/AXk5KegMp6QJDNJIdGu3ZfAIK
V71MOqlilfWcvi0rxsKrSEn3MtyGMO4N2MtJSW8wekr6jLA3+28h+7RLSeHr
6POjsEz0RRip8nGpHWPhVaSkexluQxj6BuzNpKSXeMAI7bz9nTeP3S5LSZXP
gMJwVL+4lMTppKTbGXH9e8A92DtJSS/xjBHa8yb03DaO6Ocbd8cn+rodp5OS
bmfQ9e8Z92AvJCW9xwM6pOdN6LltHNRi566eBM0Tl1+WW70IF0l9lW5VT7ut
CBkIbyMl9cC465yUNCgpqVtTT+7ujL/TVWOWum0Yx7XYudcfMNes0UB4Gymp
B8Zd53q7laKSlNStn+3/8fnRw19vPdlbe776bBWneEBKumx1BgLcwtDrmZQ0
KCmpW1JShiZxsXP375VPaa+8OhsFcBejr2dS0qCkpG5JSRkdNunTa6s4i/2b
p3/gXsZgt6SkQUlJ3ZKS8jpsVYdN4kQucxl65rX8LqkfhmG3XD4GJSV1S0oq
6q1hvbWHFuzlkD55MykJiqSkQUlJ3UqlpNW/Ppea+329mrWpqv5T0qezvdxV
Y2hnNXDubs499ABfUhIUOVUOSkrqVj621LwupqTM4lLSDl01hstMr3R3r9ML
KQmKnDYHJSV1a9qYksLyYbGaMmOlpE9PO7qflgBcQ0rqjStRh6SkQUlJ3Tqe
ksJFHpmSPt3s606aAXAZKalDLka9kZIGJSV1K5+SlupTUlgsrGfElPTpY3f3
0AaAK0lJHXIx6o2UNCgpqVuVz5Iyz4lq0lB+KSlpuDYAXElK6pPrUVekpEFJ
Sd06npIyz4/6SUnRH4bf5fi2nNInAKOQkvrketSVU+4xuJ6U1K1pY0rKxJ9U
+U5S0p/8yb/p4e+UzRz9qAPYRErqlutRP6SkQUlJ3Urll/AJSHRuasrybbQG
Keng5hyvBGAUUlK3XI/6ISUNSkrqVs1Tnmv+pKRNm3O8EoBRSEk9c0nqhJQ0
KCmpW1KSlATQOSmpZy5JnZCSBiUldSv3rwxcrulm3p6PpCSAfaSkzrkq9aD1
rRSNSEmv0mGf1KekZWrLT8xMl5IATiQldc5VqQdS0qCkpFfpsE8qU8wqGYUT
U9OlJIB2pKSnOviVknkpAeGjE4YlJb1Kh32yIyVl4s934r5v8UlJAFtJSQ+2
vKLtC0q7l929VJ+kpEFJSa/SYZ9setZTmZL2BaVTTmId9jAA7CAlnUVKGpSU
9Da9dcumOLP8nVE+Ja0K1z9LOvIFg09/3QsAx69o0RpWl8vVpTOTklILrqak
3n6Ci3V9bUcu8btJSYOSkt6mt27Z99CnJiVtfahUPI3Xb9F53QMAJ9j3MCjz
yeEqBIWZKJWSUkmqWE9qXdFFUrPC9lxAShqUlPQ2vXVLzylp2cj6U1xvPQzQ
jt8ljWJfStr0dnWt3JqSii8+6ZRUXHWqMdeQkgYlJb1Nb91SmWKmPv6Nu8yn
assyp/YQQL+kpIEc/GrEpreflinpE3zFrmbVq4R1JSlpUFLS2/TWLfUpaVac
nip8PCWtWh497/XWwwDtSEkDicaNyvKZt9HnO9EXmWbse5Z0fNlrSEmDkpLe
prdu2RRkmv7t7plVXOqthwHakZLGUvONiLBkqvxq+upSmFk8vG7Ob8MXYflU
DZna5lmlHmpCShqUlPQ2vXXLA1LSclsqrz4AzyAlDaSYekaxO/hISWwiJb1N
b90Sftx0o7O26BP74AvgeaSkIbS75N1i2pWSbtzk0Tv8taSkt9Etra16+AHX
I4AUKalGJqFE34bXkdMbMPpVadNW3L69tzeAfaSkF9IzTaW69zHXJt7seUfv
87ao3inbLiVVygSfYiY6ZU/tTklnrf14JbevYjeX/kFJSS+kZ5qq6V5xiUE9
76B93hbVk5KulMk+4eOksFiLoFS/1InFLtBPS2au+IOSkl5Iz7S26epTc/J0
gqUTq3u5+f5t3OPzeVtU75Rtl5Iq5VNS+HZV7KwDcmtQql97P0Omn5bMXnJK
eR4p6YX0TGs7ejh/2drx6R+caIr5/HrpH+vgfN4W1Tt326WkSsWU9ElEktMP
yOMpKTxmVhVG365erDaqclamnrAlqdfXu3HVHCElvZCeae1gD4cn8/B+Bm6R
un8LZ43ieVtU75Rtl5IqhV0ajQNhyRYn//oKw0ampkdLVkaemlmZemoaEG7C
lVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6m1Yw83b86tTtmi4rcub9m77
0ukp6eau/NXBbVltV2rK9GvPT+kd0bpJ0TLR3ggbn9qcG1+kJl7v9MOJa0hJ
L6RnWjv9Qpa/fP98/ePzo4e/FofWzzr/+I//XQ9/jbbu9r22ad+Fd0qZm5Cf
U373u3/bw19m6zZt0arkX/zF/9TD3+4jc/e2L7VISf/PP/gHPfw1jSSVUahp
SiqqaVjnKWl+KyWxg5T0QnqmtWtS0vKKcPs9tpS0e+tu32tH9t18+xFdfIiU
tGmLViVvz0cHU9LubV+Skio3Knr2Xs5aTonOCku2JiWdRUoalJT0QnqmhXyQ
aVHzXP80+J12cfNvz0dSUqb9+bm356N9Kamy5O35qEVK2kpKeqpiRguvRKnC
qSvX8kVmVqqS4uLLprbrqBphkxiClPROOud00RP48X6uqWQa/E67uHW35yMp
KdP+/Nzb85GUVG9fPVIS/bt9V0pJg5KS3knntNAiJVWu9/Z77N132sVeqk9J
q57vISXVbN3te+3gvsssOFxKyn8cHRa+PR+dmJIuO2XVdOzt+ehISqr8aOuC
y4Q7868eOsG+GJSU9E46p4VGEalY4fdOe7Xq+nvjufy8VLSqVP2rGo5sXXTx
aUveWRbetGDTlJTfuq1Zpn4vbzoYGm3dHFK+wvAyT58C4YJhPdE6owu22Lqt
WWYlWuDGZ0nXqOnYrVkmnLKUL9woJeU3cDk9Vey4Ykser58N76clbCIlvZPO
aaTFVSm8uVqtYloEmeVNb82N8eqOOjUrNTGs4ZStWxV4TEqKbt2Ohz41ezm6
15qmpOjWrQJRNCVFI8+0CDipTFRfZ6Ot2xFnoq/zE5+dkqIdezAlrSbOr7/r
ujglrTYw3N7UxOOKXV1fz+lte5tGu5jWpKR30jmNHL8eFesMVzHtSklhgdTi
lfXv2+T8pn1OSknfCldvN9V8YkpabV3rlFRfbYutC9NKcUr02VBxbvHRUout
O5KS9hXoMCVt/V1STcdujUjhIlMsJd3yLGm1gak6W+zEYlfX13N6295mR7fT
AynpnXROO/suQzUVpi5zUzbFfAuvssxqYuWteHTi8m3morzPZ3tKmoVx6fti
9XZf5Sdu3Vkp6Vvnai9vqrbF1u1LSfli+1JSi63bnZKWL76vV//dVPnpW3ej
T2cpqdE21p/nw6XOKll/Afq4ZzhsU5/TDynpnXROO1uvQZW1ZS5wU+ynQ9GA
MyWiU3hfHVaVSVjzlB1bXbN1O54lrZaaaw6fK434jbvorslE2spqW2xdKgFN
iUA0y3+t7q5nSasCO1LSbDVxmZ621rxj6050yrOkVYEdX7ebgt8fzVLp6a5v
3KWW2rGuIy2pryRs3lzVFISyaIFUS3a3ajgv2cznkZLeSec0dfB8GF7R8te4
KXuHPC8YPm44+Pwoevd+ZGNTW3cwJaUmbqr5lJSU2Xeb4kx0dyx39C0pKVpg
a0o691nSssIWW3f8WVL4el+1W7fuRAdTUrTAvsc9NWloa+U7OiS/gfUTjyt2
dWUlqxfLyj+LHBSWz8wK63+2RruY1qSkd9I5rW3q4Zrbhsw5dkqnpPBFeDvd
Q0rKF9iRkqLhaDr8jbsWW3dKSsrv8aYpKV9gX0pKJZ1NKWn1usXW7U5JqYnT
a54l5QtsfZBU/826+soPpqT6Au3un0+pOXVtmn6NPGGxTS8er91epikp6bX0
TyPTr2qK1dSZn5u6bV7NSr3NB6LKG+9GV4Fp+/8vKXxgNMVc8I27mq3bnZLq
c3GjlFSzdTX5JR95MgVqqporabF1B1PSFGSiKfaw6WEpqWgaPCVVbuOmS8Bd
pkQy+sRSUmbZcDNTSz1V5zuaFCnptfRPC6sz4fJtu8viHHm+VrElKlomnJgv
Fk5vcVBNDf7/sPv+Gm3d1iwT3TWp3d1JSprbE0aYeXrY+OiC+ber6ct6Wmzd
1oi0spwYfS0l1XzXLny7mpVa5MaUNIppe0rKvAirek8Pfw+8u1vBZlLSa+mf
00VPg/N1uel6tz6PaPTX6F709nzUT0oabt9Ff0x0/V8PKand3ztT0gV/L79K
ri5ey7fh68+vV8DMssv6L9uW20lJg5KSXkv/nC7Vpa27+vF32rfnIylp99bd
no+kpNakJPKiT6A+L7sJkZIGJSW9lv453Y0pqR+2ztbZuuudvnX1WqSkfpzS
RS83xZLR2/rW4TQoKem19M/pUl2qq4GnOj0lcb3WF6ll6nxnXnjnVj+AlPRa
+ud00dOgcyPwYFLS0IpPzTxWO4U+HJSU9Fr6p4XVmdCJEXg2KWlcld8tdBU7
zs3AoKSk19I/jfhaO/AeUtKg6q9TLmTHuR8YlJT0ZrqoHX0LvIGUNJzg36io
TUnL3xbtmxW+CFsVbe1cOPqFjVT90Zpr1n56qJGSBiUlvZkuakffAm8gJY0l
jEj1KemTTTr5WeGLVfaJri5aOFwqmm4yNafWnqr2OClpUFLSm+midvQt8AZS
0kCiEWlrSmrxopiSwvZ/YtEjrKem8at66numnpQ0KCnpzXRRU7oXgK6MnpJS
W5RqamXjl/W0uHZLSYOSkt5MF9VcLFK9tPpEq35BALjR6ClptdTyRU3N+Xry
oWwfKWlQUtKb6aJP0AmZ83Nq4tZ4BQC3q0lJq88DV6+XE1OzVvXkC0cvwWE9
qfaH603VkGp8uJZTnF4h15CS3kwXfUqxaD6R1i+SnwjwJH6XNLSHXae63Rwp
aZNVkq1cJFNVpv7Kes4iJQ1EF31OSkmVNQM8jJQ0nAdfm7rdNCmp3ukP9TIB
asdSB0lJA9FFn7qUlJo4v019WHFmQ+E+07vd3f1dk5KG89RDuucB223DehP2
0vF+S9WQr7nR/pKSxqKX8kMyeqdUOYr1LaPr+a7jSvohQ0oaS/1h3Pqw3135
iCPRCaRSppcyB+Q8ffliVec8ZVVmWeeqntX0VA2bSElj0UuZyLOalZoenZKa
CKNwAIf0SUhKGsumY7j1Ab8psjVtSWtSUqWa5z75O64wwkSnfIJ8VHwRrXMr
KWkseikVhXbPqpkOPXNBz9A5K1LSQLYeulLSWZw3Kp2SkipfpOJP6kVq4iZS
0lhe3ktTIJwVfbtaNlN/u8ZDI47bPP2zJCWNYsdxW7zkLT+lT310n18qX0lY
Q+a6vKq2K/lbBWZhL4X7NHpc7XgR1pl/kZq4iZQ0Fr3UlO5lOA7aGnppJiWN
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
JZ3C+Ho2d1b1iukjlaSK5aWkJQfkPmFsh0ZqUtKmpHP8WdKqeZsGQvRDrYMX
RymJzklJxxlcjyclbRI+J0pNTM1aXYKXwrmrSqKF84sUWziTkkY3VSdiOGgV
W1aKD4ky5YtLhSUzjcyPhcypdS5wpItuz0dSEhlS0kFG1hsUryP06fRQIyWN
boqFcWghGm1u+Sse5zVjYQo++IpO39pFt+cjKSkqmo7vcmM/SEkH3bv7uMbt
45R9pCRCU+JmD841jZOS5gbXz52kpEf72SF/9mf/Sw9/UtK4DKuXkJIGJSUR
CrvOAKeFSz5lr7WpzalZ0bf1lUfrzMSWr9Xr+llS0hGTlPS3pCQo2nSVoR9S
EqHKm0A46OcR9Sd/8m96+Nt6bFde8naksLCGfHIpvs7PkpJ2k5K+pKRN9n04
w+js7kFJSYQyXWekc6JxU9Lc/tbDYUdKChfJzJKSdpOSvqSkWfGEsCrgevoe
9vWgpCRCxa7Tt5xi9JQ0b0W7EbE1JUXL52dl5kpJGVLSl5Q0yz8nqp/I89jR
g5KSCNV/leiCxvBgz0hJ87a0GBGbUlKqcGrW9OuPlaSkTVIp6duZq7ffKVMg
U0O+jJTUoXD/Tr8+OUotdVUDuY1bpkFJSYTqu04nc8STUtK8RecOik0paeuz
pGnLN/EM9pVMflnNWoWmVLGaRaSknkVT0nxOkJLeTErqXGbwXu+yTb5mRc+z
qeuu3Kc8zLRISfP5Icwv4fSaYtGTT6qGc4/hE2ubWv4uKbOIlFQ0ZTPOtD0Z
HUlJDCF1IF186HK9zAFAD37unT//8/+5h7/LjhMH5G47uk5vs8MURJUpEX/C
idHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeYYpEnNXG1rGdJ
A8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNVow08WHMmucy3
YavX9bN+t/hF0nKilFSjmJLCuLR67pNPRmFJKalzqXy0KpB6y4PZ152Tkthk
d+/pduo9PiXNm3lkQBW/C3fNn6G9sjslRZ8lrWrLv+0qJTGrGenFJMUj2d2d
k5LY5Ejv6XkqReNPmIPyxfpPSfPG7liLlNStmpQUJqDoUlISPJuU1DkpiU0O
9p4TAjV2p6TZQClp3uTUuqLTp5407pvBTIf/jbvVxEyxzLqkJOifU2jnpkRK
mi9/0YnLuauS4YKpSs5NSfWLOyCPOKX37ALypu0pKbXIKClp3vBwSvQy+nPK
j8+PHv4M55VUcpl3ZfRbdqtZqQIrmYh0e0ryuyQokpI6l0pJYboJJy6TUaZM
KjGFSx3ckNNLEjqr95wZyKiMPPtSUjRkdZKSPonfcUtJAymGl8v+pCTonHuh
zh1JSZm8U1ykaUqaj7rU3cWRFb3cub1nXxC1yjhfYcaZp4dlwlmZMql13ZKS
5h4IrQrcno+kpCgp6UtKWsoM5+jbcLxf11YuFL1NpR/T3pQ0ZZ8K7Uhb+46T
1L3E8sBztjnR6b3nFEFoSnxH7vq/ew/O/J3V7flISoqKXpXucmM/SEkrU/pW
JDMrNYVnuH2ckjdtT0mz3SlptXiLb9xtOv9Qr1Hv2SksTVJS+mZ7nnt7PpKS
GnlGl0pJK5nss7pVjt60POOoYEVK6tyOlHTKs6Sm37j7SEkttQtKdg1fVZ+S
X6XDTvhkU9JcbPW6fpaUdK9ndKmUtBLu1mmRksK3q2LPOCpYufcqQ9H0xN8l
fXzjrqWmHWjvwKeUEz+lZ0nLuanX+VlS0o2e0aVS0koxJX0SgSh1M8MDSEmd
q09J0x/+3e/KiRenpHC7Pv71hjZad6CTBp278fhcZqWtKSlcJDNLSrrRM7pU
Slo5kpKWn5DwJHZr5zIRZiU1MSwfrSdfrFFK2jqLGtd0oN1Et3o4OLempGj5
1KxlCisGqB5642Ge0aVS0kpNSvrU/UaJx5CSOpdKSdf/SUmjuKwD7Sn6FL2l
OfFiV/O58aaUlCqcn1X5jMk4PSj8+DHl7pZuIyWtZPLOvlk8wIhD+1UemZLy
1xQH5EFXdqATCP1I3bguj9LTg1Jmpe2eJUlJ93pGl0pJS5nMG50SnTVoXibD
Du1c/lp8scs2+ZoVPdX1HWiX0ZWp+oPfI6vInyqnxr9LmqSk+zyjS6UkKLry
7pcT/bbQZ4W7OSAPuqUDnUnox40paVlga0oKU09mVmVEkpJaeEaXSklQ5N5m
UFISKTd2oH1HD8KUNC2+EnPWKvJP2zMRZi6/el0/67UpqZNt6aQZB0lJUCQl
dS71ieUtLtvka1b0YDf24ZWHCtSYTv3XGypPj9OBf7u7MvvUlzy+1Z3oZFs6
acZBUhIUuaXpXOtL7aaL8mWbfM2KHuz2Pry9ATA7fjRG01D+4yMpqYWw/z93
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
zIm+CCdGW+gAG45dVu+RfVW/UfmRPsVS0nyK+L4Op8+z5tfFt9EpUtLjnRIW
hnakB6QkKHr5GeYamSi0KSWFyxbzyPUpqbg6+nfuLpt+tZq4421Ngy87sz3y
8F6N8Xl0F89I4awwraxyTXR6ZmL0dWqulPRg9unSjt6QkqDoYSmp221JZZlM
YAnfRqeEszblrFT5/IvU3OJ0hnD6/qo8xooTa+rPTGxxHD7p2J5iPokhv1ow
OmsVWDKhKRVtMnOlpNd62H3LWbZ2i5QERQ872/S8Lcu7jtWUcFZYPr+novVE
q43Wllkw+uIT3DilbqjCiXSuxZ5aHWyZFYVzi+2Z0rfoxSnHPfLADs9FqVnL
6dEOz6ekmgyVWWr6NUZ92+Abd49nb6Zs6hkpCYoedvv6pG3plk5+thtTUlis
pjH5lLSK6qdv3SOHw46UFJ2VT0nzHol+By+femq+sCclPZJdmVffP1ISFElJ
g/pt4eIK39PJ79QoJYUhJbwVX82tbEkqdoXpqdGh+7wRkdk1J6akyi/a1TyB
kpJewn6sUdlLUhIUSUmDuislNfpAnn60fpZUOXHTs6ToYRmdUt/meo8fDqun
cvliqynHU1LNl+6kpJewH2tISXCWh93xPmlb8m58lsSzdZWSwmKrQJTJQZ4l
nWXrQ73llHwsiuag/EQp6c3sxxpSEpxFShqUlEQjvaWkfJOKKSlV54kef9o5
MSXNvyf6ykzMvM0UzoSpBh3DpVaje/VpyVJ+2U0r2ldD/YqOn53CTZaS4CxS
0qCkJBo5fRBFb12WE8Pbm/zbVM3ROj+Ls1yj092zTzuZO8+wZDgl85OiE/+K
K3r2PnqJfBY4HjeKa2yhuIodQ09KgrNISYOSkmjkPYPoLHrsS0qiKSmpvkzN
UlISFElJg5KSaOQ9g+gseixl6sndncFR05aUtNzp0derYqkXmblh81azlmVW
B2GqGdHX0VnFxsQ7cUFKgqIjl4/qq9PbnbvLvqQkGqk8Yvcd2MsR0WhoRNfV
ekUXrAVebjXQUm+jJ5kpyC+pMtEX0WXDgb+ctSxT34z6VkUrSXVOlJQERTtu
JJre/D9Six6TkmjkgvByWf1SEjxGfUpKTczMyr8ozs2XWX1qWqw2FeKKlWSm
hKQkKNp69+5+4IgTe09KohEp6cgagUaGTkmplu94lpSpJDMF2KE+JXl+dIqz
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
                   "], {{
                   0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 6->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3c/q7MyDH2aReJFlbiG+Cm+zMcQeDOOQAYM3Hs/ExAMTMx4I48HwEpJs
vMjGWSW7QMAbQ3CyyOpcSS4kq86ZaX4aHdVf/SmpSnoevrx0S6VSqaSS9Gl1
n/c/+8P/9h/+1//RNE3/8j/5+Z9/+E/+u//8z/7sn/zFf/mf/nzzX/3pv/xv
/tmf/vEf/Rd/+ud//M/++M/+zh/+xz8n/n8/y/7h35qmv3oNAADAyufz+f4X
AADg5ZZBCQAAABEJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiS
kgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABY
kpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAA
WJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIA
AFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoC
AABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFi6MSVNwAhuOT8AANzoxruge2/8
gEq3nB8AAG50412QGzDonEEKALyTlASkGKQAwDtJSUCKQQoAvJOUBKQYpADA
O0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALxTtylp9/+xZbnI/N/QqmSqhvrV
hUul1nukqUfWkl+qZmOjbU71WKZkps7lxGKZ6Ipq6o+2rbjJqTbkO3ZKHGyp
aotvM5uW6aV9zq0NAGAUN94FFVe9uqWsrDNaf3hvma92U5+kKq+ftaOp4fRo
yX1tS0m1ubii4q7MR49iCzfVn2lbTf35t5X7JT+rfq8Vlz1ISgIA3ulJKan+
LrRYbaOUlJm+tam7Y0XlnfnWNtTfyUf3e7Tm+hbW178pfOWbl2nq1imVKanY
LaePZSkJAHinZ6ekcFbljffpKWnHDX/984X6KfuaVFOmfmfVJKCDKSmz7L6j
/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT6402
oLh4ZbXRYsWJ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4tigdRN
8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnTyGJT
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
KeazMcm2ayoP5nID/ZCSoMhlq3P7UtLqxfXPksKtaFT44FJ9ruj6Z0mfIEkd
rBxSHDDQAykJiqSkzklJTZfqc0UtVhHWeVZK2lEegHtJSVAkJXXu4DfuotMv
TknLr3VVlt+9on0LvmEtNSlpxzfuMvVDkQsQ3EVKgiIXqc4dfJbUQ0rascmn
L3ti4wdNScU6w18nnVs/pLgMwfWkJChyeepcfaiZH9mEb6eFfRFJSmpR1cVr
qUlJ7eqHvK0PnYEjpCQoclXq3L5ck/rq3ZG/IVJSavHVj26OPDeRklpXwsu5
KsEFpCQocj3qnJR0ZPEp5vPrYb91deOmpEy1J36M73zCKVyboCkpCYpciTq3
O+CsvnH3npQUrWE1ZZWkDlbewsUpacS1ALCblARFUlLnok9D7nLZJp9ewyQl
ta/5+rXwHo4oOJeUBEVX3v1yot8W+qxwt1MOyEws+rz4G3efYwlx31rgFK5W
cCIpCYpcdwYlJR2pZHrlv94w13zN80EnFlpwzYJTSElQ5IozKCnpSD0HV3HB
kGm0iou/RencQiOZA9hF7bjCd6+f7u7uv4iUBEWvOic8iZR0pKqDq4guPg+l
U8bU6aPyrvsBpxeaCg/jt93rnkjXfb2kH6QkKHrDqeCRpKTdVR2/AmbC1zyr
RRA76K5PTZ1haG057l74UOAUuiv07D6RkqDIpWRQUtItteXrXE7vMCV9Lv/G
3XK916yIl7vrCB+ajsp4cOdISVD04DPAs0lJt9S2qnN1J9Z/Svrc9GG7kwwX
iD4tdewV6aI8/QOv5SIyKCmpwwpTienEVZzilhvIW84zzm+vkkpJjoEMnVND
L8E7uYIMSkrqsMKp43+9Iaz/+rF/1+qc4t4gE5EcACl6pp6+ghdyBRmUlHRj
nfmU1HQVJ7pl7N/y9Mop7p0EpSLdUu95feV3SVDk8jEoKelInQdX8YyUdNla
bl9pozXmH15crMUGduXuDv7F3Z1xmidtS2vP6yspCYoeds5/DylpX7Wn3OdE
Fz/3Dqq+nutuDSucvnXHtVvXz5r/5E/+bQ9/V/bnXX5u4+/93n/o4e8xvf2Y
DbnG87pLSoKiTfc29ENK2lHtjvv5TG2ntOp4/T9L/vj86OGvw5TUdEVS0pWk
pNNFN+Ss82Tl4id25pE2X9zUTkhJUCQlDUpK2lTh7qcemTpPadvx+kdMSZs2
8Agp6TGkpNOlNmQ5/WBQ2jT9iLnOpp/VPGbXf0lJUCQlDUpKqq9NSuowJW3a
xj5JSVeSkk73yJTU2yI9k5KgSEoalJS0qUIpqcOUtGkz9/EsaSD5gbk1Ja3G
+wtTUvFEtzUlrSqMnlSXZZYvVq+jhcO3qUZGC4clUw1ONSO/0sz0QUlJUFQ8
kdInKWlrneEF/WCFpzTseP3TyClp05b2ZqpISfPxtnr9fVtT7G0pKXPHuyPO
RF+/JyV9spf4zPRwL0y/Zp/V28yLTIGwzKpYNLNkWhUtVt+MzEpTaxmalARF
UtKgpKR9Ne9ISVO1c5taXzKVWZbC6WHhaJlV+ejiUlI+whRf52e9MyWtxtQk
JW206r3wHJXakCmRI5aVhGXyL5Zrn4J4Ek5JNaNYeFUybHBlPakKw4njkpKg
KDxzMgQpaXflQxzz9S2MBpY5thRfpyZuWvZIStq0sV05kpKm3z02kpJm0ZS0
vMs9KyV961y9ra9/lN7OBIdMgU8iKURTRk3QyAeQdikp1YzKeqQk4CMlDUtK
OlJ//4d9sXnLe8izUlKxfGZdR1JSzfZ2qKuU9AY7UlK47Pz6+2L1dmu1Ucsj
5N6S0YN2LhYt8KmLD+GyxZLhi2ht+fLFwqlZNc3IV5iaOC4pCYpW51VGISUN
sZbdMjcw4b3Qic+SplggWs3KrO5t6lNMPi6linmWtJy7+1nSatm58n3fxBul
t6cgXIRTokuFPT/9LmiE06NTVnsw+nZVw6q2aPnUqsOWhO1JtT/a7OhKUz02
LikJiqKnAvonJeVr6McpnZCpbcqmpKXKb9xNQSZaLd7iWVJ0qzs3HUtJMynp
Kz9wppNS0pR4lvTUlJQ/dRys/Hg9Y3nYlkpJUHTkRo4bSUn5Gv7gD/5dD38H
70NqolY+JWVy0KaUVPksaffGLjfneCXX2J2SVgtO6a/hvTAlZebuTknRxDQd
+Mbdld2yW82p40jlp9QzlodtqZQERVLSoKSkfA2356MjKakmHC0Ln5uSwodH
+QWlpPqglE9J+yLSY1JS3taUNA+i1ZTfC36vtCr2mJRUdHBDNp2m9lV+pEAL
j9n1X1ISFElJg5KS8jXcno92pKTVXcdlKSn6qCiakvJB6awzyShnpH0pad7L
qbdSUtTWlNTu7zG93XnKKBbeeqo87jG7/ktKgiIpaVBSUr6G2/NRfUpKfSR7
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
L+wBkJLO4gTyYFLSoKSkl+izN/psVb3R279PPiW953nKvL2rKfAqUtKJnEOe
6iWXxeeRkl6iz97os1X1Rm//PpXPkkbvnNV3C1NzR99MoB/OJ0/lYjEoKekl
+uyNPltVb/T277NKRtGwMHrPhNt4Y2OA93C2eSTXkUFJSS/RbW9027BKo7d/
h+J3zEa/HESfHN3SEgAeYPTL4mtJSS/RbW9027BKo7d/h8pf4ozbM/mNGne7
oAW/S4Ii145BSUkv0W1vdNuwSqO3f4fXpqR5+ribBqeTkqBIShqUlPQS3fZG
tw2rNHr7t1r9mwbRXySNfjkoPksaeuvgXFJSC04yD+PCMSgp6SV67o2e21Y0
dOOJSv0uybMkCElJLTjJPIyUNCgp6SV67o2e21Y0dONJiX6rUEqCkJTUiPPM
k0hJg5KSXqLn3ui5bUVDN56M/PcJ7Xf4kpIacZJ5EleNQUlJL9F5b3TevIxx
Ww5wnJTUjuvLY0hJg5KSXqJpb0w9abeZqW2/eI0A/ZCS2nF9eYxb7k84Tkp6
iaa98bPyH58fPfxJSVzppk8CenF399MFKakpA+0ZnDMHJSW9RNPemF6ckj6O
tPcRE770Ax8pqTHj6xmcKgclJb2ElNR0869fKXexu0P65M2kpNaMrweQkgYl
Jb2ElNR0869fKddzmcvQOa8lJbVmZD2AM+SgpKSXkJKabv71K+V6dnSe/nkn
KekCBtfopKRBSUkvcWNKmn+88H29mjjPyk9f1SMlcTF7uYZeeiEpCYqkpEFJ
SS9xV0oKE1BqVv51qoCUxAXs4nr66m2kJCiSkgYlJQ1q69bdkpLC6btTUr5a
KYmm7OJ6+uptpCQokpIGJSUNatCUdCQxSUncJbWL52+BpspkroznHjb7als2
76z2GA5vIyVdxuAal5Q0KClpUMutW96nXXNLFlZek5JWPywq/v4onCUlcb2a
MXXX0Dvu9OZ1vr0wLoNrXFLSoKSksUwxn4rPhHtISannRGFKqn8rJdFa5YCS
khpVCMyMr0FJSYOSkga12rrVx9rF8qc35pqUlI9Id6Wkz9MPtpfbOqBWV8Pl
xxfhxxr5F/kGpD4kiX6Kkm9eZu2rOtP9VNU5wBEG16CkpEFJSYMaIiXVR55M
FArDVH517TYz3wO3rJcLbBpQYbRJRZ78i0xm2bqW5ayta48WKDIcXsXvki5m
fI1IShqUlDSo8K6peDPTrkMyseVH4vdHmSkr0blSEpfZ+rHDfJQuS4blt+am
cBVhbfUhqH6lUhJ5UtLFjK8RSUmDkpKeYb6fyd+8tVt7/otwl/1JSZyuMiXl
c8q5KWmemApBqbXsW+nW67vh8CpS0vUMseFISYOSkp6hZmOlpHZedbC9TWrn
ZsJI+GJ3PIm2YXcW27HSHce24fAqUtL1DLHhSEmDkpKe4faU1I9G21jsgVvW
ywUyOzd61KUOy2XJ1YLFRVZrSS1efJ1aV83ap+qDvL4kDyAl3cIoG8umUyj9
kJIeoPIeZqwO0Vo6MdDOXSWpu+ocqMc4Tkq6hVE2FilpUFLSg+U/KO7fKO38
DNVUthpo50pJXE9KuouBNpCBbr1YkpKeTUq6xkBNZasedm79sG0xxn3jjgwp
CYoGuvViSUp6tnEj0tcorR2lnexw485t8WzoAgM1leOkJCga7u6LLynp8YZO
SZ9x9uMo7WQrKWmrgZrKcVISFI1498VHSnqBoSPS1xDNHqKR7NBiz86DcTUq
l29XY3YuH61hVVuqnmvOA8bCq0hJNzLWRjHuDdjLSUlvICVdYIhGskOjPZtP
QOGql0knVayyntO3ZcVYeBUp6V6G2xDGvQF7OSnpDUZPSZ8R9mb/LWSfdikp
fB19fhSWib4II1U+LrVjLLyKlHQvw20IQ9+AvZmU9BIPGKGdt7/z5rHbZSmp
8hlQGI7qF5eSOJ2UdDsjrn8PuAd7JynpJZ4xQnvehJ7bxhH9fOPu+ERft+N0
UtLtDLr+PeMe7IWkpPd4QIf0vAk9t42DWuzc1ZOgeeLyy3KrF+Eiqa/Srepp
txUhA+FtpKQeGHedk5IGJSV1a+rJ3Z3xN7pqzFK3DeO4Fjv3+gPmmjUaCG8j
JfXAuOtcb7dSVJKSuvWz/T8+P3r4660ne2vPV5+t4hQPSEmXrc5AgFsYej2T
kgYlJXVLSsrQJC527v698intlVdnowDuYvT1TEoalJTULSkpo8MmfXptFWex
f/P0D9zLGOyWlDQoKalbUlJeh63qsEmcyGUuQ8+8lt8l9cMw7JbLx6CkpG5J
SUW9Nay39tCCvRzSJ28mJUGRlDQoKalbqZS0+tfnUnO/r1ezNlXVf0r6dLaX
u2oM7awGzt3NuYce4EtKgiKnykFJSd3Kx5aa18WUlFlcStqhq8ZwmemV7u51
eiElQZHT5qCkpG5NG1NSWD4sVlNmrJT06WlH99MSgGtISb1xJeqQlDQoKalb
x1NSuMgjU9Knm33dSTMALiMldcjFqDdS0qCkpG7lU9JSfUoKi4X1jJiSPn3s
7h7aAHAlKalDLka9kZIGJSV1q/JZUuY5UU0ayi8lJQ3XBoArSUl9cj3qipQ0
KCmpW8dTUub5UT8pKfrD8Lsc35ZT+gRgFFJSn1yPunLKPQbXk5K6NW1MSZn4
kyrfSUr6u3/3/+nh75TNHP2oA9hESuqW61E/pKRBSUndSuWX8AlIdG5qyvJt
tAYp6eDmHK8EYBRSUrdcj/ohJQ1KSupWzVOea/6kpE2bc7wSgFFIST1zSeqE
lDQoKalbUpKUBNA5KalnLkmdkJIGJSV1K/evDFyu6Wbeno+kJIB9pKTOuSr1
oPWtFI1ISa/SYZ/Up6RlastPzEyXkgBOJCV1zlWpB1LSoKSkV+mwTypTzCoZ
hRNT06UkgHakpKc6+JWSeSkB4aMThiUlvUqHfbIjJWXiz3fivm/xSUkAW0lJ
D7a8ou0LSruX3b1Un6SkQUlJr9Jhn2x61lOZkvYFpVNOYh32MADsICWdRUoa
lJT0Nr11y6Y4s/ydUT4lrQrXP0s68gWDT3/dCwDHr2jRGlaXy9WlM5OSUguu
pqTefoKLdX1tRy7xu0lJg5KS3qa3btn30KcmJW19qFQ8jddv0XndAwAn2Pcw
KPPJ4SoEhZkolZJSSapYT2pd0UVSs8L2XEBKGpSU9Da9dUvPKWnZyPpTXG89
DNCO3yWNYl9K2vR2da3cmpKKLz7plFRcdaox15CSBiUlvU1v3VKZYqY+/o27
zKdqyzKn9hBAv6SkgRz8asSmt5+WKekTfMWuZtWrhHUlKWlQUtLb9NYt9Slp
VpyeKnw8Ja1aHj3v9dbDAO1ISQOJxo3K8pm30ec70ReZZux7lnR82WtISYOS
kt6mt27ZFGSa/u3umVVc6q2HAdqRksZS842IsGSq/Gr66lKYWTy8bs5vwxdh
+VQNmdrmWaUeakJKGpSU9Da9dcsDUtJyWyqvPgDPICUNpJh6RrE7+EhJbCIl
vU1v3RJ+3HSjs7boE/vgC+B5pKQhtLvk3WLalZJu3OTRO/y1pKS30S2trXr4
AdcjgBQpqUYmoUTfhteR0xsw+lVp01bcvr23N4B9pKQX0jNNpbr3Mdcm3ux5
R+/ztqjeKdsuJVXKBJ9iJjplT+1OSWet/Xglt69iN5f+QUlJL6RnmqrpXnGJ
QT3voH3eFtWTkq6UyT7h46SwWIugVL/UicUu0E9LZq74g5KSXkjPtLbp6lNz
8nSCpROre7n5/m3c4/N5W1TvlG2XkirlU1L4dlXsrANya1CqX3s/Q6aflsxe
ckp5HinphfRMazt6OH/Z2vHpH5xoivn8eukf6+B83hbVO3fbpaRKxZT0SUSS
0w/I4ykpPGZWFUbfrl6sNqpyVqaesCWp19e7cdUcISW9kJ5p7WAPhyfz8H4G
bpG6fwtnjeJ5W1TvlG2XkiqFXRqNA2HJFif/+grDRqamR0tWRp6aWZl6ahoQ
bsKVXLsHJSW9kJ5p7awentIqi13vlA23dbeobHDqbVjDzdvzq1O2aLity5v2
bvvS6Snp5q781cFtWW1Xasr0a89P6R3RuknRMtHeCBuf2pwbX6QmXu/0w4lr
SEkvpGdaO/1Clr98/3z94/Ojh78Wh9bPOv/iL/6nHv4abd3te23TvgvvlDI3
IT+n/Pf/+l/38JfZuk1btCr5+7//73v4231k7t72pRYp6c///N/08Nc0klRG
oaYpqaimYZ2npPmtlMQOUtIL6ZnWrklJyyvC7ffYUtLurbt9rx3Zd/PtR3Tx
IVLSpi1albw9Hx1MSbu3fUlKqtyo6Nl7OWs5JTorLNmalHQWKWlQUtIL6ZkW
8kGmRc1z/dPgd9rFzb89H0lJmfbn596ej/alpMqSt+ejFilpKynpqYoZLbwS
pQqnrlzLF5lZqUqKiy+b2q6jaoRNYghS0jvpnNNFT+DH+7mmkmnwO+3i1t2e
j6SkTPvzc2/PR1JSvX31SEn07/ZdKSUNSkp6J53TQouUVLne2++xd99pF3up
PiWter6HlFSzdbfvtYP7LrPgcCkp/3F0WPj2fHRiSrrslFXTsbfnoyMpqfKj
rQsuE+7Mv3roBPtiUFLSO+mcFhpFpGKF3zvt1arr743n8vNS0apS9a9qOLJ1
0cWnLXlnWXjTgk1TUn7rtmaZ+r286WBotHVzSPkKw8s8fQqEC4b1ROuMLthi
67ZmmZVogRufJV2jpmO3ZplwylK+cKOUlN/A5fRUseOKLXm8fja8n5awiZT0
TjqnkRZXpfDmarWKaRFklje9NTfGqzvq1KzUxLCGU7ZuVeAxKSm6dTse+tTs
5ehea5qSolu3CkTRlBSNPNMi4KQyUX2djbZuR5yJvs5PfHZKinbswZS0mji/
/q7r4pS02sBwe1MTjyt2dX09p7ftbRrtYlqTkt5J5zRy/HpUrDNcxbQrJYUF
UotX1r9vk/Ob9jkpJX0rXL3dVPOJKWm1da1TUn21LbYuTCvFKdFnQ8W5xUdL
LbbuSEraV6DDlLT1d0k1Hbs1IoWLTLGUdMuzpNUGpupssROLXV1fz+lte5sd
3U4PpKR30jnt7LsM1VSYusxN2RTzLbzKMquJlbfi0YnLt5mL8j6f7SlpFsal
74vV232Vn7h1Z6Wkb52rvbyp2hZbty8l5YvtS0kttm53Slq++L5e/XdT5adv
3Y0+naWkRttYf54PlzqrZP0F6OOe4bBNfU4/pKR30jntbL0GVdaWucBNsZ8O
RQPOlIhO4X11WFUmYc1Tdmx1zdbteJa0WmquOXyuNOI37qK7JhNpK6ttsXWp
BDQlAtEs/7W6u54lrQrsSEmz1cRletpa846tO9Epz5JWBXZ83W4Kfn80S6Wn
u75xl1pqx7qOtKS+krB5c1VTEMqiBVIt2d2q4bxkM59HSnonndPUwfNheEXL
X+Om7B3yvGD4uOHg86Po3fuRjU1t3cGUlJq4qeZTUlJm322KM9HdsdzRt6Sk
aIGtKencZ0nLClts3fFnSeHrfdVu3boTHUxJ0QL7HvfUpKGtle/okPwG1k88
rtjVlZWsXiwr/yxyUFg+Myus/9ka7WJak5LeSee0tqmHa24bMufYKZ2Swhfh
7XQPKSlfYEdKioaj6fA37lps3SkpKb/Hm6akfIF9KSmVdDalpNXrFlu3OyWl
Jk6veZaUL7D1QVL9N+vqKz+YkuoLtLt/PqXm1LVp+jXyhMU2vXi8dnuZpqSk
19I/jUy/qilWU2d+buq2eTUr9TYfiCpvvBtdBabt/7+k8IHRFHPBN+5qtm53
SqrPxY1SUs3W1eSXfOTJFKipaq6kxdYdTElTkImm2MOmh6WkomnwlFS5jZsu
AXeZEsnoE0tJmWXDzUwt9VSd72hSpKTX0j8trM6Ey7ftLotz5PlaxZaoaJlw
Yr5YOL3FQTU1+P/D7vtrtHVbs0x016R2dycpaW5PGGHm6WHjowvm366mL+tp
sXVbI9LKcmL0tZRU81278O1qVmqRG1PSKKbtKSnzIqzqPT38PfDubgWbSUmv
pX9OFz0Nztflpuvd+jyi0V+je9Hb81E/KWm4fRf9MdH1fz2kpHZ/70xJF/y9
/Cq5ungt34avP79eATPLLuu/bFtuJyUNSkp6Lf1zulSXtu7qx99p356PpKTd
W3d7PpKSWpOSyIs+gfq87CZEShqUlPRa+ud0N6akftg6W2frrnf61tVrkZL6
cUoXvdwUS0Zv61uH06CkpNfSP6dLdamuBp7q9JTE9VpfpJap85154Z1b/QBS
0mvpn9NFT4POjcCDSUlDKz4181jtFPpwUFLSa+mfFlZnQidG4NmkpHFVfrfQ
Vew4NwODkpJeS/804mvtwHtISYOqv065kB3nfmBQUtKb6aJ29C3wBlLScIJ/
o6I2JS1/W7RvVvgibFW0tXPh6Bc2UvVHa65Z++mhRkoalJT0ZrqoHX0LvIGU
NJYwItWnpE826eRnhS9W2Se6umjhcKlousnUnFp7qtrjpKRBSUlvpova0bfA
G0hJA4lGpK0pqcWLYkoK2/+JRY+wnprGr+qp75l6UtKgpKQ300VN6V4AujJ6
SkptUaqplY1f1tPi2i0lDUpKejNdVHOxSPXS6hOt+gUB4Eajp6TVUssXNTXn
68mHsn2kpEFJSW+miz5BJ2TOz6mJW+MVANyuJiWtPg9cvV5OTM1a1ZMvHL0E
h/Wk2h+uN1VDqvHhWk5xeoVcQ0p6M130KcWi+URav0h+IsCT+F3S0B52nep2
c6SkTVZJtnKRTFWZ+ivrOYuUNBBd9DkpJVXWDPAwUtJwHnxt6nbTpKR6pz/U
ywSoHUsdJCUNRBd96lJSauL8NvVhxZkNhftM73Z393dNShrOUw/pngdstw3r
TdhLx/stVUO+5kb7S0oai17KD8nonVLlKNa3jK7nu44r6YcMKWks9Ydx68N+
d+UjjkQnkEqZXsockPP05YtVnfOUVZllnat6VtNTNWwiJY1FL2Uiz2pWanp0
SmoijMIBHNInISlpLJuO4dYH/KbI1rQlrUlJlWqe++TvuMIIE53yCfJR8UW0
zq2kpLHopVQU2j2rZjr0zAU9Q+esSEkD2XroSklncd6odEpKqnyRij+pF6mJ
m0hJY3l5L02BcFb07WrZTP3tGg+NOG7z9M+SlDSKHcdt8ZK3/JQ+9dF9fql8
JWENmevyqtqu5G8VmIW9FO7T6HG140VYZ/5FauImUtJY9FJTupfhOGhr6KWZ
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
QJSUdArj69ncWdUrpo9UkiqWl5KWHJD7hLEdGqlJSZuSzvFnSavmbRoI0Q+1
Dl4cpSQ6JyUdZ3A9npS0SficKDUxNWt1CV4K564qiRbOL1Js4UxKGt1UnYjh
oFVsWSk+JMqULy4Vlsw0Mj8WMqfWucCRLro9H0lJZEhJBxlZb1C8jtCn00ON
lDS6KRbGoYVotLnlr3ic14yFKfjgKzp9axfdno+kpKhoOr7Ljf0gJR107+7j
GrePU/aRkghNiZs9ONc0TkqaG1w/d5KSHu1nh/zRH/2vPfxJSeMyrF5CShqU
lEQo7DoDnBYu+ZS91qY2p2ZF39ZXHq0zE1u+Vq/rZ0lJR0xS0l+TkqBo01WG
fkhJhCpvAuGgn0fUP/pH/0cPf1uP7cpL3o4UFtaQTy7F1/lZUtJuUtKXlLTJ
vg9nGJ3dPSgpiVCm64x0TjRuSprb33o47EhJ4SKZWVLSblLSl5Q0K54QVgVc
T9/Dvh6UlESo2HX6llOMnpLmrWg3IrampGj5/KzMXCkpQ0r6kpJm+edE9RN5
Hjt6UFISofqvEl3QGB7sGSlp3pYWI2JTSkoVTs2afv2xkpS0SSolfTtz9fY7
ZQpkasiXkZI6FO7f6dcnR6mlrmogt3HLNCgpiVB91+lkjnhSSpq36NxBsSkl
bX2WNG35Jp7BvpLJL6tZq9CUKlaziJTUs2hKms8JUtKbSUmdywze6122ydes
6Hk2dd2V+5SHmRYpaT4/hPklnF5TLHrySdVw7jF8Ym1Ty98lZRaRkoqmbMaZ
tiejIymJIaQOpIsPXa6XOQDowc+984//8f/ew99lx4kDcrcdXae32WEKosqU
iD/hxOjzoOjb6Iuw8OmbdkqdU8t/4276NSUV13V8c55kKj0JmgtMsciTmrha
1rOkgeSTUfSc4Ob5JezozklJbLIvKOlzNonmmil44lMslolO9ZGq0QYerDmT
XObbsNXr+ll/ufhF0nKilFSjmJLCuLR67pNPRmFJKalzqXy0KpB6y4PZ152T
kthkd+/pduo9PiXNm3lkQBW/C3fNn6G9sjslRZ8lrWrLv+0qJTGrGenFJMUj
2d2dk5LY5Ejv6XkqReNPmIPyxfpPSfPG7liLlNStmpQUJqDoUlISPJuU1Dkp
iU0O9p4TAjV2p6TZQClp3uTUuqLTp5407pvBTIf/jbvVxEyxzLqkJOifU2jn
pkRKmi9/0YnLuauS4YKpSs5NSfWLOyCPOKX37ALypu0pKbXIKClp3vBwSvQy
+nPKj8+PHv4M55VUcpl3ZfRbdqtZqQIrmYh0e0ryuyQokpI6l0pJYboJJy6T
UaZMKjGFSx3ckNNLEjqr95wZyKiMPPtSUjRkdZKSPonfcUtJAymGl8v+pCTo
nHuhzh1JSZm8U1ykaUqaj7rU3cWRFb3cub1nXxC1yjhfYcaZp4dlwlmZMql1
3ZKS5h4IrQrcno+kpCgp6UtKWsoM5+jbcLxf11YuFL1NpR/T3pQ0ZZ8K7Uhb
+46T1L3E8sBztjnR6b3nFEFoSnxH7vq/ew/O/J3V7flISoqKXpXucmM/SEkr
U/pWJDMrNYVnuH2ckjdtT0mz3SlptXiLb9xtOv9Qr1Hv2SksTVJS+mZ7nnt7
PpKSGnlGl0pJK5nss7pVjt60POOoYEVK6tyOlHTKs6Sm37j7SEkttQtKdg1f
VZ+SX6XDTvhkU9JcbPW6fpaUdK9ndKmUtBLu1mmRksK3q2LPOCpYufcqQ9H0
xN8lfXzjrqWmHWjvwKeUEz+lZ0nLuanX+VlS0o2e0aVS0koxJX0SgSh1M8MD
SEmdq09J0+/+3e/KiRenpHC7Pv71hjZad6CTBp278fhcZqWtKSlcJDNLSrrR
M7pUSlo5kpKWn5DwJHZr5zIRZiU1MSwfrSdfrFFK2jqLGtd0oN1Et3o4OLem
pGj51KxlCisGqB5642Ge0aVS0kpNSvrU/UaJx5CSOpdKSdf/SUmjuKwD7Sn6
FL2lOfFiV/O58aaUlCqcn1X5jMk4PSj8+DHl7pZuIyWtZPLOvlk8wIhD+1Ue
mZLy1xQH5EFXdqATCP1I3bguj9LTg1Jmpe2eJUlJ93pGl0pJS5nMG50SnTVo
XibDDu1c/lp8scs2+ZoVPdX1HWiX0ZWp+oPfI6vInyqnxr9LmqSk+zyjS6Uk
KLry7pcT/bbQZ4W7OSAPuqUDnUnox40paVlga0oKU09mVmVEkpJaeEaXSklQ
5N5mUFISKTd2oH1HD8KUNC2+EnPWKvJP2zMRZi6/el0/67UpqZNt6aQZB0lJ
UCQldS71ieUtLtvka1b0YDf24ZWHCtSYTv3XGypPj9OBf7u7MvvUlzy+1Z3o
ZFs6acZBUhIUuaXpXOtL7aaL8mWbfM2KHuz2Pry9ATA7fjRG01D+4yMpqYWw
/z933MY8o0ulJCiSkjonJbFDD33o3EIndh+HxRyUqTn3VP5y+za/H6mNWm5d
/WZe1+8VWnVZBSkJim4fp+RNUhLb9dOH/bSEd9p6O3rWHezPxf/gD/5dD39P
GoOrbZl+fbRUX8nt19OLr6rAPlJS5154PndAHtdVHzrJ0L/TP9uXklqQkoAr
uYHp3AvP5w7I4zrsww6bxMs1/eKTlNRCmJLmKVIScDopqXM15/P5Qv9j8b8a
XEmVX07s5HzugDyuzz48/hWm6aYfa/Mk7ZLRai2356PnpaSV6AmhuHOlpC+/
S4Ii9xudqwkvq/gTTT3R6dOv/yeOTs7nDsjjuu3DgyecfR8dQ9PHRqk13p6P
XpKSwon53b31s8fM3JpLZw9X1SgpCYqkpM7lz8Dh3FRK+rF4zJRKWJ2czx2Q
x3Xeh7ubt/rE+KTm8FgXJ6PVqjOx5Wv1un5W+FZKWk4MrQpURpj6zyelJHgk
KalzW1NSfYCafOPu0Trvxsozz+omR0qiKHVvfH0z8sml+LqyWDEoPXWkpPZy
NCWtTiNS0kdKggq3X0rIa5GSinOlpAcYohu3NjKVmKCHZLS0IyWFi6RmbU1J
zD67UtK0+Ixxyn4rQ0qCJ5nPG/Qpf/rNzA1nTZ4lvcko3bjpFDTf5IyydTS1
uvvtyrQxJUXLp2ZNi6/kvfkbd1GpcLQssCklpZLRkpQEj9Tn9YXZ1pS0ikLh
rNQnYFLSw4zVjZWtHWujaKTbZLS0KSWlCqdmhSFLSppl8tFcYFNKWgal1BVz
X1CSkqBz/V9rXq4mvNSknmh6kpIebLhurDkXDbdRnCV/39uhTSlp37MkKSmq
eJBISV9SEhQNdNF5p5pzb/jQfwpUlu/hfO6APMWg3Zhp9lg3yZxi3J2+NSXl
09B07HdJd3dGX/alpMrPIaUkeJJBL0Dvse/c2+JPShrLuN3opPRywz02itqR
kurTkJR0xI7PHpcvojq/qkZJSVA0+pXo8aQk9hm9G0dvP5s8IxktZcLLvKWr
1ztmFSOSlBR64VU1SkqCoiddlR4p9cnVLS7b5GtW9GwP6MYHbAJ5F59brjRV
5Jfdf5sqf2T3HjFJSX9NSoKip16hHu+3hT4r3MfReKIHdKYT1PNc/8HLLaSk
bklJX1ISFD3+UvVUUhJFj+nMx2zIm70hGS2d+RT/sLs7oy93741f3NgPUhIU
3T5Oybv3BL6Sb+QpG3u8EmZP6s+zjjGuVHP2AG4hJUGR61fnpo6/G1CZoTZt
7PFKmD2vP5+3RY8kGUH/pCQoci3rXJ8padOTpsrNdByu7Hna18zdnfE3emsP
XwePluMHW+WCjh/4kpKgyCWjc1NnKen0G2lHYMrPbvlX/+p/7OHv3h3Uf5Sr
b+EF7tr2g5VEXzdyfS/xPI4ieINbLqzUm8ZJSUPc1A1kkpIG8bN//sE/+D97
+LtmT50+fi8+wBzPHOcogjdwp9q53lLS3Cp5pzUpaRQvSUlNR/qq2nlFqRdz
+cy5KFw2ui7YwVEEb+D+9l7F/s+npPmu4Pt6OWU5a7VIqob6lLRsvJS0T82u
vz0fSUk1HpySrhzgqSwTTT2pYuGsaD1ttoAXecBR5HdJUOT+9l7FoJHJL8tZ
y6QT5qBosXDW1pS02oqW/fRANbu+GF6WVhN3vL03JVUeRcV+u75h0+NS0pXd
G666+OKTzkSpWcvNcbLiuAccRVISFLm/vdcUsypQjEirKZlZla+3piR2qNn1
NU95wtfhi+LEflJS/v58Neua01exYc9IScXOv8bpKSlfD+zzgKNISoKi26+J
Lxe9VV7ulPqUVBOgpKR+1Oz6gykpWjJfrJ+UFJ6aoierC85gNQ2rTzHhlK/w
bXS9p6ek6BZdbEqHneiL4tvKCi8TH+evcXFvX+MB2yUlQdGDT2IXuODiMvWU
krjM59SUFBarqbyHlDT3xid9W9K6eTUN252SVhOjr8MXB1NSuAn3SrUn0+ef
Ld+py9fTTledfKNH9sMDNkdKgqLnnbvGUrx8Ty1T0ir71DxLcsCcpWbX1+SX
Wep7dOHcmppTa7nLJ5uSbm9YfUQKC0+lEFRZfzElLdtMa/o59KQ+ecC2SElQ
5KJ5r/COKyywNQplZqXiVWotqW/cOWaOq9n1m54lVU6chnqWtCqQWvD2hh1P
SZlKjqSk/DFGC3o74zGd84CtkJKg6DGnrEEV+z+TX1LZZwqeFtU/aapMSTUt
J69m17dLSZuC0i0pKVWgZuL1Ddv0dbtV+W+1NQvWpyTJ6Ea6Pe8Z/fOArZCS
oMiVtHP5CDPfC2V+PZQpHxaoT0lz867vk5donZLqg9KVKWlTmWtOXzV5tjLC
zNo9S3JKv5fOr6GXeiAlQZFLaufqU0zrv9Rx4hBqpBhh5lvi1MTlbXl0kWgN
d6WkSqsPAe5uzl+pSTHRZJR/xrQ7Jd3dH++l8+vpq9tJSVDkqtq5/lPS3M7L
+uQlKh/0XPBn5+adlZJSgWhTSvoYjPfR8/X01e2kJCiSkjo39aSmqdd0yxtM
UtIgpop/oPsrfJuZlZpSTEkft6A3yXT76vS4PKluPdOG1W5acN+xsaz/lKNr
9EN09PZ/pCSo4M52UL8tdFWhw+ksUtIoKiPMBX+r+/Ab++SFaj5HSr09suMu
2+nnVj768Tl6+z9SElSQkgbVbUr6OKhOEn7CfKO7O6NrU5cp6fOIG7mBFHt7
NZRSr4+st+keP7fy0Q/O0dv/kZKgglugzl18M5y3teWN+gS6cve4/EW0bbd0
y9sU+3n69VdjUyzdpCpZFpjSWTi6+PLYWC4ePXhWtYWVh1WFi1QedUMfmUM3
/ktKgiLX0M793Dv/4l/8zz387ThOHF3QA8PwApUp6RPEpU8pXETzSHTZaEzO
rz3MX5kCWxfJG/qwHLrxX1ISFLmP7dzQKWnehHP7BNjKMGztYErKV5K5Uq+m
h2+jBepDUGXJmq3It3wsQzf+S0qCIimpcw9ISR+HGWnRT8KXb/MflVNP7zVV
n5I+2d8oLQuET22K640WS4WdTFKrD0eZOvOGPiCHbjxQyY1H556RkuZtOaVP
eJjih+r5+0nq6b12NqWkz8ajepVcKqv9pBNNNJdFC+x4llRp6KNx6MYDlaSk
exX7/0kpqWZ7eaEdKcmjpd10WiPFM3nm2U3NhWBZOKw2Vclq+vJt/nW08qjo
IhUdNvahOHTjgUruNO61usREC+STy9f39XLKcla0/HLiZSlpudXwNW1PSam3
1NBpLYzVq5kxdVmdY/XYytCN//K7JCiSku41xT4VXBXIxJZV/Immnuj05cTr
U9LHgcfC6nPpeWK+wOcRNyp30XWnG6tLpaSDhm78l5QERW5W7xXt/OVOSUWY
cHoqJRWn3JKSMpvP26RGQbGA4+cIvXeu3vqzOECinzycstLKOnvrsbeRkqDo
JXca069S00MXlMy09rMlJVVmoq5SUqYTeI/UKMgXKM6iSO+dqJPOrBw4Pei8
eY8nJUHR4+9RO9/AVdvC1j4+JUX7gVeRkm6kA8/SSU9KSVSSkqCo8xBxxBCb
Nj8wyjxXOj0l5d/ekpI+2/dX8Zndldp1y+NF+3A5sViAg3TjKVp342pEhNM/
wbiYy0drWNWWqqfdWBv6wBu68V9SEhQ99U5jlI0q9v909u+S8nNvTEnz9oZT
oqv+OfFP/uTf9vA3ysEGKY7h4y7ow3wCCpuxTDqpYpX1nL4t7aq9xtCN/5KS
oOiRKelJW5SJMKnsM6UfFUWTVFcp6ZP9pHRV7PZ8JCXxGI+8FlzpmpQUvo4+
PwrLRF+EZ9p8XDrX0Mfb0I3/kpKgyJWxc/kIM1/XwinFWakabk9J84Z/fv1a
XVjg9nwkJfEwDubdbklJlc+AwnBUv7iUFDV047+kJCiSkjpXk1+u+bv+OAkT
32ru7flISuJ5HM/7XJOSUg+DKlPSjomNtmv0w2z09n+kJKggJXVOStqXkuZF
Vq+/b2uKSUm8lkN6n9b9tnoSNE9cniFXL8JFooEorKf1Fo1+jI3e/o+UBBUe
lpKetC1fYVK4UQ8bvixQDC/F1/lZUhKv5ajeoXWnXb9T2q1x9ANs9PZ/pCSo
cP3db1NP2pa83xb6rPCImrC2LyVNv3tsJCVBngN7q4elpKarG/Ho6uHzwxNJ
SVA09BgPPWlb8p6dkpakJLiLY3urpg9fLrtet17RoMdVtNmDbstHSoIKUtKg
3pOSVuYjtibRZDJROHFfRJKSeDaH91Z6LG/o/lk1fuhtkZKgSEoa1GtT0mx3
SppJSVDDEb7Jw66q5xq9Z6QkeJWHnc+ftC15UtKOlLRaJPM1PCkJlhzkW+mx
0DP6ZLkVQ2+RlARFUhKDqgw1mZ8dHf9F0ttSUvgbsVe5u/tvpge2cvx8sv9n
8EHNG/KYLQJSnnTu+vR91lpeKeb/5i+jU/BwP7O/onOv6ZBbjqJpY0qa+yf1
VkpKedhNzm76Yeu2x9PmTRr1yaC9cZm7e/18k5QEr/Gw81i32zL9+ow+dZpN
FQtn5euP1tDU9T0/Hcg15/51e9Sd4tlbt8+b+2TTtv8s/OPzo4e/N+8yTvew
Gycg5WGDvc9tyYSayryTeZ1fnZQkJe32sJPDud7cOaltj57Nbs9HUhKne8bw
97skKHrGYJ/1uS2ZVt2VklZfh4i+/cTS3HJW8QFWqvAppKTWnrpdZ3l5/+TP
XfOU2/ORlEQLDziipCQoelhK6lNvKWmVffJhJ5qYoukpfBtdxVmmnpy+dbd7
5Ead7qm9VLldq2LhUpOUxCVuPPnf60inSUlQdHygUZTp4XDWlM44NefGcJFN
ZaZEzIm+CCdGW+gAG45dVu+RfVW/UfmRPsVS0nyK+L4Op8+z5tfFt9EpUtLj
nRIWhnakB6QkKHr5GeYamSi0KSWFyxbzyPUpqbg6+nfuLpt+tZq4421Ngy87
sz3y8F6N8Xl0F89I4awwraxyTXR6ZmL0dWqulPRg9unSjt6QkqDoYSmp221J
ZZlMYAnfRqeEszblrFT5/IvU3OJ0hnD6/qo8xooTa+rPTGxxHD7p2J5iPokh
v1owOmsVWDKhKRVtMnOlpNd62H3LWbZ2i5QERQ872/S8Lcu7jtWUcFZYPr+n
ovVEq43Wllkw+uIT3DilbqjCiXSuxZ5aHWyZFYVzi+2Z0rfoxSnHPfLADs9F
qVnL6dEOz6ekmgyVWWr6NUZ92+Abd49nb6Zs6hkpCYoedvv6pG3plk5+thtT
UlispjH5lLSK6qdv3SOHw46UFJ2VT0nzHol+By+femq+sCclPZJdmVffP1IS
FElJg/pt4eIK39PJ79QoJYUhJbwVX82tbEkqdoXpqdGh+7wRkdk1J6akyi/a
1TyBkpJewn6sUdlLUhIUSUmDuislNfpAnn60fpZUOXHTs6ToYRmdUt/meo8f
DquncvliqynHU1LNl+6kpJewH2tISXCWh93xPmlb8m58lsSzdZWSwmKrQJTJ
QZ4lnWXrQ73llHwsiuag/EQp6c3sxxpSEpxFShqUlEQjvaWkfJOKKSlV54ke
f9o5MSXNvyf6ykzMvM0UzoSpBh3DpVaje/VpyVJ+2U0r2ldD/YqOn53CTZaS
4CxS0qCkJBo5fRBFb12WE8Pbm/zbVM3ROj+Ls1yj092zTzuZO8+wZDgl85Oi
E/+KK3r2PnqJfBY4HjeKa2yhuIodQ09KgrNISYOSkmjkPYPoLHrsS0qiKSmp
vkzNUlISFElJg5KSaOQ9g+gseixl6sndncFR05aUtNzp0derYqkXmblh81az
lmVWB2GqGdHX0VnFxsQ7cUFKgqIjl4/qq9PbnbvLvqQkGqk8Yvcd2MsR0Who
RNfVekUXrAVebjXQUm+jJ5kpyC+pMtEX0WXDgb+ctSxT34z6VkUrSXVOlJQE
RTtuJJre/D9Six6TkmjkgvByWf1SEjxGfUpKTczMyr8ozs2XWX1qWqw2FeKK
lWSmhKQkKNp69+5+4IgTe09KohEp6cgagUaGTkmplu94lpSpJDMF2KE+JXl+
dIqzulFKopHU8bn6GDP6CWfqc87wgh5WFS4SLhiuPdWY1bqiNaRaEi2QGbZO
jHCBTEz4/DrMUxPDU0F0wZqqwgZkyqTeFkvW1JlvCXBE/uq/Ktm6MS9xSk9K
STQSPT4rr/6fIPVUXvTziyybUX9TEda8dUPyfVI5FzhF6oQQ3sasJoYfenxi
J4qVVeHM3Pxa8oVT1UYXzFeS7ytgh3BwpYpd0Jj3ON6fUhKNRA/O1FV4SoeL
KXaLUrNIOD3atmL9m9ZV084Up0e4wLkD7dnDtmbr/C4JimpS0rNPJnc52KtS
Eo1kjsxUiMgEk/pwlKkz2rZi/Zm5y89pi4s7Q0IPpKR6UhKcQkq6i5REn/Lx
JPMsJl9gx7OkaDPq6z9rojMk9ODEgbZ6cHxKbZvKn7Leg6uQkqCoaUpanoju
Oh1dYF+TpCT6lEpJq4SyHNqZ18uJedFFom1bzaqpZNX46Jau6sn0RrG7gNNd
PNY2ra6380BNe6QkKIreiqwK7K65fi27a+6kzh2LH1yjlEQ79QfnpkBxvM7r
b0WkJOiElFRPSoJTNEpJqQ+BTyElfaQkWpKS6lfX290RPNWRz2yjz5TnifPb
1dywcHRutJL861Q9Z5GS4BSXpaTVGlNnqtWL8KwSLZCvp6ZktB/yS6Um1jty
bpSSaGfTkdniQh+ts90dRaoBlSVbNwb4HBtrq6v5amLqBiP6orJwWD5Vj5QE
3bo4JeXDTiq/hOXDt5l6as6N0YiUXyrayE2kJLrl5r+GXoLLHExJ4etMtPkE
l/h9keoTu0NY3ai0ICXBKTpJScUX4cTViSuzeH3JsLU1MS2zvXlSEj0TAfL0
D1zpxpRUX9UndofwSXzku5p+lsoKpSQouiwl7f4QJlU+tYojJSvLSEm8QdOP
OkenZ+B6u8dd/cek+y79mZRUrEdKgm41Skmf6jNJ8UX9GeZ4yWj7pSTeTBwI
6RO4xcEbktUdReZttPBqVn7ZYuFwqbNISXCWdinpEzt1hBOXb6MvPukz26Z6
KktGm7o6oa1e7D7XHelbKYnLHDzOn0EPwO12j76Lh+29Z4nKtUtJUFS86A8x
2AclJTGi6KcHj3d3rwN/Zd9gvHII33u6qF+7lARFxRuAUcb7iI5snZQEwAtt
vXRe9lnH7Z+obFq7lARFPaekrZ/ldhKp6s+TUhIAbHJ7GOnT1j6RkqCo55S0
lGpGJ81bkZIAoJ0+r/532dEbUhIUSUktSEkA0NTLfzx4cNulJChqlJJWIzcc
yNG3qyG/qiFcMFM4fJvallThmg1JbVSqQLjq1KwiKQkAZuGNxLPd3d/wfMWx
tmMkTr9Gm+nXHJEpUHyRKZBZ3ScdlPL1736bam2qo3aQkgAAoJGmKSl8u4oS
W1PSasFo5anVFdsWbVi0tlThsCX5z3ykJAAA6NAtKSmVfcJF/v/27mBJThAK
oGj+/6c7i1RSjMAD0edI5pzVtCJiZ9O3tDs33ksari2Y9tR9qOaWJpUEAAAv
lFpJw3zo1cTzlRQv7NTLYLXNU69RSQAAkGRYSZ/VUKpvxzS3HB5Oaw5ojixf
HmY4zNYcP1zq4UTDwfWxzdOVx558U79QSQAAkCT4GF+OyV7DY+d6D5UEAADv
pJK+i0oCAIB3mqmkzyOhNLmS/8P1K1VJAACQZL5Nfk7CZLvlnVRJAACQ5FQl
CaXr7noPVRIAACQ52z5C6Yob3z2VBAAASRbuEPV+JZumpPdKJQEAQJLrn96r
/1yIL+76lzpQSQAAkCT1kzx5VBIAACRRSZtSSQAAkEQlbUolAQBAEpW0KZUE
AABJVNKmVBIAACRRSZtSSQAAkEQlbUolAQBAEpW0KZUEAABJVNKmVBIAACRR
SZtSSQAAkEQlbUolAQBAEpW0KZUEAABJVNKmVBIAACRRSZtSSQAAkEQlbUol
AQBAEpW0KZUEAABJVNKmVBIAACRRSZtSSQAAkEQlbUolAQBAEpW0KZUEAABJ
VNKmVBIAACRRSZsSNQAAkEQlbUolAQBAEpUEAABQUkkAAAAllQQAAFBSSQAA
ACWVBAAAUFJJAAAAJZUEAABQWqukX381d8Xzl1uCeZqH//m7eVQ55+RSAQAA
agsFUWdLb7Z65t7emeCK5y8Dav4UAAAAB3mVFCfScNepLTNlpJIAAIAZN1bS
v7s5n9adnea9nuY8vcG9R+wW/gYAAOi5q5KCGupt6c3ZG3w4r0oCAAAy3FJJ
a1t6L3uDF564+xS/3qCSAACAGXdVUq0eE8wwPEVz5EwlBRsBAABqN34vqdwy
WUm9AooPj3cNH+cDAAAIrD2KFjzDVoZPfVPp8IWj4HG4enB91GFX7xRnrw4A
APjJdAQAAEBJJQEAAJSWK2n+RxJ6D9qtnfTi146GZ384GyUqAAC8zfL3kk7t
qn+NYdn1rBjO8MApAACA13q4kt4QICoJAAAILFTSYXz9DFvvobjgebzD3/XP
1vWmCp7l613azDKa5w2WOlxG88BgtfW7CgAAPONiJTVvEjUrafIeU10f8YDe
yObChluayRNccrDI+ly9sju1eAAAINtdldQbUG7pDa6r4fM1WIIBn1baNGce
rrmunubKewUULzLeeLjMhX8UAADgLk9WUr1rpn2GU9W1EpxxZs6zlbRwLymY
v74WAADgSXdVUpxOvb3zlXR25Hwl1feAvrGShosHAACyrd2waN6+qXeVA8pP
/s2XpXLa3rHNA+uFBRt7y6gXeeoqgjX3LiE+BAAAeNLap/HgEJ/tAQCArS3f
s2geJZEAAIDdebILAACgpJIAAABKKgkAAKBU/+YbAADAD/cbgYkCvQ==
                   
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 7->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/v9UyDH3QLUlDuW6DMG4hQOqJIESmelYJIkyLaFbsRza6yQYq2iW4a
SkRLgyho6FghJCSEroqCN8DboE51uPY5ery+PH/9Z+wZ+/PRT7fOscfj8dhj
+3t8znX/x3/6l//sz/+DaZr+zX/08z//7E/+7X/6V3/1J3/9n//Rzzf/xV/8
m//qX/3Fn/2X/9lf/Nd/9q/+7K/+kz/9D39O/Pc/y/7p35umv30NAADAyufz
+f4XAADg5ZZBCQAAABEJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIA
AFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoC
AABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElK
AgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJ
SgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABg
SUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFi6MSVNwAhuOT8AANzoxrug
e2/8gEq3nB8AAG50412QGzDonEEKALyTlASkGKQAwDtJSUCKQQoAvJOUBKQY
pADAO0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALxTtylp9/+xZbnI/N/QqmSq
hvrVhUul1nukqUfWkl+qZmOjbU71WKZkps7lxGKZ6Ipq6o+2rbjJqTbkO3ZK
HGypaotvM5uW6aV9zq0NAGAUN94FFVe9uqWsrDNaf3hvma92U5+kKq+ftaOp
4fRoyX1tS0m1ubii4q7MR49iCzfVn2lbTf35t5X7JT+rfq8Vlz1ISgIA3ulJ
Kan+LrRYbaOUlJm+tam7Y0XlnfnWNtTfyUf3e7Tm+hbW178pfOWbl2nq1imV
KanYLaePZSkJAHinZ6ekcFbljffpKWnHDX/984X6KfuaVFOmfmfVJKCDKSmz
7L6j/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT
6402oLh4ZbXRYsWJ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4ti
gdRN8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnT
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
D0hJU8xnY5Jt11QezOUG+iElQZHLVuf2paTVi+ufJYVb0ajwwaX6XNH1z5I+
QZI6WDmkOGCgB1ISFElJnZOSmi7V54parCKs86yUtKM8APeSkqBISurcwW/c
RadfnJKWX+uqLL97RfsWfMNaalLSjm/cZeqHIhcguIuUBEUuUp07+Cyph5S0
Y5NPX/bExg+akop1hr9OOrd+SHEZgutJSVDk8tS5+lAzP7IJ304L+yKSlNSi
qovXUpOS2tUPeVsfOgNHSElQ5KrUuX25JvXVuyN/Q6Sk1OKrH90ceW4iJbWu
hJdzVYILSElQ5HrUOSnpyOJTzOfXw37r6sZNSZlqT/wY3/mEU7g2QVNSEhS5
EnVud8BZfePuPSkpWsNqyipJHay8hYtT0ohrAWA3KQmKpKTORZ+G3OWyTT69
hklKal/z9WvhPRxRcC4pCYquvPvlRL8t9FnhbqcckJlY9HnxN+4+xxLivrXA
KVyt4ERSEhS57gxKSjpSyfTKf71hrvma54NOLLTgmgWnkJKgyBVnUFLSkXoO
ruKCIdNoFRd/i9K5hUYyB7CL2nGF714/3d3dfxEpCYpedU54EinpSFUHVxFd
fB5Kp4yp00flXfcDTi80FR7Gb7vXPZGu+3pJP0hJUPSGU8EjSUm7qzp+BcyE
r3lWiyB20F2fmjrD0Npy3L3wocApdFfo2X0iJUGRS8mgpKRbasvXuZzeYUr6
XP6Nu+V6r1kRL3fXET40HZXx4M6RkqDowWeAZ5OSbqltVefqTqz/lPS56cN2
JxkuEH1a6tgr0kV5+gdey0VkUFJShxWmEtOJqzjFLTeQt5xnnN9eJZWSHAMZ
OqeGXoJ3cgUZlJTUYYVTx/96Q1j/9WP/rtU5xb1BJiI5AFL0TD19BS/kCjIo
KenGOvMpqekqTnTL2L/l6ZVT3DsJSkW6pd7z+srvkqDI5WNQUtKROg+u4hkp
6bK13L7SRmvMP7y4WIsN7MrdHfyLuzvjNE/altae11dSEhQ97Jz/HlLSvmpP
uc+JLn7uHVR9PdfdGlY4feuOa7eunzX/7nd/08Pflf15l5/b+Md//L/28PeY
3n7Mhlzjed0lJUHRpnsb+iEl7ah2x/18prZTWnW8/p8lf3x+9PDXYUpquiIp
6UpS0umiG3LWebJy8RM780ibL25qJ6QkKJKSBiUlbapw91OPTJ2ntO14/SOm
pE0beISU9BhS0ulSG7KcfjAobZp+xFxn089qHrPrv6QkKJKSBiUl1dcmJXWY
kjZtY5+kpCtJSad7ZErqbZGeSUlQJCUNSkraVKGU1GFK2rSZ+3iWNJD8wNya
klbj/YUpqXii25qSVhVGT6rLMssXq9fRwuHbVCOjhcOSqQanmpFfaWb6oKQk
KCqeSOmTlLS1zvCCfrDCUxp2vP5p5JS0aUt7M1WkpPl4W73+vq0p9raUlLnj
3RFnoq/fk5I+2Ut8Znq4F6Zfs8/qbeZFpkBYZlUsmlkyrYoWq29GZqWptQxN
SoIiKWlQUtK+mnekpKnauU2tL5nKLEvh9LBwtMyqfHRxKSkfYYqv87PemZJW
Y2qSkjZa9V54jkptyJTIEctKwjL5F8u1T0E8CaekmlEsvCoZNriynlSF4cRx
SUlQFJ45GYKUtLvyIY75+hZGA8scW4qvUxM3LXskJW3a2K4cSUnTHx4bSUmz
aEpa3uWelZK+da7e1tc/Sm9ngkOmwCeRFKIpoyZo5ANIu5SUakZlPVIS8JGS
hiUlHam//8O+2LzlPeRZKalYPrOuIympZns71FVKeoMdKSlcdn79fbF6u7Xa
qOURcm/J6EE7F4sW+NTFh3DZYsnwRbS2fPli4dSsmmbkK0xNHJeUBEWr8yqj
kJKGWMtumRuY8F7oxGdJUywQrWZlVvc29SkmH5dSxTxLWs7d/Sxptexc+b5v
4o3S21MQLsIp0aXCnp/+EDTC6dEpqz0YfbuqYVVbtHxq1WFLwvak2h9tdnSl
qR4bl5QERdFTAf2TkvI19OOUTsjUNmVT0lLlN+6mIBOtFm/xLCm61Z2bjqWk
mZT0lR8400kpaUo8S3pqSsqfOg5WfryesTxsS6UkKDpyI8eNpKR8Df/yX/5P
PfwdvA+piVr5lJTJQZtSUuWzpN0bu9yc45VcY3dKWi04pb+G98KUlJm7OyVF
E9N04Bt3V3bLbjWnjiOVn1LPWB62pVISFElJg5KS8jXcno+OpKSacLQsfG5K
Ch8e5ReUkuqDUj4l7YtIj0lJeVtT0jyIVlP+OPi90qrYY1JS0cEN2XSa2lf5
kQItPGbXf0lJUCQlDUpKytdwez7akZJWdx2XpaQp9qgompLyQemsM8koZ6R9
KWney6m3UlLU1pTU7u8xvd15yigW3nqqPO4xu/5LSoIiKWlQUlK+htvzUX1K
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
nrywN1ab/MIeACnpLE4gDyYlDUpKeok+e6PPVtUbvf375FPSe56nzNu7mgKv
IiWdyDnkqV5yWXweKekl+uyNPltVb/T271P5LGn0zll9tzA1d/TNBPrhfPJU
LhaDkpJeos/e6LNV9UZv/z6rZBQNC6P3TLiNNzYGeA9nm0dyHRmUlPQS3fZG
tw2rNHr7dyh+x2z0y0H0ydEtLQHgAUa/LL6WlPQS3fZGtw2rNHr7d6j8Jc64
PZPfqHG3C1rwuyQocu0YlJT0Et32RrcNqzR6+3d4bUqap4+7aXA6KQmKpKRB
SUkv0W1vdNuwSqO3f6vVv2kQ/UXS6JeD4rOkobcOziUlteAk8zAuHIOSkl6i
597ouW1FQzeeqNTvkjxLgpCU1IKTzMNISYOSkl6i597ouW1FQzeelOi3CqUk
CElJjTjPPImUNCgp6SV67o2e21Y0dOPJyH+f0H6HLympESeZJ3HVGJSU9BKd
90bnzcsYt+UAx0lJ7bi+PIaUNCgp6SWa9sbUk3abmdr2i9cI0A8pqR3Xl8e4
5f6E46Skl2jaGz8r//H50cOflMSVbvokoBd3dz9dkJKaMtCewTlzUFLSSzTt
jenFKenjSHsfMeFLP/CRkhozvp7BqXJQUtJLSElNN//6lXIXuzukT95MSmrN
+HoAKWlQUtJLSElNN//6lXI9l7kMnfNaUlJrRtYDOEMOSkp6CSmp6eZfv1Ku
Z0fn6Z93kpIuYHCNTkoalJT0EjempPnHC9/Xq4nzrPz0VT1SEhezl2vopReS
kqBIShqUlPQSd6WkMAGlZuVfpwpISVzALq6nr95GSoIiKWlQUtKgtm7dLSkp
nL47JeWrlZJoyi6up6/eRkqCIilpUFLSoAZNSUcSk5TEXVK7eP4WaKpM5sp4
7mGzr7Zl885qj+HwNlLSZQyucUlJg5KSBrXcuuV92jW3ZGHlNSlp9cOi4u+P
wllSEterGVN3Db3jTm9e59sL4zK4xiUlDUpKGssU86n4TLiHlJR6ThSmpPq3
UhKtVQ4oKalRhcDM+BqUlDQoKWlQq61bfaxdLH96Y65JSfmIdFdK+jz9YHu5
rQNqdTVcfnwRfqyRf5FvQOpDkuinKPnmZda+qjPdT1WdAxxhcA1KShqUlDSo
IVJSfeTJRKEwTOVX124z8z1wy3q5wKYBFUabVOTJv8hklq1rWc7auvZogSLD
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
x1ybeLPnHb3P26J6p2y7lFQpE3yKmeiUPbU7JZ219uOV3L6K3Vz6ByUlvZCe
aaqme8UlBvW8g/Z5W1RPSrpSJvuEj5PCYi2CUv1SJxa7QD8tmbniD0pKeiE9
09qmq0/NydMJlk6s7uXm+7dxj8/nbVG9U7ZdSqqUT0nh21Wxsw7IrUGpfu39
DJl+WjJ7ySnleaSkF9Izre3o4fxla8enf3CiKebz66V/rIPzeVtU79xtl5Iq
FVPSJxFJTj8gj6ek8JhZVRh9u3qx2qjKWZl6wpakXl/vxlVzhJT0QnqmtYM9
HJ7Mw/sZuEXq/i2cNYrnbVG9U7ZdSqoUdmk0DoQlW5z86ysMG5maHi1ZGXlq
ZmXqqWlAuAlXcu0elJT0QnqmtbN6eEqrLHa9Uzbc1t2issGpt2ENN2/Pr07Z
ouG2Lm/au+1Lp6ekm7vyVwe3ZbVdqSnTrz0/pXdE6yZFy0R7I2x8anNufJGa
eL3TDyeuISW9kJ5p7fQLWf7y/fP1j8+PHv5aHFo/6/zv//Ive/hrtHW377VN
+y68U8rchPyc8t/963/dw19m6zZt0arkP/kn/0cPf7uPzN3bvtQiJf3Df/h/
9/DXNJJURqGmKamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d
2Xfz7Ud08SFS0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0Filp
UFLSC+mZFvJBpkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp
6amKGS28EqUKp65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp
8Dvt4tbdno+kpEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvv
sXffaRd7qT4lrXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G3
56MjKanyo60LLhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGq
UvWvajiyddHFpy15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG
9UTrjC7YYuu2ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42
vJ+WsImU9E46p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkp
unU7HvrU7OXoXmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop2
7MGUtJo4v/6u6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwz
XMW0KyWFBVKLV9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnR
Z0PFucVHSy227khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11d
X8/pbXubHd1OD6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+
n+0paRbGpe+L1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+
Xv13U+Wnb92NPp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXW
lrnATbGfDkUDzpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYT
aSurbbF1qQQ0JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1u
Cn5/NEulp7u+cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T
1MHzYXhFy1/jpuwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR
3bHc0bekpGiBrSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv
6JD8BtZPPK7Y1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn
2CmdksIX4e10DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV
6xZbtzslpSZOr3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14
vHZ7maakpNfSP41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRz
wTfuarZud0qqz8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp
8JRUuY2bLgF3mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5
WsWWqGiZcGK+WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML
5t+upi/rabF1WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w
7m4Fm0lJr6V/Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2
f+9MSRf8vfwqubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sff
ad+ej6Sk3Vt3ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653
+tbVa5GS+nFKF73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOd
eeGdW/0AUtJr6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZ
pKRxVX630FXsODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt
8AZS0nCCf6OiNiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6
qB19C7yBlDSWMCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJ
b6aL2tG3wBtISQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NF
TeleALoyekpKbVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek
1VLLFzU15+vJh7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzN
WtWTLxy9BIf1pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd
0tAedp3qdnOkpE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep2
06Skeqc/1MsEqB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP
6Z4HbLcN603YS8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClp
LPWHcevDfnflI45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9l
Is9qVmp6dEpqIozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd
8gnyUfFFtM6tpKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8
kYo/qRepiZtISWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yU
PvXRfX6pfCVhDZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX
4Thoa+ilmZQ0iiMpKXNzmLpTzdzc5hcsrjd/i9tnUJKS6hVTSbQnpaStHJA1
9FJTupexOGLr6asvKWkI+w7XypRUWb7+1rRmLfXr7YGUtMnqOVFm4mrWssym
KeEqUtPzLSmSksail5rSvYzFEVtPX31JSUM4mJI+6ft8KamGlDSo00ONlDQW
vdSU7mUs0ZuT6PU9Oj1T7Pjncrtv8xrdOBndX1JS/3YfqzVjJzrEzkpJB+vp
h5Q0KCnp5fRSU7qXgaQO10xKqqkhfzOTWe9ZGtVvdH9JSZ07EpFqPs2YM0v9
xyD5D0/CCpdvwzLRFfWWSnprD5WkJHRUO/qWgWRS0ieWa1bloxOjC0ZftCMl
NSUlvUHmYw0DoYaUNCgpCR3VlO5lFNenpPzoSH0yPAXCtURbG74I17VpwBrd
HynpHaSkg6SkQUlJ6KimdC+jyKekTxBtUjdL4fQwgBTvGVJPnaLTl7Myj6vq
F6lkdH+kpNeIfoyw47OFd9JLg5KS0FFN6V5GcTwlpe6jUnVmRkeqnvoQVFky
s0VFRvdHSurYKcfncjRlIlJqmLdLB2ONPilpUFISOqop3csojqSkTDLKpKTM
Sue5mSdBlc2rD1aZlqSat3WR55GS+nRWRFq+To3r6PDZ/eFDZXvGIiUNSkpC
RzWlexlFMSVVvs7P2logFYJSJXekpN2D1OimW8cPzk3Bp2bKceOOOClpUFIS
Oqop3csoar4zs3r4MqeMVZnUrFSdm8rkXy8n5kUXOd5jcLtTjsxMJcX682M8
NX7DyvMngWLlm7a3qR2nF65UedW4xmWbfNmK+rGv/af3CTPdyyiGOFanX++g
7q1ziB7jhU45MleVLG8zauqfEqlnWdvq9ar+sIawqnzl/YzQ3XdoXOPn3vnx
+dHD32XHyZUr+t3v/qaHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzEVd7Z
kZLq23kNKalzUlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHHbicl
9eaWlFRZeFNKOvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQU9uR
krpy+qcHqbfFMSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH5LSQ
mpVZqvg2fB2+yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4UwxdzcK
klocn6nbldRdzdyM1dxP6W4qWqD1iDOiP1JSTxyQ3XIDcK9i/0+LlBTeudVE
m2j55ZTo67D+y46TK1eUyizh61XhaJnMaylpFOEoc5Kkc42Oz1WQ+fyagMJV
L5NOqlhlPadvy4oR/ZGSuuFo7JkbgHsV78TCqBJ9nQ9KZ72+rE8uW1ExJaUm
SklPJSUxnHYpKXy9GhGpMtEXYaTKx6V2jOiPlAQV3ADcq3g/lklJ9d+Uk5JS
K8rEFinptUQkxnJZSsqHmkw4ql9cSrqMlARF7gHulfjc+pdP2KKRZ0p8fW71
rTkpKb+ifHJZRZ6VVDIKC0hJw5GSGEi7lBTmndUa8ylpx8QLhpsR/SUlQZF7
gCMyGecUn1hKmkVzU3T6apFiGoou0m4zb1STX3Y/S5KSxrU6Tu5uDhS0OEqn
9L/eME9cvQgXCV9E62m3FSEj+ktKup1DsX/uAe4VvXVfFcg/S6ovkCqZeb1a
/LI+uWxFo6ekj9NsMyISA2mXkq4kJV1JSrqX43AIbgPuVfzIOhNtMlOiqUdK
CleUT0ZS0ptJSQzkASnpeZeYzklJ93IcDsFtwL2K/V+fkqbgV0jHf4v02pQ0
W00J36ZeS0kP0O3psc9Wca9zj4orPyW4cqAZOzMp6UaOw1F0exvA1yq/rJ4T
pR4ezVPCRaZfpcpHF7xsky9b0Y7nPi3+pKRu9dm9fbaK2zkw8vTPkpR0F8fh
QKSkzoWZKP83pZ8KHfyTkqSk4YSp/0bnbtdqGz+XfyDfj2s2eQg6JEPPrEhJ
d3EoDsRJtXOTlNRyRbfnIympqZ+d84//8f/Zw98puymVEZan8WuOh59r+Uf/
6P/q4c/xH9InIX0SkpJu4VAci5TUuVM/cz3qsk2+bEX9OLIVJ/bJw0zPSknL
7Uq9veZ4mKSkvp11ehmaHsiTkm7haByLE8igflvos8LdnnFAXjayntFdjUhJ
jUhJYzn9U50h3N3rsOawHI6TyaCkpCFcsC1P6q7TTa9JSfOUa46HSUoC2MLJ
akRS0qCkpFG0HmIP665zPTUlhZv5OfVIK1YlJQFs4mQ1IilpUFLSWASlW2RS
0urLOauJ0berKZlit6SkcyvMf3NpmZLmYt/Xy+lhoplLpqZkSkYjkoMf9vG7
JChylRmUlDScdmPtqT12XDG5hK+jE6OzVlkpLP+YlBQeunNmCSNPMddEk05x
YiZJnbvt8BJSEhS5ygxKShpUi617do8dcSQlZSLScsrtKalFWIimpOVapuDJ
0SrLFAuspoTxKj/FsyQ4SEqCIleZQUlJ42rxyf+5FT7G7pSUykSpSr4n0vy6
HuOTTkk1uUZKgh5ISZdxmhqXq8ygpKShnTvu3tBj+0zVySX8Kt2mlHTvN+5O
lwpHywI1KSksk8lNqzrDlBStbayOhX5ISddwjhqaq8ygpKQHOGtL39NjWxVT
UubZkJQUzUdzgWJKmp2SklK1jdWx0A8p6QJOUKNzlRmUlPQMpwzAV/XYJrtT
Ujg3lZsenJLyBSq/Ppd6KlSfkvK1jdWx0A8p6QJOUKNzlRmUlPQkBzf5hT1W
6UhKygelaJh6TEoq2vq9uFRKWj0e2lHbwzoWLiMltebs9ACuMoOSkh7myEh8
Z4/VyMeWr8zEsExmSjGR3d0ZZwqjyjLUpN5OaWEyShUIa7u7M2BIUlJrzk4P
4CozKCnpkQSlc+WTyyl/lat42A6agi/O3fX3sI6Fy0hJTTk1PYOUNCgp6an2
DcmXd1qKlNSIlASjk5LacV56DClpUFLSs23tBJ0WlfmK1/Xu7owz3d2Xv7i7
M2BIUlI7zkuP4SozKCnp8TaNTZ3GlX4ebz8+P3r4c+TDPlJSI05KTyIlDUpK
eonK3tBpXElKgtFJSY04KT2JlDQoKek9ajpEp3ElKQlGJyVBkZQ0KCnpVYrj
VKdxJSkJRiclQZGUNCgp6YUyPaPTuJKUBKOTkqBIStpk+a8qHe+3HTW0219S
0hBSB4BO40rLlLT6F+fCFDNPn/8bLRkumKpHSgJ641z0SFJSvWVH7e63dtnq
YM1S0kAEJe4VRpia1/PbmohUU6eUBHTCueiRpKRKYS9JSY04IGuEI1e/cZma
lBR97lOZkiqTl5QE9MCJ6KmkpEr5n4RkunH1Jb3V69WL1brCMtG5YRuib/Nb
ISWNaPV888aW8Cr7UlIq6UhJcD2/SzqLs9CDSUmVap7gZJ43hS8+2TSUWbCy
QGoVKVLSoGoiMJwrjCpLF6ckVzHYQUo6i/PPg7m+VNqdklYTUxFm34vUM6bM
KlKkpKEZyFwp8yxpfnvxs6QjQ6DF2Jl6cvrW8QBS0imMr2dzCq0U9tIUfIA/
T1n16vJtWH7fi5qSqYlRUtLojGUuM+1KSVP6MdN82jz4jbt9o6DFwPlZ51//
9X/bw5/TAlFS0imMr2dzZ1WvmD5SSapYXkpackDuE8Z2aKQmJW1KOsefJa2a
t2kgRD/UOnhxlJLonJR0nMH1eFLSJuFzotTE1KzVJXgpnLuqJFo4v0ixhTMp
aXRTdSKGg1axZaX4kChTvrhUWDLTyPxYyJxa5wJHuuj2fCQlkSElHWRkvUHx
OkKfTg81UtLoplgYhxai0eaWv+JxXjMWpuCDr+j0rV10ez6SkqKi6fguN/aD
lHTQvbuPa9w+TtlHSiI0JW724FzTOClpbnD93ElKerSfHfJP/+n/3sOflDQu
w+olpKRBSUmEwq4zwGnhkk/Za21qc2pW9G195dE6M7Hla/W6fpaUdMQkJf2e
lARFm64y9ENKIlR5EwgH/Tyi/sW/+J97+Nt6bFde8naksLCGfHIpvs7PkpJ2
k5K+pKRN9n04w+js7kFJSYQyXWekc6JxU9Lc/tbDYUdKChfJzJKSdpOSvqSk
WfGEsCrgevoe9vWgpCRCxa7Tt5xi9JQ0b0W7EbE1JUXL52dl5kpJGVLSl5Q0
yz8nqp/I89jRg5KSCNV/leiCxvBgz0hJ87a0GBGbUlKqcGrW9OuPlaSkTVIp
6duZq7ffKVMgU0O+jJTUoXD/Tr8+OUotdVUDuY1bpkFJSYTqu04nc8STUtK8
RecOik0paeuzpGnLN/EM9pVMflnNWoWmVLGaRaSknkVT0nxOkJLeTErqXGbw
Xu+yTb5mRc+zqeuu3Kc8zLRISfP5Icwv4fSaYtGTT6qGc4/hE2ubWv4uKbOI
lFQ0ZTPOtD0ZHUlJDCF1IF186HK9zAFAD37unT/6o/+vh7/LjhMH5G47uk5v
s8MURJUpEX/CidHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeY
YpEnNXG1rGdJA8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNV
ow08WHMmucy3YavX9bP+evGLpOVEKalGMSWFcWn13CefjMKSUlLnUvloVSD1
lgezrzsnJbHJ7t7T7dR7fEqaN/PIgCp+F+6aP0N7ZXdKij5LWtWWf9tVSmJW
M9KLSYpHsrs7JyWxyZHe0/NUisafMAfli/WfkuaN3bEWKalbNSkpTEDRpaQk
eDYpqXNSEpsc7D0nBGrsTkmzgVLSvMmpdUWnTz1p3DeDmQ7/G3eriZlimXVJ
SdA/p9DOTYmUNF/+ohOXc1clwwVTlZybkuoXd0AecUrv2QXkTdtTUmqRUVLS
vOHhlOhl9OeUH58fPfwZziup5DLvyui37FazUgVWMhHp9pTkd0lQJCV1LpWS
wnQTTlwmo0yZVGIKlzq4IaeXJHRW7zkzkFEZefalpGjI6iQlfRK/45aSBlIM
L5f9SUnQOfdCnTuSkjJ5p7hI05Q0H3Wpu4sjK3q5c3vPviBqlXG+wowzTw/L
hLMyZVLruiUlzT0QWhW4PR9JSVFS0peUtJQZztG34Xi/rq1cKHqbSj+mvSlp
yj4V2pG29h0nqXuJ5YHnbHOi03vPKYLQlPiO3PV/9x6c+Tur2/ORlBQVvSrd
5cZ+kJJWpvStSGZWagrPcPs4JW/anpJmu1PSavEW37jbdP6hXqPes1NYmqSk
9M32PPf2fCQlNfKMLpWSVjLZZ3WrHL1pecZRwYqU1LkdKemUZ0lNv3H3kZJa
aheU7Bq+qj4lv0qHnfDJpqS52Op1/Swp6V7P6FIpaSXcrdMiJYVvV8WecVSw
cu9VhqLpib9L+vjGXUtNO9DegU8pJ35Kz5KWc1Ov87OkpBs9o0ulpJViSvok
AlHqZoYHkJI6V5+Spj/8u9+VEy9OSeF2ffzrDW207kAnDTp34/G5zEpbU1K4
SGaWlHSjZ3SplLRyJCUtPyHhSezWzmUizEpqYlg+Wk++WKOUtHUWNa7pQLuJ
bvVwcG5NSdHyqVnLFFYMUD30xsM8o0ulpJWalPSp+40SjyEldS6Vkq7/k5JG
cVkH2lP0KXpLc+LFruZz400pKVU4P6vyGZNxelD48WPK3S3dRkpayeSdfbN4
gBGH9qs8MiXlrykOyIOu7EAnEPqRunFdHqWnB6XMSts9S5KS7vWMLpWSljKZ
NzolOmvQvEyGHdq5/LX4Ypdt8jUreqrrO9AuoytT9Qe/R1aRP1VOjX+XNElJ
93lGl0pJUHTl3S8n+m2hzwp3c0AedEsHOpPQjxtT0rLA1pQUpp7MrMqIJCW1
8IwulZKgyL3NoKQkUm7sQPuOHoQpaVp8JeasVeSftmcizFx+9bp+1mtTUifb
0kkzDpKSoEhK6lzqE8tbXLbJ16zowW7swysPFagxnfqvN1SeHqcD/3Z3Zfap
L3l8qzvRybZ00oyDpCQockvTudaX2k0X5cs2+ZoVPdjtfXh7A2B2/GiMpqH8
x0dSUgth/3/uuI15RpdKSVAkJXVOSmKHHvrQuYVO7D4OizkoU3Puqfzl9m1+
P1Ibtdy6+s28rt8rtOqyClISFN0+TsmbpCS266cP+2kJ77T1dvSsO9ifi//u
d3/Tw9+TxuBqW6ZfHy3VV3L79fTiqyqwj5TUuReezx2Qx3XVh04y9O/0z/al
pBakJOBKbmA698LzuQPyuA77sMMm8XJNv/gkJbUQpqR5ipQEnE5K6lzN+Xy+
0P9Y/K8GV1LllxM7OZ87II/rsw+Pf4VpuunH2jxJu2S0Wsvt+eh5KWklekIo
7lwp6cvvkqDI/UbnasLLKv5EU090+vTr/4mjk/O5A/K4bvvw4Aln30fH0PSx
UWqNt+ejl6SkcGJ+d2/97DEzt+bS2cNVNUpKgiIpqXP5M3A4N5WSfiweM6US
VifncwfkcZ334e7mrT4xPqk5PNbFyWi16kxs+Vq9rp8VvpWSlhNDqwKVEab+
80kpCR5JSurc1pRUH6Am37h7tM67sfLMs7rJkZIoSt0bX9+MfHIpvq4sVgxK
Tx0pqb0cTUmr04iU9JGSoMLtlxLyWqSk4lwp6QGG6MatjUwlJughGS3tSEnh
IqlZW1MSs8+ulDQtPmOcst/KkJLgSebzBn3Kn34zc8NZk2dJbzJKN246Bc03
OaNsHU2t7n67Mm1MSdHyqVnT4it5b/7GXVQqHC0LbEpJqWS0JCXBI/V5fWG2
NSWtolA4K/UJmJT0MGN1Y2Vrx9ooGuk2GS1tSkmpwqlZYciSkmaZfDQX2JSS
lkEpdcXcF5SkJOhc/9eal6sJLzWpJ5qepKQHG64ba85Fw20UZ8nf93ZoU0ra
9yxJSooqHiRS0peUBEUDXXTeqebcGz70nwKV5Xs4nzsgTzFoN2aaPdZNMqcY
d6dvTUn5NDQd+13S3Z3Rl30pqfJzSCkJnmTQC9B77Dv3tviTksYybjc6Kb3c
cI+NonakpPo0JCUdseOzx+WLqM6vqlFSEhSNfiV6PCmJfUbvxtHbzybPSEZL
mfAyb+nq9Y5ZxYgkJYVeeFWNkpKg6ElXpUdKfXJ1i8s2+ZoVPdsDuvEBm0De
xeeWK00V+WX336bKH9m9R0xS0u9JSVD01CvU4/220GeF+zgaT/SAznSCep7r
P3i5hZTULSnpS0qCosdfqp5KSqLoMZ35mA15szcko6Uzn+Ifdndn9OXuvfGL
G/tBSoKi28cpefeewFfyjTxlY49XwuxJ/XnWMcaVas4ewC2kJChy/erc1PF3
Ayoz1KaNPV4Js+f15/O26JEkI+iflARFrmWd6zMlbXrSVLmZjsOVPU/7mrm7
M/5Ob+3h6+DRcvxgq1zQ8QNfUhIUuWR0buosJZ1+I+0ITPnZLf/u3/03Pfzd
u4P6j3L1LbzAXdt+sJLo60au7yWex1EEb3DLhZV60zgpaYibuoFMUtIgfvbP
P/gH/08Pf9fsqdPH78UHmOOZ4xxF8AbuVDvXW0qaWyXvtCYljeIlKanpSF9V
O68o9WIunzkXhctG1wU7OIrgDdzf3qvY//mUNN8VfF8vpyxnrRZJ1VCfkpaN
l5L2qdn1t+cjKanGg1PSlQM8lWWiqSdVLJwVrafNFvAiDziK/C4Jitzf3qsY
NDL5ZTlrmXTCHBQtFs7ampJWW9Gynx6oZtcXw8vSauKOt/empMqjqNhv1zds
elxKurJ7w1UXX3zSmSg1a7k5TlYc94CjSEqCIve395piVgWKEWk1JTOr8vXW
lMQONbu+5ilP+Dp8UZzYT0rK35+vZl1z+io27Bkpqdj51zg9JeXrgX0ecBRJ
SVB0+zXx5aK3ysudUp+SagKUlNSPml1/MCVFS+aL9ZOSwlNT9GR1wRmspmH1
KSac8hW+ja739JQU3aKLTemwE31RfFtZ4WXi4/w1Lu7tazxgu6QkKHrwSewC
F1xcpp5SEpf5nJqSwmI1lfeQkube+KRvS1o3r6Zhu1PSamL0dfjiYEoKN+Fe
qfZk+vyz5Tt1+Xra6aqTb/TIfnjA5khJUPS8c9dYipfvqWVKWmWfmmdJDpiz
1Oz6mvwyS32PLpxbU3NqLXf5ZFPS7Q2rj0hh4akUgirrL6akZZtpTT+HntQn
D9gWKQmKXDTvFd5xhQW2RqHMrFS8Sq0l9Y07x8xxNbt+07OkyonTUM+SVgVS
C97esOMpKVPJkZSUP8ZoQW9nPKZzHrAVUhIUPeaUNahi/2fySyr7TMHTovon
TZUpqabl5NXs+nYpaVNQuiUlpQrUTLy+YZu+brcq/622ZsH6lCQZ3Ui35z2j
fx6wFVISFLmSdi4fYeZ7ocyvhzLlwwL1KWlu3vV98hKtU1J9ULoyJW0qc83p
qybPVkaYWbtnSU7p99L5NfRSD6QkKHJJ7Vx9imn9lzpOHEKNFCPMfEucmri8
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
xnCRTWWmRMyJvggnRlvoABuOXVbvkX1Vv1H5kT7FUtJ8ivi+DqfPs+bXxbfR
KVLS450SFoZ2pAekJCh6+RnmGpkotCklhcsW88j1Kam4Ovp37i6bfrWauONt
TYMvO7M98vBejfF5dBfPSOGsMK2sck10emZi9HVqrpT0YPbp0o7ekJKg6GEp
qdttSWWZTGAJ30anhLM25axU+fyL1NzidIZw+v6qPMaKE2vqz0xscRw+6die
Yj6JIb9aMDprFVgyoSkVbTJzpaTXeth9y1m2douUBEUPO9v0vC3Lu47VlHBW
WD6/p6L1RKuN1pZZMPriE9w4pW6owol0rsWeWh1smRWFc4vtmdK36MUpxz3y
wA7PRalZy+nRDs+npJoMlVlq+jVGfdvgG3ePZ2+mbOoZKQmKHnb7+qRt6ZZO
frYbU1JYrKYx+ZS0iuqnb90jh8OOlBSdlU9J8x6Jfgcvn3pqvrAnJT2SXZlX
3z9SEhRJSYP6beHiCt/Tye/UKCWFISW8FV/NrWxJKnaF6anRofu8EZHZNSem
pMov2tU8gZKSXsJ+rFHZS1ISFElJg7orJTX6QJ5+tH6WVDlx07Ok6GEZnVLf
5nqPHw6rp3L5Yqspx1NSzZfupKSXsB9rSElwlofd8T5pW/JufJbEs3WVksJi
q0CUyUGeJZ1l60O95ZR8LIrmoPxEKenN7McaUhKcRUoalJREI72lpHyTiikp
VeeJHn/aOTElzb8n+spMzLzNFM6EqQYdw6VWo3v1aclSftlNK9pXQ/2Kjp+d
wk2WkuAsUtKgpCQaOX0QRW9dlhPD25v821TN0To/i7Nco9Pds087mTvPsGQ4
JfOTohP/iit69j56iXwWOB43imtsobiKHUNPSoKzSEmDkpJo5D2D6Cx67EtK
oikpqb5MzVJSEhRJSYOSkmjkPYPoLHosZerJ3Z3BUdOWlLTc6dHXq2KpF5m5
YfNWs5ZlVgdhqhnR19FZxcbEO3FBSoKiI5eP6qvT2527y76kJBqpPGL3HdjL
EdFoaETX1XpFF6wFXm410FJvoyeZKcgvqTLRF9Flw4G/nLUsU9+M+lZFK0l1
TpSUBEU7biSa3vw/Uosek5Jo5ILwcln9UhI8Rn1KSk3MzMq/KM7Nl1l9alqs
NhXiipVkpoSkJCjaevfufuCIE3tPSqIRKenIGoFGhk5JqZbveJaUqSQzBdih
PiV5fnSKs7pRSqKR1PG5+hgz+gln6nPO8IIeVhUuEi4Yrj3VmNW6ojWkWhIt
kBm2ToxwgUxM+Pw6zFMTw1NBdMGaqsIGZMqk3hZL1tSZbwlwRP7qvyrZujEv
cUpPSkk0Ej0+K6/+nyD1VF7084ssm1F/UxHWvHVD8n1SORc4ReqEEN7GrCaG
H3p8YieKlVXhzNz8WvKFU9VGF8xXku8rYIdwcKWKXdCY9zjen1ISjUQPztRV
eEqHiyl2i1KzSDg92rZi/ZvWVdPOFKdHuMC5A+3Zw7Zm6/wuCYpqUtKzTyZ3
OdirUhKNZI7MVIjIBJP6cJSpM9q2Yv2ZucvPaYuLO0NCD6SkelISnEJKuouU
RJ/y8STzLCZfYMezpGgz6us/a6IzJPTgxIG2enB8Sm2byp+y3oOrkJKgqGlK
Wp6I7jodXWBfk6Qk+pRKSauEshzamdfLiXnRRaJtW82qqWTV+OiWrurJ9Eax
u4DTXTzWNq2ut/NATXukJCiK3oqsCuyuuX4tu2vupM4dix9co5REO/UH56ZA
cbzO629FpCTohJRUT0qCUzRKSakPgU8hJX2kJFqSkupX19vdETzVkc9so8+U
54nz29XcsHB0brSS/OtUPWeRkuAUl6Wk1RpTZ6rVi/CsEi2Qr6emZLQf8kul
JtY7cm6Ukmhn05HZ4kIfrbPdHUWqAZUlWzcG+Bwba6ur+Wpi6gYj+qKycFg+
VY+UBN26OCXlw04qv4Tlw7eZemrOjdGIlF8q2shNpCS65ea/hl6CyxxMSeHr
TLT5BJf4fZHqE7tDWN2otCAlwSk6SUnFF+HE1Ykrs3h9ybC1NTEts715UhI9
EwHy9A9c6caUVF/VJ3aH8El85LuafpbKCqUkKLosJe3+ECZVPrWKIyUry0hJ
vEHTjzpHp2fgervHXf3HpPsu/ZmUVKxHSoJuNUpJn+ozSfFF/RnmeMlo+6Uk
3kwcCOkTuMXBG5LVHUXmbbTwalZ+2WLhcKmzSElwlnYp6RM7dYQTl2+jLz7p
M9umeipLRpu6OqGtXuw+1x3pWymJyxw8zp9BD8Dtdo++i4ftvWeJyrVLSVBU
vOgPMdgHJSUxouinB493d68Df2vfYLxyCN97uqhfu5QERcUbgFHG+4iObJ2U
BMALbb10XvZZx+2fqGxau5QERT2npK2f5XYSqerPk1ISAGxyexjp09Y+kZKg
qOeUtJRqRifNW5GSAKCdPq/+d9nRG1ISFElJLUhJANDUy388eHDbpSQoapSS
ViM3HMjRt6shv6ohXDBTOHyb2pZU4ZoNSW1UqkC46tSsIikJAGbhjcSz3d3f
8HzFsbZjJE6/Rpvp1xyRKVB8kSmQWd0nHZTy9e9+m2ptqqN2kJIAAKCRpikp
fLuKEltT0mrBaOWp1RXbFm1YtLZU4bAl+c98pCQAAOjQ/9/eHSzJCUIBFM3/
/3RnkUqKEXgg+hzJnLOaVkTsbPqWdudbKqnXPvUhN95LGq4tmPbUfajmliaV
BAAAL5RaScN86NXE85UUL+zUy2C1zVOvUUkAAJBkWEmf1VCqb8c0txweTmsO
aI4sXx5mOMzWHD9c6uFEw8H1sc3TlceefFO/UEkAAJAk+Bhfjslew2Pneg+V
BAAA76SSvotKAgCAd5qppM8joTS5kv/D9StVSQAAkGS+TX5OwmS75Z1USQAA
kORUJQml6+56D1USAAAkOds+QumKG989lQQAAEkW7hD1fiWbpqT3SiUBAECS
65/eq/9ciC/u+pc6UEkAAJAk9ZM8eVQSAAAkUUmbUkkAAJBEJW1KJQEAQBKV
tCmVBAAASVTSplQSAAAkUUmbUkkAAJBEJW1KJQEAQBKVtCmVBAAASVTSplQS
AAAkUUmbUkkAAJBEJW1KJQEAQBKVtCmVBAAASVTSplQSAAAkUUmbUkkAAJBE
JW1KJQEAQBKVtCmVBAAASVTSplQSAAAkUUmbUkkAAJBEJW1KJQEAQBKVtCmV
BAAASVTSplQSAAAkUUmbEjUAAJBEJW1KJQEAQBKVBAAAUFJJAAAAJZUEAABQ
UkkAAAAllQQAAFBSSQAAACWVBAAAUFqrpF9/NXfF85dbgnmah//5u3lUOefk
UgEAAGoLBVFnS2+2eube3pngiucvA2r+FAAAAAd5lRQn0nDXqS0zZaSSAACA
GTdW0r+7OZ/WnZ3mvZ7mPL3BvUfsFv4GAADouauSghrqbenN2Rt8OK9KAgAA
MtxSSWtbei97gxeeuPsUv96gkgAAgBl3VVKtHhPMMDxFc+RMJQUbAQAAajd+
L6ncMllJvQKKD493DR/nAwAACKw9ihY8w1aGT31T6fCFo+BxuHpwfdRhV+8U
Z68OAAD4yXQEAABASSUBAACUlitp/kcSeg/arZ304teOhmd/OBslKgAAvM3y
95JO7ap/jWHZ9awYzvDAKQAAgNd6uJLeECAqCQAACCxU0mF8/Qxb76G44Hm8
w9/1z9b1pgqe5etd2swymucNljpcRvPAYLX1uwoAADzjYiU1bxI1K2nyHlNd
H/GA3sjmwoZbmskTXHKwyPpcvbI7tXgAACDbXZXUG1Bu6Q2uq+HzNViCAZ9W
2jRnHq65rp7mynsFFC8y3ni4zIV/FAAA4C5PVlK9a6Z9hlPVtRKccWbOs5W0
cC8pmL++FgAA4El3VVKcTr2985V0duR8JdX3gL6xkoaLBwAAsq3dsGjevql3
lQPKT/7Nl6Vy2t6xzQPrhQUbe8uoF3nqKoI19y4hPgQAAHjS2qfx4BCf7QEA
gK0t37NoHiWRAACA3XmyCwAAoKSSAAAASioJAACgVP/mGwAAwA/3G14xaF0=

                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 8->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3U/r9UyDJ/SgLlz6FnwXzmbA3rkaaOmmoWdgprGd6c0j9AjPuGi4mY2z
daMgiKDCMIIguJYLN74nV8er+/Ckc6X+5k8lVcnnw4+bc5JKpVJJJfmenHPd
//Ff/Fd//F/+e9M0/cv/8Od//vif/f4//eu//mf/zX/+H/188ye/+5d/9c9/
95f/xX/2u//6L//5X/71f/IX//7Pif/fz7J/8R9M09++BgAAYOXz+Xz/CwAA
8HLLoAQAAICIBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAs3ZiSJmAEt5wfAABudONd0L03fkCl
W84PAAA3uvEuyA0YdM4gBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J2k
JCDFIAUA3klKAlIMUgDgnaQkIMUgBQDeqduUtPv/2LJcZP5vaFUyVUP96sKl
Uus90tQja8kvVbOx0TaneixTMlPncmKxTHRFNfVH21bc5FQb8h07JQ62VLXF
t5lNy/TSPufWBgAwihvvgoqrXt1SVtYZrT+8t8xXu6lPUpXXz9rR1HB6tOS+
tqWk2lxcUXFX5qNHsYWb6s+0rab+/NvK/ZKfVb/XisseJCUBAO/0pJRUfxda
rLZRSspM39rU3bGi8s58axvq7+Sj+z1ac30L6+vfFL7yzcs0deuUypRU7JbT
x7KUBAC807NTUjir8sb79JS044a//vlC/ZR9TaopU7+zahLQwZSUWXbf0X5j
Stq0LikJAOAUnaekpZoKa6qqWWRrSsrUv2m99YuckpI2de9yqUy1qfVGG1Bc
vLLaaLHixHo1matmB4VSdYarKK5r36blbTo2AAAe48a7oOKq65NFsUDqJvms
lJRaaut684vkQ82OlFRsTKaRmS1KtTxTskVKitafb1um/ny0idacaWSxqZtS
UnTKKaQkAOCd3paSDk4vFj6ewnY3aXdKqqm8uMb6e/hoF60KFCPJ7vr35YvM
Tok2tXJFYbNTWSm/rsqt2EFKAgDe6dkpKXNvnF9k013oKSlpR1Pr6yyuqPIY
yGzd7pT0+fVI2NQzldtSWX9GviejU85NScXapCQAgBM9KSV90replWkodVO6
u507buzrg1u+GVvbVtm9lc3e1CefdM9nZtV34KamRl2QkvJvpSQAgCt1m5Km
wKZqV3eY0dq2Tq9cXaqGTLH6pm5qRlhnTbNTq/gs8lp9bTUla2pO9cxqqXz9
+bZltjqzddEpNRsenRJtc3HZ+m3ZqlG1AACdu/EuyA0YdM4gBQDeSUoCUgxS
AOCdpCQgxSAFAN5JSgJSDFIA4J2kJCDFIAUA3klKAlIMUgDgnW5PSUDnbjk/
AADc6Ma7oHtv/IBKt5wfAABu5C4IAABgSUoCAABYkpIAAACWpCQAAIAlKQkA
AGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElKGtRvC31WCAAAg5KSBiUlAQBA
I1LSoKQkAABoREoalJQEAACNSEmDkpIAAKARKWlQUhIAADQiJQ1KSgIAgEak
pEFJSQAA0IiUNCgpCQAAGpGSBiUlAQBAI1LSoKQkAABoREoalJQEAACNSEmD
kpIAAKARKWlQUhIAADQiJQ1KSgIAgEakpEFJSQAA0IiUNCgpCQAAGpGSBiUl
AQBAI1LSDtMffF9XLpKpKlN/qh4pCQAAGpGStlp21ym9lwlQO5baTUoCAIAv
KWmT6HOf0+usqVlKAgCARqSkTTJ9lf+a3Pz1vPB7eqspqzLLOlf1rKanaqgk
JQEAwJeUtEnNc5/874nCCBOd8gnyUfFFtM56UhIAAHxJSZuckpIqX6TiT+pF
amIlKQkAAL6kpE1Sv0uKfoNu68MgKQkAAHogJW1VTCWeJQEAwNCkpB1Wz4ky
E1ezlmU2TQlXkZqeb0mGlAQAAF9SEl9SEgAAfElJgzo91EhJAADwJSUNSkoC
AIBGpKRBSUkAANCIlDQoKQkAABqRkgYlJQEAQCNSUv/Cf0j8Rnd3BgAANOfW
t38/d9CPz48e/hwqAAC8gZTUPykJAACuJCX1T0oCAIArSUn9k5IAAOBKUlL/
pCQAALiSlHS74i7IpKTVP0C3mpgqUFOJlAQAwGtJSbcr/lPbxeQSvo5OXL0u
ViIlAQDwTlLS7aaYVQEpCQAALiMl3S6akpb7pauU5IABAODx3PQelMk4p/hU
pKRZKvWEBTKV5Istt/rWjgcAgFbc7t4uFY6WBSqfJdU/YMpXkioZNszBAwDA
87jRvV0mH80FTk9Jq8dG+1LSsv3t+wkAAC7iFvd2xV1wVkrKx5/dKalyKwAA
YBRubvtX83ui1MSwQKZ8tLbKlDQ31eEEAMDo3Nb2L/8s6cq/ykPFQQUAwNDc
0PZvuJQ0N9uhBQDAiNzK9i/8RtyN9jW+RbcAAEAjbmIH9dtCnxUuOcwAABiI
29dBjZWSvhxsAAAMwY3roEZMSV8OOQAAOueWdVDjpqQvBx4AAN1yszqo0VPS
l8MPAIAOuU3t3/n/UN0B7TZw61J/9mf/tp+/Ft0CAMBd2t36cpZpzP9f0o7N
3FT/z2zyP//Tf9rDn5QEAPAwUlL/XpKS5o2tXIuUBABAI1JS/16VkuZNLq5L
SgIAoBEpqX8vTEnzhmfWKCUBANCIlNS/16akefOj6y2mpOW/rrB8u5q7Krmq
tiaLSUkAAA8jJd2uuAuKKWn+B+i+r5dTlrOi5VNT+klJcyes1p7PL8u5y2RU
LLMqLyUBALyQlHS74j+1nQ8vYdgJpy/frspHp3SYkuaumNtQn5JSE4spybMk
AIB3kpJuFz73We2RTHIJZ6VS0u4pXaWkr28X1XzjTkoCAGAHKel20ZS03C+b
UtLBTFRMSf2ozC+ryJP6CZLfJQEAMPvecN7dioG1zgKfzlLS3f3990ds/b9x
t/V3SVISAMDLSUm3S4WjZYEWKWlrRLo9Ja16RkoCAKARKel2mXw0F9gRhfIh
aEdEujElRXum3b9xJyUBALyclHS74i4ofguuJgdFZ2VedJKSMp1TTEmZ/0HS
6m30F0mZ6VISAMCzSUn9q/ki3Fc4pTgrOqWHlFQ8Muu/cdf6T0oCAHgYKal/
Nd+Fu+bvmkOl8piUkgAAaERK6t97UtKmo1FKAgCgESmpf+HX527UdBs3LRL+
z49u/GvULQAA3KLprS/t/LbQZ4WVOjkCe2gDAACd6OQela0ekJK6Ova6agwA
APdycziooVNSh0fdtz29tQoAgFt0eL9KjUFTUrfH29yqPpsHAMCVur1rJW+4
lNT5kbZsW8/tBADgAp3fu/IZ/9+4273gxSZBCQCAvzPKHeybTcP+/5LGOrpW
TR2o5QAAnGus+9h3GjEljXhchQ0ebhMAADjFiHezbzNWShr3iIo2e9BtAQDg
iHHvad9jlJQ0+rGUavzQGwUAwA6j39m+Qf8p6RlHUWYTHrB1AADUe8b97dCK
u6CYkuZ/gO77ejllOSssP0+PFqtJSU86fop74bKWAABwryfd5Q5qFWeiBfLJ
ZRV/wunLt6vy0Sk1Kel5R05xcx62vQAApDzvXnc44XOf1R7JJJdwViol7Z4S
pqSnHjM1G/XIDQcAYOWpd7wDiaak5X7ZlJLqE1B02WJKevDRUrlpD+4BAAC+
nn3fe4FMxjnFp7OUdHd/tyUoAQDwkZI6kApHywLXpKR8RJKS9pUEAGA4UtLt
MvloLrAjCm1NScWIJCUdKQwAwECkpNsVd0HxW3DF1/VvfeOuaXkAAIYgJfWv
5otwX+GUcFY0T2VKSkmnLwIAQOekpP7VfBfumr/HHyr7NvDx3QIA8DZSUv+k
pMvs3sDH9wwAwKtISf0Lvz53o7s7o60jG/j4zgEAeI833Po+0m8LfVY4ooNj
wVACAHgGKWlQUlILx8eC0QQA8ABS0qCkpBZOGQsGFADA6KSkQUlJjQhKAABI
SYOSkho5azgYVgAA45KSBiUlNXLicDCyAAAGJSUNSkpq5NzhsKO2eUgamwAA
d3EnNigpqZHTh8ORoNSiPQAAFElJg5KSGmkxHLbWuSxveAIAXE9KGpSU1Eij
4ZCvdvqDsLDhCQBwPSlpUFJSI+2GQ33NvnEHAHAvKWlQUlIjTYdDZeX+9QYA
gHu5ExuUlNRI6+FQU78hCQBwLylpUFJSO7cHJUMSAOBeUtKgpKR2LhgRmVWs
/iUHAACu535sUFJSO9eMCOMOAKBbUtKgpKR2LhsRhh4At/i/Ane3CLojJQ1K
SmrnyhFh9AFwPSkJiqSkQUlJ7Vw8IgxAAC4mJUGRlDQoKamd60eEMQjAlaQk
KJKSBiUltXPLiDAMAbiMlARFUtKgpKR27hoRRiIA15CSoEhKGpSU1M6NI8Jg
BOACUhIUSUmDkpLauXdEGI8AtCYlQZGUNCgpqakr/5dJla5pDwBvICVBkRuw
QUlJTRkUADyYlARFUtKgpKSmDAoAHkxKgiIpaVBSUlMGBQAPJiVBkZQ0KCmp
KYMCgAeTkqBIShqUlNTUjkFR/+8wXKBFnwDwGFISFLmnGpSU1NSOQfFzkR+f
Hz38GdEA5ElJUCQlDUpKakpKAuDBpCQokpIGJSU1JSUB8GBSEhRJSYOSkpqS
kgAA3kxKGpSU1NrWcSElAQA8hpQ0KCmptUYpafkv0S3fhnOj06UkAIALSEmD
kpJaa5GSlmWWCShaJlpYSgLgOL9LgiIpaVBSUmutU1J9Mtr6XT4jGoA8KQmK
pKRBSUmttfvGXWpi9KHSjp87GdEA5ElJUCQlDUpKaq3dv94Q/sIolZL2/YsQ
RjQAeVISFElJg5KSWmv9b9ylfo7kWRIArUlJUCQlDUpKaq2TlLQjKBnRAORJ
SVAkJQ1KSmrtsn/jrpiStgYlIxqAPCkJiqSkQUlJrTVKSdH/81E40f8vCYB2
pCQokpIGJSW11vobd+3+jGgA8qQkKJKSBiUlXWDT0JCSABiFlARFUtKgpKQL
bE1J/WjXJwA8gJQERe6pBiUlXeCaoSHmAHAxKQmK3JINSkq6QOuhkXkSZFQC
0I6UBEVS0qCkpAu0Gxr5cGRUAtCUlARF7scGJSVdoMXQyP+SaJWVTl87AHyk
JKggJQ1KSrpAo6FRTEkfQQmAlqQkKJKSBiUlXeDKb9yt1hi+AICzSElQJCUN
Skq6QNOhEUakTyIcGaEAABeTkgYlJV3gxpSUeQ0AQGtS0qCkpGu0+2lStH4p
CQCgB1LSoKSkazT6Z+4qZwlKALTgd0lQJCUNSkq6RnR0HBky+WUzKengegFg
JiVBkZQ0KCnpGuempOKCxVhktAJwnJQERVLSoKSkaxRT0jyCikOpZqDVxCID
FoCDpCQokpIGJSVdIwxE4f/nKPo/PMrUU7m6+ikAsImUBEVS0qCkpGvUfOOu
+G8sbBpighIArUlJUCQlDUpKusbxlLR1fFXWYNgCsJuUBEVS0qCkpGtUpqSa
///R7jUe/BYfAKxISVAkJQ1KSrpG/T+5EA6lfSNr05MjgxeAHaQkKJKSBiUl
XWPfP0xXueAptRm/AGwlJUGRlDQoKekyW/8nRzWL7Fidx0kAnEVKgiIpaVBS
0mWK/xek1SA6OKB2pCFDGIBNpCQokpIGJSVd5uC/433W6oph7eB6AXgPKQmK
pKRBSUmXqR8gpwyl3c+MDGQAKklJUCQlDUpKukzlADlrHB35Zp2xDEANKQmK
pKRBSUmX6Scl1azFcAagSEqCIimpc1NP7u6Me9Rs+Imdk6+quKLX7iYA6klJ
UPTmu98h/Nw7Pz4/evh77XFycTA5mJIqywAAkCEldU5Kut3x2HLi6irX+Nqd
BQBwCimpc1LS7TIb3qJPznp09dr9BQBwnJTUOSmpB9Ftb9QhJz4qevMuAyDD
75KgSEq6V7H/paQehNverjekJABak5KgaJSUtKORo2xX/h+Rq0lJq0pSc7+v
i+WlpNBq25t2xbk/O3rzXgMgRUqCooelpCG2ZWmKWRWojDA1r+e3qTJSUtRy
21v3w+mH+pt3HABRUhIUDZGSvi089zP2TkRT0nKnHElJ0edKUtIOy91x2bpO
KbajMACPJyVB0bgpaW758g52OTGcnpoVVl7fsKY+Z6ek4vOm/CqWXfcqRw6S
fes6t+TWwgA8m5QERUPc906JT/LDjLMsEJ0VlgwruVIqHC0LbIowXzUpaVW4
/lnSEMfMua7c5EYpaUd5AJ5KSoKiIe54Mwki9eKTTkmrqlIR7BqZfDQX2Pos
6cfiX2kolt+RkpYtv6qfbnbllkpJALQmJUFR//e6qWT0qUtJn+Ardqn6b0xJ
+QInpqQwHO1OSZXtf4CLt3HTugQlAHaQkqCo/7vcgymp/vFTn/1wJCX9SP/+
KPV6a0qaG9ln7x0XPYouWGOLwrsXQacBDyMlQVHn97fht+Pmt+Hr8EX4+vPr
Jkcr6UpNhJkC0bnFKbtT0tzUVJkOO7bGLQl667oEpQvoMeBhpCQo6jManGi5
dSNuaeWDngv+KnsvLLZKqaNYNfiy9l+QknYv9Vqr00jPn6sA1JCSoOjxF3op
6eKU9AkOqhFTUjTr3bXqc8sfWeptwqe0YT7Sk8CIpCQoGu72dYcR79Jn0fu0
uxxveaNeOle0nZc1fseK9rVtlN3Rgyn9YFE3AiOSkqBooHtXln5b6LPCr+GC
UqqFV7Z8RyC9ZkWvdXpKOvGzi+OO9g4wICkJilwlBzVEShrurizTtiubvWNd
u5vX8+7oxxSkpHnKvg6cBvwmLfAkUhIUdX7XSqNPj/c5sfEt+uqgfKuubPO+
rr5ydS83Hf7XGyYpCbiVlARF3d6y8jXu3dS5gau1YpMenJKOL/42x7tr3HEN
AC/R5y0rs+fdTW16enWZmmafsvk19q3rSAuv3LoHON5d0+PGNQA8TOUtInd5
8N3UWJv27JR0fPH3qE/W+UpuP+wbjWsAeAYpqXMPvpsaa9P6T0lHFjxlcWbF
82r04F8939x9MK8Wz1dop8M7+V0SFElJnau/WTp4cyUl1TT43B44fUWnfBPs
YA18gq+VRgukDsXo6/ojefW6WKE9Du8kJUGRlNS5TXdKTXOHlPSGlHRWJS83
xawKtEhJ+bOBlATMpCQokpI6JyVd8PeYlHRw2bNqIJqSlifbrSlp+Zh4fr2c
UhmIpCTgS0qCIimpc7tT0vLGLHpn1X9KWrY/OmV1/5lZsHJFcIHMwb8quRrX
UywoTcG4Xi5bk5ImlwB4HykJilwiO5e6m8qnpNWL8OZqiJQUva9bTQk3OXND
eHDTLhspB1d0SjudFo5IhaNlgZoDfgo+EMiP9Jqqoge/CwG8jZQERS6OnTs9
Je2LSJkose/4qcxr+Y/EM5+fS0m3N+PNMvloLlCfkmrCUT4lZYbDsnkuB/Ae
UhIUuSx2bl9KWqWGdilp0/Gzum88mJIq7yelpE6qepXiuLgyJeUHRdhOFwV4
AykJilwQO3fwWVJ0+r6slLqbKh4/qWItUtK+bXxYSjqlhhZVMUsd2CuZWfNx
vnwRLpuqsHjwuzTAs0lJUORS2Ln6u/3U3dHy7fLFkZS0uvWKNjszt37TUmXC
6ZOUdGoNLapitm8MtvjL7197H55KSoIiKalzuxNNMWjsvpuKfKi9+AF4/RHV
KCX92J4En5eSzqrk9Kr4GiUlAU8lJUGRlNS53lJSNCLtO4p2pKTVA6OaklLS
KZwlzpUZR9fb2uamPQNcQ0qCIle9zk0H/uHurxM/cz5+o7Vp08K1pDYtOuX0
lPS5KiycspbTm+pEwZerBjyAlARFrnedq/sw+H77Nu2sBHc8ANa3eceWbnXW
Wk5v7TWbzxB2D3ygB1ISFLnSda7zKJEKSjUHVeeblmpzZckjuk1JjepkXK4g
MCgpCYpc4zo3YpT4VKekfpy4XceduJbTG3xNDzCWTYMI6IGUBEWubp2bxk9J
8zFWebDtXtEFpKRGdQJwJSkJiqSkzo2VklKPaZaHWbEeKanzlNSuWp7B4QHA
A0hJnatPSXMq2TG36bOkT/BoadOyW9fV1HApKVPbwbU4b5Cx9busANAbF7LO
bco1mYhULCMl9bOuIVLSKTXweC4xAAzKJaxzj0lJjb5xt3uRfUZMSakKV9E1
/G7kvmoh5EIDvfG7JChy8erc7pS0+nHQPOWab9yFW/Fp86837F5knwekpCnm
szHJtmsqD+ZyA/2QkqDIZatz+1LS6sX1z5LCrWhU+OBSfa7o+mdJnyBJHawc
Uhww0AMpCYqkpM5JSU2X6nNFLVYR1nlWStpRHoB7SUlQJCV17uA37qLTL05J
y691VZbfvaJ9C75hLTUpacc37jL1Q5ELENxFSoIiF6nOHXyW1ENK2rHJpy97
YuMHTUnFOsNfJ51bP6S4DMH1pCQocnnqXH2omR/ZhG+nhX0RSUpqUdXFa6lJ
Se3qh7ytD52BI6QkKHJV6ty+XJP66t2RvyFSUmrx1Y9ujjw3kZJaV8LLuSrB
BaQkKHI96pyUdGTxKebz62G/dXXjpqRMtSd+jO98wilcm6ApKQmKXIk6tzvg
rL5x956UFK1hNWWVpA5W3sLFKWnEtQCwm5QERVJS56JPQ+5y2SafXsMkJbWv
+fq18B6OKDiXlARFV979cqLfFvqscLdTDshMLPq8+Bt3n2MJcd9a4BSuVnAi
KQmKXHcGJSUdqWR65b/eMNd8zfNBJxZacM2CU0hJUOSKMygp6Ug9B1dxwZBp
tIqLv0Xp3EIjmQPYRe24wnevn+7u7r+IlARFrzonPImUdKSqg6uILj4PpVPG
1Omj8q77AacXmgoP47fd655I1329pB+kJCh6w6ngkaSk3VUdvwJmwtc8q0UQ
O+iuT02dYWhtOe5e+FDgFLor9Ow+kZKgyKVkUFLSLbXl61xO7zAlfS7/xt1y
vdesiJe76wgfmo7KeHDnSElQ9OAzwLNJSbfUtqpzdSfWf0r63PRhu5MMF4g+
LXXsFemiPP0Dr+UiMigpqcMKU4npxFWc4pYbyFvOM85vr5JKSY6BDJ1TQy/B
O7mCDEpK6rDCqeN/vSGs//qxf9fqnOLeIBORHAApeqaevoIXcgUZlJR0Y535
lNR0FSe6Zezf8vTKKe6dBKUi3VLveX3ld0lQ5PIxKCnpSJ0HV/GMlHTZWm5f
aaM15h9eXKzFBnbl7g7+xd2dcZonbUtrz+srKQmKHnbOfw8paV+1p9znRBc/
9w6qvp7rbg0rnL51x7Vb18+a/+Zv/nUPf1f2511+buMf/dH/3cPfY3r7MRty
jed1l5QERZvubeiHlLSj2h3385naTmnV8fp/lvzx+dHDX4cpqemKpKQrSUmn
i27IWefJysVP7Mwjbb64qZ2QkqBIShqUlLSpwt1PPTJ1ntK24/WPmJI2beAR
UtJjSEmnS23IcvrBoLRp+hFznU0/q3nMrv+SkqBIShqUlFRfm5TUYUratI19
kpKuJCWd7pEpqbdFeiYlQZGUNCgpaVOFUlKHKWnTZu7jWdJA8gNza0pajfcX
pqTiiW5rSlpVGD2pLsssX6xeRwuHb1ONjBYOS6YanGpGfqWZ6YOSkqCoeCKl
T1LS1jrDC/rBCk9p2PH6p5FT0qYt7c1UkZLm4231+vu2ptjbUlLmjndHnIm+
fk9K+mQv8Znp4V6Yfs0+q7eZF5kCYZlVsWhmybQqWqy+GZmVptYyNCkJiqSk
QUlJ+2rekZKmauc2tb5kKrMshdPDwtEyq/LRxaWkfIQpvs7PemdKWo2pSUra
aNV74TkqtSFTIkcsKwnL5F8s1z4F8SSckmpGsfCqZNjgynpSFYYTxyUlQVF4
5mQIUtLuyoc45utbGA0sc2wpvk5N3LTskZS0aWO7ciQlTX94bCQlzaIpaXmX
e1ZK+ta5eltf/yi9nQkOmQKfRFKIpoyaoJEPIO1SUqoZlfVIScBHShqWlHSk
/v4P+2LzlveQZ6WkYvnMuo6kpJrt7VBXKekNdqSkcNn59ffF6u3WaqOWR8i9
JaMH7VwsWuBTFx/CZYslwxfR2vLli4VTs2qaka8wNXFcUhIUrc6rjEJKGmIt
u2VuYMJ7oROfJU2xQLSalVnd29SnmHxcShXzLGk5d/ezpNWyc+X7vok3Sm9P
QbgIp0SXCnt++kPQCKdHp6z2YPTtqoZVbdHyqVWHLQnbk2p/tNnRlaZ6bFxS
EhRFTwX0T0rK19CPUzohU9uUTUlLld+4m4JMtFq8xbOk6FZ3bjqWkmZS0ld+
4EwnpaQp8SzpqSkpf+o4WPnxesbysC2VkqDoyI0cN5KS8jX8w3/4//Twd/A+
pCZq5VNSJgdtSkmVz5J2b+xyc45Xco3dKWm14JT+Gt4LU1Jm7u6UFE1M04Fv
3F3ZLbvVnDqOVH5KPWN52JZKSVAkJQ1KSsrXcHs+OpKSasLRsvC5KSl8eJRf
UEqqD0r5lLQvIj0mJeVtTUnzIFpN+aPg90qrYo9JSUUHN2TTaWpf5UcKtPCY
Xf8lJUGRlDQoKSlfw+35aEdKWt11XJaSoo+KoikpH5TOOpOMckbal5LmvZx6
KyVFbU1J7f4e09udp4xi4a2nyuMes+u/pCQokpIGJSXla7g9H9WnpNRHsgdT
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
Jwdu5MAYlJT0Bv10xb0paV77KiWtyqwmRqPNPCtaIFN+uJQUnttTd4wdbkuN
h21vcXMqU0wYf4rFUmFqlJQUdle+M6dsbJnq0tByYmZWz9+4k5KWMkNvUxke
xr4elJT0Bl11xTWNid7ezKepKQgsyynTIihFc80q/hQjUvT1WClpeYbPXPov
bOZpHra9xc2pCTJhmUxKWuWpcVNSqHgayT9LmmKPgTIToxVm1iIldSgz9JYF
Um95Kjt6UFLSG3TVFWc1JlNP5t5mti8l1UypTEzRx1j9y/T8PLdYQ+Vuurfk
XHhKb+9wPntTUj4WzVO2pqS7++Oo4jfupiD+RBef0l+ry6xFSupQ5mj5JG6V
oxN5GHt5UFLSG3TVFWc15kg903kpKfX9umj5aIWn9MaJUtf3ZYHUgpc08GQP
297i5hxJSWEaWr14w7Ok5dx9KSn6LGm2NSVFG0m3UkfaVQc198jsfXomJb1B
b11xSnumaf1c4FN9Ipqyz3SOPzmaEj9Zik453hXnKl7To9PHvQQ8bHuLm3PK
s6R3pqRwbjElzSkmk3pWU/JvPUvqXJCKfjlyUnuqz5MJJ+r2kkGelPQGvXXF
kfakrkHLU1Cx/qku/lQWq0xJqVXs7opGak7m4aW/ww2p9LDtLbbtyO+SMs+S
wi/jPSYlZebWpKTUsyQp6ZGKyTq1VPumcaeerxpkSElv0FtXnNKeVSU1n9ct
C5yVkuZA9JVKSal41duuqZe/GXiex2zvvn/jrvii+BBqxJSUl8ov80ES/ZZd
OGs5Jf9WSupfMVlHo9PQpxRq2MuDkpLeoLeuGDQl1WefVLHoeo93BdTb9/9L
Cicu/6Ske/+kpIGs7pbdPL+EHT0oKekNOuyK400KU9I8ZWtKmj+wjU4M50bL
p1JSqhIpiVtsCjJN/6QkKemdVheFT5fXaM4lJQ1KSnqDDrvi9CbN15qamvMB
5/hfff0d7hoqDXrVk5LOIiV9SUnHjXgmYZNBrxdISS/RW280Skn1haUkjog+
uBxib0pJZwkfN9/oxn6Qkk5x706ktdvHKftISS/RYW+c26RNtd12KxNzYidw
veUeHGJvRn9YdNff3Z3BCaSkUwxx9mA3l/tBSUkv0WFvnNikuxJHh73a2rKr
xb3Pr1/1fHlX8E5S0lmcOh7MpWFQUtJLdNgbHTZpqwdswg6ppycv7I3VJr+w
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
87ao3inbLiVVygSfYiY6ZU/tTklnrf14JbevYjeX/kFJSS+kZ5qq6V5xiUE9
76B93hbVk5KulMk+4eOksFiLoFS/1InFLtBPS2au+IOSkl5Iz7S26epTc/J0
gqUTq3u5+f5t3OPzeVtU75Rtl5Iq5VNS+HZV7KwDcmtQql97P0Omn5bMXnJK
eR4p6YX0TGs7ejh/2drx6R+caIr5/HrpH+vgfN4W1Tt326WkSsWU9ElEktMP
yOMpKTxmVhVG365erDaqclamnrAlqdfXu3HVHCElvZCeae1gD4cn8/B+Bm6R
un8LZ43ieVtU75Rtl5IqhV0ajQNhyRYn//oKw0ampkdLVkaemlmZemoaEG7C
lVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6m1Yw83b86tTtmi4rcub9m77
0ukp6eau/NXBbVltV2rK9GvPT+kd0bpJ0TLR3ggbn9qcG1+kJl7v9MOJa0hJ
L6RnWjv9Qpa/fP98/ePzo4e/FofWzzr/7M/+bQ9/jbbu9r22ad+Fd0qZm5Cf
U/70T/9dD3+Zrdu0RauSf/In/3sPf7uPzN3bvtQiJf2jf/R/9vDXNJJURqGm
KamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d2Xfz7Ud08SFS
0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0FilpUFLSC+mZFvJB
pkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp6amKGS28EqUK
p65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp8Dvt4tbdno+k
pEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvvsXffaRd7qT4l
rXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G356MjKanyo60L
LhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGqUvWvajiyddHF
py15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG9UTrjC7YYuu2
ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42vJ+WsImU9E46
p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkpunU7HvrU7OXo
XmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop27MGUtJo4v/6u
6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwzXMW0KyWFBVKL
V9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnRZ0PFucVHSy22
7khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11dX8/pbXubHd1O
D6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+n+0paRbGpe+L
1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+Xv13U+Wnb92N
Pp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXWlrnATbGfDkUD
zpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYTaSurbbF1qQQ0
JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1uCn5/NEulp7u+
cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T1MHzYXhFy1/j
puwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR3bHc0bekpGiB
rSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv6JD8BtZPPK7Y
1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn2CmdksIX4e10
DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV6xZbtzslpSZO
r3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14vHZ7maakpNfS
P41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRzwTfuarZud0qq
z8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp8JRUuY2bLgF3
mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5WsWWqGiZcGK+
WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML5t+upi/rabF1
WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w7m4Fm0lJr6V/
Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2f+9MSRf8vfwq
ubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sffad+ej6Sk3Vt3
ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653+tbVa5GS+nFK
F73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOdeeGdW/0AUtJr
6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZpKRxVX630FXs
ODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt8AZS0nCCf6Oi
NiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6qB19C7yBlDSW
MCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJb6aL2tG3wBtI
SQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NFTeleALoyekpK
bVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek1VLLFzU15+vJ
h7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzNWtWTLxy9BIf1
pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd0tAedp3qdnOk
pE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep206Skeqc/1MsE
qB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP6Z4HbLcN603Y
S8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClpLPWHcevDfnfl
I45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9lIs9qVmp6dEpq
IozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd8gnyUfFFtM6t
pKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8kYo/qRepiZtI
SWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yUPvXRfX6pfCVh
DZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX4Thoa+ilmZQ0
iiMpKXNzmLpTzdzc5hcsrjd/i9tnUJKS6hVTSbQnpaStHJA19FJTupexOGLr
6asvKWkI+w7XypRUWb7+1rRmLfXr7YGUtMnqOVFm4mrWssymKeEqUtPzLSmS
ksail5rSvYzFEVtPX31JSUM4mJI+6ft8KamGlDSo00ONlDQWvdSU7mUs0ZuT
6PU9Oj1T7Pjncrtv8xrdOBndX1JS/3YfqzVjJzrEzkpJB+vph5Q0KCnp5fRS
U7qXgaQO10xKqqkhfzOTWe9ZGtVvdH9JSZ07EpFqPs2YM0v9xyD5D0/CCpdv
wzLRFfWWSnprD5WkJHRUO/qWgWRS0ieWa1bloxOjC0ZftCMlNSUlvUHmYw0D
oYaUNCgpCR3VlO5lFNenpPzoSH0yPAXCtURbG74I17VpwBrdHynpHaSkg6Sk
QUlJ6KimdC+jyKekTxBtUjdL4fQwgBTvGVJPnaLTl7Myj6vqF6lkdH+kpNeI
foyw47OFd9JLg5KS0FFN6V5GcTwlpe6jUnVmRkeqnvoQVFkys0VFRvdHSurY
KcfncjRlIlJqmLdLB2ONPilpUFISOqop3csojqSkTDLKpKTMSue5mSdBlc2r
D1aZlqSat3WR55GS+nRWRFq+To3r6PDZ/eFDZXvGIiUNSkpCRzWlexlFMSVV
vs7P2logFYJSJXekpN2D1OimW8cPzk3Bp2bKceOOOClpUFISOqop3csoar4z
s3r4MqeMVZnUrFSdm8rkXy8n5kUXOd5jcLtTjsxMJcX682M8NX7DyvMngWLl
m7a3qR2nF65UedW4xmWbfNmK+rGv/af3CTPdyyiGOFanX++g7q1ziB7jhU45
MleVLG8zauqfEqlnWdvq9ar+sIawqnzl/YzQ3XdoXOPn3vnx+dHD32XHyZUr
+sf/+H/t4U9K6pDuZRRDHKtSUm/8Lqk3LcbFasopKSkzcZV3dqSk+nZeQ0rq
nJTUdEW356MjKenT05nkkXQvQ+jhQK25lzjy6PzcOnvosdtJSb25JSVVFt6U
ko48S0q16i5SUuekpKYruj0fSUk9070M4cYDtcUTogsM1NR2pKSunP7pQept
ccxKSUtSUuekpKYruj0fSUk9070MQUraaqCmtiMl9aPFATktpGZlliq+DV+H
LzLTayo/vU926KclRElJTVeUiS2z5dvV3NTrZWEpaThTzN2NgqQWx2fqdiV1
VzM3YzX3U7qbihZoPeKM6I+U1BMHZLfcANyr2P/TIiWFd2410SZafjkl+jqs
/7Lj5MoVpTJL+HpVOFom81pKGkU4ypwk6Vyj43MVZD6/JqBw1cukkypWWc/p
27JiRH+kpG44GnvmBuBexTuxMKpEX+eD0lmvL+uTy1ZUTEmpiVLSU0lJDKdd
Sgpfr0ZEqkz0RRip8nGpHSP6IyVBBTcA9yrej2VSUv035aSk1IoysUVKei0R
ibFclpLyoSYTjuoXl5IuIyVBkXuAeyU+t/7lE7Zo5JkSX59bfWtOSsqvKJ9c
VpFnJZWMwgJS0nCkJAbSLiWFeWe1xnxK2jHxguFmRH9JSVDkHuCITMY5xSeW
kmbR3BSdvlqkmIaii7TbzBvV5Jfdz5KkpHGtjpO7mwMFLY7SKf2vN8wTVy/C
RcIX0XrabUXIiP6Skm7nUOyfe4B7RW/dVwXyz5LqC6RKZl6vFr+sTy5b0egp
6eM024yIxEDapaQrSUlXkpLu5TgcgtuAexU/ss5Em8yUaOqRksIV5ZORlPRm
UhIDeUBKet4lpnNS0r0ch0NwG3CvYv/Xp6Qp+BXS8d8ivTYlzVZTwrep11LS
A3R7euyzVdzr3KPiyk8Jrhxoxs5MSrqR43AU3d4G8LXKL6vnRKmHR/OUcJHp
V6ny0QUv2+TLVrTjuU+LPympW312b5+t4nYOjDz9syQl3cVxOBApqXNhJsr/
TemnQgf/pCQpaThh6r/Rudu12sbP5R/I9+OaTR6CDsnQMytS0l0cigNxUu3c
JCW1XNHt+UhKaupn5/yDf/D/9vB3ym5KZYTlafya4+HnWv6Hf/Evevhz/If0
SUifhKSkWzgUxyIlde7Uz1yPumyTL1tRP45sxYl98jDTs1LScrtSb685HiYp
qW9nnV6GpgfypKRbOBrH4gQyqN8W+qxwt2cckJeNrGd0VyNSUiNS0lhO/1Rn
CHf3Oqw5LIfjZDIoKWkIF2zLk7rrdNNrUtI85ZrjYZKSALZwshqRlDQoKWkU
rYfYw7rrXE9NSeFmfk490opVSUkAmzhZjUhKGpSUNBZB6RaZlLT6cs5qYvTt
akqm2C0p6dwK899cWqakudj39XJ6mGjmkqkpmZLRiOTgh338LgmKXGUGJSUN
p91Ye2qPHVdMLuHr6MTorFVWCss/JiWFh+6cWcLIU8w10aRTnJhJUuduO7yE
lARFrjKDkpIG1WLrnt1jRxxJSZmItJxye0pqERaiKWm5lil4crTKMsUCqylh
vMpP8SwJDpKSoMhVZlBS0rhafPJ/boWPsTslpTJRqpLviTS/rsf4pFNSTa6R
kqAHUtJlnKbG5SozKClpaOeOuzf02D5TdXIJv0q3KSXd+42706XC0bJATUoK
y2Ry06rOMCVFaxurY6EfUtI1nKOG5iozKCnpAc7a0vf02FbFlJR5NiQlRfPR
XKCYkmanpKRUbWN1LPRDSrqAE9ToXGUGJSU9wykD8FU9tsnulBTOTeWmB6ek
fIHKr8+lngrVp6R8bWN1LPRDSrqAE9ToXGUGJSU9ycFNfmGPVTqSkvJBKRqm
HpOSirZ+Ly6VklaPh3bU9rCOhctISa05Oz2Aq8ygpKSHOTIS39ljNfKx5Ssz
MSyTmVJMZHd3xpnCqLIMNam3U1qYjFIFwtru7gwYkpTUmrPTA7jKDEpKeiRB
6Vz55HLKX+UqHraDpuCLc3f9Paxj4TJSUlNOTc8gJQ1KSnqqfUPy5Z2WIiU1
IiXB6KSkdpyXHkNKGpSU9GxbO0GnRWW+4nW9uzvjTHf35S/u7gwYkpTUjvPS
Y7jKDEpKerxNY1OncaWfx9uPz48e/hz5sI+U1IiT0pNISYOSkl6isjd0GleS
kmB0UlIjTkpPIiUNSkp6j5oO0WlcSUqC0UlJUCQlDUpKepXiONVpXElKgtFJ
SVAkJQ1KSnqhTM/oNK4kJcHopCQokpI2Wf6rSsf7bUcN7faXlDSE1AGg07jS
MiWt/sW5MMXM0+f/RkuGC6bqkZKA3jgXPZKUVG/ZUbv7rV22OlizlDQQQYl7
hRGm5vX8tiYi1dQpJQGdcC56JCmpUthLUlIjDsga4cjVb1ymJiVFn/tUpqTK
5CUlAT1wInoqKalS/ichmW5cfUlv9Xr1YrWusEx0btiG6Nv8VkhJI1o937yx
JbzKvpSUSjpSElzP75LO4iz0YFJSpZonOJnnTeGLTzYNZRasLJBaRYqUNKia
CAznCqPK0sUpyVUMdpCSzuL882CuL5V2p6TVxFSE2fci9Ywps4oUKWloBjJX
yjxLmt9e/CzpyBBoMXamnpy+dTyAlHQK4+vZnEIrhb00BR/gz1NWvbp8G5bf
96KmZGpilJQ0OmOZy0y7UtKUfsw0nzYPfuNu3yhoMXB+1vnnf/6/9fDntECU
lHQK4+vZ3FnVK6aPVJIqlpeSlhyQ+4SxHRqpSUmbks7xZ0mr5m0aCNEPtQ5e
HKUkOiclHWdwPZ6UtEn4nCg1MTVrdQleCueuKokWzi9SbOFMShrdVJ2I4aBV
bFkpPiTKlC8uFZbMNDI/FjKn1rnAkS66PR9JSWRISQcZWW9QvI7Qp9NDjZQ0
uikWxqGFaLS55a94nNeMhSn44Cs6fWsX3Z6PpKSoaDq+y439ICUddO/u4xq3
j1P2kZIITYmbPTjXNE5KmhtcP3eSkh7tZ4f86Z/+ux7+pKRxGVYvISUNSkoi
FHadAU4Ll3zKXmtTm1Ozom/rK4/WmYktX6vX9bOkpCMmKenvSElQtOkqQz+k
JEKVN4Fw0M8j6p/8k/+lh7+tx3blJW9HCgtryCeX4uv8LClpNynpS0raZN+H
M4zO7h6UlEQo03VGOicaNyXN7W89HHakpHCRzCwpaTcp6UtKmhVPCKsCrqfv
YV8PSkoiVOw6fcspRk9J81a0GxFbU1K0fH5WZq6UlCElfUlJs/xzovqJPI8d
PSgpiVD9V4kuaAwP9oyUNG9LixGxKSWlCqdmTb/+WElK2iSVkr6duXr7nTIF
MjXky0hJHQr37/Trk6PUUlc1kNu4ZRqUlESovut0Mkc8KSXNW3TuoNiUkrY+
S5q2fBPPYF/J5JfVrFVoShWrWURK6lk0Jc3nBCnpzaSkzmUG7/Uu2+RrVvQ8
m7ruyn3Kw0yLlDSfH8L8Ek6vKRY9+aRqOPcYPrG2qeXvkjKLSElFUzbjTNuT
0ZGUxBBSB9LFhy7XyxwA9ODn3vn97/9ND3+XHScOyN12dJ3eZocpiCpTIv6E
E6PPg6Jvoy/Cwqdv2il1Ti3/jbvp15RUXNfxzXmSqfQkaC4wxSJPauJqWc+S
BpJPRtFzgpvnl7CjOyclscm+oKTP2SSaa6bgiU+xWCY61UeqRht4sOZMcplv
w1av62f9+eIXScuJUlKNYkoK49LquU8+GYUlpaTOpfLRqkDqLQ9mX3dOSmKT
3b2n26n3+JQ0b+aRAVX8Ltw1f4b2yu6UFH2WtKot/7arlMSsZqQXkxSPZHd3
TkpikyO9p+epFI0/YQ7KF+s/Jc0bu2MtUlK3alJSmICiS0lJ8GxSUuekJDY5
2HtOCNTYnZJmA6WkeZNT64pOn3rSuG8GMx3+N+5WEzPFMuuSkqB/TqGdmxIp
ab78RScu565KhgumKjk3JdUv7oA84pTeswvIm7anpNQio6SkecPDKdHL6M8p
Pz4/evgznFdSyWXeldFv2a1mpQqsZCLS7SnJ75KgSErqXColhekmnLhMRpky
qcQULnVwQ04vSeis3nNmIKMy8uxLSdGQ1UlK+iR+xy0lDaQYXi77k5Kgc+6F
OnckJWXyTnGRpilpPupSdxdHVvRy5/aefUHUKuN8hRlnnh6WCWdlyqTWdUtK
mnsgtCpwez6SkqKkpC8paSkznKNvw/F+XVu5UPQ2lX5Me1PSlH0qtCNt7TtO
UvcSywPP2eZEp/eeUwShKfEduev/7j0483dWt+cjKSkqelW6y439ICWtTOlb
kcys1BSe4fZxSt60PSXNdqek1eItvnG36fxDvUa9Z6ewNElJ6Zvtee7t+UhK
auQZXSolrWSyz+pWOXrT8oyjghUpqXM7UtIpz5KafuPuIyW11C4o2TV8VX1K
fpUOO+GTTUlzsdXr+llS0r2e0aVS0kq4W6dFSgrfroo946hg5d6rDEXTE3+X
9PGNu5aadqC9A59STvyUniUt56Ze52dJSTd6RpdKSSvFlPRJBKLUzQwPICV1
rj4lTX/4d78rJ16cksLt+vjXG9po3YFOGnTuxuNzmZW2pqRwkcwsKelGz+hS
KWnlSEpafkLCk9itnctEmJXUxLB8tJ58sUYpaessalzTgXYT3erh4NyakqLl
U7OWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIOtKfoU/SW
5sSLXc3nxptSUqpwflblMybj9KDw48eUu1u6jZS0ksk7+2bxACMO7Vd5ZErK
X1MckAdd2YFOIPQjdeO6PEpPD0qZlbZ7liQl3esZXSolLWUyb3RKdNageZkM
O7Rz+WvxxS7b5GtW9FTXd6BdRlem6g9+j6wif6qcGv8uaZKS7vOMLpWSoOjK
u19O9NtCnxXu5oA86JYOdCahHzempGWBrSkpTD2ZWZURSUpq4RldKiVBkXub
QUlJpNzYgfYdPQhT0rT4SsxZq8g/bc9EmLn86nX9rNempE62pZNmHCQlQZGU
1LnUJ5a3uGyTr1nRg93Yh1ceKlBjOvVfb6g8PU4H/u3uyuxTX/L4Vneik23p
pBkHSUlQ5Jamc60vtZsuypdt8jUrerDb+/D2BsDs+NEYTUP5j4+kpBbC/v/c
cRvzjC6VkqBISuqclMQOPfShcwud2H0cFnNQpubcU/nL7dv8fqQ2arl19Zt5
Xb9XaNVlFaQkKLp9nJI3SUls108f9tMS3mnr7ehZd7A/F/8f//Ive/h70hhc
bcv066Ol+kpuv55efFUF9pGSOvfC87kD8riu+tBJhv6d/tm+lNSClARcyQ1M
5154PndAHtdhH3bYJF6u6RefpKQWwpQ0T5GSgNNJSZ2rOZ/PF/ofi//V4Eqq
/HJiJ+dzB+Rxffbh8a8wTTf9WJsnaZeMVmu5PR89LyWtRE8IxZ0rJX35XRIU
ud/oXE14WcWfaOqJTp9+/T9xdHI+d0Ae120fHjzh7PvoGJo+Nkqt8fZ89JKU
FE7M7+6tnz1m5tZcOnu4qkZJSVAkJXUufwYO56ZS0o/FY6ZUwurkfO6APK7z
PtzdvNUnxic1h8e6OBmtVp2JLV+r1/WzwrdS0nJiaFWgMsLUfz4pJcEjSUmd
25qS6gPU5Bt3j9Z5N1aeeVY3OVISRal74+ubkU8uxdeVxYpB6akjJbWXoylp
dRqRkj5SElS4/VJCXouUVJwrJT3AEN24tZGpxAQ9JKOlHSkpXCQ1a2tKYvbZ
lZKmxWeMU/ZbGVISPMl83qBP+dNvZm44a/Is6U1G6cZNp6D5JmeUraOp1d1v
V6aNKSlaPjVrWnwl783fuItKhaNlgU0pKZWMlqQkeKQ+ry/MtqakVRQKZ6U+
AZOSHmasbqxs7VgbRSPdJqOlTSkpVTg1KwxZUtIsk4/mAptS0jIopa6Y+4KS
lASd6/9a83I14aUm9UTTk5T0YMN1Y825aLiN4iz5+94ObUpJ+54lSUlRxYNE
SvqSkqBooIvOO9Wce8OH/lOgsnwP53MH5CkG7cZMs8e6SeYU4+70rSkpn4am
Y79Lursz+rIvJVV+DiklwZMMegF6j33n3hZ/UtJYxu1GJ6WXG+6xUdSOlFSf
hqSkI3Z89rh8EdX5VTVKSoKi0a9Ejyclsc/o3Th6+9nkGcloKRNe5i1dvd4x
qxiRpKTQC6+qUVISFD3pqvRIqU+ubnHZJl+zomd7QDc+YBPIu/jccqWpIr/s
/ttU+SO794hJSvo7UhIUPfUK9Xi/LfRZ4T6OxhM9oDOdoJ7n+g9ebiEldUtK
+pKSoOjxl6qnkpIoekxnPmZD3uwNyWjpzKf4h93dGX25e2/84sZ+kJKg6PZx
St69J/CVfCNP2djjlTB7Un+edYxxpZqzB3ALKQmKXL86N3X83YDKDLVpY49X
wux5/fm8LXokyQj6JyVBkWtZ5/pMSZueNFVupuNwZc/Tvmbu7oy/11t7+Dp4
tBw/2CoXdPzAl5QERS4ZnZs6S0mn30g7AlN+dstf/MX/1MPfvTuo/yhX38IL
3LXtByuJvm7k+l7ieRxF8Aa3XFipN42Tkoa4qRvIJCUN4mf//O53/10Pf9fs
qdPH78UHmOOZ4xxF8AbuVDvXW0qaWyXvtCYljeIlKanpSF9VO68o9WIunzkX
hctG1wU7OIrgDdzf3qvY//mUNN8VfF8vpyxnrRZJ1VCfkpaNl5L2qdn1t+cj
KanGg1PSlQM8lWWiqSdVLJwVrafNFvAiDziK/C4Jitzf3qsYNDL5ZTlrmXTC
HBQtFs7ampJWW9Gynx6oZtcXw8vSauKOt/empMqjqNhv1zdselxKurJ7w1UX
X3zSmSg1a7k5TlYc94CjSEqCIve395piVgWKEWk1JTOr8vXWlMQONbu+5ilP
+Dp8UZzYT0rK35+vZl1z+io27Bkpqdj51zg9JeXrgX0ecBRJSVB0+zXx5aK3
ysudUp+SagKUlNSPml1/MCVFS+aL9ZOSwlNT9GR1wRmspmH1KSac8hW+ja73
9JQU3aKLTemwE31RfFtZ4WXi4/w1Lu7tazxgu6QkKHrwSewCF1xcpp5SEpf5
nJqSwmI1lfeQkube+KRvS1o3r6Zhu1PSamL0dfjiYEoKN+FeqfZk+vyz5Tt1
+Xra6aqTb/TIfnjA5khJUPS8c9dYipfvqWVKWmWfmmdJDpiz1Oz6mvwyS32P
LpxbU3NqLXf5ZFPS7Q2rj0hh4akUgirrL6akZZtpTT+HntQnD9gWKQmKXDTv
Fd5xhQW2RqHMrFS8Sq0l9Y07x8xxNbt+07OkyonTUM+SVgVSC97esOMpKVPJ
kZSUP8ZoQW9nPKZzHrAVUhIUPeaUNahi/2fySyr7TMHTovonTZUpqabl5NXs
+nYpaVNQuiUlpQrUTLy+YZu+brcq/622ZsH6lCQZ3Ui35z2jfx6wFVISFLmS
di4fYeZ7ocyvhzLlwwL1KWlu3vV98hKtU1J9ULoyJW0qc83pqybPVkaYWbtn
SU7p99L5NfRSD6QkKHJJ7Vx9imn9lzpOHEKNFCPMfEucmri8LY8uEq3hrpRU
afUhwN3N+Vs1KSaajPLPmHanpLv74710fj19dTspCYpcVTvXf0qa23lZn7xE
5YOeC/7s3LyzUlIqEG1KSR+D8T56vp6+up2UBEVSUuemntQ09ZpueYNJShrE
VPEPdH+FbzOzUlOKKenjFvQmmW5fnR6XJ9WtZ9qw2k0L7js2lvWfcnSNfoiO
3v6PlAQV3NkO6reFrip0OJ1FShpFZYS54G91H35jn7xQzedIqbdHdtxlO/3c
ykc/Pkdv/0dKggpS0qC6TUkfB9VJwk+Yb3R3Z3Rt6jIlfR5xIzeQYm+vhlLq
9ZH1Nt3j51Y++sE5evs/UhJUcAvUuYtvhvO2trxRn0BX7h6Xv4i27ZZueZti
P0+//mpsiqWbVCXLAlM6C0cXXx4by8WjB8+qtrDysKpwkcqjbugjc+jGf0lJ
UOQa2rmfe+e//6u/6uFvx3Hi6IIeGIYXqExJnyAufUrhIppHostGY3J+7WH+
yhTYukje0Ifl0I3/kpKgyH1s54ZOSfMmnNsnwFaGYWsHU1K+ksyVejU9fBst
UB+CKkvWbEW+5WMZuvFfUhIUSUmde0BK+jjMSIt+Er58m/+onHp6r6n6lPTJ
/kZpWSB8alNcb7RYKuxkklp9OMrUmTf0ATl044FKbjw694yUNG/LKX3CwxQ/
VM/fT1JP77WzKSV9Nh7Vq+RSWe0nnWiiuSxaYMezpEpDH41DNx6oJCXdq9j/
T0pJNdvLC+1ISR4t7abTGimeyTPPbmouBMvCYbWpSlbTl2/zr6OVR0UXqeiw
sQ/FoRsPVHKnca/VJSZaIJ9cvr6vl1OWs6LllxMvS0nLrYavaXtKSr2lhk5r
YaxezYypy+ocq8dWhm78l98lQZGUdK8p9qngqkAmtqziTzT1RKcvJ16fkj4O
PBZWn0vPE/MFPo+4UbmLrjvdWF0qJR00dOO/pCQocrN6r2jnL3dKKsKE01Mp
qTjllpSU2XzeJjUKigUcP0fovXP11p/FARL95OGUlVbW2VuPvY2UBEUvudOY
fpWaHrqgZKa1ny0pqTITdZWSMp3Ae6RGQb5AcRZFeu9EnXRm5cDpQefNezwp
CYoef4/a+Qau2ha29vEpKdoPvIqUdCMdeJZOelJKopKUBEWdh4gjhti0+YFR
5rnS6Skp//aWlPTZvr+Kz+yu1K5bHi/ah8uJxQIcpBtP0bobVyMinP4JxsVc
PlrDqrZUPe3G2tAH3tCN/5KSoOipdxqjbFSx/6ezf5eUn3tjSpq3N5wSXfXP
iX/zN/+6h79RDjZIcQwfd0Ef5hNQ2Ixl0kkVq6zn9G1pV+01hm78l5QERY9M
SU/aokyESWWfKf2oKJqkukpJn+wnpatit+cjKYnHeOS14ErXpKTwdfT5UVgm
+iI80+bj0rmGPt6GbvyXlARFroydy0eY+boWTinOStVwe0qaN/zz69fqwgK3
5yMpiYdxMO92S0qqfAYUhqP6xaWkqKEb/yUlQZGU1Lma/HLN3/XHSZj4VnNv
z0dSEs/jeN7nmpSUehhUmZJ2TGy0XaMfZqO3/yMlQQUpqXNS0r6UNC+yev19
W1NMSuK1HNL7tO631ZOgeeLyDLl6ES4SDURhPa23aPRjbPT2f6QkqPCwlPSk
bfkKk8KNetjwZYFieCm+zs+SkngtR/UOrTvt+p3Sbo2jH2Cjt/8jJUGF6+9+
m3rStuT9ttBnhUfUhLV9KWn6w2MjKQnyHNhbPSwlNV3diEdXD58fnkhKgqKh
x3joSduS9+yUtCQlwV0c21s1ffhy2fW69YoGPa6izR50Wz5SElSQkgb1npS0
Mh+xNYkmk4nCifsikpTEszm8t9JjeUP3z6rxQ2+LlARFUtKgXpuSZrtT0kxK
ghqO8E0edlU91+g9IyXBqzzsfP6kbcmTknakpNUima/hSUmw5CDfSo+FntEn
y60YeoukJCiSkhhUZajJ/Ozo+C+S3paSwt+Ivcrd3X8zPbCV4+eT/T+DD2re
kMdsEZDypHPXp++z1vJKMf83fxmdgof7mf0VnXtNh9xyFE0bU9LcP6m3UlLK
w25ydtMPW7c9njZv0qhPBu2Ny9zd6+ebpCR4jYedx7rdlunXZ/Sp02yqWDgr
X3+0hqau7/npQK4596/bo+4Uz966fd7cJ5u2/WfhH58fPfy9eZdxuofdOAEp
DxvsfW5LJtRU5p3M6/zqpCQpabeHnRzO9ebOSW179Gx2ez6SkjjdM4a/3yVB
0TMG+6zPbcm06q6UtPo6RPTtJ5bmlrOKD7BShU8hJbX21O06y8v7J3/umqfc
no+kJFp4wBElJUHRw1JSn3pLSavskw870cQUTU/h2+gqzjL15PStu90jN+p0
T+2lyu1aFQuXmqQkLnHjyf9eRzpNSoKi4wONokwPh7OmdMapOTeGi2wqMyVi
TvRFODHaQgfYcOyyeo/sq/qNyo/0KZaS5lPE93U4fZ41vy6+jU6Rkh7vlLAw
tCM9ICVB0cvPMNfIRKFNKSlctphHrk9JxdXRv3N32fSr1cQdb2safNmZ7ZGH
92qMz6O7eEYKZ4VpZZVrotMzE6OvU3OlpAezT5d29IaUBEUPS0ndbksqy2QC
S/g2OiWctSlnpcrnX6TmFqczhNP3V+UxVpxYU39mYovj8EnH9hTzSQz51YLR
WavAkglNqWiTmSslvdbD7lvOsrVbpCQoetjZpudtWd51rKaEs8Ly+T0VrSda
bbS2zILRF5/gxil1QxVOpHMt9tTqYMusKJxbbM+UvkUvTjnukQd2eC5KzVpO
j3Z4PiXVZKjMUtOvMerbBt+4ezx7M2VTz0hJUPSw29cnbUu3dPKz3ZiSwmI1
jcmnpFVUP33rHjkcdqSk6Kx8Spr3SPQ7ePnUU/OFPSnpkezKvPr+kZKgSEoa
1G8LF1f4nk5+p0YpKQwp4a34am5lS1KxK0xPjQ7d542IzK45MSVVftGu5gmU
lPQS9mONyl6SkqBIShrUXSmp0Qfy9KP1s6TKiZueJUUPy+iU+jbXe/xwWD2V
yxdbTTmekmq+dCclvYT9WENKgrM87I73SduSd+OzJJ6tq5QUFlsFokwO8izp
LFsf6i2n5GNRNAflJ0pJb2Y/1pCS4CxS0qCkJBrpLSXlm1RMSak6T/T4086J
KWn+PdFXZmLmbaZwJkw16BgutRrdq09LlvLLblrRvhrqV3T87BRuspQEZ5GS
BiUl0cjpgyh667KcGN7e5N+mao7W+Vmc5Rqd7p592snceYYlwymZnxSd+Fdc
0bP30Uvks8DxuFFcYwvFVewYelISnEVKGpSURCPvGURn0WNfUhJNSUn1ZWqW
kpKgSEoalJREI+8ZRGfRYylTT+7uDI6atqSk5U6Pvl4VS73IzA2bt5q1LLM6
CFPNiL6Ozio2Jt6JC1ISFB25fFRfnd7u3F32JSXRSOURu+/AXo6IRkMjuq7W
K7pgLfByq4GWehs9yUxBfkmVib6ILhsO/OWsZZn6ZtS3KlpJqnOipCQo2nEj
0fTm/5Fa9JiURCMXhJfL6peS4DHqU1JqYmZW/kVxbr7M6lPTYrWpEFesJDMl
JCVB0da7d/cDR5zYe1ISjUhJR9YINDJ0Skq1fMezpEwlmSnADvUpyfOjU5zV
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 9->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
M68Wz1doo8M7+bskKJKSOld/s3Tw5kpKqmnwuSNw+opO+SXYwRr4BD8rjRZI
7YrR9/V78up9sUJbHN5JSoIiKalzm+6UmuYOKekNKemsSl5uilkVaJGS8mcD
KQmYSUlQJCV1Tkq64PWYlHRw2bNqIJqSlifbrSlp+Zh4fr+cUhmIpCTgS0qC
Iimpc7tT0vLGLHpn1X9KWrY/OmV1/5lZsHJFcIHMzr8quTqup1hQmoLjerls
TUqaXALgfaQkKHKJ7FzqbiqfklZvwpurIVJS9L5uNSXscuaG8GDXLjtSDq7o
lHY6LRyRCkfLAjU7/BR8IZA/0muqiu78LgTwNlISFLk4du70lLQvImWixL79
pzKv5b8Sz3x/LiXd3ow3y+SjuUB9SqoJR/mUlDkcls1zOYD3kJKgyGWxc/tS
0io1tEtJm/af1X3jwZRUeT8pJXVS1asUj4srU1L+oAjb6aIAbyAlQZELYucO
PkuKTt+XlVJ3U8X9J1WsRUra18eHpaRTamhRFbPUjr2SmTXv58s34bKpCos7
v0sDPJuUBEUuhZ2rv9tP3R0tPy7fHElJq1uvaLMzc+u7lioTTp+kpFNraFEV
s33HYItXfvva+vBUUhIUSUmd251oikFj991U5EvtxR+A1+9RjVLSr+1J8Hkp
6axKTq+Kr1FSEvBUUhIUSUmd6y0lRSPSvr1oR0paPTCqKSklncJZ4lyZ4+h6
W9vcdGSAa0hJUOSq17npwD/c/XXid87Hb7Q2dS1cS6pr0Smnp6TPVWHhlLWc
3lQnCr5cNeABpCQocr3rXN2Xwffb17WzEtzxAFjf5h093eqstZze2mu6zxB2
H/hAD6QkKHKl61znUSIVlGp2qs67lmpzZckjuk1JjepkXK4gMCgpCYpc4zo3
YpT4VKekfpzYr+NOXMvpDb5mBBjLpoMI6IGUBEWubp2bxk9J8z5WubPtXtEF
pKRGdQJwJSkJiqSkzo2VklKPaZa7WbEeKanzlNSuWp7B7gHAA0hJnatPSXMq
2TG36bOkT/BoadOyW9fV1HApKVPbwbU4b5Cx9besANAbF7LObco1mYhULCMl
9bOuIVLSKTXweC4xAAzKJaxzj0lJjX5xt3uRfUZMSakKV9E1/G3kvmoh5EID
vfF3SVDk4tW53Slp9cdB85RrfnEX9uLT5l9v2L3IPg9ISVPMZ2OSbddUHszl
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
3il9l5IqZYJPMROdsqV2p6Sz1n68kttXsZtL/6CkpBcyMk3VDK+4xKCet9M+
r0f1pKQrZbJP+DgpLNYiKNUvdWKxC/TTkpkr/qCkpBcyMq1tuvrUnDydYOnE
6l5uvn8bd/98Xo/qndJ3KalSPiWFH1fFztohtwal+rX3c8j005LZS04pzyMl
vZCRaW3HCOcvWzu+/YMTTTGfn5f+sXbO5/Wo3rl9l5IqFVPSJxFJTt8hj6ek
cJ9ZVRj9uHqz6lTlrEw9YUtS769346o5Qkp6ISPT2sERDk/m4f0M3CJ1/xbO
GsXzelTvlL5LSZXCIY3GgbBki5N/fYVhI1PToyUrI0/NrEw9NQ0Iu3Al1+5B
SUkvZGRaO2uEp7TKYtc7peN6d4vKBqc+hjXc3J+fTunRcL3Lm/b2fen0lHTz
UP50sC+rfqWmTD9HfkpviNZNipaJjkbY+FR3bnyTmni903cnriElvZCRae30
C1n+8v37/a/Prx5eLXat33X+03/6v/XwatS727fapm0X3illbkK+M/t4bUhJ
lbdVQ/Qub3ffl1qkpP/ln//zHl5NI0llFGqakopqGtZ5Spo/SknsICW9kJFp
7ZqUtLwi3H6PLSXt7t3tW+3ItptvP6KLj5gj8j0avXdn9X1JSqrsVPTsvZy1
nBKdFZZsTUo6i5Q0KCnphYxMC/kg06Lmuf5p8DvtYvdvz0dSUqb9+bl3x4fN
OWJTybs7tbl3Z/V9SUp6qmJGC69EqcKpK9fyTWZWqpLi4sumthuoGmGTGIKU
9E4G53TRE/jxca6pZBr8TrvYu9vzkZSUaX9+7t3xQUraYF89UhL9u31TSkmD
kpLeyeC00CIlVa739nvs3XfaxVGqT0mrke8hJdX07vatdnDbZRYcLkfkv44e
vXf1fW+qZmBvz0dHUlLlV1sXXCbcmX/1MAi2xaCkpHcyOC00ikjFCr932qtV
198bz+XnpaJVpepf1XCkd9HFpy15Z1l404JNU1K+d1uzTP1W3rQzNOrdfBs/
l1rd3i+mh8IFw3qidUYWbNm72iwT62BY4J6UdJmagd2aZcIpS/nCjVJSac9Z
/25tx4qOt+Tx+ul4Py1hEynpnQxOIy2uSrGbqx+rmBZBZnnTW3NjvLqjTs1K
TQxrOKV3qwKPSUnR3u146FOzlaNbrWlKivauFAGmoEz4PlVgU52te1cflFJ9
yUx8ckqKDuzBlLSaOL//ruvilLTqYNjf1MTjikNdX8/pbXubRpuY1qSkdzI4
jRy/HhXrDFcx7UpJYYHU4pX17+tyvmufk1LSt8LVx001n5iSVr1rnZLqq23R
uzCtVExJBYf83FSZ6cSUlO7djpS0r0B3KWnr3yXVDOzWiBQuMsVS0i3PklYd
TNXZYiMWh7q+ntPb9jY7hp0eSEnvZHDa2XcZqqkwdZmbsinmW3iVZVYTK2/F
oxOXHzMX5X0+21PSLIxL3zerj/sqP7F3Z6Wkb52rrbyp2ha925uS8sX2pKTG
vduakpZvpp/tXE6sr/YhPp2lpEZ9rD/Ph0udVbL+AvRxz3DYpjGnH1LSOxmc
drZegypry1zgptifDkUDzpSITuF9dVhVJmHNU3b0uqZ3O54lrZaaaw6fK434
i7vopslE2spqW/QuHRCmYPqqwtXEYu4opKTGvdsRZ6IdnBK9KFS7tXcnOuVZ
0qrAjp/bTcHfH81S6emuX9ylltqxriMtqa8kbN5c1apr88dVgVRLdrdqOC/p
5vNISe9kcJo6eD4Mr2j5a9yUvUOeFwwfNxx8fhS9ez/S2VTvDqak1MRNNZ+S
kjLbblOciW6O5Ya+JSUlCmxNSamJyyn1KemPChv3rj4lZXq9SkyvSEnRAvse
99Skoa2V7xiQfAfrJx5XHOrKSlZvlpV/FjkoLJ+ZFdb/bI02Ma1JSe9kcFrb
NMJ192PJc+yUTknhm/B2uoeUlC+wIyVFw9F0+Bd3LXp3SkrKb/GmKalUYF9K
KiaLmpT0433j3m1NSfk2b615vJSUL7D1QVL9L+vqKz+YkuoL7DtzntKS+krC
quaP05+j0KrYpjeP124r05SU9FrGp5Hpp5piNXXm56Zum1ezUh/zgSha/1kp
qabv9SnmK3xgNMVc8Iu7mt7tTkn1ubhRSqrpXU1+KUWeTIGaqqZGOSLWmK0p
KdPBTZWPlJKKpsFTUmUflxqt5bhV25Yf5/fTn1NSZtmwm6mlnqrzDU2KlPRa
xqeF1Zlw+bHdZXH6+S8nrGJLVLRMODFfLJzeYqeaGvz/Yfe9GvVua5aJbprU
5u4mJf2x4wdZYJ4eii6Y//iJVdVJSip2MHwvJZV/axd+XM1KLXJjShrFagSW
H+f308+8k3kTVvWeEf7745nRSEmvZXxOFz0N/nHf03K9W59HNHo1uhe9PR/1
k5KG23Ybc0S7l961cuOzpNavl18lVxev5cfw/efnFTCz7LL+y/pyOylpUFLS
axmf06WGtPVQP/5O+/Z8JCXt7t3d8UFKak5KIi/6BOrzspsQKWlQUtJrGZ/T
3ZiS+qF3eqd31zu9d/VapKR+nDJELzfFktHbxtbuNCgp6bWMz+lSQ2qogac6
PSVxvdYXqWXqfGdeeGevH0BKei3jc7roadC5EXgwKWloxadmHqudwhgOSkp6
LePTwupM6MQIPJuUNK7K3xa6ih3nZmBQUtJrGZ9G/KwdeA8paVD11ykXsuPc
DwxKSnozQ9SOsQXeQEoaTvBvVNSmpOXfFu2bFb4JWxVt7Vw4+oONVP3RmmvW
fnqokZIGJSW9mSFqx9gCbyAljSWMSPUp6ZNNOvlZ4ZtV9omuLlo4XCqabjI1
p9aeqvY4KWlQUtKbGaJ2jC3wBlLSQKIRaWtKavGmmJLC9n9i0SOsp6bxq3rq
R6aelDQoKenNDFFThheAroyeklI9SjW1svHLelpcu6WkQUlJb2aIai4WqVFa
faNVvyAA3Gj0lLRaavmmpuZ8PflQto+UNCgp6c0M0ScYhMz5OTVxa7wCgNvV
pKTV94Gr98uJqVmrevKFo5fgsJ5U+8P1pmpINT5cyylOr5BrSElvZog+pVg0
n0jrF8lPBHgSf5c0tIddp7rtjpS0ySrJVi6SqSpTf2U9Z5GSBmKIPielpMqa
AR5GShrOg69N3XZNSqp3+kO9TIDasdRBUtJADNGnLiWlJs4fU19WnNlQuM/0
bncPf9ekpOE8dZfu+YDttmG9CUfp+LilasjX3Gh7SUljMUr5QzJ6p1R5FBtb
RtfzXceVjEOGlDSW+t249W6/u/IRj0QnkEqZUcrskPP05ZtVnfOUVZllnat6
VtNTNWwiJY3FKGUiz2pWanp0SmoijMIOHDImISlpLJv24dY7/KbI1rQlrUlJ
lWqe++TvuMIIE53yCfJR8U20zq2kpLEYpVQU2j2rZjr0zAU9w+CsSEkD2brr
Sklncd6odEpKqnyTij+pN6mJm0hJY3n5KE2BcFb042rZTP3tGg+N2G/zjM+S
lDSKHftt8ZK3/JY+9dV9fql8JWENmevyqtqu5G8VmIWjFG7T6H61401YZ/5N
auImUtJYjFJThpfh2GlrGKWZlDSKIykpc3OYulPN3NzmFyyuN3+L22dQkpLq
FVNJdCSlpK3skDWMUlOGl7HYY+sZqy8paQj7dtfKlFRZvv7WtGYt9evtgZS0
yeo5UWbiatayzKYp4SpS0/MtKZKSxmKUmjK8jMUeW89YfUlJQziYkj7p+3wp
qYaUNKjTQ42UNBaj1JThZSzRm5Po9T06PVPs+Pdyu2/zGt04Obq/pKT+7d5X
a46d6CF2Vko6WE8/pKRBSUkvZ5SaMrwMJLW7ZlJSTQ35m5nMes/SqH5H95eU
1LkjEanm24w5s9R/DZL/8iSscPkxLBNdUW+ppLf2UElKwkC1Y2wZSCYlfWK5
ZlU+OjG6YPRNO1JSU1LSG2S+1nAg1JCSBiUlYaCaMryM4vqUlD86Ut8MT4Fw
LdHWhm/CdW06YB3dHynpHaSkg6SkQUlJGKimDC+jyKekTxBtUjdL4fQwgBTv
GVJPnaLTl7Myj6vqF6nk6P5ISa8R/Rphx3cL72SUBiUlYaCaMryM4nhKSt1H
perMHB2peupDUGXJTI+KHN0fKaljp+yfy6MpE5FSh3m7dDDW0SclDUpKwkA1
ZXgZxZGUlElGmZSUWek8N/MkqLJ59cEq05JU87Yu8jxSUp/OikjL96njOnr4
7P7yobI9Y5GSBiUlYaCaMryMopiSKt/nZ20tkApBqZI7UtLug9TRTbeO75yb
gk/NlOPGPeKkpEFJSRiopgwvo6j5zczq4cucMlZlUrNSdW4qk3+/nJgXXeT4
iMHtTtkzM5UU688f46njN6w8fxIoVr6pv03tOL1wpcqrxjUu6/JlK+rHvvaf
PibMDC+jGGJfnX7eQd1b5xAjxgudsmeuKlneZtTUPyVSz7K21ftV/WENYVX5
yvs5QnffoXGN31vn1+dXD6/L9pMrV/QP/sH/08NLSuqQ4WUUQ+yrUlJv/F1S
b1ocF6spp6SkzMRV3tmRkurbeQ0pqXNSUtMV3Z6PjqSkT09nkkcyvAyhhx21
5l7iyKPzc+vsYcRuJyX15paUVFl4U0o68iwp1aq7SEmdk5Karuj2fCQl9czw
MoQbd9QWT4guMFBT25GSunL6twepj8VjVkpakpI6JyU1XdHt+UhK6pnhZQhS
0lYDNbUdKakfLXbIaSE1K7NU8WP4PnyTmV5T+eljskM/LSFKSmq6okxsmS0/
ruam3i8LS0nDmWLubhQktdg/U7crqbuauRmruZ/S3VS0QOsjzhH9kZJ6Yofs
lhuAexXHf1qkpPDOrSbaRMsvp0Tfh/Vftp9cuaJUZgnfrwpHy2TeS0mjCI8y
J0k612j/XAWZz88EFK56mXRSxSrrOb0vK47oj5TUDXtjz9wA3Kt4JxZGlej7
fFA66/1lY3LZioopKTVRSnoqKYnhtEtJ4fvVEZEqE30TRqp8XGrHEf2RkqCC
G4B7Fe/HMimp/pdyUlJqRZnYIiW9lojEWC5LSflQkwlH9YtLSZeRkqDIPcC9
Et9b//iGLRp5psTP51a/mpOS8ivKJ5dV5FlJJaOwgJQ0HCmJgbRLSWHeWa0x
n5J2TLzgcHNEf0lJUOQe4IhMxjnFJ5aSZtHcFJ2+WqSYhqKLtOvmjWryy+5n
SVLSuFb7yd3NgYIWe+mU/tcb5omrN+Ei4ZtoPe16EXJEf0lJt7Mr9s89wL2i
t+6rAvlnSfUFUiUz71eLXzYml61o9JT0cZptRkRiIO1S0pWkpCtJSfeyHw7B
bcC9il9ZZ6JNZko09UhJ4YryyUhKejMpiYE8ICU97xLTOSnpXvbDIbgNuFdx
/OtT0hT8FdLxv0V6bUqaraaEH1PvpaQH6Pb02GeruNe5e8WV3xJceaA5dmZS
0o3sh6Po9jaAr1V+WT0nSj08mqeEi0w/pcpHF7ysy5etaMdznxYvKalbfQ5v
n63idnaMPOOzJCXdxX44ECmpc2Emyr+m9FOhgy8pSUoaTpj6b3Ruv1Z9/Fz+
hXw/runyEAxIhpFZkZLuYlcciJNq5yYpqeWKbs9HUlJTvwfnf/i3/7aH1ymb
KZURlqfxa/aH7wr7eNn/14xJyJiEpKRb2BXHIiV17sRvXI+7rMuXragfR3px
4pg8zPSslLTsV+rjNfvDd5/t42X/jzjr9DI0I5AnJd3C3jgWJ5BB/Wmhzwp3
e8YOedmR9YzhakRKakRKGsup3+gM4+5RhzW75XCcTAYlJQ3hgr48abhON70m
Jc1Trtkfvivs42X/BwbgZDUiKWlQUtIoWh9iDxuucz01JYXd/Jy6pxWrkpIA
NnGyGpGUNCgpaSyC0i0yKWn145zVxOjH1ZRMsVtS0rkV5n+59DMl/VEwmL5O
NIuSqSmZkpGIZOeHffxdEhS5ygxKShpOu2PtqSN2XDG5hO+jE6OzVlkpLP+Y
lBTuuovMEkaeYq6JBqLixGSSOrfv8BJSEhS5ygxKShpUi949e8SOOJKSMhFp
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
z6zRRcPqUkw0GeWfMe1MSXePx3sZ/HrG6nZSEhS5qnau/5Q0t/OyMXmJYni5
7GXj5p2XklJVbUhJHwfjfYx8PWN1OykJiqSkzk09qWnqNcPyBpOUNIjvjl/z
Q7jYx8ys1JRCSvq4Bb1JZthXp8flSXXrmTasdtOC+/aNZf2n7F2j76Kjt/8j
JUEFd7aD+tNCVxXanc4iJY2iOsJc8PIPUd6m5nuk1McjG+6yjX5u5aPvn6O3
/yMlQQUpaVDdpqSPneok4TfMN7p7MLr2HaE+XlX/djotFEd7dSil3h9Zb9Mt
fm7lo++co7f/IyVBBbdAnbv0Vrhka8sbjQl05e7j8odo224ZlrcpjvO3wFxs
iqWbVCXLAlM6C0cXX+4by8WjO8+qtrDysKpwkcq9bug9c+jGf0lJUOQa2rnv
9unjtXk/sXdBDxyGF6hMSZ8gLn1K4SKaR6LLRmNyfu1h/soU2LpI3tC75dCN
/5KSoMh9bOeGTklzF84dE2Arh2FrB1NSvpLMlXo1PfwYLVAfgipL1vQi3/Kx
DN34LykJiqSkzj0gJX3sZqRFvwlffsx/VU49o9dUfUr6ZP9GaVkgfGpTXG+0
WCrsZJJafTjK1Jk39A45dOOBSm48OveMlDT35ZQx4WEyt2r592xl9NrZlJI+
G/fqVXKprPaTTjTRXBYtsONZUqWh98ahGw9UkpLuVRz/J6Wkmv7yQjtSkkdL
uxm0RirO5MlnNzUXgmXhsNpUJavpy4/599HKo6KLVAzY2Lvi0I0HKrnTuNfq
EhMtkE8u80Vp8d/1RSxRfjnxopS07DV8LfeH+X104ifYeexLOxi0FsYa1cwx
dVmdY43YytCN//J3SVAkJd1rdVkJN0c2wkzTOv5EU090+hRb8KKU9LHjsfAj
0i8m5gt8HnGjchdDd7qxhlRKOmjoxn9JSVDkZvVe0cFfbpR0hAmnp1JSccoN
KSnTfd4mdRQUC9h/jjB65+ptPIsHSPSbh1NWWllnbyP2NlISFL3kTmP6KTU9
dEHJTGs/21JSZSbqKCVlBoH3SB0F+QLFWRQZvRN1MpiVB04POm/e40lJUPT4
e9TOO7hqW9jax6ek6DjwKlLSjQzgWToZSSmJSlISFHUeIo4YomuLB0aZ50qn
p6T8xxtS0mf79pp60m5YHi86hsuJxQIcZBhP0XoYV0dEOP0THBdz+WgNq9pS
9bQ71obe8YZu/JeUBEVPvdMYpVPF8f/O3xiFMrMqnzTdkJLm/sZGYFN+vP41
xs4GKfbh4y4Yw3wCCpuxTDqpYpX1nN6XdtVeY+jGf0lJUPTIlPSkHmWzQCr7
TBXF8rnpziyw2ielJLjAI68FV7omJYXvV896UmWib8IzbT4unWvo/W3oxn9J
SVDkyti5Uhb448oWTCnOStXQRRaYL+Kra3f1yEhJsJmdebdbUlI+1GTCUf3i
UlLU0I3/kpKgSErq3JuzQCTvGRlozP68zzUpKcw7q7XnU9KOiY36NfpuNnr7
P1ISVJCSOvfmLHAsJS2fkS3frxbMFOt3ZKApu/Q+rcdtji2rLLM8Q67ehItE
A1FYT+sejb6Pjd7+j5QEFR6Wkp7Ul68wKdyoh47/LFAILxXv87OkJF7KXr1D
60G7fqO0W+PoO9jo7f9ISVDh+rvfpp7Ul7w/LfRZ4RE1YW1vSpq2BCgpifey
Y2/1sJTUdHUj7l3F7+7GIiVB0dDHeOhJfcl7dkpakpLgLvbtrdqN2JX35K1X
NOh+FW32oH35SElQQUoa1HtS0sq8x9YlmkwmCifui0gv2ut4Ibv3VkYsb+jx
WTV+6L5ISVAkJQ3qtSlpdiAl/fGlrJQERfbwTR52VT3X6CMjJcGrPOx8/qS+
5ElJu1LSFJsrJUGBnXwrIxZ6xpgsezF0j6QkKJKSGFR1qIn+3K44S0qKmN7t
7uG/mRHYyv7zyf6fwQc1d+QxPQJSnnTu+vR91lpeKeb/5i+jqyn5a0107jUD
cste9F3nlpT0xwglPkpJcQ+7ydnNOGzte3iKu1GjMRl0NC5z96ifb+7UI3sH
LD3sPNZtX5YNW475qsGpYuGsfP3RGpq6fuS/nevj1eled4pn926fN4/Jpr7/
Lvzr86uH15s3Gad72I0TkPKwg73PvmRCTWXeybzPr05KkpJ2e9jJ4VxvHpxU
36Nns9vzkZTE6Z5x+Pu7JCh6xsE+67MvmVbdlZJWP4eIfvzE0txyVvEBVqrw
KaSk1p7ar7O8fHzy5655yu35SEqihQfsUVISFD0sJfWpt5S0yj75sBNNTNH0
FH6MruIsU09O793tHtmp0z11lCr7tSoWLjVJSVzixpP/vY4MmpQERccPNIoy
IxzOmtIZp+bcGC6yqcyUiDnRN+HEaAvtYMOxyeo9cqzqO5U/0qdYSppPEd/3
4fR51vy++DE6RUp6vFPCwtCOjICUBEUvP8NcIxOFNqWkcNliHrk+JRVXR//O
3WTTT6uJOz7WNPiyM9sjd+/VMT4f3cUzUjgrTCurXBOdnpkYfZ+aKyU9mG26
tGM0pCQoelhK6rYvqSyTCSzhx+iUcNamnJUqn3+TmluczhBO316V+1hxYk39
mYkt9sMn7dtTzCdxyK8WjM5aBZZMaEpFm8xcKem1HnbfcpatwyIlQdHDzjY9
92V517GaEs4Ky+e3VLSeaLXR2jILRt98ghun1A1VOJHOtdhSq50ts6JwbrE9
U/oWvTjluEfu2OG5KDVrOT064PmUVJOhMktNP2PUtw1+cfd4tmbKppGRkqDo
YbevT+pLtwzys92YksJiNY3Jp6RVVD+9d488HHakpOisfEqat0j0N3j51FPz
gz0p6ZFsyrz68ZGSoEhKGtSfFi6u8D2D/E6NUlIYUsJb8dXcypakYleYnhrt
us87IjKb5sSUVPlDu5onUFLSS9iONSpHSUqCIilpUHelpEZfyNOP1s+SKidu
epYU3S2jU+rbXO/xh8PqqVy+2GrK8ZRU86M7KeklbMcaUhKc5WF3vE/qS96N
z5J4tq5SUlhsFYgyOcizpLNsfai3nJKPRdEclJ8oJb2Z7VhDSoKzSEmDkpJo
pLeUlG9SMSWl6jzR4087J6ak+e+JvjITMx8zhTNhqsHAcKnV0b36tmQpv+ym
Fe2roX5Fx89OYZelJDiLlDQoKYlGTj+Iorcuy4nh7U3+Y6rmaJ2fxVmu0enu
2aedzJ1nWDKckvmTohNfxRU9exu9RD4LHI8bxTW2UFzFjkNPSoKzSEmDkpJo
5D0H0VmM2JeURFNSUn2ZmqWkJCiSkgYlJdHIew6isxixlKkndw8GR01bUtJy
o0ffr4ql3mTmhs1bzVqWWe2EqWZE30dnFRsTH8QFKQmKjlw+qq9Ob3fuJvuS
kmikco/dt2Mvj4hGh0Z0Xa1XdMFa4OVWB1rqY/QkMwX5JVUm+ia6bHjgL2ct
y9Q3o75V0UpSgxMlJUHRjhuJpjf/j9RixKQkGrkgvFxWv5QEj1GfklITM7Py
b4pz82VW35oWq02FuGIlmSkhKQmKtt69ux844sTRk5JoREo6skagkaFTUqrl
O54lZSrJTAF2qE9Jnh+d4qxhlJJoJLV/rr7GjH7DmfqeM7ygh1WFi4QLhmtP
NWa1rmgNqZZEC2QOWydGuEAmJnx+HuapieGpILpgTVVhAzJlUh+LJWvqzLcE
OCJ/9V+VbN2YlzhlJKUkGonun5VX/0+Qeiov+vlFls2ov6kIa97akfyYVM4F
TpE6IYS3MauJ4Zcen9iJYmVVODM3v5Z84VS10QXzleTHCtghPLhSxS5ozHsc
H08piUaiO2fqKjylw8UUu0WpWSScHm1bsf5N66ppZ4rTI1zg3APt2YdtTe/8
XRIU1aSkZ59M7nJwVKUkGsnsmakQkQkm9eEoU2e0bcX6M3OX39MWF3eGhB5I
SfWkJDiFlHQXKYk+5eNJ5llMvsCOZ0nRZtTXf9ZEZ0jowYkH2urB8Sm1bSp/
ynoPrkJKgqKmKWl5IrrrdHSBfU2SkuhTKiWtEsry0M68X07Miy4SbdtqVk0l
q8ZHe7qqJzMaxeECTnfxsbZpdb2dB2raIyVBUfRWZFVgd831a9ldcyd17lj8
4BqlJNqp3zk3BYrjdV5/KyIlQSekpHpSEpyiUUpKfQl8CinpIyXRkpRUv7re
7o7gqY58Zxt9pjxPnD+u5oaFo3OjleTfp+o5i5QEp7gsJa3WmDpTrd6EZ5Vo
gXw9NSWj45BfKjWx3pFzo5REO5v2zBYX+mid7e4oUg2oLNm6McDn2LG2upqv
JqZuMKJvKguH5VP1SEnQrYtTUj7spPJLWD78mKmn5twYjUj5paKN3ERKoltu
/msYJbjMwZQUvs9Em09wid8XqT6xO4TVjUoLUhKcopOUVHwTTlyduDKL15cM
W1sT0zL9zZOS6JkIkGd84Eo3pqT6qj6xO4RP4ivf1fSzVFYoJUHRZSlp95cw
qfKpVRwpWVlGSuINmn7VOTojA9fbfdzVf02679KfSUnFeqQk6FajlPSpPpMU
39SfYY6XjLZfSuLNxIGQMYFbHLwhWd1RZD5GC69m5ZctFg6XOouUBGdpl5I+
sVNHOHH5Mfrmkz6zbaqnsmS0qasT2urN7nPdkbGVkrjMwf38GYwA3G730Xfx
YXvvWaJy7VISFBUv+kMc7IOSkhhR9NuDx7t71IF/Z9/BeOUhfO/pon7tUhIU
FW8ARjneR3Skd1ISAC+09dJ52Xcdt3+jsmntUhIU9ZyStn6X20mkqj9PSkkA
sMntYaRPW8dESoKinlPSUqoZnTRvRUoCgHb6vPrfZcdoSElQJCW1ICUBQFMv
/+PBg32XkqCoUUpaHbnhgRz9uDrkVzWEC2YKhx9TfUkVrulIqlOpAuGqU7OK
pCQAmIU3Es9293jD8xWPtR1H4vQz2kw/c0SmQPFNpkBmdZ90UMrXv/tjqrWp
gdpBSgIAgEaapqTw4ypKbE1JqwWjladWV2xbtGHR2lKFw5bkv/ORkgAAoEO3
pKRU9gkXOfFZUrFtmWo3PYeKTomSkgAAoENNU1IxPqTSxPUpKd+w/7+9O0hy
EwYCKJr7X9pZpJLS0FIjZJqxMu+txiCEcDb+BXYuvUxW2z31GpUEAABFTivp
tRpK8XZMd8vh4bTugO7I9uVhhsNs3fGnSz2c6HRwPLZ7uvbYi2/qFyoJAACK
JB/j2zHVa3jsXJ9DJQEAwGdSSd9FJQEAwGeaqaTXI6E0uZL/w/tXqpIAAKDI
fJv8nISpdss7qZIAAKDIpUoSSu+76z1USQAAUORq+wild9z47qkkAAAosnCH
aPQr2XQVvVcqCQAAirz/6T3850J8cde/1IFKAgCAIqWf5KmjkgAAoIhK2pRK
AgCAIippUyoJAACKqKRNqSQAACiikjalkgAAoIhK2pRKAgCAIippUyoJAACK
qKRNqSQAACiikjalkgAAoIhK2pRKAgCAIippUyoJAACKqKRNqSQAACiikjal
kgAAoIhK2pRKAgCAIippUyoJAACKqKRNqSQAACiikjalkgAAoIhK2pRKAgCA
IippUyoJAACKqKRNqSQAACiikjalkgAAoIhK2pSoAQCAIippUyoJAACKqCQA
AICWSgIAAGipJAAAgJZKAgAAaKkkAACAlkoCAABoqSQAAIDWWiX9+qu7K5+/
3ZLM0z38z9/do9o5J5cKAAAQLRREzJbRbHHm0d6Z4MrnbwNq/hQAAAAHdZWU
J9LprktbZspIJQEAADNurKR/d3NevTs73Xs93XlGg0eP2C38DQAAMHJXJSU1
NNoymnM0+HBelQQAAFS4pZLWtoxejgYvPHH3an69QSUBAAAz7qqkKI5JZjg9
RXfkTCUlGwEAAKIbv5fUbpmspFEB5Yfnu04f5wMAAEisPYqWPMPWhk+8qXT4
wlHyOFwcHI867Bqd4urVAQAAP5mOAAAAaKkkAACA1nIlzf9IwuhBu7WTvvm1
o9OzP5yNEhUAAD7N8veSLu2Kv8aw7P2sOJ3hgVMAAAAf6+FK+oQAUUkAAEBi
oZIO4+MzbKOH4pLn8Q5/x5+tG02VPMs3urSZZXTPmyz1dBndA5PVxncVAAB4
xpuV1L1J1K2kyXtMsT7yAaOR3YWdbukmT3LJySLjuUZld2nxAABAtbsqaTSg
3TIaHKvh9TVYkgGvXtp0Zz5dc6ye7spHBZQvMt94uMyFfxQAAOAuT1ZS3DXT
PqdTxVpJzjgz59VKWriXlMwfrwUAAHjSXZWUp9No73wlXR05X0nxHtA3VtLp
4gEAgGprNyy6t2/irnZA+8m/+7LVTjs6tntgXFiycbSMuMhLV5GseXQJ+SEA
AMCT1j6NJ4f4bA8AAGxt+Z5F9yiJBAAA7M6TXQAAAC2VBAAA0FJJAAAArfib
bwAAAD/cb92N5Po=
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 10->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/r9UyDH3aRuEiZtxBw5zewbTAYAmsMtoO3M14/uyYunsA6eEl3l3Hp
IoVxinQJpAnZKhC4yryBdHklqU6u3cOj1aX5qz8jzUifDz9uzpFGo9FII+l7
dM51/xd/+t/+4z//T6Zp+jf/2c///ON/8Zf/5V/8xb/47//Jf/7zzX/9+3/z
3/yr3//Z7/6r3/93f/av/uwv/uhP/9OfE/+/n2X/9O9M01+/BgAAYOXz+Xz/
CwAA8HLLoAQAAICIBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEA
ACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUB
AAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQl
AQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs3ZiSJmAEt5wfAABudONd0L03
fkClW84PAAA3uvEuyA0YdM4gBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA
4J2kJCDFIAUA3klKAlIMUgDgnaQkIMUgBQDeqduUtPv/2LJcZP5vaFUyVUP9
6sKlUus90tQja8kvVbOx0TaneixTMlPncmKxTHRFNfVH21bc5FQb8h07JQ62
VLXFt5lNy/TSPufWBgAwihvvgoqrXt1SVtYZrT+8t8xXu6lPUpXXz9rR1HB6
tOS+tqWk2lxcUXFX5qNHsYWb6s+0rab+/NvK/ZKfVb/XisseJCUBAO/0pJRU
fxdarLZRSspM39rU3bGi8s58axvq7+Sj+z1ac30L6+vfFL7yzcs0deuUypRU
7JbTx7KUBAC807NTUjir8sb79JS044a//vlC/ZR9TaopU7+zahLQwZSUWXbf
0X5jStq0LikJAOAUnaekpZoKa6qqWWRrSsrUv2m99YuckpI2de9yqUy1qfVG
G1BcvLLaaLHixHo1matmB4VSdYarKK5r36blbTo2AAAe48a7oOKq65NFsUDq
JvmslJRaaut684vkQ82OlFRsTKaRmS1KtTxTskVKitafb1um/ny0idacaWSx
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
A4+Qkh5DSjpdakOW0w8GpU3Tj5jrbPpZzWN2/ZeUBEVS0qCkpPrapKQOU9Km
beyTlHQlKel0j0xJvS3SMykJiqSkQUlJmyqUkjpMSZs2cx/PkgaSH5hbU9Jq
vL8wJRVPdFtT0qrC6El1WWb5YvU6Wjh8m2pktHBYMtXgVDPyK81MH5SUBEXF
Eyl9kpK21hle0A9WeErDjtc/jZySNm1pb6aKlDQfb6vX37c1xd6WkjJ3vDvi
TPT1e1LSJ3uJz0wP98L0a/ZZvc28yBQIy6yKRTNLplXRYvXNyKw0tZahSUlQ
JCUNSkraV/OOlDRVO7ep9SVTmWUpnB4WjpZZlY8uLiXlI0zxdX7WO1PSakxN
UtJGq94Lz1GpDZkSOWJZSVgm/2K59imIJ+GUVDOKhVclwwZX1pOqMJw4LikJ
isIzJ0OQknZXPsQxX9/CaGCZY0vxdWripmWPpKRNG9uVIylp+sNjIylpFk1J
y7vcs1LSt87V2/r6R+ntTHDIFPgkkkI0ZdQEjXwAaZeSUs2orEdKAj5S0rCk
pCP193/YF5u3vIc8KyUVy2fWdSQl1Wxvh7pKSW+wIyWFy86vvy9Wb7dWG7U8
Qu4tGT1o52LRAp+6+BAuWywZvojWli9fLJyaVdOMfIWpieOSkqBodV5lFFLS
EGvZLXMDE94LnfgsaYoFotWszOrepj7F5ONSqphnScu5u58lrZadK9/3TbxR
ensKwkU4JbpU2PPTH4JGOD06ZbUHo29XNaxqi5ZPrTpsSdieVPujzY6uNNVj
45KSoCh6KqB/UlK+hn6c0gmZ2qZsSlqq/MbdFGSi1eItniVFt7pz07GUNJOS
vvIDZzopJU2JZ0lPTUn5U8fByo/XM5aHbamUBEVHbuS4kZSUr+Gf/tP/rYe/
g/chNVErn5IyOWhTSqp8lrR7Y5ebc7ySa+xOSasFp/TX8F6YkjJzd6ekaGKa
Dnzj7spu2a3m1HGk8lPqGcvDtlRKgiIpaVBSUr6G2/PRkZRUE46Whc9NSeHD
o/yCUlJ9UMqnpH0R6TEpKW9rSpoH0WrKnwS/V1oVe0xKKjq4IZtOU/sqP1Kg
hcfs+i8pCYqkpEFJSfkabs9HO1LS6q7jspQUfVQUTUn5oHTWmWSUM9K+lDTv
5dRbKSlqa0pq9/eY3u48ZRQLbz1VHveYXf8lJUGRlDQoKSlfw+35qD4lpT6S
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
Pev55MCNHBiDkpLeoJ+uuDclzWtfpaRVmdXEaLSZZ0ULZMoPl5LCc3vqjrHD
banxsO0tbk5lignjT7FYKkyNkpLC7sp35pSNLVNdGlpOzMzq+Rt3UtJSZuht
KsPD2NeDkpLeoKuuuKYx0dub+TQ1BYFlOWVaBKVorlnFn2JEir4eKyUtz/CZ
S/+FzTzNw7a3uDk1QSYsk0lJqzw1bkoKFU8j+WdJU+wxUGZitMLMWqSkDmWG
3rJA6i1PZUcPSkp6g6664qzGZOrJ3NvM9qWkmimViSn6GKt/mZ6f5xZrqNxN
95acC0/p7R3OZ29KyseiecrWlHR3fxxV/MbdFMSf6OJT+mt1mbVISR3KHC2f
xK1ydCIPYy8PSkp6g6664qzGHKlnOi8lpb5fFy0frfCU3jhR6vq+LJBa8JIG
nuxh21vcnCMpKUxDqxdveJa0nLsvJUWfJc22pqRoI+lW6ki76qDmHpm9T8+k
pDforStOac80rZ8LfKpPRFP2mc7xJ0dT4idL0SnHu+JcxWt6dPq4l4CHbW9x
c055lvTOlBTOLaakOcVkUs9qSv6tZ0mdC1LRL0dOak/1eTLhRN1eMsiTkt6g
t6440p7UNWh5CirWP9XFn8pilSkptYrdXdFIzck8vPR3uCGVHra9xbYd+V1S
5llS+GW8x6SkzNyalJR6liQlPVIxWaeWat807tTzVYMMKekNeuuKU9qzqqTm
87plgbNS0hyIvlIpKRWvets19fI3A8/zmO3d92/cFV8UH0KNmJLyUvllPkii
37ILZy2n5N9KSf0rJutodBr6lEINe3lQUtIb9NYVg6ak+uyTKhZd7/GugHr7
/n9J4cTln5R075+UNJDV3bKb55ewowclJb1Bh11xvElhSpqnbE1J8we20Ynh
3Gj5VEpKVSIlcYtNQabpn5QkJb3T6qLw6fIazbmkpEFJSW/QYVec3qT5WlNT
cz7gHP+rr7/DXUOlQa96UtJZpKQvKem4Ec8kbDLo9QIp6SV6641GKam+sJTE
EdEHl0PsTSnpLOHj5hvd2A9S0inu3Ym0dvs4ZR8p6SU67I1zm7SptttuZWJO
7ASut9yDQ+zN6A+L7vq7uzM4gZR0iiHOHuzmcj8oKeklOuyNE5t0V+LosFdb
W3a1uPf59aueL+8K3klKOotTx4O5NAxKSnqJDnujwyZt9YBN2CH19OSFvbHa
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
vKP3eVtU75Rtl5IqZYJPMROdsqd2p6Sz1n68kttXsZtL/6CkpBfSM03VdK+4
xKCed9A+b4vqSUlXymSf8HFSWKxFUKpf6sRiF+inJTNX/EFJSS+kZ1rbdPWp
OXk6wdKJ1b3cfP827vH5vC2qd8q2S0mV8ikpfLsqdtYBuTUo1a+9nyHTT0tm
LzmlPI+U9EJ6prUdPZy/bO349A9ONMV8fr30j3VwPm+L6p277VJSpWJK+iQi
yekH5PGUFB4zqwqjb1cvVhtVOStTT9iS1Ovr3bhqjpCSXkjPtHawh8OTeXg/
A7dI3b+Fs0bxvC2qd8q2S0mVwi6NxoGwZIuTf32FYSNT06MlKyNPzaxMPTUN
CDfhSq7dg5KSXkjPtHZWD09plcWud8qG27pbVDY49Tas4ebt+dUpWzTc1uVN
e7d96fSUdHNX/urgtqy2KzVl+rXnp/SOaN2kaJlob4SNT23OjS9SE693+uHE
NaSkF9IzrZ1+Ictfvn++/vH50cNfi0PrZ53//ve/7+Gv0dbdvtc27bvwTilz
E/Jzyn/48z/v4S+zdZu2aFXy9v8X9sH/I/bubV9qkZL+9b/+H3v4axpJKqNQ
05RUVNOwzlPS/FZKYgcp6YX0TGvXpKTlFeH2e2wpaffW3b7Xjuy7+fYjuvgQ
KWnTFq1K3p6PDqak3du+JCVVblT07L2ctZwSnRWWbE1KOouUNCgp6YX0TAv5
INOi5rn+afA77eLm356PpKRM+/Nzb89H+1JSZcnb81GLlLSVlPRUxYwWXolS
hVNXruWLzKxUJcXFl01t11E1wiYxBCnpnXTO6aIn8OP9XFPJNPiddnHrbs9H
UlKm/fm5t+cjKanevnqkJPp3+66UkgYlJb2TzmmhRUqqXO/t99i777SLvVSf
klY930NKqtm62/fawX2XWXC4lJT/ODosfHs+OjElXXbKqunY2/PRkZRU+dHW
BZcJd+ZfPXSCfTEoKemddE4LjSJSscLvnfZq1fX3xnP5ealoVan6VzUc2bro
4tOWvLMsvGnBpikpv3Vbs0z9Xt50MDTaujmkfIXhZZ4+BcIFw3qidUYXbLF1
W7PMSrTAjc+SrlHTsVuzTDhlKV+4UUrKb+ByeqrYccWWPF4/G95PS9hESnon
ndNIi6tSeHO1WsW0CDLLm96aG+PVHXVqVmpiWMMpW7cq8JiUFN26HQ99avZy
dK81TUnRrVsFomhKikaeaRFwUpmovs5GW7cjzkRf5yc+OyVFO/ZgSlpNnF9/
13VxSlptYLi9qYnHFbu6vp7T2/Y2jXYxrUlJ76RzGjl+PSrWGa5i2pWSwgKp
xSvr37fJ+U37nJSSvhWu3m6q+cSUtNq61impvtoWWxemleKU6LOh4tzio6UW
W3ckJe0r0GFK2vq7pJqO3RqRwkWmWEq65VnSagNTdbbYicWurq/n9La9zY5u
pwdS0jvpnHb2XYZqKkxd5qZsivkWXmWZ1cTKW/HoxOXbzEV5n8/2lDQL49L3
xertvspP3LqzUtK3ztVe3lRti63bl5LyxfalpBZbtzslLV98X6/+u6ny07fu
Rp/OUlKjbaw/z4dLnVWy/gL0cc9w2KY+px9S0jvpnHa2XoMqa8tc4KbYT4ei
AWdKRKfwvjqsKpOw5ik7trpm63Y8S1otNdccPlca8Rt30V2TibSV1bbYulQC
mhKBaJb/Wt1dz5JWBXakpNlq4jI9ba15x9ad6JRnSasCO75uNwW/P5ql0tNd
37hLLbVjXUdaUl9J2Ly5qikIZdECqZbsbtVwXrKZzyMlvZPOaerg+TC8ouWv
cVP2DnleMHzccPD5UfTu/cjGprbuYEpKTdxU8ykpKbPvNsWZ6O5Y7uhbUlK0
wNaUdO6zpGWFLbbu+LOk8PW+ardu3YkOpqRogX2Pe2rS0NbKd3RIfgPrJx5X
7OrKSlYvlpV/FjkoLJ+ZFdb/bI12Ma1JSe+kc1rb1MM1tw2Zc+yUTknhi/B2
uoeUlC+wIyVFw9F0+Bt3LbbulJSU3+NNU1K+wL6UlEo6m1LS6nWLrdudklIT
p9c8S8oX2Pogqf6bdfWVH0xJ9QXa3T+fUnPq2jT9GnnCYptePF67vUxTUtJr
6Z9Gpl/VFKupMz83ddu8mpV6mw9ElTfeja4C0/b/X1L4wGiKueAbdzVbtzsl
1efiRimpZutq8ks+8mQK1FQ1V9Ji6w6mpCnIRFPsYdPDUlLRNHhKqtzGTZeA
u0yJZPSJpaTMsuFmppZ6qs53NClS0mvpnxZWZ8Ll23aXxTnyfK1iS1S0TDgx
Xyyc3uKgmhr8/2H3/TXauq1ZJrprUru7k5Q0tyeMMPP0sPHRBfNvV9OX9bTY
uq0RaWU5MfpaSqr5rl34djUrtciNKWkU0/aUlHkRVvWeHv4eeHe3gs2kpNfS
P6eLngbn63LT9W59HtHor9G96O35qJ+UNNy+i/6Y6Pq/HlJSu793pqQL/l5+
lVxdvJZvw9efX6+AmWWX9V+2LbeTkgYlJb2W/jldqktbd/Xj77Rvz0dS0u6t
uz0fSUmtSUnkRZ9AfV52EyIlDUpKei39c7obU1I/bJ2ts3XXO33r6rVISf04
pYteboolo7f1rcNpUFLSa+mf06W6VFcDT3V6SuJ6rS9Sy9T5zrzwzq1+ACnp
tfTP6aKnQedG4MGkpKEVn5p5rHYKfTgoKem19E8LqzOhEyPwbFLSuCq/W+gq
dpybgUFJSa+lfxrxtXbgPaSkQdVfp1zIjnM/MCgp6c10UTv6FngDKWk4wb9R
UZuSlr8t2jcrfBG2KtrauXD0Cxup+qM116z99FAjJQ1KSnozXdSOvgXeQEoa
SxiR6lPSJ5t08rPCF6vsE11dtHC4VDTdZGpOrT1V7XFS0qCkpDfTRe3oW+AN
pKSBRCPS1pTU4kUxJYXt/8SiR1hPTeNX9dT3TD0paVBS0pvpoqZ0LwBdGT0l
pbYo1dTKxi/raXHtlpIGJSW9mS6quVikemn1iVb9ggBwo9FT0mqp5YuamvP1
5EPZPlLSoKSkN9NFn6ATMufn1MSt8QoAbleTklafB65eLyemZq3qyReOXoLD
elLtD9ebqiHV+HAtpzi9Qq4hJb2ZLvqUYtF8Iq1fJD8R4En8LmloD7tOdbs5
UtImqyRbuUimqkz9lfWcRUoaiC76nJSSKmsGeBgpaTgPvjZ1u2lSUr3TH+pl
AtSOpQ6Skgaiiz51KSk1cX6b+rDizIbCfaZ3u7v7uyYlDeeph3TPA7bbhvUm
7KXj/ZaqIV9zo/0lJY1FL+WHZPROqXIU61tG1/Ndx5X0Q4aUNJb6w7j1Yb+7
8hFHohNIpUwvZQ7IefryxarOecqqzLLOVT2r6akaNpGSxqKXMpFnNSs1PTol
NRFG4QAO6ZOQlDSWTcdw6wN+U2Rr2pLWpKRKNc998ndcYYSJTvkE+aj4Ilrn
VlLSWPRSKgrtnlUzHXrmgp6hc1akpIFsPXSlpLM4b1Q6JSVVvkjFn9SL1MRN
pKSxvLyXpkA4K/p2tWym/naNh0Yct3n6Z0lKGsWO47Z4yVt+Sp/66D6/VL6S
sIbMdXlVbVfytwrMwl4K92n0uNrxIqwz/yI1cRMpaSx6qSndy3ActDX00kxK
GsWRlJS5OUzdqWZubvMLFtebv8XtMyhJSfWKqSTak1LSVg7IGnqpKd3LWByx
9fTVl5Q0hH2Ha2VKqixff2tas5b69fZAStpk9ZwoM3E1a1lm05RwFanp+ZYU
SUlj0UtN6V7G4oitp6++pKQhHExJn/R9vpRUQ0oa1OmhRkoai15qSvcylujN
SfT6Hp2eKXb8c7ndt3mNbpyM7i8pqX+7j9WasRMdYmelpIP19ENKGpSU9HJ6
qSndy0BSh2smJdXUkL+Zyaz3LI3qN7q/pKTOHYlINZ9mzJml/mOQ/IcnYYXL
t2GZ6Ip6SyW9tYdKUhI6qh19y0AyKekTyzWr8tGJ0QWjL9qRkpqSkt4g87GG
gVBDShqUlISOakr3MorrU1J+dKQ+GZ4C4VqirQ1fhOvaNGCN7o+U9A5S0kFS
0qCkJHRUU7qXUeRT0ieINqmbpXB6GECK9wypp07R6ctZmcdV9YtUMro/UtJr
RD9G2PHZwjvppUFJSeiopnQvozieklL3Uak6M6MjVU99CKosmdmiIqP7IyV1
7JTjczmaMhEpNczbpYOxRp+UNCgpCR3VlO5lFEdSUiYZZVJSZqXz3MyToMrm
1QerTEtSzdu6yPNISX06KyItX6fGdXT47P7wobI9Y5GSBiUloaOa0r2MopiS
Kl/nZ20tkApBqZI7UtLuQWp0063jB+em4FMz5bhxR5yUNCgpCR3VlO5lFDXf
mVk9fJlTxqpMalaqzk1l8q+XE/OiixzvMbjdKUdmppJi/fkxnhq/YeX5k0Cx
8k3b29SO0wtXqrxqXOOyTb5sRf3Y1/7T+4SZ7mUUQxyr0693UPfWOUSP8UKn
HJmrSpa3GTX1T4nUs6xt9XpVf1hDWFW+8n5G6O47NK7xc+/8+Pzo4e+y4+TK
Ff2jf/S/9/AnJXVI9zKKIY5VKak3fpfUmxbjYjXllJSUmbjKOztSUn07ryEl
dU5Karqi2/PRkZT06elM8ki6lyH0cKDW3EsceXR+bp099NjtpKTe3JKSKgtv
SklHniWlWnUXKalzUlLTFd2ej6SknulehnDjgdriCdEFBmpqO1JSV07/9CD1
tjhmpaQlKalzUlLTFd2ej6SknulehiAlbTVQU9uRkvrR4oCcFlKzMksV34av
wxeZ6TWVn94nO/TTEqKkpKYrysSW2fLtam7q9bKwlDScKebuRkFSi+MzdbuS
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
lJR0CuPr2dxZ1Sumj1SSKpaXkpYckPuEsR0aqUlJm5LO8WdJq+ZtGgjRD7UO
XhylJDonJR1ncD2elLRJ+JwoNTE1a3UJXgrnriqJFs4vUmzhTEoa3VSdiOGg
VWxZKT4kypQvLhWWzDQyPxYyp9a5wJEuuj0fSUlkSEkHGVlvULyO0KfTQ42U
NLopFsahhWi0ueWveJzXjIUp+OArOn1rF92ej6SkqGg6vsuN/SAlHXTv7uMa
t49T9pGSCE2Jmz041zROSpobXD93kpIe7WeH/PN//j/38CcljcuwegkpaVBS
EqGw6wxwWrjiQ/Zqm9qcmhV9W195tM5MbPlava6fJSUdMUlJf0NKgqJNVxn6
ISURqrwJhIN+HlF/+Zf/Qw9/W4/tykvejhQW1pBPLsXX+VlS0m5S0peUtMm+
D2cYnd09KCmJUKbrjHRONG5KmtvfejjsSEnhIplZUtJuUtKXlDQrnhBWBVxP
38O+HpSURKjYdfqWU4yekuataDcitqakaPn8rMxcKSlDSvqSkmb550T1E3ke
O3pQUhKh+q8SXdAYHuwZKWnelhYjYlNKShVOzZp+/bGSlLRJKiV9O3P19jtl
CmRqyJeRkjoU7t/p1ydHqaWuaiC3ccs0KCmJUH3X6WSOeFJKmrfo3EGxKSVt
fZY0bfkmnsG+kskvq1mr0JQqVrOIlNSzaEqazwlS0ptJSZ3LDN7rXbbJ16zo
eTZ13ZX7lIeZFilpPj+E+SWcXlMsevJJ1XDuMXxibVPL3yVlFpGSiqZsxpm2
J6MjKYkhpA6kiw9drpc5AOjBz73zd//u/9vD32XHiQNytx1dp7fZYQqiypSI
P+HE6POg6Nvoi7Dw6Zt2Sp1Ty3/jbvo1JRXXdXxznmQqPQmaC0yxyJOauFrW
s6SB5JNR9Jzg5vkl7OjOSUlssi8o6XM2ieaaKXjiUyyWiU71karRBh6sOZNc
5tuw1ev6Wf9u8Yuk5UQpqUYxJYVxafXcJ5+MwpJSUudWey1VIPWWB7OvOzdJ
SWyxu/d0O/WK8SecMlZKmjfzyIAqfhfumj9De2V3Soo+S1rVln/bVUpiVjPS
i0mKR7K7OyclscmR3tPzVIrGnzAH5Yv1n5Lmjd2xFimpWzUpKUxA0aWkJHg2
KalzUhKbHOw9JwRq7E5Js4FS0rzJqXVFp089adw3g5kO/xt3q4mZYpl1SUnQ
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
hNM/wbiYy0drWNWWqqfdWBv6wBu68V9SEhQ99U5jlI0q9v909u+S8nNvTEnz
9oZToqv+OfGP//ivevgb5WCDFMfwcRf0YT4Bhc1YJp1Uscp6Tt+WdtVeY+jG
f0lJUPTIlPSkLcpEmFT2mdKPiqJJqquU9Ml+Uroqdns+kpJ4jEdeC650TUoK
X0efH4Vloi/CM20+Lp1r6ONt6MZ/SUlQ5MrYuXyEma9r4ZTirFQNt6ekecM/
v36tLixwez6SkngYB/Nut6SkymdAYTiqX1xKihq68V9SEhRJSZ2ryS/X/F1/
nISJbzX39nwkJfE8jud9rklJqYdBlSlpx8RG2zX6YTZ6+z9SElSQkjonJe1L
SfMiq9fftzXFpCReyyG9T+t+Wz0Jmicuz5CrF+Ei0UAU1tN6i0Y/xkZv/0dK
ggoPS0lP2pavMCncqIcNXxYohpfi6/wsKYnXclTv0LrTrt8p7dY4+gE2evs/
UhJUuP7ut6knbUvebwt9VnhETVjbl5KmPzw2kpIgz4G91cNSUtPVjXh09fD5
4YmkJCgaeoyHnrQtec9OSUtSEtzFsb1V04cvl12vW69o0OMq2uxBt+UjJUEF
KWlQ70lJK/MRW5NoMpkonLgvIklJPJvDeys9ljd0/6waP/S2SElQJCUN6rUp
abY7Jc2kJKjhCN/kYVfVc43eM1ISvMrDzudP2pY8KWlHSlotkvkanpQESw7y
rfRY6Bl9styKobdISoIiKYlBVYaazM+Ojv8i6W0pKfyN2Kvc3f030wNbOX4+
2f8z+KDmDXnMFgEpTzp3ffo+ay2vFPN/85fRKXi4n9lf0bnXdMgtR9G0MSXN
/ZN6KyWlPOwmZzf9sHXb42nzJo36ZNDeuMzdvX6+SUqC13jYeazbbZl+fUaf
Os2mioWz8vVHa2jq+p6fDuSac/+6PepO8eyt2+fNfbJp238W/vH50cPfm3cZ
p3vYjROQ8rDB3ue2ZEJNZd7JvM6vTkqSknZ72MnhXG/unNS2R89mt+cjKYnT
PWP4+10SFD1jsM/63JZMq+5KSauvQ0TffmJpbjmr+AArVfgUUlJrT92us7y8
f/LnrnnK7flISqKFBxxRUhIUPSwl9am3lLTKPvmwE01M0fQUvo2u4ixTT07f
uts9cqNO99ReqtyuVbFwqUlK4hI3nvzvdaTTpCQoOj7QKMr0cDhrSmecmnNj
uMimMlMi5kRfhBOjLXSADccuq/fIvqrfqPxIn2IpaT5FfF+H0+dZ8+vi2+gU
KenxTgkLQzvSA1ISFL38DHONTBTalJLCZYt55PqUVFwd/Tt3l02/Wk3c8bam
wZed2R55eK/G+Dy6i2ekcFaYVla5Jjo9MzH6OjVXSnow+3RpR29ISVD0sJTU
7bakskwmsIRvo1PCWZtyVqp8/kVqbnE6Qzh9f1UeY8WJNfVnJrY4Dp90bE8x
n8SQXy0YnbUKLJnQlIo2mblS0ms97L7lLFu7RUqCooedbXreluVdx2pKOCss
n99T0Xqi1UZryywYffEJbpxSN1ThRDrXYk+tDrbMisK5xfZM6Vv04pTjHnlg
h+ei1Kzl9GiH51NSTYbKLDX9GqO+bfCNu8ezN1M29YyUBEUPu3190rZ0Syc/
240pKSxW05h8SlpF9dO37pHDYUdKis7Kp6R5j0S/g5dPPTVf2JOSHsmuzKvv
HykJiqSkQf22cHGF7+nkd2qUksKQEt6Kr+ZWtiQVu8L01OjQfd6IyOyaE1NS
5Rftap5ASUkvYT/WqOwlKQmKpKRB3ZWSGn0gTz9aP0uqnLjpWVL0sIxOqW9z
vccPh9VTuXyx1ZTjKanmS3dS0kvYjzWkJDjLw+54n7QteTc+S+LZukpJYbFV
IMrkIM+SzrL1od5ySj4WRXNQfqKU9Gb2Yw0pCc4iJQ1KSqKR3lJSvknFlJSq
80SPP+2cmJLm3xN9ZSZm3mYKZ8JUg47hUqvRvfq0ZCm/7KYV7auhfkXHz07h
JktJcBYpaVBSEo2cPoiity7LieHtTf5tquZonZ/FWa7R6e7Zp53MnWdYMpyS
+UnRiX/FFT17H71EPgscjxvFNbZQXMWOoSclwVmkpEFJSTTynkF0Fj32JSXR
lJRUX6ZmKSkJiqSkQUlJNPKeQXQWPZYy9eTuzuCoaUtKWu706OtVsdSLzNyw
eatZyzKrgzDVjOjr6KxiY+KduCAlQdGRy0f11entzt1lX1ISjVQesfsO7OWI
aDQ0outqvaIL1gIvtxpoqbfRk8wU5JdUmeiL6LLhwF/OWpapb0Z9q6KVpDon
SkqCoh03Ek1v/h+pRY9JSTRyQXi5rH4pCR6jPiWlJmZm5V8U5+bLrD41LVab
CnHFSjJTQlISFG29e3c/cMSJvScl0YiUdGSNQCNDp6RUy3c8S8pUkpkC7FCf
kjw/OsVZ3Sgl0Ujq+Fx9jBn9hDP1OWd4QQ+rChcJFwzXnmrMal3RGlItiRbI
DFsnRrhAJiZ8fh3mqYnhqSC6YE1VYQMyZVJviyVr6sy3BDgif/VflWzdmJc4
pSelJBqJHp+VV/9PkHoqL/r5RZbNqL+pCGveuiH5PqmcC5widUIIb2NWE8MP
PT6xE8XKqnBmbn4t+cKpaqML5ivJ9xWwQzi4UsUuaMx7HO9PKYlGogdn6io8
pcPFFLtFqVkknB5tW7H+TeuqaWeK0yNc4NyB9uxhW7N1fpcERTUp6dknk7sc
7FUpiUYyR2YqRGSCSX04ytQZbVux/szc5ee0xcWdIaEHUlI9KQlOISXdRUqi
T/l4knkWky+w41lStBn19Z810RkSenDiQFs9OD6ltk3lT1nvwVVISVDUNCUt
T0R3nY4usK9JUhJ9SqWkVUJZDu3M6+XEvOgi0batZtVUsmp8dEtX9WR6o9hd
wOkuHmubVtfbeaCmPVISFEVvRVYFdtdcv5bdNXdS547FD65RSqKd+oNzU6A4
Xuf1tyJSEnRCSqonJcEpGqWk1IfAp5CSPlISLUlJ9avr7e4InurIZ7bRZ8rz
xPntam5YODo3Wkn+daqes0hJcIrLUtJqjakz1epFeFaJFsjXU1My2g/5pVIT
6x05N0pJtLPpyGxxoY/W2e6OItWAypKtGwN8jo211dV8NTF1gxF9UVk4LJ+q
R0qCbl2ckvJhJ5VfwvLh20w9NefGaETKLxVt5CZSEt1y819DL8FlDqak8HUm
2nyCS/y+SPWJ3SGsblRakJLgFJ2kpOKLcOLqxJVZvL5k2NqamJbZ3jwpiZ6J
AHn6B650Y0qqr+oTu0P4JD7yXU0/S2WFUhIUXZaSdn8IkyqfWsWRkpVlpCTe
oOlHnaPTM3C93eOu/mPSfZf+TEoq1iMlQbcapaRP9Zmk+KL+DHO8ZLT9UhJv
Jg6E9Anc4uANyeqOIvM2Wng1K79ssXC41FmkJDhLu5T0iZ06wonLt9EXn/SZ
bVM9lSWjTV2d0FYvdp/rjvStlMRlDh7nz6AH4Ha7R9/Fw/bes0Tl2qUkKCpe
9IcY7IOSkhhR9NODx7u714G/tm8wXjmE7z1d1K9dSoKi4g3AKON9REe2TkoC
4IW2Xjov+6zj9k9UNq1dSoKinlPS1s9yO4lU9edJKQkANrk9jPRpa59ISVDU
c0paSjWjk+atSEkA0E6fV/+77OgNKQmKpKQWpCQAaOrlPx48uO1SEhQ1Skmr
kRsO5Ojb1ZBf1RAumCkcvk1tS6pwzYakNipVIFx1alaRlAQAs/BG4tnu7m94
vuJY2zESp1+jzfRrjsgUKL7IFMis7pMOSvn6d79NtTbVUTtISQAA0EjTlBS+
XUWJrSlptWC08tTqim2LNixaW6pw2JL8Zz5SEgAAdOiWlJTKPuEi/397d7Ak
JwgFUDT//9OdRSopRuCB6HMkc85qWhGxs+lb2p0b7yUN1xZMe+o+VHNLk0oC
AIAXSq2kYT70auL5SooXduplsNrmqdeoJAAASDKspM9qKNW3Y5pbDg+nNQc0
R5YvDzMcZmuOHy71cKLh4PrY5unKY0++qV+oJAAASBJ8jC/HZK/hsXO9h0oC
AIB3UknfRSUBAMA7zVTS55FQmlzJ/+H6laokAABIMt8mPydhst3yTqokAABI
cqqShNJ1d72HKgkAAJKcbR+hdMWN755KAgCAJAt3iHq/kk1T0nulkgAAIMn1
T+/Vfy7EF3f9Sx2oJAAASJL6SZ48KgkAAJKopE2pJAAASKKSNqWSAAAgiUra
lEoCAIAkKmlTKgkAAJKopE2pJAAASKKSNqWSAAAgiUralEoCAIAkKmlTKgkA
AJKopE2pJAAASKKSNqWSAAAgiUralEoCAIAkKmlTKgkAAJKopE2pJAAASKKS
NqWSAAAgiUralEoCAIAkKmlTKgkAAJKopE2pJAAASKKSNqWSAAAgiUralEoC
AIAkKmlTKgkAAJKopE2JGgAASKKSNqWSAAAgiUoCAAAoqSQAAICSSgIAACip
JAAAgJJKAgAAKKkkAACAkkoCAAAorVXSr7+au+L5yy3BPM3D//zdPKqcc3Kp
AAAAtYWCqLOlN1s9c2/vTHDF85cBNX8KAACAg7xKihNpuOvUlpkyUkkAAMCM
Gyvp392cT+vOTvNeT3Oe3uDeI3YLfwMAAPTcVUlBDfW29ObsDT6cVyUBAAAZ
bqmktS29l73BC0/cfYpfb1BJAADAjLsqqVaPCWYYnqI5cqaSgo0AAAC1G7+X
VG6ZrKReAcWHx7uGj/MBAAAE1h5FC55hK8Onvql0+MJR8DhcPbg+6rCrd4qz
VwcAAPxkOgIAAKCkkgAAAErLlTT/Iwm9B+3WTnrxa0fDsz+cjRIVAADeZvl7
Sad21b/GsOx6VgxneOAUAADAaz1cSW8IEJUEAAAEFirpML5+hq33UFzwPN7h
7/pn63pTBc/y9S5tZhnN8wZLHS6jeWCw2vpdBQAAnnGxkpo3iZqVNHmPqa6P
eEBvZHNhwy3N5AkuOVhkfa5e2Z1aPAAAkO2uSuoNKLf0BtfV8PkaLMGATytt
mjMP11xXT3PlvQKKFxlvPFzmwj8KAABwlycrqd410z7DqepaCc44M+fZSlq4
lxTMX18LAADwpLsqKU6n3t75Sjo7cr6S6ntA31hJw8UDAADZ1m5YNG/f1LvK
AeUn/+bLUjlt79jmgfXCgo29ZdSLPHUVwZp7lxAfAgAAPGnt03hwiM/2AADA
1pbvWTSPkkgAAMDuPNkFAABQUkkAAAAllQQAAFCqf/MNAADgh/sNaZ41TQ==

                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 11->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3u9VyDH2QLKOhClWlDjiBFCloURQrKaCINeg8gI4YIKRqkN0iEJnmo
qKjoOIRISKBBQkJI9wFQcASIFjpaqs09s/V6fHt9+mPZa9nXpb8e7W0vLy8v
e9n+be99P//+n/3nf/qf/lvTNP2Lf/fnf/70n/6X/+Hvf/9P/6v/+N/7+eZ3
f/Ev/rN/9hd//p/8R3/xX/z5P/vz3/8Hf/Zv/5z4//0s+2f/zjT91WsAAABW
Pp/P978AAAAvtwxKAAAAiEgAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtS
EgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABL
UhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAA
S1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwNKNKWkCRnDL+QEA4EY3
3gXde+MHVLrl/AAAcKMb74LcgEHnDFIA4J2kJCDFIAUA3klKAlIMUgDgnaQk
IMUgBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J26TUm7/48ty0Xm/4ZW
JVM11K8uXCq13iNNPbKW/FI1Gxttc6rHMiUzdS4nFstEV1RTf7RtxU1OtSHf
sVPiYEtVW3yb2bRML+1zbm0AAKO48S6ouOrVLWVlndH6w3vLfLWb+iRVef2s
HU0Np0dL7mtbSqrNxRUVd2U+ehRbuKn+TNtq6s+/rdwv+Vn1e6247EFSEgDw
Tk9KSfV3ocVqG6WkzPStTd0dKyrvzLe2of5OPrrfozXXt7C+/k3hK9+8TFO3
TqlMScVuOX0sS0kAwDs9OyWFsypvvE9PSTtu+OufL9RP2dekmjL1O6smAR1M
SZll9x3tN6akTeuSkgAATtF5SlqqqbCmqppFtqakTP2b1lu/yCkpaVP3LpfK
VJtab7QBxcUrq40WK06sV5O5anZQKFVnuIriuvZtWt6mYwMA4DFuvAsqrro+
WRQLpG6Sz0pJqaW2rje/SD7U7EhJxcZkGpnZolTLMyVbpKRo/fm2ZerPR5to
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
R0xJmzbwCCnpMaSk06U2ZDn9YFDaNP2Iuc6mn9U8Ztd/SUlQJCUNSkqqr01K
6jAlbdrGPklJV5KSTvfIlNTbIj2TkqBIShqUlLSpQimpw5S0aTP38SxpIPmB
uTUlrcb7C1NS8US3NSWtKoyeVJdlli9Wr6OFw7epRkYLhyVTDU41I7/SzPRB
SUlQVDyR0icpaWud4QX9YIWnNOx4/dPIKWnTlvZmqkhJ8/G2ev19W1PsbSkp
c8e7I85EX78nJX2yl/jM9HAvTL9mn9XbzItMgbDMqlg0s2RaFS1W34zMSlNr
GZqUBEVS0qCkpH0170hJU7Vzm1pfMpVZlsLpYeFomVX56OJSUj7CFF/nZ70z
Ja3G1CQlbbTqvfAcldqQKZEjlpWEZfIvlmufgngSTkk1o1h4VTJscGU9qQrD
ieOSkqAoPHMyBClpd+VDHPP1LYwGljm2FF+nJm5a9khK2rSxXTmSkqY/PDaS
kmbRlLS8yz0rJX3rXL2tr3+U3s4Eh0yBTyIpRFNGTdDIB5B2KSnVjMp6pCTg
IyUNS0o6Un//h32xect7yLNSUrF8Zl1HUlLN9naoq5T0BjtSUrjs/Pr7YvV2
a7VRyyPk3pLRg3YuFi3wqYsP4bLFkuGLaG358sXCqVk1zchXmJo4LikJilbn
VUYhJQ2xlt0yNzDhvdCJz5KmWCBazcqs7m3qU0w+LqWKeZa0nLv7WdJq2bny
fd/EG6W3pyBchFOiS4U9P/0haITTo1NWezD6dlXDqrZo+dSqw5aE7Um1P9rs
6EpTPTYuKQmKoqcC+icl5WvoxymdkKltyqakpcpv3E1BJlot3uJZUnSrOzcd
S0kzKekrP3Cmk1LSlHiW9NSUlD91HKz8eD1jediWSklQdORGjhtJSfka/tbf
+n97+Dt4H1ITtfIpKZODNqWkymdJuzd2uTnHK7nG7pS0WnBKfw3vhSkpM3d3
SoompunAN+6u7Jbdak4dRyo/pZ6xPGxLpSQokpIGJSXla7g9Hx1JSTXhaFn4
3JQUPjzKLygl1QelfEraF5Eek5LytqakeRCtpvxJ8HulVbHHpKSigxuy6TS1
r/IjBVp4zK7/kpKgSEoalJSUr+H2fLQjJa3uOi5LSdFHRdGUlA9KZ51JRjkj
7UtJ815OvZWSorampHZ/j+ntzlNGsfDWU+Vxj9n1X1ISFElJg5KS8jXcno/q
U1LqI9mDKWkKZKavyqwiVXTxdimpftvvtS/RtPgborsOkpJOJyVt9Zhd/yUl
QZGUNCgpKV9DMbwspabPc1clwwV3pKRUONraD6mUdP3fuWeS/s9LUtKVpKTT
nT5g5xNa9PXqjBeeAMMCn19vUcLy0aWii5yysY/Z9UCl/H0a3ZKS8jXU5Jfw
dc2L1eutKakYjrb2w1NTUn0P3CW8/bvR3Z3R3N0d/Iu7O+McJ27I9Gu0WVVe
MzdVJrNs/Uqnk4LSY3Y9UOlJ5/xXkZLyNexLSTVTaioPU9KO+6vKwm1uA3fa
s7cO9wCww4njK6xqqotLn0UaWlWymhKeZzIvinN3cDqCF2pxb8MFpKR8DY1S
Uk3Nq6V2D7FrBmZ0Lf2cFjppBjzSWeMrdRr5VKek+fWqTCbjSEkH+V0SFPVz
O8QmUlK+hvr88lWTkrZGpHmpu/rh4Io6OTn00AZ4pNNTUvQh0aZiqRc1j5Ck
pE2kJCjq5EaIraSkfA2bniUV3x55lvTZO8puT0nz3NtPEbc3AB7pxJEVPVGs
pqweFVW+DV+kClTWs3sDdy/bJykJinq4BWIHKSlfQ6OUtDUorT7b3DTcOklJ
c5l7TxROU9BC05H1mGH7mA1ZkpKg6PabH/aRkvI1tEtJm4JSdFsq49KVA7Ny
XfeeLpypoIVGI+sxA/YxG7IiJUGRlDQoKSlfQzG8rETnpqZEl6pPSct2Zgp0
mJLmwrecNJypoIXTR/ST7isesyEhKQmKnnQ2exUpKV/Dpl8Ptfur/zJbWLLb
lDQvcv2pw8kKGjG4Qs/uEykJiqSkQUlJ+Rpuz0f1KWnZ7GX5zlPSvODFJxDn
K2hk9YT97ubc4z09ICVB0RtOBY8kJeVruD0f7UhJc+NvuUYfWd3FrXXKggtM
r3R3r19HSoKit50WHkNKytfQj4NbcbArNq3ueA2XNfjKngF4HikJii6+E+Ms
UtLjTYv/x8cFfXLWKsZqLcA7SUlQJCUNSkp6vFU/XBCXTqxcUALomZQERVLS
oKSkx0v1Q7sxe261F5xbHCoA+0hJUCQlDUpKerx8P7R4tNSi5wd6/gXwHlIS
FElJg5KSHq+yH84dwu2eUrXbrQ4YgK2kJCiSkgYlJT3epn4469FS6+c+Q3xX
EODxpCQokpIGJSU93r5+OBiXrvlXF05fi2MGYBMpCYqkpEFJSY93sB92D+1r
+v/eH1U5xgCAPClpUFLS453SDzseLV3Z/3f9qMoxBgDkSUmDkpIe765/l/v6
/j/xLLRjG+e1OxkCADM3BoOSkh6v3b/Lna/5rv4/61yUqWSKWa3a4Qe8gd8l
QZGUNCgp6fGa9kN+4N+4C045IxVrWBVYPVo6uHaA/klJUCQlDUpKeoPWXZF6
tHT7Ljh4XpKSAPKkJCiSkgYlJb3BZV2xikud7IIjZ6dN3yrscNsBmpKSoEhK
GpSU9AbXd8XypzoXrzqlUVAKSzoZAu8hJUGRG4NBSUlvcO8/pNDPjtjdmMw3
62qmAzyVlARFXd0LUU9KeoN7/xWFT2fnh32NWX6VTkoC+JKSoKiruyDqSUlv
cG9XrPJFJ/tla0uWcS+6YFdbB3ANKQmK3B4MSkp6g05S0nJKJ3tnU0umXzVt
GMAQpCQoctswKCnpDXpLSfP0Ts4bNc2YAte0DaBnUhIUuW0YlJT0Brd3Rb4B
neSO4lfppCSAFSkJitw2DEpKeoPbu6KyAT2cRqJtEJQAoqSkGpnLR/Tt6vri
cjM69wyDkpLe4Pau2NSAHjJIZVa6pW0A/ZCSKmWCTzETudyMzj3DoKSkN7i9
K/Y14PazSjEr3dIqgH5ISZUy2Sd8nBQWc8UZmnuGQUlJb9BDV+xuw+2RJJ+V
bmkScLp5RBvam0hJlfIpKXy7KuaYHJqzyqCkpDfooSuOt+HeYJLKSrc0Bmhh
OcyLozv8Cu6N2vdNkpRUKdxNU3CwTbFAFBZjOLePU/aRkt6gh644sQ3HzzZX
38FkndUtUOO3f/2v+/m7uzPWluOxODZ/FviX//K/6eHv3tOIlFQp3E1TdUpy
vRid3TcoKekNOumKc5tRc9VIzf05/cfnRw9/newa3uNnNpl+joAO/npISavT
iJREOzUp6VP3GyWGIyUNSkp6g066olEzMief1CwpideSkjJSiSlV+PZ8JCUN
JJN39s1iIFLSoKSkN+ikK5o2I3y0lPmWgpTEa0lJGfP3nWoGppREvSkQzlpO
ic6q+QYFfbLjBiUlvUE/XXFBS+ZzUeqS9JGSsupvETM5dCAP295i86SkjPBE
kenMVEr6LrV6+50S3iovi4WVpAp3lZL8LgmKOr9wkCIlvUE/XXFZS6L3GMu5
t+ejzlNSPg6E/dnhhlR62PYWN6c+Jc3/xsL3dapAtPyTUlKqM/OxJfW25vXy
bfhCSupZzycHbuTAGJSU9Ab9dMW9KWle+yolrcqsJkajzTwrWiBTfriUFJ7b
U3eMHW5LjYdtb3FzKlNMGH+KxVJhapSUFHZXvjOnbGyZ6tLQcmJmVs/fuJOS
ljJDb1MZHsa+HpSU9AZddcU1jYne3synqSkILMsp0yIoRXPNKv4UI1L09Vgp
aXmGz1z6L2zmaR62vcXNqQkyYZlMSlrlqXFTUqh4Gsk/S5pij4EyE6MVZtYi
JXUoM/SWBVJveSo7elBS0ht01RVnNSZTT+beZrYvJdVMqUxM0cdY/cv0/Dy3
WEPlbrq35Fx4Sm/vcD57U1I+Fs1Ttqaku/vjqOI37qYg/kQXn9Jfq8usRUrq
UOZo+SRulaMTeRh7eVBS0ht01RVnNeZIPdN5KSn1/bpo+WiFp/TGiVLX92WB
1IKXNPBkD9ve4uYcSUlhGlq9eMOzpOXcfSkp+ixptjUlRRtJt1JH2lUHNffI
7H16JiW9QW9dcUp7pmn9XOBTfSKass90jj85mhI/WYpOOd4V5ype06PTx70E
PGx7i5tzyrOkd6akcG4xJc0pJpN6VlPybz1L6lyQin45clJ7qs+TCSfq9pJB
npT0Br11xZH2pK5By1NQsf6pLv5UFqtMSalV7O6KRmpO5uGlv8MNqfSw7S22
7cjvkjLPksIv4z0mJWXm1qSk1LMkKemRisk6tVT7pnGnnq8aZEhJb9BbV5zS
nlUlNZ/XLQuclZLmQPSVSkmpeNXbrqmXvxl4nsds775/4674ovgQasSUlJfK
L/NBEv2WXThrOSX/VkrqXzFZR6PT0KcUatjLg5KS3qC3rhg0JdVnn1Sx6HqP
dwXU2/f/SwonLv+kpHv/pKSBrO6W3Ty/hB09KCnpDTrsiuNNClPSPGVrSpo/
sI1ODOdGy6dSUqoSKYlbbAoyTf+kJCnpnVYXhU+X12jOJSUNSkp6gw674vQm
zdeamprzAef4X339He4aKg161ZOSziIlfUlJx414JmGTQa8XSEkv0VtvNEpJ
9YWlJI6IPrgcYm9KSWcJHzff6MZ+kJJOce9OpLXbxyn7SEkv0WFvnNukTbXd
disTc2IncL3lHhxib0Z/WHTX392dwQmkpFMMcfZgN5f7QUlJL9Fhb5zYpLsS
R4e92tqyq8W9z69f9Xx5V/BOUtJZnDoezKVhUFLSS3TYGx02aasHbMIOqacn
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
XJt4s+cdvc/bonqnbLuUVCkTfIqZ6JQ9tTslnbX245XcvordXPoHJSW9kJ5p
qqZ7xSUG9byD9nlbVE9KulIm+4SPk8JiLYJS/VInFrtAPy2ZueIPSkp6IT3T
2qarT83J0wmWTqzu5eb7t3GPz+dtUb1Ttl1KqpRPSeHbVbGzDsitQal+7f0M
mX5aMnvJKeV5pKQX0jOt7ejh/GVrx6d/cKIp5vPrpX+sg/N5W1Tv3G2XkioV
U9InEUlOPyCPp6TwmFlVGH27erHaqMpZmXrClqReX+/GVXOElPRCeqa1gz0c
nszD+xm4Rer+LZw1iudtUb1Ttl1KqhR2aTQOhCVbnPzrKwwbmZoeLVkZeWpm
ZeqpaUC4CVdy7R6UlPRCeqa1s3p4Sqssdr1TNtzW3aKywam3YQ03b8+vTtmi
4bYub9q77Uunp6Sbu/JXB7dltV2pKdOvPT+ld0TrJkXLRHsjbHxqc258kZp4
vdMPJ64hJb2Qnmnt9AtZ/vL98/WPz48e/locWj/r/Nt/+//p4a/R1t2+1zbt
u/BOKXMT8nPKP/pH/0sPf5mt27RFq5K///1/28Pf7iNz97YvtUhJ//M//sc9
/DWNJJVRqGlKKqppWOcpaX4rJbGDlPRCeqa1a1LS8opw+z22lLR7627fa0f2
3Xz7EV18iJS0aYtWJW/PRwdT0u5tX5KSKjcqevZezlpOic4KS7YmJZ1FShqU
lPRCeqaFfJBpUfNc/zT4nXZx82/PR1JSpv35ubfno30pqbLk7fmoRUraSkp6
qmJGC69EqcKpK9fyRWZWqpLi4sumtuuoGmGTGIKU9E4653TRE/jxfq6pZBr8
Tru4dbfnIykp0/783NvzkZRUb189UhL9u31XSkmDkpLeSee00CIlVa739nvs
3XfaxV6qT0mrnu8hJdVs3e177eC+yyw4XErKfxwdFr49H52Yki47ZdV07O35
6EhKqvxo64LLhDvzrx46wb4YlJT0TjqnhUYRqVjh9057ter6e+O5/LxUtKpU
/asajmxddPFpS95ZFt60YNOUlN+6rVmmfi9vOhgabd0cUr7C8DJPnwLhgmE9
0TqjC7bYuq1ZZiVa4MZnSdeo6ditWSacspQv3Cgl5TdwOT1V7LhiSx6vnw3v
pyVsIiW9k85ppMVVKby5Wq1iWgSZ5U1vzY3x6o46NSs1MazhlK1bFXhMSopu
3Y6HPjV7ObrXmqak6NatAlE0JUUjz7QIOKlMVF9no63bEWeir/MTn52Soh17
MCWtJs6vv+u6OCWtNjDc3tTE44pdXV/P6W17m0a7mNakpHfSOY0cvx4V6wxX
Me1KSWGB1OKV9e/b5PymfU5KSd8KV2831XxiSlptXeuUVF9ti60L00pxSvTZ
UHFu8dFSi607kpL2FegwJW39XVJNx26NSOEiUywl3fIsabWBqTpb7MRiV9fX
c3rb3mZHt9MDKemddE47+y5DNRWmLnNTNsV8C6+yzGpi5a14dOLybeaivM9n
e0qahXHp+2L1dl/lJ27dWSnpW+dqL2+qtsXW7UtJ+WL7UlKLrdudkpYvvq9X
/91U+elbd6NPZymp0TbWn+fDpc4qWX8B+rhnOGxTn9MPKemddE47W69BlbVl
LnBT7KdD0YAzJaJTeF8dVpVJWPOUHVtds3U7niWtlpprDp8rjfiNu+iuyUTa
ympbbF0qAU2JQDTLf63urmdJqwI7UtJsNXGZnrbWvGPrTnTKs6RVgR1ft5uC
3x/NUunprm/cpZbasa4jLamvJGzeXNUUhLJogVRLdrdqOC/ZzOeRkt5J5zR1
8HwYXtHy17gpe4c8Lxg+bjj4/Ch6935kY1NbdzAlpSZuqvmUlJTZd5viTHR3
LHf0LSkpWmBrSjr3WdKywhZbd/xZUvh6X7Vbt+5EB1NStMC+xz01aWhr5Ts6
JL+B9ROPK3Z1ZSWrF8vKP4scFJbPzArrf7ZGu5jWpKR30jmtberhmtuGzDl2
Sqek8EV4O91DSsoX2JGSouFoOvyNuxZbd0pKyu/xpikpX2BfSkolnU0pafW6
xdbtTkmpidNrniXlC2x9kFT/zbr6yg+mpPoC7e6fT6k5dW2afo08YbFNLx6v
3V6mKSnptfRPI9OvaorV1Jmfm7ptXs1Kvc0Hosob70ZXgWn7/y8pfGA0xVzw
jbuardudkupzcaOUVLN1NfklH3kyBWqqmitpsXUHU9IUZKIp9rDpYSmpaBo8
JVVu46ZLwF2mRDL6xFJSZtlwM1NLPVXnO5oUKem19E8LqzPh8m27y+Iceb5W
sSUqWiacmC8WTm9xUE0N/v+w+/4abd3WLBPdNand3UlKmtsTRph5etj46IL5
t6vpy3pabN3WiLSynBh9LSXVfNcufLualVrkxpQ0iml7Ssq8CKt6Tw9/D7y7
W8FmUtJr6Z/TRU+D83W56Xq3Po9o9NfoXvT2fNRPShpu30V/THT9Xw8pqd3f
O1PSBX8vv0quLl7Lt+Hrz69XwMyyy/ov25bbSUmDkpJeS/+cLtWlrbv68Xfa
t+cjKWn31t2ej6Sk1qQk8qJPoD4vuwmRkgYlJb2W/jndjSmpH7bO1tm6652+
dfVapKR+nNJFLzfFktHb+tbhNCgp6bX0z+lSXaqrgac6PSVxvdYXqWXqfGde
eOdWP4CU9Fr653TR06BzI/BgUtLQik/NPFY7hT4clJT0WvqnhdWZ0IkReDYp
aVyV3y10FTvOzcCgpKTX0j+N+Fo78B5S0qDqr1MuZMe5HxiUlPRmuqgdfQu8
gZQ0nODfqKhNScvfFu2bFb4IWxVt7Vw4+oWNVP3RmmvWfnqokZIGJSW9mS5q
R98CbyAljSWMSPUp6ZNNOvlZ4YtV9omuLlo4XCqabjI1p9aeqvY4KWlQUtKb
6aJ29C3wBlLSQKIRaWtKavGimJLC9n9i0SOsp6bxq3rqe6aelDQoKenNdFFT
uheAroyeklJblGpqZeOX9bS4dktJg5KS3kwX1VwsUr20+kSrfkEAuNHoKWm1
1PJFTc35evKhbB8paVBS0pvpok/QCZnzc2ri1ngFALerSUmrzwNXr5cTU7NW
9eQLRy/BYT2p9ofrTdWQany4llOcXiHXkJLeTBd9SrFoPpHWL5KfCPAkfpc0
tIddp7rdHClpk1WSrVwkU1Wm/sp6ziIlDUQXfU5KSZU1AzyMlDScB1+but00
Kane6Q/1MgFqx1IHSUkD0UWfupSUmji/TX1YcWZD4T7Tu93d/V2Tkobz1EO6
5wHbbcN6E/bS8X5L1ZCvudH+kpLGopfyQzJ6p1Q5ivUto+v5ruNK+iFDShpL
/WHc+rDfXfmII9EJpFKmlzIH5Dx9+WJV5zxlVWZZ56qe1fRUDZtISWPRS5nI
s5qVmh6dkpoIo3AAh/RJSEoay6ZjuPUBvymyNW1Ja1JSpZrnPvk7rjDCRKd8
gnxUfBGtcyspaSx6KRWFds+qmQ49c0HP0DkrUtJAth66UtJZnDcqnZKSKl+k
4k/qRWriJlLSWF7eS1MgnBV9u1o2U3+7xkMjjts8/bMkJY1ix3FbvOQtP6VP
fXSfXypfSVhD5rq8qrYr+VsFZmEvhfs0elzteBHWmX+RmriJlDQWvdSU7mU4
DtoaemkmJY3iSErK3Bym7lQzN7f5BYvrzd/i9hmUpKR6xVQS7UkpaSsHZA29
1JTuZSyO2Hr66ktKGsK+w7UyJVWWr781rVlL/Xp7ICVtsnpOlJm4mrUss2lK
uIrU9HxLiqSkseilpnQvY3HE1tNXX1LSEA6mpE/6Pl9KqiElDer0UCMljUUv
NaV7GUv05iR6fY9OzxQ7/rnc7tu8RjdORveXlNS/3cdqzdiJDrGzUtLBevoh
JQ1KSno5vdSU7mUgqcM1k5JqasjfzGTWe5ZG9RvdX1JS545EpJpPM+bMUv8x
SP7Dk7DC5duwTHRFvaWS3tpDJSkJHdWOvmUgmZT0ieWaVfnoxOiC0RftSElN
SUlvkPlYw0CoISUNSkpCRzWlexnF9SkpPzpSnwxPgXAt0daGL8J1bRqwRvdH
SnoHKekgKWlQUhI6qindyyjyKekTRJvUzVI4PQwgxXuG1FOn6PTlrMzjqvpF
KhndHynpNaIfI+z4bOGd9NKgpCR0VFO6l1EcT0mp+6hUnZnRkaqnPgRVlsxs
UZHR/ZGSOnbK8bkcTZmIlBrm7dLBWKNPShqUlISOakr3MoojKSmTjDIpKbPS
eW7mSVBl8+qDVaYlqeZtXeR5pKQ+nRWRlq9T4zo6fHZ/+FDZnrFISYOSktBR
TeleRlFMSZWv87O2FkiFoFTJHSlp9yA1uunW8YNzU/CpmXLcuCNOShqUlISO
akr3Moqa78ysHr7MKWNVJjUrVeemMvnXy4l50UWO9xjc7pQjM1NJsf78GE+N
37Dy/EmgWPmm7W1qx+mFK1VeNa5x2SZftqJ+7Gv/6X3CTPcyiiGO1enXO6h7
6xyix3ihU47MVSXL24ya+qdE6lnWtnq9qj+sIawqX3k/I3T3HRrX+Ll3fnx+
9PB32XFy5Yr+yT/5H3v4k5I6pHsZxRDHqpTUG79L6k2LcbGackpKykxc5Z0d
Kam+ndeQkjonJTVd0e356EhK+vR0Jnkk3csQejhQa+4ljjw6P7fOHnrsdlJS
b25JSZWFN6WkI8+SUq26i5TUOSmp6Ypuz0dSUs90L0O48UBt8YToAgM1tR0p
qSunf3qQelscs1LSkpTUOSmp6Ypuz0dSUs90L0OQkrYaqKntSEn9aHFATgup
WZmlim/D1+GLzPSayk/vkx36aQlRUlLTFWViy2z5djU39XpZWEoazhRzd6Mg
qcXxmbpdSd3VzM1Yzf2U7qaiBVqPOCP6IyX1xAHZLTcA9yr2/7RISeGdW020
iZZfTom+Duu/7Di5ckWpzBK+XhWOlsm8lpJGEY4yJ0k61+j4XAWZz68JKFz1
MumkilXWc/q2rBjRHympG47GnrkBuFfxTiyMKtHX+aB01uvL+uSyFRVTUmqi
lPRUUhLDaZeSwterEZEqE30RRqp8XGrHiP5ISVDBDcC9ivdjmZRU/005KSm1
okxskZJeS0RiLJelpHyoyYSj+sWlpMtISVDkHuBeic+tf/mELRp5psTX51bf
mpOS8ivKJ5dV5FlJJaOwgJQ0HCmJgbRLSWHeWa0xn5J2TLxguBnRX1ISFLkH
OCKTcU7xiaWkWTQ3RaevFimmoegi7TbzRjX5ZfezJClpXKvj5O7mQEGLo3RK
/+sN88TVi3CR8EW0nnZbETKiv6Sk2zkU++ce4F7RW/dVgfyzpPoCqZKZ16vF
L+uTy1Y0ekr6OM02IyIxkHYp6UpS0pWkpHs5DofgNuBexY+sM9EmMyWaeqSk
cEX5ZCQlvZmUxEAekJKed4npnJR0L8fhENwG3KvY//UpaQp+hXT8t0ivTUmz
1ZTwbeq1lPQA3Z4e+2wV9zr3qLjyU4IrB5qxM5OSbuQ4HEW3twF8rfLL6jlR
6uHRPCVcZPpVqnx0wcs2+bIV7Xju0+JPSupWn93bZ6u4nQMjT/8sSUl3cRwO
RErqXJiJ8n9T+qnQwT8pSUoaTpj6b3Tudq228XP5B/L9uGaTh6BDMvTMipR0
F4fiQJxUOzdJSS1XdHs+kpKa+tk5f+/v/R89/J2ym1IZYXkav+Z4+LmWf/Wv
/use/hz/IX0S0ichKekWDsWxSEmdO/Uz16Mu2+TLVtSPI1txYp88zPSslLTc
rtTba46HSUrq21mnl6HpgTwp6RaOxrE4gQzqt4U+K9ztGQfkZSPrGd3ViJTU
iJQ0ltM/1RnC3b0Oaw7L4TiZDEpKGsIF2/Kk7jrd9JqUNE+55niYpCSALZys
RiQlDUpKGkXrIfaw7jrXU1NSuJmfU4+0YlVSEsAmTlYjkpIGJSWNRVC6RSYl
rb6cs5oYfbuakil2S0o6t8L8N5eWKWku9n29nB4mmrlkakqmZDQiOfhhH79L
giJXmUFJScNpN9ae2mPHFZNL+Do6MTprlZXC8o9JSeGhO2eWMPIUc0006RQn
ZpLUudsOLyElQZGrzKCkpEG12Lpn99gRR1JSJiItp9yeklqEhWhKWq5lCp4c
rbJMscBqShiv8lM8S4KDpCQocpUZlJQ0rhaf/J9b4WPsTkmpTJSq5Hsiza/r
MT7plFSTa6Qk6IGUdBmnqXG5ygxKShrauePuDT22z1SdXMKv0m1KSfd+4+50
qXC0LFCTksIymdy0qjNMSdHaxupY6IeUdA3nqKG5ygxKSnqAs7b0PT22VTEl
ZZ4NSUnRfDQXKKak2SkpKVXbWB0L/ZCSLuAENTpXmUFJSc9wygB8VY9tsjsl
hXNTuenBKSlfoPLrc6mnQvUpKV/bWB0L/ZCSLuAENTpXmUFJSU9ycJNf2GOV
jqSkfFCKhqnHpKSird+LS6Wk1eOhHbU9rGPhMlJSa85OD+AqMygp6WGOjMR3
9liNfGz5ykwMy2SmFBPZ3Z1xpjCqLENN6u2UFiajVIGwtrs7A4YkJbXm7PQA
rjKDkpIeSVA6Vz65nPJXuYqH7aAp+OLcXX8P61i4jJTUlFPTM0hJg5KSnmrf
kHx5p6VISY1ISTA6Kakd56XHkJIGJSU929ZO0GlRma94Xe/uzjjT3X35i7s7
A4YkJbXjvPQYrjKDkpIeb9PY1Glc6efx9uPzo4c/Rz7sIyU14qT0JFLSoKSk
l6jsDZ3GlaQkGJ2U1IiT0pNISYOSkt6jpkN0GleSkmB0UhIUSUmDkpJepThO
dRpXkpJgdFISFElJg5KSXijTMzqNK0lJMDopCYqkpE2W/6rS8X7bUUO7/SUl
DSF1AOg0rrRMSat/cS5MMfP0+b/RkuGCqXqkJKA3zkWPJCXVW3bU7n5rl60O
1iwlDURQ4l5hhKl5Pb+tiUg1dUpJQCecix5JSqoU9pKU1IgDskY4cvUbl6lJ
SdHnPpUpqTJ5SUlAD5yInkpKqpT/SUimG1df0lu9Xr1YrSssE50btiH6Nr8V
UtKIVs83b2wJr7IvJaWSjpQE1/O7pLM4Cz2YlFSp5glO5nlT+OKTTUOZBSsL
pFaRIiUNqiYCw7nCqLJ0cUpyFYMdpKSzOP88mOtLpd0paTUxFWH2vUg9Y8qs
IkVKGpqBzJUyz5Lmtxc/SzoyBFqMnaknp28dDyAlncL4ejan0EphL03BB/jz
lFWvLt+G5fe9qCmZmhglJY3OWOYy066UNKUfM82nzYPfuNs3CloMnJ91/tEf
/d89/DktECUlncL4ejZ3VvWK6SOVpIrlpaQlB+Q+YWyHRmpS0qakc/xZ0qp5
mwZC9EOtgxdHKYnOSUnHGVyPJyVtEj4nSk1MzVpdgpfCuatKooXzixRbOJOS
RjdVJ2I4aBVbVooPiTLli0uFJTONzI+FzKl1LnCki27PR1ISGVLSQUbWGxSv
I/Tp9FAjJY1uioVxaCEabW75Kx7nNWNhCj74ik7f2kW35yMpKSqaju9yYz9I
SQfdu/u4xu3jlH2kJEJT4mYPzjWNk5LmBtfPnaSkR/vZIX/6p/9DD39S0rgM
q5eQkgYlJREKu84Ap4VLPmWvtanNqVnRt/WVR+vMxJav1ev6WVLSEZOU9Nek
JCjadJWhH1ISocqbQDjo5xH1D/7B/9bD39Zju/KStyOFhTXkk0vxdX6WlLSb
lPQlJW2y78MZRmd3D0pKIpTpOiOdE42bkub2tx4OO1JSuEhmlpS0m5T0JSXN
iieEVQHX0/ewrwclJREqdp2+5RSjp6R5K9qNiK0pKVo+PyszV0rKkJK+pKRZ
/jlR/USex44elJREqP6rRBc0hgd7Rkqat6XFiNiUklKFU7OmX3+sJCVtkkpJ
385cvf1OmQKZGvJlpKQOhft3+vXJUWqpqxrIbdwyDUpKIlTfdTqZI56UkuYt
OndQbEpJW58lTVu+iWewr2Tyy2rWKjSlitUsIiX1LJqS5nOClPRmUlLnMoP3
epdt8jUrep5NXXflPuVhpkVKms8PYX4Jp9cUi558UjWcewyfWNvU8ndJmUWk
pKIpm3Gm7cnoSEpiCKkD6eJDl+tlDgB68HPv/O53/6aHv8uOEwfkbju6Tm+z
wxRElSkRf8KJ0edB0bfRF2Hh0zftlDqnlv/G3fRrSiqu6/jmPMlUehI0F5hi
kSc1cbWsZ0kDySej6DnBzfNL2NGdk5LYZF9Q0udsEs01U/DEp1gsE53qI1Wj
DTxYcya5zLdhq9f1s/5o8Yuk5UQpqUYxJYVxafXcJ5+MwpJSUudS+WhVIPWW
B7OvOyclscnu3tPt1Ht8Spo388iAKn4X7po/Q3tld0qKPkta1ZZ/21VKYlYz
0otJikeyuzsnJbHJkd7T81SKxp8wB+WL9Z+S5o3dsRYpqVs1KSlMQNGlpCR4
Nimpc1ISmxzsPScEauxOSbOBUtK8yal1RadPPWncN4OZDv8bd6uJmWKZdUlJ
0D+n0M5NiZQ0X/6iE5dzVyXDBVOVnJuS6hd3QB5xSu/ZBeRN21NSapFRUtK8
4eGU6GX055Qfnx89/BnOK6nkMu/K6LfsVrNSBVYyEen2lOR3SVAkJXUulZLC
dBNOXCajTJlUYgqXOrghp5ckdFbvOTOQURl59qWkaMjqJCV9Er/jlpIGUgwv
l/1JSdA590KdO5KSMnmnuEjTlDQfdam7iyMrerlze8++IGqVcb7CjDNPD8uE
szJlUuu6JSXNPRBaFbg9H0lJUVLSl5S0lBnO0bfheL+urVwoeptKP6a9KWnK
PhXakbb2HSepe4nlgedsc6LTe88pgtCU+I7c9X/3Hpz5O6vb85GUFBW9Kt3l
xn6Qklam9K1IZlZqCs9w+zglb9qekma7U9Jq8RbfuNt0/qFeo96zU1iapKT0
zfY89/Z8JCU18owulZJWMtlndascvWl5xlHBipTUuR0p6ZRnSU2/cfeRklpq
F5TsGr6qPiW/Soed8MmmpLnY6nX9LCnpXs/oUilpJdyt0yIlhW9XxZ5xVLBy
71WGoumJv0v6+MZdS0070N6BTyknfkrPkpZzU6/zs6SkGz2jS6WklWJK+iQC
UepmhgeQkjpXn5KmP/y735UTL05J4XZ9/OsNbbTuQCcNOnfj8bnMSltTUrhI
ZpaUdKNndKmUtHIkJS0/IeFJ7NbOZSLMSmpiWD5aT75Yo5S0dRY1rulAu4lu
9XBwbk1J0fKpWcsUVgxQPfTGwzyjS6WklZqU9Kn7jRKPISV1LpWSrv+TkkZx
WQfaU/Qpektz4sWu5nPjTSkpVTg/q/IZk3F6UPjxY8rdLd1GSlrJ5J19s3iA
EYf2qzwyJeWvKQ7Ig67sQCcQ+pG6cV0epacHpcxK2z1LkpLu9YwulZKWMpk3
OiU6a9C8TIYd2rn8tfhil23yNSt6qus70C6jK1P1B79HVpE/VU6Nf5c0SUn3
eUaXSklQdOXdLyf6baHPCndzQB50Swc6k9CPG1PSssDWlBSmnsysyogkJbXw
jC6VkqDIvc2gpCRSbuxA+44ehClpWnwl5qxV5J+2ZyLMXH71un7Wa1NSJ9vS
STMOkpKgSErqXOoTy1tctsnXrOjBbuzDKw8VqDGd+q83VJ4epwP/dndl9qkv
eXyrO9HJtnTSjIOkJChyS9O51pfaTRflyzb5mhU92O19eHsDYHb8aIymofzH
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
5dFFojXclZIqrT4EuLs5f6UmxUSTUf4Z0+6UdHd/vJfOr6evbiclQZGrauf6
T0lzOy/rk5eofNBzwZ+dm3dWSkoFok0p6WMw3kfP19NXt5OSoEhK6tzUk5qm
XtMtbzBJSYOYKv6B7q/wbWZWakoxJX3cgt4k0+2r0+PypLr1TBtWu2nBfcfG
sv5Tjq7RD9HR2/+RkqCCO9tB/bbQVYUOp7NISaOojDAX/K3uw2/skxeq+Rwp
9fbIjrtsp59b+ejH5+jt/0hJUEFKGlS3KenjoDpJ+Anzje7ujK5NXaakzyNu
5AZS7O3VUEq9PrLepnv83MpHPzhHb/9HSoIKboE6d/HNcN7WljfqE+jK3ePy
F9G23dItb1Ps5+nXX41NsXSTqmRZYEpn4ejiy2NjuXj04FnVFlYeVhUuUnnU
DX1kDt34LykJilxDO/dz7/zDf/i/9vC34zhxdEEPDMMLVKakTxCXPqVwEc0j
0WWjMTm/9jB/ZQpsXSRv6MNy6MZ/SUlQ5D62c0OnpHkTzu0TYCvDsLWDKSlf
SeZKvZoevo0WqA9BlSVrtiLf8rEM3fgvKQmKpKTOPSAlfRxmpEU/CV++zX9U
Tj2911R9Svpkf6O0LBA+tSmuN1osFXYySa0+HGXqzBv6gBy68UAlNx6de0ZK
mrfllD7hYYofqufvJ6mn99rZlJI+G4/qVXKprPaTTjTRXBYtsONZUqWhj8ah
Gw9UkpLuVez/J6Wkmu3lhXakJI+WdtNpjRTP5JlnNzUXgmXhsNpUJavpy7f5
19HKo6KLVHTY2Ifi0I0HKrnTuNfqEhMtkE8uX9/XyynLWdHyy4mXpaTlVsPX
tD0lpd5SQ6e1MFavZsbUZXWO1WMrQzf+y++SoEhKutcU+1RwVSATW1bxJ5p6
otOXE69PSR8HHgurz6XnifkCn0fcqNxF151urC6Vkg4auvFfUhIUuVm9V7Tz
lzslFWHC6amUVJxyS0rKbD5vkxoFxQKOnyP03rl668/iAIl+8nDKSivr7K3H
3kZKgqKX3GlMv0pND11QMtPaz5aUVJmJukpJmU7gPVKjIF+gOIsivXeiTjqz
cuD0oPPmPZ6UBEWPv0ftfANXbQtb+/iUFO0HXkVKupEOPEsnPSklUUlKgqLO
Q8QRQ2za/MAo81zp9JSUf3tLSvps31/FZ3ZXatctjxftw+XEYgEO0o2naN2N
qxERTv8E42IuH61hVVuqnnZjbegDb+jGf0lJUPTUO41RNqrY/9PZv0vKz70x
Jc3bG06JrvrnxD/+47/s4W+Ugw1SHMPHXdCH+QQUNmOZdFLFKus5fVvaVXuN
oRv/JSVB0SNT0pO2KBNhUtlnSj8qiiaprlLSJ/tJ6arY7flISuIxHnktuNI1
KSl8HX1+FJaJvgjPtPm4dK6hj7ehG/8lJUGRK2Pn8hFmvq6FU4qzUjXcnpLm
Df/8+rW6sMDt+UhK4mEczLvdkpIqnwGF4ah+cSkpaujGf0lJUCQlda4mv1zz
d/1xEia+1dzb85GUxPM4nve5JiWlHgZVpqQdExtt1+iH2ejt/0hJUEFK6pyU
tC8lzYusXn/f1hSTkngth/Q+rftt9SRonrg8Q65ehItEA1FYT+stGv0YG739
HykJKjwsJT1pW77CpHCjHjZ8WaAYXoqv87OkJF7LUb1D6067fqe0W+PoB9jo
7f9ISVDh+rvfpp60LXm/LfRZ4RE1YW1fSpr+8NhISoI8B/ZWD0tJTVc34tHV
w+eHJ5KSoGjoMR560rbkPTslLUlJcBfH9lZNH75cdr1uvaJBj6toswfdlo+U
BBWkpEG9JyWtzEdsTaLJZKJw4r6IJCXxbA7vrfRY3tD9s2r80NsiJUGRlDSo
16ak2e6UNJOSoIYjfJOHXVXPNXrPSEnwKg87nz9pW/KkpB0pabVI5mt4UhIs
Oci30mOhZ/TJciuG3iIpCYqkJAZVGWoyPzs6/oukt6Wk8Ddir3J3999MD2zl
+Plk/8/gg5o35DFbBKQ86dz16fustbxSzP/NX0an4OF+Zn9F517TIbccRdPG
lDT3T+qtlJTysJuc3fTD1m2Pp82bNOqTQXvjMnf3+vkmKQle42HnsW63Zfr1
GX3qNJsqFs7K1x+toanre346kGvO/ev2qDvFs7dunzf3yaZt/1n4x+dHD39v
3mWc7mE3TkDKwwZ7n9uSCTWVeSfzOr86KUlK2u1hJ4dzvblzUtsePZvdno+k
JE73jOHvd0lQ9IzBPutzWzKtuislrb4OEX37iaW55aziA6xU4VNISa09dbvO
8vL+yZ+75im35yMpiRYecERJSVD0sJTUp95S0ir75MNONDFF01P4NrqKs0w9
OX3rbvfIjTrdU3upcrtWxcKlJimJS9x48r/XkU6TkqDo+ECjKNPD4awpnXFq
zo3hIpvKTImYE30RToy20AE2HLus3iP7qn6j8iN9iqWk+RTxfR1On2fNr4tv
o1OkpMc7JSwM7UgPSElQ9PIzzDUyUWhTSgqXLeaR61NScXX079xdNv1qNXHH
25oGX3Zme+ThvRrj8+gunpHCWWFaWeWa6PTMxOjr1Fwp6cHs06UdvSElQdHD
UlK325LKMpnAEr6NTglnbcpZqfL5F6m5xekM4fT9VXmMFSfW1J+Z2OI4fNKx
PcV8EkN+tWB01iqwZEJTKtpk5kpJr/Ww+5azbO0WKQmKHna26Xlblncdqynh
rLB8fk9F64lWG60ts2D0xSe4cUrdUIUT6VyLPbU62DIrCucW2zOlb9GLU457
5IEdnotSs5bTox2eT0k1GSqz1PRrjPq2wTfuHs/eTNnUM1ISFD3s9vVJ29It
nfxsN6aksFhNY/IpaRXVT9+6Rw6HHSkpOiufkuY9Ev0OXj711HxhT0p6JLsy
r75/pCQokpIG9dvCxRW+p5PfqVFKCkNKeCu+mlvZklTsCtNTo0P3eSMis2tO
TEmVX7SreQIlJb2E/VijspekJCiSkgZ1V0pq9IE8/Wj9LKly4qZnSdHDMjql
vs31Hj8cVk/l8sVWU46npJov3UlJL2E/1pCS4CwPu+N90rbk3fgsiWfrKiWF
xVaBKJODPEs6y9aHessp+VgUzUH5iVLSm9mPNaQkOIuUNCgpiUZ6S0n5JhVT
UqrOEz3+tHNiSpp/T/SVmZh5mymcCVMNOoZLrUb36tOSpfyym1a0r4b6FR0/
O4WbLCXBWaSkQUlJNHL6IIreuiwnhrc3+bepmqN1fhZnuUanu2efdjJ3nmHJ
cErmJ0Un/hVX9Ox99BL5LHA8bhTX2EJxFTuGnpQEZ5GSBiUl0ch7BtFZ9NiX
lERTUlJ9mZqlpCQokpIGJSXRyHsG0Vn0WMrUk7s7g6OmLSlpudOjr1fFUi8y
c8PmrWYty6wOwlQzoq+js4qNiXfigpQERUcuH9VXp7c7d5d9SUk0UnnE7juw
lyOi0dCIrqv1ii5YC7zcaqCl3kZPMlOQX1Jloi+iy4YDfzlrWaa+GfWtilaS
6pwoKQmKdtxINL35f6QWPSYl0cgF4eWy+qUkeIz6lJSamJmVf1Gcmy+z+tS0
WG0qxBUryUwJSUlQtPXu3f3AESf2npREI1LSkTUCjQydklIt3/EsKVNJZgqw
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

                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 12->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3r9cyDH2bhpHC1BNwYDGbTLrjYLrDrIp3degm4ceElu0sKb2AdCOme
vyFVajdp0qVIeUOc2kXAtQkE0qRxmerk3j38tLo1r3oZaUa6Lr48nCONRqOR
RtLn6Jz7+c//9L/9Z3/+d6Zp+td/9+d//tm//O//y7/6q3/5P/zJf/bzzX/1
l//6v/mLv/yz//qf/uV/92d/8Wd/9V/86X/yc+L/97Psn/6n0/TXrwEAAFj5
fD7f/wIAALzcMigBAAAgIgEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEA
ACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAASzempAkYwS3nBwCAG914
F3TvjR9Q6ZbzAwDAjW68C3IDBp0zSAGAd5KSgBSDFAB4JykJSDFIAYB3kpKA
FIMUAHgnKQlIMUgBgHeSkoAUgxQAeCcpCUgxSAGAd+o2Je3+P7YsF5n/G1qV
TNVQv7pwqdR6jzT1yFryS9VsbLTNqR7LlMzUuZxYLBNdUU390bYVNznVhnzH
TomDLVVt8W1m0zK9tM+5tQEAjOLGu6Diqle3lJV1RusP7y3z1W7qk1Tl9bN2
NDWcHi25r20pqTYXV1TclfnoUWzhpvozbaupP/+2cr/kZ9XvteKyB0lJAMA7
PSkl1d+FFqttlJIy07c2dXesqLwz39qG+jv56H6P1lzfwvr6N4WvfPMyTd06
pTIlFbvl9LEsJQEA7/TslBTOqrzxPj0l7bjhr3++UD9lX5NqytTvrJoEdDAl
ZZbdd7TfmJI2rUtKAgA4RecpaammwpqqahbZmpIy9W9ab/0ip6SkTd27XCpT
bWq90QYUF6+sNlqsOLFeTeaq2UGhVJ3hKorr2rdpeZuODQCAx7jxLqi46vpk
USyQukk+KyWlltq63vwi+VCzIyUVG5NpZGaLUi3PlGyRkqL159uWqT8fbaI1
ZxpZbOqmlBSdcgopCQB4p7elpIPTi4WPp7DdTdqdkmoqL66x/h4+2kWrAsVI
srv+ffkis1OiTa1cUdjsVFbKr6tyK3aQkgCAd3p2SsrcG+cX2XQXekpK2tHU
+jqLK6o8BjJbtzslfX49Ejb1TOW2VNafke/J6JRzU1KxNikJAOBET0pJn/Rt
amUaSt2U7m7njhv7+uCWb8bWtlV2b2WzN/XJJ93zmVn1HbipqVEXpKT8WykJ
AOBK3aakKbCp2tUdZrS2rdMrV5eqIVOsvqmbmhHWWdPs1Co+i7xWX1tNyZqa
Uz2zWipff75tma3ObF10Ss2GR6dE21xctn5btmpULQBA5268C3IDBp0zSAGA
d5KSgBSDFAB4JykJSDFIAYB3kpKAFIMUAHgnKQlIMUgBgHeSkoAUgxQAeKfb
UxLQuVvODwAAN7rxLujeGz+g0i3nBwCAG7kLAgAAWJKSAAAAlqQkAACAJSkJ
AABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgb120KfFQIAwKCk
pEFJSQAA0IiUNCgpCQAAGpGSBiUlAQBAI1LSoKQkAABoREoalJQEAACNSEmD
kpIAAKARKWlQUhIAADQiJQ1KSgIAgEakpEFJSQAA0IiUNCgpCQAAGpGSBiUl
AQBAI1LSoKQkAABoREoalJQEAACNSEmDkpIAAKARKWlQUhIAADQiJQ1KSgIA
gEakpEFJSQAA0IiUtMP0O9/XlYtkqsrUn6pHSgIAgEakpK2W3XVK72UC1I6l
dpOSAADgS0raJPrc5/Q6a2qWkgAAoBEpaZNMX+W/Jjd/PS/8nt5qyqrMss5V
PavpqRoqSUkAAPAlJW1S89wn/3uiMMJEp3yCfFR8Ea2znpQEAABfUtImp6Sk
yhep+JN6kZpYSUoCAIAvKWmT1O+Sot+g2/owSEoCAIAeSElbFVOJZ0kAADA0
KWmH1XOizMTVrGWZTVPCVaSm51uSISUBAMCXlMSXlAQAAF9S0qBODzVSEgAA
fElJg5KSAACgESlpUFISAAA0IiUNSkoCAIBGpKRBSUkAANCIlNS/8B8Sv9Hd
nQEAAM259e3fzx304/Ojhz+HCgAAbyAl9U9KAgCAK0lJ/ZOSAADgSlJS/6Qk
AAC4kpTUPykJAACuJCXdrrgLMilp9Q/QrSamCtRUIiUBAPBaUtLtiv/UdjG5
hK+jE1evi5VISQAAvJOUdLspZlVASgIAgMtISbeLpqTlfukqJTlgAAB4PDe9
B2Uyzik+FSlplko9YYFMJfliy62+teMBAKAVt7u3S4WjZYHKZ0n1D5jylaRK
hg1z8AAA8DxudG+XyUdzgdNT0uqx0b6UtGx/+34CAICLuMW9XXEXnJWS8vFn
d0qq3AoAABiFm9v+1fyeKDUxLJApH62tMiXNTXU4AQAwOre1/cs/S7ryr/JQ
cVABADA0N7T9Gy4lzc12aAEAMCK3sv0LvxF3o32Nb9EtAADQiJvYQf220GeF
Sw4zAAAG4vZ1UGOlpC8HGwAAQ3DjOqgRU9KXQw4AgM65ZR3UuCnpy4EHAEC3
3KwOavSU9OXwAwCgQ25T+3f+P1R3QLsN3LrUn/ekRbcAAHCXdre+nGUa8/+X
tGMzN9X/M5v8k3/yv/XwJyUBADyMlNS/l6SkeWMr1yIlAQDQiJTUv1elpHmT
i+uSkgAAaERK6t8LU9K84Zk1SkkAADQiJfXvtSlp3vzoeospafmvKyzfruau
Sq6qrcliUhIAwMNISbcr7oJiSpr/Abrv6+WU5axo+dSUflLS3Amrtefzy3Lu
MhkVy6zKS0kAAC8kJd2u+E9t58NLGHbC6cu3q/LRKR2mpLkr5jbUp6TUxGJK
8iwJAOCdpKTbhc99Vnskk1zCWamUtHtKVynp69tFNd+4k5IAANhBSrpdNCUt
98umlHQwExVTUj8q88sq8qR+guR3SQAAzL43nHe3YmCts8Cns5R0d3//7RFb
/2/cbf1dkpQEAPByUtLtUuFoWaBFStoakW5PSauekZIAAGhESrpdJh/NBXZE
oXwI2hGRbkxJ0Z5p92/cSUkAAC8nJd2uuAuK34KryUHRWZkXnaSkTOcUU1Lm
f5C0ehv9RVJmupQEAPBsUlL/ar4I9xVOKc6KTukhJRWPzPpv3LX+k5IAAB5G
SupfzXfhrvm75lCpPCalJAAAGpGS+veelLTpaJSSAABoRErqX/j1uRs13cZN
i4T/86MbNeoWAABu0fTWl3Z+W+izwkqdHIE9tAEAgE50co/KVg9ISV0de101
BgCAe7k5HNTQKanDo+7bnt5aBQDALTq8X6XGoCmp2+NtblWfzQMA4Erd3rWS
N1xK6vxIW7at53YCAHCBzu9d+Yz/b9ztXvBik6AEAMDfGOUO9s2mYf9/SWMd
XaumDtRyAADONdZ97DuNmJJGPK7CBg+3CQAAnGLEu9m3GSsljXtERZs96LYA
AHDEuPe07zFKShr9WEo1fuiNAgBgh9HvbN+g/5T0jKMoswkP2DoAAOo94/52
aMVdUExJ8z9A9329nLKcFZafp0eL1aSkJx0/xb1wWUsAALjXk+5yB7WKM9EC
+eSyij/h9OXbVfnolJqU9Lwjp7g5D9teAABSnnevO5zwuc9qj2SSSzgrlZJ2
TwlT0lOPmZqNeuSGAwCw8tQ73oFEU9Jyv2xKSfUJKLpsMSU9+Gip3LQH9wAA
AF/Pvu+9QCbjnOLTWUq6u7/bEpQAAPhISR1IhaNlgWtSUj4iSUn7SgIAMBwp
6XaZfDQX2BGFtqakYkSSko4UBgBgIFLS7Yq7oPgtuOLr+re+cde0PAAAQ5CS
+lfzRbivcEo4K5qnMiWlpNMXAQCgc1JS/2q+C3fN3+MPlX0b+PhuAQB4Gymp
f1LSZXZv4ON7BgDgVaSk/oVfn7vR3Z3R1pENfHznAAC8xxtufR/pt4U+KxzR
wbFgKAEAPIOUNCgpqYXjY8FoAgB4AClpUFJSC6eMBQMKAGB0UtKgpKRGBCUA
AKSkQUlJjZw1HAwrAIBxSUmDkpIaOXE4GFkAAIOSkgYlJTVy7nDYUds8JI1N
AIC7uBMblJTUyOnD4UhQatEeAACKpKRBSUmNtBgOW+tcljc8AQCuJyUNSkpq
pNFwyFc7/U5Y2PAEALielDQoKamRdsOhvmbfuAMAuJeUNCgpqZGmw6Gycv96
AwDAvdyJDUpKaqT1cKip35AEALiXlDQoKamd24OSIQkAcC8paVBSUjsXjIjM
Klb/kgMAANdzPzYoKamda0aEcQcA0C0paVBSUjuXjQhDD4Bb/K+Bu1sE3ZGS
BiUltXPliDD6ALielARFUtKgpKR2Lh4RBiAAF5OSoEhKGpSU1M71I8IYBOBK
UhIUSUmDkpLauWVEGIYAXEZKgiIpaVBSUjt3jQgjEYBrSElQJCUNSkpq58YR
YTACcAEpCYqkpEFJSe3cOyKMRwBak5KgSEoalJTU1JX/y6RK17QHgDeQkqDI
DdigpKSmDAoAHkxKgiIpaVBSUlMGBQAPJiVBkZQ0KCmpKYMCgAeTkqBIShqU
lNSUQQHAg0lJUCQlDUpKamrHoKj/dxgu0KJPAHgMKQmK3FMNSkpqaseg+LnI
j8+PHv6MaADypCQokpIGJSU1JSUB8GBSEhRJSYOSkpqSkgB4MCkJiqSkQUlJ
TUlJAABvJiUNSkpqbeu4kJIAAB5DShqUlNRao5S0/Jfolm/DudHpUhIAwAWk
pEFJSa21SEnLMssEFC0TLSwlAXCc3yVBkZQ0KCmptdYpqT4Zbf0unxENQJ6U
BEVS0qCkpNbafeMuNTH6UGnHz52MaADypCQokpIGJSW11u5fbwh/YZRKSfv+
RQgjGoA8KQmKpKRBSUmttf437lI/R/IsCYDWpCQokpIGJSW11klK2hGUjGgA
8qQkKJKSBiUltXbZv3FXTElbg5IRDUCelARFUtKgpKTWGqWk6P/5KJzo/5cE
QDtSEhRJSYOSklpr/Y27dn9GNAB5UhIUSUmDkpIusGloSEkAjEJKgiIpaVBS
0gW2pqR+tOsTAB5ASoIi91SDkpIucM3QEHMAuJiUBEVuyQYlJV2g9dDIPAky
KgFoR0qCIilpUFLSBdoNjXw4MioBaEpKgiL3Y4OSki7QYmjkf0m0ykqnrx0A
PlISVJCSBiUlXaDR0CimpI+gBEBLUhIUSUmDkpIucOU37lZrDF8AwFmkJCiS
kgYlJV2g6dAII9InEY6MUACAi0lJg5KSLnBjSsq8BgCgNSlpUFLSNdr9NCla
v5QEANADKWlQUtI1Gv0zd5WzBCUAWvC7JCiSkgYlJV0jOjqODJn8spmUdHC9
ADCTkqBIShqUlHSNc1NSccFiLDJaAThOSoIiKWlQUtI1iilpHkHFoVQz0Gpi
kQELwEFSEhRJSYOSkq4RBqLw/3MU/R8eZeqpXF39FADYREqCIilpUFLSNWq+
cVf8NxY2DTFBCYDWpCQokpIGJSVd43hK2jq+KmswbAHYTUqCIilpUFLSNSpT
Us3//2j3Gg9+iw8AVqQkKJKSBiUlXaP+n1wIh9K+kbXpyZHBC8AOUhIUSUmD
kpKuse8fpqtc8JTajF8AtpKSoEhKGpSUdJmt/5OjmkV2rM7jJADOIiVBkZQ0
KCnpMsX/C9JqEB0cUDvSkCEMwCZSEhRJSYOSki5z8N/xPmt1xbB2cL0AvIeU
BEVS0qCkpMvUD5BThtLuZ0YGMgCVpCQokpIGJSVdpnKAnDWOjnyzzlgGoIaU
BEVS0qCkpMv0k5Jq1mI4A1AkJUGRlNS5qSd3d8Y9ajb8xM7JV1Vc0Wt3EwD1
pCQoevPd7xB+7p0fnx89/L32OLk4mBxMSZVlAADIkJI6JyXd7nhsOXF1lWt8
7c4CADiFlNQ5Kel2mQ1v0SdnPbp67f4CADhOSuqclNSD6LY36pATHxW9eZcB
kOF3SVAkJd2r2P9SUg/CbW/XG1ISAK1JSVA0Skra0chRtiv/j8jVpKRVJam5
39fF8lJSaLXtTbvi3J8dvXmvAZAiJUHRw1LSENuyNMWsClRGmJrX89tUGSkp
arntrfvh9EP9zTsOgCgpCYqGSEnfFp77GXsnoilpuVOOpKTocyUpaYfl7rhs
XacU21EYgMeTkqBo3JQ0t3x5B7ucGE5PzQorr29YU5+zU1LxeVN+Fcuue5Uj
B8m+dZ1bcmthAJ5NSoKiIe57p8Qn+WHGWRaIzgpLhpVcKRWOlgU2RZivmpS0
Klz/LGmIY+ZcV25yo5S0ozwATyUlQdEQd7yZBJF68UmnpFVVqQh2jUw+mgts
fZb0Y/GvNBTL70hJy5Zf1U83u3JLpSQAWpOSoKj/e91UMvrUpaRP8BW7VP03
pqR8gRNTUhiOdqekyvY/wMXbuGldghIAO0hJUNT/Xe7BlFT/+KnPfjiSkn6k
f3+Uer01Jc2N7LP3joseRRessUXh3Yug04CHkZKgqPP72/DbcfPb8HX4Inz9
+XWTo5V0pSbCTIHo3OKU3SlpbmqqTIcdW+OWBL11XYLSBfQY8DBSEhT1GQ1O
tNy6Ebe08kHPBX+VvRcWW6XUUawafFn7L0hJu5d6rdVppOfPVQBqSElQ9PgL
vZR0cUr6BAfViCkpmvXuWvW55Y8s9TbhU9owH+lJYERSEhQNd/u6w4h36bPo
fdpdjre8US+dK9rOyxq/Y0X72jbK7ujBlH6wqBuBEUlJUDTQvStLvy30WeHX
cEEp1cIrW74jkF6zotc6PSWd+NnFcUd7BxiQlARFrpKDGiIlDXdXlmnblc3e
sa7dzet5d/RjClLSPGVfB04DfpMWeBIpCYo6v2ul0afH+5zY+BZ9dVC+VVe2
eV9XX7m6l5sO/+sNk5QE3EpKgqJub1n5Gvdu6tzA1VqxSQ9OSccXf5vj3TXu
uAaAl+jzlpXZ8+6mNj29ukxNs0/Z/Br71nWkhVdu3QMc767pceMaAB6m8haR
uzz4bmqsTXt2Sjq++HvUJ+t8Jbcf9o3GNQA8g5TUuQffTY21af2npCMLnrI4
s+J5NXrwr55v7j6YV4vnK7TT4Z38LgmKpKTO1d8sHby5kpJqGnxuD5y+olO+
CXawBj7B10qjBVKHYvR1/ZG8el2s0B6Hd5KSoEhK6tymO6WmuUNKekNKOquS
l5tiVgVapKT82UBKAmZSEhRJSZ2Tki74e0xKOrjsWTUQTUnLk+3WlLR8TDy/
Xk6pDERSEvAlJUGRlNS53SlpeWMWvbPqPyUt2x+dsrr/zCxYuSK4QObgX5Vc
jespFpSmYFwvl61JSZNLALyPlARFLpGdS91N5VPS6kV4czVESore162mhJuc
uSE8uGmXjZSDKzqlnU4LR6TC0bJAzQE/BR8I5Ed6TVXRg9+FAN5GSoIiF8fO
nZ6S9kWkTJTYd/xU5rX8R+KZz8+lpNub8WaZfDQXqE9JNeEon5Iyw2HZPJcD
eA8pCYpcFju3LyWtUkO7lLTp+FndNx5MSZX3k1JSJ1W9SnFcXJmS8oMibKeL
AryBlARFLoidO/gsKTp9X1ZK3U0Vj59UsRYpad82PiwlnVJDi6qYpQ7slcys
+ThfvgiXTVVYPPhdGuDZpCQocinsXP3dfuruaPl2+eJISlrdekWbnZlbv2mp
MuH0SUo6tYYWVTHbNwZb/OX3r70PTyUlQZGU1LndiaYYNHbfTUU+1F78ALz+
iGqUkn5sT4LPS0lnVXJ6VXyNkpKAp5KSoEhK6lxvKSkakfYdRTtS0uqBUU1J
KekUzhLnyoyj621tc9OeAa4hJUGRq17npgP/cPfXiZ85H7/R2rRp4VpSmxad
cnpK+lwVFk5Zy+lNdaLgy1UDHkBKgiLXu87VfRh8v32bdlaCOx4A69u8Y0u3
Omstp7f2ms1nCLsHPtADKQmKXOk613mUSAWlmoOq801Ltbmy5BHdpqRGdTIu
VxAYlJQERa5xnRsxSnyqU1I/Ttyu405cy+kNvqYHGMumQQT0QEqCIle3zk3j
p6T5GKs82Hav6AJSUqM6AbiSlARFUlLnxkpJqcc0y8OsWI+U1HlKalctz+Dw
AOABpKTO1aekOZXsmNv0WdIneLS0admt62pquJSUqe3gWpw3yNj6XVYA6I0L
Wec25ZpMRCqWkZL6WdcQKemUGng8lxgABuUS1rnHpKRG37jbvcg+I6akVIWr
6Bp+N3JftRByoYHe+F0SFLl4dW53Slr9OGiecs037sKt+LT51xt2L7LPA1LS
FPPZmGTbNZUHc7mBfkhJUOSy1bl9KWn14vpnSeFWNCp8cKk+V3T9s6RPkKQO
Vg4pDhjogZQERVJS56Skpkv1uaIWqwjrPCsl7SgPwL2kJCiSkjp38Bt30ekX
p6Tl17oqy+9e0b4F37CWmpS04xt3mfqhyAUI7iIlQZGLVOcOPkvqISXt2OTT
lz2x8YOmpGKd4a+Tzq0fUlyG4HpSEhS5PHWuPtTMj2zCt9PCvogkJbWo6uK1
1KSkdvVD3taHzsARUhIUuSp1bl+uSX317sjfECkptfjqRzdHnptISa0r4eVc
leACUhIUuR51Tko6svgU8/n1sN+6unFTUqbaEz/Gdz7hFK5N0JSUBEWuRJ3b
HXBW37h7T0qK1rCaskpSBytv4eKUNOJaANhNSoIiKalz0achd7lsk0+vYZKS
2td8/Vp4D0cUnEtKgqIr73450W8LfVa42ykHZCYWfV78jbvPsYS4by1wClcr
OJGUBEWuO4OSko5UMr3yX2+Ya77m+aATCy24ZsEppCQocsUZlJR0pJ6Dq7hg
yDRaxcXfonRuoZHMAeyidlzhu9dPd3f3X0RKgqJXnROeREo6UtXBVUQXn4fS
KWPq9FF51/2A0wtNhYfx2+51T6Trvl7SD1ISFL3hVPBIUtLuqo5fATPha57V
IogddNenps4wtLYcdy98KHAK3RV6dp9ISVDkUjIoKemW2vJ1Lqd3mJI+l3/j
brnea1bEy911hA9NR2U8uHOkJCh68Bng2aSkW2pb1bm6E+s/JX1u+rDdSYYL
RJ+WOvaKdFGe/oHXchEZlJTUYYWpxHTiKk5xyw3kLecZ57dXSaUkx0CGzqmh
l+CdXEEGJSV1WOHU8b/eENZ//di/a3VOcW+QiUgOgBQ9U09fwQu5ggxKSrqx
znxKarqKE90y9m95euUU906CUpFuqfe8vvK7JChy+RiUlHSkzoOreEZKumwt
t6+00RrzDy8u1mIDu3J3B//i7s44zZO2pbXn9ZWUBEUPO+e/h5S0r9pT7nOi
i597B1Vfz3W3hhVO37rj2q3rZ81/+If/roe/K/vzLj+38Y/+6P/o4e8xvf2Y
DbnG87pLSoKiTfc29ENK2lHtjvv5TG2ntOp4/T9L/vj86OGvw5TUdEVS0pWk
pNNFN+Ss82Tl4id25pE2X9zUTkhJUCQlDUpK2lTh7qcemTpPadvx+kdMSZs2
8Agp6TGkpNOlNmQ5/WBQ2jT9iLnOpp/VPGbXf0lJUCQlDUpKqq9NSuowJW3a
xj5JSVeSkk73yJTU2yI9k5KgSEoalJS0qUIpqcOUtGkz9/EsaSD5gbk1Ja3G
+wtTUvFEtzUlrSqMnlSXZZYvVq+jhcO3qUZGC4clUw1ONSO/0sz0QUlJUFQ8
kdInKWlrneEF/WCFpzTseP3TyClp05b2ZqpISfPxtnr9fVtT7G0pKXPHuyPO
RF+/JyV9spf4zPRwL0y/Zp/V28yLTIGwzKpYNLNkWhUtVt+MzEpTaxmalARF
UtKgpKR9Ne9ISVO1c5taXzKVWZbC6WHhaJlV+ejiUlI+whRf52e9MyWtxtQk
JW206r3wHJXakCmRI5aVhGXyL5Zrn4J4Ek5JNaNYeFUybHBlPakKw4njkpKg
KDxzMgQpaXflQxzz9S2MBpY5thRfpyZuWvZIStq0sV05kpKm3z02kpJm0ZS0
vMs9KyV961y9ra9/lN7OBIdMgU8iKURTRk3QyAeQdikp1YzKeqQk4CMlDUtK
OlJ//4d9sXnLe8izUlKxfGZdR1JSzfZ2qKuU9AY7UlK47Pz6+2L1dmu1Ucsj
5N6S0YN2LhYt8KmLD+GyxZLhi2ht+fLFwqlZNc3IV5iaOC4pCYpW51VGISUN
sZbdMjcw4b3Qic+SplggWs3KrO5t6lNMPi6linmWtJy7+1nSatm58n3fxBul
t6cgXIRTokuFPT/9LmiE06NTVnsw+nZVw6q2aPnUqsOWhO1JtT/a7OhKUz02
LikJiqKnAvonJeVr6McpnZCpbcqmpKXKb9xNQSZaLd7iWVJ0qzs3HUtJMynp
Kz9wppNS0pR4lvTUlJQ/dRys/Hg9Y3nYlkpJUHTkRo4bSUn5Gv7e3/t/e/g7
eB9SE7XyKSmTgzalpMpnSbs3drk5xyu5xu6UtFpwSn8N74UpKTN3d0qKJqbp
wDfuruyW3WpOHUcqP6WesTxsS6UkKJKSBiUl5Wu4PR8dSUk14WhZ+NyUFD48
yi8oJdUHpXxK2heRHpOS8rampHkQrab8UfB7pVWxx6SkooMbsuk0ta/yIwVa
eMyu/5KSoEhKGpSUlK/h9ny0IyWt7jouS0nRR0XRlJQPSmedSUY5I+1LSfNe
Tr2VkqK2pqR2f4/p7c5TRrHw1lPlcY/Z9V9SEhRJSYOSkvI13J6P6lNS6iPZ
gylpCmSmr8qsIlV08XYpqX7b77Uv0bT4G6K7DpKSTiclbfWYXf8lJUGRlDQo
KSlfQzG8LKWmz3NXJcMFd6SkVDja2g+plHT937lnkv7PS1LSlaSk050+YOcT
WvT16owXngDDAp9fb1HC8tGlooucsrGP2fVApfx9Gt2SkvI11OSX8HXNi9Xr
rSmpGI629sNTU1J9D9wlvP270d2d0dzdHfyLuzvjHCduyPRrtFlVXjM3VSaz
bP1Kp5OC0mN2PVDpSef8V5GS8jXsS0k1U2oqD1PSjvurysJtbgN32rO3DvcA
sMOJ4yusaqqLS59FGlpVspoSnmcyL4pzd3A6ghdqcW/DBaSkfA2NUlJNzaul
dg+xawZmdC39nBY6aQY80lnjK3Ua+VSnpPn1qkwm40hJB/ldEhT1czvEJlJS
vob6/PJVk5K2RqR5qbv64eCKOjk59NAGeKTTU1L0IdGmYqkXNY+QpKRNpCQo
6uRGiK2kpHwNm54lFd8eeZb02TvKbk9J89zbTxG3NwAe6cSRFT1RrKasHhVV
vg1fpApU1rN7A3cv2ycpCYp6uAViBykpX0OjlLQ1KK0+29w03DpJSXOZe08U
TlPQQtOR9Zhh+5gNWZKSoOj2mx/2kZLyNbRLSZuCUnRbKuPSlQOzcl33ni6c
qaCFRiPrMQP2MRuyIiVBkZQ0KCkpX0MxvKxE56amRJeqT0nLdmYKdJiS5sK3
nDScqaCF00f0k+4rHrMhISkJip50NnsVKSlfw6ZfD7X7q/8yW1iy25Q0L3L9
qcPJChoxuELP7hMpCYqkpEFJSfkabs9H9Slp2exl+c5T0rzgxScQ5ytoZPWE
/e7m3OM9PSAlQdEbTgWPJCXla7g9H+1ISXPjb7lGH1ndxa11yoILTK90d69f
R0qCoredFh5DSsrX0I+DW3GwKzat7ngNlzX4yp4BeB4pCYouvhPjLFLS402L
/8fHBX1y1irGai3AO0lJUCQlDUpKerxVP1wQl06sXFAC6JmUBEVS0qCkpMdL
9UO7MXtutRecWxwqAPtISVAkJQ1KSnq8fD+0eLTUoucHev4F8B5SEhRJSYOS
kh6vsh/OHcLtnlK1260OGICtpCQokpIGJSU93qZ+OOvRUuvnPkN8VxDg8aQk
KJKSBiUlPd6+fjgYl675VxdOX4tjBmATKQmKpKRBSUmPd7Afdg/ta/r/3h9V
OcYAgDwpaVBS0uOd0g87Hi1d2f93/ajKMQYA5ElJg5KSHu+uf5f7+v4/8Sy0
YxvntTsZAgAzNwaDkpIer92/y52v+a7+P+tclKlkilmt2uEHvIHfJUGRlDQo
KenxmvZDfuDfuAtOOSMVa1gVWD1aOrh2gP5JSVAkJQ1KSnqD1l2RerR0+y44
eF6SkgDypCQokpIGJSW9wWVdsYpLneyCI2enTd8q7HDbAZqSkqBIShqUlPQG
13fF8qc6F686pVFQCks6GQLvISVBkRuDQUlJb3DvP6TQz47Y3ZjMN+tqpgM8
lZQERV3dC1FPSnqDe/8VhU9n54d9jVl+lU5KAviSkqCoq7sg6klJb3BvV6zy
RSf7ZWtLlnEvumBXWwdwDSkJitweDEpKeoNOUtJySid7Z1NLpl81bRjAEKQk
KHLbMCgp6Q16S0nz9E7OGzXNmALXtA2gZ1ISFLltGJSU9Aa3d0W+AZ3kjuJX
6aQkgBUpCYrcNgxKSnqD27uisgE9nEaibRCUAKKkpBqZy0f07er64nIzOvcM
g5KS3uD2rtjUgB4ySGVWuqVtAP2Qkiplgk8xE7ncjM49w6CkpDe4vSv2NeD2
s0oxK93SKoB+SEmVMtknfJwUFnPFGZp7hkFJSW/QQ1fsbsPtkSSflW5pEnC6
eUQb2ptISZXyKSl8uyrmmByas8qgpKQ36KErjrfh3mCSykq3NAZoYTnMi6M7
/Arujdr3TZKUVCncTVNwsE2xQBQWYzi3j1P2kZLeoIeuOLENx882V9/BZJ3V
LVDjz3tyd2esLcdjcWz+LPAv/sW/6eHv3tOIlFQp3E1TdUpyvRid3TcoKekN
OumKc5tRc9VIzf05/cfnRw9/newa3uNnNpl+joAO/npISavTiJREOzUp6VP3
GyWGIyUNSkp6g066olEzMief1CwpideSkjJSiSlV+PZ8JCUNJJN39s1iIFLS
oKSkN+ikK5o2I3y0lPmWgpTEa0lJGfP3nWoGppREvSkQzlpOic6q+QYFfbLj
BiUlvUE/XXFBS+ZzUeqS9JGSsupvETM5dCAP295i86SkjPBEkenMVEr6LrV6
+50S3iovi4WVpAp3lZL8LgmKOr9wkCIlvUE/XXFZS6L3GMu5t+ejzlNSPg6E
/dnhhlR62PYWN6c+Jc3/xsL3dapAtPyTUlKqM/OxJfW25vXybfhCSupZzycH
buTAGJSU9Ab9dMW9KWle+yolrcqsJkajzTwrWiBTfriUFJ7bU3eMHW5LjYdt
b3FzKlNMGH+KxVJhapSUFHZXvjOnbGyZ6tLQcmJmVs/fuJOSljJDb1MZHsa+
HpSU9AZddcU1jYne3synqSkILMsp0yIoRXPNKv4UI1L09VgpaXmGz1z6L2zm
aR62vcXNqQkyYZlMSlrlqXFTUqh4Gsk/S5pij4EyE6MVZtYiJXUoM/SWBVJv
eSo7elBS0ht01RVnNSZTT+beZrYvJdVMqUxM0cdY/cv0/Dy3WEPlbrq35Fx4
Sm/vcD57U1I+Fs1Ttqaku/vjqOI37qYg/kQXn9Jfq8usRUrqUOZo+SRulaMT
eRh7eVBS0ht01RVnNeZIPdN5KSn1/bpo+WiFp/TGiVLX92WB1IKXNPBkD9ve
4uYcSUlhGlq9eMOzpOXcfSkp+ixptjUlRRtJt1JH2lUHNffI7H16JiW9QW9d
cUp7pmn9XOBTfSKass90jj85mhI/WYpOOd4V5ype06PTx70EPGx7i5tzyrOk
d6akcG4xJc0pJpN6VlPybz1L6lyQin45clJ7qs+TCSfq9pJBnpT0Br11xZH2
pK5By1NQsf6pLv5UFqtMSalV7O6KRmpO5uGlv8MNqfSw7S227cjvkjLPksIv
4z0mJWXm1qSk1LMkKemRisk6tVT7pnGnnq8aZEhJb9BbV5zSnlUlNZ/XLQuc
lZLmQPSVSkmpeNXbrqmXvxl4nsds775/4674ovgQasSUlJfKL/NBEv2WXThr
OSX/VkrqXzFZR6PT0KcUatjLg5KS3qC3rhg0JdVnn1Sx6HqPdwXU2/f/Swon
LklJ9/5JSQNZ3S27eX4JO3pQUtIbdNgVx5sUpqR5ytaUNH9gG50Yzo2WT6Wk
VCVSErfYFGSa/klJUtI7rS4Kny6v0ZxLShqUlPQGHXbF6U2arzU1NecDzvG/
+vo73DVUGvSqJyWdRUr6kpKOG/FMwiaDXi+Qkl6it95olJLqC0tJHBF9cDnE
3pSSzhI+br7Rjf0gJZ3i3p1Ia7ePU/aRkl6iw944t0mbarvtVibmxE7gess9
OMTejP6w6C53dwYnkJJOMcTZg91c7gclJb1Eh71xYpPuShwd9mpry64W9z6/
ftXz5V3BO0lJZ3HqeDCXhkFJSS/RYW902KStHrAJO6SenrywN1ab/MIeACnp
LE4gDyYlDUpKeok+e6PPVtUbvf375FPSe56nzNu7mgKvIiWdyDnkqV5yWXwe
Kekl+uyNPltVb/T271P5LGn0zll9tzA1d/TNBPrhfPJULhaDkpJeos/e6LNV
9UZv/z6rZBQNC6P3TLiNNzYGeA9nm0dyHRmUlPQS3fZGtw2rNHr7dyh+x2z0
y0H0ydEtLQHgAUa/LL6WlPQS3fZGtw2rNHr7d6j8Jc64PZPfqHG3C1rwuyQo
cu0YlJT0Et32RrcNqzR6+3d4bUqap4+7aXA6KQmKpKRBSUkv0W1vdNuwSqO3
f6vVv2kQ/UXS6JeD4rOkobcOziUlteAk8zAuHIOSkl6i597ouW1FQzeeqNTv
kjxLgpCU1IKTzMNISYOSkl6i597ouW1FQzeelOi3CqUkCElJjTjPPImUNCgp
6SV67o2e21Y0dOPJyH+f0H6HLympESeZJ3HVGJSU9BKd90bnzcsYt+UAx0lJ
7bi+PIaUNCgp6SWa9sbUk3abmdr2i9cI0A8pqR3Xl8e45f6E46Skl2jaGz8r
//H50cOflMSVbvokoBd3dz9dkJKaMtCewTlzUFLSSzTtjenFKenjSHsfMeFL
P/CRkhozvp7BqXJQUtJLSElNN//6lXIXuzukT95MSmrN+HoAKWlQUtJLSElN
N//6lXI9l7kMnfNaUlJrRtYDOEMOSkp6CSmp6eZfv1KuZ0fn6Z93kpIuYHCN
TkoalJT0EjempPnHC9/Xq4nzrPz0VT1SEhezl2vopReSkqBIShqUlPQSd6Wk
MAGlZuVfpwpISVzALq6nr95GSoIiKWlQUtKgtm7dLSkpnL47JeWrlZJoyi6u
p6/eRkqCIilpUFLSoAZNSUcSk5TEXVK7eP4WaKpM5sp47mGzr7Zl885qj+Hw
NlLSZQyucUlJg5KSBrXcuuV92jW3ZGHlNSlp9cOi4u+PwllSEterGVN3Db3j
Tm9e59sL4zK4xiUlDUpKGssU86n4TLiHlJR6ThSmpPq3UhKtVQ4oKalRhcDM
+BqUlDQoKWlQq61bfaxdLH96Y65JSfmIdFdK+jz9YHu5rQNqdTVcfnwRfqyR
f5FvQOpDkuinKPnmZda+qjPdT1WdAxxhcA1KShqUlDSoIVJSfeTJRKEwTOVX
124z8z1wy3q5wKYBFUabVOTJv8hklq1rWc7auvZogSLD4VX8LulixteIpKRB
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
nbLtUlKlTPApZqJT9tTulHTW2o9XcvsqdnPpH5SU9EJ6pqma7hWXGNTzDtrn
bVE9KelKmewTPk4Ki7UISvVLnVjsAv20ZOaKPygp6YX0TGubrj41J08nWDqx
upeb79/GPT6ft0X1Ttl2KalSPiWFb1fFzjogtwal+rX3M2T6acnsJaeU55GS
XkjPtLajh/OXrR2f/sGJppjPr5f+sQ7O521RvXO3XUqqVExJn0QkOf2APJ6S
wmNmVWH07erFaqMqZ2XqCVuSen29G1fNEVLSC+mZ1g72cHgyD+9n4Bap+7dw
1iiet0X1Ttl2KalS2KXROBCWbHHyr68wbGRqerRkZeSpmZWpp6YB4SZcybV7
UFLSC+mZ1s7q4Smtstj1TtlwW3eLygan3oY13Lw9vzpli4bburxp77YvnZ6S
bu7KXx3cltV2paZMv/b8lN4RrZsULRPtjbDxqc258UVq4vVOP5y4hpT0Qnqm
tdMvZPnL98/XPz4/evhrcWj9rPP3f/8/9PDXaOtu32ub9l14p5S5Cfk55Q/+
4N/38JfZuk1btCr5j/7R/9nD3+4jc/e2L7VISf/gH/zfPfw1jSSVUahpSiqq
aVjnKWl+KyWxg5T0QnqmtWtS0vKKcPs9tpS0e+tu32tH9t18+xFdfIiUtGmL
ViVvz0cHU9LubV+Skio3Knr2Xs5aTonOCku2JiWdRUoalJT0QnqmhXyQaVHz
XP80+J12cfNvz0dSUqb9+bm356N9Kamy5O35qEVK2kpKeqpiRguvRKnCqSvX
8kVmVqqS4uLLprbrqBphkxiClPROOud00RP48X6uqWQa/E67uHW35yMpKdP+
/Nzb85GUVG9fPVIS/bt9V0pJg5KS3knntNAiJVWu9/Z77N132sVeqk9Jq57v
ISXVbN3te+3gvsssOFxKyn8cHRa+PR+dmJIuO2XVdOzt+ehISqr8aOuCy4Q7
868eOsG+GJSU9E46p4VGEalY4fdOe7Xq+nvjufy8VLSqVP2rGo5sXXTxaUve
WRbetGDTlJTfuq1Zpn4vbzoYGm3dHFK+wvAyT58C4YJhPdE6owu22LqtWWYl
WuDGZ0nXqOnYrVkmnLKUL9woJeU3cDk9Vey4Ykser58N76clbCIlvZPOaaTF
VSm8uVqtYloEmeVNb82N8eqOOjUrNTGs4ZStWxV4TEqKbt2Ohz41ezm615qm
pOjWrQJRNCVFI8+0CDipTFRfZ6Ot2xFnoq/zE5+dkqIdezAlrSbOr7/rujgl
rTYw3N7UxOOKXV1fz+lte5tGu5jWpKR30jmNHL8eFesMVzHtSklhgdTilfXv
2+T8pn1OSknfCldvN9V8YkpabV3rlFRfbYutC9NKcUr02VBxbvHRUoutO5KS
9hXoMCVt/V1STcdujUjhIlMsJd3yLGm1gak6W+zEYlfX13N6295mR7fTAynp
nXROO/suQzUVpi5zUzbFfAuvssxqYuWteHTi8m3morzPZ3tKmoVx6fti9XZf
5Sdu3Vkp6Vvnai9vqrbF1u1LSfli+1JSi63bnZKWL76vV//dVPnpW3ejT2cp
qdE21p/nw6XOKll/Afq4ZzhsU5/TDynpnXROO1uvQZW1ZS5wU+ynQ9GAMyWi
U3hfHVaVSVjzlB1bXbN1O54lrZaaaw6fK434jbvorslE2spqW2xdKgFNiUA0
y3+t7q5nSasCO1LSbDVxmZ621rxj6050yrOkVYEdX7ebgt8fzVLp6a5v3KWW
2rGuIy2pryRs3lzVFISyaIFUS3a3ajgv2cznkZLeSec0dfB8GF7R8te4KXuH
PC8YPm44+Pwoevd+ZGNTW3cwJaUmbqr5lJSU2Xeb4kx0dyx39C0pKVpga0o6
91nSssIWW3f8WVL4el+1W7fuRAdTUrTAvsc9NWloa+U7OiS/gfUTjyt2dWUl
qxfLyj+LHBSWz8wK63+2RruY1qSkd9I5rW3q4Zrbhsw5dkqnpPBFeDvdQ0rK
F9iRkqLhaDr8jbsWW3dKSsrv8aYpKV9gX0pKJZ1NKWn1usXW7U5JqYnTa54l
5QtsfZBU/826+soPpqT6Au3un0+pOXVtmn6NPGGxTS8er91epikp6bX0TyPT
r2qK1dSZn5u6bV7NSr3NB6LKG+9GV4Fp+/8vKXxgNMVc8I27mq3bnZLqc3Gj
lFSzdTX5JR95MgVqqporabF1B1PSFGSiKfaw6WEpqWgaPCVVbuOmS8BdpkQy
+sRSUmbZcDNTSz1V5zuaFCnptfRPC6sz4fJtu8viHHm+VrElKlomnJgvFk5v
cVBNDf7/sPv+Gm3d1iwT3TWp3d1JSprbE0aYeXrY+OiC+ber6ct6Wmzd1oi0
spwYfS0l1XzXLny7mpVa5MaUNIppe0rKvAirek8Pfw+8u1vBZlLSa+mf00VP
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
MoOSkgbVYuue3WNHHElJmYi0nHJ7SmoRFqIpabmWKXhytMoyxQKrKWG8yk/x
LAkOkpKgyFVmUFLSuFp88n9uhY+xOyWlMlGqku+JNL+ux/ikU1JNrpGSoAdS
0mWcpsblKjMoKWlo5467N/TYPlN1cgm/SrcpJd37jbvTpcLRskBNSgrLZHLT
qs4wJUVrG6tjoR9S0jWco4bmKjMoKekBztrS9/TYVsWUlHk2JCVF89FcoJiS
ZqekpFRtY3Us9ENKuoAT1OhcZQYlJT3DKQPwVT22ye6UFM5N5aYHp6R8gcqv
z6WeCtWnpHxtY3Us9ENKuoAT1OhcZQYlJT3JwU1+YY9VOpKS8kEpGqYek5KK
tn4vLpWSVo+HdtT2sI6Fy0hJrTk7PYCrzKCkpIc5MhLf2WM18rHlKzMxLJOZ
Ukxkd3fGmcKosgw1qbdTWpiMUgXC2u7uDBiSlNSas9MDuMoMSkp6JEHpXPnk
cspf5SoetoOm4Itzd/09rGPhMlJSU05NzyAlDUpKeqp9Q/LlnZYiJTUiJcHo
pKR2nJceQ0oalJT0bFs7QadFZb7idb27O+NMd/flL+7uDBiSlNSO89JjuMoM
Skp6vE1jU6dxpZ/H24/Pjx7+HPmwj5TUiJPSk0hJg5KSXqKyN3QaV5KSYHRS
UiNOSk8iJQ1KSnqPmg7RaVxJSoLRSUlQJCUNSkp6leI41WlcSUqC0UlJUCQl
DUpKeqFMz+g0riQlweikJCiSkjZZ/qtKx/ttRw3t9peUNITUAaDTuNIyJa3+
xbkwxczT5/9GS4YLpuqRkoDeOBc9kpRUb9lRu/utXbY6WLOUNBBBiXuFEabm
9fy2JiLV1CklAZ1wLnokKalS2EtSUiMOyBrhyNVvXKYmJUWf+1SmpMrkJSUB
PXAieiopqVL+JyGZblx9SW/1evVita6wTHRu2Ibo2/xWSEkjWj3fvLElvMq+
lJRKOlISXM/vks7iLPRgUlKlmic4medN4YtPNg1lFqwskFpFipQ0qJoIDOcK
o8rSxSnJVQx2kJLO4vzzYK4vlXanpNXEVITZ9yL1jCmzihQpaWgGMlfKPEua
3178LOnIEGgxdqaenL51PICUdArj69mcQiuFvTQFH+DPU1a9unwblt/3oqZk
amKUlDQ6Y5nLTLtS0pR+zDSfNg9+427fKGgxcH7W+Xu/9x97+HNaIEpKOoXx
9WzurOoV00cqSRXLS0lLDsh9wtgOjdSkpE1J5/izpFXzNg2E6IdaBy+OUhKd
k5KOM7geT0raJHxOlJqYmrW6BC+Fc1eVRAvnFym2cCYljW6qTsRw0Cq2rBQf
EmXKF5cKS2YamR8LmVPrXOBIF92ej6QkMqSkg4ysNyheR+jT6aFGShrdFAvj
0EI02tzyVzzOa8bCFHzwFZ2+tYtuz0dSUlQ0Hd/lxn6Qkg66d/dxjdvHKftI
SYSmxM0enGsaJyXNDa6fO0lJj/azQ/7iL/6nHv6kpHEZVi8hJQ1KSiIUdp0B
TguXfMpea1ObU7Oib+srj9aZiS1fq9f1s6SkIyYp6W9ISVC06SpDP6QkQpU3
gXDQzyPq93//P/Twt/XYrrzk7UhhYQ355FJ8nZ8lJe0mJX1JSZvs+3CG0dnd
g5KSCGW6zkjnROOmpLn9rYfDjpQULpKZJSXtJiV9SUmz4glhVcD19D3s60FJ
SYSKXadvOcXoKWneinYjYmtKipbPz8rMlZIypKQvKWmWf05UP5HnsaMHJSUR
qv8q0QWN4cGekZLmbWkxIjalpFTh1Kzp1x8rSUmbpFLStzNXb79TpkCmhnwZ
KalD4f6dfn1ylFrqqgZyG7dMg5KSCNV3nU7miCelpHmLzh0Um1LS1mdJ05Zv
4hnsK5n8spq1Ck2pYjWLSEk9i6ak+ZwgJb2ZlNS5zOC93mWbfM2KnmdT1125
T3mYaZGS5vNDmF/C6TXFoiefVA3nHsMn1ja1/F1SZhEpqWjKZpxpezI6kpIY
QupAuvjQ5XqZA4Ae/Nw7//yf/889/F12nDggd9vRdXqbHaYgqkyJ+BNOjD4P
ir6NvggLn75pp9Q5tfw37qZfU1JxXcc350mm0pOgucAUizypiatlPUsaSD4Z
Rc8Jbp5fwo7unJTEJvuCkj5nk2iumYInPsVimehUH6kabeDBmjPJZb4NW72u
n/V7i18kLSdKSTWKKSmMS6vnPvlkFJaUkjqXykerAqm3PJh93TkpiU12955u
p97jU9K8mUcGVPG7cNf8Gdoru1NS9FnSqrb8265SErOakV5MUjyS3d05KYlN
jvSenqdSNP6EOShfrP+UNG/sjrVISd2qSUlhAoouJSXBs0lJnZOS2ORg7zkh
UGN3SpoNlJLmTU6tKzp96knjvhnMdPjfuFtNzBTLrEtKgv45hXZuSqSk+fIX
nbicuyoZLpiq5NyUVL+4A/KIU3rPLiBv2p6SUouMkpLmDQ+nRC+jP6f8+Pzo
4c9wXkkll3lXRr9lt5qVKrCSiUi3pyS/S4IiKalzqZQUpptw4jIZZcqkElO4
1MENOb0kobN6z5mBjMrIsy8lRUNWJynpk/gdt5Q0kGJ4uexPSoLOuRfq3JGU
lMk7xUWapqT5qEvdXRxZ0cud23v2BVGrjPMVZpx5elgmnJUpk1rXLSlp7oHQ
qsDt+UhKipKSvqSkpcxwjr4Nx/t1beVC0dtU+jHtTUlT9qnQjrS17zhJ3Uss
DzxnmxOd3ntOEYSmxHfkrv+79+DM31ndno+kpKjoVekuN/aDlLQypW9FMrNS
U3iG28cpedP2lDTbnZJWi7f4xt2m8w/1GvWencLSJCWlb7bnubfnIympkWd0
qZS0ksk+q1vl6E3LM44KVqSkzu1ISac8S2r6jbuPlNRSu6Bk1/BV9Sn5VTrs
hE82Jc3FVq/rZ0lJ93pGl0pJK+FunRYpKXy7KvaMo4KVe68yFE1P/F3Sxzfu
WmragfYOfEo58VN6lrScm3qdnyUl3egZXSolrRRT0icRiFI3MzyAlNS5+pQ0
/e7f/a6ceHFKCrfr419vaKN1Bzpp0Lkbj89lVtqaksJFMrOkpBs9o0ulpJUj
KWn5CQlPYrd2LhNhVlITw/LRevLFGqWkrbOocU0H2k10q4eDc2tKipZPzVqm
sGKA6qE3HuYZXSolrdSkpE/db5R4DCmpc6mUdP2flDSKyzrQnqJP0VuaEy92
NZ8bb0pJqcL5WZXPmIzTg8KPH1Pubuk2UtJKJu/sm8UDjDi0X+WRKSl/TXFA
HnRlBzqB0I/UjevyKD09KGVW2u5ZkpR0r2d0qZS0lMm80SnRWYPmZTLs0M7l
r8UXu2yTr1nRU13fgXYZXZmqP/g9sor8qXJq/LukSUq6zzO6VEqCoivvfjnR
bwt9VribA/KgWzrQmYR+3JiSlgW2pqQw9WRmVUYkKamFZ3SplARF7m0GJSWR
cmMH2nf0IExJ0+IrMWetIv+0PRNh5vKr1/WzXpuSOtmWTppxkJQERVJS51Kf
WN7isk2+ZkUPdmMfXnmoQI3p1H+9ofL0OB34t7srs099yeNb3YlOtqWTZhwk
JUGRW5rOtb7UbrooX7bJ16zowW7vw9sbALPjR2M0DeU/PpKSWgj7/3PHbcwz
ulRKgiIpqXNSEjv00IfOLXRi93FYzEGZmnNP5S+3b/P7kdqo5dbVb+Z1/V6h
VZdVkJKg6PZxSt4kJbFdP33YT0t4p623o2fdwf5c/E/+5H/p4e9JY3C1LdOv
j5bqK7n9enrxVRXYR0rq3AvP5w7I47rqQycZ+nf6Z/tSUgtSEnAlNzCde+H5
3AF5XId92GGTeLmmX3ySkloIU9I8RUoCTiclda7mfD5f6H8s/leDK6nyy4md
nM8dkMf12YfHv8I03fRjbZ6kXTJareX2fPS8lLQSPSEUd66U9OV3SVDkfqNz
NeFlFX+iqSc6ffr1/8TRyfncAXlct3148ISz76NjaPrYKLXG2/PRS1JSODG/
u7d+9piZW3Pp7OGqGiUlQZGU1Ln8GTicm0pJPxaPmVIJq5PzuQPyuM77cHfz
Vp8Yn9QcHuviZLRadSa2fK1e188K30pJy4mhVYHKCFP/+aSUBI8kJXVua0qq
D1CTb9w9WufdWHnmWd3kSEkUpe6Nr29GPrkUX1cWKwalp46U1F6OpqTVaURK
+khJUOH2Swl5LVJSca6U9ABDdOPWRqYSE/SQjJZ2pKRwkdSsrSmJ2WdXSpoW
nzFO2W9lSEnwJPN5gz7lT7+ZueGsybOkNxmlGzedguabnFG2jqZWd79dmTam
pGj51Kxp8ZW8N3/jLioVjpYFNqWkVDJakpLgkfq8vjDbmpJWUSiclfoETEp6
mLG6sbK1Y20UjXSbjJY2paRU4dSsMGRJSbNMPpoLbEpJy6CUumLuC0pSEnSu
/2vNy9WEl5rUE01PUtKDDdeNNeei4TaKs+Tvezu0KSXte5YkJUUVDxIp6UtK
gqKBLjrvVHPuDR/6T4HK8j2czx2Qpxi0GzPNHusmmVOMu9O3pqR8GpqO/S7p
7s7oy76UVPk5pJQETzLoBeg99p17W/xJSWMZtxudlF5uuMdGUTtSUn0akpKO
2PHZ4/JFVOdX1SgpCYpGvxI9npTEPqN34+jtZ5NnJKOlTHiZt3T1esesYkSS
kkIvvKpGSUlQ9KSr0iOlPrm6xWWbfM2Knu0B3fiATSDv4nPLlaaK/LL7b1Pl
j+zeIyYp6W9ISVD01CvU4/220GeF+zgaT/SAznSCep7rP3i5hZTULSnpS0qC
osdfqp5KSqLoMZ35mA15szcko6Uzn+Ifdndn9OXuvfGLG/tBSoKi28cpefee
wFfyjTxlY49XwuxJ/XnWMcaVas4ewC2kJChy/erc1PF3Ayoz1KaNPV4Js+f1
5/O26JEkI+iflARFrmWd6zMlbXrSVLmZjsOVPU/7mrm7M/5Wb+3h6+DRcvxg
q1zQ8QNfUhIUuWR0buosJZ1+I+0ITPnZLX/8x/+2h797d1D/Ua6+hRe4a9sP
VhJ93cj1vcTzOIrgDW65sFJvGiclDXFTN5BJShrEz/75x//4f+/h75o9dfr4
vfgAczxznKMI3sCdaud6S0lzq+Sd1qSkUbwkJTUd6atq5xWlXszlM+eicNno
umAHRxG8gfvbexX7P5+S5ruC7+vllOWs1SKpGupT0rLxUtI+Nbv+9nwkJdV4
cEq6coCnskw09aSKhbOi9bTZAl7kAUeR3yVBkfvbexWDRia/LGctk06Yg6LF
wllbU9JqK1r20wPV7PpieFlaTdzx9t6UVHkUFfvt+oZNj0tJV3ZvuOrii086
E6VmLTfHyYrjHnAUSUlQ5P72XlPMqkAxIq2mZGZVvt6aktihZtfXPOUJX4cv
ihP7SUn5+/PVrGtOX8WGPSMlFTv/GqenpHw9sM8DjiIpCYpuvya+XPRWeblT
6lNSTYCSkvpRs+sPpqRoyXyxflJSeGqKnqwuOIPVNKw+xYRTvsK30fWenpKi
W3SxKR12oi+KbysrvEx8nL/Gxb19jQdsl5QERQ8+iV3ggovL1FNK4jKfU1NS
WKym8h5S0twbn/RtSevm1TRsd0paTYy+Dl8cTEnhJtwr1Z5Mn3+2fKcuX087
XXXyjR7ZDw/YHCkJip537hpL8fI9tUxJq+xT8yzJAXOWml1fk19mqe/RhXNr
ak6t5S6fbEq6vWH1ESksPJVCUGX9xZS0bDOt6efQk/rkAdsiJUGRi+a9wjuu
sMDWKJSZlYpXqbWkvnHnmDmuZtdvepZUOXEa6lnSqkBqwdsbdjwlZSo5kpLy
xxgt6O2Mx3TOA7ZCSoKix5yyBlXs/0x+SWWfKXhaVP+kqTIl1bScvJpd3y4l
bQpKt6SkVIGaidc3bNPX7Vblv9XWLFifkiSjG+n2vGf0zwO2QkqCIlfSzuUj
zHwvlPn1UKZ8WKA+Jc3Nu75PXqJ1SqoPSlempE1lrjl91eTZyggza/csySn9
Xjq/hl7qgZQERS6pnatPMa3/UseJQ6iRYoSZb4lTE5e35dFFojXclZIqrT4E
uLs5f60mxUSTUf4Z0+6UdHd/vJfOr6evbiclQZGrauf6T0lzOy/rk5eofNBz
wZ+dm3dWSkoFok0p6WMw3kfP19NXt5OSoEhK6tzUk5qmXtMtbzBJSYOYKv6B
7q/wbWZWakoxJX3cgt4k0+2r0+PypLr1TBtWu2nBfcfGsv5Tjq7RD9HR2/+R
kqCCO9tB/bbQVYUOp7NISaOojDAX/K3uw2/skxeq+Rwp9fbIjrtsp59b+ejH
5+jt/0hJUEFKGlS3KenjoDpJ+Anzje7ujK5NXaakzyNu5AZS7O3VUEq9PrLe
pnv83MpHPzhHb/9HSoIKboE6d/HNcN7WljfqE+jK3ePyF9G23dItb1Ps5+nX
X41NsXSTqmRZYEpn4ejiy2NjuXj04FnVFlYeVhUuUnnUDX1kDt34LykJilxD
O/dz7/z9v///9PC34zhxdEEPDMMLVKakTxCXPqVwEc0j0WWjMTm/9jB/ZQps
XSRv6MNy6MZ/SUlQ5D62c0OnpHkTzu0TYCvDsLWDKSlfSeZKvZoevo0WqA9B
lSVrtiLf8rEM3fgvKQmKpKTOPSAlfRxmpEU/CV++zX9UTj2911R9Svpkf6O0
LBA+tSmuN1osFXYySa0+HGXqzBv6gBy68UAlNx6de0ZKmrfllD7hYYofqufv
J6mn99rZlJI+G4/qVXKprPaTTjTRXBYtsONZUqWhj8ahGw9UkpLuVez/J6Wk
mu3lhXakJI+WdtNpjRTP5JlnNzUXgmXhsNpUJavpy7f519HKo6KLVHTY2Ifi
0I0HKrnTuNfqEhMtkE8uX9/XyynLWdHyy4mXpaTlVsPXtD0lpd5SQ6e1MFav
ZsbUZXWO1WMrQzf+y++SoEhKutcU+1RwVSATW1bxJ5p6otOXE69PSR8HHgur
z6XnifkCn0fcqNxF151urC6Vkg4auvFfUhIUuVm9V7TzlzslFWHC6amUVJxy
S0rKbD5vkxoFxQKOnyP03rl668/iAIl+8nDKSivr7K3H3kZKgqKX3GlMv0pN
D11QMtPaz5aUVJmJukpJmU7gPVKjIF+gOIsivXeiTjqzcuD0oPPmPZ6UBEWP
v0ftfANXbQtb+/iUFO0HXkVKupEOPEsnPSklUUlKgqLOQ8QRQ2za/MAo81zp
9JSUf3tLSvps31/FZ3ZXatctjxftw+XEYgEO0o2naN2NqxERTv8E42IuH61h
VVuqnnZjbegDb+jGf0lJUPTUO41RNqrY/9PZv0vKz70xJc3bG06JrvrnxD/8
w3/Xw98oBxukOIaPu6AP8wkobMYy6aSKVdZz+ra0q/YaQzf+S0qCokempCdt
USbCpLLPlH5UFE1SXaWkT/aT0lWx2/ORlMRjPPJacKVrUlL4Ovr8KCwTfRGe
afNx6VxDH29DN/5LSoIiV8bO5SPMfF0LpxRnpWq4PSXNG/759Wt1YYHb85GU
xMM4mHe7JSVVPgMKw1H94lJS1NCN/5KSoEhK6lxNfrnm7/rjJEx8q7m35yMp
iedxPO9zTUpKPQyqTEk7JjbartEPs9Hb/5GSoIKU1DkpaV9KmhdZvf6+rSkm
JfFaDul9Wvfb6knQPHF5hly9CBeJBqKwntZbNPoxNnr7P1ISVHhYSnrStnyF
SeFGPWz4skAxvBRf52dJSbyWo3qH1p12/U5pt8bRD7DR2/+RkqDC9Xe/TT1p
W/J+W+izwiNqwtq+lDT97rGRlAR5DuytHpaSmq5uxKOrh88PTyQlQdHQYzz0
pG3Je3ZKWpKS4C6O7a2aPny57HrdekWDHlfRZg+6LR8pCSpISYN6T0pamY/Y
mkSTyUThxH0RSUri2RzeW+mxvKH7Z9X4obdFSoIiKWlQr01Js90paSYlQQ1H
+CYPu6qea/SekZLgVR52Pn/StuRJSTtS0mqRzNfwpCRYcpBvpcdCz+iT5VYM
vUVSEhRJSQyqMtRkfnZ0/BdJb0tJ4W/EXuXu7r+ZHtjK8fPJ/p/BBzVvyGO2
CEh50rnr0/dZa3mlmP+bv4xOwcP9zP6Kzr2mQ245iqaNKWnun9RbKSnlYTc5
u+mHrdseT5s3adQng/bGZe7u9fNNUhK8xsPOY91uy/TrM/rUaTZVLJyVrz9a
Q1PX9/x0INec+9ftUXeKZ2/dPm/uk03b/rPwj8+PHv7evMs43cNunICUhw32
PrclE2oq807mdX51UpKUtNvDTg7nenPnpLY9eja7PR9JSZzuGcPf75Kg6BmD
fdbntmRadVdKWn0dIvr2E0tzy1nFB1ipwqeQklp76nad5eX9kz93zVNuz0dS
Ei084IiSkqDoYSmpT72lpFX2yYedaGKKpqfwbXQVZ5l6cvrW3e6RG3W6p/ZS
5XatioVLTVISl7jx5H+vI50mJUHR8YFGUaaHw1lTOuPUnBvDRTaVmRIxJ/oi
nBhtoQNsOHZZvUf2Vf1G5Uf6FEtJ8yni+zqcPs+aXxffRqdISY93SlgY2pEe
kJKg6OVnmGtkotCmlBQuW8wj16ek4uro37m7bPrVauKOtzUNvuzM9sjDezXG
59FdPCOFs8K0sso10emZidHXqblS0oPZp0s7ekNKgqKHpaRutyWVZTKBJXwb
nRLO2pSzUuXzL1Jzi9MZwun7q/IYK06sqT8zscVx+KRje4r5JIb8asHorFVg
yYSmVLTJzJWSXuth9y1n2dotUhIUPexs0/O2LO86VlPCWWH5/J6K1hOtNlpb
ZsHoi09w45S6oQon0rkWe2p1sGVWFM4ttmdK36IXpxz3yAM7PBelZi2nRzs8
n5JqMlRmqenXGPVtg2/cPZ69mbKpZ6QkKHrY7euTtqVbOvnZbkxJYbGaxuRT
0iqqn751jxwOO1JSdFY+Jc17JPodvHzqqfnCnpT0SHZlXn3/SElQJCUN6reF
iyt8Tye/U6OUFIaU8FZ8NbeyJanYFaanRofu80ZEZtecmJIqv2hX8wRKSnoJ
+7FGZS9JSVAkJQ3qrpTU6AN5+tH6WVLlxE3PkqKHZXRKfZvrPX44rJ7K5Yut
phxPSTVfupOSXsJ+rCElwVkedsf7pG3Ju/FZEs/WVUoKi60CUSYHeZZ0lq0P
9ZZT8rEomoPyE6WkN7Mfa0hJcBYpaVBSEo30lpLyTSqmpFSdJ3r8aefElDT/
nugrMzHzNlM4E6YadAyXWo3u1aclS/llN61oXw31Kzp+dgo3WUqCs0hJg5KS
aOT0QRS9dVlODG9v8m9TNUfr/CzOco1Od88+7WTuPMOS4ZTMT4pO/Cuu6Nn7
6CXyWeB43CiusYXiKnYMPSkJziIlDUpKopH3DKKz6LEvKYmmpKT6MjVLSUlQ
JCUNSkqikfcMorPosZSpJ3d3BkdNW1LScqdHX6+KpV5k5obNW81allkdhKlm
RF9HZxUbE+/EBSkJio5cPqqvTm937i77kpJopPKI3XdgL0dEo6ERXVfrFV2w
Fni51UBLvY2eZKYgv6TKRF9Elw0H/nLWskx9M+pbFa0k1TlRUhIU7biRaHrz
/0gtekxKopELwstl9UtJ8Bj1KSk1MTMr/6I4N19m9alpsdpUiCtWkpkSkpKg
aOvdu/uBI07sPSmJRqSkI2sEGhk6JaVavuNZUqaSzBRgh/qU5PnRKc7qRimJ
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 13->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/r9cyDH2aRpEiZzthgzDbbubExpM2CixgXi0PcGi/ZmMCyC+tA2O6p
Ugf8BtKmcmHSBMLdh6RJl8aEQELegqvje/fw0+rW/NWfkWak6+LLwznSaDQa
aSR9js65n9/7oz/7J//1fzBN07/8j3/+55/88//uP/vzP//nf/Ff/Cc/3/yX
f/ov/5t/8ad//F/953/63/7xv/jjP/9P/+g//Dnx3/0s+0f/0TT95WsAAABW
Pp/P978AAAAvtwxKAAAAiEgAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtS
EgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABL
UhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAA
S1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwNKNKWkCRnDL+QEA4EY3
3gXde+MHVLrl/AAAcKMb74LcgEHnDFIA4J2kJCDFIAUA3klKAlIMUgDgnaQk
IMUgBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J26TUm7/48ty0Xm/4ZW
JVM11K8uXCq13iNNPbKW/FI1Gxttc6rHMiUzdS4nFstEV1RTf7RtxU1OtSHf
sVPiYEtVW3yb2bRML+1zbm0AAKO48S6ouOrVLWVlndH6w3vLfLWb+iRVef2s
HU0Np0dL7mtbSqrNxRUVd2U+ehRbuKn+TNtq6s+/rdwv+Vn1e6247EFSEgDw
Tk9KSfV3ocVqG6WkzPStTd0dKyrvzLe2of5OPrrfozXXt7C+/k3hK9+8TFO3
TqlMScVuOX0sS0kAwDs9OyWFsypvvE9PSTtu+OufL9RP2dekmjL1O6smAR1M
SZll9x3tN6akTeuSkgAATtF5SlqqqbCmqppFtqakTP2b1lu/yCkpaVP3LpfK
VJtab7QBxcUrq40WK06sV5O5anZQKFVnuIriuvZtWt6mYwMA4DFuvAsqrro+
WRQLpG6Sz0pJqaW2rje/SD7U7EhJxcZkGpnZolTLMyVbpKRo/fm2ZerPR5to
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
evLC3lht8gt7AKSksziBPJiUNCgp6SX67I0+W1Vv9Pbvk09J73meMm/vagq8
ipR0IueQp3rJZfF5pKSX6LM3+mxVvdHbv0/ls6TRO2f13cLU3NE3E+iH88lT
uVgMSkp6iT57o89W1Ru9/fusklE0LIzeM+E23tgY4D2cbR7JdWRQUtJLdNsb
3Tas0ujt36H4HbPRLwfRJ0e3tASABxj9svhaUtJLdNsb3Tas0ujt36Hylzjj
9kx+o8bdLmjB75KgyLVjUFLSS3TbG902rNLo7d/htSlpnj7upsHppCQokpIG
JSW9RLe90W3DKo3e/q1W/6ZB9BdJo18Ois+Sht46OJeU1IKTzMO4cAxKSnqJ
nnuj57YVDd14olK/S/IsCUJSUgtOMg8jJQ1KSnqJnnuj57YVDd14UqLfKpSS
ICQlNeI88yRS0qCkpJfouTd6blvR0I0nI/99QvsdvqSkRpxknsRVY1BS0kt0
3hudNy9j3JYDHCclteP68hhS0qCkpJdo2htTT9ptZmrbL14jQD+kpHZcXx7j
lvsTjpOSXqJpb/ys/MfnRw9/UhJXuumTgF7c3f10QUpqykB7BufMQUlJL9G0
N6YXp6SPI+19xIQv/cBHSmrM+HoGp8pBSUkvISU13fzrV8pd7O6QPnkzKak1
4+sBpKRBSUkvISU13fzrV8r1XOYydM5rSUmtGVkP4Aw5KCnpJaSkppt//Uq5
nh2dp3/eSUq6gME1OilpUFLSS9yYkuYfL3xfrybOs/LTV/VISVzMXq6hl15I
SoIiKWlQUtJL3JWSwgSUmpV/nSogJXEBu7ievnobKQmKpKRBSUmD2rp1t6Sk
cPrulJSvVkqiKbu4nr56GykJiqSkQUlJgxo0JR1JTFISd0nt4vlboKkymSvj
uYfNvtqWzTurPYbD20hJlzG4xiUlDUpKGtRy65b3adfckoWV16Sk1Q+Lir8/
CmdJSVyvZkzdNfSOO715nW8vjMvgGpeUNCgpaSxTzKfiM+EeUlLqOVGYkurf
Skm0VjmgpKRGFQIz42tQUtKgpKRBrbZu9bF2sfzpjbkmJeUj0l0p6fP0g+3l
tg6o1dVw+fFF+LFG/kW+AakPSaKfouSbl1n7qs50P1V1DnCEwTUoKWlQUtKg
hkhJ9ZEnE4XCMJVfXbvNzPfALevlApsGVBhtUpEn/yKTWbauZTlr69qjBYoM
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
fcy1iTd73tH7vC2qd8q2S0mVMsGnmIlO2VO7U9JZaz9eye2r2M2lf1BS0gvp
maZquldcYlDPO2ift0X1pKQrZbJP+DgpLNYiKNUvdWKxC/TTkpkr/qCkpBfS
M61tuvrUnDydYOnE6l5uvn8b9/h83hbVO2XbpaRK+ZQUvl0VO+uA3BqU6tfe
z5DppyWzl5xSnkdKeiE909qOHs5ftnZ8+gcnmmI+v176xzo4n7dF9c7ddimp
UjElfRKR5PQD8nhKCo+ZVYXRt6sXq42qnJWpJ2xJ6vX1blw1R0hJL6RnWjvY
w+HJPLyfgVuk7t/CWaN43hbVO2XbpaRKYZdG40BYssXJv77CsJGp6dGSlZGn
ZlamnpoGhJtwJdfuQUlJL6RnWjurh6e0ymLXO2XDbd0tKhucehvWcPP2/OqU
LRpu6/Kmvdu+dHpKurkrf3VwW1bblZoy/drzU3pHtG5StEy0N8LGpzbnxhep
idc7/XDiGlLSC+mZ1k6/kOUv3z9f//j86OGvxaH1s87f+71/28Nfo627fa9t
2nfhnVLmJuTnlL/7d//PHv4yW7dpi1Yl//AP/3UPf7uPzN3bvtQiJf29v/d/
9PDXNJJURqGmKamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d
2Xfz7Ud08SFS0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0Filp
UFLSC+mZFvJBpkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp
6amKGS28EqUKp65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp
8Dvt4tbdno+kpEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvv
sXffaRd7qT4lrXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G3
56MjKanyo60LLhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGq
UvWvajiyddHFpy15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG
9UTrjC7YYuu2ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42
vJ+WsImU9E46p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkp
unU7HvrU7OXoXmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop2
7MGUtJo4v/6u6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwz
XMW0KyWFBVKLV9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnR
Z0PFucVHSy227khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11d
X8/pbXubHd1OD6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+
n+0paRbGpe+L1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+
Xv13U+Wnb92NPp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXW
lrnATbGfDkUDzpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYT
aSurbbF1qQQ0JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1u
Cn5/NEulp7u+cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T
1MHzYXhFy1/jpuwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR
3bHc0bekpGiBrSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv
6JD8BtZPPK7Y1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn
2CmdksIX4e10DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV
6xZbtzslpSZOr3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14
vHZ7maakpNfSP41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRz
wTfuarZud0qqz8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp
8JRUuY2bLgF3mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5
WsWWqGiZcGK+WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML
5t+upi/rabF1WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w
7m4Fm0lJr6V/Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2
f+9MSRf8vfwqubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sff
ad+ej6Sk3Vt3ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653
+tbVa5GS+nFKF73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOd
eeGdW/0AUtJr6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZ
pKRxVX630FXsODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt
8AZS0nCCf6OiNiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6
qB19C7yBlDSWMCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJ
b6aL2tG3wBtISQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NF
TeleALoyekpKbVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek
1VLLFzU15+vJh7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzN
WtWTLxy9BIf1pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd
0tAedp3qdnOkpE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep2
06Skeqc/1MsEqB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP
6Z4HbLcN603YS8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClp
LPWHcevDfnflI45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9l
Is9qVmp6dEpqIozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd
8gnyUfFFtM6tpKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8
kYo/qRepiZtISWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yU
PvXRfX6pfCVhDZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX
4Thoa+ilmZQ0iiMpKXNzmLpTzdzc5hcsrjd/i9tnUJKS6hVTSbQnpaStHJA1
9FJTupexOGLr6asvKWkI+w7XypRUWb7+1rRmLfXr7YGUtMnqOVFm4mrWssym
KeEqUtPzLSmSksail5rSvYzFEVtPX31JSUM4mJI+6ft8KamGlDSo00ONlDQW
vdSU7mUs0ZuT6PU9Oj1T7Pjncrtv8xrdOBndX1JS/3YfqzVjJzrEzkpJB+vp
h5Q0KCnp5fRSU7qXgaQO10xKqqkhfzOTWe9ZGtVvdH9JSZ07EpFqPs2YM0v9
xyD5D0/CCpdvwzLRFfWWSnprD5WkJHRUO/qWgWRS0ieWa1bloxOjC0ZftCMl
NSUlvUHmYw0DoYaUNCgpCR3VlO5lFNenpPzoSH0yPAXCtURbG74I17VpwBrd
HynpHaSkg6SkQUlJ6KimdC+jyKekTxBtUjdL4fQwgBTvGVJPnaLTl7Myj6vq
F6lkdH+kpNeIfoyw47OFd9JLg5KS0FFN6V5GcTwlpe6jUnVmRkeqnvoQVFky
s0VFRvdHSurYKcfncjRlIlJqmLdLB2ONPilpUFISOqop3csojqSkTDLKpKTM
Sue5mSdBlc2rD1aZlqSat3WR55GS+nRWRFq+To3r6PDZ/eFDZXvGIiUNSkpC
RzWlexlFMSVVvs7P2logFYJSJXekpN2D1OimW8cPzk3Bp2bKceOOOClpUFIS
Oqop3csoar4zs3r4MqeMVZnUrFSdm8rkXy8n5kUXOd5jcLtTjsxMJcX682M8
NX7DyvMngWLlm7a3qR2nF65UedW4xmWbfNmK+rGv/af3CTPdyyiGOFanX++g
7q1ziB7jhU45MleVLG8zauqfEqlnWdvq9ar+sIawqnzl/YzQ3XdoXOPn3vnx
+dHD32XHyZUr+kf/6H/u4U9K6pDuZRRDHKtSUm/8Lqk3LcbFasopKSkzcZV3
dqSk+nZeQ0rqnJTUdEW356MjKenT05nkkXQvQ+jhQK25lzjy6PzcOnvosdtJ
Sb25JSVVFt6Uko48S0q16i5SUuekpKYruj0fSUk9070M4cYDtcUTogsM1NR2
pKSunP7pQeptccxKSUtSUuekpKYruj0fSUk9070MQUraaqCmtiMl9aPFATkt
pGZlliq+DV+HLzLTayo/vU926KclRElJTVeUiS2z5dvV3NTrZWEpaThTzN2N
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
7/9fPfw5LRAlJZ3C+Ho2d1b1iukjlaSK5aWkJQfkPmFsh0ZqUtKmpHP8WdKq
eZsGQvRDrYMXRymJzklJxxlcjyclbRI+J0pNTM1aXYKXwrmrSqKF84sUWziT
kkY3VSdiOGgVW1aKD4ky5YtLhSUzjcyPhcypdS5wpItuz0dSEhlS0kFG1hsU
ryP06fRQIyWNboqFcWghGm1u+Sse5zVjYQo++IpO39pFt+cjKSkqmo7vcmM/
SEkH3bv7uMbt45R9pCRCU+JmD841jZOS5gbXz52kpEf72SF/+If/uoc/KWlc
htVLSEmDkpIIhV1ngNPCJZ+y19rU5tSs6Nv6yqN1ZmLL1+p1/Swp6YhJSvor
UhIUbbrK0A8piVDlTSAc9POI+ht/4//v4W/rsV15yduRwsIa8sml+Do/S0ra
TUr6kpI22ffhDKOzuwclJRHKdJ2RzonGTUlz+1sPhx0pKVwkM0tK2k1K+pKS
ZsUTwqqA6+l72NeDkpIIFbtO33KK0VPSvBXtRsTWlBQtn5+VmSslZUhJX1LS
LP+cqH4iz2NHD0pKIlT/VaILGsODPSMlzdvSYkRsSkmpwqlZ068/VpKSNkml
pG9nrt5+p0yBTA35MlJSh8L9O/365Ci11FUN5DZumQYlJRGq7zqdzBFPSknz
Fp07KDalpK3PkqYt38Qz2Fcy+WU1axWaUsVqFpGSehZNSfM5QUp6Mympc5nB
e73LNvmaFT3Ppq67cp/yMNMiJc3nhzC/hNNrikVPPqkazj2GT6xtavm7pMwi
UlLRlM040/ZkdCQlMYTUgXTxocv1MgcAPfi5d/7BP/jfevi77DhxQO62o+v0
NjtMQVSZEvEnnBh9HhR9G30RFj59006pc2r5b9xNv6ak4rqOb86TTKUnQXOB
KRZ5UhNXy3qWNJB8MoqeE9w8v4Qd3TkpiU32BSV9zibRXDMFT3yKxTLRqT5S
NdrAgzVnkst8G7Z6XT/r9xe/SFpOlJJqFFNSGJdWz33yySgsKSV1LpWPVgVS
b3kw+7pzUhKb7O493U69x6ekeTOPDKjid+Gu+TO0V3anpOizpFVt+bddpSRm
NSO9mKR4JLu7c1ISmxzpPT1PpWj8CXNQvlj/KWne2B1rkZK6VZOSwgQUXUpK
gmeTkjonJbHJwd5zQqDG7pQ0GyglzZucWld0+tSTxn0zmOnwv3G3mpgpllmX
lAT9cwrt3JRISfPlLzpxOXdVMlwwVcm5Kal+cQfkEaf0nl1A3rQ9JaUWGSUl
zRseToleRn9O+fH50cOf4bySSi7zrox+y241K1VgJRORbk9JfpcERVJS51Ip
KUw34cRlMsqUSSWmcKmDG3J6SUJn9Z4zAxmVkWdfSoqGrE5S0ifxO24paSDF
8HLZn5QEnXMv1LkjKSmTd4qLNE1J81GXurs4sqKXO7f37AuiVhnnK8w48/Sw
TDgrUya1rltS0twDoVWB2/ORlBQlJX1JSUuZ4Rx9G47369rKhaK3qfRj2puS
puxToR1pa99xkrqXWB54zjYnOr33nCIITYnvyF3/d+/Bmb+zuj0fSUlR0avS
XW7sBylpZUrfimRmpabwDLePU/Km7SlptjslrRZv8Y27Tecf6jXqPTuFpUlK
St9sz3Nvz0dSUiPP6FIpaSWTfVa3ytGblmccFaxISZ3bkZJOeZbU9Bt3Hymp
pXZBya7hq+pT8qt02AmfbEqai61e18+Sku71jC6VklbC3TotUlL4dlXsGUcF
K/deZSianvi7pI9v3LXUtAPtHfiUcuKn9CxpOTf1Oj9LSrrRM7pUSloppqRP
IhClbmZ4ACmpc/Upafrdv/tdOfHilBRu18e/3tBG6w500qBzNx6fy6y0NSWF
i2RmSUk3ekaXSkkrR1LS8hMSnsRu7VwmwqykJoblo/XkizVKSVtnUeOaDrSb
6FYPB+fWlBQtn5q1TGHFANVDbzzMM7pUSlqpSUmfut8o8RhSUudSKen6Pylp
FJd1oD1Fn6K3NCde7Go+N96UklKF87MqnzEZpweFHz+m3N3SbaSklUze2TeL
BxhxaL/KI1NS/prigDzoyg50AqEfqRvX5VF6elDKrLTdsyQp6V7P6FIpaSmT
eaNTorMGzctk2KGdy1+LL3bZJl+zoqe6vgPtMroyVX/we2QV+VPl1Ph3SZOU
dJ9ndKmUBEVX3v1yot8W+qxwNwfkQbd0oDMJ/bgxJS0LbE1JYerJzKqMSFJS
C8/oUikJitzbDEpKIuXGDrTv6EGYkqbFV2LOWkX+aXsmwszlV6/rZ702JXWy
LZ004yApCYqkpM6lPrG8xWWbfM2KHuzGPrzyUIEa06n/ekPl6XE68G93V2af
+pLHt7oTnWxLJ804SEqCIrc0nWt9qd10Ub5sk69Z0YPd3oe3NwBmx4/GaBrK
f3wkJbUQ9v/njtuYZ3SplARFUlLnpCR26KEPnVvoxO7jsJiDMjXnnspfbt/m
9yO1Ucutq9/M6/q9QqsuqyAlQdHt45S8SUpiu376sJ+W8E5bb0fPuoP9ufj/
+M/+WQ9/TxqDq22Zfn20VF/J7dfTi6+qwD5SUudeeD53QB7XVR86ydC/0z/b
l5JakJKAK7mB6dwLz+cOyOM67MMOm8TLNf3ik5TUQpiS5ilSEnA6KalzNefz
+UL/Y/G/GlxJlV9O7OR87oA8rs8+PP4VpummH2vzJO2S0Wott+ej56WklegJ
obhzpaQvv0uCIvcbnasJL6v4E0090enTr/8njk7O5w7I47rtw4MnnH0fHUPT
x0apNd6ej16SksKJ+d299bPHzNyaS2cPV9UoKQmKpKTO5c/A4dxUSvqxeMyU
SlidnM8dkMd13oe7m7f6xPik5vBYFyej1aozseVr9bp+VvhWSlpODK0KVEaY
+s8npSR4JCmpc1tTUn2Amnzj7tE678bKM8/qJkdKoih1b3x9M/LJpfi6slgx
KD11pKT2cjQlrU4jUtJHSoIKt19KyGuRkopzpaQHGKIbtzYylZigh2S0tCMl
hYukZm1NScw+u1LStPiMccp+K0NKgieZzxv0KX/6zcwNZ02eJb3JKN246RQ0
3+SMsnU0tbr77cq0MSVFy6dmTYuv5L35G3dRqXC0LLApJaWS0ZKUBI/U5/WF
2daUtIpC4azUJ2BS0sOM1Y2VrR1ro2ik22S0tCklpQqnZoUhS0qaZfLRXGBT
SloGpdQVc19QkpKgc/1fa16uJrzUpJ5oepKSHmy4bqw5Fw23UZwlf9/boU0p
ad+zJCkpqniQSElfUhIUDXTReaeac2/40H8KVJbv4XzugDzFoN2YafZYN8mc
YtydvjUl5dPQdOx3SXd3Rl/2paTKzyGlJHiSQS9A77Hv3NviT0oay7jd6KT0
csM9NorakZLq05CUdMSOzx6XL6I6v6pGSUlQNPqV6PGkJPYZvRtHbz+bPCMZ
LWXCy7ylq9c7ZhUjkpQUeuFVNUpKgqInXZUeKfXJ1S0u2+RrVvRsD+jGB2wC
eRefW640VeSX3X+bKn9k9x4xSUl/RUqCoqdeoR7vt4U+K9zH0XiiB3SmE9Tz
XP/Byy2kpG5JSV9SEhQ9/lL1VFISRY/pzMdsyJu9IRktnfkU/7C7O6Mvd++N
X9zYD1ISFN0+Tsm79wS+km/kKRt7vBJmT+rPs44xrlRz9gBuISVBketX56aO
vxtQmaE2bezxSpg9rz+ft0WPJBlB/6QkKHIt61yfKWnTk6bKzXQcrux52tfM
3Z3x13prD18Hj5bjB1vlgo4f+JKSoMglo3NTZynp9BtpR2DKz275vd/7tz38
3buD+o9y9S28wF3bfrCS6OtGru8lnsdRBG9wy4WVetM4KWmIm7qBTFLSIH72
zz/+x/+mh79r9tTp4/fiA8zxzHGOIngDd6qd6y0lza2Sd1qTkkbxkpTUdKSv
qp1XlHoxl8+ci8Jlo+uCHRxF8Abub+9V7P98SprvCr6vl1OWs1aLpGqoT0nL
xktJ+9Ts+tvzkZRU48Ep6coBnsoy0dSTKhbOitbTZgt4kQccRX6XBEXub+9V
DBqZ/LKctUw6YQ6KFgtnbU1Jq61o2U8PVLPri+FlaTVxx9t7U1LlUVTst+sb
Nj0uJV3ZveGqiy8+6UyUmrXcHCcrjnvAUSQlQZH723tNMasCxYi0mpKZVfl6
a0pih5pdX/OUJ3wdvihO7Ccl5e/PV7OuOX0VG/aMlFTs/GucnpLy9cA+DziK
pCQouv2a+HLRW+XlTqlPSTUBSkrqR82uP5iSoiXzxfpJSeGpKXqyuuAMVtOw
+hQTTvkK30bXe3pKim7RxaZ02Im+KL6trPAy8XH+Ghf39jUesF1SEhQ9+CR2
gQsuLlNPKYnLfE5NSWGxmsp7SElzb3zStyWtm1fTsN0paTUx+jp8cTAlhZtw
r1R7Mn3+2fKdunw97XTVyTd6ZD88YHOkJCh63rlrLMXL99QyJa2yT82zJAfM
WWp2fU1+maW+RxfOrak5tZa7fLIp6faG1UeksPBUCkGV9RdT0rLNtKafQ0/q
kwdsi5QERS6a9wrvuMICW6NQZlYqXqXWkvrGnWPmuJpdv+lZUuXEaahnSasC
qQVvb9jxlJSp5EhKyh9jtKC3Mx7TOQ/YCikJih5zyhpUsf8z+SWVfabgaVH9
k6bKlFTTcvJqdn27lLQpKN2SklIFaiZe37BNX7dblf9WW7NgfUqSjG6k2/Oe
0T8P2AopCYpcSTuXjzDzvVDm10OZ8mGB+pQ0N+/6PnmJ1impPihdmZI2lbnm
9FWTZysjzKzdsySn9Hvp/Bp6qQdSEhS5pHauPsW0/ksdJw6hRooRZr4lTk1c
3pZHF4nWcFdKqrT6EODu5vylmhQTTUb5Z0y7U9Ld/fFeOr+evrqdlARFrqqd
6z8lze28rE9eovJBzwV/dm7eWSkpFYg2paSPwXgfPV9PX91OSoIiKalzU09q
mnpNt7zBJCUNYqr4B7q/wreZWakpxZT0cQt6k0y3r06Py5Pq1jNtWO2mBfcd
G8v6Tzm6Rj9ER2//R0qCCu5sB/XbQlcVOpzOIiWNojLCXPC3ug+/sU9eqOZz
pNTbIzvusp1+buWjH5+jt/8jJUEFKWlQ3aakj4PqJOEnzDe6uzO6NnWZkj6P
uJEbSLG3V0Mp9frIepvu8XMrH/3gHL39HykJKrgF6tzFN8N5W1veqE+gK3eP
y19E23ZLt7xNsZ+nX381NsXSTaqSZYEpnYWjiy+PjeXi0YNnVVtYeVhVuEjl
UTf0kTl047+kJChyDe3cz73z9//+/97D347jxNEFPTAML1CZkj5BXPqUwkU0
j0SXjcbk/NrD/JUpsHWRvKEPy6Eb/yUlQZH72M4NnZLmTTi3T4CtDMPWDqak
fCWZK/Vqevg2WqA+BFWWrNmKfMvHMnTjv6QkKJKSOveAlPRxmJEW/SR8+Tb/
UTn19F5T9Snpk/2N0rJA+NSmuN5osVTYySS1+nCUqTNv6ANy6MYDldx4dO4Z
KWnellP6hIcpfqiev5+knt5rZ1NK+mw8qlfJpbLaTzrRRHNZtMCOZ0mVhj4a
h248UElKulex/5+Ukmq2lxfakZI8WtpNpzVSPJNnnt3UXAiWhcNqU5Wspi/f
5l9HK4+KLlLRYWMfikM3HqjkTuNeq0tMtEA+uXx9Xy+nLGdFyy8nXpaSllsN
X9P2lJR6Sw2d1sJYvZoZU5fVOVaPrQzd+C+/S4IiKeleU+xTwVWBTGxZxZ9o
6olOX068PiV9HHgsrD6XnifmC3wecaNyF113urG6VEo6aOjGf0lJUORm9V7R
zl/ulFSECaenUlJxyi0pKbP5vE1qFBQLOH6O0Hvn6q0/iwMk+snDKSutrLO3
HnsbKQmKXnKnMf0qNT10QclMaz9bUlJlJuoqJWU6gfdIjYJ8geIsivTeiTrp
zMqB04POm/d4UhIUPf4etfMNXLUtbO3jU1K0H3gVKelGOvAsnfSklEQlKQmK
Og8RRwyxafMDo8xzpdNTUv7tLSnps31/FZ/ZXaldtzxetA+XE4sFOEg3nqJ1
N65GRDj9E4yLuXy0hlVtqXrajbWhD7yhG/8lJUHRU+80RtmoYv9PZ/8uKT/3
xpQ0b284JbrqnxP/5E/+VQ9/oxxskOIYPu6CPswnoLAZy6STKlZZz+nb0q7a
awzd+C8pCYoemZKetEWZCJPKPlP6UVE0SXWVkj7ZT0pXxW7PR1ISj/HIa8GV
rklJ4evo86OwTPRFeKbNx6VzDX28Dd34LykJilwZO5ePMPN1LZxSnJWq4faU
NG/459ev1YUFbs9HUhIP42De7ZaUVPkMKAxH9YtLSVFDN/5LSoIiKalzNfnl
mr/rj5Mw8a3m3p6PpCSex/G8zzUpKfUwqDIl7ZjYaLtGP8xGb/9HSoIKUlLn
pKR9KWleZPX6+7ammJTEazmk92ndb6snQfPE5Rly9SJcJBqIwnpab9Hox9jo
7f9ISVDhYSnpSdvyFSaFG/Ww4csCxfBSfJ2fJSXxWo7qHVp32vU7pd0aRz/A
Rm//R0qCCtff/Tb1pG3J+22hzwqPqAlr+1LS9LvHRlIS5Dmwt3pYSmq6uhGP
rh4+PzyRlARFQ4/x0JO2Je/ZKWlJSoK7OLa3avrw5bLrdesVDXpcRZs96LZ8
pCSoICUN6j0paWU+YmsSTSYThRP3RSQpiWdzeG+lx/KG7p9V44feFikJiqSk
Qb02Jc12p6SZlAQ1HOGbPOyqeq7Re0ZKgld52Pn8SduSJyXtSEmrRTJfw5OS
YMlBvpUeCz2jT5ZbMfQWSUlQJCUxqMpQk/nZ0fFfJL0tJYW/EXuVu7v/Znpg
K8fPJ/t/Bh/UvCGP2SIg5Unnrk/fZ63llWL+b/4yOgUP9zP7Kzr3mg655Sia
NqakuX9Sb6WklIfd5OymH7Zuezxt3qRRnwzaG5e5u9fPN0lJ8BoPO491uy3T
r8/oU6fZVLFwVr7+aA1NXd/z04Fcc+5ft0fdKZ69dfu8uU82bfvPwj8+P3r4
e/Mu43QPu3ECUh422Pvclkyoqcw7mdf51UlJUtJuDzs5nOvNnZPa9ujZ7PZ8
JCVxumcMf79LgqJnDPZZn9uSadVdKWn1dYjo208szS1nFR9gpQqfQkpq7anb
dZaX90/+3DVPuT0fSUm08IAjSkqCooelpD71lpJW2ScfdqKJKZqewrfRVZxl
6snpW3e7R27U6Z7aS5XbtSoWLjVJSVzixpP/vY50mpQERccHGkWZHg5nTemM
U3NuDBfZVGZKxJzoi3BitIUOsOHYZfUe2Vf1G5Uf6VMsJc2niO/rcPo8a35d
fBudIiU93ilhYWhHekBKgqKXn2GukYlCm1JSuGwxj1yfkoqro3/n7rLpV6uJ
O97WNPiyM9sjD+/VGJ9Hd/GMFM4K08oq10SnZyZGX6fmSkkPZp8u7egNKQmK
HpaSut2WVJbJBJbwbXRKOGtTzkqVz79IzS1OZwin76/KY6w4sab+zMQWx+GT
ju0p5pMY8qsFo7NWgSUTmlLRJjNXSnqth923nGVrt0hJUPSws03P27K861hN
CWeF5fN7KlpPtNpobZkFoy8+wY1T6oYqnEjnWuyp1cGWWVE4t9ieKX2LXpxy
3CMP7PBclJq1nB7t8HxKqslQmaWmX2PUtw2+cfd49mbKpp6RkqDoYbevT9qW
bunkZ7sxJYXFahqTT0mrqH761j1yOOxISdFZ+ZQ075Hod/DyqafmC3tS0iPZ
lXn1/SMlQZGUNKjfFi6u8D2d/E6NUlIYUsJb8dXcypakYleYnhodus8bEZld
c2JKqvyiXc0TKCnpJezHGpW9JCVBkZQ0qLtSUqMP5OlH62dJlRM3PUuKHpbR
KfVtrvf44bB6KpcvtppyPCXVfOlOSnoJ+7GGlARnedgd75O2Je/GZ0k8W1cp
KSy2CkSZHORZ0lm2PtRbTsnHomgOyk+Ukt7MfqwhJcFZpKRBSUk00ltKyjep
mJJSdZ7o8aedE1PS/Huir8zEzNtM4UyYatAxXGo1uleflizll920on011K/o
+Nkp3GQpCc4iJQ1KSqKR0wdR9NZlOTG8vcm/TdUcrfOzOMs1Ot09+7STufMM
S4ZTMj8pOvGvuKJn76OXyGeB43GjuMYWiqvYMfSkJDiLlDQoKYlG3jOIzqLH
vqQkmpKS6svULCUlQZGUNCgpiUbeM4jOosdSpp7c3RkcNW1JScudHn29KpZ6
kZkbNm81a1lmdRCmmhF9HZ1VbEy8ExekJCg6cvmovjq93bm77EtKopHKI3bf
gb0cEY2GRnRdrVd0wVrg5VYDLfU2epKZgvySKhN9EV02HPjLWcsy9c2ob1W0
klTnRElJULTjRqLpzf8jtegxKYlGLggvl9UvJcFj1Kek1MTMrPyL4tx8mdWn
psVqUyGuWElmSkhKgqKtd+/uB444sfekJBqRko6sEWhk6JSUavmOZ0mZSjJT
gB3qU5LnR6c4qxulJBpJHZ+rjzGjn3CmPucML+hhVeEi4YLh2lONWa0rWkOq
JdECmWHrxAgXyMSEz6/DPDUxPBVEF6ypKmxApkzqbbFkTZ35lgBH5K/+q5Kt
G/MSp/SklEQj0eOz8ur/CVJP5UU/v8iyGfU3FWHNWzck3yeVc4FTpE4I4W3M
amL4occndqJYWRXOzM2vJV84VW10wXwl+b4CdggHV6rYBY15j+P9KSXRSPTg
TF2Fp3S4mGK3KDWLhNOjbSvWv2ldNe1McXqEC5w70J49bGu2zu+SoKgmJT37
ZHKXg70qJdFI5shMhYhMMKkPR5k6o20r1p+Zu/yctri4MyT0QEqqJyXBKaSk
u0hJ9CkfTzLPYvIFdjxLijajvv6zJjpDQg9OHGirB8en1Lap/CnrPbgKKQmK
mqak5YnortPRBfY1SUqiT6mUtEooy6Gdeb2cmBddJNq21ayaSlaNj27pqp5M
bxS7CzjdxWNt0+p6Ow/UtEdKgqLorciqwO6a69eyu+ZO6tyx+ME1Skm0U39w
bgoUx+u8/lZESoJOSEn1pCQ4RaOUlPoQ+BRS0kdKoiUpqX51vd0dwVMd+cw2
+kx5nji/Xc0NC0fnRivJv07VcxYpCU5xWUparTF1plq9CM8q0QL5empKRvsh
v1RqYr0j50YpiXY2HZktLvTROtvdUaQaUFmydWOAz7GxtrqaryambjCiLyoL
h+VT9UhJ0K2LU1I+7KTyS1g+fJupp+bcGI1I+aWijdxESqJbbv5r6CW4zMGU
FL7ORJtPcInfF6k+sTuE1Y1KC1ISnKKTlFR8EU5cnbgyi9eXDFtbE9My25sn
JdEzESBP/8CVbkxJ9VV9YncIn8RHvqvpZ6msUEqCostS0u4PYVLlU6s4UrKy
jJTEGzT9qHN0egaut3vc1X9Muu/Sn0lJxXqkJOhWo5T0qT6TFF/Un2GOl4y2
X0rizcSBkD6BWxy8IVndUWTeRguvZuWXLRYOlzqLlARnaZeSPrFTRzhx+Tb6
4pM+s22qp7JktKmrE9rqxe5z3ZG+lZK4zMHj/Bn0ANxu9+i7eNjee5aoXLuU
BEXFi/4Qg31QUhIjin568Hh39zrwl/YNxiuH8L2ni/q1S0lQVLwBGGW8j+jI
1klJALzQ1kvnZZ913P6Jyqa1S0lQ1HNK2vpZbieRqv48KSUBwCa3h5E+be0T
KQmKek5JS6lmdNK8FSkJANrp8+p/lx29ISVBkZTUgpQEAE29/MeDB7ddSoKi
RilpNXLDgRx9uxryqxrCBTOFw7epbUkVrtmQ1EalCoSrTs0qkpIAYBbeSDzb
3f0Nz1ccaztG4vRrtJl+zRGZAsUXmQKZ1X3SQSlf/+63qdamOmoHKQkAABpp
mpLCt6sosTUlrRaMVp5aXbFt0YZFa0sVDluS/8xHSgIAgA7dkpJS2efft3cH
S3KCUABF8/8/3VmkkmIEHog+RzLnrKYVETubvqXdqQ+58V7ScG3BtKfuQzW3
NKkkAAB4odRKGuZDryaer6R4YadeBqttnnqNSgIAgCTDSvqshlJ9O6a55fBw
WnNAc2T58jDDYbbm+OFSDycaDq6PbZ6uPPbkm/qFSgIAgCTBx/hyTPYaHjvX
e6gkAAB4J5X0XVQSAAC800wlfR4JpcmV/B+uX6lKAgCAJPNt8nMSJtst76RK
AgCAJKcqSShdd9d7qJIAACDJ2fYRSlfc+O6pJAAASLJwh6j3K9k0Jb1XKgkA
AJJc//Re/edCfHHXv9SBSgIAgCSpn+TJo5IAACCJStqUSgIAgCQqaVMqCQAA
kqikTakkAABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2
pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIA
gCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqik
TakkAABIopI2pZIAACCJStqUqAEAgCQqaVMqCQAAkqgkAACAkkoCAAAoqSQA
AICSSgIAACipJAAAgJJKAgAAKKkkAACA0lol/fqruSuev9wSzNM8/M/fzaPK
OSeXCgAAUFsoiDpberPVM/f2zgRXPH8ZUPOnAAAAOMirpDiRhrtObZkpI5UE
AADMuLGS/t3N+bTu7DTv9TTn6Q3uPWK38DcAAEDPXZUU1FBvS2/O3uDDeVUS
AACQ4ZZKWtvSe9kbvPDE3af49QaVBAAAzLirkmr1mGCG4SmaI2cqKdgIAABQ
u/F7SeWWyUrqFVB8eLxr+DgfAABAYO1RtOAZtjJ86ptKhy8cBY/D1YProw67
eqc4e3UAAMBPpiMAAABKKgkAAKC0XEnzP5LQe9Bu7aQXv3Y0PPvD2ShRAQDg
bZa/l3RqV/1rDMuuZ8VwhgdOAQAAvNbDlfSGAFFJAABAYKGSDuPrZ9h6D8UF
z+Md/q5/tq43VfAsX+/SZpbRPG+w1OEymgcGq63fVQAA4BkXK6l5k6hZSZP3
mOr6iAf0RjYXNtzSTJ7gkoNF1ufqld2pxQMAANnuqqTegHJLb3BdDZ+vwRIM
+LTSpjnzcM119TRX3iugeJHxxsNlLvyjAAAAd3mykupdM+0znKquleCMM3Oe
raSFe0nB/PW1AAAAT7qrkuJ06u2dr6SzI+crqb4H9I2VNFw8AACQbe2GRfP2
Tb2rHFB+8m++LJXT9o5tHlgvLNjYW0a9yFNXEay5dwnxIQAAwJPWPo0Hh/hs
DwAAbG35nkXzKIkEAADszpNdAAAAJZUEAABQUkkAAACl+jffAAAAfrjfa7x2
Kw==
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 14->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
/ynpyIKnLM6seF6NHvyr55u7D+bV4vkK7XR4J79LgiIpqXP1N0sHb66kpJoG
n9sDp6/olG+CHayBT/C10miB1KEYfV1/JK9eFyu0x+GdpCQokpI6t+lOqWnu
kJLekJLOquTlpphVgRYpKX82kJKAmZQERVJS56SkC/4ek5IOLntWDURT0vJk
uzUlLR8Tz6+XUyoDkZQEfElJUCQldW53SlremEXvrPpPScv2R6es7j8zC1au
CC6QOfhXJVfjeooFpSkY18tla1LS5BIA7yMlQZFLZOdSd1P5lLR6Ed5cDZGS
ovd1qynhJmduCA9u2mUj5eCKTmmn08IRqXC0LFBzwE/BBwL5kV5TVfTgdyGA
t5GSoMjFsXOnp6R9ESkTJfYdP5V5Lf+ReObzcynp9ma8WSYfzQXqU1JNOMqn
pMxwWDbP5QDeQ0qCIpfFzu1LSavU0C4lbTp+VveNB1NS5f2klNRJVa9SHBdX
pqT8oAjb6aIAbyAlQZELYucOPkuKTt+XlVJ3U8XjJ1WsRUrat40PS0mn1NCi
KmapA3slM2s+zpcvwmVTFRYPfpcGeDYpCYpcCjtXf7efujtavl2+OJKSVrde
0WZn5tZvWqpMOH2Skk6toUVVzPaNwRZ/+f1r78NTSUlQJCV1bneiKQaN3XdT
kQ+1Fz8Arz+iGqWkH9uT4PNS0lmVnF4VX6OkJOCppCQokpI611tKikakfUfR
jpS0emBUU1JKOoWzxLky4+h6W9vctGeAa0hJUOSq17npwD/c/XXiZ87Hb7Q2
bVq4ltSmRaecnpI+V4WFU9ZyelOdKPhy1YAHkJKgyPWuc3UfBt9v36adleCO
B8D6Nu/Y0q3OWsvprb1m8xnC7oEP9EBKgiJXus51HiVSQanmoOp801Jtrix5
RLcpqVGdjMsVBAYlJUGRa1znRowSn+qU1I8Tt+u4E9dyeoOv6QHGsmkQAT2Q
kqDI1a1z0/gpaT7GKg+23Su6gJTUqE4AriQlQZGU1LmxUlLqMc3yMCvWIyV1
npLaVcszODwAeAApqXP1KWlOJTvmNn2W9AkeLW1aduu6mhouJWVqO7gW5w0y
tn6XFQB640LWuU25JhORimWkpH7WNURKOqUGHs8lBoBBuYR17jEpqdE37nYv
ss+IKSlV4Sq6ht+N3FcthFxooDd+lwRFLl6d252SVj8Omqdc8427cCs+bf71
ht2L7POAlDTFfDYm2XZN5cFcbqAfUhIUuWx1bl9KWr24/llSuBWNCh9cqs8V
Xf8s6RMkqYOVQ4oDBnogJUGRlNQ5KanpUn2uqMUqwjrPSkk7ygNwLykJiqSk
zh38xl10+sUpafm1rsryu1e0b8E3rKUmJe34xl2mfihyAYK7SElQ5CLVuYPP
knpISTs2+fRlT2z8oCmpWGf466Rz64cUlyG4npQERS5PnasPNfMjm/DttLAv
IklJLaq6eC01Kald/ZC39aEzcISUBEWuSp3bl2tSX7078jdESkotvvrRzZHn
JlJS60p4OVcluICUBEWuR52Tko4sPsV8fj3st65u3JSUqfbEj/GdTziFaxM0
JSVBkStR53YHnNU37t6TkqI1rKasktTBylu4OCWNuBYAdpOSoEhK6lz0achd
Ltvk02uYpKT2NV+/Ft7DEQXnkpKg6Mq7X07020KfFe52ygGZiUWfF3/j7nMs
Ie5bC5zC1QpOJCVBkevOoKSkI5VMr/zXG+aar3k+6MRCC65ZcAopCYpccQYl
JR2p5+AqLhgyjVZx8bconVtoJHMAu6gdV/ju9dPd3f0XkZKg6FXnhCeRko5U
dXAV0cXnoXTKmDp9VN51P+D0QlPhYfy2e90T6bqvl/SDlARFbzgVPJKUtLuq
41fATPiaZ7UIYgfd9ampMwytLcfdCx8KnEJ3hZ7dJ1ISFLmUDEpKuqW2fJ3L
6R2mpM/l37hbrveaFfFydx3hQ9NRGQ/uHCkJih58Bng2KemW2lZ1ru7E+k9J
n5s+bHeS4QLRp6WOvSJdlKd/4LVcRAYlJXVYYSoxnbiKU9xyA3nLecb57VVS
KckxkKFzaugleCdXkEFJSR1WOHX8rzeE9V8/9u9anVPcG2QikgMgRc/U01fw
Qq4gg5KSbqwzn5KaruJEt4z9W55eOcW9k6BUpFvqPa+v/C4Jilw+BiUlHanz
4CqekZIuW8vtK220xvzDi4u12MCu3N3Bv7i7M07zpG1p7Xl9JSVB0cPO+e8h
Je2r9pT7nOji595B1ddz3a1hhdO37rh26/pZ8x/+4b/p4e/K/rzLz238oz/6
X3r4e0xvP2ZDrvG87pKSoGjTvQ39kJJ2VLvjfj5T2ymtOl7/z5I/Pj96+Osw
JTVdkZR0JSnpdNENOes8Wbn4iZ15pM0XN7UTUhIUSUmDkpI2Vbj7qUemzlPa
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
6t7HXJt4s+cdvc/bonqnbLuUVCkTfIqZ6JQ9tTslnbX245XcvordXPoHJSW9
kJ5pqqZ7xSUG9byD9nlbVE9KulIm+4SPk8JiLYJS/VInFrtAPy2ZueIPSkp6
IT3T2qarT83J0wmWTqzu5eb7t3GPz+dtUb1Ttl1KqpRPSeHbVbGzDsitQal+
7f0MmX5aMnvJKeV5pKQX0jOt7ejh/GVrx6d/cKIp5vPrpX+sg/N5W1Tv3G2X
kioVU9InEUlOPyCPp6TwmFlVGH27erHaqMpZmXrClqReX+/GVXOElPRCeqa1
gz0cnszD+xm4Rer+LZw1iudtUb1Ttl1KqhR2aTQOhCVbnPzrKwwbmZoeLVkZ
eWpmZeqpaUC4CVdy7R6UlPRCeqa1s3p4Sqssdr1TNtzW3aKywam3YQ03b8+v
Ttmi4bYub9q77Uunp6Sbu/JXB7dltV2pKdOvPT+ld0TrJkXLRHsjbHxqc258
kZp4vdMPJ64hJb2Qnmnt9AtZ/vL98/WPz48e/locWj/r/Ht/73/t4a/R1t2+
1zbtu/BOKXMT8nPK3/yb/2cPf5mt27RFq5J/5+/87z387T4yd2/7UouU9I/+
0f/Yw1/TSFIZhZqmpKKahnWekua3UhI7SEkvpGdauyYlLa8It99jS0m7t+72
vXZk3823H9HFh0hJm7ZoVfL2fHQwJe3e9iUpqXKjomfv5azllOissGRrUtJZ
pKRBSUkvpGdayAeZFjXP9U+D32kXN//2fCQlZdqfn3t7PtqXkipL3p6PWqSk
raSkpypmtPBKlCqcunItX2RmpSopLr5saruOqhE2iSFISe+kc04XPYEf7+ea
SqbB77SLW3d7PpKSMu3Pz709H0lJ9fbVIyXRv9t3pZQ0KCnpnXROCy1SUuV6
b7/H3n2nXeyl+pS06vkeUlLN1t2+1w7uu8yCw6Wk/MfRYeHb89GJKemyU1ZN
x96ej46kpMqPti64TLgz/+qhE+yLQUlJ76RzWmgUkYoVfu+0V6uuvzeey89L
RatK1b+q4cjWRReftuSdZeFNCzZNSfmt25pl6vfypoOh0dbNIeUrDC/z9CkQ
LhjWE60zumCLrduaZVaiBW58lnSNmo7dmmXCKUv5wo1SUn4Dl9NTxY4rtuTx
+tnwflrCJlLSO+mcRlpclcKbq9UqpkWQWd701twYr+6oU7NSE8MaTtm6VYHH
pKTo1u146FOzl6N7rWlKim7dKhBFU1I08kyLgJPKRPV1Ntq6HXEm+jo/8dkp
KdqxB1PSauL8+ruui1PSagPD7U1NPK7Y1fX1nN62t2m0i2lNSnonndPI8etR
sc5wFdOulBQWSC1eWf++Tc5v2ueklPStcPV2U80npqTV1rVOSfXVtti6MK0U
p0SfDRXnFh8ttdi6IylpX4EOU9LW3yXVdOzWiBQuMsVS0i3PklYbmKqzxU4s
dnV9Pae37W12dDs9kJLeSee0s+8yVFNh6jI3ZVPMt/Aqy6wmVt6KRycu32Yu
yvt8tqekWRiXvi9Wb/dVfuLWnZWSvnWu9vKmalts3b6UlC+2LyW12LrdKWn5
4vt69d9NlZ++dTf6dJaSGm1j/Xk+XOqskvUXoI97hsM29Tn9kJLeSee0s/Ua
VFlb5gI3xX46FA04UyI6hffVYVWZhDVP2bHVNVu341nSaqm55vC50ojfuIvu
mkykray2xdalEtCUCESz/Nfq7nqWtCqwIyXNVhOX6WlrzTu27kSnPEtaFdjx
dbsp+P3RLJWe7vrGXWqpHes60pL6SsLmzVVNQSiLFki1ZHerhvOSzXweKemd
dE5TB8+H4RUtf42bsnfI84Lh44aDz4+id+9HNja1dQdTUmripppPSUmZfbcp
zkR3x3JH35KSogW2pqRznyUtK2yxdcefJYWv91W7detOdDAlRQvse9xTk4a2
Vr6jQ/IbWD/xuGJXV1ayerGs/LPIQWH5zKyw/mdrtItpTUp6J53T2qYerrlt
yJxjp3RKCl+Et9M9pKR8gR0pKRqOpsPfuGuxdaekpPweb5qS8gX2paRU0tmU
klavW2zd7pSUmji95llSvsDWB0n136yrr/xgSqov0O7++ZSaU9em6dfIExbb
9OLx2u1lmpKSXkv/NDL9qqZYTZ35uanb5tWs1Nt8IKq88W50FZi2//+SwgdG
U8wF37ir2brdKak+FzdKSTVbV5Nf8pEnU6CmqrmSFlt3MCVNQSaaYg+bHpaS
iqbBU1LlNm66BNxlSiSjTywlZZYNNzO11FN1vqNJkZJeS/+0sDoTLt+2uyzO
kedrFVuiomXCifli4fQWB9XU4P8Pu++v0dZtzTLRXZPa3Z2kpLk9YYSZp4eN
jy6Yf7uavqynxdZtjUgry4nR11JSzXftwrerWalFbkxJo5i2p6TMi7Cq9/Tw
98C7uxVsJiW9lv45XfQ0OF+Xm6536/OIRn+N7kVvz0f9pKTh9l30x0TX//WQ
ktr9vTMlXfD38qvk6uK1fBu+/vx6Bcwsu6z/sm25nZQ0KCnptfTP6VJd2rqr
H3+nfXs+kpJ2b93t+UhKak1KIi/6BOrzspsQKWlQUtJr6Z/T3ZiS+mHrbJ2t
u97pW1evRUrqxyld9HJTLBm9rW8dToOSkl5L/5wu1aW6Gniq01MS12t9kVqm
znfmhXdu9QNISa+lf04XPQ06NwIPJiUNrfjUzGO1U+jDQUlJr6V/WlidCZ0Y
gWeTksZV+d1CV7Hj3AwMSkp6Lf3TiK+1A+8hJQ2q/jrlQnac+4FBSUlvpova
0bfAG0hJwwn+jYralLT8bdG+WeGLsFXR1s6Fo1/YSNUfrblm7aeHGilpUFLS
m+midvQt8AZS0ljCiFSfkj7ZpJOfFb5YZZ/o6qKFw6Wi6SZTc2rtqWqPk5IG
JSW9mS5qR98CbyAlDSQakbampBYviikpbP8nFj3Cemoav6qnvmfqSUmDkpLe
TBc1pXsB6MroKSm1RammVjZ+WU+La7eUNCgp6c10Uc3FItVLq0+06hcEgBuN
npJWSy1f1NScrycfyvaRkgYlJb2ZLvoEnZA5P6cmbo1XAHC7mpS0+jxw9Xo5
MTVrVU++cPQSHNaTan+43lQNqcaHaznF6RVyDSnpzXTRpxSL5hNp/SL5iQBP
4ndJQ3vYdarbzZGSNlkl2cpFMlVl6q+s5yxS0kB00eeklFRZM8DDSEnDefC1
qdtNk5Lqnf5QLxOgdix1kJQ0EF30qUtJqYnz29SHFWc2FO4zvdvd3d81KWk4
Tz2kex6w3TasN2EvHe+3VA35mhvtLylpLHopPySjd0qVo1jfMrqe7zqupB8y
pKSx1B/GrQ/73ZWPOBKdQCpleilzQM7Tly9Wdc5TVmWWda7qWU1P1bCJlDQW
vZSJPKtZqenRKamJMAoHcEifhKSksWw6hlsf8JsiW9OWtCYlVap57pO/4woj
THTKJ8hHxRfROreSksail1JRaPesmunQMxf0DJ2zIiUNZOuhKyWdxXmj0ikp
qfJFKv6kXqQmbiIljeXlvTQFwlnRt6tlM/W3azw04rjN0z9LUtIodhy3xUve
8lP61Ef3+aXylYQ1ZK7Lq2q7kr9VYBb2UrhPo8fVjhdhnfkXqYmbSElj0UtN
6V6G46CtoZdmUtIojqSkzM1h6k41c3ObX7C43vwtbp9BSUqqV0wl0Z6UkrZy
QNbQS03pXsbiiK2nr76kpCHsO1wrU1Jl+fpb05q11K+3B1LSJqvnRJmJq1nL
MpumhKtITc+3pEhKGoteakr3MhZHbD199SUlDeFgSvqk7/OlpBpS0qBODzVS
0lj0UlO6l7FEb06i1/fo9Eyx45/L7b7Na3TjZHR/SUn9232s1oyd6BA7KyUd
rKcfUtKgpKSX00tN6V4GkjpcMymppob8zUxmvWdpVL/R/SUlde5IRKr5NGPO
LPUfg+Q/PAkrXL4Ny0RX1Fsq6a09VJKS0FHt6FsGkklJn1iuWZWPTowuGH3R
jpTUlJT0BpmPNQyEGlLSoKQkdFRTupdRXJ+S8qMj9cnwFAjXEm1t+CJc16YB
a3R/pKR3kJIOkpIGJSWho5rSvYwin5I+QbRJ3SyF08MAUrxnSD11ik5fzso8
rqpfpJLR/ZGSXiP6McKOzxbeSS8NSkpCRzWlexnF8ZSUuo9K1ZkZHal66kNQ
ZcnMFhUZ3R8pqWOnHJ/L0ZSJSKlh3i4djDX6pKRBSUnoqKZ0L6M4kpIyySiT
kjIrnedmngRVNq8+WGVakmre1kWeR0rq01kRafk6Na6jw2f3hw+V7RmLlDQo
KQkd1ZTuZRTFlFT5Oj9ra4FUCEqV3JGSdg9So5tuHT84NwWfminHjTvipKRB
SUnoqKZ0L6Oo+c7M6uHLnDJWZVKzUnVuKpN/vZyYF13keI/B7U45MjOVFOvP
j/HU+A0rz58EipVv2t6mdpxeuFLlVeMal23yZSvqx772n94nzHQvoxjiWJ1+
vYO6t84heowXOuXIXFWyvM2oqX9KpJ5lbavXq/rDGsKq8pX3M0J336FxjZ97
58fnRw9/lx0nV67or/21/6eHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzE
Vd7ZkZLq23kNKalzUlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHH
bicl9eaWlFRZeFNKOvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQ
U9uRkrpy+qcHqbfFMSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH
5LSQmpVZqvg2fB2+yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4Uwx
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
/+AP/r8e/pwWiJKSTmF8PZs7q3rF9JFKUsXyUtKSA3KfMLZDIzUpaVPSOf4s
adW8TQMh+qHWwYujlETnpKTjDK7Hk5I2CZ8TpSamZq0uwUvh3FUl0cL5RYot
nElJo5uqEzEctIotK8WHRJnyxaXCkplG5sdC5tQ6FzjSRbfnIymJDCnpICPr
DYrXEfp0eqiRkkY3xcI4tBCNNrf8FY/zmrEwBR98Radv7aLb85GUFBVNx3e5
sR+kpIPu3X1c4/Zxyj5SEqEpcbMH55rGSUlzg+vnTlLSo/3skL/7d/+3Hv6k
pHEZVi8hJQ1KSiIUdp0BTguXfMpea1ObU7Oib+srj9aZiS1fq9f1s6SkIyYp
6S9JSVC06SpDP6QkQpU3gXDQzyPqb//tf93D39Zju/KStyOFhTXkk0vxdX6W
lLSblPQlJW2y78MZRmd3D0pKIpTpOiOdE42bkub2tx4OO1JSuEhmlpS0m5T0
JSXNiieEVQHX0/ewrwclJREqdp2+5RSjp6R5K9qNiK0pKVo+PyszV0rKkJK+
pKRZ/jlR/USex44elJREqP6rRBc0hgd7Rkqat6XFiNiUklKFU7OmX3+sJCVt
kkpJ385cvf1OmQKZGvJlpKQOhft3+vXJUWqpqxrIbdwyDUpKIlTfdTqZI56U
kuYtOndQbEpJW58lTVu+iWewr2Tyy2rWKjSlitUsIiX1LJqS5nOClPRmUlLn
MoP3epdt8jUrep5NXXflPuVhpkVKms8PYX4Jp9cUi558UjWcewyfWNvU8ndJ
mUWkpKIpm3Gm7cnoSEpiCKkD6eJDl+tlDgB68HPv/JN/8t/18HfZceKA3G1H
1+ltdpiCqDIl4k84Mfo8KPo2+iIsfPqmnVLn1PLfuJt+TUnFdR3fnCeZSk+C
5gJTLPKkJq6W9SxpIPlkFD0nuHl+CTu6c1ISm+wLSvqcTaK5Zgqe+BSLZaJT
faRqtIEHa84kl/k2bPW6ftYfLH6RtJwoJdUopqQwLq2e++STUVhSSupcKh+t
CqTe8mD2deekJDbZ3Xu6nXqPT0nzZh4ZUMXvwl3zZ2iv7E5J0WdJq9ryb7tK
ScxqRnoxSfFIdnfnpCQ2OdJ7ep5K0fgT5qB8sf5T0ryxO9YiJXWrJiWFCSi6
lJQEzyYldU5KYpODveeEQI3dKWk2UEqaNzm1ruj0qSeN+2Yw0+F/4241MVMs
sy4pCfrnFNq5KZGS5stfdOJy7qpkuGCqknNTUv3iDsgjTuk9u4C8aXtKSi0y
SkqaNzycEr2M/pzy4/Ojhz/DeSWVXOZdGf2W3WpWqsBKJiLdnpL8LgmKpKTO
pVJSmG7CictklCmTSkzhUgc35PSShM7qPWcGMiojz76UFA1ZnaSkT+J33FLS
QIrh5bI/KQk6516oc0dSUibvFBdpmpLmoy51d3FkRS93bu/ZF0StMs5XmHHm
6WGZcFamTGpdt6SkuQdCqwK35yMpKUpK+pKSljLDOfo2HO/XtZULRW9T6ce0
NyVN2adCO9LWvuMkdS+xPPCcbU50eu85RRCaEt+Ru/7v3oMzf2d1ez6SkqKi
V6W73NgPUtLKlL4VycxKTeEZbh+n5E3bU9Jsd0paLd7iG3ebzj/Ua9R7dgpL
k5SUvtme596ej6SkRp7RpVLSSib7rG6VozctzzgqWJGSOrcjJZ3yLKnpN+4+
UlJL7YKSXcNX1afkV+mwEz7ZlDQXW72unyUl3esZXSolrYS7dVqkpPDtqtgz
jgpW7r3KUDQ98XdJH9+4a6lpB9o78CnlxE/pWdJybup1fpaUdKNndKmUtFJM
SZ9EIErdzPAAUlLn6lPS9Pt/97ty4sUpKdyuj3+9oY3WHeikQeduPD6XWWlr
SgoXycySkm70jC6VklaOpKTlJyQ8id3auUyEWUlNDMtH68kXa5SSts6ixjUd
aDfRrR4Ozq0pKVo+NWuZwooBqofeeJhndKmUtFKTkj51v1HiMaSkzqVS0vV/
UtIoLutAe4o+RW9pTrzY1XxuvCklpQrnZ1U+YzJODwo/fky5u6XbSEkrmbyz
bxYPMOLQfpVHpqT8NcUBedCVHegEQj9SN67Lo/T0oJRZabtnSVLSvZ7RpVLS
UibzRqdEZw2al8mwQzuXvxZf7LJNvmZFT3V9B9pldGWq/uD3yCryp8qp8e+S
JinpPs/oUikJiq68++VEvy30WeFuDsiDbulAZxL6cWNKWhbYmpLC1JOZVRmR
pKQWntGlUhIUubcZlJREyo0daN/RgzAlTYuvxJy1ivzT9kyEmcuvXtfPem1K
6mRbOmnGQVISFElJnUt9YnmLyzb5mhU92I19eOWhAjWmU//1hsrT43Tg3+6u
zD71JY9vdSc62ZZOmnGQlARFbmk61/pSu+mifNkmX7OiB7u9D29vAMyOH43R
NJT/+EhKaiHs/88dtzHP6FIpCYqkpM5JSezQQx86t9CJ3cdhMQdlas49lb/c
vs3vR2qjlltXv5nX9XuFVl1WQUqCotvHKXmTlMR2/fRhPy3hnbbejp51B/tz
8X/wD/6nHv6eNAZX2zL9+mipvpLbr6cXX1WBfaSkzr3wfO6APK6rPnSSoX+n
f7YvJbUgJQFXcgPTuReezx2Qx3XYhx02iZdr+sUnKamFMCXNU6Qk4HRSUudq
zufzhf7H4n81uJIqv5zYyfncAXlcn314/CtM000/1uZJ2iWj1Vpuz0fPS0kr
0RNCcedKSV9+lwRF7jc6VxNeVvEnmnqi06df/08cnZzPHZDHdduHB084+z46
hqaPjVJrvD0fvSQlhRPzu3vrZ4+ZuTWXzh6uqlFSEhRJSZ3Ln4HDuamU9GPx
mCmVsDo5nzsgj+u8D3c3b/WJ8UnN4bEuTkarVWdiy9fqdf2s8K2UtJwYWhWo
jDD1n09KSfBIUlLntqak+gA1+cbdo3XejZVnntVNjpREUere+Ppm5JNL8XVl
sWJQeupISe3laEpanUakpI+UBBVuv5SQ1yIlFedKSQ8wRDdubWQqMUEPyWhp
R0oKF0nN2pqSmH12paRp8RnjlP1WhpQETzKfN+hT/vSbmRvOmjxLepNRunHT
KWi+yRll62hqdffblWljSoqWT82aFl/Je/M37qJS4WhZYFNKSiWjJSkJHqnP
6wuzrSlpFYXCWalPwKSkhxmrGytbO9ZG0Ui3yWhpU0pKFU7NCkOWlDTL5KO5
wKaUtAxKqSvmvqAkJUHn+r/WvFxNeKlJPdH0JCU92HDdWHMuGm6jOEv+vrdD
m1LSvmdJUlJU8SCRkr6kJCga6KLzTjXn3vCh/xSoLN/D+dwBeYpBuzHT7LFu
kjnFuDt9a0rKp6Hp2O+S7u6MvuxLSZWfQ0pJ8CSDXoDeY9+5t8WflDSWcbvR
SenlhntsFLUjJdWnISnpiB2fPS5fRHV+VY2SkqBo9CvR40lJ7DN6N47efjZ5
RjJayoSXeUtXr3fMKkYkKSn0wqtqlJQERU+6Kj1S6pOrW1y2ydes6Nke0I0P
2ATyLj63XGmqyC+7/zZV/sjuPWKSkv6SlARFT71CPd5vC31WuI+j8UQP6Ewn
qOe5/oOXW0hJ3ZKSvqQkKHr8peqppCSKHtOZj9mQN3tDMlo68yn+YXd3Rl/u
3hu/uLEfpCQoun2cknfvCXwl38hTNvZ4Jcye1J9nHWNcqebsAdxCSoIi16/O
TR1/N6AyQ23a2OOVMHtefz5vix5JMoL+SUlQ5FrWuT5T0qYnTZWb6Thc2fO0
r5m7O+Ov9NYevg4eLccPtsoFHT/wJSVBkUtG56bOUtLpN9KOwJSf3fI3/sb/
1cPfvTuo/yhX38IL3LXtByuJvm7k+l7ieRxF8Aa3XFipN42Tkoa4qRvIJCUN
4mf//PW//n/38HfNnjp9/F58gDmeOc5RBG/gTrVzvaWkuVXyTmtS0ihekpKa
jvRVtfOKUi/m8plzUbhsdF2wg6MI3sD97b2K/Z9PSfNdwff1cspy1mqRVA31
KWnZeClpn5pdf3s+kpJqPDglXTnAU1kmmnpSxcJZ0XrabAEv8oCjyO+SoMj9
7b2KQSOTX5azlkknzEHRYuGsrSlptRUt++mBanZ9MbwsrSbueHtvSqo8ior9
dn3DpselpCu7N1x18cUnnYlSs5ab42TFcQ84iqQkKHJ/e68pZlWgGJFWUzKz
Kl9vTUnsULPra57yhK/DF8WJ/aSk/P35atY1p69iw56Rkoqdf43TU1K+Htjn
AUeRlARFt18TXy56q7zcKfUpqSZASUn9qNn1B1NStGS+WD8pKTw1RU9WF5zB
ahpWn2LCKV/h2+h6T09J0S262JQOO9EXxbeVFV4mPs5f4+LevsYDtktKgqIH
n8QucMHFZeopJXGZz6kpKSxWU3kPKWnujU/6tqR182oatjslrSZGX4cvDqak
cBPulWpPps8/W75Tl6+nna46+UaP7IcHbI6UBEXPO3eNpXj5nlqmpFX2qXmW
5IA5S82ur8kvs9T36MK5NTWn1nKXTzYl3d6w+ogUFp5KIaiy/mJKWraZ1vRz
6El98oBtkZKgyEXzXuEdV1hgaxTKzErFq9RaUt+4c8wcV7PrNz1Lqpw4DfUs
aVUgteDtDTuekjKVHElJ+WOMFvR2xmM65wFbISVB0WNOWYMq9n8mv6SyzxQ8
Lap/0lSZkmpaTl7Nrm+XkjYFpVtSUqpAzcTrG7bp63ar8t9qaxasT0mS0Y10
e94z+ucBWyElQZEraefyEWa+F8r8eihTPixQn5Lm5l3fJy/ROiXVB6UrU9Km
MtecvmrybGWEmbV7luSUfi+dX0Mv9UBKgiKX1M7Vp5jWf6njxCHUSDHCzLfE
qYnL2/LoItEa7kpJlVYfAtzdnL9Qk2KiySj/jGl3Srq7P95L59fTV7eTkqDI
VbVz/aekuZ2X9clLVD7oueDPzs07KyWlAtGmlPQxGO+j5+vpq9tJSVAkJXVu
6klNU6/pljeYpKRBTBX/QPdX+DYzKzWlmJI+bkFvkun21elxeVLdeqYNq920
4L5jY1n/KUfX6Ifo6O3/SElQwZ3toH5b6KpCh9NZpKRRVEaYC/5W9+E39skL
1XyOlHp7ZMddttPPrXz043P09n+kJKggJQ2q25T0cVCdJPyE+UZ3d0bXpi5T
0ucRN3IDKfb2aiilXh9Zb9M9fm7lox+co7f/IyVBBbdAnbv4Zjhva8sb9Ql0
5e5x+Yto227plrcp9vP066/Gpli6SVWyLDCls3B08eWxsVw8evCsagsrD6sK
F6k86oY+Modu/JeUBEWuoZ37uXf+m9/9roe/HceJowt6YBheoDIlfYK49CmF
i2geiS4bjcn5tYf5K1Ng6yJ5Qx+WQzf+S0qCIvexnRs6Jc2bcG6fAFsZhq0d
TEn5SjJX6tX08G20QH0IqixZsxX5lo9l6MZ/SUlQJCV17gEp6eMwIy36Sfjy
bf6jcurpvabqU9In+xulZYHwqU1xvdFiqbCTSWr14ShTZ97QB+TQjQcqufHo
3DNS0rwtp/QJD1P8UD1/P0k9vdfOppT02XhUr5JLZbWfdKKJ5rJogR3PkioN
fTQO3XigkpR0r2L/Pykl1WwvL7QjJXm0tJtOa6R4Js88u6m5ECwLh9WmKllN
X77Nv45WHhVdpKLDxj4Uh248UMmdxr1Wl5hogXxy+fq+Xk5ZzoqWX068LCUt
txq+pu0pKfWWGjqthbF6NTOmLqtzrB5bGbrxX36XBEVS0r2m2KeCqwKZ2LKK
P9HUE52+nHh9Svo48FhYfS49T8wX+DziRuUuuu50Y3WplHTQ0I3/kpKgyM3q
vaKdv9wpqQgTTk+lpOKUW1JSZvN5m9QoKBZw/Byh987VW38WB0j0k4dTVlpZ
Z2899jZSEhS95E5j+lVqeuiCkpnWfrakpMpM1FVKynQC75EaBfkCxVkU6b0T
ddKZlQOnB5037/GkJCh6/D1q5xu4alvY2senpGg/8CpS0o104Fk66UkpiUpS
EhR1HiKOGGLT5gdGmedKp6ek/NtbUtJn+/4qPrO7UrtuebxoHy4nFgtwkG48
RetuXI2IcPonGBdz+WgNq9pS9bQba0MfeEM3/ktKgqKn3mmMslHF/p/O/l1S
fu6NKWne3nBKdNU/J/7hH/6bHv5GOdggxTF83AV9mE9AYTOWSSdVrLKe07el
XbXXGLrxX1ISFD0yJT1pizIRJpV9pvSjomiS6iolfbKflK6K3Z6PpCQe45HX
gitdk5LC19HnR2GZ6IvwTJuPS+ca+ngbuvFfUhIUuTJ2Lh9h5utaOKU4K1XD
7Slp3vDPr1+rCwvcno+kJB7GwbzbLSmp8hlQGI7qF5eSooZu/JeUBEVSUudq
8ss1f9cfJ2HiW829PR9JSTyP43mfa1JS6mFQZUraMbHRdo1+mI3e/o+UBBWk
pM5JSftS0rzI6vX3bU0xKYnXckjv07rfVk+C5onLM+TqRbhINBCF9bTeotGP
sdHb/5GSoMLDUtKTtuUrTAo36mHDlwWK4aX4Oj9LSuK1HNU7tO6063dKuzWO
foCN3v6PlAQVrr/7bepJ25L320KfFR5RE9b2paTp94+NpCTIc2Bv9bCU1HR1
Ix5dPXx+eCIpCYqGHuOhJ21L3rNT0pKUBHdxbG/V9OHLZdfr1isa9LiKNnvQ
bflISVBBShrUe1LSynzE1iSaTCYKJ+6LSFISz+bw3kqP5Q3dP6vGD70tUhIU
SUmDem1Kmu1OSTMpCWo4wjd52FX1XKP3jJQEr/Kw8/mTtiVPStqRklaLZL6G
JyXBkoN8Kz0WekafLLdi6C2SkqBISmJQlaEm87Oj479IeltKCn8j9ip3d//N
9MBWjp9P9v8MPqh5Qx6zRUDKk85dn77PWssrxfzf/GV0Ch7uZ/ZXdO41HXLL
UTRtTElz/6TeSkkpD7vJ2U0/bN32eNq8SaM+GbQ3LnN3r59vkpLgNR52Hut2
W6Zfn9GnTrOpYuGsfP3RGpq6vuenA7nm3L9uj7pTPHvr9nlzn2za9p+Ff3x+
9PD35l3G6R524wSkPGyw97ktmVBTmXcyr/Ork5KkpN0ednI415s7J7Xt0bPZ
7flISuJ0zxj+fpcERc8Y7LM+tyXTqrtS0urrENG3n1iaW84qPsBKFT6FlNTa
U7frLC/vn/y5a55yez6SkmjhAUeUlARFD0tJfeotJa2yTz7sRBNTND2Fb6Or
OMvUk9O37naP3KjTPbWXKrdrVSxcapKSuMSNJ/97Hek0KQmKjg80ijI9HM6a
0hmn5twYLrKpzJSIOdEX4cRoCx1gw7HL6j2yr+o3Kj/Sp1hKmk8R39fh9HnW
/Lr4NjpFSnq8U8LC0I70gJQERS8/w1wjE4U2paRw2WIeuT4lFVdH/87dZdOv
VhN3vK1p8GVntkce3qsxPo/u4hkpnBWmlVWuiU7PTIy+Ts2Vkh7MPl3a0RtS
EhQ9LCV1uy2pLJMJLOHb6JRw1qaclSqff5GaW5zOEE7fX5XHWHFiTf2ZiS2O
wycd21PMJzHkVwtGZ60CSyY0paJNZq6U9FoPu285y9ZukZKg6GFnm563ZXnX
sZoSzgrL5/dUtJ5otdHaMgtGX3yCG6fUDVU4kc612FOrgy2zonBusT1T+ha9
OOW4Rx7Y4bkoNWs5Pdrh+ZRUk6EyS02/xqhvG3zj7vHszZRNPSMlQdHDbl+f
tC3d0snPdmNKCovVNCafklZR/fSte+Rw2JGSorPyKWneI9Hv4OVTT80X9qSk
R7Ir8+r7R0qCIilpUL8tXFzhezr5nRqlpDCkhLfiq7mVLUnFrjA9NTp0nzci
MrvmxJRU+UW7midQUtJL2I81KntJSoIiKWlQd6WkRh/I04/Wz5IqJ256lhQ9
LKNT6ttc7/HDYfVULl9sNeV4Sqr50p2U9BL2Yw0pCc7ysDveJ21L3o3Pkni2
rlJSWGwViDI5yLOks2x9qLecko9F0RyUnyglvZn9WENKgrNISYOSkmikt5SU
b1IxJaXqPNHjTzsnpqT590RfmYmZt5nCmTDVoGO41Gp0rz4tWcovu2lF+2qo
X9Hxs1O4yVISnEVKGpSURCOnD6LorctyYnh7k3+bqjla52dxlmt0unv2aSdz
5xmWDKdkflJ04l9xRc/eRy+RzwLH40ZxjS0UV7Fj6ElJcBYpaVBSEo28ZxCd
RY99SUk0JSXVl6lZSkqCIilpUFISjbxnEJ1Fj6VMPbm7Mzhq2pKSljs9+npV
LPUiMzds3mrWsszqIEw1I/o6OqvYmHgnLkhJUHTk8lF9dXq7c3fZl5REI5VH
7L4DezkiGg2N6Lpar+iCtcDLrQZa6m30JDMF+SVVJvoiumw48JezlmXqm1Hf
qmglqc6JkpKgaMeNRNOb/0dq0WNSEo1cEF4uq19KgseoT0mpiZlZ+RfFufky
q09Ni9WmQlyxksyUkJQERVvv3t0PHHFi70lJNCIlHVkj0MjQKSnV8h3PkjKV
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
06cvSA==
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 15->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3u9UyjH2QLKFIi7SJF0iTKm/ZVquwqUUraILo02WITIUUbaQcJ7SpP
xQnkEDgEDuCGCiqUliAqKChyAlSLO3vx+vXt+fTH2DP2demvR15e4/F47LH9
W17rfv7On/03//S/+o+mafpXf+Pnf/7pP//v/slf/uU//6v//D/9+eK/+It/
9V//i7/48//yP/uL//bP/8Wf/+Wf/tl//HPm//uz7J/9J9P0H6YBAABY+Xw+
3/8CAAC83DIoAQAAICIBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEs3pqQJGMEt5wcAgBvdeBd0
740fUOmW8wMAwI1uvAtyAwadM0gBgHeSkoAUgxQAeCcpCUgxSAGAd5KSgBSD
FAB4JykJSDFIAYB3kpKAFIMUAHgnKQlIMUgBgHfqNiXt/j+2LBeZ/xtalUzV
UL+6cKnUeo809cha8kvVbGy0zakey5TM1LmcWSwTXVFN/dG2FTc51YZ8x06J
gy1VbfFlZtMyvbTPubUBAIzixrug4qpXt5SVdUbrD+8t89Vu6pNU5fVv7Whq
OD9acl/bUlJtLq6ouCvz0aPYwk31Z9pWU3/+ZeV+yb9Vv9eKyx4kJQEA7/Sk
lFR/F1qstlFKyszf2tTdsaLyznxrG+rv5KP7PVpzfQvr698UvvLNyzR165zK
lFTsltPHspQEALzTs1NS+FbljffpKWnHDX/984X6OfuaVFOmfmfVJKCDKSmz
7L6j/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT
6402oLh4ZbXRYsWZ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4ti
gdRN8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnT
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
nrI4s+J5NXrwr55v7j6YV4vnK7TT4Z38LgmKpKTO1d8sHby5kpJqGnxuD5y+
olO+CXawBj7B10qjBVKHYnS6/kheTRcrtMfhnaQkKJKSOrfpTqlp7pCS3pCS
zqrk5aaYVYEWKSl/NpCSgJmUBEVSUuekpAv+HpOSDi57Vg1EU9LyZLs1JS0f
E8/TyzmVgUhKAr6kJCiSkjq3OyUtb8yid1b9p6Rl+6NzVvefmQUrVwQXyBz8
q5KrcT3FgtIUjOvlsjUpaXIJgPeRkqDIJbJzqbupfEpaTYQ3V0OkpOh93WpO
uMmZG8KDm3bZSDm4olPa6bRwRCocLQvUHPBT8IFAfqTXVBU9+F0I4G2kJChy
cezc6SlpX0TKRIl9x09lXst/JJ75/FxKur0Zb5bJR3OB+pRUE47yKSkzHJbN
czmA95CSoMhlsXP7UtIqNbRLSZuOn9V948GUVHk/KSV1UtWrFMfFlSkpPyjC
droowBtISVDkgti5g8+SovP3ZaXU3VTx+EkVa5GS9m3jw1LSKTW0qIpZ6sBe
ybw1H+fLiXDZVIXFg9+lAZ5NSoIil8LO1d/tp+6Oli+XE0dS0urWK9rszLv1
m5YqE86fpKRTa2hRFbN9Y7DFX37/2vvwVFISFElJndudaIpBY/fdVORD7cUP
wOuPqEYp6cf2JPi8lHRWJadXxdcoKQl4KikJiqSkzvWWkqIRad9RtCMlrR4Y
1ZSUkk7hLHGuzDi63tY2N+0Z4BpSEhS56nVuOvAPd3+d+Jnz8RutTZsWriW1
adE5p6ekz1Vh4ZS1nN5UJwq+XDXgAaQkKHK961zdh8H327dpZyW44wGwvs07
tnSrs9Zyemuv2XyGsHvgAz2QkqDIla5znUeJVFCqOag637RUmytLHtFtSmpU
J+NyBYFBSUlQ5BrXuRGjxKc6JfXjxO067sS1nN7ga3qAsWwaREAPpCQocnXr
3DR+SpqPscqDbfeKLiAlNaoTgCtJSVAkJXVurJSUekyzPMyK9UhJnaekdtXy
DA4PAB5ASupcfUqaU8mOd5s+S/oEj5Y2Lbt1XU0Nl5IytR1ci/MGGVu/ywoA
vXEh69ymXJOJSMUyUlI/6xoiJZ1SA4/nEgPAoFzCOveYlNToG3e7F9lnxJSU
qnAVXcPvRu6rFkIuNNAbv0uCIhevzu1OSasfB81zrvnGXbgVnzb/esPuRfZ5
QEqaYj4bk2y7pvJgLjfQDykJily2OrcvJa0mrn+WFG5Fo8IHl+pzRdc/S/oE
Sepg5ZDigIEeSElQJCV1TkpqulSfK2qxirDOs1LSjvIA3EtKgiIpqXMHv3EX
nX9xSlp+rauy/O4V7VvwDWupSUk7vnGXqR+KXIDgLlISFLlIde7gs6QeUtKO
TT592RMbP2hKKtYZ/jrp3PohxWUIriclQZHLU+fqQ838yCZ8OS3si0hSUouq
Ll5LTUpqVz/kbX3oDBwhJUGRq1Ln9uWa1FfvjvwNkZJSi69+dHPkuYmU1LoS
Xs5VCS4gJUGR61HnpKQji08xn18P+62rGzclZao98WN85xNO4doETUlJUORK
1LndAWf1jbv3pKRoDas5qyR1sPIWLk5JI64FgN2kJCiSkjoXfRpyl8s2+fQa
Jimpfc3Xr4X3cETBuaQkKLry7pcT/bbQZ4W7nXJAZmLR58XfuPscS4j71gKn
cLWCE0lJUOS6Mygp6Ugl0yv/9Ya55mueDzqx0IJrFpxCSoIiV5xBSUlH6jm4
iguGTKNVXPwtSucWGskcwC5qxxW+e/10d3f/RaQkKHrVOeFJpKQjVR1cRXTx
eSidMqZOH5V33Q84vdBUeBi/7V73RLru6yX9ICVB0RtOBY8kJe2u6vgVMBO+
5rdaBLGD7vrU1BmG1pbj7oUPBU6hu0LP7hMpCYpcSgYlJd1SW77O5fwOU9Ln
8m/cLdd7zYp4ubuO8KHpqIwHd46UBEUPPgM8m5R0S22rOld3Yv2npM9NH7Y7
yXCB6NNSx16RLsrTP/BaLiKDkpI6rDCVmE5cxSluuYG85Tzj/PYqqZTkGMjQ
OTX0EryTK8igpKQOK5w6/tcbwvqvH/t3rc4p7g0yEckBkKJn6ukreCFXkEFJ
STfWmU9JTVdxolvG/i1Pr5zi3klQKtIt9Z7XV36XBEUuH4OSko7UeXAVz0hJ
l63l9pU2WmP+4cXFWmxgV+7u4F/c3RmnedK2tPa8vpKSoOhh5/z3kJL2VXvK
fU508XPvoOrrue7WsMLpW3dcu3X9rPlP/uTf9/B3ZX/e5ec2/u53/66Hv8f0
9mM25BrP6y4pCYo23dvQDylpR7U77ucztZ3SquP1/yz54/Ojh78OU1LTFUlJ
V5KSThfdkLPOk5WLn9iZR9p8cVM7ISVBkZQ0KClpU4W7n3pk6jylbcfrHzEl
bdrAI6Skx5CSTpfakOX8g0Fp0/wj5jqbflbzmF3/JSVBkZQ0KCmpvjYpqcOU
tGkb+yQlXUlKOt0jU1Jvi/RMSoIiKWlQUtKmCqWkDlPSps3cx7OkgeQH5taU
tBrvL0xJxRPd1pS0qjB6Ul2WWU6spqOFw5epRkYLhyVTDU41I7/SzPxBSUlQ
VDyR0icpaWud4QX9YIWnNOx4/dPIKWnTlvZmqkhJ8/G2mv6+rCn2tpSUuePd
EWei0+9JSZ/sJT4zP9wL06/ZZ/UyM5EpEJZZFYtmlkyrosXqm5FZaWotQ5OS
oEhKGpSUtK/mHSlpqnZuU+tLpjLLUjg/LBwtsyofXVxKykeY4nT+rXempNWY
mqSkjVa9F56jUhsyJXLEspKwTH5iufYpiCfhnFQzioVXJcMGV9aTqjCcOS4p
CYrCMydDkJJ2Vz7EMV/fwmhgmWNLcTo1c9OyR1LSpo3typGUNP3hsZGUNIum
pOVd7lkp6Vvn6mV9/aP0diY4ZAp8EkkhmjJqgkY+gLRLSalmVNYjJQEfKWlY
UtKR+vs/7IvNW95DnpWSiuUz6zqSkmq2t0NdpaQ32JGSwmXn6e/E6uXWaqOW
R8i9JaMH7VwsWuBTFx/CZYslw4lobfnyxcKpt2qaka8wNXNcUhIUrc6rjEJK
GmItu2VuYMJ7oROfJU2xQLR6K7O6t6lPMfm4lCrmWdLy3d3PklbLzpXv+ybe
KL09BeEinBNdKuz56Q9BI5wfnbPag9GXqxpWtUXLp1YdtiRsT6r90WZHV5rq
sXFJSVAUPRXQPykpX0M/TumETG1TNiUtVX7jbgoy0WrxFs+SolvduelYSppJ
SV/5gTOdlJKmxLOkp6ak/KnjYOXH6xnLw7ZUSoKiIzdy3EhKytfw+9//2x7+
Dt6H1EStfErK5KBNKanyWdLujV1uzvFKrrE7Ja0WnNJfw3thSsq8uzslRRPT
dOAbd1d2y241p44jlZ9Sz1getqVSEhRJSYOSkvI13J6PjqSkmnC0LHxuSgof
HuUXlJLqg1I+Je2LSI9JSXlbU9I8iFZzfhf8XmlV7DEpqejghmw6Te2r/EiB
Fh6z67+kJCiSkgYlJeVruD0f7UhJq7uOy1JS9FFRNCXlg9JZZ5JRzkj7UtK8
l1MvpaSorSmp3d9jervzlFEsvPVUedxjdv2XlARFUtKgpKR8Dbfno/qUlPpI
9mBKmgKZ+asyq0gVXbxdSqrf9nvtSzQt/oboroOkpNNJSVs9Ztd/SUlQJCUN
SkrK11AML0up+fO7q5LhgjtSUiocbe2HVEq6/u/cM0n/5yUp6UpS0ulOH7Dz
CS06vTrjhSfAsMDn11uUsHx0qegip2zsY3Y9UCl/n0a3pKR8DTX5JZyumVhN
b01JxXC0tR+empLqe+Au4e3fje7ujObu7uBf3N0Z5zhxQ6Zfo82q8pp3U2Uy
y9avdDopKD1m1wOVnnTOfxUpKV/DvpRUM6em8jAl7bi/qizc5jZwpz1763AP
ADucOL7Cqqa6uPRZpKFVJas54XkmM1F8dwenI3ihFvc2XEBKytfQKCXV1Lxa
avcQu2ZgRtfSz2mhk2bAI501vlKnkU91SpqnV2UyGUdKOsjvkqCon9shNpGS
8jXU55evmpS0NSLNS93VDwdX1MnJoYc2wCOdnpKiD4k2FUtN1DxCkpI2kZKg
qJMbIbaSkvI1bHqWVHx55FnSZ+8ouz0lze/efoq4vQHwSCeOrOiJYjVn9aio
8mU4kSpQWc/uDdy9bJ+kJCjq4RaIHaSkfA2NUtLWoLT6bHPTcOskJc1l7j1R
OE1BC01H1mOG7WM2ZElKgqLbb37YR0rK19AuJW0KStFtqYxLVw7MynXde7pw
poIWGo2sxwzYx2zIipQERVLSoKSkfA3F8LISfTc1J7pUfUpatjNToMOUNBe+
5aThTAUtnD6in3Rf8ZgNCUlJUPSks9mrSEn5Gjb9eqjdX/2X2cKS3aakeZHr
Tx1OVtCIwRV6dp9ISVAkJQ1KSsrXcHs+qk9Jy2Yvy3eekuYFLz6BOF9BI6sn
7Hc35x7v6QEpCYrecCp4JCkpX8Pt+WhHSpobf8s1+sjqLm6tUxZcYHqlu3v9
OlISFL3ttPAYUlK+hn4c3IqDXbFpdcdruKzBV/YMwPNISVB08Z0YZ5GSHm9a
/D8+LuiTs1YxVmsB3klKgiIpaVBS0uOt+uGCuHRi5YISQM+kJCiSkgYlJT1e
qh/ajdlzq73g3OJQAdhHSoIiKWlQUtLj5fuhxaOlFj0/0PMvgPeQkqBIShqU
lPR4lf1w7hBu95Sq3W51wABsJSVBkZQ0KCnp8Tb1w1mPllo/9xniu4IAjycl
QZGUNCgp6fH29cPBuHTNv7pw+locMwCbSElQJCUNSkp6vIP9sHtoX9P/9/6o
yjEGAORJSYOSkh7vlH7Y8Wjpyv6/60dVjjEAIE9KGpSU9Hh3/bvc1/f/iWeh
Hds4r93JEACYuTEYlJT0eO3+Xe58zXf1/1nnokwlU8xq1Q4/4A38LgmKpKRB
SUmP17Qf8gP/xl1wyhmpWMOqwOrR0sG1A/RPSoIiKWlQUtIbtO6K1KOl23fB
wfOSlASQJyVBkZQ0KCnpDS7rilVc6mQXHDk7bfpWYYfbDtCUlARFUtKgpKQ3
uL4rlj/VuXjVKY2CUljSyRB4DykJitwYDEpKeoN7/yGFfnbE7sZkvllXMx/g
qaQkKOrqXoh6UtIb3PuvKHw6Oz/sa8zyq3RSEsCXlARFXd0FUU9KeoN7u2KV
LzrZL1tbsox70QW72jqAa0hJUOT2YFBS0ht0kpKWczrZO5taMv2qacMAhiAl
QZHbhkFJSW/QW0qa53dy3qhpxhS4pm0APZOSoMhtw6CkpDe4vSvyDegkdxS/
SiclAaxISVDktmFQUtIb3N4VlQ3o4TQSbYOgBBAlJdXIXD6iL1fXF5eb0bln
GJSU9Aa3d8WmBvSQQSqz0i1tA+iHlFQpE3yKmcjlZnTuGQYlJb3B7V2xrwG3
n1WKWemWVgH0Q0qqlMk+4eOksJgrztDcMwxKSnqDHrpidxtujyT5rHRLk4DT
zSPa0N5ESqqUT0nhy1Uxx+TQnFUGJSW9QQ9dcbwN9waTVFa6pTFAC8thXhzd
4Vdwb9S+b5KkpErhbpqCg22KBaKwGMO5fZyyj5T0Bj10xYltOH62ufoOJuus
boEa//Jf/pt+/u7ujLXleCyOzZ8Ffve7f9fD372nESmpUribpuqU5HoxOrtv
UFLSG3TSFec2o+aqkXr35/wfnx89/HWya3iPn9lk+jkCOvjrISWtTiNSEu3U
pKRP3W+UGI6UNCgp6Q066YpGzcicfFJvSUm8lpSUkUpMqcK35yMpaSCZvLPv
LQYiJQ1KSnqDTrqiaTPCR0uZbylISbyWlJQxf9+pZmBKSdSbAuFbyznRt2q+
QUGf7LhBSUlv0E9XXNCS+VyUuiR9pKSs+lvETA4dyMO2t9g8KSkjPFFkOjOV
kr5LrV5+54S3ystiYSWpwl2lJL9LgqLOLxykSElv0E9XXNaS6D3G8t3b81Hn
KSkfB8L+7HBDKj1se4ubU5+S5n9j4TudKhAt/6SUlOrMfGxJvayZXr4MJ6Sk
nvV8cuBGDoxBSUlv0E9X3JuS5rWvUtKqzGpmNNrMb0ULZMoPl5LCc3vqjrHD
banxsO0tbk5lignjT7FYKkyNkpLC7sp35pSNLVNdGlrOzLzV8zfupKSlzNDb
VIaHsa8HJSW9QVddcU1jorc382lqCgLLcs60CErRXLOKP8WIFJ0eKyUtz/CZ
S/+FzTzNw7a3uDk1QSYsk0lJqzw1bkoKFU8j+WdJU+wxUGZmtMLMWqSkDmWG
3rJA6iVPZUcPSkp6g6664qzGZOrJ3NvM9qWkmjmViSn6GKt/mZ6f3y3WULmb
7i05F57S2zucz96UlI9F85ytKenu/jiq+I27KYg/0cWn9NfqMmuRkjqUOVo+
iVvl6Ewexl4elJT0Bl11xVmNOVLPdF5KSn2/Llo+WuEpvXGi1PV9WSC14CUN
PNnDtre4OUdSUpiGVhNveJa0fHdfSoo+S5ptTUnRRtKt1JF21UHNPTJ7n55J
SW/QW1ec0p5pWj8X+FSfiKbsM53jT46mxE+WonOOd8W5itf06PxxLwEP297i
5pzyLOmdKSl8t5iS5hSTST2rOfmXniV1LkhFvxw5qT3V58mEE3V7ySBPSnqD
3rriSHtS16DlKahY/1QXfyqLVaak1Cp2d0UjNSfz8NLf4YZUetj2Ftt25HdJ
mWdJ4ZfxHpOSMu/WpKTUsyQp6ZGKyTq1VPumcaeerxpkSElv0FtXnNKeVSU1
n9ctC5yVkuZA9JVKSal41duuqZe/GXiex2zvvn/jrjhRfAg1YkrKS+WX+SCJ
fssufGs5J/9SSupfMVlHo9PQpxRq2MuDkpLeoLeuGDQl1WefVLHoeo93BdTb
9/9LCmcu/6Ske/+kpIGs7pbdPL+EHT0oKekNOuyK400KU9I8Z2tKmj+wjc4M
342WT6WkVCVSErfYFGSa/klJUtI7rS4Kny6v0ZxLShqUlPQGHXbF6U2arzU1
NecDzvG/+vo73DVUGvSqJyWdRUr6kpKOG/FMwiaDXi+Qkl6it95olJLqC0tJ
HBF9cDnE3pSSzhI+br7Rjf0gJZ3i3p1Ia7ePU/aRkl6iw944t0mbarvtVibm
xE7gess9OMTejP6w6K6/uzuDE0hJpxji7MFuLveDkpJeosPeOLFJdyWODnu1
tWVXi3ufX7/q+fKu4J2kpLM4dTyYS8OgpKSX6LA3OmzSVg/YhB1ST09e2Bur
TX5hD4CUdBYnkAeTkgYlJb1En73RZ6vqjd7+ffIp6T3PU+btXc2BV5GSTuQc
8lQvuSw+j5T0En32Rp+tqjd6+/epfJY0euesvluYenf0zQT64XzyVC4Wg5KS
XqLP3uizVfVGb/8+q2QUDQuj90y4jTc2BngPZ5tHch0ZlJT0Et32RrcNqzR6
+3cofsds9MtB9MnRLS0B4AFGvyy+lpT0Et32RrcNqzR6+3eo/CXOuD2T36hx
twta8LskKHLtGJSU9BLd9ka3Das0evt3eG1KmuePu2lwOikJiqSkQUlJL9Ft
b3TbsEqjt3+r1b9pEP1F0uiXg+KzpKG3Ds4lJbXgJPMwLhyDkpJeoufe6Llt
RUM3nqjU75I8S4KQlNSCk8zDSEmDkpJeoufe6LltRUM3npTotwqlJAhJSY04
zzyJlDQoKekleu6NnttWNHTjych/n9B+hy8pqREnmSdx1RiUlPQSnfdG583L
GLflAMdJSe24vjyGlDQoKeklmvbG1JN2m5na9ovXCNAPKakd15fHuOX+hOOk
pJdo2hs/K//x+dHDn5TElW76JKAXd3c/XZCSmjLQnsE5c1BS0ks07Y3pxSnp
40h7HzHhSz/wkZIaM76ewalyUFLSS0hJTTf/+pVyF7s7pE/eTEpqzfh6AClp
UFLSS0hJTTf/+pVyPZe5DJ3zWlJSa0bWAzhDDkpKegkpqenmX79SrmdH5+mf
d5KSLmBwjU5KGpSU9BI3pqT5xwvf6dXM+a38/FU9UhIXs5dr6KUXkpKgSEoa
lJT0EnelpDABpd7KT6cKSElcwC6up6/eRkqCIilpUFLSoLZu3S0pKZy/OyXl
q5WSaMourqev3kZKgiIpaVBS0qAGTUlHEpOUxF1Su3j+FmiqTObKeO5hs6+2
ZfPOao/h8DZS0mUMrnFJSYOSkga13Lrlfdo1t2Rh5TUpafXDouLvj8K3pCSu
VzOm7hp6x53evM63F8ZlcI1LShqUlDSWKeZT8ZlwDykp9ZwoTEn1L6UkWqsc
UFJSowqBmfE1KClpUFLSoFZbt/pYu1j+9MZck5LyEemulPR5+sH2clsH1Opq
uPz4IvxYIz+Rb0DqQ5Lopyj55mXWvqoz3U9VnQMcYXANSkoalJQ0qCFSUn3k
yUShMEzlV9duM/M9cMt6ucCmARVGm1TkyU9kMsvWtSzf2rr2aIEiw+FV/C7p
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
vKP3eVtU75Rtl5IqZYJPMROdsqd2p6Sz1n68kttXsZtL/6CkpBfSM03VdK+4
xKCed9A+b4vqSUlXymSf8HFSWKxFUKpf6sRiF+inJTNX/EFJSS+kZ1rbdPWp
OXk6wdKJ1b3cfP827vH5vC2qd8q2S0mV8ikpfLkqdtYBuTUo1a+9nyHTT0tm
LzmlPI+U9EJ6prUdPZy/bO349A9ONMV8fr30j3VwPm+L6p277VJSpWJK+iQi
yekH5PGUFB4zqwqjL1cTq42qfCtTT9iS1PT1blw1R0hJL6RnWjvYw+HJPLyf
gVuk7t/Ct0bxvC2qd8q2S0mVwi6NxoGwZIuTf32FYSNT86MlKyNPzVuZemoa
EG7ClVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6mVYw83b86tTtmi4rcub
9m770ukp6eau/NXBbVltV2rO9GvPT+kd0bpJ0TLR3ggbn9qcGydSM693+uHE
NaSkF9IzrZ1+Ictfvn9O//j86OGvxaH1s85//I//px7+Gm3d7Xtt074L75Qy
NyE/5/zpn/4vPfxltm7TFq1K/sN/+L/28Lf7yNy97UstUtLf//v/ew9/TSNJ
ZRRqmpKKahrWeUqaX0pJ7CAlvZCeae2alLS8Itx+jy0l7d662/fakX03335E
Fx8iJW3aolXJ2/PRwZS0e9uXpKTKjYqevZdvLedE3wpLtiYlnUVKGpSU9EJ6
poV8kGlR81z/NPiddnHzb89HUlKm/fl3b89H+1JSZcnb81GLlLSVlPRUxYwW
XolShVNXruVE5q1UJcXFl01t11E1wiYxBCnpnXTO6aIn8OP9XFPJNPiddnHr
bs9HUlKm/fl3b89HUlK9ffVISfTv9l0pJQ1KSnonndNCi5RUud7b77F332kX
e6k+Ja16voeUVLN1t++1g/sus+BwKSn/cXRY+PZ8dGJKuuyUVdOxt+ejIymp
8qOtCy4T7sy/eugE+2JQUtI76ZwWGkWkYoXfO+3Vquvvjefy81LRqlL1r2o4
snXRxacteWdZeNOCTVNSfuu2Zpn6vbzpYGi0dXNI+QrDyzx/CoQLhvVE64wu
2GLrtmaZlWiBG58lXaOmY7dmmXDOUr5wo5SU38Dl/FSx44otebx+NryflrCJ
lPROOqeRFlel8OZqtYppEWSWN701N8arO+rUW6mZYQ2nbN2qwGNSUnTrdjz0
qdnL0b3WNCVFt24ViKIpKRp5pkXASWWi+jobbd2OOBOdzs98dkqKduzBlLSa
OU9/13VxSlptYLi9qZnHFbu6vp7T2/Y2jXYxrUlJ76RzGjl+PSrWGa5i2pWS
wgKpxSvr37fJ+U37nJSSvhWuXm6q+cSUtNq61impvtoWWxemleKc6LOh4rvF
R0sttu5IStpXoMOUtPV3STUduzUihYtMsZR0y7Ok1Qam6myxE4tdXV/P6W17
mx3dTg+kpHfSOe3suwzVVJi6zE3ZFPMtvMoyq5mVt+LRmcuXmYvyPp/tKWkW
xqXvxOrlvspP3LqzUtK3ztVe3lRti63bl5LyxfalpBZbtzslLSe+06v/bqr8
9K270aezlNRoG+vP8+FSZ5WsvwB93DMctqnP6YeU9E46p52t16DK2jIXuCn2
06FowJkS0Sm8rw6ryiSsec6Ora7Zuh3PklZLzTWHz5VG/MZddNdkIm1ltS22
LpWApkQgmuW/VnfXs6RVgR0pabaauUxPW2vesXUnOuVZ0qrAjq/bTcHvj2ap
9HTXN+5SS+1Y15GW1FcSNm+uagpCWbRAqiW7WzWcl2zm80hJ76Rzmjp4Pgyv
aPlr3JS9Q54XDB83HHx+FL17P7Kxqa07mJJSMzfVfEpKyuy7TXEmujuWO/qW
lBQtsDUlnfssaVlhi607/iwpnN5X7datO9HBlBQtsO9xT00a2lr5jg7Jb2D9
zOOKXV1ZyWpiWflnkYPC8pm3wvqfrdEupjUp6Z10TmuberjmtiFzjp3SKSmc
CG+ne0hJ+QI7UlI0HE2Hv3HXYutOSUn5Pd40JeUL7EtJqaSzKSWtplts3e6U
lJo5veZZUr7A1gdJ9d+sq6/8YEqqL9Du/vmUmlPXpunXyBMW2zTxeO32Mk1J
Sa+lfxqZflVTrKbO/Lup2+bVW6mX+UBUeePd6Cowbf//JYUPjKaYC75xV7N1
u1NSfS5ulJJqtq4mv+QjT6ZATVVzJS227mBKmoJMNMUeNj0sJRVNg6ekym3c
dAm4y5RIRp9YSsosG25maqmn6nxHkyIlvZb+aWF1Jly+bHdZnH79lxNWsSUq
WiacmS8Wzm9xUE0N/v+w+/4abd3WLBPdNand3UlKmtsTRph5ftj46IL5l6v5
y3pabN3WiLSynBmdlpJqvmsXvly9lVrkxpQ0iml7SspMhFW9p4e/B97drWAz
Kem19M/poqfB+brcdL1bn0c0+mt0L3p7PuonJQ2376I/Jrr+r4eU1O7vnSnp
gr+XXyVXF6/ly3D68+sVMLPssv7LtuV2UtKgpKTX0j+nS3Vp665+/J327flI
Stq9dbfnIympNSmJvOgTqM/LbkKkpEFJSa+lf053Y0rqh62zdbbueqdvXb0W
Kakfp3TRy02xZPS2vnU4DUpKei39c7pUl+pq4KlOT0lcr/VFapk635kX3rnV
DyAlvZb+OV30NOjcCDyYlDS04lMzj9VOoQ8HJSW9lv5pYXUmdGIEnk1KGlfl
dwtdxY5zMzAoKem19E8jvtYOvIeUNKj665QL2XHuBwYlJb2ZLmpH3wJvICUN
J/g3KmpT0vK3RfveCifCVkVbOxeOfmEjVX+05pq1nx5qpKRBSUlvpova0bfA
G0hJYwkjUn1K+mSTTv6tcGKVfaKrixYOl4qmm0zNqbWnqj1OShqUlPRmuqgd
fQu8gZQ0kGhE2pqSWkwUU1LY/k8seoT11DR+VU99z9STkgYlJb2ZLmpK9wLQ
ldFTUmqLUk2tbPyynhbXbilpUFLSm+mimotFqpdWn2jVLwgANxo9Ja2WWk7U
1JyvJx/K9pGSBiUlvZku+gSdkDk/p2ZujVcAcLualLT6PHA1vZyZemtVT75w
9BIc1pNqf7jeVA2pxodrOcXpFXINKenNdNGnFIvmE2n9IvmZAE/id0lDe9h1
qtvNkZI2WSXZykUyVWXqr6znLFLSQHTR56SUVFkzwMNIScN58LWp202Tkuqd
/lAvE6B2LHWQlDQQXfSpS0mpmfPL1IcVZzYU7jO9293d3zUpaThPPaR7HrDd
Nqw3YS8d77dUDfmaG+0vKWkseik/JKN3SpWjWN8yup7vOq6kHzKkpLHUH8at
D/vdlY84Ep1AKmV6KXNAzvOXE6s65zmrMss6V/Ws5qdq2ERKGoteykSe1Vup
+dE5qZkwCgdwSJ+EpKSxbDqGWx/wmyJb05a0JiVVqnnuk7/jCiNMdM4nyEfF
iWidW0lJY9FLqSi0+62a+dAzF/QMnbMiJQ1k66ErJZ3FeaPSKSmpciIVf1IT
qZmbSEljeXkvTYHwrejL1bKZ+ts1Hhpx3ObpnyUpaRQ7jtviJW/5KX3qo/v8
UvlKwhoy1+VVtV3J3yowC3sp3KfR42rHRFhnfiI1cxMpaSx6qSndy3ActDX0
0kxKGsWRlJS5OUzdqWZubvMLFtebv8XtMyhJSfWKqSTak1LSVg7IGnqpKd3L
WByx9fTVl5Q0hH2Ha2VKqixff2tas5b69fZAStpk9ZwoM3P11rLMpjnhKlLz
8y0pkpLGopea0r2MxRFbT199SUlDOJiSPun7fCmphpQ0qNNDjZQ0Fr3UlO5l
LNGbk+j1PTo/U+z453K7b/Ma3TgZ3V9SUv92H6s1Yyc6xM5KSQfr6YeUNCgp
6eX0UlO6l4GkDtdMSqqpIX8zk1nvWRrVb3R/SUmdOxKRaj7NmDNL/ccg+Q9P
wgqXL8My0RX1lkp6aw+VpCR0VDv6loFkUtInlmtW5aMzowtGJ9qRkpqSkt4g
87GGgVBDShqUlISOakr3MorrU1J+dKQ+GZ4C4VqirQ0nwnVtGrBG90dKegcp
6SApaVBSEjqqKd3LKPIp6RNEm9TNUjg/DCDFe4bUU6fo/OVbmcdV9YtUMro/
UtJrRD9G2PHZwjvppUFJSeiopnQvozieklL3Uak6M6MjVU99CKosmdmiIqP7
IyV17JTjczmaMhEpNczbpYOxRp+UNCgpCR3VlO5lFEdSUiYZZVJSZqXzu5kn
QZXNqw9WmZakmrd1keeRkvp0VkRaTqfGdXT47P7wobI9Y5GSBiUloaOa0r2M
opiSKqfzb20tkApBqZI7UtLuQWp0063jB+em4FMz57hxR5yUNCgpCR3VlO5l
FDXfmVk9fJlTxqpM6q1UnZvK5KeXM/OiixzvMbjdKUdmppJi/fkxnhq/YeX5
k0Cx8k3b29SO0wtXqrxqXOOyTb5sRf3Y1/7T+4SZ7mUUQxyr0693UPfWOUSP
8UKnHJmrSpa3GTX1T4nUs6xtNb2qP6whrCpfeT8jdPcdGtf4uXd+fH708HfZ
cXLlin6uqo8/Kak7updRDHGsSkm98buk3rQYF6s5p6SkzMxV3tmRkurbeQ0p
qXNSUtMV3R2ODqWkT09nkkfSvQyhhwO15l7iyKPzc+vsocduJyX15paUVFl4
U0o68iwp1aq7SEmdk5KarujucCQldU33MoQbD9QWT4guMFBT25GSunL6pwep
l8UxKyUtSUmdk5KarujucCQldU33MgQpaauBmtqOlNSPFgfktJB6K7NU8WU4
HU5k5tdUfnqf7NBPS4iSkpquKBNblkP81+lP+q0VKWlIwX50kqRrLY7P1O1K
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
tECUlHQK4+vZ3FnVK6aPVJIqlpeSlhyQ+4SxHRqpSUmbks7xZ0mr5m0aCNEP
tQ5eHKUkOiclHWdwPZ6UtEn4nCg1M/XW6hK8FL67qiRaOL9IsYUzKWl0U3Ui
hoNWsWWl+JAoU764VFgy08j8WMicWucCR7ro9nwkJZEhJR1kZL1B8TpCn04P
NVLS6KZYGIcWotHmlr/icV4zFqbgg6/o/K1ddHs+kpKioun4Ljf2g5R00L27
j2vcPk7ZR0oiNCVu9uBc0zgpaW5w/buTlPRoPzvkH/yD/62HPylpXIbVS0hJ
g5KSCIVdZ4DTwiWfstfa1ObUW9GX9ZVH68zElq/VdP1bUtIRk5T016QkKNp0
laEfUhKhyptAOOjnEfV3/+7/2cPf1mO78pK3I4WFNeSTS3E6/5aUtJuU9CUl
bbLvwxlGZ3cPSkoilOk6I50TjZuS5va3Hg47UlK4SOYtKWk3KelLSpoVTwir
Aq6n72FfD0pKIlTsOn3LKUZPSfNWtBsRW1NStHz+rcy7UlKGlPQlJc3yz4nq
Z/I8dvSgpCRC9V8luqAxPNgzUtK8LS1GxKaUlCqcemv69cdKUtImqZT07czV
y++cKZCpIV9GSupQuH+nX58cpZa6qoHcxi3ToKQkQvVdp5M54kkpad6icwfF
ppS09VnStOWbeAb7Sia/rN5ahaZUsZpFpKSeRVPSfE6Qkt5MSupcZvBe77JN
vmZFz7Op667cpzzMtEhJ8/khzC/h/Jpi0ZNPqoZzj+ETa5ta/i4ps4iUVDRl
M860PRkdSUkMIXUgXXzocr3MAUAPfu6df/bP/oce/i47ThyQu+3oOr3NDlMQ
VaZE/AlnRp8HRV9GJ8LCp2/aKXVOLf+Nu+nXlFRc1/HNeZKp9CRoLjDFIk9q
5mpZz5IGkk9G0XOCm+eXsKM7JyWxyb6gpM/ZJJprpuCJT7FYJjrVR6pGG3iw
5kxymW/DVtP1b/1+8Yuk5UwpqUYxJYVxafXcJ5+MwpJSUudS+WhVIPWSB7Ov
Oyclscnu3tPt1Ht8Spo388iAKn4X7po/Q3tld0qKPkta1ZZ/2VVKYlYz0otJ
ikeyuzsnJbHJkd7T81SKxp8wB+WL9Z+S5o3dsRYpqVs1KSlMQNGlpCR4Nimp
c1ISmxzsPScEauxOSbOBUtK8yal1RedPPWncN4OZDv8bd6uZmWKZdUlJ0D+n
0M5NiZQ0X/6iM5fvrkqGC6YqOTcl1S/ugDzilN6zC8ibtqek1CKjpKR5w8M5
0cvozzk/Pj96+DOcV1LJZd6V0W/Zrd5KFVjJRKTbU5LfJUGRlNS5VEoK0004
c5mMMmVSiSlc6uCGnF6S0Fm958xARmXk2ZeSoiGrk5T0SfyOW0oaSDG8XPYn
JUHn3At17khKyuSd4iJNU9J81KXuLo6s6OXO7T37gqhVxvkKM848PywTvpUp
k1rXLSlp7oHQqsDt+UhKipKSvqSkpcxwjr4Mx/t1beVC0dtU+jHtTUlT9qnQ
jrS17zhJ3UssDzxnmxOd3ntOEYSmxHfkrv+79+DM31ndno+kpKjoVekuN/aD
lLQypW9FMm+l5vAMt49T8qbtKWm2OyWtFm/xjbtN5x/qNeo9O4WlSUpK32zP
796ej6SkRp7RpVLSSib7rG6VozctzzgqWJGSOrcjJZ3yLKnpN+4+UlJL7YKS
XcNX1afkV+mwEz7ZlDQXW03XvyUl3esZXSolrYS7dVqkpPDlqtgzjgpW7r3K
UDQ98XdJH9+4a6lpB9o78CnlxE/pWdLy3dR0/i0p6UbP6FIpaaWYkj6JQJS6
meEBpKTO1aek6Q//7nflzItTUrhdH/96QxutO9BJg87deHwus9LWlBQuknlL
SrrRM7pUSlo5kpKWn5DwJHZr5zIRZiU1MywfrSdfrFFK2voWNa7pQLuJbvVw
cG5NSdHyqbeWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIO
tKfoU/SW5sSLXc3nxptSUqpw/q3KZ0zG6UHhx48pd7d0GylpJZN39r3FA4w4
tF/lkSkpf01xQB50ZQc6gdCP1I3r8ig9PShlVtruWZKUdK9ndKmUtJTJvNE5
0bcGzctk2KGdy1+LL3bZJl+zoqe6vgPtMroyVX/we2QV+VPl1Ph3SZOUdJ9n
dKmUBEVX3v1yot8W+qxwNwfkQbd0oDMJ/bgxJS0LbE1JYerJvFUZkaSkFp7R
pVISFLm3GZSURMqNHWjf0YMwJU2Lr8SctYr80/ZMhJnLr6br33ptSupkWzpp
xkFSEhRJSZ1LfWJ5i8s2+ZoVPdiNfXjloQI1plP/9YbK0+N04N/ursw+9SWP
b3UnOtmWTppxkJQERW5pOtf6UrvponzZJl+zoge7vQ9vbwDMjh+N0TSU//hI
Smoh7P/PHbcxz+hSKQmKpKTOSUns0EMfOrfQid3HYTEHZWrOPZW/3L7N70dq
o5ZbV7+Z1/V7hVZdVkFKgqLbxyl5k5TEdv30YT8t4Z223o6edQf7raCPv+eM
wdW2LF9u2sW3X08vvqoC+0hJnXvh+dwBeVxXfegkQ/9O/2xfSmpBSgKu5Aam
cy88nzsgj+uwDztsEi/X9ItPUlILYUqa50hJwOmkpM7VnM/nC/2Pxf9qcCVV
fjmzk/O5A/K4PvvwjK8w3fNjbZ6kXTIK1nJ7PnpaSlqJnhCKO1dK+vK7JChy
v9G5mvCyij/R1BOdP/36f+Lo5HzugDyu2z48eMLZ99ExNH1slF7j7fnoFSkp
nJnf3Vs/e8y8W3Pp7OGqGiUlQZGU1Ln8GTh8N5WSfiweM6USVifncwfkcZ33
4e7mrT4xPqk5PNbFyShYdTK2zO36dbr+rfCllPTHmaFVgcoIU//5pJQEjyQl
dW5rSqoPUJNv3D1a591YeeZZ3eRISRSl7o3vaEYuuVRMVxYrBqVnjpTUXo6m
pNVpREr6SElQ4fZLCXktUlLxXSnpAYboxq2NTCUm6CEZLe1KSeEiqbe2pSRm
n10paVp8xjhlv5UhJcGTzOcN+pQ//WbeDd+aPEt6k1G6cdMpaL7JGWXraGp1
99uVb6O2pKRo+dRb8/z8Wp78LCklFY6WBTalpFQyWpKS4JH6vL4w25qSVlEo
fCv1CZiU9DBjdWNla8faKBrpNhktbUxJqcKpt8KQJSX9/zL5aC6wKSUtg1Lq
irkvKElJ0Ln+rzUvVxNealJPND1JSQ82XDfWnIuG2yjOkr/v7dDGlLTvWZKU
FFE8SKSkLykJiga66LxTzbl3vnkI54Rv5cv3cD53QJ5i0G7MNHusm2ROMe5O
356S8mloqlhcSqqyLyVVfg4pJcGTDHoBeo99594Wf1LSWMbtRiell1t+vHN3
W/bblZLq05CUtF/NVXX1yeFyIqrzq2qUlARFo1+JHk9KYp/Ru3H09rPJM5LR
Uja8/HFbf53e8VYxIhlKay+8qkZJSVD0pKvSI6U+ubrFZZt8zYqe7QHd+IBN
IO/ic8uVvpvV7G9T5Q/s3iMmKemvSUlQ9NQr1OP9ttBnhfs4Gk/0gM50gnqe
6z94uYWU1C0p6UtKgqLHX6qeSkqi6DGd+ZgNebM3JKOlM57en+buzujL3Xvj
Fzf2g5QERbePU/LuPYGv5Bt5ysYer4TZk/rzrGOMK9WcPYBbSElQ5PrVuanj
7wZUZqhNG3u8EmbP68/nbdEjSUbQPykJilzLOtdnStr0pKlyMx2HK3ue9jVz
d2f8UW/t4evg0XL8YKtc0PEDX1ISFLlkdG7qLCWdfiPtCEz5dkwff3fuoP6j
XH0LL3DXth+sJDrdyPW9xPM4iuANbrmwUm8aJyUNcVM3kG/39PFnN+X87J+/
9bf+7x7+rtlTp4/fiw8wxzPHOYrgDdypdq63lDS3St5pTUoaxUtSUtORvqp2
XlFqYi6fOReFy0bXBTs4iuAN3N/eq9j/+ZQ03xV8p5dzlm+tFknVUJ+Slo2X
kvap2fV3hyMpqcqDU9KVAzyVZaKpJ1UsfCtaT5st4EUecBT5XRIUub+9VzFo
ZPLL8q1l0glzULRY+NbWlLTaipb99EA1u74YXlZ1/Dpzx8s7U1LlUVTst+sb
Nj0uJV3ZveGqixOfdCZKvbXcHCcrjnvAUSQlQZH723sFN7rr3TElwks4f0qk
pEwaSk1vTUnsULPra57yxKbDieLMXlJS/v589dY1p69iw6ZHpKRi518jzDLR
dDNVp6R8PbDPA44iKQmKbr8mvlz0Vnm5U6bqlFQToKSkftTs+sMpKVoyX6yX
lBSemqInqwvOYDUNq08x4Zyv8GV0vaenpOgWXWy59uXxn5oovqys8DLRXfke
F/f2NR6wXVISFD34JHaBCy4uU08pict8Tk5JYbGayu9PSXNvfNK3Ja2bV9Ow
3SlpNTM6HU4cTEnhJtwr1Z5Mn3+2fKcuX087XXXyjR7ZDw/YHCkJip537hpL
8fI9tUxJq+xT8yzJAXOWml1fl5L+uHQiJYXv1tScWss9PtmUdHvD6iNSWHgq
haDK+ospadlmWtPPoSf1yQO2RUqCIhfNe4V3XGGBrVEo81YqXqXWkvrGnWPm
uJpdv/FZUuXMaaBnSasCqQVvb9jxlJSp5EhKyh9jtKC3Mx7TOQ/YCikJih5z
yhpUsf8z+SWVfabgaVH9k6bKlFTTcvJqdn3LlLQpKHXxrzdE519wHNY0bNPX
7Vblv9XWLFifkiSjG+n2vGf0zwO2QkqCIlfSzuUjzHwvlPn1UKZ8WKA+Jc3N
u75PXqJ9SqoPStelpE1lrjl9FddSn5Jm7Z4lOaXfS+fX0Es9kJKgyCW1c/Up
pvVf6jhxCDVSEWH+eFOcmDkFZfIv70xJlabVVnWgJsVEk1H+GdPulHR3f7yX
zq+nr24nJUGRq2rn+k9Jczsv65OXqAgvl/3ZuTlnpaRUINqUkj4G4330fD19
dTspCYqkpM5NPalp6jXd8gbf7uzjz27NmSr+ge6v8GXmrdScYkr6uAW9Sabb
V6fH5Ul165k2rHbTgvuOjWX9pxxdox+io7f/IyVBBXe2g/ptoasKHU5nkZJG
URlhLvhb3Yff2CcvVPM5UurlkR132U4/t/LRj8/R2/+RkqCClDSoblPSx0F1
kvAT5hvd3Rldm7pMSZ9H3MgNpNjbq6GUmj6y3qZ7/NzKRz84R2//R0qCCm6B
OnfxzXDe1pY36hPoyt3j8hfRtt3SLW9T7OfpD9+vC8tHZ0YrD3dotJ5VgXmp
5eLRg2dVW1h5WFW4SOVRN/SROXTjv6QkKHIN7dzPvfOv//VvPfztOE4cXdAD
w/AClSnpE8SlTylcRPNIdNloTM6vPcxfmQJbF8kb+rAcuvFfUhIUuY/t3NAp
ad6Ec/sE2MowbO1gSspXkrlSr+aHL6MF6kNQZcmarci3fCxDN/5LSoIiKalz
D0hJH4cZadFPwpcv8x+VU0/vNVWfkj7Z3ygtC4RPbYrrjRZLhZ1MUqsPR5k6
84Y+IIduPFDJjUfnnpGS5m05pU94mMytWn6arfReO5tS0mfjUb1KLpXVftKJ
JprLogV2PEuqNPTROHTjgUpS0r2K/f+klFSzvbzQjpTk0dJuOq2R4pk88+ym
5kKwLBxWm6pkNX/5Mj8drTwqukhFh419KA7deKCSO417rS4x0QL55PL1nV7O
Wb4VLb+ceVlKWm41fE3bU1LqJTV0Wgtj9WpmTF1W51g9tjJ047/8LgmKpKR7
TbFPBVcFMrFlFX+iqSc6fznz+pT0ceCxsPpcep6ZL/B5xI3KXXTd6cbqUinp
oKEb/yUlQZGb1XtFO3+5U1IRJpyfSknFObekpMzm8zapUVAs4Pg5Qu+dq7f+
LA6Q6CcPp6y0ss7eeuxtpCQoesmdxvSr1PzQBSUzrf1sSUmVmairlJTpBN4j
NQryBYpvUaT3TtRJZ1YOnB503rzHk5Kg6PH3qJ1v4KptYWsfn5Ki/cCrSEk3
0oFn6aQnpSQqSUlQ1HmIOGKITZsfGGWeK52ekvIvb0lJn+37K/Wo7hbtuuXx
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
AKBU/+YbAADAD/cbK4B6rw==
                   "], {{0, 761}, {1122, 0}}, {0, 
                   255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}]}, 
                Dynamic[$CellContext`i58$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->Automatic,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i58$$, \
$CellContext`i58$1096135$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 15, 1}, 15, 1.]}], 
         
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{851., {305.6044921875, 310.8955078125}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->"Out[311]=",
 CellID->1509656058]
}, Open  ]],

Cell["\<\
We can set the ResultsFormat to \"Movie\" to output a movie version:\
\>", "MathCaption",
 CellID->596901522],

Cell[BoxData[
 RowBox[{"KEGGPathwayVisual", "[", 
  RowBox[{"\"\<path:hsa04662\>\"", ",", 
   RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Movie\>\""}], ",", 
   RowBox[{"MemberSet", "\[Rule]", " ", "membersBCellReceptor"}], ",", 
   RowBox[{"Intensities", "\[Rule]", " ", "intensitiesAll"}]}], 
  "]"}]], "Input",
 CellLabel->"In[232]:=",
 CellID->1227765117]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Tutorials"
}], "RelatedTutorialsSection",
 WholeCellGroupOpener->True,
 CellID->415694126],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[ButtonBox["MathIOmica Dynamic Transcriptome",
 BaseStyle->"Link",
 ButtonData->
  "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"]], \
"RelatedTutorials",
 CellID->795520170],

Cell[TextData[ButtonBox["MathIOmica Overview",
 BaseStyle->"Link",
 ButtonData->
  "paclet:MathIOmica/tutorial/MathIOmicaOverview"]], "RelatedTutorials",
 CellID->1258435320],

Cell[TextData[ButtonBox["MathIOmica Guide",
 BaseStyle->"Link",
 ButtonData->"paclet:MathIOmica/guide/MathIOmicaGuide"]], "RelatedTutorials",
 CellID->1425023577]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"MathIOmica: Omics Analysis Tutorial",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:MathIOmica/guide/MathIOmica", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2020, 6, 17, 0, 53, 43.394386}", 
    "history" -> {"1.0", "", "", ""}, "context" -> "MathIOmica`", 
    "keywords" -> {"MathIOmica"}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Math I Omica Package Tutorial", "language" -> "en", "paclet" -> 
    "MathIOmica Package", "status" -> "None", "summary" -> 
    "MathIOmica is an omics analysis package designed to facilitate method \
development for the analysis of multiple omics in Mathematica, particularly \
for dynamics (time series/longitudinal data). This extensive tutorial follows \
the analysis of multiple dynamic omics data (transcriptomics, proteomics, and \
metabolomics from human samples). Various MathIOmica functions are introduced \
in the tutorial, including additional discussion of related functionality. We \
should note that the approach methods are simply an illustration of \
MathIOmica functionality, and should not be considered as a definitive \
approach. Additionally, certain details are included to illustrate common \
complications (e.g. renaming samples, combining datasets, transforming \
accessions from one database to another, dealing with replicates and Missing \
data, etc.). After a brief discussion of data in MathIOmica, each example \
data (transcriptome, proteome and metabolome) are imported and preprocessed. \
Next a simulation is carried out to obtain datasets for each omics used to \
assess statistical significance cutoffs. The datasets are combined, and \
classified for time series patterns, followed by clustering. The clusters are \
visualized, and biological annotation of Gene Ontology (GO) and pathway \
analysis (KEGG: Kyoto Encyclopedia of Genes and Genomes) are finally \
considered. N.B.1 For a more streamlined/simple example with less discussion \
please check out the tutorial on MathIOmica Dynamic Transcriptome.", 
    "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$77474, "title" -> 
    "MathIOmica: Omics Analysis Tutorial", "titlemodifier" -> "", 
    "windowtitle" -> "MathIOmica: Omics Analysis Tutorial", "type" -> 
    "Tutorial", "uri" -> "MathIOmica/tutorial/MathIOmicaTutorial", 
    "WorkflowDockedCell" -> ""}, "SearchTextTranslated" -> ""},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 18, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "12.1 for Mac OS X x86 (64-bit) (March 18, 2020)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[1766092, 43266, 790583, 12967, 70, "Output",ExpressionUUID->"df73a229-ba4a-45a1-ad4f-a021685b998e",
   CellTags->"RasterizedOutput",
   CellID->1180637275],
  Cell[2921815, 64156, 519146, 8518, 70, "Output",ExpressionUUID->"c24657be-0934-4667-a6ad-5a676bb69728",
   CellTags->"RasterizedOutput",
   CellID->1003128316]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 4014648, 82226}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[607, 21, 8932, 185, 70, "AnchorBarGrid",ExpressionUUID->"47bbaf22-4734-4cfe-b134-8cd9067b3ab6",
 CellID->1],
Cell[CellGroupData[{
Cell[9564, 210, 72, 1, 70, "Title",ExpressionUUID->"24540cd8-a03a-4d6e-9849-66cb4c7e423d",
 CellID->509267359],
Cell[9639, 213, 47230, 837, 70, "TutorialJumpBox",ExpressionUUID->"9512de11-6eff-49da-a051-3fc86b7bfa43"],
Cell[56872, 1052, 898, 14, 70, "Text",ExpressionUUID->"82082296-d01f-422d-9cb8-3ded99672ae4",
 CellID->2044157074],
Cell[57773, 1068, 573, 10, 70, "Text",ExpressionUUID->"42ca4711-b557-4da0-8134-34d4605c3178",
 CellID->985017158],
Cell[58349, 1080, 333, 9, 70, "Text",ExpressionUUID->"8e73fcdc-3f37-48fd-988c-5c68c0a6e3df",
 CellID->429607656],
Cell[58685, 1091, 677, 21, 70, "Text",ExpressionUUID->"3288f916-4d43-4e9c-94b6-914cc9e1bc5e",
 CellID->54176507],
Cell[CellGroupData[{
Cell[59387, 1116, 70, 1, 70, "Section",ExpressionUUID->"1a24b094-69c1-44c2-9e89-3e7cc9c8a82a",
 CellID->2133290847],
Cell[59460, 1119, 339, 10, 70, "Text",ExpressionUUID->"aead6d48-99d5-42c8-9171-029742a32ded",
 CellID->1534169418],
Cell[59802, 1131, 67, 1, 70, "MathCaption",ExpressionUUID->"6d394c60-c1a1-4f78-8263-b833d1073802",
 CellID->1217948648],
Cell[59872, 1134, 98, 3, 70, "Input",ExpressionUUID->"d1f5ae7a-214b-48fd-8b40-dbcf631bdd68",
 CellID->262742254],
Cell[59973, 1139, 75, 1, 70, "MathCaption",ExpressionUUID->"ce8adbe5-04d1-41ff-bb52-4c4dbefe4918",
 CellID->1869508656],
Cell[60051, 1142, 119, 3, 70, "Input",ExpressionUUID->"1e2cbb01-d3f4-4110-9f7f-a85b5c63fc8a",
 CellID->998742135]
}, Open  ]],
Cell[CellGroupData[{
Cell[60207, 1150, 57, 1, 70, "Section",ExpressionUUID->"9f3880ed-b7c7-43c9-887a-569d2bcb8780",
 CellID->671613477],
Cell[60267, 1153, 540, 11, 70, "Text",ExpressionUUID->"41c95c1a-4958-4e8d-ba5b-e329a30857b8",
 CellID->1313645745],
Cell[CellGroupData[{
Cell[60832, 1168, 66, 1, 70, "Subsection",ExpressionUUID->"701a0741-050c-4948-ba99-f313058c19bf",
 CellID->501197291],
Cell[60901, 1171, 521, 13, 70, "Text",ExpressionUUID->"dc523ee6-0ce6-40eb-a0b0-9cdfa2bd20f8",
 CellID->1179683263],
Cell[CellGroupData[{
Cell[61447, 1188, 66, 1, 70, "Subsubsection",ExpressionUUID->"bde3a063-2d8a-434c-8121-dff5ece864ce",
 CellID->929984066],
Cell[61516, 1191, 847, 26, 70, "Text",ExpressionUUID->"7bc33faa-bf85-4856-a3d2-3157119ddacf",
 CellID->1165527708],
Cell[62366, 1219, 315, 10, 70, "Text",ExpressionUUID->"6fa3ca7c-b288-428f-ae66-f73a9505341e",
 CellID->1597287192],
Cell[62684, 1231, 168, 6, 70, "MathCaption",ExpressionUUID->"f57d4b8a-7799-4a3b-b71b-fcc794941dfb",
 CellID->174991658],
Cell[62855, 1239, 7316, 207, 70, "Text",ExpressionUUID->"3b65600c-a6b4-42c2-b24f-45aa174f3e32",
 CellID->1192006303],
Cell[70174, 1448, 717, 21, 70, "Text",ExpressionUUID->"8ea1622b-b8ff-4de8-aa98-0a559a3587b2",
 CellID->2001356434],
Cell[70894, 1471, 278, 6, 70, "MathCaption",ExpressionUUID->"f0e7e685-d2d6-4250-bbe8-172269de6cc2",
 CellID->299944951],
Cell[71175, 1479, 3483, 95, 70, "Input",ExpressionUUID->"df2f4cfc-145c-4f25-b382-9dbc390094e5",
 CellID->1030671948],
Cell[74661, 1576, 248, 7, 70, "Text",ExpressionUUID->"17f665e9-5f18-45f9-b296-53757e74be37",
 CellID->1097212187]
}, Open  ]],
Cell[CellGroupData[{
Cell[74946, 1588, 86, 1, 70, "Subsubsection",ExpressionUUID->"aec928a8-d8cb-4fad-9fac-f6bd5b276f79",
 CellID->1010514183],
Cell[75035, 1591, 292, 8, 70, "Text",ExpressionUUID->"8da78a44-87d7-4716-b090-2586b1d3d33e",
 CellID->1276400541],
Cell[75330, 1601, 381, 11, 70, "Text",ExpressionUUID->"6718490e-2ba6-418f-a5cb-89e07a347c7e",
 CellID->200159297],
Cell[75714, 1614, 471, 15, 70, "Text",ExpressionUUID->"3eb02ed2-2eb8-4ce1-a4ce-eb8f56eed410",
 CellID->471195666],
Cell[76188, 1631, 718, 24, 70, "Text",ExpressionUUID->"8580da77-076a-42a7-8d0c-81e75d5405b7",
 CellID->1897113300],
Cell[76909, 1657, 5414, 147, 70, "DefinitionBox",ExpressionUUID->"154faf8a-df41-447c-8c98-70a8aab885be",
 CellID->953451491],
Cell[82326, 1806, 196, 7, 70, "Caption",ExpressionUUID->"28dce2eb-e7b5-4a2e-b677-1b371b36769f",
 CellID->7357]
}, Open  ]],
Cell[CellGroupData[{
Cell[82559, 1818, 75, 1, 70, "Subsubsection",ExpressionUUID->"57b6d871-a9db-4357-b702-b6429988581a",
 CellID->1310432575],
Cell[82637, 1821, 548, 17, 70, "Text",ExpressionUUID->"eee054c4-7f54-4a08-a013-9b45b0f33a50",
 CellID->1202669251],
Cell[83188, 1840, 8621, 256, 70, "DefinitionBox",ExpressionUUID->"3d80a470-2b94-4a8e-83d5-75914692265c",
 CellID->438464085],
Cell[91812, 2098, 196, 7, 70, "Caption",ExpressionUUID->"f8a4cb71-b9b8-4418-8013-237577e49f45",
 CellID->1249483738]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92057, 2111, 55, 1, 70, "Subsection",ExpressionUUID->"96d1b828-5ffa-44e3-9265-aa9208cec5ec",
 CellID->490101258],
Cell[92115, 2114, 363, 12, 70, "Text",ExpressionUUID->"2b01e856-d5db-4e6a-9837-2e4ea28795bf",
 CellID->249980817],
Cell[92481, 2128, 115, 3, 70, "MathCaption",ExpressionUUID->"abd18b51-9dbc-4ed4-b0a9-ec233d234112",
 CellID->2139419895],
Cell[92599, 2133, 166, 5, 70, "Input",ExpressionUUID->"b04879fd-a144-40df-8869-bf773ecf75e9",
 CellID->1911473544],
Cell[92768, 2140, 545, 16, 70, "Text",ExpressionUUID->"8576d574-ada9-4988-9e3b-bd2e1c8ba1be",
 CellID->1570546560],
Cell[93316, 2158, 12167, 341, 70, "DefinitionBox",ExpressionUUID->"63d16a67-6caa-48c7-92bb-469ee37ba50a",
 CellID->1722327182],
Cell[105486, 2501, 589, 20, 70, "Caption",ExpressionUUID->"89b7a808-8fe7-4bc4-bd56-037c976d02dd",
 CellID->231225297],
Cell[106078, 2523, 127, 4, 70, "Text",ExpressionUUID->"10a01454-7e54-4a91-91af-facffa299cfa",
 CellID->1540904390],
Cell[106208, 2529, 3157, 86, 70, "DefinitionBox",ExpressionUUID->"d9d074c1-fa25-4361-98fa-17c854d8970f",
 CellID->312091046],
Cell[109368, 2617, 583, 19, 70, "Caption",ExpressionUUID->"2c6a9ca9-9a6e-405b-aa30-e24ec2a6ff37",
 CellID->1159144148]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110000, 2642, 57, 1, 70, "Section",ExpressionUUID->"f66fac98-7af4-4de6-8d46-06eb7059cde2",
 CellID->540567276],
Cell[110060, 2645, 175, 4, 70, "Text",ExpressionUUID->"73447d42-3a96-43b1-8a19-ff975e4815f7",
 CellID->1827655092],
Cell[CellGroupData[{
Cell[110260, 2653, 82, 1, 70, "Subsection",ExpressionUUID->"cd0ae4cf-50d1-45ea-a7af-628ca656c31c",
 CellID->257268298],
Cell[110345, 2656, 985, 35, 70, "Text",ExpressionUUID->"9fef1abd-bdb7-45e7-b80f-474190debb6a",
 CellID->1539574452],
Cell[111333, 2693, 187, 6, 70, "MathCaption",ExpressionUUID->"26a5af10-f4c2-4fd8-be5d-ae240b17b9ed",
 CellID->787376419],
Cell[CellGroupData[{
Cell[111545, 2703, 286, 9, 70, "Input",ExpressionUUID->"a871ea45-59ca-41e6-b4c7-55b212e5d128",
 CellID->641241319],
Cell[111834, 2714, 11477, 295, 70, "Output",ExpressionUUID->"b7b32c4e-cde4-48f7-a423-1cf03b6b9859",
 CellID->76837286]
}, Open  ]],
Cell[123326, 3012, 266, 7, 70, "MathCaption",ExpressionUUID->"8d355a3d-5e7b-4858-a319-4e356b43da30",
 CellID->546537213],
Cell[CellGroupData[{
Cell[123617, 3023, 137, 4, 70, "Input",ExpressionUUID->"3e1b8b27-fbbc-451e-9669-61c139a6ad4c",
 CellID->863380672],
Cell[123757, 3029, 396, 8, 70, "Output",ExpressionUUID->"00c49cf7-3e8b-402b-9583-3f8d2d347c79",
 CellID->1272316944]
}, Open  ]],
Cell[124168, 3040, 241, 5, 70, "Text",ExpressionUUID->"85281b42-4a1e-48d4-ac47-cdafa822ba67",
 CellID->1566749700],
Cell[CellGroupData[{
Cell[124434, 3049, 142, 4, 70, "Input",ExpressionUUID->"67797dbe-da38-463b-9239-42fecf8939c8",
 CellID->908486935],
Cell[124579, 3055, 395, 8, 70, "Output",ExpressionUUID->"c553dbe9-8921-45d6-9f32-252de77d85e7",
 CellID->535902783]
}, Open  ]],
Cell[124989, 3066, 304, 10, 70, "MathCaption",ExpressionUUID->"5bdbf250-32b2-41f4-92bc-ea067a9cc9cc",
 CellID->392276805],
Cell[CellGroupData[{
Cell[125318, 3080, 225, 8, 70, "Input",ExpressionUUID->"a7c2decc-b1df-44d5-b57a-94a5a283aeca",
 CellID->221465345],
Cell[125546, 3090, 604, 19, 70, "Output",ExpressionUUID->"f3e8070e-f8b6-4f8b-a4f9-93e053aa586c",
 CellID->29914394]
}, Open  ]],
Cell[126165, 3112, 775, 19, 70, "Text",ExpressionUUID->"b299f6d6-4542-4a25-9d7e-adb9e94ad1ee",
 CellID->464982744],
Cell[126943, 3133, 196, 4, 70, "MathCaption",ExpressionUUID->"85cb5600-f69f-48fe-8f5b-e8b6dc18542e",
 CellID->1833142640],
Cell[CellGroupData[{
Cell[127164, 3141, 267, 9, 70, "Input",ExpressionUUID->"ae5525ee-c43b-4c25-a1db-7496d4f200a6",
 CellID->1827950618],
Cell[127434, 3152, 2682, 80, 70, "Output",ExpressionUUID->"31156bcd-b844-45f2-a915-6a988bb0ac85",
 CellID->679977437]
}, Open  ]],
Cell[130131, 3235, 164, 4, 70, "Text",ExpressionUUID->"d396ef69-cb53-40c2-98fb-0a7e4e91f648",
 CellID->1488223786],
Cell[130298, 3241, 193, 4, 70, "MathCaption",ExpressionUUID->"f3c24f4a-6012-45eb-ad9e-c00ecf7ea682",
 CellID->1609229737],
Cell[CellGroupData[{
Cell[130516, 3249, 432, 14, 70, "Input",ExpressionUUID->"f89a52d8-6ca4-4429-9e99-433c06ff9c7e",
 CellID->915139441],
Cell[130951, 3265, 9607, 274, 70, "Output",ExpressionUUID->"a9f9ffb2-b5ad-471d-b498-df96693e615c",
 CellID->794006111]
}, Open  ]],
Cell[140573, 3542, 69, 1, 70, "MathCaption",ExpressionUUID->"4f04e607-fb51-4e95-baa2-cb0e466f195a",
 CellID->1516242184],
Cell[CellGroupData[{
Cell[140667, 3547, 458, 15, 70, "Input",ExpressionUUID->"afe371d4-a307-4416-87a9-23147ae721c0",
 CellID->1441431186],
Cell[141128, 3564, 9607, 274, 70, "Output",ExpressionUUID->"d8a1e4d8-26d5-4c0b-b629-87fd6ebe725b",
 CellID->702184882]
}, Open  ]],
Cell[150750, 3841, 247, 5, 70, "MathCaption",ExpressionUUID->"294216e8-4ce0-4b74-8776-1f8a789e5e22",
 CellID->1478232418],
Cell[151000, 3848, 78, 2, 70, "WolframAlphaLong",ExpressionUUID->"c02d8c97-9266-48c3-9e09-b92c8cc328d5",
 CellID->413937183],
Cell[151081, 3852, 66, 1, 70, "Text",ExpressionUUID->"d5fe5e6a-a5fc-4da5-90fd-3041d86cb353",
 CellID->90413432],
Cell[151150, 3855, 196806, 3234, 70, "Text",ExpressionUUID->"8e6ccb59-2500-4f8b-b039-19ce01420180",
 CellID->984259520]
}, Open  ]],
Cell[CellGroupData[{
Cell[347993, 7094, 78, 1, 70, "Subsection",ExpressionUUID->"3b1bd802-a6f5-4f35-925c-6f9045c72dfe",
 CellID->964105434],
Cell[348074, 7097, 224, 5, 70, "Text",ExpressionUUID->"cfbb3670-ac95-4647-a867-21e6295e9018",
 CellID->1926312606],
Cell[CellGroupData[{
Cell[348323, 7106, 82, 1, 70, "Subsubsection",ExpressionUUID->"d8c437e3-e208-49e0-bd90-e002f150db3a",
 CellID->433330108],
Cell[CellGroupData[{
Cell[348430, 7111, 77, 1, 70, "Subsubsubsection",ExpressionUUID->"dce2b298-e008-4de1-bddc-476c7c603981",
 CellID->62840614],
Cell[348510, 7114, 257, 5, 70, "Text",ExpressionUUID->"a47589c4-c717-4d37-842b-aa4811284895",
 CellID->1020016945],
Cell[348770, 7121, 118, 3, 70, "MathCaption",ExpressionUUID->"73a19f6b-8ce5-4c53-b5f9-c04848b8d2f7",
 CellID->381670302],
Cell[348891, 7126, 1108, 22, 70, "Input",ExpressionUUID->"70c9567f-124d-48be-989d-e033f91137b7",
 CellID->199112125],
Cell[350002, 7150, 184, 7, 70, "MathCaption",ExpressionUUID->"5bd8f5ad-7004-47f1-8854-5644b5534736",
 CellID->1332666250],
Cell[CellGroupData[{
Cell[350211, 7161, 185, 5, 70, "Input",ExpressionUUID->"7cfb6d79-3c95-443a-93ad-0c6701c9bb49",
 CellID->2014709187],
Cell[350399, 7168, 11415, 294, 70, "Output",ExpressionUUID->"16ffdf80-807e-48a4-8446-c7b78f1839e4",
 CellID->2120249074]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[361863, 7468, 71, 1, 70, "Subsubsubsection",ExpressionUUID->"7dd1f966-999a-4089-8373-9d30cc540205",
 CellID->1747728821],
Cell[361937, 7471, 416, 13, 70, "DefinitionBox",ExpressionUUID->"ea4bca7d-092d-4b74-a132-ab11895489f0",
 CellID->818482745],
Cell[362356, 7486, 477, 15, 70, "Caption",ExpressionUUID->"0bc8f5f7-cb54-465b-b957-5dbe5c425924",
 CellID->1606736180],
Cell[362836, 7503, 379, 11, 70, "MathCaption",ExpressionUUID->"8cfec570-d1a8-491e-b232-379c4b1b94b1",
 CellID->1093504481],
Cell[CellGroupData[{
Cell[363240, 7518, 298, 7, 70, "Input",ExpressionUUID->"20af2549-54b6-44e9-9e28-5478a2e226b1",
 CellID->364761141],
Cell[363541, 7527, 11111, 287, 70, "Output",ExpressionUUID->"bdec31c2-bc6d-4ff5-8b41-d0b905960d74",
 CellID->2073287215]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[374701, 7820, 75, 1, 70, "Subsubsubsection",ExpressionUUID->"448517ba-f9d9-4a2b-b41d-6fa77c85cc24",
 CellID->1673762423],
Cell[374779, 7823, 296, 8, 70, "Text",ExpressionUUID->"577784a7-6dea-4332-8735-ad92e5d18b4b",
 CellID->529597330],
Cell[375078, 7833, 654, 20, 70, "DefinitionBox",ExpressionUUID->"9808c434-e187-4f9a-a760-43d07ecc8dc9",
 CellID->1118958870],
Cell[375735, 7855, 260, 9, 70, "Caption",ExpressionUUID->"30cceb15-6835-46fd-81e0-c92c4417f0ad",
 CellID->827431311],
Cell[375998, 7866, 1220, 33, 70, "DefinitionBox3Col",ExpressionUUID->"be444469-85d9-4132-be04-67daa8ebd73a",
 CellID->29072],
Cell[377221, 7901, 249, 10, 70, "Caption",ExpressionUUID->"c72ec061-bd0b-4430-8abf-d5214416f688",
 CellID->956870455],
Cell[377473, 7913, 366, 14, 70, "MathCaption",ExpressionUUID->"baaa002e-79b5-4daf-8d97-bc80257afbe3",
 CellID->1372190648],
Cell[CellGroupData[{
Cell[377864, 7931, 183, 5, 70, "Input",ExpressionUUID->"906da7ca-225d-47c2-b4ed-3b173c692aa0",
 CellID->581335803],
Cell[378050, 7938, 11278, 290, 70, "Output",ExpressionUUID->"c42ee557-1057-4a17-8336-c1bdfab19761",
 CellID->1591346998]
}, Open  ]],
Cell[389343, 8231, 295, 10, 70, "MathCaption",ExpressionUUID->"34fb3c7f-0a34-4bcb-b8f1-64468923f656",
 CellID->351193473],
Cell[CellGroupData[{
Cell[389663, 8245, 244, 6, 70, "Input",ExpressionUUID->"21ff11c0-85ec-476c-bf0f-84d0bf31ae73",
 CellID->1223638755],
Cell[389910, 8253, 11278, 290, 70, "Output",ExpressionUUID->"7b0bd689-efc9-420e-a8e2-ba99905178cc",
 CellID->1007655648]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[401237, 8549, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"41bf10d3-af26-45d6-accb-7d822e539200",
 CellID->1524282659],
Cell[401300, 8552, 486, 15, 70, "Text",ExpressionUUID->"15d95e6d-a6d9-4d95-90db-b043ade64545",
 CellID->222118196],
Cell[401789, 8569, 620, 18, 70, "DefinitionBox",ExpressionUUID->"5e711df9-6e59-40bb-93a0-6fb3091e444d",
 CellID->1425592616],
Cell[402412, 8589, 450, 14, 70, "Caption",ExpressionUUID->"9eaf61a9-c3be-4913-9f6f-96263042a5c0",
 CellID->460047533],
Cell[402865, 8605, 857, 24, 70, "DefinitionBox3Col",ExpressionUUID->"c390ed0e-a8f3-426b-a30b-8fadd674177e",
 CellID->2081738160],
Cell[403725, 8631, 253, 10, 70, "Caption",ExpressionUUID->"c4bd4919-9dbc-45de-98b2-c6d7d5429f5b",
 CellID->969678196],
Cell[403981, 8643, 139, 4, 70, "Text",ExpressionUUID->"d28132a1-8d5a-4423-adc2-a9362e4f390c",
 CellID->2046575969],
Cell[404123, 8649, 175, 4, 70, "MathCaption",ExpressionUUID->"af0ddfeb-e5dc-4ef3-ba9e-323a3afa2108",
 CellID->132360816],
Cell[CellGroupData[{
Cell[404323, 8657, 274, 8, 70, "Input",ExpressionUUID->"cab9be59-9dd3-434d-a7ce-88d6733d9d38",
 CellID->1942659867],
Cell[CellGroupData[{
Cell[404622, 8669, 2522, 70, 70, "Print",ExpressionUUID->"f06db8ba-ff65-4e65-87f6-9756febef85f",
 CellID->1221241714],
Cell[407147, 8741, 322, 9, 70, "Print",ExpressionUUID->"828c5ecf-db63-46de-ab02-43c95049c197",
 CellID->1908272819],
Cell[407472, 8752, 20218, 423, 70, "Print",ExpressionUUID->"6cf920a0-18f7-43f7-b47c-f4256569edcb",
 CellID->1820484635]
}, Open  ]],
Cell[427705, 9178, 11278, 290, 70, "Output",ExpressionUUID->"87e82967-fd61-40e7-89e4-b66c32d6ef91",
 CellID->1685741636]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[439044, 9475, 77, 1, 70, "Subsubsection",ExpressionUUID->"d3b729c8-249e-4c51-b13c-13c93e181643",
 CellID->267016150],
Cell[439124, 9478, 767, 24, 70, "Text",ExpressionUUID->"cc30b68a-45d1-4fde-9119-fe958d5553a4",
 CellID->94668970],
Cell[439894, 9504, 664, 19, 70, "DefinitionBox",ExpressionUUID->"c360156b-c8b8-4a14-b727-71e613e49623",
 CellID->1824801338],
Cell[440561, 9525, 299, 10, 70, "MathCaption",ExpressionUUID->"1835fdaf-ca49-48df-9656-5e6096df7034",
 CellID->2019621014],
Cell[CellGroupData[{
Cell[440885, 9539, 150, 4, 70, "Input",ExpressionUUID->"e6d77c53-d593-4bed-a689-dc3d74cc373d",
 CellID->643857816],
Cell[441038, 9545, 287, 7, 70, "Output",ExpressionUUID->"9b96c72d-bf3a-487f-b157-9e07730172b8",
 CellID->15810684]
}, Open  ]],
Cell[441340, 9555, 142, 4, 70, "MathCaption",ExpressionUUID->"9bfff578-7818-498f-83b9-bf990420a97b",
 CellID->148216279],
Cell[CellGroupData[{
Cell[441507, 9563, 159, 4, 70, "Input",ExpressionUUID->"043e85af-d3dc-43c4-9188-636efe01f326",
 CellID->2137454280],
Cell[441669, 9569, 12668, 311, 70, "Output",ExpressionUUID->"afabb87d-2bb0-47fb-b3a5-1548a2957fb5",
 CellID->344747750]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[454386, 9886, 120, 3, 70, "Subsubsection",ExpressionUUID->"635897a5-916c-4b21-95db-e7cf4f057a90",
 CellID->1837977213],
Cell[454509, 9891, 144, 4, 70, "Text",ExpressionUUID->"33f5aad7-3f8b-4198-bbdb-ec0ea3d1ea8a",
 CellID->1135789927],
Cell[454656, 9897, 617, 19, 70, "DefinitionBox",ExpressionUUID->"f9f043eb-733e-49b2-9d08-be8d9f401a93",
 CellID->1719166110],
Cell[455276, 9918, 90, 1, 70, "Caption",ExpressionUUID->"3f56d420-0b2d-4675-9dcd-1c9a294d0108",
 CellID->1779824032],
Cell[455369, 9921, 286, 10, 70, "MathCaption",ExpressionUUID->"2a084fef-ba0b-43de-9351-28b96a05f9ce",
 CellID->1087636944],
Cell[CellGroupData[{
Cell[455680, 9935, 186, 5, 70, "Input",ExpressionUUID->"369590a5-0425-4509-8b24-da4a8d240819",
 CellID->533314544],
Cell[455869, 9942, 12636, 310, 70, "Output",ExpressionUUID->"9a029808-2818-4137-98f1-d207c8a97203",
 CellID->1534941352]
}, Open  ]],
Cell[468520, 10255, 392, 12, 70, "Text",ExpressionUUID->"3f0d08a8-135e-4510-9c54-8579f2c90cdc",
 CellID->440466924],
Cell[468915, 10269, 631, 18, 70, "DefinitionBox",ExpressionUUID->"4227ca39-baa5-4af0-bb83-98b0ed10d4a9",
 CellID->1719094828],
Cell[469549, 10289, 121, 3, 70, "Caption",ExpressionUUID->"cd9ab4a4-24e4-41c5-bec1-fbf4fc52d533",
 CellID->581787458],
Cell[469673, 10294, 3661, 103, 70, "DefinitionBox3Col",ExpressionUUID->"c7a5ae32-d795-4871-85fb-897e6ffcfc3c",
 CellID->1460313503],
Cell[473337, 10399, 275, 11, 70, "Caption",ExpressionUUID->"57d04189-9217-4092-ae68-a6d6ce42d8e6",
 CellID->2045927005],
Cell[473615, 10412, 171, 4, 70, "MathCaption",ExpressionUUID->"ee10c1dd-83a8-4876-a4a5-80552151d579",
 CellID->1398268181],
Cell[CellGroupData[{
Cell[473811, 10420, 235, 6, 70, "Input",ExpressionUUID->"dd7cd749-5fd2-4160-b328-79450d87cd88",
 CellID->779768946],
Cell[474049, 10428, 12823, 314, 70, "Output",ExpressionUUID->"5234ffe7-64c3-4ccf-8043-8cb786462c9f",
 CellID->1779061158]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[486921, 10748, 106, 2, 70, "Subsubsection",ExpressionUUID->"560ea9bb-b9d2-4388-9ea6-61bc1fcaf942",
 CellID->384896847],
Cell[487030, 10752, 290, 10, 70, "MathCaption",ExpressionUUID->"d6547fca-bf9c-4ef2-a219-69668049630b",
 CellID->1747726374],
Cell[CellGroupData[{
Cell[487345, 10766, 191, 5, 70, "Input",ExpressionUUID->"03ad5a42-02f7-4433-a00f-09269b624dbd",
 CellID->755844152],
Cell[487539, 10773, 12848, 314, 70, "Output",ExpressionUUID->"9fc122ee-adaa-4efd-b719-a66469dcf675",
 CellID->1063560421]
}, Open  ]],
Cell[500402, 11090, 342, 9, 70, "DefinitionBox",ExpressionUUID->"61a5bed6-cbb5-4398-87a3-3a92a38c0f1a",
 CellID->1164836919],
Cell[500747, 11101, 64, 1, 70, "Caption",ExpressionUUID->"9499c36a-f76b-497c-be48-fc07777e2b2a",
 CellID->953171581],
Cell[500814, 11104, 355, 12, 70, "MathCaption",ExpressionUUID->"12c28d5b-72df-4411-bcd8-740c666dc3fd",
 CellID->1883423327],
Cell[CellGroupData[{
Cell[501194, 11120, 172, 4, 70, "Input",ExpressionUUID->"8eb42eb3-794d-4106-ab06-84a1d9e6b18d",
 CellID->786900109],
Cell[501369, 11126, 258, 4, 70, "Print",ExpressionUUID->"8a8affdf-59e8-4ee0-a6bc-e6b22f1b157b",
 CellID->1253250375],
Cell[501630, 11132, 9425, 242, 70, "Output",ExpressionUUID->"7bc8af1e-6997-4075-9260-b1d8cc544205",
 CellID->859442849]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[511116, 11381, 72, 1, 70, "Subsection",ExpressionUUID->"a0c2548c-3dbc-4f25-a653-c2a46ecfc041",
 CellID->1956292219],
Cell[511191, 11384, 533, 9, 70, "Text",ExpressionUUID->"58e2a736-e7dd-43b2-8b59-a9b54b5ead42",
 CellID->673780035],
Cell[CellGroupData[{
Cell[511749, 11397, 78, 1, 70, "Subsubsection",ExpressionUUID->"9104e14e-4200-47d7-8709-6660b5f877ff",
 CellID->576856357],
Cell[511830, 11400, 263, 11, 70, "Text",ExpressionUUID->"5ee22c13-b664-4e70-a0d2-f3a3f230819f",
 CellID->1399228810],
Cell[512096, 11413, 592, 16, 70, "DefinitionBox",ExpressionUUID->"a3c93b5d-9e62-4536-a7f3-8855dbf6afc8",
 CellID->1661281776],
Cell[512691, 11431, 166, 4, 70, "Caption",ExpressionUUID->"5d28fec5-d4b9-44cf-90bb-5eb6fcfe1962",
 CellID->2000128109],
Cell[512860, 11437, 74, 1, 70, "Text",ExpressionUUID->"705c8d18-0213-4fba-b386-e3302f7b8744",
 CellID->809854710],
Cell[CellGroupData[{
Cell[512959, 11442, 191, 5, 70, "Input",ExpressionUUID->"31fb2967-eec6-48d5-9cbe-eaf707810e57",
 CellID->2018927283],
Cell[513153, 11449, 11572, 295, 70, "Output",ExpressionUUID->"6da95cef-1761-4dd8-81ee-77d4f944c1f4",
 CellID->1775673247]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[524774, 11750, 127, 3, 70, "Subsubsection",ExpressionUUID->"d9fb2c44-f769-4b98-8d43-40fc8384a8a8",
 CellID->1483609541],
Cell[524904, 11755, 331, 11, 70, "MathCaption",ExpressionUUID->"5d01cd49-86e7-478a-b665-a077d5182486",
 CellID->214676973],
Cell[525238, 11768, 329, 9, 70, "Input",ExpressionUUID->"cea97140-efaf-4ff4-a03e-9c982fceee9e",
 CellID->303358251],
Cell[525570, 11779, 359, 14, 70, "MathCaption",ExpressionUUID->"13514766-dc34-4af4-8368-7009f0cab542",
 CellID->375344567],
Cell[525932, 11795, 224, 7, 70, "Input",ExpressionUUID->"8dbb2fa2-e17f-4e31-ba9a-ee714ad87478",
 CellID->1256666330],
Cell[526159, 11804, 296, 10, 70, "MathCaption",ExpressionUUID->"8a225c54-8f6e-4116-92d2-8d478920cb59",
 CellID->1035495647],
Cell[526458, 11816, 285, 8, 70, "Input",ExpressionUUID->"f40ec744-f799-43e0-b7de-5d05d6c143c0",
 CellID->367863841],
Cell[526746, 11826, 173, 4, 70, "MathCaption",ExpressionUUID->"7a38d85c-8c73-48d2-a07f-15358a2cbe1e",
 CellID->61312748],
Cell[CellGroupData[{
Cell[526944, 11834, 292, 8, 70, "Input",ExpressionUUID->"e2d8cabf-3907-486d-91eb-8379512b22e4",
 CellID->1838688723],
Cell[CellGroupData[{
Cell[527261, 11846, 2526, 70, 70, "Print",ExpressionUUID->"3b077241-620f-4a2e-a488-15091fd038e1",
 CellID->793810163],
Cell[529790, 11918, 323, 9, 70, "Print",ExpressionUUID->"e3ae9a42-6474-469f-8591-ff0e079d3a66",
 CellID->1398994377],
Cell[530116, 11929, 20233, 423, 70, "Print",ExpressionUUID->"5f7e7c69-a029-436a-9f87-1fd39ddf3fb5",
 CellID->100043236]
}, Open  ]],
Cell[550364, 12355, 11071, 283, 70, "Output",ExpressionUUID->"bb9ae407-7883-4e7c-bbe4-5fe9aa7e054b",
 CellID->1866962899]
}, Open  ]],
Cell[561450, 12641, 159, 4, 70, "MathCaption",ExpressionUUID->"782f9459-a1ad-4374-bfcc-f5e3b035c36b",
 CellID->274183705],
Cell[CellGroupData[{
Cell[561634, 12649, 177, 4, 70, "Input",ExpressionUUID->"d0de0c6a-fdbf-4e2d-83f2-5b1ed86d2835",
 CellID->1853107120],
Cell[561814, 12655, 9519, 244, 70, "Output",ExpressionUUID->"7fd23780-5ca7-4dac-98a8-3c634ebb16ad",
 CellID->1161877176]
}, Open  ]],
Cell[571348, 12902, 277, 10, 70, "MathCaption",ExpressionUUID->"b151c720-a095-417a-9c3d-e5ecab0fd28d",
 CellID->373642571],
Cell[CellGroupData[{
Cell[571650, 12916, 204, 5, 70, "Input",ExpressionUUID->"981a300d-0f56-498b-81a3-2935f3eacd61",
 CellID->568506969],
Cell[571857, 12923, 9551, 244, 70, "Output",ExpressionUUID->"898a71ea-2720-4ece-a4fd-74c41e1d5777",
 CellID->600894861]
}, Open  ]],
Cell[581423, 13170, 170, 4, 70, "MathCaption",ExpressionUUID->"1ca8798d-4dcd-44a0-a650-77e31c9427e3",
 CellID->369078912],
Cell[CellGroupData[{
Cell[581618, 13178, 254, 6, 70, "Input",ExpressionUUID->"44728eec-a55f-4e0b-8858-48d4268fe895",
 CellID->1176501448],
Cell[581875, 13186, 9552, 244, 70, "Output",ExpressionUUID->"2227ead4-10b0-4e5c-a90a-4da0c6212f17",
 CellID->1771820633]
}, Open  ]],
Cell[591442, 13433, 290, 10, 70, "MathCaption",ExpressionUUID->"a16e44c5-9de7-4ef8-b29e-83272c79c2dd",
 CellID->1458062219],
Cell[CellGroupData[{
Cell[591757, 13447, 209, 5, 70, "Input",ExpressionUUID->"4b7cd502-8b4d-44a5-a30f-7e152ac3cfd6",
 CellID->715818816],
Cell[591969, 13454, 9572, 245, 70, "Output",ExpressionUUID->"f00524bc-6e11-489d-a2b8-c5a9f198ca7b",
 CellID->1492281749]
}, Open  ]],
Cell[601556, 13702, 354, 12, 70, "MathCaption",ExpressionUUID->"7cef0115-0df6-40e7-836d-7819d577c6c1",
 CellID->841142010],
Cell[CellGroupData[{
Cell[601935, 13718, 195, 6, 70, "Input",ExpressionUUID->"2b696f52-da06-4901-ad04-fa7ecf51fede",
 CellID->188913869],
Cell[602133, 13726, 258, 4, 70, "Print",ExpressionUUID->"b284dd48-b034-4329-8f70-099945b7bc7d",
 CellID->1269750011],
Cell[602394, 13732, 9572, 245, 70, "Output",ExpressionUUID->"cb0deb6b-b445-4a7a-a365-a0e68b123528",
 CellID->1143434638]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[612027, 13984, 85, 1, 70, "Subsection",ExpressionUUID->"822d1f0b-2853-4a06-9bf9-4229101b8e30",
 CellID->834625544],
Cell[612115, 13987, 403, 12, 70, "Text",ExpressionUUID->"0e0dd4de-05d1-43ee-bac7-527f97d1c790",
 CellID->1375671789],
Cell[612521, 14001, 3745, 105, 70, "DefinitionBox",ExpressionUUID->"a0fe1324-c981-4c45-9709-192cdcce15dc",
 CellID->628162865],
Cell[616269, 14108, 99, 1, 70, "Caption",ExpressionUUID->"4c960673-0880-41de-b9e4-0272e2196c2d",
 CellID->503663403],
Cell[616371, 14111, 7617, 188, 70, "DefinitionBox3Col",ExpressionUUID->"73c2ccfc-7314-45da-be97-f3b18e8972c0",
 CellID->495990132],
Cell[623991, 14301, 281, 11, 70, "Caption",ExpressionUUID->"bca0eb60-7bb3-409a-9839-bce0d1d3229d",
 CellID->1722114517],
Cell[624275, 14314, 1076, 20, 70, "Text",ExpressionUUID->"e58263be-fbea-4ff2-bbd8-d592c00f878d",
 CellID->1268036459],
Cell[625354, 14336, 3817, 82, 70, "DefinitionBox",ExpressionUUID->"3fb5f33b-a1ae-4d42-bc06-e9a0e0864397",
 CellID->1644998689],
Cell[629174, 14420, 280, 11, 70, "Caption",ExpressionUUID->"5b419a87-efa4-4c84-b5d6-3ab44b5732f6",
 CellID->788494545],
Cell[629457, 14433, 387, 12, 70, "Text",ExpressionUUID->"e19a5242-23ec-4ab6-a83a-f87776dc6f5d",
 CellID->1104163398],
Cell[629847, 14447, 1015, 26, 70, "DefinitionBox",ExpressionUUID->"a70cf23b-65bc-4083-8c95-e738f468fbc8",
 CellID->219567939],
Cell[630865, 14475, 174, 4, 70, "Caption",ExpressionUUID->"1fd36b91-d68e-4955-86dd-a0d8b423d4be",
 CellID->908945433],
Cell[631042, 14481, 1700, 41, 70, "DefinitionBox3Col",ExpressionUUID->"987b8e37-ee69-4a8d-9bcd-d42e2196c884",
 CellID->1624929440],
Cell[632745, 14524, 266, 11, 70, "Caption",ExpressionUUID->"0de19a9e-9856-4379-ace4-ff6e4d966733",
 CellID->639559181],
Cell[633014, 14537, 410, 12, 70, "Text",ExpressionUUID->"d774cd00-f812-43b4-a846-7df60b52df64",
 CellID->67687095],
Cell[633427, 14551, 3820, 96, 70, "DefinitionBox",ExpressionUUID->"8389f747-9775-4691-9839-4f396f45c59f",
 CellID->131328315],
Cell[637250, 14649, 358, 14, 70, "Caption",ExpressionUUID->"df16d1c2-aef2-4aeb-bd9d-2028493b05cd",
 CellID->751094438],
Cell[637611, 14665, 1005, 32, 70, "Text",ExpressionUUID->"506cfbd8-e453-4774-ada4-f3d070343ef1",
 CellID->1062814029],
Cell[638619, 14699, 4220, 125, 70, "Text",ExpressionUUID->"a1386f95-8734-425a-90e3-897ea68bc546",
 CellID->2093893304],
Cell[642842, 14826, 203, 5, 70, "MathCaption",ExpressionUUID->"36020cc0-f22c-44ae-89a2-1f78759d3772",
 CellID->1669899255],
Cell[CellGroupData[{
Cell[643070, 14835, 202, 6, 70, "Input",ExpressionUUID->"8ea8c603-7667-43a5-bbfc-682f28be5e65",
 CellID->532996142],
Cell[643275, 14843, 66, 1, 70, "Output",ExpressionUUID->"46283748-55d1-4ed4-9285-b77b5e61975e",
 CellID->177650624]
}, Open  ]],
Cell[643356, 14847, 145, 4, 70, "MathCaption",ExpressionUUID->"b05e6191-3b64-4f3f-85de-df112e868674",
 CellID->365627628],
Cell[CellGroupData[{
Cell[643526, 14855, 272, 7, 70, "Input",ExpressionUUID->"fab5a260-1aff-49c6-b724-9871ef08b21c",
 CellID->186560353],
Cell[643801, 14864, 434, 13, 70, "Output",ExpressionUUID->"8b8f5eb6-ffa2-419e-827b-55b0f33a0bf3",
 CellID->811386742]
}, Open  ]],
Cell[644250, 14880, 130, 3, 70, "MathCaption",ExpressionUUID->"fef1bfed-5ab9-4e48-8599-fafa19a12f93",
 CellID->1987903082],
Cell[CellGroupData[{
Cell[644405, 14887, 339, 7, 70, "Input",ExpressionUUID->"bf582643-dd03-4158-93b4-ad68797d0f73",
 CellID->136519148],
Cell[644747, 14896, 136, 2, 70, "Print",ExpressionUUID->"54489125-bbc2-4902-a725-a735195aaf53",
 CellID->1026543908],
Cell[644886, 14900, 10021, 257, 70, "Output",ExpressionUUID->"cbffc8e0-a859-4317-b8b1-b1dce13c5630",
 CellID->755245404]
}, Open  ]],
Cell[654922, 15160, 657, 18, 70, "Text",ExpressionUUID->"865455f4-6123-4bf4-a3de-c6c43d755fa8",
 CellID->673783308],
Cell[655582, 15180, 4219, 125, 70, "Text",ExpressionUUID->"0e76d132-5915-46ae-bad0-e1fc5e8efd71",
 CellID->594786925],
Cell[659804, 15307, 99, 1, 70, "MathCaption",ExpressionUUID->"40f5ef5a-6b41-46c7-8f34-068fd6148446",
 CellID->1134620377],
Cell[CellGroupData[{
Cell[659928, 15312, 119, 3, 70, "Input",ExpressionUUID->"d460217a-4af7-4a54-8a62-d8a47a544d18",
 CellID->2057374526],
Cell[660050, 15317, 289, 6, 70, "Output",ExpressionUUID->"3df83caa-120a-4bf5-827b-e77f502f3897",
 CellID->568030100]
}, Open  ]],
Cell[660354, 15326, 91, 1, 70, "MathCaption",ExpressionUUID->"e244b81f-6c17-45ad-985a-3ec3556bd38f",
 CellID->172558847],
Cell[CellGroupData[{
Cell[660470, 15331, 176, 6, 70, "Input",ExpressionUUID->"c6cdcf6c-c9a6-4b36-bd7d-b1701de7adee",
 CellID->1093618079],
Cell[660649, 15339, 603, 14, 70, "Output",ExpressionUUID->"6fa7686a-3830-4d34-a36b-9735ce7dc279",
 CellID->1781151258]
}, Open  ]],
Cell[661267, 15356, 103, 2, 70, "MathCaption",ExpressionUUID->"0a0b99f3-091b-4312-a04c-a6026a5e1565",
 CellID->47471690],
Cell[CellGroupData[{
Cell[661395, 15362, 182, 6, 70, "Input",ExpressionUUID->"0d9ea17f-9172-407b-84ef-4ddd8ee9b854",
 CellID->1140260793],
Cell[661580, 15370, 9551, 236, 70, "Output",ExpressionUUID->"f0668664-da30-4e05-affd-48901e1742d2",
 CellID->384783444]
}, Open  ]],
Cell[671146, 15609, 349, 11, 70, "Text",ExpressionUUID->"602e4e44-9b62-44c9-ab7e-1ec362ec809c",
 CellID->1070903617],
Cell[671498, 15622, 3042, 83, 70, "DefinitionBox",ExpressionUUID->"24be6cd5-5752-4a75-8108-019b331b8164",
 CellID->1990717933],
Cell[674543, 15707, 123, 3, 70, "Caption",ExpressionUUID->"d4a58da4-5201-4a18-ac1e-5b57c4c68835",
 CellID->201079671],
Cell[674669, 15712, 2024, 50, 70, "DefinitionBox3Col",ExpressionUUID->"017397d8-8cd2-4585-a300-8617a576cdd1",
 CellID->3905959],
Cell[676696, 15764, 250, 10, 70, "Caption",ExpressionUUID->"491a62e8-a8b7-4fbf-b065-06af2e754c1d",
 CellID->1222943503],
Cell[676949, 15776, 578, 19, 70, "MathCaption",ExpressionUUID->"dfe85376-165c-4d32-86e2-43c965fb716f",
 CellID->661398041],
Cell[CellGroupData[{
Cell[677552, 15799, 272, 7, 70, "Input",ExpressionUUID->"c993d19a-5644-46de-a281-cda79767d719",
 CellID->741518215],
Cell[677827, 15808, 616, 12, 70, "Output",ExpressionUUID->"fd1b3d61-bfde-470a-ad2f-0f55e6a7104f",
 CellID->1561171098]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[678504, 15827, 54, 1, 70, "Section",ExpressionUUID->"bcfd4633-8c40-47f0-b090-d9ab78073829",
 CellID->1387790784],
Cell[CellGroupData[{
Cell[678583, 15832, 78, 1, 70, "Subsection",ExpressionUUID->"ea74431b-8dd6-418e-8fa6-cd2fd4900191",
 CellID->1225055698],
Cell[678664, 15835, 976, 35, 70, "Text",ExpressionUUID->"4b36f696-905a-4cae-adc3-d50ca3a1cd80",
 CellID->72301240],
Cell[679643, 15872, 100, 1, 70, "MathCaption",ExpressionUUID->"fe4fef91-43de-4b9b-a83f-42cfd8125fff",
 CellID->1419719176],
Cell[CellGroupData[{
Cell[679768, 15877, 295, 9, 70, "Input",ExpressionUUID->"44a40bb3-9943-4b3c-ab78-b871fa9a0beb",
 CellID->458823941],
Cell[680066, 15888, 11059, 285, 70, "Output",ExpressionUUID->"f8e7ae4d-68ba-4015-9fcd-e68ec1c1bff7",
 CellID->647445040]
}, Open  ]],
Cell[691140, 16176, 267, 7, 70, "MathCaption",ExpressionUUID->"f44ed600-b210-4da7-b5f2-e4efa6baf54b",
 CellID->1754470356],
Cell[CellGroupData[{
Cell[691432, 16187, 142, 4, 70, "Input",ExpressionUUID->"2b8aec52-1b8c-45de-b179-112d20c84b68",
 CellID->285316335],
Cell[691577, 16193, 355, 7, 70, "Output",ExpressionUUID->"04768c9b-f9b0-4fe9-be6c-f3be1d664923",
 CellID->309147931]
}, Open  ]],
Cell[691947, 16203, 263, 5, 70, "Text",ExpressionUUID->"c71f09c7-cc59-457f-a94f-b53753086fde",
 CellID->460190071],
Cell[692213, 16210, 306, 10, 70, "MathCaption",ExpressionUUID->"08c6d8c0-99bc-4c4f-b9d0-27641eef64d9",
 CellID->1259531385],
Cell[CellGroupData[{
Cell[692544, 16224, 229, 8, 70, "Input",ExpressionUUID->"d94efd37-9d6d-4649-b89a-1f6dbad044a7",
 CellID->1197679216],
Cell[692776, 16234, 511, 15, 70, "Output",ExpressionUUID->"47e7e977-7d42-40a1-a84a-469055a290e7",
 CellID->1086334224]
}, Open  ]],
Cell[693302, 16252, 815, 24, 70, "Text",ExpressionUUID->"c2a52b0d-4875-4214-8708-68b8949cca90",
 CellID->1823731250],
Cell[694120, 16278, 453, 8, 70, "Text",ExpressionUUID->"6e5b89c7-630a-42c6-b90c-078d2fccb538",
 CellID->220886326],
Cell[CellGroupData[{
Cell[694598, 16290, 88, 1, 70, "Subsubsubsection",ExpressionUUID->"7d097472-737a-4f5b-8bbd-16b030f4c9c5",
 CellID->237385776],
Cell[694689, 16293, 592, 19, 70, "Text",ExpressionUUID->"c27d216d-7dcf-4889-a4f1-629cf9439f71",
 CellID->1605734052],
Cell[695284, 16314, 2640, 72, 70, "DefinitionBox",ExpressionUUID->"b23e53d7-06cf-4fb8-be49-f4b192f77b04",
 CellID->730612315],
Cell[697927, 16388, 91, 1, 70, "Caption",ExpressionUUID->"e5c59ba8-610e-450c-84cb-a59a16c9bce4",
 CellID->69474757],
Cell[698021, 16391, 97, 1, 70, "MathCaption",ExpressionUUID->"f33fe3f8-3a67-4dc0-a443-aa555782088f",
 CellID->1155116896],
Cell[CellGroupData[{
Cell[698143, 16396, 146, 4, 70, "Input",ExpressionUUID->"f09ec13c-8a72-4475-a2d1-82010ec782a5",
 CellID->797502192],
Cell[698292, 16402, 9802, 248, 70, "Output",ExpressionUUID->"43b247d5-0c72-479a-bfb8-69d7ca0ea9eb",
 CellID->113335974]
}, Open  ]],
Cell[708109, 16653, 141, 4, 70, "MathCaption",ExpressionUUID->"5d9d2eb7-cbfb-4a73-8d92-7b96b7c4f15c",
 CellID->811349928],
Cell[CellGroupData[{
Cell[708275, 16661, 169, 5, 70, "Input",ExpressionUUID->"b603e89c-10c5-44c4-935e-af096e19015c",
 CellID->1984565093],
Cell[708447, 16668, 464, 10, 70, "Output",ExpressionUUID->"4d9cc079-719c-4d94-8159-67a784219e00",
 CellID->19720129]
}, Open  ]],
Cell[708926, 16681, 201, 4, 70, "MathCaption",ExpressionUUID->"2fae50c7-8e8b-4929-81ee-488c29749f3f",
 CellID->589880236],
Cell[CellGroupData[{
Cell[709152, 16689, 369, 9, 70, "Input",ExpressionUUID->"0e94317b-f68d-4d54-9ae5-a8e87fba686e",
 CellID->557131970],
Cell[709524, 16700, 429, 11, 70, "Output",ExpressionUUID->"cab03475-b92a-4367-b787-57411ec49746",
 CellID->723726465]
}, Open  ]],
Cell[709968, 16714, 147, 4, 70, "Text",ExpressionUUID->"d87fd45b-6580-4aba-b23e-562687696558",
 CellID->1398286274]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[710164, 16724, 70, 1, 70, "Subsection",ExpressionUUID->"2285724b-e60c-401a-be3a-6a05130eb1c3",
 CellID->1281067914],
Cell[710237, 16727, 483, 8, 70, "Text",ExpressionUUID->"21e3362e-a60d-4ef9-b583-fa192455994a",
 CellID->1997801546],
Cell[CellGroupData[{
Cell[710745, 16739, 90, 1, 70, "Subsubsection",ExpressionUUID->"7d1abfc0-64e4-4962-810c-4db6718d8e61",
 CellID->1973203023],
Cell[CellGroupData[{
Cell[710860, 16744, 73, 1, 70, "Subsubsubsection",ExpressionUUID->"d04eee6c-dadb-4e29-a618-f39cdd562662",
 CellID->666869090],
Cell[710936, 16747, 422, 13, 70, "Text",ExpressionUUID->"67f45dec-6ba6-4ab7-bc20-fe0fdab6afe8",
 CellID->611320926],
Cell[711361, 16762, 480, 14, 70, "DefinitionBox",ExpressionUUID->"2f359d4e-11d5-45bd-b546-14ab270b360e",
 CellID->351641937],
Cell[711844, 16778, 135, 4, 70, "Caption",ExpressionUUID->"2db8c236-133f-4c16-8326-1532a7dc38e7",
 CellID->171038615],
Cell[711982, 16784, 1561, 46, 70, "DefinitionBox3Col",ExpressionUUID->"743487e2-d0a8-4146-ac7e-7f58a2994324",
 CellID->1055700668],
Cell[713546, 16832, 272, 11, 70, "Caption",ExpressionUUID->"ef363e52-7f3b-4be8-af43-12b69ae6138d",
 CellID->651235562],
Cell[713821, 16845, 360, 8, 70, "MathCaption",ExpressionUUID->"69395287-e724-4194-92e2-8948861b51b9",
 CellID->1312882619],
Cell[CellGroupData[{
Cell[714206, 16857, 302, 7, 70, "Input",ExpressionUUID->"27154168-05dc-4e98-9d43-593f9dde322a",
 CellID->223704608],
Cell[CellGroupData[{
Cell[714533, 16868, 425, 10, 70, "Print",ExpressionUUID->"8c600608-d481-426b-9cc4-0130e6468a28",
 CellID->916487219],
Cell[714961, 16880, 426, 10, 70, "Print",ExpressionUUID->"77da9e4f-ae6b-4e1d-82a2-9b92b89a0f6c",
 CellID->1393161984],
Cell[715390, 16892, 423, 10, 70, "Print",ExpressionUUID->"662a88f2-78b3-45b1-bfa6-a684f6c9287e",
 CellID->1933820101],
Cell[715816, 16904, 426, 10, 70, "Print",ExpressionUUID->"de7a72ed-d7ff-47e9-903e-5fe4461f80d1",
 CellID->1615625703],
Cell[716245, 16916, 422, 10, 70, "Print",ExpressionUUID->"790bed8f-e99e-4f3b-bf86-14ff57f8d57f",
 CellID->944609390],
Cell[716670, 16928, 407, 10, 70, "Print",ExpressionUUID->"ed37306f-ada6-425b-8a46-e1353ac65ed4",
 CellID->1760647747],
Cell[717080, 16940, 406, 10, 70, "Print",ExpressionUUID->"68ccf5b7-0f71-4ca0-a5c2-89c4b422cc53",
 CellID->729347633],
Cell[717489, 16952, 408, 10, 70, "Print",ExpressionUUID->"4d02dcf0-ad16-45e5-812c-9c1400877fec",
 CellID->928300839],
Cell[717900, 16964, 400, 9, 70, "Print",ExpressionUUID->"a785be10-76cb-4d81-8d2f-ea38f4d27400",
 CellID->200801478],
Cell[718303, 16975, 409, 10, 70, "Print",ExpressionUUID->"0da6cd70-9da1-4904-bbda-8924411aa8c5",
 CellID->584112668],
Cell[718715, 16987, 408, 10, 70, "Print",ExpressionUUID->"62081189-2445-4702-808d-07813786f9fd",
 CellID->805571796],
Cell[719126, 16999, 420, 10, 70, "Print",ExpressionUUID->"fe53283a-0ca8-47f5-916e-b91a05517e23",
 CellID->507574800],
Cell[719549, 17011, 426, 10, 70, "Print",ExpressionUUID->"859d5c38-26bd-4e98-b8c6-f7d868cfcc2c",
 CellID->1093520098]
}, Open  ]],
Cell[719990, 17024, 10862, 281, 70, "Output",ExpressionUUID->"dcdf6274-4667-41e2-b45e-2ca2c405b4cc",
 CellID->627236060]
}, Open  ]],
Cell[730867, 17308, 123, 3, 70, "MathCaption",ExpressionUUID->"d8e150c3-8e86-4f63-8824-37167c3c3351",
 CellID->1190633123],
Cell[CellGroupData[{
Cell[731015, 17315, 310, 10, 70, "Input",ExpressionUUID->"2e985090-4809-4899-8864-406ba6ecb681",
 CellID->718275515],
Cell[731328, 17327, 186498, 4955, 70, "Output",ExpressionUUID->"e531da6b-2b19-4519-a795-944267579eff",
 CellID->2106720944]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[917875, 22288, 78, 1, 70, "Subsubsubsection",ExpressionUUID->"6cee8939-7215-481b-aa2e-842b6c09ed3c",
 CellID->528878766],
Cell[917956, 22291, 255, 5, 70, "MathCaption",ExpressionUUID->"cce62c89-5d37-4cc6-9604-c4a44267e2d4",
 CellID->1740422649],
Cell[918214, 22298, 1109, 22, 70, "Input",ExpressionUUID->"a5716cfa-4501-4776-8cc0-837a9854ba75",
 CellID->750369086],
Cell[919326, 22322, 184, 7, 70, "MathCaption",ExpressionUUID->"94462c76-a6d8-4c4b-98c3-65eaf01ba622",
 CellID->1712427223],
Cell[CellGroupData[{
Cell[919535, 22333, 203, 6, 70, "Input",ExpressionUUID->"b3468b70-7a3e-4528-8810-35938c4c5137",
 CellID->188499867],
Cell[919741, 22341, 10617, 274, 70, "Output",ExpressionUUID->"65bbac49-8584-4fea-a633-5ef5097549b9",
 CellID->2096017719]
}, Open  ]],
Cell[930373, 22618, 90, 1, 70, "MathCaption",ExpressionUUID->"b1a706aa-59e4-405b-9c44-2d1d3f543aae",
 CellID->292613774],
Cell[CellGroupData[{
Cell[930488, 22623, 170, 4, 70, "Input",ExpressionUUID->"3b8a789b-9187-4c05-8759-64a73f8a9bf0",
 CellID->222147988],
Cell[930661, 22629, 265, 7, 70, "Output",ExpressionUUID->"4a3d775b-2ba3-4aef-a16a-3a9bee72eff1",
 CellID->448057845]
}, Open  ]],
Cell[930941, 22639, 394, 7, 70, "Text",ExpressionUUID->"859bf2fe-c531-45c0-a7c6-b9048b761f78",
 CellID->1796883614],
Cell[931338, 22648, 472, 13, 70, "MathCaption",ExpressionUUID->"2ba2df13-284f-41de-b300-c113383dfbc7",
 CellID->306227952],
Cell[CellGroupData[{
Cell[931835, 22665, 508, 14, 70, "Input",ExpressionUUID->"46dccb94-9014-4f37-8015-e75a98026351",
 CellID->1402371052],
Cell[932346, 22681, 10617, 274, 70, "Output",ExpressionUUID->"66348791-90e0-4d5c-9159-1d261073d5ec",
 CellID->1430534533]
}, Open  ]],
Cell[942978, 22958, 81, 1, 70, "MathCaption",ExpressionUUID->"8414aa19-1e72-46b0-bed9-d34208b42d2b",
 CellID->136402831],
Cell[CellGroupData[{
Cell[943084, 22963, 175, 5, 70, "Input",ExpressionUUID->"8eb50570-6c57-469b-bf45-264e0828efc8",
 CellID->1157329268],
Cell[943262, 22970, 290, 7, 70, "Output",ExpressionUUID->"5f5b143c-81bc-492e-964c-ec2713a10bf3",
 CellID->1914467966]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[943601, 22983, 71, 1, 70, "Subsubsubsection",ExpressionUUID->"4a37dfbe-e2c0-47ae-9140-b3105419a70a",
 CellID->1560572010],
Cell[943675, 22986, 484, 13, 70, "Text",ExpressionUUID->"2d195e7c-19cc-4c09-8541-ec6e06cea9a1",
 CellID->1315991259],
Cell[944162, 23001, 526, 16, 70, "DefinitionBox",ExpressionUUID->"d66eb9a3-b997-4678-91a7-02081b4b52b3",
 CellID->391089394],
Cell[944691, 23019, 111, 3, 70, "Caption",ExpressionUUID->"d94ba608-8783-4391-915b-e64a37d99a47",
 CellID->1739485138],
Cell[944805, 23024, 1518, 44, 70, "DefinitionBox3Col",ExpressionUUID->"1c1e2ba5-c2d5-4b83-a145-0ba261e7b129",
 CellID->2083543412],
Cell[946326, 23070, 267, 11, 70, "Caption",ExpressionUUID->"39c98acd-ee72-4b2b-82ac-88aee1faf762",
 CellID->1245777502],
Cell[946596, 23083, 336, 8, 70, "MathCaption",ExpressionUUID->"04b0ae97-4921-4ff4-8661-0d66d94503dc",
 CellID->178778395],
Cell[CellGroupData[{
Cell[946957, 23095, 313, 7, 70, "Input",ExpressionUUID->"73ab06b3-b188-45c3-a242-b6eec1223057",
 CellID->398862612],
Cell[947273, 23104, 10616, 274, 70, "Output",ExpressionUUID->"f188c1fe-8a42-481d-bccf-6cc48b2c8c27",
 CellID->715621561]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[957938, 23384, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"8f2bddde-f04e-4d21-8464-378a667478cc",
 CellID->1066609228],
Cell[958001, 23387, 487, 15, 70, "Text",ExpressionUUID->"7aa9358c-0c94-489a-9ff0-a3e2908e60ef",
 CellID->1455293487],
Cell[CellGroupData[{
Cell[958513, 23406, 214, 6, 70, "Input",ExpressionUUID->"d024447f-e8a0-4a5a-bd59-0d91e6d64458",
 CellID->1426380326],
Cell[CellGroupData[{
Cell[958752, 23416, 5297, 154, 70, "Print",ExpressionUUID->"9dffd583-9a88-46d9-91b9-dbd596e77182",
 CellID->1543152527],
Cell[964052, 23572, 499, 13, 70, "Print",ExpressionUUID->"5d77886b-4e72-4302-b3fe-c668e2d272d1",
 CellID->604516470],
Cell[964554, 23587, 54921, 1136, 70, "Print",ExpressionUUID->"471feee8-ff83-422f-8b68-1f37f8428bb4",
 CellID->363177333]
}, Open  ]],
Cell[1019490, 24726, 10607, 274, 70, "Output",ExpressionUUID->"cf272dfb-8a73-4695-a81c-b9c30b826352",
 CellID->772910957]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1030158, 25007, 73, 1, 70, "Subsubsection",ExpressionUUID->"dc401e09-35a3-4a54-8715-a68e2c967726",
 CellID->1796762249],
Cell[1030234, 25010, 93, 1, 70, "Text",ExpressionUUID->"6121f890-1dcd-41c9-9041-b00690d59b23",
 CellID->1723717413],
Cell[1030330, 25013, 145, 4, 70, "MathCaption",ExpressionUUID->"3c084541-50ca-4f08-8a26-a005a366ece0",
 CellID->141883528],
Cell[CellGroupData[{
Cell[1030500, 25021, 171, 4, 70, "Input",ExpressionUUID->"c13a229f-2d31-4435-b334-e9a78b1ea5f3",
 CellID->929606926],
Cell[1030674, 25027, 9647, 248, 70, "Output",ExpressionUUID->"37a62a82-08b3-4eaf-9a07-0eb2a62aa4d1",
 CellID->185873596]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1040370, 25281, 100, 1, 70, "Subsubsection",ExpressionUUID->"f6e8e1e7-ef31-401a-bb2c-6b1819151e59",
 CellID->1908271188],
Cell[1040473, 25284, 292, 10, 70, "MathCaption",ExpressionUUID->"aaee6197-e413-406a-ade6-1ccba9f35d08",
 CellID->1758442397],
Cell[CellGroupData[{
Cell[1040790, 25298, 197, 5, 70, "Input",ExpressionUUID->"58031ede-67c4-42a2-a3c1-d6a4ad91a177",
 CellID->471416365],
Cell[1040990, 25305, 10412, 263, 70, "Output",ExpressionUUID->"cf575986-e9ec-422a-b65a-7b27fd0f4c0f",
 CellID->1536305234]
}, Open  ]],
Cell[1051417, 25571, 355, 12, 70, "MathCaption",ExpressionUUID->"8de4161d-066a-4552-9615-0cf34fe346e2",
 CellID->2143452651],
Cell[CellGroupData[{
Cell[1051797, 25587, 176, 4, 70, "Input",ExpressionUUID->"7f20bfdb-795f-42ff-843c-09474a1a69a6",
 CellID->970526932],
Cell[1051976, 25593, 10412, 263, 70, "Output",ExpressionUUID->"3be97ba1-9f8e-4f11-a03a-f1f915ad2a71",
 CellID->1486179957]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1062449, 25863, 67, 1, 70, "Subsection",ExpressionUUID->"8e404690-c828-4118-8a8b-3aee20a68539",
 CellID->1059869896],
Cell[1062519, 25866, 532, 9, 70, "Text",ExpressionUUID->"1dd92bba-4c4b-4d23-a4c6-9761a8907b4b",
 CellID->214174283],
Cell[CellGroupData[{
Cell[1063076, 25879, 73, 1, 70, "Subsubsection",ExpressionUUID->"c84c9472-cde5-4dd9-bc63-34158a485e75",
 CellID->444582009],
Cell[1063152, 25882, 74, 1, 70, "Text",ExpressionUUID->"e93ae61a-2c34-4a82-a57f-93a19aa346f0",
 CellID->168882663],
Cell[CellGroupData[{
Cell[1063251, 25887, 195, 5, 70, "Input",ExpressionUUID->"98a14369-0cec-432b-9955-be6aa1419918",
 CellID->1585019354],
Cell[1063449, 25894, 11281, 289, 70, "Output",ExpressionUUID->"b300d26c-71c1-4908-9595-6f09ee1ed4af",
 CellID->844239042]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1074779, 26189, 122, 3, 70, "Subsubsection",ExpressionUUID->"8e0068d3-6f42-49ff-9b0d-64a14be7d114",
 CellID->1807183132],
Cell[1074904, 26194, 374, 8, 70, "MathCaption",ExpressionUUID->"954947fc-b25e-4251-9581-6bf21ffac238",
 CellID->1847604807],
Cell[CellGroupData[{
Cell[1075303, 26206, 312, 7, 70, "Input",ExpressionUUID->"c3467f63-1ca2-4b0b-8293-919f636e7e20",
 CellID->80455629],
Cell[CellGroupData[{
Cell[1075640, 26217, 425, 10, 70, "Print",ExpressionUUID->"ab67e5da-dc0d-464b-ae29-08cf335c4216",
 CellID->534263066],
Cell[1076068, 26229, 423, 10, 70, "Print",ExpressionUUID->"b1ddaa79-9244-4b72-87c8-3361ed6ea7aa",
 CellID->2122200127],
Cell[1076494, 26241, 422, 10, 70, "Print",ExpressionUUID->"2162354c-05d0-4fa5-8c60-732ba5bfa4d2",
 CellID->840909824],
Cell[1076919, 26253, 421, 10, 70, "Print",ExpressionUUID->"572596e5-dd27-4702-9375-79926d7c5bb3",
 CellID->53150085],
Cell[1077343, 26265, 423, 10, 70, "Print",ExpressionUUID->"f38ab40c-2a67-4d58-ae90-d2721e451b20",
 CellID->1067283359],
Cell[1077769, 26277, 407, 10, 70, "Print",ExpressionUUID->"774a85e5-f6ca-42c4-8df0-69f36b361ca4",
 CellID->1639847900],
Cell[1078179, 26289, 409, 10, 70, "Print",ExpressionUUID->"1051f400-a35f-43fa-a331-b4853d23cea1",
 CellID->961166574],
Cell[1078591, 26301, 409, 10, 70, "Print",ExpressionUUID->"852543e9-7ada-4aae-a0de-a60c2d810bab",
 CellID->1489251853],
Cell[1079003, 26313, 410, 10, 70, "Print",ExpressionUUID->"d61035b2-4d97-4022-be40-b9b1260b861a",
 CellID->1713518480],
Cell[1079416, 26325, 409, 10, 70, "Print",ExpressionUUID->"11667f7f-e906-40cc-b1b8-7a277653aa47",
 CellID->499513137],
Cell[1079828, 26337, 406, 10, 70, "Print",ExpressionUUID->"f6957c03-0f6e-494e-aded-4e7292761cdd",
 CellID->406807222],
Cell[1080237, 26349, 422, 10, 70, "Print",ExpressionUUID->"8ed4c9d2-3b42-42fa-a049-5abd176b29d8",
 CellID->690439218],
Cell[1080662, 26361, 425, 10, 70, "Print",ExpressionUUID->"210673c2-5dc9-4993-9314-ce6da3efb3a4",
 CellID->820946473]
}, Open  ]],
Cell[1081102, 26374, 10682, 273, 70, "Output",ExpressionUUID->"96ee7afb-da2f-4100-8076-a1fbd19e35eb",
 CellID->2128264267]
}, Open  ]],
Cell[1091799, 26650, 199, 7, 70, "MathCaption",ExpressionUUID->"a79c2f01-f0c5-4064-84fe-68ccab61d87c",
 CellID->1446718475],
Cell[1092001, 26659, 243, 7, 70, "Input",ExpressionUUID->"44ba9f37-ba0a-4bdd-96ea-d3f45f665e03",
 CellID->1187557991],
Cell[1092247, 26668, 90, 1, 70, "MathCaption",ExpressionUUID->"74f2626e-541b-4c21-a5c3-cdefc019dd98",
 CellID->918869862],
Cell[CellGroupData[{
Cell[1092362, 26673, 188, 5, 70, "Input",ExpressionUUID->"e0be1e3a-48e2-4b14-8521-378e507cef68",
 CellID->890865057],
Cell[1092553, 26680, 266, 7, 70, "Output",ExpressionUUID->"173f2bef-0025-4f4d-bc79-93dc03412d39",
 CellID->1249911037]
}, Open  ]],
Cell[1092834, 26690, 514, 13, 70, "MathCaption",ExpressionUUID->"6fc63145-9888-469c-af14-d4eeb25228cb",
 CellID->916506595],
Cell[1093351, 26705, 557, 16, 70, "Input",ExpressionUUID->"6ae966c4-5341-46a1-a8e4-c7bd509e9216",
 CellID->1973625881],
Cell[1093911, 26723, 80, 1, 70, "MathCaption",ExpressionUUID->"b26ca210-5f01-4611-ac96-d48c3c0b10bb",
 CellID->19000568],
Cell[CellGroupData[{
Cell[1094016, 26728, 197, 6, 70, "Input",ExpressionUUID->"a371c5be-ad6a-4958-9c0f-b28d4c2ede0e",
 CellID->1514966620],
Cell[1094216, 26736, 289, 7, 70, "Output",ExpressionUUID->"50267145-e174-4444-922f-dc6decb4c5f0",
 CellID->569763905]
}, Open  ]],
Cell[1094520, 26746, 349, 9, 70, "MathCaption",ExpressionUUID->"c670d097-8401-4e81-8231-5d35d6216b47",
 CellID->1183809265],
Cell[CellGroupData[{
Cell[1094894, 26759, 332, 7, 70, "Input",ExpressionUUID->"44c53310-8917-449b-a4ce-87410f95c522",
 CellID->1993811047],
Cell[1095229, 26768, 10699, 273, 70, "Output",ExpressionUUID->"85557e6f-4786-4979-9a2f-3172a66c9ab5",
 CellID->1808037231]
}, Open  ]],
Cell[1105943, 27044, 497, 15, 70, "Text",ExpressionUUID->"78f072ab-398a-40b0-9c4d-e998b47cf9b5",
 CellID->1212150445],
Cell[CellGroupData[{
Cell[1106465, 27063, 232, 6, 70, "Input",ExpressionUUID->"63d1e364-2bad-494a-930c-b5a460b5689a",
 CellID->1582653673],
Cell[CellGroupData[{
Cell[1106722, 27073, 10252, 303, 70, "Print",ExpressionUUID->"e79c7a71-727a-46b9-8464-a5dec38a2597",
 CellID->1368119989],
Cell[1116977, 27378, 819, 20, 70, "Print",ExpressionUUID->"70ab9acc-9164-4fa0-a16c-40f9e4cf192d",
 CellID->885246694],
Cell[1117799, 27400, 115759, 2384, 70, "Print",ExpressionUUID->"c92651f7-eb15-4cda-a0ad-c4bb8bc087bd",
 CellID->574479642]
}, Open  ]],
Cell[1233573, 29787, 10722, 274, 70, "Output",ExpressionUUID->"7b97d11e-e9be-409e-afa7-f5856bb9981f",
 CellID->314696655]
}, Open  ]],
Cell[1244310, 30064, 125, 3, 70, "MathCaption",ExpressionUUID->"34f76235-1046-4f8f-bca2-f710c751a233",
 CellID->1388846014],
Cell[CellGroupData[{
Cell[1244460, 30071, 193, 5, 70, "Input",ExpressionUUID->"c9918730-c5e7-42c9-bc13-2b3d9bf410bf",
 CellID->1335198055],
Cell[1244656, 30078, 8681, 227, 70, "Output",ExpressionUUID->"66801a18-549f-4fc3-911b-433e7fd3e12c",
 CellID->2001941671]
}, Open  ]],
Cell[1253352, 30308, 292, 10, 70, "MathCaption",ExpressionUUID->"7d25f5da-1139-4246-9e78-b7873a97241b",
 CellID->1164916883],
Cell[CellGroupData[{
Cell[1253669, 30322, 217, 6, 70, "Input",ExpressionUUID->"feccaace-7a71-454e-a709-4f248cef745e",
 CellID->149642882],
Cell[1253889, 30330, 9710, 249, 70, "Output",ExpressionUUID->"9ed3ef56-7a71-4bdd-91e9-04949f9ea6e5",
 CellID->2007366948]
}, Open  ]],
Cell[1263614, 30582, 355, 12, 70, "MathCaption",ExpressionUUID->"2c81249c-225d-44d6-9baf-acd8f70c176c",
 CellID->1523959247],
Cell[CellGroupData[{
Cell[1263994, 30598, 197, 5, 70, "Input",ExpressionUUID->"9b114c4f-868f-46d7-992c-e4a7ff21038f",
 CellID->145606560],
Cell[1264194, 30605, 9709, 249, 70, "Output",ExpressionUUID->"adb7d92d-aeb7-4e21-a64b-13ede7ae2440",
 CellID->848200666]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1273964, 30861, 81, 1, 70, "Subsection",ExpressionUUID->"41b24f6a-9f8f-47f9-a386-401a02401ab7",
 CellID->2003973854],
Cell[1274048, 30864, 890, 28, 70, "Text",ExpressionUUID->"01624610-ef07-4a67-afd9-438219811b97",
 CellID->1328457457],
Cell[1274941, 30894, 159, 4, 70, "MathCaption",ExpressionUUID->"2f797b3e-7a32-44ba-9360-1a868843b6b7",
 CellID->1629616244],
Cell[CellGroupData[{
Cell[1275125, 30902, 226, 6, 70, "Input",ExpressionUUID->"350d4a08-c97f-4f06-a24e-9f709b7e4e1e",
 CellID->2101262717],
Cell[1275354, 30910, 91, 2, 70, "Output",ExpressionUUID->"07e0460a-be2b-4d6d-a2e6-6553c4e6e917",
 CellID->384258966]
}, Open  ]],
Cell[1275460, 30915, 140, 4, 70, "MathCaption",ExpressionUUID->"50fedfaf-deca-44f0-ad60-a422659bfd0e",
 CellID->218785383],
Cell[CellGroupData[{
Cell[1275625, 30923, 297, 8, 70, "Input",ExpressionUUID->"c8a4f147-7946-4308-8d0c-107e3bad2f82",
 CellID->633928417],
Cell[1275925, 30933, 586, 17, 70, "Output",ExpressionUUID->"cbacaeed-63cd-42dc-9610-7e4b82e36939",
 CellID->1148116342]
}, Open  ]],
Cell[1276526, 30953, 125, 3, 70, "MathCaption",ExpressionUUID->"662bd478-b672-4534-9f10-3760c3248383",
 CellID->1746502806],
Cell[CellGroupData[{
Cell[1276676, 30960, 364, 8, 70, "Input",ExpressionUUID->"db68b810-6e42-4726-a2b0-30deba089d28",
 CellID->1666173246],
Cell[1277043, 30970, 136, 2, 70, "Print",ExpressionUUID->"f61a73b3-0759-4dee-a2d0-93c2ce8c1108",
 CellID->1621576223],
Cell[1277182, 30974, 8728, 228, 70, "Output",ExpressionUUID->"683c76b0-b481-4961-8c4c-86f7b0c87dda",
 CellID->116615884]
}, Open  ]],
Cell[1285925, 31205, 763, 24, 70, "Text",ExpressionUUID->"5a7e76bc-7369-4444-82eb-ace9d1c74b21",
 CellID->808687274],
Cell[1286691, 31231, 98, 1, 70, "MathCaption",ExpressionUUID->"04e7dfbc-de42-4201-81b6-459d92237eb0",
 CellID->690387281],
Cell[CellGroupData[{
Cell[1286814, 31236, 122, 3, 70, "Input",ExpressionUUID->"b787dcf5-f860-4bdc-8992-866208271a63",
 CellID->484887026],
Cell[1286939, 31241, 230, 6, 70, "Output",ExpressionUUID->"96e33795-b3c5-4968-b956-10cb06e5b401",
 CellID->459471277]
}, Open  ]],
Cell[1287184, 31250, 92, 1, 70, "MathCaption",ExpressionUUID->"f0bf735e-0e5e-418a-ac31-bf07f1279a10",
 CellID->1931356472],
Cell[CellGroupData[{
Cell[1287301, 31255, 181, 6, 70, "Input",ExpressionUUID->"a70c7769-0dfa-48ea-a840-b80af0034cb6",
 CellID->1092900499],
Cell[1287485, 31263, 449, 11, 70, "Output",ExpressionUUID->"076fa40b-cc95-4974-b65d-9dbe8bfcfb89",
 CellID->1294671978]
}, Open  ]],
Cell[1287949, 31277, 104, 2, 70, "MathCaption",ExpressionUUID->"1dc23498-d219-4d55-97fb-fa38c4fba764",
 CellID->642146293],
Cell[CellGroupData[{
Cell[1288078, 31283, 186, 6, 70, "Input",ExpressionUUID->"9e831dc4-86bb-404d-87b2-6717a8d56037",
 CellID->1447420276],
Cell[1288267, 31291, 6723, 159, 70, "Output",ExpressionUUID->"eaa0338f-f4b3-45c7-91de-14e5de302e82",
 CellID->157992455]
}, Open  ]],
Cell[1295005, 31453, 579, 19, 70, "MathCaption",ExpressionUUID->"6035af73-d7a6-405a-b4eb-976c660e0ac2",
 CellID->1243280944],
Cell[CellGroupData[{
Cell[1295609, 31476, 276, 7, 70, "Input",ExpressionUUID->"7789abff-920b-4b3f-99ed-60bfa504a967",
 CellID->806940498],
Cell[1295888, 31485, 616, 12, 70, "Output",ExpressionUUID->"c81d4732-5b25-4a73-bfff-b124ed1f8509",
 CellID->1715219372]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1296565, 31504, 55, 1, 70, "Section",ExpressionUUID->"76620ca4-0adb-40ae-9585-8c7600bef0a2",
 CellID->779816621],
Cell[CellGroupData[{
Cell[1296645, 31509, 80, 1, 70, "Subsection",ExpressionUUID->"5b65b71e-c874-464a-b31d-fcd147f0e18b",
 CellID->1971981026],
Cell[1296728, 31512, 980, 35, 70, "Text",ExpressionUUID->"80795650-9200-4550-a7e0-825258074119",
 CellID->1838680125],
Cell[1297711, 31549, 186, 4, 70, "MathCaption",ExpressionUUID->"036d610d-1a99-497a-a26b-98d7182b292d",
 CellID->902655240],
Cell[CellGroupData[{
Cell[1297922, 31557, 334, 10, 70, "Input",ExpressionUUID->"c0f62060-b54c-4bdc-a2c3-95040ef20c43",
 CellID->1102136272],
Cell[1298259, 31569, 10178, 263, 70, "Output",ExpressionUUID->"8716d7d9-081c-4cc4-adaa-46bf76f21a6a",
 CellID->1616524567]
}, Open  ]],
Cell[CellGroupData[{
Cell[1308474, 31837, 334, 10, 70, "Input",ExpressionUUID->"deb32eb5-50f1-4402-9fcf-69f1692cf922",
 CellID->1021092447],
Cell[1308811, 31849, 10967, 283, 70, "Output",ExpressionUUID->"e9143450-ad83-4f6f-a732-a7e57477224b",
 CellID->1548290285]
}, Open  ]],
Cell[1319793, 32135, 266, 7, 70, "MathCaption",ExpressionUUID->"e3203610-b93f-4289-8cd9-ba955b61e1fa",
 CellID->969019879],
Cell[CellGroupData[{
Cell[1320084, 32146, 162, 5, 70, "Input",ExpressionUUID->"bedede53-a898-4a3c-a9a6-958d4390ac7e",
 CellID->1948611152],
Cell[1320249, 32153, 337, 7, 70, "Output",ExpressionUUID->"29c0ebe1-0a2a-4642-a6ad-7fa95954ece8",
 CellID->1243364280]
}, Open  ]],
Cell[CellGroupData[{
Cell[1320623, 32165, 161, 5, 70, "Input",ExpressionUUID->"1a5d78e3-2b34-45f0-b606-0f1ce2a9ca3c",
 CellID->619818574],
Cell[1320787, 32172, 337, 7, 70, "Output",ExpressionUUID->"01241189-5eed-4f0d-ad18-c2df02fec632",
 CellID->1440862894]
}, Open  ]],
Cell[1321139, 32182, 177, 4, 70, "Text",ExpressionUUID->"84776f10-53ba-4a0f-926e-8f2bc3731355",
 CellID->1900924848],
Cell[1321319, 32188, 300, 10, 70, "MathCaption",ExpressionUUID->"e8f9ad2d-8298-469a-89b1-aa2cb1ee951e",
 CellID->729703917],
Cell[CellGroupData[{
Cell[1321644, 32202, 246, 8, 70, "Input",ExpressionUUID->"ca9d1afe-4436-48b7-9bf2-abe49d5e9a2d",
 CellID->2002108649],
Cell[1321893, 32212, 1022, 28, 70, "Output",ExpressionUUID->"7db5c6b6-ae9c-4f9f-b73e-042dafa5d49f",
 CellID->81485738]
}, Open  ]],
Cell[1322930, 32243, 1053, 28, 70, "Text",ExpressionUUID->"b68c46e5-a9f5-4259-b7e6-30afd29da0bd",
 CellID->527526154],
Cell[1323986, 32273, 359, 12, 70, "MathCaption",ExpressionUUID->"5c19befe-eca0-4083-b4bd-a074b9f367c0",
 CellID->449223127],
Cell[CellGroupData[{
Cell[1324370, 32289, 279, 8, 70, "Input",ExpressionUUID->"966f2cd4-f181-410e-a65c-f3271e42ce61",
 CellID->1688076284],
Cell[1324652, 32299, 10659, 275, 70, "Output",ExpressionUUID->"915a386d-566b-475d-b899-faee281f6250",
 CellID->2034427395]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1335360, 32580, 72, 1, 70, "Subsection",ExpressionUUID->"b5e372b5-f0b5-44f4-8202-9a69bc23aa68",
 CellID->1357359281],
Cell[1335435, 32583, 472, 8, 70, "Text",ExpressionUUID->"9877ce9d-b91b-42b9-b223-ed4a96032ba1",
 CellID->1802528277],
Cell[CellGroupData[{
Cell[1335932, 32595, 144, 4, 70, "Subsubsection",ExpressionUUID->"ee996068-d287-47e7-8280-b75e1d32480f",
 CellID->524759768],
Cell[CellGroupData[{
Cell[1336101, 32603, 80, 1, 70, "Subsubsubsection",ExpressionUUID->"742432fc-c30f-478a-bae5-f51b26c5ec3c",
 CellID->1551861331],
Cell[1336184, 32606, 391, 7, 70, "Text",ExpressionUUID->"ba7f90cf-9a55-4b86-85d2-99d8a21ab599",
 CellID->944497302],
Cell[1336578, 32615, 594, 18, 70, "DefinitionBox",ExpressionUUID->"8fc83e15-f6aa-49a3-bbf0-d2cf221c9522",
 CellID->1659581078],
Cell[1337175, 32635, 206, 7, 70, "Caption",ExpressionUUID->"56e005e5-f916-4ab4-bf55-3cedab54cd65",
 CellID->1061570710],
Cell[1337384, 32644, 2285, 63, 70, "DefinitionBox3Col",ExpressionUUID->"2897f459-c307-46b3-96ff-8aeac0bb5d7f",
 CellID->524783694],
Cell[1339672, 32709, 268, 11, 70, "Caption",ExpressionUUID->"86894eef-3269-4022-82e2-4621891e328a",
 CellID->324206829],
Cell[1339943, 32722, 138, 4, 70, "MathCaption",ExpressionUUID->"8a5747c4-4866-4727-b92f-d4af30cab4d2",
 CellID->873132756],
Cell[CellGroupData[{
Cell[1340106, 32730, 334, 9, 70, "Input",ExpressionUUID->"803f876e-a37c-4398-abcc-e3d37a40a31a",
 CellID->986470141],
Cell[1340443, 32741, 10678, 276, 70, "Output",ExpressionUUID->"b0e593d2-f593-48ed-a180-2e86892e8e39",
 CellID->469857818]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1351170, 33023, 73, 1, 70, "Subsubsubsection",ExpressionUUID->"ae56ad6b-9c1c-4915-9243-a91ca194b4c0",
 CellID->128983684],
Cell[1351246, 33026, 356, 8, 70, "MathCaption",ExpressionUUID->"447d4d2e-c833-4629-a6d9-b4740dcfc149",
 CellID->1069961234],
Cell[CellGroupData[{
Cell[1351627, 33038, 309, 7, 70, "Input",ExpressionUUID->"33eff7d9-3115-4a03-a334-684ad3a6e7bc",
 CellID->1957883507],
Cell[CellGroupData[{
Cell[1351961, 33049, 421, 10, 70, "Print",ExpressionUUID->"fb3df54d-c3b7-47d6-893d-d8a2e488069e",
 CellID->64325918],
Cell[1352385, 33061, 425, 10, 70, "Print",ExpressionUUID->"52776377-8c65-4472-b3ae-2d595e5f483d",
 CellID->107170713],
Cell[1352813, 33073, 421, 10, 70, "Print",ExpressionUUID->"d4109c49-4739-4679-8364-2f22335b52f3",
 CellID->95796752],
Cell[1353237, 33085, 422, 10, 70, "Print",ExpressionUUID->"050842a8-7733-42be-a608-3c853cab2d9e",
 CellID->824325630],
Cell[1353662, 33097, 425, 10, 70, "Print",ExpressionUUID->"46024653-d16e-40ff-afe6-0c5d475f0a97",
 CellID->524837664],
Cell[1354090, 33109, 426, 10, 70, "Print",ExpressionUUID->"bd6870d0-020f-41d9-a393-e118341c9d26",
 CellID->1492609609],
Cell[1354519, 33121, 426, 10, 70, "Print",ExpressionUUID->"24a19ad1-fd73-4d30-bf21-0b67956a719a",
 CellID->1812054345],
Cell[1354948, 33133, 423, 10, 70, "Print",ExpressionUUID->"627a2f00-9eca-4fe6-865e-b85242196b95",
 CellID->1204774573],
Cell[1355374, 33145, 423, 10, 70, "Print",ExpressionUUID->"0a1a8f43-5214-473a-8e1a-25849971cf47",
 CellID->1653787195],
Cell[1355800, 33157, 426, 10, 70, "Print",ExpressionUUID->"061e4de6-7c48-44d5-b257-d530469d8041",
 CellID->1967842748],
Cell[1356229, 33169, 423, 10, 70, "Print",ExpressionUUID->"fe38b052-bd26-4c7f-be80-3e15d50be5ec",
 CellID->1388283531],
Cell[1356655, 33181, 421, 10, 70, "Print",ExpressionUUID->"34b29c11-863f-41c2-88bc-7efc1f9b6e8c",
 CellID->66431071]
}, Open  ]],
Cell[1357091, 33194, 10420, 269, 70, "Output",ExpressionUUID->"72dff077-2e5a-4b80-ac7d-7c940442d0e6",
 CellID->637169717]
}, Open  ]],
Cell[1367526, 33466, 123, 3, 70, "MathCaption",ExpressionUUID->"e42c0ab0-6661-4d16-95db-07d2fb4e3a4c",
 CellID->2078239195],
Cell[CellGroupData[{
Cell[1367674, 33473, 313, 10, 70, "Input",ExpressionUUID->"6029c629-91b5-461a-a663-5f9fbcd48755",
 CellID->144631910],
Cell[1367990, 33485, 48485, 1030, 70, "Output",ExpressionUUID->"acd0653a-5cba-482e-bb19-5cb08266d6f2",
 CellID->841573546]
}, Open  ]],
Cell[1416490, 34518, 94, 1, 70, "MathCaption",ExpressionUUID->"9ae631ee-60b4-4417-aaf7-d76e4df5e55d",
 CellID->1914505686],
Cell[CellGroupData[{
Cell[1416609, 34523, 654, 15, 70, "Input",ExpressionUUID->"41f9894e-c2d3-44a6-ae3b-dfc5df19094e",
 CellID->1349581601],
Cell[1417266, 34540, 10491, 271, 70, "Output",ExpressionUUID->"17b93007-735c-4d1d-9840-3ab9dd6edcd6",
 CellID->1805328114]
}, Open  ]],
Cell[1427772, 34814, 134, 4, 70, "MathCaption",ExpressionUUID->"b98631ad-f997-495a-a34b-c224871aa030",
 CellID->2141940815],
Cell[CellGroupData[{
Cell[1427931, 34822, 312, 10, 70, "Input",ExpressionUUID->"1f5bf950-4bbf-4cd0-9ce2-3a43eb909d0b",
 CellID->1785374157],
Cell[1428246, 34834, 35100, 648, 70, "Output",ExpressionUUID->"e48c34fb-24a5-40a6-b214-f15e6571684b",
 CellID->628044284]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1463395, 35488, 78, 1, 70, "Subsubsubsection",ExpressionUUID->"06892f8f-e50e-4420-ba75-944d8ff9ee6c",
 CellID->418653686],
Cell[1463476, 35491, 213, 5, 70, "Text",ExpressionUUID->"31e6ede9-dc31-4645-ab4b-f60ea4ea9d77",
 CellID->1156073030],
Cell[1463692, 35498, 1108, 22, 70, "Input",ExpressionUUID->"b568f8ad-3a41-4d46-8aa2-f3f519882063",
 CellID->38250836],
Cell[1464803, 35522, 184, 7, 70, "MathCaption",ExpressionUUID->"0ee1e37d-b24e-4a93-8ec5-3f4350fbee72",
 CellID->1834860801],
Cell[CellGroupData[{
Cell[1465012, 35533, 208, 6, 70, "Input",ExpressionUUID->"2a7205fe-9465-467b-9ecd-68ee2e4dc4b5",
 CellID->640311487],
Cell[1465223, 35541, 10410, 269, 70, "Output",ExpressionUUID->"dfa47a3c-0ef1-48c1-8069-ac755e14c52f",
 CellID->658156183]
}, Open  ]],
Cell[1475648, 35813, 90, 1, 70, "MathCaption",ExpressionUUID->"046abdaa-f489-41dd-a9f8-009c9040c1aa",
 CellID->571106757],
Cell[CellGroupData[{
Cell[1475763, 35818, 178, 4, 70, "Input",ExpressionUUID->"132f140d-2583-4175-becb-84c6a3767da2",
 CellID->1486846456],
Cell[1475944, 35824, 253, 7, 70, "Output",ExpressionUUID->"09860109-0625-4d9d-b081-8a1a4f8b8bc9",
 CellID->2090185631]
}, Open  ]],
Cell[1476212, 35834, 308, 6, 70, "Text",ExpressionUUID->"3f1e91c3-cfe1-4fc7-8afc-1c6bef36011a",
 CellID->280773926],
Cell[1476523, 35842, 362, 12, 70, "MathCaption",ExpressionUUID->"444e9295-d34d-4961-80e1-c933d4461633",
 CellID->945801823],
Cell[CellGroupData[{
Cell[1476910, 35858, 524, 13, 70, "Input",ExpressionUUID->"a8b53ba9-e264-4fc2-b31e-2ff00b0fe5d3",
 CellID->417284067],
Cell[1477437, 35873, 10456, 270, 70, "Output",ExpressionUUID->"9adc40cb-5136-4d8d-b368-cbe12aec0c79",
 CellID->1212402591]
}, Open  ]],
Cell[1487908, 36146, 81, 1, 70, "MathCaption",ExpressionUUID->"16f49e8b-f140-4bf3-a201-ee8a0bac59a2",
 CellID->430709602],
Cell[CellGroupData[{
Cell[1488014, 36151, 183, 5, 70, "Input",ExpressionUUID->"c5917d5f-34a3-4645-9637-8550f5a11103",
 CellID->1916390424],
Cell[1488200, 36158, 290, 7, 70, "Output",ExpressionUUID->"a0ee074f-72ac-4848-bfc2-7f909a7d1ff8",
 CellID->1525504201]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1488539, 36171, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"63046d9a-8cad-4da1-9e96-0ca0013954dc",
 CellID->1084739385],
Cell[1488602, 36174, 600, 16, 70, "Text",ExpressionUUID->"ae760271-8aba-461f-9d4b-69c57e045b35",
 CellID->1226164312],
Cell[CellGroupData[{
Cell[1489227, 36194, 300, 8, 70, "Input",ExpressionUUID->"065c5a3f-fcb9-485e-84cd-946acc99fc6d",
 CellID->890515172],
Cell[CellGroupData[{
Cell[1489552, 36206, 4555, 133, 70, "Print",ExpressionUUID->"ae94e514-0495-48b0-b212-f46b819bfde7",
 CellID->341844674],
Cell[1494110, 36341, 450, 12, 70, "Print",ExpressionUUID->"e84a8e71-a9e8-4874-96c7-223ec4bc7958",
 CellID->864680193],
Cell[1494563, 36355, 45711, 949, 70, "Print",ExpressionUUID->"60f9370b-5fae-43ce-9641-3d71827b32e4",
 CellID->658164502]
}, Open  ]],
Cell[1540289, 37307, 10247, 265, 70, "Output",ExpressionUUID->"770c4a7b-6bf4-472f-be60-d42ea6207154",
 CellID->82519417]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1550585, 37578, 69, 1, 70, "Subsubsubsection",ExpressionUUID->"c83a3904-4092-45dc-8d8c-30f2443ea869",
 CellID->1252715262],
Cell[1550657, 37581, 499, 13, 70, "Text",ExpressionUUID->"95589f83-1b16-46aa-8eda-4f0777621d0d",
 CellID->1581980320],
Cell[1551159, 37596, 685, 19, 70, "DefinitionBox",ExpressionUUID->"1f8a6eb7-ed40-4769-a9d1-e940d64c2015",
 CellID->472784104],
Cell[1551847, 37617, 314, 10, 70, "Caption",ExpressionUUID->"ca2f2869-b172-420b-a3e1-17458b938c7f",
 CellID->392942028],
Cell[1552164, 37629, 197, 4, 70, "MathCaption",ExpressionUUID->"2b38e882-05ea-4d6c-87e5-4d7d6a8f026c",
 CellID->1324534886],
Cell[CellGroupData[{
Cell[1552386, 37637, 225, 5, 70, "Input",ExpressionUUID->"41969555-187e-4df2-9982-ad796986e7c4",
 CellID->642344200],
Cell[1552614, 37644, 9079, 239, 70, "Output",ExpressionUUID->"39320215-e8d7-42df-b979-e6da06566a5b",
 CellID->524174621]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1561754, 37890, 75, 1, 70, "Subsubsection",ExpressionUUID->"46255a6a-0238-4f09-bf3f-063e4da583db",
 CellID->1109625018],
Cell[1561832, 37893, 92, 1, 70, "Text",ExpressionUUID->"7b9e677e-0aa3-475e-b537-399edf30c946",
 CellID->719686978],
Cell[1561927, 37896, 162, 4, 70, "MathCaption",ExpressionUUID->"b357059b-973a-4bed-87c3-264d33bb9aef",
 CellID->1151139342],
Cell[CellGroupData[{
Cell[1562114, 37904, 191, 6, 70, "Input",ExpressionUUID->"916de8ad-dcfb-4856-a805-10c82cf98db7",
 CellID->518745171],
Cell[1562308, 37912, 7419, 199, 70, "Output",ExpressionUUID->"c1c3c738-bee7-40d3-af10-b7d9ff061981",
 CellID->824935153]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1569776, 38117, 118, 3, 70, "Subsubsection",ExpressionUUID->"e40bc0fd-8b2f-437f-9662-28a20e872012",
 CellID->1009763177],
Cell[1569897, 38122, 488, 13, 70, "Text",ExpressionUUID->"fa55a315-e60b-42e9-89a8-28036eae275a",
 CellID->278067401],
Cell[1570388, 38137, 169, 4, 70, "MathCaption",ExpressionUUID->"1e237260-2a5e-4c67-8f53-d00894c91bf8",
 CellID->96962883],
Cell[CellGroupData[{
Cell[1570582, 38145, 250, 6, 70, "Input",ExpressionUUID->"2f814a6f-730a-414d-9590-a1f347ebc704",
 CellID->1862570155],
Cell[1570835, 38153, 8581, 225, 70, "Output",ExpressionUUID->"992b8882-a667-434d-a708-6330da055040",
 CellID->530691439]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1579465, 38384, 104, 2, 70, "Subsubsection",ExpressionUUID->"aabd934e-cc03-4d6e-aa25-57fc3f784184",
 CellID->1412731195],
Cell[1579572, 38388, 289, 10, 70, "MathCaption",ExpressionUUID->"47c62e19-5e29-413a-9fc4-47d9f94aaa8d",
 CellID->966741969],
Cell[CellGroupData[{
Cell[1579886, 38402, 208, 5, 70, "Input",ExpressionUUID->"eae31d89-4509-4bc3-a43b-bf168b08b4e1",
 CellID->170999781],
Cell[1580097, 38409, 9619, 247, 70, "Output",ExpressionUUID->"90862615-5dcb-46a8-b479-cc21af439a3a",
 CellID->1856841682]
}, Open  ]],
Cell[1589731, 38659, 354, 12, 70, "MathCaption",ExpressionUUID->"a342a328-a035-4c16-ae08-5b310067e2e4",
 CellID->245953314],
Cell[CellGroupData[{
Cell[1590110, 38675, 192, 5, 70, "Input",ExpressionUUID->"4b2ba395-1cbb-4639-96b8-57e64169d0f5",
 CellID->1978811570],
Cell[1590305, 38682, 9619, 247, 70, "Output",ExpressionUUID->"fa6a378a-12e5-41c0-8783-6c475b6f06ef",
 CellID->1324492706]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1599985, 38936, 68, 1, 70, "Subsection",ExpressionUUID->"db150e4a-abf4-49d2-9656-354d07c7fa5c",
 CellID->453326653],
Cell[1600056, 38939, 511, 9, 70, "Text",ExpressionUUID->"340ed184-039e-4f10-a1dd-74233632873c",
 CellID->184556424],
Cell[CellGroupData[{
Cell[1600592, 38952, 73, 1, 70, "Subsubsection",ExpressionUUID->"56714a45-22cd-4e2a-9d06-5dcd63915764",
 CellID->633718938],
Cell[1600668, 38955, 75, 1, 70, "Text",ExpressionUUID->"87d5e981-f730-4ce5-b313-a7fc5aa7f2e7",
 CellID->1542785493],
Cell[CellGroupData[{
Cell[1600768, 38960, 202, 5, 70, "Input",ExpressionUUID->"e3e1d9f1-9b4c-4faa-b191-69c6368b4a81",
 CellID->878226973],
Cell[1600973, 38967, 8910, 235, 70, "Output",ExpressionUUID->"3f4ad86f-2f6b-48c4-8fac-93d200f58e27",
 CellID->1614351122]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1609932, 39208, 123, 3, 70, "Subsubsection",ExpressionUUID->"5d3dcdbc-9c2e-4a9e-8511-0d3e635e19f9",
 CellID->360522749],
Cell[1610058, 39213, 160, 4, 70, "MathCaption",ExpressionUUID->"c7eeb581-9a22-48eb-85f0-615125a14d99",
 CellID->677226397],
Cell[1610221, 39219, 367, 10, 70, "Input",ExpressionUUID->"278348e2-5fab-45f2-ba53-9b18602e24e6",
 CellID->480725279],
Cell[1610591, 39231, 365, 8, 70, "MathCaption",ExpressionUUID->"9eaca4bc-6d9b-4a25-984a-9da731cd3cff",
 CellID->700277754],
Cell[CellGroupData[{
Cell[1610981, 39243, 327, 7, 70, "Input",ExpressionUUID->"f0d58a8c-ad1c-4021-ac6a-6b1b4cb3a0fe",
 CellID->1357825918],
Cell[CellGroupData[{
Cell[1611333, 39254, 423, 10, 70, "Print",ExpressionUUID->"cc98d55d-6a31-4929-bd53-fbaa0d6f0733",
 CellID->1877585153],
Cell[1611759, 39266, 425, 10, 70, "Print",ExpressionUUID->"8e2f221c-aab0-46d9-bc29-55b7ff8ace32",
 CellID->163355591],
Cell[1612187, 39278, 422, 10, 70, "Print",ExpressionUUID->"ec4c86d2-ba92-40b1-a2cd-c124c770f35e",
 CellID->259759008],
Cell[1612612, 39290, 425, 10, 70, "Print",ExpressionUUID->"fda354d7-a1ef-4161-8726-bd93e096f22a",
 CellID->778641117],
Cell[1613040, 39302, 425, 10, 70, "Print",ExpressionUUID->"4dd5ab1d-2190-46d0-9f4f-6f3f8f0382ab",
 CellID->617410823],
Cell[1613468, 39314, 421, 10, 70, "Print",ExpressionUUID->"fe9567d2-4ba4-4a4a-afb2-a50f74c03891",
 CellID->71021389],
Cell[1613892, 39326, 422, 10, 70, "Print",ExpressionUUID->"2e6fb410-1b3d-49b6-b9f5-07e2c6251fc9",
 CellID->901761449],
Cell[1614317, 39338, 422, 10, 70, "Print",ExpressionUUID->"443d91f5-e512-4f2e-b1cf-cf81ef1f5755",
 CellID->932516019],
Cell[1614742, 39350, 423, 10, 70, "Print",ExpressionUUID->"c89c8164-88c9-40a6-a74d-d8a6a1906240",
 CellID->1175383913],
Cell[1615168, 39362, 425, 10, 70, "Print",ExpressionUUID->"15129e07-030e-404a-b3ef-81d333fcb9fb",
 CellID->290081537],
Cell[1615596, 39374, 423, 10, 70, "Print",ExpressionUUID->"9327a2f7-c906-49e9-8095-5e700837b9f1",
 CellID->1628114812],
Cell[1616022, 39386, 425, 10, 70, "Print",ExpressionUUID->"61fb6ae6-e2f4-4f47-8a2f-a45992d24032",
 CellID->458717401]
}, Open  ]],
Cell[1616462, 39399, 8906, 234, 70, "Output",ExpressionUUID->"9bc3b998-7aa8-4caa-8ae7-12c0442748b7",
 CellID->197065877]
}, Open  ]],
Cell[1625383, 39636, 94, 1, 70, "MathCaption",ExpressionUUID->"6d14dca2-41c4-4bd8-bf43-39fd0c04cc66",
 CellID->1180721070],
Cell[CellGroupData[{
Cell[1625502, 39641, 681, 15, 70, "Input",ExpressionUUID->"153c4e1c-578b-4d3c-a7a3-f313d435d453",
 CellID->1630125210],
Cell[1626186, 39658, 9020, 237, 70, "Output",ExpressionUUID->"a0895243-9ed2-4ff2-9da5-ce3190320220",
 CellID->666411065]
}, Open  ]],
Cell[1635221, 39898, 217, 7, 70, "MathCaption",ExpressionUUID->"ba8b64de-0c9b-4121-9d59-23abed048723",
 CellID->314732997],
Cell[1635441, 39907, 249, 7, 70, "Input",ExpressionUUID->"f0233ffe-5dc9-4442-b24d-6ecc62498bbf",
 CellID->465258018],
Cell[1635693, 39916, 91, 1, 70, "MathCaption",ExpressionUUID->"a596e0a6-21b6-4058-a2f1-abbc8a9f5ee6",
 CellID->1296207012],
Cell[CellGroupData[{
Cell[1635809, 39921, 198, 6, 70, "Input",ExpressionUUID->"cfab4254-ca82-45cb-8ef7-a9857fbf950a",
 CellID->1277135516],
Cell[1636010, 39929, 253, 7, 70, "Output",ExpressionUUID->"eb8ee8f1-37dd-4291-b24f-cecc36bc572d",
 CellID->1243550350]
}, Open  ]],
Cell[1636278, 39939, 376, 12, 70, "MathCaption",ExpressionUUID->"ea6f7fa3-0e7e-4d66-b666-462ad8d1b251",
 CellID->115749397],
Cell[1636657, 39953, 573, 15, 70, "Input",ExpressionUUID->"affc95d4-3d97-488a-9f99-8d3b981cac66",
 CellID->1927414844],
Cell[1637233, 39970, 81, 1, 70, "MathCaption",ExpressionUUID->"99f7e282-b2b9-46ca-8515-c703646f2d27",
 CellID->889199561],
Cell[CellGroupData[{
Cell[1637339, 39975, 204, 6, 70, "Input",ExpressionUUID->"79832dba-d0c3-4fab-ac51-ee5cd91d4479",
 CellID->438322254],
Cell[1637546, 39983, 290, 7, 70, "Output",ExpressionUUID->"ef76bc40-be1b-440c-b509-cf5540fcb34d",
 CellID->1039879846]
}, Open  ]],
Cell[1637851, 39993, 601, 16, 70, "MathCaption",ExpressionUUID->"04cab789-ba02-48fe-9fe3-1e97a84cdb94",
 CellID->107474856],
Cell[CellGroupData[{
Cell[1638477, 40013, 342, 9, 70, "Input",ExpressionUUID->"b9f22afb-ebe7-4dc2-9669-e88bf84fa454",
 CellID->1335914459],
Cell[CellGroupData[{
Cell[1638844, 40026, 4203, 118, 70, "Print",ExpressionUUID->"c1ec0ddc-b506-4d9e-b4dc-136aa83731df",
 CellID->1038652436],
Cell[1643050, 40146, 455, 12, 70, "Print",ExpressionUUID->"dc3e405e-cd72-4452-ba4b-7366928cb9f6",
 CellID->1884409036],
Cell[1643508, 40160, 46181, 956, 70, "Print",ExpressionUUID->"d2e0c70d-f99d-4685-b109-f53047be1223",
 CellID->173842096]
}, Open  ]]
}, Open  ]],
Cell[1689716, 41120, 170, 4, 70, "MathCaption",ExpressionUUID->"662664aa-caad-4045-962e-3ede47650ded",
 CellID->40883495],
Cell[1689889, 41126, 223, 7, 70, "Input",ExpressionUUID->"48142f48-1cc8-43df-a7c8-965365c9c19c",
 CellID->2081617072],
Cell[1690115, 41135, 181, 4, 70, "MathCaption",ExpressionUUID->"9398eb59-14ed-466f-9a60-f4b0a91586ee",
 CellID->1475115608],
Cell[1690299, 41141, 289, 7, 70, "Input",ExpressionUUID->"05edf717-0d22-4d85-ab8f-f3775e8d8985",
 CellID->1716802688],
Cell[1690591, 41150, 289, 10, 70, "MathCaption",ExpressionUUID->"70853179-db6f-468d-96d3-8656725c7f14",
 CellID->454276768],
Cell[1690883, 41162, 249, 7, 70, "Input",ExpressionUUID->"cb1ab47a-1030-4942-b9f9-1296926a8fac",
 CellID->725274691],
Cell[1691135, 41171, 355, 12, 70, "MathCaption",ExpressionUUID->"70ad70a8-e95c-4596-9f88-b4fcdf56b73f",
 CellID->1396633943],
Cell[1691493, 41185, 233, 7, 70, "Input",ExpressionUUID->"46e71dc8-dfcd-4dd1-bbce-c5ba3515fa1d",
 CellID->1230418291]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1691775, 41198, 82, 1, 70, "Subsection",ExpressionUUID->"4a303f06-6614-48f1-8d9e-01bd1bfbc18a",
 CellID->298821825],
Cell[1691860, 41201, 892, 28, 70, "Text",ExpressionUUID->"b7976c5c-96d3-4bdc-8eb3-e83949655add",
 CellID->1481646089],
Cell[1692755, 41231, 161, 4, 70, "MathCaption",ExpressionUUID->"39ccbca1-f8f4-4223-980b-8fb1d694a4e4",
 CellID->1952930858],
Cell[CellGroupData[{
Cell[1692941, 41239, 240, 7, 70, "Input",ExpressionUUID->"c4492abd-7393-485d-9345-ce773a36e9a3",
 CellID->768869658],
Cell[1693184, 41248, 92, 2, 70, "Output",ExpressionUUID->"85b826c9-63c2-45db-905f-b9f91329dfbc",
 CellID->1856700619]
}, Open  ]],
Cell[1693291, 41253, 141, 4, 70, "MathCaption",ExpressionUUID->"80c3da16-8df4-4781-a108-98d2177b59f7",
 CellID->1337236679],
Cell[CellGroupData[{
Cell[1693457, 41261, 314, 9, 70, "Input",ExpressionUUID->"cc10dde8-1a4e-4459-8631-c13c8e4e7e39",
 CellID->1520498098],
Cell[1693774, 41272, 269, 8, 70, "Output",ExpressionUUID->"5db0a742-ca64-4c5c-b151-ec8478b3dbe0",
 CellID->1886752990]
}, Open  ]],
Cell[1694058, 41283, 125, 3, 70, "MathCaption",ExpressionUUID->"cee0cc0a-5182-4e80-90ca-48a34fe2a55d",
 CellID->1474915870],
Cell[CellGroupData[{
Cell[1694208, 41290, 381, 8, 70, "Input",ExpressionUUID->"dc4606b2-beac-4c83-949b-17efb4b0ac45",
 CellID->507289769],
Cell[1694592, 41300, 136, 2, 70, "Print",ExpressionUUID->"af49b233-d090-4e3c-8d85-566c20037a7c",
 CellID->1019182225],
Cell[1694731, 41304, 10068, 259, 70, "Output",ExpressionUUID->"7fe47790-7221-47f6-a7ce-b9923ab92cbe",
 CellID->1066388514]
}, Open  ]],
Cell[1704814, 41566, 616, 19, 70, "Text",ExpressionUUID->"b36b6798-1a9d-4a64-9da3-a8c7cefb3675",
 CellID->754816834],
Cell[1705433, 41587, 99, 1, 70, "MathCaption",ExpressionUUID->"01f23141-7028-4f56-9702-8397a128662f",
 CellID->1020626209],
Cell[CellGroupData[{
Cell[1705557, 41592, 126, 3, 70, "Input",ExpressionUUID->"6fe6dc18-ab69-4a4e-86ab-59434755fbfe",
 CellID->1712806074],
Cell[1705686, 41597, 251, 6, 70, "Output",ExpressionUUID->"f1f92228-27cb-4c1b-88e0-e9e7dc87f1fa",
 CellID->497917949]
}, Open  ]],
Cell[1705952, 41606, 92, 1, 70, "MathCaption",ExpressionUUID->"b9db1d10-5905-4c7e-9ddf-e53b52d26e1a",
 CellID->1056863292],
Cell[CellGroupData[{
Cell[1706069, 41611, 183, 6, 70, "Input",ExpressionUUID->"5d203da1-c344-4c47-80ca-faf75824ab4e",
 CellID->864104307],
Cell[1706255, 41619, 501, 12, 70, "Output",ExpressionUUID->"222a2bfc-6c6c-4347-ae3d-9033ba4d9b13",
 CellID->2040720583]
}, Open  ]],
Cell[1706771, 41634, 104, 2, 70, "MathCaption",ExpressionUUID->"034418c3-4882-412c-a64d-3e0578e21616",
 CellID->575017700],
Cell[CellGroupData[{
Cell[1706900, 41640, 188, 6, 70, "Input",ExpressionUUID->"e9b1fa3a-59f3-4f74-999b-68d7e38bf39a",
 CellID->646072400],
Cell[1707091, 41648, 6483, 157, 70, "Output",ExpressionUUID->"760e5cb9-7920-4720-9a35-770489629d4b",
 CellID->1348085108]
}, Open  ]],
Cell[1713589, 41808, 578, 19, 70, "MathCaption",ExpressionUUID->"c971658d-4d19-497a-b85a-72fb5b428b15",
 CellID->861507568],
Cell[CellGroupData[{
Cell[1714192, 41831, 288, 7, 70, "Input",ExpressionUUID->"8f8edac6-77aa-4ddb-b663-e6d68b2e2775",
 CellID->1022947302],
Cell[1714483, 41840, 615, 12, 70, "Output",ExpressionUUID->"be0f500c-9708-4564-b34f-8f7210a58555",
 CellID->603088833]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1715159, 41859, 64, 1, 70, "Section",ExpressionUUID->"fc9b9783-2fd7-4336-b64a-117c147f8af0",
 CellID->1340833355],
Cell[1715226, 41862, 719, 21, 70, "Text",ExpressionUUID->"6a4d809b-9dc6-4b33-8ee9-82985f351b00",
 CellID->834349127],
Cell[CellGroupData[{
Cell[1715970, 41887, 80, 1, 70, "Subsection",ExpressionUUID->"57127400-dbd0-428e-9077-f77413dc0f9a",
 CellID->1502510612],
Cell[1716053, 41890, 666, 18, 70, "DefinitionBox",ExpressionUUID->"ef6b0060-8e62-4ab4-abfb-f9812ca1ad45",
 CellID->1289482141],
Cell[1716722, 41910, 68, 1, 70, "Caption",ExpressionUUID->"9e59a2fe-a870-455a-a3e0-793ca05e138e",
 CellID->2068861910],
Cell[1716793, 41913, 309, 11, 70, "MathCaption",ExpressionUUID->"5c176d7e-170f-42cd-abb9-4544a621f16e",
 CellID->681556684],
Cell[CellGroupData[{
Cell[1717127, 41928, 298, 8, 70, "Input",ExpressionUUID->"60a318a2-4221-4c75-bf11-f4030292fe8d",
 CellID->245414890],
Cell[1717428, 41938, 10022, 257, 70, "Output",ExpressionUUID->"3135fc25-6222-46ac-a094-8322a1317ac5",
 CellID->808884430]
}, Open  ]],
Cell[1727465, 42198, 99, 1, 70, "MathCaption",ExpressionUUID->"75a577bd-9b97-4e5d-9b2f-9e4860c62501",
 CellID->1179244319],
Cell[CellGroupData[{
Cell[1727589, 42203, 275, 9, 70, "Input",ExpressionUUID->"0da3046c-59d2-42dd-88d4-bd86cf6234e0",
 CellID->764718377],
Cell[1727867, 42214, 699, 15, 70, "Output",ExpressionUUID->"f0262add-c638-4225-a0ce-a8380f5f080c",
 CellID->729829850]
}, Open  ]],
Cell[CellGroupData[{
Cell[1728603, 42234, 118, 3, 70, "Input",ExpressionUUID->"81036de9-7d75-4d39-a51b-d81708b7173c",
 CellID->432691270],
Cell[1728724, 42239, 290, 6, 70, "Output",ExpressionUUID->"153c20fe-c0fa-44fa-abdf-b9a2e9664b1d",
 CellID->1950743689]
}, Open  ]],
Cell[1729029, 42248, 125, 3, 70, "MathCaption",ExpressionUUID->"1e9be92f-fe33-4ac4-bc24-ddceb30b48c6",
 CellID->2090161703],
Cell[CellGroupData[{
Cell[1729179, 42255, 334, 11, 70, "Input",ExpressionUUID->"fca394ef-6db0-4aa9-bfcf-d02a78ab051a",
 CellID->810244695],
Cell[1729516, 42268, 1518, 35, 70, "Output",ExpressionUUID->"8538919a-6ade-440d-a6ff-9a33872f7e8d",
 CellID->1387605075]
}, Open  ]],
Cell[CellGroupData[{
Cell[1731071, 42308, 180, 6, 70, "Input",ExpressionUUID->"5072b304-3121-48b6-a9e0-7e0109609e91",
 CellID->75235690],
Cell[1731254, 42316, 605, 14, 70, "Output",ExpressionUUID->"e80e5471-d9cf-453c-acc3-b100e3f3924d",
 CellID->916666016]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1731908, 42336, 72, 1, 70, "Subsection",ExpressionUUID->"ae48982e-5a0c-4fd9-8205-2ee8488c2e10",
 CellID->1764557057],
Cell[1731983, 42339, 1864, 56, 70, "Text",ExpressionUUID->"3d66e954-0876-4f76-aee2-bde55b61a2fb",
 CellID->32166003],
Cell[1733850, 42397, 384, 9, 70, "Text",ExpressionUUID->"96870e54-2110-4640-ae06-9f096087339e",
 CellID->58096227],
Cell[1734237, 42408, 1643, 39, 70, "DefinitionBox",ExpressionUUID->"67241a7e-d712-435c-bf5d-93e1900f52cb",
 CellID->1813135289],
Cell[1735883, 42449, 76, 1, 70, "Caption",ExpressionUUID->"fcb3be8a-cb56-430c-9d91-a18e6cf213c3",
 CellID->571851293],
Cell[1735962, 42452, 2252, 55, 70, "DefinitionBox3Col",ExpressionUUID->"4c60d15c-da29-4c2c-a3a6-98ddee0b244a",
 CellID->1454392793],
Cell[1738217, 42509, 269, 11, 70, "Caption",ExpressionUUID->"9241eeeb-8000-4923-ac65-05be60260031",
 CellID->1320801797],
Cell[1738489, 42522, 240, 5, 70, "Text",ExpressionUUID->"f4872078-d6a2-4031-8c35-7f6f4529ae62",
 CellID->416113495],
Cell[1738732, 42529, 6752, 161, 70, "Text",ExpressionUUID->"cd34615c-8a77-47da-b202-7ee36c855a53",
 CellID->1412755833],
Cell[1745487, 42692, 1752, 41, 70, "DefinitionBox",ExpressionUUID->"1beb76b2-5e4b-4524-b682-69fa5f13c213",
 CellID->1608083999],
Cell[1747242, 42735, 303, 11, 70, "Caption",ExpressionUUID->"d4147c34-fc4a-4abd-980f-cfe7c17d9d0e",
 CellID->986073698],
Cell[1747548, 42748, 147, 4, 70, "MathCaption",ExpressionUUID->"d7832f5e-828c-4cd7-bfa6-b4ab03fe9145",
 CellID->565513990],
Cell[CellGroupData[{
Cell[1747720, 42756, 179, 5, 70, "Input",ExpressionUUID->"0d685656-f2bd-47ef-8141-8e2cf81d7b95",
 CellID->1978491955],
Cell[1747902, 42763, 10901, 276, 70, "Output",ExpressionUUID->"e215eaf3-7e64-40a0-8f80-3dac45929628",
 CellID->92211928]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1758864, 43046, 53, 1, 70, "Section",ExpressionUUID->"3baaf7dc-1ed5-4350-bc85-7af4c50a6fa5",
 CellID->1200455778],
Cell[1758920, 43049, 774, 22, 70, "Text",ExpressionUUID->"142669bd-01db-463c-ad9a-9ff42f72deea",
 CellID->944139540],
Cell[1759697, 43073, 1391, 39, 70, "DefinitionBox",ExpressionUUID->"7570edd2-49eb-44c7-a936-eab913d450b8",
 CellID->581300403],
Cell[1761091, 43114, 82, 1, 70, "Caption",ExpressionUUID->"645dd2d2-cb8c-48bd-bee5-63d10f016174",
 CellID->1012763018],
Cell[1761176, 43117, 852, 25, 70, "DefinitionBox3Col",ExpressionUUID->"5743fc09-e17b-4d3d-a1b7-0a525f14b620",
 CellID->2015411944],
Cell[1762031, 43144, 290, 11, 70, "Caption",ExpressionUUID->"73e32f99-2f64-4ce4-88e3-99307bc00890",
 CellID->768978677],
Cell[1762324, 43157, 2901, 77, 70, "DefinitionBox3Col",ExpressionUUID->"4f19d00e-1654-4f8a-a9de-fe4bf785b622",
 CellID->1299131947],
Cell[1765228, 43236, 287, 11, 70, "Caption",ExpressionUUID->"69af9b9d-76ee-4ba0-abdf-f19cdfe83a10",
 CellID->1044394180],
Cell[1765518, 43249, 400, 7, 70, "MathCaption",ExpressionUUID->"ad6dfc91-1033-4960-b4d1-861f37fbb9ba",
 CellID->1376228890],
Cell[CellGroupData[{
Cell[1765943, 43260, 146, 4, 70, "Input",ExpressionUUID->"720c2307-f3da-4707-bdd5-2e206b79ed09",
 CellID->1880076040],
Cell[1766092, 43266, 790583, 12967, 70, "Output",ExpressionUUID->"df73a229-ba4a-45a1-ad4f-a021685b998e",
 CellTags->"RasterizedOutput",
 CellID->1180637275]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2556724, 56239, 65, 1, 70, "Section",ExpressionUUID->"b1896c73-695e-4d0a-92b3-ca1e2f8c3702",
 CellID->2035743524],
Cell[2556792, 56242, 277, 5, 70, "Text",ExpressionUUID->"02544033-78bf-487e-87ad-8ac2345be6a5",
 CellID->1722961908],
Cell[CellGroupData[{
Cell[2557094, 56251, 65, 1, 70, "Subsection",ExpressionUUID->"ef6fb462-8279-4d44-8659-79f27093f874",
 CellID->2013711891],
Cell[2557162, 56254, 757, 21, 70, "Text",ExpressionUUID->"136c77ad-7ffb-4662-94e8-66a670bc0c14",
 CellID->1112357573],
Cell[2557922, 56277, 501, 13, 70, "DefinitionBox",ExpressionUUID->"140e1346-2536-47c8-8d18-aa9cc0ee6c00",
 CellID->329777640],
Cell[2558426, 56292, 158, 4, 70, "Caption",ExpressionUUID->"96de03a7-67b4-4b45-b134-330170e77ecf",
 CellID->2064986220],
Cell[2558587, 56298, 10273, 262, 70, "DefinitionBox3Col",ExpressionUUID->"9c703cc8-0052-46b8-8752-664d4bccc122",
 CellID->740180373],
Cell[2568863, 56562, 248, 10, 70, "Caption",ExpressionUUID->"96c2d0d8-88ac-499f-8eb1-bcb307b67749",
 CellID->1986245587],
Cell[2569114, 56574, 1943, 59, 70, "Text",ExpressionUUID->"9a17bb8e-67f8-42a4-83d4-de325eea534d",
 CellID->296707676],
Cell[2571060, 56635, 5849, 143, 70, "Text",ExpressionUUID->"3d607473-8e91-4a5e-bcd8-840c888a3916",
 CellID->308882198],
Cell[2576912, 56780, 968, 26, 70, "Text",ExpressionUUID->"4f7d3328-4b17-4f4b-88ea-663cd12d8731",
 CellID->915126987],
Cell[2577883, 56808, 417, 13, 70, "Text",ExpressionUUID->"8cba9ebb-f09b-4e61-a6a4-6b9e37177dec",
 CellID->875538647],
Cell[2578303, 56823, 744, 23, 70, "DefinitionBox",ExpressionUUID->"6630c4ab-873a-468e-ba6d-229dc64fc2af",
 CellID->1158915490],
Cell[2579050, 56848, 80, 1, 70, "Caption",ExpressionUUID->"85b632dc-6c13-4e99-af85-42908274e916",
 CellID->215962140],
Cell[2579133, 56851, 353, 6, 70, "MathCaption",ExpressionUUID->"3e2404aa-8957-4f53-b32a-15626795f8ee",
 CellID->54495101],
Cell[2579489, 56859, 454, 11, 70, "Input",ExpressionUUID->"2fc4c8aa-858c-4133-aabe-8d9bea111b39",
 CellID->1071128885],
Cell[2579946, 56872, 88, 1, 70, "MathCaption",ExpressionUUID->"df585ec1-068b-4b39-bd1c-6c428406e556",
 CellID->618975626],
Cell[CellGroupData[{
Cell[2580059, 56877, 114, 3, 70, "Input",ExpressionUUID->"d60d8578-2226-44d2-a9be-c818f4d996c7",
 CellID->712560114],
Cell[2580176, 56882, 290, 6, 70, "Output",ExpressionUUID->"5f1ccccb-568e-4b6e-aa7a-00fff8f6d731",
 CellID->1709177902]
}, Open  ]],
Cell[2580481, 56891, 116, 3, 70, "MathCaption",ExpressionUUID->"c0c884cc-1877-405a-be48-e9145f906c54",
 CellID->2051853087],
Cell[CellGroupData[{
Cell[2580622, 56898, 221, 6, 70, "Input",ExpressionUUID->"45ac174f-cbc9-4503-a3c7-a71d74f44491",
 CellID->1202429683],
Cell[2580846, 56906, 43355, 1121, 70, "Output",ExpressionUUID->"82f43b26-ec90-411a-bcb6-d93e16a08369",
 CellID->1411736642]
}, Open  ]],
Cell[2624216, 58030, 440, 12, 70, "MathCaption",ExpressionUUID->"ae1764b7-1379-481c-8bf0-fcbd7dfa9afa",
 CellID->430804357],
Cell[CellGroupData[{
Cell[2624681, 58046, 227, 7, 70, "Input",ExpressionUUID->"2a00fc80-9727-4436-8f7a-9e36cbd86db1",
 CellID->1361454062],
Cell[2624911, 58055, 2471, 60, 70, "Output",ExpressionUUID->"d7f66d1b-bec8-45a5-87e1-4a2f14eb1fd1",
 CellID->500244026]
}, Open  ]],
Cell[2627397, 58118, 459, 12, 70, "MathCaption",ExpressionUUID->"1a0592bb-0ba6-4543-9c38-691afffc1d80",
 CellID->170022261],
Cell[CellGroupData[{
Cell[2627881, 58134, 213, 6, 70, "Input",ExpressionUUID->"124feaac-305f-43fb-83c0-55e0bc6bc081",
 CellID->1410890117],
Cell[2628097, 58142, 2572, 74, 70, "Output",ExpressionUUID->"add8c314-1a52-47bf-b4f4-4c60aa9c65fb",
 CellID->948909842]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2630718, 58222, 58, 1, 70, "Subsection",ExpressionUUID->"8b2f74a9-7630-4307-b6c9-0d20ef22f4d0",
 CellID->113475317],
Cell[CellGroupData[{
Cell[2630801, 58227, 138, 4, 70, "Subsubsection",ExpressionUUID->"aa891786-aec6-4248-b292-4163ccb2e04c",
 CellID->794541302],
Cell[2630942, 58233, 784, 21, 70, "Text",ExpressionUUID->"ab06d8d7-1671-4fe5-bd01-541507d864a9",
 CellID->1511547068],
Cell[2631729, 58256, 523, 13, 70, "DefinitionBox",ExpressionUUID->"a607a225-7efa-49b2-8ad7-ef893de303a8",
 CellID->1987511513],
Cell[2632255, 58271, 187, 4, 70, "Caption",ExpressionUUID->"c188f7dd-f8c7-4536-9a36-13cd49a92248",
 CellID->2145353553],
Cell[2632445, 58277, 13202, 323, 70, "DefinitionBox3Col",ExpressionUUID->"e8ec8627-baca-43da-b9b6-1386f759b8f8",
 CellID->706732141],
Cell[2645650, 58602, 251, 10, 70, "Caption",ExpressionUUID->"02965e50-aa4b-4925-8add-a5cd41fed770",
 CellID->315042230],
Cell[2645904, 58614, 153, 5, 70, "Text",ExpressionUUID->"f86be4af-4b7f-4bc1-aab4-b992f5cf6b97",
 CellID->1844849291],
Cell[2646060, 58621, 281, 9, 70, "Text",ExpressionUUID->"d1c304ef-206f-406a-8f59-dd0f0ce24746",
 CellID->420108894],
Cell[2646344, 58632, 433, 11, 70, "Text",ExpressionUUID->"aa6db8f3-43bb-4c7f-b3e1-f8a852655c33",
 CellID->1991433769],
Cell[2646780, 58645, 820, 23, 70, "Text",ExpressionUUID->"c7f9c2f8-0a7b-48a6-90ac-ab3d0c1eb036",
 CellID->446395410],
Cell[2647603, 58670, 524, 12, 70, "Text",ExpressionUUID->"d607d5f6-0e44-4f0c-b00e-c290660b2148",
 CellID->1407276899],
Cell[2648130, 58684, 110, 3, 70, "Text",ExpressionUUID->"87473aca-d8fe-45c6-820c-4fccd6413038",
 CellID->1865437082],
Cell[2648243, 58689, 5359, 131, 70, "Text",ExpressionUUID->"1ea50e20-63e7-4475-aa79-34715aafb69e",
 CellID->1474295269],
Cell[2653605, 58822, 169, 5, 70, "Text",ExpressionUUID->"b9310de5-aa5d-4858-a680-19a36431747a",
 CellID->814266997],
Cell[2653777, 58829, 1161, 37, 70, "Text",ExpressionUUID->"ceed16a5-8034-44ce-8a23-0b05a6759eda",
 CellID->1619619895],
Cell[2654941, 58868, 175, 5, 70, "Text",ExpressionUUID->"b3f33ff3-29fd-4a47-a924-28581fade878",
 CellID->1596349540],
Cell[2655119, 58875, 504, 14, 70, "Text",ExpressionUUID->"de7cc9db-7227-467f-acf4-9ea7b6249f1a",
 CellID->1333516809],
Cell[2655626, 58891, 973, 26, 70, "Text",ExpressionUUID->"524b78d0-8bf5-4a9a-be53-e4b06120f4a1",
 CellID->1277668771],
Cell[2656602, 58919, 606, 12, 70, "Text",ExpressionUUID->"4b0f9c8a-ef57-4fd2-a57a-6585cff005c4",
 CellID->1090047844],
Cell[2657211, 58933, 536, 9, 70, "Text",ExpressionUUID->"eac5a5ce-48b2-4f79-940b-a94bcb0c7d06",
 CellID->251121551],
Cell[2657750, 58944, 359, 6, 70, "MathCaption",ExpressionUUID->"6f0155a5-a741-4b09-8270-a258e21cd1c8",
 CellID->1339044942],
Cell[2658112, 58952, 452, 11, 70, "Input",ExpressionUUID->"ec5c5aeb-0e19-4846-b2b0-636b78cfecf3",
 CellID->1847203281],
Cell[2658567, 58965, 121, 3, 70, "MathCaption",ExpressionUUID->"13d9cfe1-a509-4c6f-a6c7-cd01f4dd8e93",
 CellID->1921942735],
Cell[CellGroupData[{
Cell[2658713, 58972, 117, 3, 70, "Input",ExpressionUUID->"8387697e-67b9-4cc4-9b95-477058d57406",
 CellID->1790012618],
Cell[2658833, 58977, 148, 4, 70, "Output",ExpressionUUID->"fe1907f8-1fea-4d19-9f87-3c4d39a5791f",
 CellID->921808109]
}, Open  ]],
Cell[2658996, 58984, 95, 1, 70, "MathCaption",ExpressionUUID->"b3b263ee-57e8-4360-addf-c720b844537a",
 CellID->1116859782],
Cell[CellGroupData[{
Cell[2659116, 58989, 133, 3, 70, "Input",ExpressionUUID->"99808539-6ccc-4efa-bc7c-78cb1bd9cc89",
 CellID->1866845763],
Cell[2659252, 58994, 10576, 271, 70, "Output",ExpressionUUID->"869e585f-29ec-4a1f-b64f-1c6b32dfebf2",
 CellID->881858505]
}, Open  ]],
Cell[CellGroupData[{
Cell[2669865, 59270, 135, 3, 70, "Input",ExpressionUUID->"0fca1e25-c699-4369-a276-b69e7aad71c7",
 CellID->1218496248],
Cell[2670003, 59275, 9304, 200, 70, "Output",ExpressionUUID->"19a9aa40-fb98-4064-ab99-f8659e340afe",
 CellID->1408890497]
}, Open  ]],
Cell[2679322, 59478, 125, 3, 70, "MathCaption",ExpressionUUID->"6616ae05-6bcc-410f-adea-273b6b152e65",
 CellID->1431426074],
Cell[CellGroupData[{
Cell[2679472, 59485, 265, 7, 70, "Input",ExpressionUUID->"dd914015-31d4-4240-a11e-1b86064659cb",
 CellID->1866212024],
Cell[2679740, 59494, 32811, 698, 70, "Output",ExpressionUUID->"a108b1a1-052b-4fa6-b022-0aa682aade23",
 CellID->1982568702]
}, Closed]],
Cell[2712566, 60195, 374, 12, 70, "Text",ExpressionUUID->"752e0a80-7165-4539-b5f8-918ccfb56910",
 CellID->488726451],
Cell[2712943, 60209, 1318, 36, 70, "DefinitionBox",ExpressionUUID->"1b2a4443-48e7-4bf5-8c39-110b747691d4",
 CellID->2038566199],
Cell[2714264, 60247, 98, 1, 70, "Caption",ExpressionUUID->"133f260e-4079-4c48-bc83-a231245da2e3",
 CellID->1228002355],
Cell[2714365, 60250, 1178, 31, 70, "DefinitionBox3Col",ExpressionUUID->"b245f004-66c9-46a3-a4e0-c3b4f6bd5975",
 CellID->1076877467],
Cell[2715546, 60283, 275, 11, 70, "Caption",ExpressionUUID->"79132d5d-ab49-48ed-a05f-4884b4b26470",
 CellID->87410953],
Cell[2715824, 60296, 315, 11, 70, "MathCaption",ExpressionUUID->"411dc957-ca1b-47e0-9010-5200cd39e692",
 CellID->1660367008],
Cell[2716142, 60309, 405, 12, 70, "Input",ExpressionUUID->"8bb8a23c-f897-458c-ad91-c5fedbd6ec5c",
 CellID->1385794338],
Cell[2716550, 60323, 335, 11, 70, "MathCaption",ExpressionUUID->"733519ea-d040-4e90-9645-bc8bbd5a1ad4",
 CellID->1754716454],
Cell[2716888, 60336, 352, 10, 70, "Input",ExpressionUUID->"73f2f67a-9589-45c1-a197-9ec2b4d872c4",
 CellID->126518127]
}, Open  ]],
Cell[CellGroupData[{
Cell[2717277, 60351, 79, 1, 70, "Subsubsection",ExpressionUUID->"4fc13c1d-98c0-49f3-86c2-0a097f9d067c",
 CellID->36506248],
Cell[2717359, 60354, 321, 11, 70, "Text",ExpressionUUID->"c17ef806-641b-4f69-ac19-29670618e71e",
 CellID->1912770077],
Cell[2717683, 60367, 364, 11, 70, "DefinitionBox",ExpressionUUID->"68447344-0ff4-4433-88e8-716872451474",
 CellID->672020044],
Cell[2718050, 60380, 66, 1, 70, "Caption",ExpressionUUID->"1d0bdac1-f6a4-4a18-9c3c-fd7e1690eb06",
 CellID->1024379935],
Cell[2718119, 60383, 14082, 335, 70, "DefinitionBox3Col",ExpressionUUID->"174717be-60df-431e-a3ba-cdac58064fd8",
 CellID->812822320],
Cell[2732204, 60720, 266, 11, 70, "Caption",ExpressionUUID->"52f3fd1a-71ac-4fbf-84c1-07771418bafa",
 CellID->961253673],
Cell[2732473, 60733, 925, 22, 70, "DefinitionBox",ExpressionUUID->"e6f8bd55-e43e-45c5-b652-6ba972a8b776",
 CellID->746904677],
Cell[2733401, 60757, 318, 11, 70, "Caption",ExpressionUUID->"1c27ea12-68fb-4b11-ad3e-f697e1d7853f",
 CellID->1184989624],
Cell[2733722, 60770, 100, 1, 70, "MathCaption",ExpressionUUID->"d65e92eb-dd0d-4f3a-9f26-b64d474eca22",
 CellID->1676459694],
Cell[CellGroupData[{
Cell[2733847, 60775, 180, 5, 70, "Input",ExpressionUUID->"7489df32-47a7-412b-bda2-842d8ecc1eff",
 CellID->1272628418],
Cell[2734030, 60782, 358, 9, 70, "Output",ExpressionUUID->"1e7fb81f-76a6-443b-bcf8-d116cbcf49a1",
 CellID->545314925]
}, Open  ]],
Cell[2734403, 60794, 74, 1, 70, "MathCaption",ExpressionUUID->"f591396a-4b72-43ab-91dd-9907e0f3688d",
 CellID->1218512518],
Cell[2734480, 60797, 223, 6, 70, "Input",ExpressionUUID->"109bd579-bd2b-493a-a8e3-b9d79ff4eaa2",
 CellID->1135832234],
Cell[2734706, 60805, 77, 1, 70, "MathCaption",ExpressionUUID->"b7ccdc8d-6c74-4ebf-9000-8df4fb182d60",
 CellID->64193474],
Cell[CellGroupData[{
Cell[2734808, 60810, 272, 7, 70, "Input",ExpressionUUID->"40db3461-e04f-4c14-a755-eb74d31cb452",
 CellID->862926724],
Cell[2735083, 60819, 39988, 663, 70, "Output",ExpressionUUID->"4c2b45da-4367-4ed7-b947-edaa1f45e122",
 CellID->810394010]
}, Open  ]],
Cell[2775086, 61485, 59, 1, 70, "MathCaption",ExpressionUUID->"664f1e0d-192e-4a97-8c9c-dc374d48762e",
 CellID->1377198042],
Cell[CellGroupData[{
Cell[2775170, 61490, 298, 9, 70, "Input",ExpressionUUID->"ce435ec9-8cd9-4c39-bbb1-2d64344313f9",
 CellID->988744528],
Cell[2775471, 61501, 39337, 649, 70, "Output",ExpressionUUID->"a0c71b92-a949-4377-87bf-db7df33e2933",
 CellID->2006014202]
}, Open  ]],
Cell[2814823, 62153, 75, 1, 70, "MathCaption",ExpressionUUID->"a0b3bf09-e170-45eb-a91b-e149bed6fc53",
 CellID->632012813],
Cell[CellGroupData[{
Cell[2814923, 62158, 615, 15, 70, "Input",ExpressionUUID->"4b706cdb-b9c8-4886-924a-5ce5be7a5c13",
 CellID->785230029],
Cell[2815541, 62175, 37475, 622, 70, "Output",ExpressionUUID->"9cf3b0b1-8d81-4d1e-9934-e6513750b3ae",
 CellID->475821867]
}, Open  ]],
Cell[2853031, 62800, 58, 1, 70, "MathCaption",ExpressionUUID->"c969e233-37c0-400a-9d53-c36e51f540d6",
 CellID->983872788],
Cell[CellGroupData[{
Cell[2853114, 62805, 307, 9, 70, "Input",ExpressionUUID->"4db539ba-e734-443f-a1de-717a2a432715",
 CellID->325866016],
Cell[2853424, 62816, 36759, 607, 70, "Output",ExpressionUUID->"e027f301-4ac4-40e6-af48-fa0634254c6a",
 CellID->2019329860]
}, Open  ]],
Cell[2890198, 63426, 95, 1, 70, "Text",ExpressionUUID->"09301b3a-92b1-45d4-8cce-b12c17ba6a37",
 CellID->973016157],
Cell[2890296, 63429, 115, 3, 70, "MathCaption",ExpressionUUID->"45f24ab1-b972-4ca4-84d2-a205fc69429a",
 CellID->499168171],
Cell[CellGroupData[{
Cell[2890436, 63436, 463, 14, 70, "Input",ExpressionUUID->"f4c866f8-218c-4228-be8c-1f4fbce35198",
 CellID->1448324815],
Cell[2890902, 63452, 2698, 68, 70, "Output",ExpressionUUID->"3e6881e3-2f98-4a1b-ac7f-e624a5faea3f",
 CellID->863400676]
}, Open  ]],
Cell[2893615, 63523, 115, 3, 70, "MathCaption",ExpressionUUID->"3ba4e800-d1bc-418d-aa61-e60aac18c9c9",
 CellID->401232237],
Cell[CellGroupData[{
Cell[2893755, 63530, 915, 27, 70, "Input",ExpressionUUID->"1b5e6233-56b0-481e-a057-b47deae2c024",
 CellID->411555679],
Cell[2894673, 63559, 26581, 578, 70, "Output",ExpressionUUID->"dc1b36ff-8b48-46a9-b092-5de28fc33eb1",
 CellID->778663946]
}, Closed]],
Cell[2921269, 64140, 96, 1, 70, "MathCaption",ExpressionUUID->"be938ee9-79ce-4997-b8c9-ca1c8581016a",
 CellID->1111199700],
Cell[CellGroupData[{
Cell[2921390, 64145, 422, 9, 70, "Input",ExpressionUUID->"148eb8c2-6c52-45d3-a505-a89fd493a2b7",
 CellID->1553382050],
Cell[2921815, 64156, 519146, 8518, 70, "Output",ExpressionUUID->"c24657be-0934-4667-a6ad-5a676bb69728",
 CellTags->"RasterizedOutput",
 CellID->1003128316]
}, Open  ]],
Cell[3440976, 72677, 119, 3, 70, "MathCaption",ExpressionUUID->"66c7717e-e42c-48af-97c6-67aa42a90738",
 CellID->1695062567],
Cell[CellGroupData[{
Cell[3441120, 72684, 262, 7, 70, "Input",ExpressionUUID->"4fc78fd5-7f08-43a8-9c19-b3d8f06a87d7",
 CellID->398502467],
Cell[3441385, 72693, 568163, 9405, 70, "Output",ExpressionUUID->"513d84b3-ec10-4973-b027-486062b21d13",
 CellID->1509656058]
}, Open  ]],
Cell[4009563, 82101, 119, 3, 70, "MathCaption",ExpressionUUID->"61a1edd5-ce3d-4a46-afda-5e4a4248c052",
 CellID->596901522],
Cell[4009685, 82106, 361, 8, 70, "Input",ExpressionUUID->"65c345c8-f882-4e57-84c3-2be3c3243c8e",
 CellID->1227765117]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4010107, 82121, 167, 7, 70, "RelatedTutorialsSection",ExpressionUUID->"fbc2b627-102a-473a-9e51-dcd9bf8f2044",
 CellID->415694126],
Cell[4010277, 82130, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"04bd08d5-91e3-4f16-93e1-21410fbeaa37"],
Cell[4010311, 82132, 200, 5, 70, "RelatedTutorials",ExpressionUUID->"c9ec594d-0255-428f-a551-80a515ccd9f2",
 CellID->795520170],
Cell[4010514, 82139, 174, 4, 70, "RelatedTutorials",ExpressionUUID->"0adcb8e1-ab91-4104-b4f8-4be1e5ee110c",
 CellID->1258435320],
Cell[4010691, 82145, 162, 3, 70, "RelatedTutorials",ExpressionUUID->"73597a99-3b6c-48cb-969c-1e1f2ae4d891",
 CellID->1425023577]
}, Open  ]]
}, Open  ]],
Cell[4010880, 82152, 23, 0, 70, "FooterCell",ExpressionUUID->"791157e1-9a0d-4cf7-b483-395b27a3f726"]
}
]
*)

(* End of internal cache information *)
