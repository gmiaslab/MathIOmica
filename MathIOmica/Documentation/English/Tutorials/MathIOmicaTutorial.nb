(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   4064648,      83351]
NotebookOptionsPosition[   3962587,      81362]
NotebookOutlinePosition[   3966760,      81449]
CellTagsIndexPosition[   3966677,      81444]
WindowTitle->MathIOmica: Omics Analysis Tutorial
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["MATH I OMICA PACKAGE TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MathIOmica Dynamic Transcriptome\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"], \
"\<\"MathIOmica Overview\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaOverview"], "\<\"MathIOmica \
Guide\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/guide/MathIOmicaGuide"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"RelatedTutorialsSection"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Functions",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Functions", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\")\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/associationList"], "\<\"Applier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Applier"], "\<\"ApplierList\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ApplierList"], "\<\"ApplyBoxCoxTransform\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ApplyBoxCoxTransform"], "\<\"associationList \
(\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/associationList"], "\<\"Autocorrelation\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Autocorrelation"], \
"\<\"BenjaminiHochbergFDR\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/BenjaminiHochbergFDR"], "\<\"ConstantAssociator\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantAssociator"], \
"\<\"ConstantMathIOmicaExamplesDirectory\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"], \
"\<\"ConstantSeriesClean\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantSeriesClean"], "\<\"CorrelationFunction\
\"\>":>Documentation`HelpLookup[
       "paclet:ref/CorrelationFunction"], "\<\"CreateTimeSeries\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/CreateTimeSeries"], "\<\"DataImporter\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporter"], "\<\"DataImporterDirect\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporterDirect"], \
"\<\"DataImporterDirectLabeled\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporterDirectLabeled"], \
"\<\"EnlargeInnerAssociation\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnlargeInnerAssociation"], \
"\<\"EnlargeOuterAssociation\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnlargeOuterAssociation"], \
"\<\"EnrichmentReportExport\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnrichmentReportExport"], \
"\<\"FilteringFunction\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/FilteringFunction"], "\<\"FilterMissing\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/FilterMissing"], "\<\"GeneTranslation\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GeneTranslation"], "\<\"GetGeneDictionary\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GetGeneDictionary"], "\<\"GOAnalysis\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GOAnalysis"], "\<\"Interpolation\"\>":>
       Documentation`HelpLookup[
       "paclet:ref/Interpolation"], "\<\"JoinNestedAssociations\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/JoinNestedAssociations"], \
"\<\"KEGGAnalysis\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/KEGGAnalysis"], "\<\"LombScargle\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/LombScargle"], "\<\"LowValueTag\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/LowValueTag"], "\<\"MeasurementApplier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/MeasurementApplier"], "\<\"Missing\"\>":>
       Documentation`HelpLookup["paclet:ref/Missing"], "\<\"OmicsObject\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObject"], "\<\"OmicsObjectCreator\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectCreator"], \
"\<\"OmicsObjectMerge\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectMerge"], "\<\"OmicsObjectPairedMerge\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectPairedMerge"], \
"\<\"OmicsObjectUniqueMassConverter\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"], \
"\<\"QuantileEstimator\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/QuantileEstimator"], "\<\"QuantileNormalization\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/QuantileNormalization"], "\<\"Returner\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Returner"], "\<\"SeriesApplier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/SeriesApplier"], \
"\<\"SeriesInternalCompare\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/SeriesInternalCompare"], \
"\<\"TimeExtractor\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeExtractor"], \
"\<\"TimeSeriesClassification\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesClassification"], \
"\<\"TimeSeriesClusters\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesClusters"], \
"\<\"TimeSeriesDendrogramHeatmap\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"], \
"\<\"TimeSeriesDendrogramsHeatmaps\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"], \
"\<\"TimeSeriesModelFit\"\>":>Documentation`HelpLookup[
       "paclet:ref/TimeSeriesModelFit"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"TutorialFunction"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"MathIOmica/tutorial/MathIOmicaTutorial\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["MathIOmica/tutorial/MathIOmicaTutorial"]}, Visible -> 
            False]]; SelectionMove[
         DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/MathIOmica/tutorial/\
MathIOmicaTutorial.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$80384], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "MathIOmica/tutorial/MathIOmicaTutorial", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell["MathIOmica: Omics Analysis Tutorial", "Title",
 CellID->509267359],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
      Cell["Loading the MathIOmica Package"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#2133290847", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Metabolomic Data"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#779816621", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Data in MathIOmica"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#671613477", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Combined Data Clustering"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1340833355", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Transcriptome Data"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#540567276", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Visualization"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1200455778", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Proteomic Data"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1387790784", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Annotation and Enrichment"], 
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#2035743524", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]}
  }]], "TutorialJumpBox"],

Cell["\<\
MathIOmica is an omics analysis package designed to facilitate method \
development for the analysis of multiple omics in Mathematica, particularly \
for dynamics (time series/longitudinal data). This extensive tutorial follows \
the analysis of multiple dynamic omics data (transcriptomics, proteomics, and \
metabolomics from human samples). Various MathIOmica functions are introduced \
in the tutorial, including additional discussion of related functionality. We \
should note that the approach methods are simply an illustration of \
MathIOmica functionality, and should not be considered as a definitive \
approach. Additionally, certain details are included to illustrate common \
complications (e.g. renaming samples, combining datasets, transforming \
accessions from one database to another, dealing with replicates and Missing \
data, etc.).\
\>", "Text",
 CellID->2044157074],

Cell["\<\
After a brief discussion of data in MathIOmica, each example data \
(transcriptome, proteome and metabolome) are imported and preprocessed. Next \
a simulation is carried out to obtain datasets for each omics used to assess \
statistical significance cutoffs. The datasets are combined, and classified \
for time series patterns, followed by clustering. The clusters are \
visualized, and biological annotation of Gene Ontology (GO) and pathway \
analysis (KEGG: Kyoto Encyclopedia of Genes and Genomes) are finally \
considered.\
\>", "Text",
 CellID->985017158],

Cell[TextData[{
 StyleBox["N.B.1 ",
  FontWeight->"Bold"],
 "For a more streamlined/simple example with less discussion please check out \
the tutorial on ",
 ButtonBox["MathIOmica Dynamic Transcriptome.",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"]
}], "Text",
 CellID->429607656],

Cell[TextData[{
 StyleBox["N.B.2 ",
  FontWeight->"Bold"],
 "We highly recommend the saving of intermediate results whenever possible. \
Some functions perform lengthy intensive computations and the performance may \
vary from system to system. Please use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Put"]], "paclet:ref/Put"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to save expressions to a file, and equivalently ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Get"]], "paclet:ref/Get"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to recover these expressions."
}], "Text",
 CellID->54176507],

Cell[CellGroupData[{

Cell["Loading the MathIOmica Package", "Section",
 CellID->2133290847],

Cell[TextData[{
 "The functions defined in the ",
 Cell[BoxData["MathIOmica`"], "InlineFormula"],
 " context provide support for conducting analyses of omics data (See also \
the ",
 ButtonBox["MathIOmica Overview",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/tutorial/MathIOmicaOverview"],
 ")."
}], "Text",
 CellID->1534169418],

Cell["This loads the package:", "MathCaption",
 CellID->1217948648],

Cell[BoxData[
 RowBox[{"<<", "MathIOmica`"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->262742254],

Cell["Also we can load MathIOmica as:", "MathCaption",
 CellID->1869508656],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->998742135]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data in MathIOmica", "Section",
 CellID->671613477],

Cell[TextData[{
 "In this section we will discuss the data objects in use by MathIOmica, \
particularly the format of an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 ". The data in the tutorial will be imported as an OmicsObject which is \
first described in this section. Then we present the example data included \
with MathIOmica. The example data will be imported in subsequent sections to \
illustrate analysis methods available in MathIOmica."
}], "Text",
 CellID->1313645745],

Cell[CellGroupData[{

Cell["Data Format: OmicsObject", "Subsection",
 CellID->501197291],

Cell[TextData[{
 "In MathIOmica the calculations utilize what we term an omics object (",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 "). An ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " is an association of associations with some additional characteristics. It \
has an external  (outer) association to denote samples and an internal \
(inner) association for annotation."
}], "Text",
 CellID->1179683263],

Cell[CellGroupData[{

Cell["OmicsObject Structure", "Subsubsection",
 CellID->929984066],

Cell[TextData[{
 "In an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " the outer association has ",
 Cell[BoxData["M"], "InlineFormula"],
 " outer labels as keys, corresponding to ",
 Cell[BoxData["M"], "InlineFormula"],
 " samples. Across the samples there are ",
 Cell[BoxData["N"], "InlineFormula"],
 " inner labels (e.g. identifiers for genes/proteins), and  inner labels are \
the same across samples. For a given ",
 Cell[BoxData[
  SuperscriptBox["j", "th"]], "InlineFormula"],
 " outer label, ",
 Cell[BoxData[
  SubscriptBox["OuterLabel", "j"]], "InlineFormula"],
 ", the ",
 Cell[BoxData[
  SuperscriptBox["k", "th"]], "InlineFormula"],
 " inner label, ",
 Cell[BoxData[
  SubscriptBox["InnerLabel", "k"]], "InlineFormula"],
 " has a value of : "
}], "Text",
 CellID->1165527708],

Cell[TextData[Cell[BoxData[
 RowBox[{
  SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     SubscriptBox["Measurements", "jk"], "}"}], ",", 
    RowBox[{"{", 
     SubscriptBox["Metadata", "jk"], "}"}]}], 
   "}"}]}]], "InlineFormula"]], "Text",
 CellID->1597287192],

Cell[TextData[{
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " structure:"
}], "MathCaption",
 CellID->174991658],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{
   RowBox[{
    SubscriptBox["OuterLabel", "1"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "11"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "11"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "12"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "12"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "13"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "13"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"1", "k"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"1", "k"}]], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"1", "N"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"1", "N"}]], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "2"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "21"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "21"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "22"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "22"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "23"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "23"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"2", "k"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"2", "k"}]], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"2", "N"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"2", "N"}]], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "j"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j1"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j1"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j2"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j2"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j3"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j3"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "jk"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "jk"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "jN"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "jN"], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "M"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M1"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M1"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M2"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M2"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M3"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M3"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "Mk"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "Mk"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "MN"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "MN"], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "\[IndentingNewLine]", "|>"}]], "InlineFormula"]], "Text",
 CellID->1192006303],

Cell[TextData[{
 "For any ",
 Cell[BoxData[
  SuperscriptBox["j", "th"]], "InlineFormula"],
 " outer label, ",
 Cell[BoxData[
  SubscriptBox["OuterLabel", "j"]], "InlineFormula"],
 ", it is possible that the ",
 Cell[BoxData[
  SuperscriptBox["m", "th"]], "InlineFormula"],
 " inner label, ",
 Cell[BoxData[
  SubscriptBox["InnerLabel", "m"]], "InlineFormula"],
 " is missing and takes a Missing[] value in the form ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["InnerLabel", "m"], "\[Rule]", " ", 
   RowBox[{"Missing", "[", "]"}]}]], "InlineFormula"],
 ". This can happen if the measurement was not performed for the sample, or \
no value was recorded (e.g. mass spectrometry data)."
}], "Text",
 CellID->2001356434],

Cell["\<\
For example here is a list of 3 samples using protein identifiers \
(specifically, these are UniProt accessions). The measurements are relative \
intensities in this case and the metadata is the number of peptides per \
sample.\
\>", "MathCaption",
 CellID->299944951],

Cell[BoxData[
 RowBox[{
  RowBox[{"omicsObjectExample", "=", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<FirstSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.937", "}"}], ",", 
           RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.059", "}"}], ",", 
           RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.03", "}"}], ",", 
           RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.268", "}"}], ",", 
           RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"\"\<SecondSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.003", "}"}], ",", 
           RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.779", "}"}], ",", 
           RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.917", "}"}], ",", 
           RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.921", "}"}], ",", 
           RowBox[{"{", "24", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], 
     ",", 
     RowBox[{"\"\<ThirdSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.064", "}"}], ",", 
           RowBox[{"{", "19", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.545", "}"}], ",", 
           RowBox[{"{", "5", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.87", "}"}], ",", 
           RowBox[{"{", "23", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}]}],
     "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[67]:=",
 CellID->1030671948],

Cell[TextData[{
 "The outer labels of an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " are strings, while the inner labels are typically lists of strings. "
}], "Text",
 CellID->1097212187]
}, Open  ]],

Cell[CellGroupData[{

Cell["Methods to Import Data as an OmicsObject", "Subsubsection",
 CellID->1010514183],

Cell[TextData[{
 "There are multiple methods to import data as an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " using MathIOmica. Four functions assist with importing data directly from \
text files:"
}], "Text",
 CellID->1276400541],

Cell[TextData[{
 "(i) ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporter"]], "paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provides a graphical dynamic interface that utilizes file headers to \
assist with the creation of OmicsObject variables from multiple files."
}], "Text",
 CellID->200159297],

Cell[TextData[{
 "(ii) The ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObjectCreator"]], 
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function provides a function to create an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " from already existing/imported data in a Mathematica notebook."
}], "Text",
 CellID->471195666],

Cell[TextData[{
 "(iii) ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirect"]], 
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and (iv) ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirectLabeled"]], 
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provide additional expert mode functions that may be used to directly \
import data as ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " variables without a graphical interface. "
}], "Text",
 CellID->1897113300],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     RowBox[{
      ButtonBox["DataImporter",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/DataImporter"], "[", 
      StyleBox["associationName", "TI"], "]"}], " "}], Cell[TextData[{
     "provides a graphical interface to extract data and create an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " variable ",
     StyleBox["associationName", "TI"],
     " for associations of information."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectCreator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectCreator"], "[", 
     RowBox[{
      StyleBox["outerLabels", "TI"], ",", " ", 
      StyleBox["innerLabels", "TI"], ",", " ", 
      StyleBox["measurements", "TI"], 
      StyleBox[",", "TI"], 
      StyleBox["metadata", "TI"]}], "]"}], Cell[TextData[{
     "creates an ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["OmicsObject"]], "paclet:MathIOmica/ref/OmicsObject"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " for use with MathIOmica. It uses the following inputs:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["outerLabels", "TI"], Cell[
         "Outer labels (keys) for the OmicsObject.", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["innerLabels", "TI"], Cell[
         "Inner labels (keys) for identifiers in the OmicsObject.", 
          "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["measurements", "TI"], Cell[
         "List of measurements for each inner label.", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["metadata", "TI"], Cell[
         "List of metadata for each label.", "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{
       "Columns" -> {{None}}, "Rows" -> {None, None, None, {None}}},
      GridBoxDividers->{"Rows" -> {{True, True, True, True, True}}}}]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["DataImporterDirect",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/DataImporterDirect"], "[", 
     RowBox[{
      StyleBox["positionsList", "TI"], ",", " ", 
      StyleBox["fileList", "TI"], ",", " ", 
      StyleBox["headerLines", "TI"]}], "]"}], Cell[TextData[{
     StyleBox["Expert Usage:",
      FontSlant->"Italic"],
     " The ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["DataImporterDirect"]], 
        "paclet:MathIOmica/ref/DataImporterDirect"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function is a helper function originally created for ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["DataImporter"]], "paclet:MathIOmica/ref/DataImporter"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". ",
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["DataImporterDirect"]], 
         "paclet:MathIOmica/ref/DataImporterDirect"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{
        StyleBox["positionsList", "TI"], ",", " ", 
        StyleBox["fileList", "TI"], ",", " ", 
        StyleBox["headerLines", "TI"]}], "]"}]], "InlineFormula"],
     " creates an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " importing the column number in ",
     Cell[BoxData[
      StyleBox["positionsList", "TI"]], "InlineFormula"],
     "  from the ",
     Cell[BoxData[
      StyleBox["fileList", "TI"]], "InlineFormula"],
     " file path list, and importing data by skipping a number of ",
     Cell[BoxData[
      StyleBox["headerLines", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["DataImporterDirectLabeled",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/DataImporterDirectLabeled"], "[", 
     RowBox[{
      StyleBox["sampleRules", "TI"], ",", " ", 
      StyleBox["fileList", "TI"], ",", " ", 
      StyleBox["headerLines", "TI"], ",", " ", 
      StyleBox["headerColumnAssociations", "TI"]}], "]"}], Cell[TextData[{
     StyleBox["Expert Usage:",
      FontSlant->"Italic"],
     " The ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["DataImporterDirectLabeled"]], 
        "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function creates an ",
     Cell[BoxData["OmicsObject"], "InlineFormula"],
     " association for ",
     Cell[BoxData[
      StyleBox["variableName", "TI"]], "InlineFormula"],
     ", by imporing data from the files at the paths specified in the ",
     Cell[BoxData[
      StyleBox["fileList", "TI"]], "InlineFormula"],
     ", using the ",
     Cell[BoxData[
      StyleBox["sampleRules", "TI"]], "InlineFormula"],
     " as a label to column header imported rule for each file, and the ",
     Cell[BoxData[
      StyleBox["headerColumnAssociations", "TI"]], "InlineFormula"],
     " list of associations to associate column headers to column positions \
for each file."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->953451491],

Cell[TextData[{
 "Functions for importing/creating ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " datasets."
}], "Caption",
 CellID->7357]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with OmicsObject Data", "Subsubsection",
 CellID->1310432575],

Cell[TextData[{
 "An ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " is an association of associations, and so ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " can be used directly to access and manipulate components. MathIOmica also \
offers multiple functions that can implement computations and manipulation of \
an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 ":"
}], "Text",
 CellID->1202669251],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["Applier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/Applier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", " ", 
      StyleBox["inputData", "TI"]}], "]"}], Cell[TextData[{
     "applies ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to OmicsObject, association or list ",
     Cell[BoxData[
      StyleBox["inputData", "TI"]], "InlineFormula"],
     " components."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["ApplierList",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ApplierList"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", " ", 
      StyleBox["inputData", "TI"]}], "]"}], Cell[TextData[{
     "applies ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to list of lists from an association, nested association or components \
or a matrix ",
     Cell[BoxData[
      StyleBox["inputData", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["ConstantAssociator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantAssociator"], "[", 
     RowBox[{
      StyleBox["inputAssociation", "TI"], ",", " ", 
      StyleBox["associationAddition", "TI"]}], "]"}], Cell[TextData[{
     "adds multi key constant to an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " (or an association of associations) ",
     Cell[BoxData[
      StyleBox["inputAssociation", "TI"]], "InlineFormula"],
     ", with each addition specified in a single association ",
     Cell[BoxData[
      StyleBox["associationAddition", "TI"]], "InlineFormula"],
     ", of form <|addition1\[Rule] Value1,addition2\[Rule] Value2,...|>."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["CreateTimeSeries",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/CreateTimeSeries"], "[", 
     StyleBox["dataIn", "TI"], "]"}], Cell[TextData[{
     "creates a time series list across an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " ",
     Cell[BoxData[
      StyleBox["dataIn", "TI"]], "InlineFormula"],
     " using outer Keys for points."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["EnlargeInnerAssociation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnlargeInnerAssociation"], "[", 
     StyleBox["omicsObjectList", "TI"], "]"}], Cell[TextData[{
     "combines a list of OmicsObject (associations of associations)  ",
     Cell[BoxData[
      StyleBox["omicsObjectList", "TI"]], "InlineFormula"],
     " elements  by enlarging the inner associations - inner association Keys \
must be different."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["EnlargeOuterAssociation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnlargeOuterAssociation"], "[", 
     StyleBox["omicsObjectList", "TI"], "]"}], Cell[TextData[{
     "combines a list, ",
     Cell[BoxData[
      StyleBox["omicsObjectList", "TI"]], "InlineFormula"],
     ", of OmicsObject (or associations of associations) elements to a \
combined output by enlarging the outer associations - outer association keys \
must be different."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["FilteringFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilteringFunction"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", 
      StyleBox["cutoff", "TI"]}], "]"}], Cell[TextData[{
     "filters an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " data by a chosen ",
     Cell[BoxData[
      StyleBox["comparison", "Text"]], "InlineFormula",
      ShowStringCharacters->False],
     " (by default greatr or equal) to a ",
     Cell[BoxData[
      StyleBox["cutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["FilterMissing",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilterMissing"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["percentage", "TI"]}], "]"}], Cell[TextData[{
     "filters out data from ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " if across the datasets a ",
     Cell[BoxData[
      StyleBox["percentage", "TI"]], "InlineFormula"],
     " of data points is missing."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["LowValueTag",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/LowValueTag"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["valueCutoff", "TI"]}], "]"}], Cell[TextData[{
     "takes an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " and tags values in specified position as ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Missing"]], "paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "[] based on provided ",
     Cell[BoxData[
      StyleBox["valueCutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["MeasurementApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/MeasurementApplier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", 
      StyleBox["omicsObject", "TI"]}], "]"}], Cell[TextData[{
     "applies a ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to the measurement list of an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", ignoring missing values."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectMerge",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectMerge"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["2", "TR"]], ",", " ", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
      StyleBox["f", "TI"]}], "]"}], Cell[TextData[{
     "merges a list of ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " components ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["2", "TR"]], ",", " ", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]]],
     ", using the function ",
     StyleBox["f", "TI"],
     " to combine values with the same inner and outer keys."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectPairedMerge",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectPairedMerge"], "[", 
     RowBox[{
      SubscriptBox[
       StyleBox["omicsObject", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["omicsObject", "TI"], 
       StyleBox["2", "TR"]]}], "]"}], Cell[TextData[{
     "merges pairwise ",
     Cell[BoxData[
      StyleBox["omicsObject1", "TI"]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      StyleBox["omicsObject2", "TI"]], "InlineFormula"],
     " values that have the same inner and outer keys."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["Returner",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/Returner"], "[", 
     RowBox[{
      StyleBox["originalAssociation", "TI"], ",", " ", 
      StyleBox["update", "TI"]}], "]"}], Cell[TextData[{
     "returns a modified ",
     Cell[BoxData[
      StyleBox["originalAssociation", "TI"]], "InlineFormula"],
     " updated at a specified position by the single association ",
     Cell[BoxData[
      StyleBox["update", "TI"]], "InlineFormula"],
     ", e.g. from ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Applier"]], "paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ApplierList"]], "paclet:MathIOmica/ref/ApplierList"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " result."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->438464085],

Cell[TextData[{
 "Functions for manipulating ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " datasets."
}], "Caption",
 CellID->1249483738]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example Data ", "Subsection",
 CellID->490101258],

Cell[TextData[{
 "MathIOmica comes with multiple example data. The data can be found in the \
",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]], 
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->249980817],

Cell["\<\
We can get a listing of the current example Data by evaluating:\
\>", "MathCaption",
 CellID->2139419895],

Cell[BoxData[
 RowBox[{"FileNames", "[", 
  RowBox[{"__", ",", "ConstantMathIOmicaExamplesDirectory"}], "]"}]], "Input",\

 CellLabel->"In[3]:=",
 CellID->1911473544],

Cell[TextData[{
 "The data contains both initial (raw) data and additionally intermediate \
data that have been analyzed in MathIOmica and are used in the examples (",
 StyleBox["N.B.",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" these files should ",
  FontSlant->"Italic"],
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" be altered or removed",
  FontSlant->"Italic"],
 "). The dynamic raw datasets are from an integrative Personal Omics Profile \
as described below:"
}], "Text",
 CellID->1570546560],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"i", 
         StyleBox[
          StyleBox["n", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "tegrativ", 
         StyleBox[
          StyleBox[
           StyleBox["e", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"P", 
         StyleBox[
          StyleBox["e", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "rsona", 
         StyleBox[
          StyleBox[
           StyleBox["l", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"O", 
         StyleBox[
          StyleBox["m", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "ic", 
         StyleBox[
          StyleBox[
           StyleBox["s", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"P", 
         StyleBox["r", "TR",
          FontWeight->"Bold"], "of", 
         StyleBox["i", "TR",
          FontWeight->"Bold"], "li", 
         StyleBox["n", "TR",
          FontWeight->"Bold"], 
         StyleBox[
          StyleBox["g", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       RowBox[{
        StyleBox[
         StyleBox[
          StyleBox["(", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"], 
        StyleBox[
         RowBox[{
          StyleBox[
           StyleBox["i", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "PO", 
          StyleBox[
           StyleBox["P", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"]}]], 
        StyleBox[
         StyleBox[
          StyleBox[")", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"]}]}], "\n"}], "TR",
     FontWeight->"Bold"], Cell[TextData[{
     "Data from the first integrative Omics Profiling (iPOP) is used \
comprised of dynamics from proteomics transcriptomics and metabolomics. The \
data corresponds to a time series analysis of omics from blood componenets \
from a single individual.\nDifferent samples (from 7 to 21 included here) \
were obtained at different time points. The time points included here \
correspond to days ranging from 186th to the 400th day of the study, (this \
can be represented in the following sample to day association: ",
     StyleBox[
     "\[LeftAssociation]7\[Rule]186,8\[Rule]255,9\[Rule]289,10\[Rule]290,11\
\[Rule]292,12\[Rule]294,13\[Rule]297,14\[Rule]301,15\[Rule]307,16\[Rule]311,\
17\[Rule]322,18\[Rule]329,19\[Rule]369,20\[Rule]380,21\[Rule]400\
\[RightAssociation]", "InlineCode"],
     ". On day 289 the subject of the study had a Respiratory syncytial virus \
infection. Additionally, after day 301, the subject displayed high glucose \
levels and was eventually diagnosed with type 2 diabetes. The analyzed mapped \
data are used in these examples for illustrative purposes - these and \
additional dynamic omics data that will become available can also be accessed \
MathIOmica website at https://mathiomica.org. More information regarding the \
iPOP dataset can also be found in the original iPOP paper: ",
     Cell[BoxData[{
      StyleBox[
       RowBox[{
        SuperscriptBox["Chen", "*"], ",", 
        SuperscriptBox["Mias", "*"], ",", 
        RowBox[{"Li", "-", "Pook", "-", 
         SuperscriptBox["Than", "*"]}], ",", 
        RowBox[{
         SuperscriptBox["Jiang", "*"], " ", "et", " ", 
         RowBox[{"al", "."}]}], ",", 
        RowBox[{
         StyleBox["Personal",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Omics",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Profiling",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Reveals",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Dynamic",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Molecular",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["and",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Medical",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox["Phenotypes",
           FontSlant->"Italic"], 
          StyleBox[".",
           FontSlant->"Italic"], 
          StyleBox["  ",
           FontSlant->"Italic"], "Cell"}], " ", "148", 
         RowBox[{"(", "6", ")"}]}], ",", 
        RowBox[{"p1293", " ", 
         RowBox[{"(", "2012", ")"}]}], ",", 
        RowBox[{"PMID", ":", "22424236."}]}], "TR"], "\n", 
      StyleBox[
       RowBox[{
        RowBox[{"http", ":"}], "//", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"dx", ".", "doi", ".", "org"}], "/", "10.1016"}], "/", 
          RowBox[{"j", ".", "cell"}]}], ".2012", ".02", 
         RowBox[{".009", "."}]}]}], "TR"]}], "InlineFormula"],
     "\nand related review (including summary):\n",
     Cell[BoxData[
      RowBox[{
       RowBox[{
        StyleBox["Mias", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["and", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["Snyder", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["Personal", "TR",
         FontSlant->"Italic"], 
        StyleBox[" ", "TR"], 
        StyleBox["Genomes", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Quantitative", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Dynamic", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Omics", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["and", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Personalized", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox[
         RowBox[{"Medicine", ".", "  ", "\n", 
          StyleBox["Quantitative",
           FontSlant->"Plain"]}], "TI"], 
        StyleBox[" ", "TR"], 
        StyleBox["Biology", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["1", "TR"], 
        StyleBox[
         RowBox[{"(", "1", ")"}], "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox[
         RowBox[{"(", "2013", ")"}], "TR"]}], 
       StyleBox[",", "TR"], 
       StyleBox[" ", "TR"], 
       StyleBox[
        RowBox[{
         RowBox[{"PMCID", ":", 
          RowBox[{"PMC4366006", ".", "\n", 
           RowBox[{"http", ":"}]}]}], "//", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dx", ".", "doi", ".", "org"}], "/", "10.1007"}], "/", 
           "s40484"}], "-", "013", "-", "0005", "-", "3."}]}], "TR"]}]], 
      "InlineFormula"]
    }], "TableText"]},
   {
    StyleBox[
     RowBox[{"Example", " ", 
      StyleBox[
       RowBox[{"i", 
        StyleBox["P", "TI",
         FontWeight->"Bold"], "OP"}]], 
      StyleBox[" ", "TR",
       FontWeight->"Bold"], 
      StyleBox[
       RowBox[{
        StyleBox[
         StyleBox["S", "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"], "et"}]], " ", "Description"}], "TI",
     FontWeight->"Bold"], Cell[TextData[{
     StyleBox["File Names located in the ", "TI",
      FontWeight->"Bold"],
     StyleBox[ButtonBox["ConstantMathIOmicaExamplesDirectory",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"],
      FontWeight->"Bold",
      FontSlant->"Italic"],
     StyleBox[".", "TI",
      FontWeight->"Bold"]
    }], "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox[
      RowBox[{"Transcriptome", "."}],
      FontWeight->"Bold"], " ", "The", " ", "transcriptomic", " ", "data", 
     " ", "included", " ", "was", " ", "obtained", " ", "from", " ", 
     "mapping", " ", "of", " ", "the", "  ", "originally", " ", "RNA", " ", 
     "Sequencing", " ", "raw", " ", "data", " ", "using", " ", "the", " ", 
     "Tuxedo", " ", 
     RowBox[{"suite", ".", " ", "The"}], " ", "data", " ", "corresponds", " ",
      "to", " ", "transcriptome", " ", "from", " ", "peripheral", " ", 
     "blood", " ", "mononuclear", " ", "cells", " ", 
     RowBox[{
      RowBox[{"(", "PBMCs", ")"}], "."}]}], Cell["\<\
iPOP_ 07_genes.fpkm_tracking
iPOP_ 08_genes.fpkm_tracking
iPOP_ 09_genes.fpkm_tracking
iPOP_ 10_genes.fpkm_tracking
iPOP_ 11_genes.fpkm_tracking
iPOP_ 12_genes.fpkm_tracking
iPOP_ 13_genes.fpkm_tracking
iPOP_ 14_genes.fpkm_tracking
iPOP_ 15_genes.fpkm_tracking
iPOP_ 16_genes.fpkm_tracking
iPOP_ 17_genes.fpkm_tracking
iPOP_ 18_genes.fpkm_tracking
iPOP_ 19_genes.fpkm_tracking
iPOP_ 20_genes.fpkm_tracking
iPOP_ 21_genes.fpkm_tracking\
\>", "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox["Proteome",
       FontWeight->"Bold"], 
      StyleBox[".",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], "The"}], " ", "Proteomics", " ", "data", " ", 
     "from", " ", "analysis", " ", "of", " ", "mass", " ", "spectrometry", 
     " ", "data", " ", "using", " ", "the", " ", "Sequest", " ", "algorithm", 
     " ", "implemented", " ", "by", " ", 
     RowBox[{"ProteomeDiscoverer", ".", " ", "The"}], " ", "data", " ", 
     "corresponds", " ", "to", " ", "proteome", " ", "from", " ", 
     RowBox[{"PBMCs", ".", "\n", "The"}], " ", "names", " ", "of", " ", "the",
      " ", "files", " ", "provide", " ", "a", " ", "correspondence", " ", 
     "of", " ", "samples", " ", "to", " ", "Tandem", " ", "Mass", " ", "Tag", 
     " ", "labels", " ", "in", " ", "order", " ", "of", " ", "increasing", 
     " ", 
     RowBox[{"m", "/", "z"}], " ", "values", "  ", "from", " ", "126", " ", 
     "to", " ", "131", " ", 
     RowBox[{"amu", ".", " ", "6"}], " ", "TMT", " ", "labels", " ", "were", 
     " ", "used", " ", "in", " ", "each", " ", 
     RowBox[{"experiment", ".", "\n", "The"}], " ", "data", " ", "has", " ", 
     "been", " ", "adapted", " ", "from", " ", "the", " ", "original", " ", 
     "to", " ", "UniProt", " ", 
     RowBox[{"accessions", "."}]}], Cell["\<\
8_7_9_10_11_14_MulticonsensusReports_3Replicates.csv
8_12_13_15_16_14_MulticonsensusReports_3Replicates.csv
8_17_19_20_21_14_MulticonsensusReports_3Replicates.csv\
\>", "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox["Metabolome",
       FontWeight->"Bold"], 
      StyleBox[".",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], "The"}], " ", "Metabolomics", " ", "data", " ", 
     "from", " ", "analysis", " ", "of", " ", "mass", " ", "spectrometry", 
     " ", 
     RowBox[{"data", ".", " ", "The"}], " ", "data", " ", "corresponds", " ", 
     "to", " ", "small", " ", "molecule", " ", "metabolomics", " ", "from", 
     " ", "plasma", " ", "ran", " ", "with", " ", "technical", " ", 
     RowBox[{"triplicates", ".", "\n", "The"}], " ", "names", " ", "of", " ", 
     "the", " ", "files", " ", "provide", " ", "a", " ", "correspondence", 
     " ", "of", " ", "samples", " ", "ran", " ", "in", " ", "positive", " ", 
     "or", " ", "negative", " ", 
     RowBox[{"mode", "."}]}], Cell["\<\
metabolomics_negative_mode.csv
metabolomics_positive_mode.csv\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1722327182],

Cell[TextData[{
 "Description of Example iPOP original datasets and corresponding files in \
the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]], 
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". ",
 StyleBox["N.B.",
  FontWeight->"Bold"],
 " this table is provided as a reference for the examples, and these files \
should ",
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be altered or removed."
}], "Caption",
 CellID->231225297],

Cell["\<\
Various analyzed datasets are used in the MathIOmica documentation for \
examples:\
\>", "Text",
 CellID->1540904390],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{"Data", 
      StyleBox[
       RowBox[{" ", 
        StyleBox[" ", "TI",
         FontWeight->"Bold"]}]], "Description"}], "TI",
     FontWeight->"Bold"], Cell[TextData[{
     StyleBox["File Name(s) ", "TI",
      FontWeight->"Bold"],
     StyleBox["located in the ", "TI",
      FontWeight->"Bold"],
     StyleBox[Cell[BoxData[
      RowBox[{" ", 
       ButtonBox["ConstantMathIOmicaExamplesDirectory",
        BaseStyle->"Link",
        ButtonData->
         "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"]}]], "TI",
      FontWeight->"Bold"], "TI"],
     StyleBox[".", "TI",
      FontWeight->"Bold"]
    }], "TableText"]},
   {
    RowBox[{
    "iPOP", " ", "transcriptome", " ", "imported", " ", "as", " ", "an", " ", 
     "OmicsObject", " ", "across", " ", "all", " ", 
     RowBox[{"timepoints", 
      StyleBox[".",
       FontWeight->"Bold"]}]}], "rnaExample"},
   {
    RowBox[{
    "iPOP", " ", "proteome", " ", "data", " ", "imported", " ", "as", " ", 
     "an", " ", "OmicsObject", " ", "across", " ", "all", " ", 
     RowBox[{"timepoints", "."}]}], Cell["proteinExample", "TableText"]},
   {
    RowBox[{
    "iPOP", " ", "metabolome", " ", "data", " ", "imported", " ", "as", " ", 
     "an", " ", "OmicsObject", " ", "across", " ", "all", " ", "timepoints", 
     " ", "and", " ", "technical", " ", "replicates", " ", "for", " ", 
     "negative", " ", "and", " ", "positive", " ", "mode", " ", "aligned", 
     " ", "mass", " ", "spectrometry", " ", 
     RowBox[{"features", "."}]}], Cell["\<\
metabolomicsNegativeModeExample
metabolomicsPositiveModeExample\
\>", "TableText"]},
   {
    RowBox[{"Example", " ", "time", " ", "series", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinTimeSeriesExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "classification", " ", "results", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinClassificationExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "classification", " ", "results", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinClusteringExample", "TableText"]},
   {
    RowBox[{
     RowBox[{
     "Example", " ", "combined", " ", "clustering", " ", "results", " ", 
      "from", " ", "transcriptome"}], ",", " ", 
     RowBox[{"proteome", " ", "and", " ", "metabolome", " ", 
      RowBox[{"data", "."}]}]}], Cell["combinedClustersExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "enrichment", " ", "analysis", " ", "results", " ", "for",
      " ", "Gene", " ", "Ontology", " ", "and", " ", "KEGG", " ", "pathway", 
     " ", "analysis", " ", "for", " ", "combined", " ", "omics", " ", "data", 
     " ", "in", " ", "this", " ", 
     RowBox[{"tutorial", "."}]}], Cell["\<\
combinedGOAnalysis
combinedKEGGAnalysis\
\>", "TableText"]},
   {
    RowBox[{
    "Spectra", " ", "from", " ", "proteomics", " ", "mass", " ", 
     "spectrometry", " ", "data", " ", 
     RowBox[{"examples", "."}]}], Cell["\<\
small.pwiz.1.1.mzML
exampleMS3.mzXML\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->312091046],

Cell[TextData[{
 "Description of example analyzed datasets and corresponding files in the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]], 
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". ",
 StyleBox["N.B.",
  FontWeight->"Bold"],
 " this table is provided as a reference for the examples, and these files \
should ",
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be altered or removed."
}], "Caption",
 CellID->1159144148]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transcriptome Data", "Section",
 CellID->540567276],

Cell["\<\
In this section we import the example transcriptome iPOP dataset, and \
illustrate a preprocessing approach for this omic dataset.\
\>", "Text",
 CellID->1827655092],

Cell[CellGroupData[{

Cell["Importing OmicsObject Transcriptome Data", "Subsection",
 CellID->257268298],

Cell[TextData[{
 "We first import the transcriptomics data example (for details on how to \
import such data please refer to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporter"]], "paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirect"]], 
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirectLabeled"]], 
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObjectCreator"]], 
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->1539574452],

Cell[TextData[{
 "We import the transcriptomics ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"]
}], "MathCaption",
 CellID->787376419],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", "\"\<rnaExample\>\""}], 
     "}"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[68]:=",
 CellID->641241319],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.73998`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 68, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 68, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 68, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[68], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[68]=",
 CellID->76837286]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->546537213],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[69]:=",
 CellID->863380672],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", 
   ",", "\<\"11\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>",
    ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", 
   ",", "\<\"18\"\>", ",", "\<\"19\"\>", ",", "\<\"20\"\>", 
   ",", "\<\"21\"\>"}], "}"}]], "Output",
 CellLabel->"Out[69]=",
 CellID->1272316944]
}, Open  ]],

Cell["\<\
Notice that we have used \"@\" to form a Query using a prefix function \
application, which is used throughout the MathIOmica tutorials and \
documentation. This is the same as using the [ ] form:\
\>", "Text",
 CellID->1566749700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "[", "rnaExample", "]"}]], "Input",
 CellLabel->"In[70]:=",
 CellID->908486935],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", 
   ",", "\<\"11\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>",
    ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", 
   ",", "\<\"18\"\>", ",", "\<\"19\"\>", ",", "\<\"20\"\>", 
   ",", "\<\"21\"\>"}], "}"}]], "Output",
 CellLabel->"Out[70]=",
 CellID->535902783]
}, Open  ]],

Cell[TextData[{
 "We can get the expression raw data from any sample and entry. For example, \
the ",
 Cell[BoxData[
  SuperscriptBox["10", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["14", "th"]], "InlineFormula"],
 " entries in sample 12:"
}], "MathCaption",
 CellID->392276805],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<12\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"7777", ",", "55"}], "}"}]}], "]"}], "@", 
  "rnaExample"}]], "Input",
 CellLabel->"In[71]:=",
 CellID->221465345],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "21.1197`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0.560212`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[71]=",
 CellID->29914394]
}, Open  ]],

Cell[TextData[{
 "The keys correspond to \"Gene Symbols\" and are also tagged with an \"RNA\" \
label. The values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<FPKM\>\"", " ", "values"}], "}"}], ",", 
    RowBox[{"{", "\"\<FPKM status\>\"", "}"}]}], "}"}]], "InlineFormula"],
 ". Here, FPKM stands for Fragments Per Kilobase of transcript per Million \
mapped reads. The example is from mapped RNA-Sequencing data. FPKM is then a \
relative measure of transcript (gene) expression."
}], "Text",
 CellID->464982744],

Cell["\<\
We can query all timepoints for a particular gene of interest if it exists. \
We must use the same labels as the actual keys of the OmicsObject:\
\>", "MathCaption",
 CellID->1833142640],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{"Key", "@", 
     RowBox[{"{", 
      RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}]}]}], "]"}], "@", 
  "rnaExample"}]], "Input",
 CellLabel->"In[72]:=",
 CellID->1827950618],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "12.7644`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "14.9997`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "15.8482`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.3504`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "18.5309`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.7081`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "14.6549`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.3951`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "8.93065`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.2545`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.9217`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.0331`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "18.7293`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "10.8115`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "12.9051`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[72]=",
 CellID->679977437]
}, Open  ]],

Cell["\<\
We note that we added Key@ before the bracket to indicate that this list is \
used as a key for the inner associations.\
\>", "Text",
 CellID->1488223786],

Cell["\<\
We can query all timepoints for multiple genes of interest if it exists. We \
must use the same labels as the actual keys of the OmicsObject:\
\>", "MathCaption",
 CellID->1609229737],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Key", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}]}], ",", 
      RowBox[{"Key", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<NDNL2\>\"", ",", "\"\<RNA\>\""}], "}"}]}]}], "}"}]}], 
   "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[73]:=",
 CellID->915139441],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.7644`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "13.6201`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.9997`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.3813`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "15.8482`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2763`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3504`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.2483`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.5309`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.3254`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.7081`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.1197`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.6549`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.0412`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3951`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.1224`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "8.93065`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.4774`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2545`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "23.6771`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.9217`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.8782`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.0331`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.4414`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.7293`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "19.9134`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.8115`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.5756`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.9051`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.55`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[73]=",
 CellID->794006111]
}, Open  ]],

Cell["Or in a more concise form", "MathCaption",
 CellID->1516242184],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<NDNL2\>\"", ",", "\"\<RNA\>\""}], "}"}]}], "}"}]}]}], 
   "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[74]:=",
 CellID->1441431186],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.7644`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "13.6201`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.9997`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.3813`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "15.8482`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2763`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3504`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.2483`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.5309`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.3254`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.7081`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.1197`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.6549`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.0412`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3951`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.1224`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "8.93065`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.4774`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2545`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "23.6771`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.9217`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.8782`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.0331`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.4414`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.7293`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "19.9134`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.8115`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.5756`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.9051`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.55`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[74]=",
 CellID->702184882]
}, Open  ]],

Cell["\<\
We should also note that  we can take advantage of Mathematica's native \
direct access to Wolfram Alpha,  to look up any \"Gene Symbol\" information \
by evaluating (needs a network connection):\
\>", "MathCaption",
 CellID->1478232418],

Cell["NFKBIB", "WolframAlphaLong",
 CellLabel->"In[75]:=",
 CellID->413937183],

Cell["Here is an image of the output:", "Text",
 CellID->90413432],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd0FNXbxkE/qigKiICAgFhQBAWUZkVAsaAI+kdFRaVXaYL0TkKvkRII
EEIooYQOgRB6Db2ZLCUkIZ10ks0mme+ZvXEcdnY3m56wz+/k5Ny5c+f2ue/z
zszO1P5t4Dc9HitWrNiQ0vj3za/DPxo8+Ne/Oj6NjW8HDOndc0D3bu0GDO3e
s/vgZr89jshmpYoV24j0clgihBBCiH2TlpYWFRV19+5dnU73DyGEEEKKPrDp
sOyw77DyZq1/XFwc0gQHByNNfHx8YmLiA0IIIYQUZWDNYdNh2YOCgmDlY2Nj
Tax/dHQ0REJMTExB15QQQggheQKsvL+/P8SAie8PhVDQVSOEEEJIHgJbL/x9
cd8f1p++PyGEEGIPiOsAqampUVFRwcHBBV0dQgghhOQTQUFB4eHh4snAgq4L
IYQQQvIJ2P07d+7w7j8hhBBiV8Du+/v7//PPP1Z+8RcbGxsYGCiSEUIIIaTw
A6sN2w0Lbsm4w+6LlFasP/aGhIRAKuj1egMhhBBCCjcpKSmw4GFhYX5+flY0
gBUBgKNwbFRUVGpqat69e5AQQggheUFMTAxMvCUNYEUABAYGhoaGpqenF3QL
CCGEEJIdIiIiYM2zKgD8/f2Tk5MLuu6EEEIIySYpKSk6nS6rAgDxdP8JIYSQ
ogvsOKx5UlJSVgVAQVecEEIIITkC1lyv11MAEEIIIXYFrLn4XQAFACGEEGI/
UAAQQgghdggFACGEEGKHUAAQQgghdggFACGEEGKHUAAQQgghdggFACGEEGKH
UAAQQgghdggFACGEEGKHUAAQQgghdggFALFCWlqat7c3Br2gK0IIISSXyTcB
oNfr/f39c73+4O+//75z505WjwoPD0dbgoODDQYD6qbT6ZRd0dHRoaGhCPj5
+V37l8jISCS7efOmSJOUlIRI2MegoCCRAEcpOeDA1NRUxIhdSKMuOiAgID4+
/vbt2wkJCUokOsfZ2Tmrrchr0Irt27ejtmb3okNu3bqlbEZFRaFX86tqeUDY
ZenYTCv783qMMFV2796dd/kTQoiafBMAK1euLFGiRGBgYK43YcaMGTdu3Mjq
UW3atIHxatCgAVp09erV4sWLK2svFEW/fv0QePbZZ7t27drLCPYi2euvv474
xMTEjz76aOTIkQh/++23bdu27dOnz9dG0JniwIiIiEWLFtWvXx+7fvjhh5Yt
W8Lii/xffPFFKIQqVarcu3dPqc+lS5fmzp2b077IbawLgMuXL7/xxhvK5vTp
0//888/8qlp2ifSTNv1oftc9X+moo5VDbR+jrVu3Ll26NKtVW7t2bbdu3bJ6
FCGEZI98EwAwuOPGjZs2bZrY3Ldv3zvvvFOnTh1YDWzChf/ss8+qVavWpUsX
GJ1du3b1799fpGzRokVYWNihQ4e++eabN998s0aNGlgn33333erVqy9ZsgQJ
OnTocPHiRSTo2LHj22+//cILL8DyimOHDh1asWLFpk2b/vrrr5s3b1YqA8cf
+Vy/fh0GGpuw7KhJs2bNUJD0sACAHVeOEgJAWH8HBwcRCQGwceNGyWgrUZaw
8ooA6Nu3r0j21Vdfubi4IBATE9OwYUMUDdmg7p9jx4799NNPCMyZM+fll19G
S02cQeTfo0ePqlWrfvjhh2fPnjXpXm1Lp0yZ8txzz9WuXXvbtm3YRM/DuGCz
UaNGBw8eRIxOp0Pfli9fvlOnTmiU2VHLngAwaYKlgrQtMpkVqnqkSFt/k2ZU
kVa8LwWefGjXzf3Sum+klR9JjhUlz9+ltFQ5BskWvS5t6y7p46UN30kOFaRF
9aU7h6WUB3J4wuPS7BrysTc8pXl1JcdK0n5Zy0m3faSN/5MDrp9IW7pKM56T
1rSTom+bjBHOF+hGiLrKlSuj/unp6SZNPnz48JNPPlm2bFkxoCYDgbnXrl07
HIuZI64aeXh4YDYiwe+//04BQAjJN/JHAAQEBMBowiYq9gKWF0slFsCff/45
ISEBBnfEiBGoyV9//eXr67tp0yaxeIKXXnoJayZMA1ZUWJzFixcXK1bMxwg0
ABJ88MEHZ86cQYKSJUuePn0a4QoVKhgMhps3bz7//POwLHv27ClVqtSaNWuU
+iBDrNJ3797Fki4ZLTsqhmRffPGF9LAAgNXeZARVRTKs0ihO7BVgGYcCGT58
ODSJsnorAqBx48ajRo2CdIG6gOmXjAIADYTvb3LVAkb5888/hwJ56qmnIiMj
Ue1hw4apEyDmjz/+QF8tWLDg+++/V+/StjQkJARCCEXs3LnztddeQ5qRI0ei
jRBaMFWimb169RozZkxoaOgnn3yyYcMGswOXDQGgbYKlgrQtMpkVqgl0VDbu
8aHS4SnSug4PVeKf7dL4YtLZJVLAEWl2Tfk/YmDir2+RkmOlC6ukZU2lkPPS
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
YpelF+tJxu8cBQcHr1u3LmuNLDgOHjwYFRVlaa/1FwWgA2/duqVsIh/xmkdb
SXkg3Tv332ZCmBRtHOjECOnYTOn6Vvlbvb7ODx1yYLRpJoenShE3zKQ04dxy
ycLLlwoj/+yQ4u5l50B76NJc75x7vvKbosVfXLCcLPRSRprkODkyzSBF+Wck
iFWd+zgQu+JDM3aFX7NYtNm+Qvfev/VQjOj5RwzNeMFSiBet5xFYok0+tm63
5JsAWLlyZYkSJQIDA3O9CTNmzLD+ll0tV69eLV68uDIH1J//69q1ay8j2Ku8
/D8xMfGjjz4aOVL+avy3337btm3bPn36fG1EvMBNefl//fr1seuHH35o2bLl
7du3Tcr19PTs2bPn8ePHW7duneN25xP79u1DcyztzcbnArNQdsh5+T3/V9Zn
bJ6cJ20zfvNoZ1/J43t5Eb7tI61476FDkD794a8oHpokhV02k1LNRVdpq/nv
IRZS/tkuf6o4GxSqLt07VM4k18n1zplWXtrYWf4gNf5ueMrJ5tWV45Oi5bdG
7xksh92/klw+lLZ1l1a1lgPi5ZM4EHrgxBxpwStyVus7SgvrSZGa9dNSXyGf
WwceihE9/4ihGa9Lly6JD5dkytatW8W7uLPE2rVr+dENQb4JgDZt2owbN27a
tGliE2blnXfeqVOnDoyCZHx3+meffVatWrUuXbrApuzatat///4iZYsWLcLC
wg4dOvTNN9+8+eabNWrUwPC9++671atXF59T79Chw8WLF5GgY8eOb7/99gsv
vCC+yAOGDh1asWLFpk2b/vrrr5s3b1YqA8uOops1a4acpYcFgPbrP8L6Ozg4
iEjl6z+oJzIXVl77+b+vvvrKxcXFpBMaNmyo0+kgAND2jz/+uGrVqlOmTEH8
6NGj3d3dJeO3eqEcEEBHoc5o7FtvvYXi6tat26BBg2PHjknGb82//PLLqJh4
5z9SYjLXrl27UaNG8NZNStT2AEp87rnnkH7btm1mD0cN0efly5fv1KmTeBsz
ikZXmB3W7AmAOXPmoAkYTaHBtCVmgJV2RhX5Ez8xd+VNsSDDIZ1YQl5ajzr+
Z4NOL5KWvysZkuQFfGc/+fX+zi0y3De3z+UX+yOlUwP5Vf/TnpY2/fjfq4AB
rBvWc3hnN/fLXw5Cstk1ZOfLubk0q7p0Sv6Mkex2YRPHYnkXLh6KizJe0bq8
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
dHVivT5l+YKNCDuMXhIWEinKWr14y5DuU6MiYqb85bR+5c6hPabNneISF5ug
3htzP+7Keb+xg+YO6+mww8Nb3jXTrfcPY1FK4J0Q+PiOY5b81W/mFvd9Jru8
dhw95HUakTh83OB5yHzt8u1paWl+124vmePuMHrxqAGzfPbJrdAn67eu87Kk
KAghhJC8wNfX15IAwC5t+lwUADPGLXNZ5BEXE+88fwPMpYiBxY8Iuw8ZAFWA
mEnDF4r7BaePXlyzzBOBpXPXwaQ+VKWrt5AYAgDG9+Dek9ASMLgBt4LVic8c
v7TQ0TUmOs5z/X73FdtFWSgX9t2QYsCBHq67I8OjYcH3bT+q3gshATWCTELv
RYzsNxO1xd6hPRygKBDYvHbv9cs34+MSoRCQQL0LTRBZjR8yH5UPCQ6fPGKR
//U71y7p+v004bYu6M7NoCHdp6Wmpkbfj53450JkkttjSwghhFjEy8tLMf1q
EIld2vS5KwBgECWjdV6x0EPEnDt1FYGkpGR463CKsyQA+v8yUfjRa5dvE08F
KIldnDYtm7d+99ZDHmv2jB44W5R1y+8uAkI5CMf/6kX/eVNXqveidJhpHIg/
WPATh89LKiufok9B5bFrwrAFF85clzQCAIeP+WOOqOfebUe2uO+DAIDIETHQ
BuJyBCGEEJLPFKwACLwTggBM5/KFG0XM5fNy4pQUw6Dfp+iT9RAAwrM+dtA3
UwEAzSBiNqzedeTAGXXiJXPccfjh/afxJ3YppePAPj+Oe5CYhLDftdszxi9T
7w0KCB3eZ7o4EH/iwoJi5R1GL3Gev+GQ1ymH0YvNCgAcDu9e1Mp7z4l1Ljsg
ABbPWitipvzlRAFACCGkQCjYWwBaAQB7Crf6uM+5OZNXSEbDDV8efr3TTDch
AFwWeRzzeahiVgSAkhiZLF+wEWmCA8PgsEsPC4DeP4w9sPs4SnFdunXHpoPq
vWDUgFmw45LRhQ8MkCP/6jczIuw+VMqAXyYmJjyIj0sY2mOaEABil6S6BYDD
b+sCITBmT1x+9aK/VgCkpqaeOX6J70oihBCSnxTAQ4BB4cIphq8t7OnFs9eV
WwAw9PD9//htsrgUAP99RJ8ZcKsXOroKAXD+zLVhvRzVv/v759rtRTPWwI4P
6W4qAJTECfGJqxdvgXUeO2gurLC6dBw48NdJ86etwn/sFeZb2QvOnbo6afjC
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
K/STvgMHDiAjQLc9e/YYm428AzlOs2bNEFMsbMVy3nrrrebNmxssB0lHXFyc
vFVWe0l6iQsyltOkSZOSkhKp0movbdy4UbzUjzIxMTGIVvIzWu15ee9V2mr1
iYTD4XnknvqteXl577//fqWt8rsmfzJY7UaZrbF6u21xgo0bJ+8lq1ckszVa
QpyYWhYA0OF4kx45csSg/urVq5DraBo6dKhBE977sLB169ZIDYwHFNdJ+dY2
bdogHBg8RsRCkpKSpJe9evWCDc8888wHH3xgPI6Xl9esWbN+/vlnXEaysrIs
aY2OjsZyhgwZYtAZqYd4/ihjldVeEuX8/HykYyEhIei5fv16qY/tXtKPMvqY
m9Fqz8t7T77VlhNp6tSpONbg0YZW9+C40laZXav0ZBDY4kbjrbF6u21xgi0b
V6mXrF6RzNYYj0aI81DLAgBiHu9Eg6xHAOmOJiHmDYCFjRo1evXVV6Ua5AiL
/+TgwYMyrbhS3XPPPcjQZaxKS0vr2rUrCjNmzKhfv750g1Hi3XffTU1NxeXC
pIUmW3fu3ImXuPJI3c6fPy9ZhYuSjFXWeUli5cqVbm5uWt0lEemkqJT3oSVe
0poXACZnVKlUVnte3ntr1qyRaUXotO5ECgoK6tu3L46FhJA6eHp6itZVq1bJ
t8rsmvxykIra6Eat0dbYst22OMGWjZNvvXHjhtUrktkaQpyZWhYAn376Kd6J
+pmLhI+PD5oWLlxo3IQUoGHDhu3atdOvDA8PR39cKnNycmRab9++jdaOHTvK
WIVrzpYtW7S6u4INGjRALq/fimvdv//9b1F+5513kKvqZ23mWr29vWHAvHnz
pJ5lZWVTpkxB5fjx48WKzFllnZckMKx4HLBs2TJ0PnfunLYyH1riJa15AWBy
RoVCYbXn5b2HiCPT6uXlZd2JVFRU1KtXL5QTEhKk1uzs7DfffBOVCEbyrTK7
Jr8c6XSy2o1ao62xZbttcYItGyffijTf6hXJbA0hzkwtC4AJEybgnXj06FHj
posXL6Jp+PDhJg986aWXHnroIYPK5s2bf/3115W2tmrVqmnTpuZMwuW3devW
HTp0eEtHs2bNMNTvet9KQ1R65ZVXROvzzz8PI/39/SttjYmJMb4RffLkSVQG
BgbKW2W1lwCixuOPPy7swaLuuuuuAQMGiCZbvCQwKQBkZrTa8/Lek2+15UQS
97cN7hX/8MMP9913X6WtMrtW6cmgtcGNAuOtsXq7bXGCLRtXqZesXpHM1hDi
zNSyAAgNDa1fv/4XX3xhUC/+tIF4C+fn5+s3ib93gBQAb2FfX1/9pieeeMLF
xQUF+daxY8cat4pJ8X9AQMA333wjVYoU293dXbzEel988UXYIF4WFBTcf//9
H330UaWtqEQTlpOXlycNfubMGQx+4MABeaus9hIKAwcODAoKkup79+59zz33
IEez0UsCkwJAZkarPS/vPflWW04k5LBIJA08P3LkSGxrpa0yu1bpyWCLGwXG
W2P1dtviBFs2rlIvWb0ima3REuLE1P7XAIcMGYI3o8HnwL/66isUoPNxbenV
q5f02x3Jyck9evS4efNmWVnZa6+91qJFi8uXL4smXMwffvhhIf7lWxEIWuiI
iooSreg/ceLEzZs3o9ytW7fjx49LxqDpwQcfbNOmjbgxCzu/++47fftxoYb9
0dHRlbaGh4c3atQIyykqKhKtyJukq5m8VdZ5KT093eAJBYIsZpw2bZqNXpJW
h9H0v24gP6Mtnpf3nnyr1ScSmDRpkoHnhw0bJqJbpa0yuyZvsC1uNLc1tmy3
LU6wZePkW21ZkczWEOK01L4AwHt2wYIFuNS3bdv2s88+69q167hx46Rb7hD8
yAKg6vv06fPee+/1799fBFOt7g3+448/IkHo3r07MseOHTsigoSFhVnSmpOT
g6tK48aN33///f/85z8ff/yxp6enVveNaVxeBgwYIOUCW7ZseeCBB1CJq4q/
v3+TJk1ef/116YJz8eJFjIxWXIhwMZFpFV9GvnTpUpcuXXBRwkJwtXnllVdw
IZIyU3NWWeeljIwMGIO00cvLS3QrKSkZPHgw7MGKdu7cabWXBHPmzMGBGK1n
z55XrlxBjSUzWud5USPvPflWq08keB6WYNj27dsPHToUBmM3V65caWGrzK6Z
M9gWN5rbGlveFDY6wcaNk2+1ZUUyW0OIc2KvnwLG+zExMVH6yQ4DcnNzIeOl
W+vGBwKTfwxRvlWhUCBYY3Abja8qpaWluCybm1fGKqu9JE/te8mWMeW9J99q
9Ymk1f1O7NWrV6WfErK8VX7X5A2Wxzo32rLdVjtBa9vGybdavSL5rSHE2eAf
AyKEEEKcEAoAQgghxAmhACCEEEKcEAoAQgghxAmhACCEEEKcEAoAQgghxAmh
ACCEEEKcEAoAQgghxAmpiwKguLg4NTVV/G7qrVu39JtUKlVycnJpaalxE9D/
oVRjsrKyRAc4pKCgoJqNrool8q3mELtTE5Pa4lV5q2xplbcqMzNTGIYO0g8C
C2TOHxnkjbFuTBmsG1D+KFv8acsZa/Ve2PKGte5NRIhTUbcEwI4dO1588cV/
/vOfAwYMeOmll9q2bfvll1+KptjY2G7durVp0wZNnTt3fuGFFx555BGDw9H/
+vXrBpVlZWU//fTTc88998knn3z++ecoYOS1a9deu3atfv36991331tvvXXv
vfc2b9787bffxphNmjSZOXMmmp544gkMiELr1q3btWt39913Dx069LXXXmvY
sOErr7zy9NNP16tXD5a0atUKfQ4dOiTNCBtef/11c2s0bpWxRL/bbB2WD2tJ
q9VetdAq61plrEKIwW7C57169cKG/v3vf0d59+7dotXk+SOzm5YYs3PnThwC
MwYNGgQfvvHGGx9++CHqzZ0JGzZskN9N64w0Z4aN/pSQ32WTrVbshSXDmnvD
VslgQoi2TgkAXANxRfX29hYvcXnBFaBHjx4oX7hw4YEHHujfv7/0q6Tu7u64
6op0RhAaGooaXDr0x0T/jh074rqEa6CoQT6CS8rSpUsjIyNx4RK/VI9r+Gef
fabV/Ug7rloTJkwQf8U+JCQEY+JShvKpU6e++uqrDh06pKWlaf/619lGjBix
d+9eadIxY8agKTg42OQyjVtlLJH6IIdq2bJlixYtkMdZOGylrVZ71UKrrGuV
sQouat++/bPPPiv91iu005NPPunh4aE1f/7I7GalxiCeNmjQwMfHR7xUKpUu
Li4I6CibOxOWLFkis5vWGSljhi3+lPrI77LJVuv2otJhZd6wlR5LCDGgrggA
vN+R7/Tr10+/MiUlpXv37hqNplOnTg8//HBhYaF+K5IL/duAuCQiKUCehYut
VOnq6ooLRUBAgP6Bvr6+c+fOxYXr5MmToka6UIONGzd6eXkhDdH+9WosmoAo
61/2Y2JicEUSZRyI7KxZs2a45Bov02SrjCVSnwMHDmB1mHHPnj0WDivfaotX
LbTKilZ5qxYtWoT+fn5++k0rVqxAeihz/sjsprwxcXFxGHPgwIH6Y+bl5b3/
/vv6hxucCUiBze2mdUbKm2GLP6WX8rtsstW6vah0WJk3bKXHEkIMqCsCACkD
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
EjVFtbLMzs6iVq6843VwXPPkkgBQkF2xec2REL/E0+8lHNoefLG9bzFNmqeX
n3oX/9dVtTSctxFI7M1fkJMHIpC13LkiEZEHoaAolUpPVzYXwxHhuGx+dn1Z
H6+94+rv76+trc01wgRu2nu4Fx8ABiTD61/cp1Jdrne9FwcKsysw0VTXvvHV
Q288syst7ixutrd0+x2M3PX2yQ2r9xfmVIqFM5OK3nx299svH6ivbTPfpkaj
CfVPWvfC3oPbTo2NTGDdU8fiDu84vWbVzvDAFK1Wq78SAHLTSopyq/TGIf+m
1w5j46mx+ab5GrVm29rjQcdi33h2d3hgsjhR8eFZr/915+53/EJOJiIn2Nvp
iX3hzz26EStKeqRZycUBh6PfenFfdVnDwW3BstEJvTFjxIdnY2J0WLZvc+Dr
f911+kS8fPaS+YrWC5/YG4b9rlm1Y3J82uIUWTRAqVAmReUySBCR26Cg2C42
/efVzQkq+aS4pcldv9jqNdKurjq52I3YoinerZoesZiJ47L5zXXuO14HbJ2K
ee7R+rhQoNOs2HvjfvEBoKK4LvBIjJhWzCnxD3kK01teP4ICNzQ4ingwPTnT
0tD54uNbujv7e7r6UcfR5smJadTroYHRxrr3t7xx1Hyb5yub920JRO0rL67D
P6yLklpT3tjfO4SKiS3orwSA1LizOaklYndoycT41Pa3Trzf0i3mIwBgxYLs
ivGxScQDhBMUa1RYTCAwvPTElsqSC/Z2ijmo6eJYUIi3vnF0sH8EG3x37THx
TkdVSX1YQDImIoJSI4PTcIwhfomilJtWtF5476YAnC5Uf6QRi1Nk0QAcy9Y3
j81ML/ZjHkRE82SjIE4N6U58Vxv1sCblGd2Rr6sbYzFPv/k6lVKxmKKn7sjT
Bv3rYrZgj+7AF1Uj71vMXEAAWJrjBW3w/arZcev5Nk/FPPdocVwY7JuK/qSR
6abN1wEWHwBKztYc2x2KCRS11/6y45X/2/bOKwdR9VDlMcDHv23rjosijuGw
WGXzmiPD0rHSgtqdG06KZbCWGCkLSAXYVFxYVnenBDexLkqhuCsxMgfL668O
ACNDMuxULCCG+aYA8NKft4pBdERQCppamFOJCbHk4R2nzQOAxU71VweArORi
MdO6pqN8y8YmzffuOACIt0isT5F1A4iI3Mm6IKI86XZ9UnVp2nBD1q3uLRfl
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
DwCjo6NjY2OeboUjnZ2dExOOfmqwra3NYo5Op7tw4YLpOwmtT7jFAk4bHByc
np5e5EbMXfNgberr66uurlYqldde1CkajUahUCzRxl2Cl/Fi+MJljHM1MjKy
FFsmX+bmALB9+/abb775c5/7HJ6zYk5paem999574403Pvfcc++88w7u/eAH
P/jggw/+6le/+vGPf/zxj3/8oYcesrkptVr98ssvf+ADH4iNjXW6PU47dOjQ
P/zDP1x//fVo5He/+9177rkHjbHZaXzta1974YUXbG5EIpHg2G+99VaL+XV1
ddddd11hYSE6VWz8i1/8or0FnG4/auLjjz+O9ldWVjq9EWsODtaeTZs2vfLK
K3ffffcf//hHF7ZEQLcZGRn5jW98Iz8/f56r4MxccxlexuZ4GeuX+DI+ePDg
7bffjsP86U9/Wl9f7/Ltk89y/ysA6CHxrL///vtNPW1FRcUDDzwgpu+7777b
brvNtDCiuOkua2i5p3pOQFeJA5FKpZjGQObDH/7wI488Yr1YVVWVg69iPnny
pHXPiTOTmZmJo8P0rl27rHtO8wVg3759TrT/4sWLaP98es6ioiIcxXy26fhg
rc3MzOARlMvlGD3V1NTMf8V5Ql0+cuQIDnP+AcDf338+PwfJy9gcL+Olu4zL
y8v/9V//NS8vLzw8/JZbbvnTn/7k2u2TL3N/AECH86Mf/QjP2fXr14s5XV1d
pqv6v/7rvzAkMS2M3bW0tDjY2g033GCz59RqtRav+ope3dTbOJhpva5NW7Zs
wVEMDw+Lm3iSfuUrX7G5pKmgiAmdkZhz6tQp0XNaFx0x58CBA6LntLdAfHz8
pz/9acdNFa+yWrzWioGbqed0UPIwyP3CF76A/sd8aw7Oj/mmLE6sNfSWaIP5
L0PZa7/Tv9GM9i8oAPj5+c1nX7yMeRmbLOllvHHjxqGhITH91FNPffzjH1/o
Fojs8UgAOHfu3D/90z9df/31yP96Y4Z/9NFHxb3mPSeeL7/97W8db030nAje
P/vZz37+859HR0dj5ptvvvniiy/+8z//86pVq3Bz//793/nOdzDnzjvv/NCH
PvTss8/am2m9rgPmPefIyAg6wN///vcWy5w9exYzn3766fHx8RdeeOGzn/1s
YGDg7bff/vnPf765uVl/pefEpnAXOqimpiZ0I8eOHbv33ntTUlL0xp4TC7/+
+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
dAjNmQDAcjB70ESrfyMCVmVmZmIuCQkJzFocoyYGqu4yEQRBEArGir8DgJiO
+Mt/PD116tSlS5caVEMKjGpnzpxhpzNmzPiv//qvX3755a233pqkB8n7q6++
igMW7xgQAGjVokWL5557jj1GFwoAT0/Pf/7znzhAaH777bcbN27cpk2bVq1a
iQoABFkW4tkxQioycSTyLAQbCABfX18csMqlpaWojCDu5+cXFBTEChMTE5kA
gDzw9vbG8b59+xDERQUAZAk+raysZG0R5SEwMCJ77ZD1xl4pRG/QGGjFaQkG
mrMHBwRBEATBsKIAQNhFgOaiNgJcu3bt+GGLgRGffvrpNWvWsNM5c+Z07doV
4mHe3yD69+jRAwf8L9ZBADz//PMIux06dJg2bZpWTAB8/vnn7IXDjz76qH//
/oi5OP73v/8tKgDi4+P37t3LjiEADh48mJ+f7+Liwt5JMBAAYWFh7JUArf4R
BqJzeXl5aGgou4+h1X/zkQmA48ePnzhxAlEe04cSEBUA7IECUxrA1dUVS4AR
YQMrYXICPWCOGCgrKwsG8F8ghOU1/uEFgiAIQpFYWAAgjJ49e5Yls/Pnz2cP
8RkRERHt27fnV75x4wbCOir/9ttv7733Hit85513Vq5cya82atQoiZcAkeY3
atTo2rVrTAAcPnwYwffy5csTJkxo1qwZe6kP+gFDaPXP0Js2bbpu3Tqh5Yiq
CKkIylreS4DsMT16NhAAKEEQRyHkDU5Z3GfP4tEWyuHYsWNMAHh4eFy8eBHS
hd1VuH79uvZvAVBcXIySpKQkeABKIyQkBMEdcRyFJSUlQgGAAy8vL8xIpVJl
ZmaiBDZr9d9QwHF2dnbNlowgCIJQJBYWAAh8CMcvv/zyJ598sn79ev5N+wUL
Fvz444/8yvb29gjHubm5ZWVliNfDhw//8MMPEe5LS0v51b755huDhlq9AOB+
BwDioW/fvvzfAXjqqacGDBiAOqwCwmuLFi1at27dpUuX0aNHN2/eXJgvIwqz
1FurFwDsdwBQiBQeYZe7IY9wHxwcjIDu5+fnpAfl7Pk7Cn19fVkhWrGb9uz2
Po7RYUBAAEvbUcJuR7CnAyi5d+8e6rC2UEpavZTiCwDWW2xsLHQIZAYkBHQF
+xTWurm5cU8QCIIgCEJrjUcASKILCgqE5UhXDX7/BxGTn7fm6zFlaGmrEMTZ
MeK1aLi8du0ad2NfDphOTk6OwS/+YQrsNgIH8npuXsjWDYbm1A67t8/eOZQA
1dLT09nrkQwfHx92Y4EgCIIgOOgfA5IPgq+rq2tGRoa1DakGsBbpP30HkCAI
gjCABEC1SE1NNfiXCGychIQE2GxtKwiCIAibgwQAQRAEQdRDaiYA6I0ygiAI
gqi7II7XQADExcXx3zEjCIIgCKJugTjOonm1BEBycjL7gjlBEARBEHWRnJyc
tLS08vLyagmAgoICfGTwlT2CIAiCIOoEiOCxsbFlZWXGHvQbEwCgpKQEbaEf
Kioq6H0AgiAIgrB9EK8RtbOyshDfEf1VKlUNBAAoLS1NS0uLi4u7TxAEQRBE
XQBRm93512g0xuI7qykhAADEA6X/BEEQBFGHQOA2lvvLFwCMsrKycoIgCIIg
bB5jz/1rJgAIgiAIglAMJAAIgiAIoh5CAoAgCIIg6iEkAAiCIAiiHkICgCAI
giDqISQACIIgCKIeQgKAIAiCIOohVQqAgoKCpKSkBw8e1NrvFREEQRAEYU4Q
tRG7EcFrLADYvweUlpZWVFRUXl6uIgiCIAjCtmH/+G9GRkZsbKyEBpAQAGjF
/iUgtVpt7V80JAiCIAiieuTn5yPEG9MAEgIgKSkpPT2d/hUAgiAIgqijZGVl
IZpXVwA8ePCgrKzM2rYTBEEQBFFDKioq4uLiqisAUE7pP0EQBEHUXRDHEc1L
S0urKwCsbThBEARBECaBaF5eXk4CgCAIojZAhpVam2RkZJSUlFjRAMIqVLnu
ckA0Z98LIAFAEARhXrBFY6/G/5FnVdQC6JYNgZ3ZKgYQVqHKdZeJ6QJApVJl
ZeSYYgOfigqV3+/BtfEFw4S4JN/fL/B7zkjLDj1/nV8nNTnz7q3Y6vZ87/aD
mLvxOMjOzDt7OhTdciXSrVKTMgwKc7Ly7v+RwBmJrrhjvZ9zcVBS/CfsxH/5
eYXVNZUgCEuCNA17Zm2Hg+LiYsQC0VezLGMAYRWMrXtycnJkZGSgHhzg1Nj1
aboAQBRb8cs2E/9Mbl2LDjl3Tau7W1V23ONsRXmFiR0aUFRYMm/ahishtzQa
DVeY/Dj9nP9lfrWrYbfd9pyQ2efuzYcRlHFw8+ofd27ofLJm4S4IgIL8Iq5E
AnfnkxGht7jTP0tKHVbuP7Dz2BFXvzULd/9xJw6Fv/ywFt5gFdJSMlf8uh0H
wWcj4HCP/af3Onrt2uSenpIl02CCICwM9mcLpN4YAgPxNzcLG0BYBdF1R4D2
EWDsvn1tCIDM9JwNy/bOnrxq6xoXREOUZGXkbFzmPPf7tQd3HkMCC4MR/n6b
tn6z/f7H8SkPoh/NmrTyp2/tEf5QecnsLfh/eVn5vu3edlNW2/+2PT42ESU7
NxzyPODzy9R1O9a75WbnowRRcu0ip8WzHM6eDjGYl/+Ji7/9uH7BjI3QFbj8
536/ZvrYZfOmb+DXibv/mI14I+Ieai76eTOiPxMAuiks1U1hzxZPWKJWqVf+
tgP2YHRYDsW1c6P7j98swWnSo7RAn9CLgVe3rXVlJfEPklgJ+rl7MxbTQRz3
OXqeDYqAbjdlzbrFTpgFXwAkxCXBIUxRQK4gwdfqBYDj6oP37+luJvAFgMcB
H9bq6KEALxdftVoNszE7SIjszDwYfMIzkHVFEIQVwf5suGuXFKgehVWUl/1v
SWFmRWKEibEAA4neOBUxgJF8Q3Xv94qSfHamDlxgogFCVFd3V2TeN3u3to/q
jpduQYtz1f6zK/4srNWxDNYdyT4X9PP1cKei9wFqQwAc3nfqiIsfYvT+7Ud9
f7+gLzmNmFWYX+TqdByhEEEfeW5ZafmFM1f2bfNGBRz8fvgMa/7zRHv8/9rl
O5AHWRm5Qb5hDisPoAQR+cCOo+jEeesRRFiUICDevRULRQFdgd44A/LzChEN
EVJj7j78deq6ivKKlMR0SAXDud+LRxTGAUL/lZBbqLPUzpEJAEzh1JFzUC/Q
MJFX7kIAILjDSExq6RxH2I860DPl+jsVp4+eR+IvWrJ87lZogPTULAgMWJ6T
lQdZAsNQOGPccr4AgKhYs3AXqp08EsQl9RAAcC8kEOYoFADQUdvWuV65dBMC
ZuNyZ0T88Es38V9ebgFqQkWIbUgEQVgOkfibdFW7rIHqjxNcgdp3RuW6tuYN
BFIGFKRX7nxd4zlMfeqHyq3/nyrKG2Uw6QlNYg40+99TxZ4xb591As2xcapr
e6Dr1H4/VxTnyWpy4H0IhhqMZbDukZGRxgQAPhJeHrUhABDFWIaOSIdUl5Xk
6Eu0+kjHWiGye+w/vWr+TpwGCwQAcnMEZa0+zCF//7OkFALgQfQjrV4bQFqw
OuuX7Ak9f730zyd+mCjsQiR3Jx8hEiIhJSnDmADISMtePMuBlUCcsIbzZ2xE
Eu1/4uLuTYdddx+HAJg5YQXLqaEN2JsDVQqArIwcJPvoBP+tnLcDoTnk3DVI
IDYW5A1fAACsI+rs2HAI2gBz1OoFQHFRCaazZ4snXwDAPMfVByFy4JPS0jII
hjnfrT56KAAOFy4xQRDWQlQAVK58WuP2yV+nJfmVG9tVrmujO06L0ux9s3JN
a83B/hU5Cbq44PKxxnN45dr/W5H1QHX3WKVjJ0gF9dnfqgwEEgaoHgTpOmSZ
aU6C6nF4hV4AaE5Mrlz/rMZrBItZ+uFewXAorygt0RyfqLrjqTPJ6yt1mEOF
XreoIvfze1afW1K54b8qd/VU3ThYoRcAmiMjKze+oNn3bkXyDbHp/G//GBRq
RHN4CGxQBy3UHB2jM+b3b3X9FudiULSq3PGaKu68riT9D43rwMr1/9Qc+VrX
FkMHLdINvbmD+rKjzvj7AboKO7tXbmqvurpb59VNL7KPdE7e8+/KNa00h4dW
FOVI2C9cDsMS2LzlJd1A27vqmvv9jHXU7H5Dp3wgAEpLYI++28Wws9Kho67n
GD+deTG+Gqc+WHedQoBbXAfC/5ivbi3YZGHe7jcqUm/rKv9xEse6qV1YUeW6
BwYGcqGfDwrxkfDyMLsAQHxH2CoqLNbqH7Ije9WVTF1XqH8WwIi6eX/BzE1+
vwf7/n7BmABwcvBAYst1WFhQjGCX9ChNq39hYN923X0DTBwiYdcmd4TCct5r
A+cDwj3/vknO+pEQAOiTBVZw5lQIBABGhOQI9Am9FHQV/92JjIEAQIRldY64
+rHXFaoUAJj+b9PWs07w3+P4lHP+l7m791AmfAEADYM0nx2j/43LnLV/CwAc
OKw8cMw9gBMAOze6R0c9RP9cc2iAk15BEAbn/J54q4EgCCsiLgAQI5z6VGTE
6Lb3iJ3qk1PYHQDN7xN0IS/lJuKg+uw8lOhqHvr/K9LuIj1HBFHddEWMQKSo
yH5YYwFQUfZn5dbOlRueVwfMrUiOZGUIQOoAOwxUubOH6raHbmiHjurwrapH
YZXbXlXd91eHblSf/lEX1Fa31LgO0lXY1oVrriMrDjEaoQ1Zvy7EF6TrBIDL
APSpOTZefXqqcDr8/hH4dDaEbkKIr8SB/5yK1Du6flJuqiL3afb0hd90kdT5
bZ2jTkxWn/oB4RsmqR4GQ07AgehEFeWN0ImuVPeOV65ogo/UF1fr7rdEeavu
HoVgqCgv1xnjO6Mi/R5kiSrygJT9guUwLGE2By6oyE3UuW5dG8R31a1Dlcsa
6gTAn0WwQScA/GdBucFXEBg65YCSU9/rHhPA7E3tK5KuQ4xVrmqhUxTlZarr
zvAbzFP7TIfo0jnN8RXVTTd8qlMshVk2LgC0+sQc4Q9WISdl77C57P4dWTAC
K6Iq/kN89Hbz1+oDJRMAyKkP6h/Ha/8WAEh7EbsRTxHu1y3Zo9U/AjAQAEjS
IQzQ7cKfNsU/+N/kF6n3ktlb8nMLcfDbj+sRWyUEAJqjDpoj/q5b7MTuABzY
cRSaRKt/wY89AhAKAERb9lq+xCMAGMbCNKRF0uO01OTMxbMcYBji9ayJK/kC
AAF9qZ0ju5UBXcSeTXACICMt+6dv7YXvAPw1kT8Srly6qXNacOS2ta7w/LXL
d+jXGgnC6hgTAIh9uhiH7X3n66qEUJ0AQExEhEr/Q6cK4s4he2URU/UgUNcq
5VblyqcRAfEfMmV1xM6aCwDdjl+kvrJdc+CDyuWNdKGKPQIoSNfFprO/6e4w
pNxEfsrqImwhGCFO6YyJv6jx+LJy878q8lJYPOW6VF/eovEe9Xf/hbpQi0QY
YU6X8Ppp9r715HQE/RfnVq5oytJ53UcZ0bqA6zJAFX1K4zlMdXUXM7tyVfOK
/DR1mANSdbgCKbl+aEeN92jWm+bA+6qoIxAAujBaobtXgNxfd1Beruu/OF93
C8Vnmk5LuHykOTLSqP1lpYbLIVygv2wu1jUPc+CaQ64YCIC/btrohYruABLl
+l510EJdcL99WDfl1f9gwV3jOVzj9onOvBPfYY66Eo8vKnf10t110S+Q9Lpb
4RFAcuaP3yxB1Gb/JcQlIdIhDCFiIoKzEJmYkIqU327KmvVL9uTlFCCcIUAj
7CJ5ZwIgOzMPwe7grt9xPGvSSq3+y26IxQipiP4xdx+iZMOyvegZB7evR7NH
AEG+YYt+3rx0jiMEhkG88/s9GMEXoyBc4hQCgD2MeGLufyTs2HAIB+f9w2eO
Xw4D9mzxPLT3JEqgNNg99jULd8FgCAC7KYYCACn57MmrEN99jp5n7ySgB/b9
Ba7kRsQ9+9+2Y+7omb2rudfR66cJK1CC/q+G3ubb4+p0HC7CoNAqTOr8MnUd
d1sAEoIJgIuBhgKgqLAYdkI/YKzYPxKyM3OxEAW8Wy4EQVgFYwKgoiADYQ7J
pi6lxTHiAhLz1S3ZrWZdXuz4yl8R89FlfcnlyrXPIAqw/6AZpAOBlAGII3nJ
f0W90I06Y3jvAKgvLFef+VV3n2HLy3/Vubhad5ceARQxFx9F7NS9PxC4AKGK
36v60jokyPwS7h0AZOKavW8+MR1h/wimK59mJbqQnRVXoX9koBMAboP/StUR
lDkX/XFSc2wc9AAUhfrSWpYs65q4DlLdcNEJAPaQJSO60qHjX93aN6soykGo
1UkO5ka9PhG3X7gcwhKezbpZcDawRwB8AXBpje4DqCa9AKjc3k13DyF0k+6h
hoEAcPsEQuKvhb68RSexSot1PncdqHtOVJQtve6WfwnQGHCSQQn/PT1Q/uR3
/RAfhRewsBMD0MpYHfQm+r0YUVQqFaK8QWF5Vd9GlPmmvcG3GsvLyo3WrFCx
pyc1gN+t/IkTBFF7GBUAuofpIyo3PKd7VZ4JAPZ4PXC+7inwie/UvjP5EVMf
f59TPbyAMK0+O0/3PQLJQCBhgOqPE7oUPjcJ8RSxSXPwwwqBANAP97wqxgfV
NE59VHePVuiTU10EzLyvvrIDB+rwbU/0mxaly1jT7lZkP6zc8T8V+akSAkCk
f+MCAAMh/MFLyJord76uMzJ0k+6pASocHqq7D5B6W9cEuXnS9co1raFwjAqA
kgKdermwAgaoIveprjtL2S9YDsMSns26ZdXboHp8BQNJCQCIkOWNK3Ie6W4I
rP7HXwJg/bPseYrubob7ZxUl+Vhi9ZlfYKfu6Qm8UVpSuf6fqrhzVa67hb8G
SBAEQYgiJgCuafQCAOFPFz6KcioKM3X3lkFihMZlQOWKpkgP2a1mjVNv9pKe
rv5Nt8ptr1au/b8a98+RjdZYAOi6PTqmclUL9qYZ679yWUN2Px/Bkd2vVt1y
R6KqC/QIQCUFuo/Ct/0VTDOidYIBsfJJ1OeX6l6iW/9P9rqa5sAHqtizuq7i
L7JHAE9Mx6D/4jzdc/C/BEB79pID4r4q+rQuFh8br3tzEs1jfHVt7/tDw2As
na7IfawbOmghBBIKoQ0q2P0Bt8F6U2Mqt7z0V7crn6r4sxABWvfsY/U/Knf2
QAiWsF+4HIYlPJt1kdp/Flyqs8r5bWgVZO46yaETAHPUl9bq6uSn6gK97nXB
n3T+Zy8c6t+4UPtM18kGqKO8FM3RsZVrn8FcIGN0H11cBbGk69Z7tPCbGqLr
bskfAiIIgiBEMfo1fAn+LDL6EWK0PhYLqfbvAPxZiHhUtTH6B9zVoLREKE7M
07/QLQbfsMO4ZaVye/v7BxAE9gjsF44rsUD4SObPLulfk3hyaJ4rDMzDvIwM
amzdZUICgCAIopaw5C8BGhMA9EuASkVi3WVCAoAgCKKWwP5cXFzNJLr6lJSU
pKenGxMAFjCAsAoS6y4TEgAEQRC1BDbM2v7XANm/CFNYWCj6zd/aNoCwClWu
u0xIABAEQdQe2KiRppnv34EXoaioSOKLPxYwgLAK0usuBxIABEEQtQpyNLVa
raod0HOVOWCtGkBYBTnrXiUkAAiCIAiiHkICgCAIgiDqISQACIIgCKIeQgKA
IAiCIOohJAAIgiAIoh5CAoAgCIIg6iEkAAiCIAiiHkICgCAIgiDqISQACIIg
CKIeQgKAIAiCIOohJAAIgiAIoh5CAoAgCIIg6iEkAAiCIAiiHmJDAqBBA0s0
Ya1q1tAsmGt0fj/s2KBndmyumUr0JjGE8KNqTb/2lslYz0LzqjRYtL6wUCu2
ZJZBYiyDC8bCfxei123N+hHtWfojCZOkP+Uvovy20lYRhDUgAWBpSACQAJDT
rRkhASD6kYRJ0p+SACCUAgkAM3JfBmx0OTXl98PfSPkVuP+bZThjvUkMIfyo
WtM3l/HyexaaV6XBovWFhffFlqwGltcAibEMLhiLmcQf0fRxJS6z6l6Bcj7l
L6J0W6M7DwkAwja4TwLAfEjuUrJ2GPmQADAFEgB8wyxvEn9EEgAEYS3ukwAw
H5K7lKwdRj4kAEyBBADfMMubxB+RBABBWIv7JADMh+QuJWuHkQ8JAFMgAcA3
zPIm8UckAUAQ1uI+CQDzIblLydph5EMCwBRIAPANs7xJ/BFJABCEtbhPAsB8
SO5SsnYY+ZAAMAUSAHzDLG8Sf0QSAARhLe6TADAfkruUrB1GPiQATIEEAN8w
y5vEH5EEAEFYi/skAMyH5C4la4eRDwkAUyABwDfM8ibxRyQBQBDW4j4JAPMh
uUvJ2mHkQwLAFEgA8A2zvEn8EUkAEIS1uE8CwHxI7lKydhj5kAAwBRIAfMMs
bxJ/RBIABGEt7pMAMB+Su5SsHUY+JABMgQQA3zDLm8QfkQQAQViL+yQAzIfk
LiVrh5EPCQBTIAHAN8zyJvFHJAFAENbiPgkA8yG5S8naYeRDAsAUSADwDbO8
SfwRSQAQhLW4TwLAfEjuUrJ2GPmQADAFEgB8wyxvEn9EEgAEYS3ukwAwH5K7
lKwdRj4kAEyBBADfMMubxB+RBABBWIv7JAAsjLlG5/fD20ifqKA131Yj0ZvE
EMKPqjX92lsmYz0LzavSYNH6wkKt2JJZBomxDC4YC/9diF63NetHtGfpjyRM
kv6Uv4jy20pbRRDWgASApSEBQAJATrdmhASA6EcSJkl/SgKAUAokACwNCQAS
AHK6NSMkAEQ/kjBJ+lMSAIRSsCEBQBAEQRCEpSABQBAEQRD1EBIABEEQBFEP
IQFAEARBEPUQEgAEQRAEUQ8hAWBGoqKirG2ChagnM60n09TWm5nWk2kShExI
AJiR+rO91JOZ1pNpauvNTOvJNAlCJhYWAFGKxs/Pz9omWIh6MtN6Ms2oejPT
OjFNM27vBCEN3QEgCIIgiHoICQCCIAiCqIeQAKgZGo1GpVIZFKrVaviHO0WF
0tJSy9plfsrKyoSFRUVFEqd1lMrKyvLycn6JIhdUq59Ibm4uv0R5C4rVFF66
Sl1QgqgZJABqADzg5eXl6+sbFhbGFRYWFu7Zsyc8PJw73b59++3bt61koxnA
Furp6blhw4Zdu3YVFBRw5ZGRkWvWrOFOL1++7OjoaA0Dzcz58+cDAwO5U+Ut
KIDCCQgIwKWbnp7OFSpvQePj4318fC5cuID/c4WKXFCCMAUSADXAwcEhJydH
o9Fs3LiRn0GcOXOG217AsWPH6vT28scffyQnJ0MGHDx48NKlS1w5ggg/XsAV
dT1egKSkpG3btvEFgFZxCwqOHDmCSRkUKm9Boc+joqJw6W7atAl/p1y58haU
IEyBBEB1KSkpWbFiBTt2dnaOi4vjPmLby7Vr1w4dOpSYmIjtBRkHRAIO1Gq1
leytOdzOCfvv3bvHlbN4gcvGycnp4sWLmZmZq1evPnDgAHQR3xt1CMzo5MmT
V65cERUAillQyLlly5Z5e3sHBATk5+dz5cpb0Bs3bqxbt+7EiROXL1/mlyts
QQnCREgAVJeUlJT169ezYzc3t6tXr3IfYXvBToJQApdq9XEzLCyssLBwy5Yt
Dx8+tI65JoPosHPnTjYjrmTVqlX+/v5sUkgY4RBUCAkJ2bdvn/UsrTlYuNzc
3IiICKEAUNKCwvhdu3Yh9AcFBXl4eHDlyltQGL9169bly5fzhatWcQtKECZC
AqC6qFQq5EfsePfu3bGxsdxH2F6QYZ06dYqdYnu5e/cuDoSZSB3C19c3LS2N
X4J4gWkiw8rOztbq48X27dtxgMjCv5NcV8jIyHB0dERQcHZ2htRhS8ZQ2ILC
eE9PTxxg4bhrWKu4BQVnz569detWVFTUypUr+a8CKmxBCcJESADUgAMHDrCt
cvPmzcXFxVw5tpcLFy44ODiwB4vc9uLu7o5N1VrWmkJ4eDi7CRwdHc3dI2V3
jPER0kkcc/EiOTkZU7amuTUCASJeD1Jgb29v/kopbEEx023btuEgPT3d1dWV
K1fYgmr1t+awoFq9ROe/7qiwBSUIEyEBUAMePHiAHQNZxrVr17jCgoKCPXv2
HDp0KCwszN7eHh9dunQJ2yxSy4CAACtaW2MQ9JEuYS4rVqzAjsqVX79+HeWx
sbGbNm3av39/Wloawgq8gcnyN9s6B5aM/whAeQsKgoODfXx8kAI/fvyYK1Te
gj58+NDDwwPrdfr0aa5QkQtKEKZAAqBmiP4OgBBkzXKqKQDRnwtQHgpYUPy9
V1ZWVlmtri8o5sh/ccUYClhQgqgxJAAIgiAIoh5CAoAgCIIg6iEkAAiCIAii
HkICgCAIgiDqISQACIIgCKIeQgKAIAiCIOohpguAQoIgCIIgbB6zCwCCIAiC
IOocJAAIgiAIoh5CAoAgCIIg6iEkAAiCIAiiHmJhAfAHQRB1EDPuOQRB2AiW
FwBmNL5OQ66QhvxjO9BaEIQiIQFgLcgV0pB/bAdaC4JQJCQArAW5Qhryj+1A
a0EQioQEgLUgV0hD/rEdaC0IQpGQALAW5AppyD+2A60FQSgSEgDWglwhDfnH
dqC1IAhFolQBkJ6eXqGnuLjYMiNWl7q4qZaUlCQnJwvLU1NTi4qKzDuWZfyj
0Wji4uJSUlIsMFaVVFZWxsfHwyRrG2JIXbxWCYKoEuUJgOvXr9vZ2a1bt26K
noCAgKysrDVr1nz++eerV6/mqp06deqbb76ZOHGin58fyvHpuHHjfvnlFzSx
t7fHPlzbdtbFTdXFxWXMmDHC8u+//37Xrl3mHcsC/sGVv3DhQm9v7y+++CIs
LKy2h6uShw8f4jqMioqytiGG1MVrlSCIKlGeAJg9eza2dK0+uXNwcPDw8NDq
c6vRo0djd0Xc52o6OzufOXNGq09s8ZGTkxOOCwoKZs6cCW1g9pTWgLq4qebm
5kZHR7Pj0tJSf39/dhwbG5udnW3esSzgn6CgoGXLluHg7t27WPfaHq5K1Go1
5KtKpbK2IYbUxWuVIIgqUZgAQNRGKN+5cyc7RcDiMtPp06f/8MMPX375JaIV
K4FOuHz5MjtGqz179rDjo0eP4hRbca2aKtMVCApV1oG80eoFj/zRWRM5scag
DmuI/2/cuHH79u0G5WY00gJB5+DBgytXruROmW3SFnKfVvdGPec3oaMMSqQ9
aRV5QAKAIBSJwgQA+PXXXxG+9+7di3lp9YkqK587d258fPzw4cMnT57MsnsE
+vDwcPYpXwAgLuCUS3VriSpdAaGyYcOGpUuX/vzzzwi158+fRyH+P2fOHEzB
w8MDMcjHx+enn346dOgQZoepcfc3DKrxuz1+/PjMmTN37949bdq0L774YseO
HawcgmfBggUYbvbs2Xfu3NHqI9F2PRBOSPYzMzP37ds3adIk1j+Gmzhx4urV
q2/fvr1mzZqtW7ca68eYkSb6x0RcXV0xl3Hjxq1bt+706dNwNQ5WrFjxzTff
4CIXOjA/Px+TdXR0hN8WLlwYHBx87dq1CRMmuLi4oD7kEBqyayY5ORke+O67
7zZt2pSeno6LDSp07NixZ86c+fbbb9Hk8ePHWr2EgE9Qc968eVgOKD04Ck6L
iIjQ6h9PwPMYC07DQFrBctSqcwwgAUAQikR5AgBRHoEJERyb56NHj7hybKT4
/9mzZ/GRvb29ViAAsLVmZGSw0MZ/W6CWqNIVs2bNgnnY9qdPn46Ik5aWhviC
YFFSUgJtAINv3bqFwiFDhqAQBwjBiDJoKKzG75YVwgOJiYmYMo4TEhLgKMwa
naDC4cOHhw0bhuObN2/a2dlp9S719vZGIEPA+vLLL1k/EFrs7kp2djYkCoId
jkX7ETXSdP+YjoODAyI+DqBtpk6dOnTo0EuXLu3fv//u3btCB2K+J06c0Opv
K6EQAkCrv6iYExDo2eN7ZOjswsNfCoQW9BVW8Pfff8enXl5e8ACEAcI9mqBw
1apVkAFwL2t77949HDABAAULn6Mt5Cg8BnlgsBy17Rw+JAAIQpEoTwBo9Q8C
EI+wl44cOZJL5JkA0Oq3fXyE7ddAAEA2rFy50tPTE03k3Hg3EWlXFBQUwCTE
Ixzv3Llz8eLFOMCkIAY26kHqitCAwq+++srX1xcHYWFhaALLRatxYLlRjT37
KC0t/eKLLxBNnJyckKSzCghSqIBYHxcXx+6loBpCpFaf+PMFAAtkAHKCCQDR
fkSNNNE/ZoETAADpP5OFWjE/x8TEwOykpCRWAXqGCYD58+czAZCTk8OCOML3
119/zdpCAKAfrf6uCD5lrxlgIPbcYfz48awTrf7PEMqBLc2VK1egCqCjli9f
jk6w9KgJbwiXw2KQACAIRaIwAVBYWMg9QvX398eGyd7y0vIEQFlZGbZlBD7s
w6KPACxDla5ATgoLsTpLly4NDAzU6qcgTP242IrQg1kgjohW4+ALAK3+nckt
W7Yg9nGBGyDl3Lx5Mw7c3NyYNGKxz0AAsNcmtTwBYKwfoZGm+8d0+AKAPQJg
x0IHBgUFwWzucZKEADhx4sTPP/9sMBBfAMBRWFb23ilL9jnY0qAwOzsbB6mp
qQb9GCyHxSABQBCKRGEC4OTJk/zvcyEYcTec58yZw5Vj/xwxYgT2UlsWAMj4
JkyYgOiMGbGUefv27YsWLeIqsCAujK2i1Tj4AgBiadSoUQh2O3fuHDp0KBfg
MK6rqyu8hOW+desWTletWqWVIQBE+xE10nT/mI4xASB0IIzhf0GPLwDYG6ec
AIC74KLc3FxWMz4+Pi0tTSgAsKD8FzAgSmNiYjgBoNFovvnmG+5BP8qvXbsm
XA6LQQKAIBSJwgQANs/vv/+ebb/YY7FVsh0ex2PGjOHfecYGzgkA9t0Blqta
jCpdwd4HQ9TgzGbRE1Hj0aNHp06dQuBGpEC4OX36ND69dOkSPkUoEVbjd8ui
DAsu9+7dQ3Pkm3fv3uVUQVZWFgIcItcFPVr9ffvJkydr9TdV8BEL34sXL0bc
h+vy8vIWLlzI3poQ7UfUSNP9YzqwGRGcHa9Zs4YTA0IHYglGjx6NaWZkZLAn
9UwAIJpjmeAEdrspJCQEzvn666+hNm/pwRCYPi4zfApHsUGXL1+Og2XLlg0f
PjwoKAiyAQGdvS6IahcvXmQ9QwP4+PgkJCRs3Ljx8ePHwuWwGCQACEKRKEwA
YMeeOHHi9OnTHR0df/nlF6R1mXqWLFmCrRWZF9uEGdjhsTPn5+ejHJ9ih/fy
8qpV8/hIuwIRB0rm87+ZNm1aSkoKVgqRgr3bsHv3bpweO3YMp3Z2dg8ePPjt
t9/YM3dhNX7PTABMnToVzhk7dix3f+DEiRPQS56enhiLyQOEGzgT4Q81Q0ND
4+LiENfYY+jKykpELoR1xEQEKYQ86CumpoT9iBppon9MJzAwcNSoUV999RVM
ReBGtMUxM1jUgb///jv0DKbMXi9hAuDOnTuog+kfPnwY/4eGxB9IQEAAqqHy
0qVLcUEWFxcvWrSI/dAEYj0GwrhoiMsS4oGNgpiOhtu2bcPpvHnzsNaJiYmT
Jk1iK8W+AGKwHLXqHANIABCEIlGYAEDcZF/xw+4KU6UrY+LczWrLI+2K5ORk
5NfIN5FBI612c3M7cuQI+wiKRU4Gbawa9wggJyfH4GU81EfA4lrhUwT63Nxc
Y99MN/ZbSQb91AyrBx2hAxHKccHALZwAAOV62AFXE8fcU4AqRzH2SiTczn/Z
r8rlqD2svhYEQdQGChMAdQhpVzg4OCBlLikp0erFzI4dOyADzDIuQhj3/QJb
xmYvFfwJwIHsbnw9wWbXgiAIUyABYC2kXZGUlLRw4cJhw4ZNmzZty5Yt5or+
SB6dnJzYfeaYmBiz9FlL2OalUlBQwH48AavDf5ykbGxzLQiCMBESANZCjitq
4+cIuHW0wd+c52Obl4pGo+EcaIP/bF8tYZtrQRCEiZAAsBbkCmnIP7YDrQVB
KBISANaCXCEN+cd2oLUgCEVCAsBakCukIf/YDrQWBKFISABYC3KFNOQf24HW
giAUCQkAa0GukIb8YzvQWhCEIiEBYC3IFdKQf2wHWguCUCQkAKwFuUIa8o/t
QGtBEIqEBIC1IFdIQ/6xHWgtCEKRWF4AEARR5zDjnkMQhI1AdwCsBblCGvKP
7UBrQRCKhASAtSBXSEP+sR1oLQhCkZAAsBbkCmnIP7YDrQVBKBISANaCXCEN
+cd2oLUgCEVCAsBakCukIf/YDrQWBKFI6q4AUKvVZWVlcmqmp6fLLAS5ubnC
blUq1b179/hNjDUHaWlp+fn5VVol0xXGplkbJvEpLi4uLS3F6FjxajU0F/Iv
FZianJzM/nHe7Ozsao1SXl6empoqLJdwps1SWVmZmZlZGz2TACAIRVIXBQA2
Og8Pj86dO587d46VREVFNXySU6dOoXz//v0TJkyYN2/ehx9+6OfnxyqLFjIQ
/du1axcUFMSVFBUVzZ07t3///kePHkWgMdYc0eeVV15hQ7dt2xah03RXCKdZ
2yahibu7u5Oeffv2IThGR0d7e3tX2bA2kHOpHDlypEuXLv369cP0X3/99V69
eg0cOFD+EGvXru3Zs+f8+fO7det269YtVihxedQMiKgq6/To0aNx48avvfZa
+/btGzRogBmxtQsICJA5ioODA9qiCcy+ffu2aSYbQgKAIBRJXRQAYWFhW7du
xT7JRcY5c+bY29sHBweHhIT4+Pg0adKkUE/r1q2R/KKCp6cn9lgciBZyTJo0
Cd1yAgBZM+LvyJEjuT3cWHPojYkTJ57Qc+3aNbO4QjjNWjIpKyvr4sWLOIiL
i0PEidGTlJTEStAcB5GRkY8ePZIzL3NRpX9WrlzZqFEjaCR2qlKpMN+3335b
Zv+hoaHwbUpKCo5Xr17doUMH9CBxecAzy5cvh2dwjL+Cr7/+Wk5kB3v27IGW
k67Tp08fZgmuZFjFCmfMmMGcXyXh4eHvvPMOrlvoN9g/evRo083mQwKAIBSJ
zQoAZKPctqnRw/80NTWVHxmxmXMfISIMGjQIB3fv3kWdwMBAHLu5uXXv3t1Y
IQOb7bJly/gCALtlu3btCgoKuDrGmg8YMADbNeSHbE/IcoXBNGvDJIQ8RI3c
3FwcHz9+/MKFCywSMTIyMljPZWVlcCyLjJZB2j8PHjxo1qzZuHHj+IV5eXkf
ffSRsLJo/J07d+6LL77IjqF/4MOTJ08ac+aaNWvQM0QRAjROV61atX79epkT
cXJyqlIA7Nu3jx3wBQCMuXLlipy5LFmyhHtmARXUqlUr083mQwKAIBSJDQoA
Z2fnN998E3tax44dx4wZ4+LiMnny5L59+w4bNoyrI4yMHMiOd+zYwY67dOny
wgsv+Pr69urVC9FNojA7OxuyAa7gBABMxfHQoUPt9Tx+/NhYcxjTokWLBnpg
pMyn7TUQALVhEot6Wv29Bae/8ff3Z48MSkpKwsLCOGNcXV1rkD/WDGn/4PLA
1IR3yNkzEQO8vLwuXbpkUIhA2aZNG3YMQYXeEC61Ys6ECmratCm7i7Jw4UKc
9ujRQ+b7J1p5AoCDLwBEEZ0LH4T4wYMHm242HxIABKFIbFAAnD59GnsgNMCB
AwcgBtq2bZuYmKhSqcaPH8/VMSYAysvLW7dujfrsNCoq6plnnkHNxYsXc3VE
C5FL3rx5EwecANi2bRuO33777V27dr3++uvPPvss2zxFm8O8iIiIIUOGoHzK
lCnmcoXBNM1uEtyF8ITEmTuF6yAJUMgGReTi7jZoNBosh8XejpP2z4gRIzCv
6OhoruTQoUOb9HDyjwNz4R7xc3h4eKCHBw8eaPX3xnG8YcMGrZgzw8PDcRHC
FQkJCeh86tSp3HMHOZhXAIjOhc+nn36KPxytyWbzIQFAEIrEBgUAtqxGjRq5
ubmx006dOr311lsxMTFcwqs1LgCQEiJx4059fHx69+7dvXv3Jk2acLufsNDb
25vb7TkBgA3z6aefZls3poxyKBNjfXKWI69s2bKlnA2/BgLA7CYlJSUhphs8
XsHpmTNn9u7da1AOjh49avYXzIwh7Z8vvvgC03/48CFXkpmZ+e9//xuFV69e
ldN/YWHh888/37dvXwcHB6hNNPT399eKORO66KWXXlq3bt23337Lnraj7YoV
K+zs7PjXpDHMKwCkCQkJ6devH/6iTTebDwkAglAkNigAAPZe7uXz8+fPI9Vt
2rQpQhVXwZgAQIhcunQpO8YGiFTuzp07xcXFH3/8cZs2bdRqtWhh+/btx44d
O0kPuh00aND27dvRT+vWrbmen3vuuZkzZ4o25xvAniZjpzWLKwymaXaTkO16
eXkJyxEgELZKSkoMys+ePVut9xxMQc4jANjDL5w+fXrz5s3lD5GSkrJt2zas
9aJFi1q0aJGdnW3MmSqVKjo6GnH8s88+Cw4OhmxwdHREHe5ik8BiAiArKwtR
nv+ehilm8yEBQBCKxMYFAJLQyMhIbNSDBw9u1apVTk4OqyAqALDRtWvXDvXZ
KRL5Zs2asTQWWzrqR0REiBba29vP+xuUjBw50tXVFQbgOC4ujvXWoUMHbJui
zfk2IHeGnDCXKwymaXaTEhMT3d3dheXIrA8ePCgs9/Pzk77/bEak/YM0v3Hj
xlgpfuFPP/2EOF7dgfLy8uDJZcuWaY1cM1xNLMRXX33l4eEBRYo6ubm5Gzdu
rLJ/ywgA/BUPGzbs3r177JR7ClZjs/mQACAIRWKDAgA5F/Z2FxcXrX5bGzp0
qFafyzz11FPc19kQoYQJIPZqfqTLz89v2bJleHg4jmNiYpDNIfcRLeR3gqHZ
IwCM2Llz561bt+I4OTkZ5TBetDlOT548yb6qMHr06J07d5rLFQbTNLtJyPGd
nZ1ZkpuUlITmOMYoxgI9FAj7eqAFqNI/CxcubNiw4e7du7mSKVOmiAoAeMNY
b2VlZcOHDx8wYAC7DCQuD3jyzTffhPratGkTmqBkx44dsbGxVU6kWgJg3Lhx
WHFO6MqfC1b5119/9dWzZcsWLsevsdl8SAAQhCKxNQGArXLatGnYA3v16nXl
yhXY1rx5c5TMnz9/6tSprA5SMyQ7qDNw4ED+HekFCxb8+OOP/N727t377rvv
zp49e9SoUZ6enhKFHE2aNOEybuyT2DynT5/eqVMn7otawuabN2+GMV27du3X
rx/2Xpm7fZWuEJ2m2U1yc3Nj3/uLjIxEqMKpl5fXzZs3hU2w9BjoT0v9MKCc
S+XgwYNI3nv37v3dd98NHjy4R48e27dvF9Y8dOiQ8PsCRUVF7u7uaGvgH2OX
BzzDvkwHYYCLc+7cuWvXrpUzEfkCYNWqVZAcWLghQ4Zwubycuaxfv77Bk3B/
pDU2mw8JAIJQJLYmAIQgIc3LyxM+jxaSlZUl+qS7Wj8FLCQ1NZW9VSXRPC0t
DSm5zA4ZpmyqZjQpPj7+2LFjcLJWf0MAYVG0GkJYYGAg93jFAsj3T3Z2NiqX
l5cbq4DZCV9ohLtCQ0ONfS1O+vKQ/zPU2mreAagS0bnIpFpm8yEBQBCKxPYF
gFKxHVdER0cHBwdL17lx40ZERIQZA1mV2I5/TMS8AsAqKGYtCILgQwLAWtiU
K6q8sW+xO/8cNuUfU5Bz88rGUcxaEATBhwSAtSBXSEP+sR1oLQhCkZAAsBbk
CmnIP7YDrQVBKBISANaCXCEN+cd2oLUgCEVCAsBakCukIf/YDrQWBKFISABY
C3KFNOQf24HWgiAUCQkAa0GukIb8YzvQWhCEIiEBYC3IFdKQf2wHWguCUCQk
AKwFuUIa8o/tQGtBEIqEBIC1IFdIQ/6xHWgtCEKRWF4AEARR5zDjnkMQhI1A
dwCsBblCGvKP7UBrQRCKhASAtSBXSEP+sR1oLQhCkZAAsBbkCmnIP7YDrQVB
KBISANaCXCEN+cd2oLUgCEVCAsBakCukIf/YDrQWBKFI6q4AUKvVZWVlcmqm
p6fLKaysrMzNzZXZXIix5saQ6Qpj01SpVPfu3eNsw+iZmZnym1dJcXFxaWkp
mmPFa9DcdORfKjA1OTlZo9HgODs7W/4Q5eXlqampwnKZK25TGLsAzAIJAIJQ
JHVRAGCv8/Dw6Ny587lz51hJVFRUwyc5deoUyvfv3z9hwoR58+Z9+OGHfn5+
rLJoobOz8wcffDBjxoz333+f2/+FNY0NJNrcRFcIp8koKiqaO3du//79jx49
itiHEgcHh/bt28MY2Hn79m3p5hIghrq7uzvp2bdvH+JjdHS0t7e3zObmRc6l
4uXl9eqrr7733ntjx47t2rVrz549R40aJbP/tWvXov78+fO7det269YtVih6
bZgCFFSVdXr06NG4cePXXnsNi9igQYN+/fq98sorWM2AgACZo4heAGaEBABB
KJK6KADCwsK2bt2KrZILbXPmzLG3tw8ODg4JCfHx8WnSpEmhntatW6elpaGC
p6cntlkciBZev369WbNmbF52dnaIrcZqig4k2tx0VwinCfLz8xHTR44cyUWW
8PDwd955JygoCLEbBo8ePVqiuShZWVkXL17EQVxcHIJOjJ6kpCRWcuLECRxE
RkY+evRIzrzMRZX+WbFiBeLm4cOH2WlpaenQoUM///xzOZ2HhobCMykpKThe
vXp1hw4dVCqV6Ioz4Jbly5fDLTjGn8DXX38tJ7KDPXv2QIlJ1+nTpw+zBFcX
rGKFEJPM81Vi7AIwxWwDSAAQhCKxWQGAbJTbOTV6+J+mpqbyQxv2c+4jpL2D
Bg3Cwd27d1EnMDAQx25ubt27dzdWuGzZsjfeeIM1v3r1KjKpgoIC0ZqiA4k2
N4srDKYJsIe3a9eO3/+SJUu4ew4TJ05s1aqVRHMhiHoIHOzhxfHjxy9cuMCC
ESMjI4N5oKysDPNlwdEySPsnNjYWoosf7ABEyyeffGJQUzT+zp0798UXX2TH
ED/w0smTJ0VXHKxZs+ajjz5C5wjQOF21atX69etlzsLJyalKAbBv3z52wBcA
MObKlSty5mLsAjDFbANIABCEIrFBAeDs7Pzmm29iW+vYseOYMWNcXFwmT57c
t2/fYcOGcXUkQhuy4x07drDjLl26vPDCC76+vr169UJ0M1Y4ZMgQLnNMTk7m
ehZtLhzIWHPTXWEwTTTBKfJcez2PHz82qI8dfvDgwcaai8ICn1Z/b8Hpb/z9
/ZFQo7CkpCQsLIzrzdXVtWYpZA2Q9g/Sf0zt7NmzVbby8vK6dOmSQSECZZs2
bdgx1BS6QrjUiq04JFDTpk2vXbuG44ULF+K0R48e8l+rkCMAOPgCQBTRufDh
LgATzTaABABBKBIbFACnT5/GNggNcODAAYiBtm3bJiYmqlSq8ePHc3WMhbby
8vLWrVujPjuNiop65plnUHPx4sVcHWHhv/71r0mTJrFjbJJcOBBtLhzIWHPT
XWEwzW3btuH07bff3rVr1+uvv/7ss88abOmffvopnGasuRDMAhEqLy+PO8WM
IAlQyFoheHF3GzQaDZbDYi/ISftn1KhRmNqDBw+q7AcT4R7xc3h4eHDNcUnj
eMOGDVqxFQ8PD8cVCD8kJCRA702dOhVt5c/CvAJAdC58uAvARLMNIAFAEIrE
BgUAdq1GjRq5ubmx006dOr311lsxMTH8hNdYaAsICEDuxp36+Pj07t27e/fu
TZo04TZAYeFzzz33/fffc6M3bNhw3bp1xpoLBzLW3HRXGEwT2/jTTz/NAgpW
AR9BLHGVQ0JC+vXrh9U01lxIUlISYrrB4xWcnjlzZu/evQbl4OjRo7Xxjpko
0v4ZNmwYplbj1xIKCwuff/75vn37Ojg4QGqiK39/f63YikMUvfTSS1jQb7/9
lj1tR9sVK1bY2dkJ78AIMa8AkIZ/AZhotgEkAAhCkdigAADYfrmXz8+fP49U
t2nTpghVXAVjoQ0hcunSpewYeyCyuTt37hQXF3/88cdt2rRRq9WihW+88caX
X37JWhUVFaHnEydOiNYUHUi0uVlcYTBNjNi6dWvuUwiPmTNnsuOsrCxs8gbP
6KsUAEh4vby8hOWIEYhcJSUlBuVnz55FlKnSbLMg7Z/58+djakFBQTXuPyUl
Zdu2bdu3b1+0aFGLFi2ys7ONrbhKpYqOjkYc/+yzz4KDgyEbHB0dUYe7ACSw
mAAQXgCmmG0ACQCCUCQ2LgCQhEZGRmKvHjx4cKtWrXJyclgF0dCGva5du3ao
z04RHZo1a8bSWOzqqB8RESFa+MMPPyANZK0QE9nNYdGaogOJNjeLKwymCZ/g
NC4ujp126NCBbeZYQWTE9+7dY+XcE5AqBQBquru7C8sfPnx48OBBYbmfn5/0
LWgzIu2fK1euNGzYcOTIkQbl/BsgcsjLy4Mbly1bpjVywXA14cavvvrKw8MD
chR1cnNzN27cWGX/lhEAxi6AGpttAAkAglAkNigAkHY1btzYxcVFq9/Zhg4d
qtWnM0899RR7qUmrj1DCd8CwXbdv3547zc/Pb9myZXh4OI5jYmKQ0CH9ES28
ffs2RmTz2rx5MwsrojVFBxJtbhZXGEwTTujcufPWrVu1+rcNMSjrZPTo0b/+
+quvni1btnApnqiX+CDHd3Z2ZnluUlISpoljjGIs0EOBsK8HWoAq/TN58mRo
gN27d3MlMHvMmDEG1bCCxroqKysbPnz4gAED2MpKrDhCJzQepNemTZvQBCU7
duyIjY2tchbVEgDjxo3DenEqV4ixuRi7AGpstgEkAAhCkdiaAMBuOW3aNGyD
vXr1QpYH25o3b46S+fPnT506ldVBdsYeAQ8cOJB/R3rBggU//vgjv7e9e/e+
++67s2fPHjVqlKenp0ThgQMH+vTpY2dnN2LECO57cKI1RQcSbW6iK0Snid0b
W/r06dM7derEvj62fv36Bk/CFsiYlwxwc3NjBkdGRiJa4dTLy+vmzZvCsIWl
h0P+tNQPA8q5VNatW9eqVauePXsiyf3ggw8QBIXmHTp0SPiLOkVFRe7u7r17
90a45M/U2IrDLezLdBAGuDLnzp27du1aObOQLwBWrVoFyYH1GjJkCJfLy5mL
sQvAFLMNIAFAEIrE1gSAECSkeXl5wufRQrKysgoLC4XlMn8KGMkv9z68dE3R
gYw1N4Ypm2pqamp173UbIz4+/tixY3CyVn9DAJFRtBqiWGBgIPfUwwLI9A97
0Z17LCIEUxO+zYg1DQ0NNfa1OOlvOlTr15WrdQegSkTnIpMa/yi0lgQAQSgU
2xcASsV2XBEdHR0cHCxd58aNGxEREWaMZVViO/4xBfMKAGuhjLUgCMIAEgDW
wqZcUeWNfYvd+eewKf/UGDl3rmwfZawFQRAGkACwFuQKacg/tgOtBUEoEhIA
1oJcIQ35x3agtSAIRUICwFqQK6Qh/9gOtBYEoUhIAFgLcoU05B/bgdaCIBQJ
CQBrQa6QhvxjO9BaEIQiIQFgLcgV0pB/bAdaC4JQJCQArAW5Qhryj+1Aa0EQ
ioQEgLUgV0hD/rEdaC0IQpGQALAW5AppyD+2A60FQSgSywsAgiDqHGbccwiC
sBHoDoC1IFdIQ/6xHWgtCEKRkACwFuQKacg/tgOtBUEoEhIA1oJcIQ35x3ag
tSAIRUICwFqQK6Qh/9gOtBYEoUhIAFgLcoU05B/bgdaCIBRJ3RUAarW6rKxM
Ts309HSZhcb6zM3NFS1PS0vLz8+vgUla2a4Q9omShIQEg2qVlZUw0qCwvLw8
NTVVpj0GFBcXl5aWYiyseM16MBH5lwpMTU5O1mg0OM7Ozq7WKMZcJHp5WAb2
V1aztrgMMjMzzWuPlgQAQSiUuigAsMt5eHh07tz53LlzrCQqKqrhk5w6dQrl
+/fvnzBhwrx58z788EM/Pz9WWbRQ2CcHAmu7du2CgoLYKQLNK6+8wkZp27Yt
oqR0c2NU6QrRPp2dnTt16tS4ceNu3bpxMgCFH3zwwYwZM95//30ucq1du7Zn
z57z589HzVu3bskxCVNzd3d30rNv3z4Ex+joaG9vb5kzMi9yLpUjR4506dKl
X79+WNDXX3+9V69eAwcOlD+EqItELw9TgIiqVv2VemowkIODQ/v27XFZwvLb
t2/XoAdjkAAgCEVSFwVAWFjY1q1bGzRowEXGOXPm2NvbBwcHh4SE+Pj4NGnS
pFBP69atkaSjgqenZ48ePXAgWijaJ8ekSZNQzgkASIuJEyee0HPt2rUqmxuj
SlcI+0SeO2vWrIKCgqSkpJYtWy5YsACF169fb9asGVsUOzu7/v374yA0NBQN
U1JScLx69eoOHTqoVCpjA2VlZV28eBEHcXFxAQEBMXowBCvBNHEQGRn56NEj
mVMzC1X6B1GyUaNG0EjsFBPEurz99tsy+xd1kbHLA8Azy5cvh2e0+iT966+/
lhnZ9+zZAy0n0yposI4dO8KY6sqG8PDwd955B1cpJBymMHr0aNMt5yABQBCK
xGYFAHZCbtvU6OF/mpqayo+M2My5jxARBg0ahIO7d++iTmBgII7d3Ny6d+9u
rFC0TwbC37Jly/gCYMCAAci1oTQMDBZtLoEcVxj0iXwcWTk7xm7v6OiIA5j3
xhtvsMKrV68iAYRCmDt37osvvsgKEdzRycmTJ0WHQMhDyGCPD44fP37hwgUW
ExkZGRnMV2VlZXAsi4yWQdo/Dx48gOwZN24cvzAvL++jjz4SVhaNv6IuMnZ5
rFmzBj1DFEFq4nTVqlXr16+XOREnJyf5AsDPz69nz56wAWthrI5ob0uWLOFu
/kAItWrVynTLOUgAEIQisUEB4Ozs/Oabb2JDQyo0ZswYFxeXyZMn9+3bd9iw
YVwdiWg7cuTIHTt2sOMuXbq88MILvr6+vXr14nZU0ULRPrOzs6El4B9OAKBO
ixYtGuiBPfwXACwgADiuXLmCMMFGHzJkyOeff87Kk5OTWX2EgDZt2rBC6AEU
IhCIDsGiHg7Qm9Pf+Pv7s0cbJSUlYWFhnDGurq7VTR5rjLR/cHlgUshtDcqL
i4uFlb28vC5dumRQaMxFwssDKqhp06bsbs/ChQtx2qNHD/kve1RLAHzxxReY
+L/+9a+PP/7YWB3R6fBBiB88eLDplnOQACAIRWKDAuD06dPYjaEBDhw4ADHQ
tm3bxMRElUo1fvx4ro6xyIgEuXXr1qjPTqOiop555hnUXLx4MVdHtFC0TySY
N2/exAH/DgAsiYiIQNhF4ZQpU6o0yRRXiPY5c+bMxo0bQ4cgSOEUwWLSpEns
I+ztLJAhW8cB0mSt/q4vjjds2CDsH+5CeELizJ3CdZAEKGSDInIhOLJPNRoN
lsNib8dJ+2fEiBGYVHR0NFdy6NChTXo4+ceBuQjfgjDmIuHlER4ejosQrkhI
SEDnU6dO5Z47yEG+AEhJSfnggw9wsHz58oYNG8bGxopWE50On08//RR/O6Zb
zkECgCAUiQ0KAOxXjRo1cnNzY6edOnV66623YmJiHj9+zNUxFm2REiJx4059
fHx69+7dvXv3Jk2acFufaKGwT29vby4E8AUAZyRSyJYtW3J7u8UEACLy+fPn
O3bs+J///Aenzz333Pfff89ZhcCxbt26wsLC559/vm/fvg4ODpBS6ARJvbD/
pKQkxHSDxys4PXPmzN69ew3KwdGjR837dpkE0v5BpoxJPXz4kCvJzMz897//
jcKrV6/K6d+Yi4SXB3TRSy+9BK9+++237FE72q5YscLOzo5/TRpDvgBAnwcP
HtTq1wV/ArNnz5bTyoCQkJB+/frhj9p0yzlIABCEIrFBAQCw93IvnyPYPfvs
s02bNkWo4ioYi7bIcZYuXcqOsfshlbtz505xcfHHH3/cpk0btVotWijaZ/v2
7ceOHTtJD8oHDRq0fft2/ljswTF2VGmTTHGFRJ/I0/ER8vE33njjyy+/ZIVF
RUUoZK/tIZ3ctm0bbF60aFGLFi1Evx+HbNfLy0tYjuiAsFVSUmJQfvbsWeHL
D7WEnEcAsIdfOH369ObNm8sfQugiY5eHSqWKjo5GHP/ss8+Cg4MhGxwdHVGH
u9gkkCkAILe6dOnSp0+ft/Qgc4clf1bz+4BZWVmI8vxXNUyxnIMEAEEoEhsX
ANgVIyMjsVEPHjy4VatWOTk5rIJoZMQu165dO9Rnp8jZmzVrxtJYbOmoHxER
IVoo2qe9vf28v0H5yJEjXV1d+cMhTYZI4E4tLACQiSNmITz98MMPSGBZIQI6
d1ubkZeX16FDh2XLlon2n5iY6O7uLixHZs1SUQP8/PxkfqPQdKT9gzS/cePG
WBR+4U8//QSfVHcgvoskLg+t/t77V1995eHhAUWKOrm5uRs3bqyyf5kC4NSp
U9ydHO3fTyj4ordK8Ic8bNiwe/fusVPuQViNLecgAUAQisQGBQCCGvZ2FxcX
rX5PGzp0qFafyDz11FPc1+4QoYQJIPZqfkTOz89v2bJleHg4jmNiYpDNIfER
LZTokwF72CMANETqzb6VMHr06J07d3J1JJrX2BUGfcbHx+OYRZP58+cjC9bq
lQDMY4uyefNmfkwsKysbPnz4gAEDRF+N0+rf8UOIYUluUlISHIJjuNpYoIcq
Y18PtABV+mfhwoUNGzbcvXs3VzJlyhRRAYBVM9abgYskLg+sOIRWXFzcpk2b
0AQlO3bsMPaYno9MAQAbzp8/zzcMivd//ud/hA9ijE0HF+Svv/7qq2fLli1c
jl9jyzlIABCEIrE1AYCtctq0aYh6vXr1unLlCmxr3rw5ShDvpk6dyuogNUOm
gzoDBw7k35FesGDBjz/+yO9t796977777uzZs0eNGuXp6SlRaKxPRpMmTVga
jgiLOl27du3Xrx/2WG5jl25eM1cI+zx27FijRo1efvnlTz75ZP369dzDiwMH
DvTp08fOzm7EiBHsS3xFRUVI7Xv37s03UhQ3NzfWJDIyEqEKp15eXjdv3hS2
wtLDddW9KV1j5FwqBw8eRPKOaX733XeDBw/u0aOHwWMaxqFDh4TfFzDmItHL
Q6t3FPsmHYQBLs65c+euXbtWzkTkCIAZM2ZgoceOHcue3QNM7R//+AcKv/32
WznTwfXQ4Em4v9MaW85BAoAgFImtCQAhSEjz8vKEz6OFZGVlcU/k+cj/KWA5
pKWlJScn16wtn5ptqghb3Gv5fCAGuJf5tfrZhYaGyvnCV3x8PHQF+5kgOBn9
i1ZDCAsMDOQer1gA+f7Jzs5GZe4XEoRgdsI8WtpF0pdHtX7zuVpfA5SD6HRk
Ui3LOUgAEIQisX0BoFRsxxXR0dHBwcHSdW7cuBEREWHeQCaN7fjHRMwuACyP
YtaCIAg+JACshU25osob+xa7889hU/4xBTk3r2wcxawFQRB8SABYC3KFNOQf
24HWgiAUCQkAa0GukIb8YzvQWhCEIiEBYC3IFdKQf2wHWguCUCQkAKwFuUIa
8o/tQGtBEIqEBIC1IFdIQ/6xHWgtCEKRkACwFuQKacg/tgOtBUEoEhIA1oJc
IQ35x3agtSAIRUICwFqQK6Qh/9gOtBYEoUhIAFgLcoU05B/bgdaCIBSJ5QUA
QRB1DjPuOQRB2Ah0B8BakCukIf/YDrQWBKFISABYC3KFNOQf24HWgiAUCQkA
a0GukIb8YzvQWhCEIiEBYC3IFdKQf2wHWguCUCQkAKwFuUIa8o/tQGtBEIqk
7goAtVpdVlYmp2Z6erqcwsrKytzcXOEoCQkJBoXl5eWpqanGhktLS8vPz6/S
KpmuEE4TdmZmZgprCmckarxMiouLS0tL0QNWvGY9mIj8SwWmJicnazQaHGdn
Z8sfQmIdcSXIvLpsCpVKde/ePdEL3hRIABCEIqmLAgAR0MPDo3PnzufOnWMl
UVFRDZ/k1KlTKN+/f/+ECRPmzZv34Ycf+vn5scqihc7Ozh988MGMGTPef/99
bv9EYadOnRo3btytWzcukq5du7Znz57z589H4a1bt1ghos8rr7zChm7bti1C
p+muEE4TODg4tG/fHqPA+Nu3b0vPSGi8NJiFu7u7k559+/YhPkZHR3t7e8tp
a3bkXCpeXl6vvvrqe++9N3bs2K5du2JdRo0aJbN/0XVkIPq3a9cuKCioJnY/
CRRUlXV69OiBZXrttdewsg0aNOjXrx+7lgICAuQPVFRUNHfu3P79+x89ehSK
yASTRSABQBCKpC4KgLCwsK1bt2Kr5CLjnDlz7O3tg4ODQ0JCfHx8mjRpUqin
devWyMdRwdPTE9ssDkQLr1+/3qxZMzYvOzs77KI4QFI5a9asgoKCpKSkli1b
LliwAIWhoaEYNyUlBcerV6/u0KEDci4cQ29MnDjxhJ5r166ZxRXCaYaHh7/z
zjsITAjTmMXo0aONzUjUeGNkZWVdvHgRB3FxcQg6MXrQkJVgRjiIjIx89OiR
nHmZiyr9s2LFCsTNw4cPs1OIrqFDh37++edyOje2joxJkybhU74AgFuWL18O
t+AYfwJff/21nMgO9uzZAyEnXadPnz7MElzGGJcVQosyz8shPz8fQnHkyJEG
VtXYbANIABCEIrFZAYBslNs5NXr4n6ampvIjI/Zz7iNkzYMGDcLB3bt3UScw
MBDHbm5u3bt3N1a4bNmyN954gzW/evUqki+ETiS/SIFZIcKuo6MjDpBkvfji
i6wQQRNdnTx5EscDBgzAjg35YV5XGExzyZIl3N0J6I1WrVoZm5Go8aJAP0BO
sGcfx48fv3DhAgtGjIyMDNZzWVkZHMtkhmWQ9k9sbCw0G5NAHBAtn3zyiUFN
0fhrbB0Bwi6uB74AWLNmzUcffYTOEaBxumrVqvXr18uchZOTU5UCYN++feyA
LwCwrFeuXJEzF4DI3q5dO1y0/EJTzDaABABBKBIbFADOzs5vvvkmgl3Hjh3H
jBnj4uIyefLkvn37Dhs2jKtjEBn5IA/asWMHO+7SpcsLL7zg6+vbq1cvRDdj
hUOGDOEyR+TOBj1jH+7Zsyd7rI+w26ZNG1aO/RY1sc3CmBYtWjTQAyPlvAAg
0xUS08RmPnjwYIlpCo0XBYEPsUarzyKd/sbf3589xSgpKQkLC+OMcXV1rVkK
WQOk/YP0H545e/Zsla28vLwuXbpkUCi6jlr9KwRQj/iL4AQAJFDTpk3ZXZ2F
CxfitEePHvJfD5AjADj4AkAU0blgymg1dOhQez2PHz823WzhEDVrSBCELWOD
AuD06dPY0KABDhw4ADHQtm3bxMRElUo1fvx4ro6xyIi0t3Xr1qjPTqOiop55
5hnUXLx4MVdHWPivf/1r0qRJ7BibJBcOwMyZMxs3boz4jvCq1d9ewKcPHjzQ
6u+p4njDhg1a/ctXEREREBIomTJlirlcISEAPv30U/hHYppC44XAXYhQeXl5
3ClcB0mAQjYogheXV2o0GiyH2V8wM4a0f0aNGsUthDSYiMEjfq3xdRw3btzN
mzdxwAmA8PBwXIHwQ0JCAoTl1KlT0Vb+LMwrAETnsm3bNrR6++23d+3a9frr
rz/77LO4hk002wASAAShSGxQAGDXatSokZubGzvt1KnTW2+9FRMTw1IbhrHI
GBAQgCyYO/Xx8endu3f37t2bNGnCbYDCwueee+7777/nRm/YsOG6devYKcLf
+fPnO3bs+J///Eerv2H+/PPP9+3b18HBARIFNiBZ5luO1LJly5Zy9nxTBEBI
SEi/fv2wcBLTFBovJCkpCTHd4PEKTs+cObN3716DcnD06FHuzcPaRto/w4YN
g2dq/FqC6Dp6e3tzCooTABBFL730Eq6Hb7/9lr2DgbYrVqyws7PjX5DGMK8A
EAXB/emnn2aj4G8TPUBCm2i2ASQACEKR2KAAAAhk3MvnCGFIapo2bYpQxVUw
FhmxGS5dupQdYw9EXnznzp3i4uKPP/64TZs2arVatPCNN9748ssvWauioiL0
bPD+FZJiFLLkNyUlBTnX9u3bFy1ahOTa4Htn7IEyNluzuEJ0mllZWdjPucfx
ojMyZrwBUVFRXl5ewnLECESukpISg/KzZ89W6z0HU5D2z/z58w3e06suwnVs
37792LFjJ+lB54MGDcKnWv3tnejoaETYzz77LDg4GLLB0dER3uauNAksIABg
RuvWrblTqNmZM2eaaLYBJAAIQpHYuABAEhoZGYm9evDgwa1atcrJyWEVRCMj
9rp27dqhPjtFdGjWrBlLYxEfUT8iIkK08IcffkAayFohJgrvLSPtRYzgB9a8
vLwOHTosW7bMwHLkzogj5nKFcJpYLCS/9+7dY6eJiYmiM5I2ngPN3d3dheUP
Hz48ePCgsNzPz094C7qWkPbPlStXGjZsOHLkSINy7q6ITPjraG9vP+9v4EZ0
7urqytXEKnz11VceHh6Qo/B2bm7uxo0bq+zfAgIAfyloFRcXx04xHX6Ir5nZ
BpAAIAhFYoMCAKGqcePGLi4uWv1+PnToUK0+nXnqqae4b9ghQgnfAUPg4wff
/Pz8li1bhoeH4zgmJgapMdIf0UKESIzI5rV582YWVuLj49E/272Rby5ZsoTr
uaysbPjw4QMGDGBfuEZvyLLZVxVGjx69c+dOc7lCOE30/+uvv/rq2bJlC7Z6
0RlJGM8HOb6zszPTBklJSWiOY7jaWKBHrGFfD7QAVfpn8uTJ0AC7d+/mSmD2
mDFjDKrBM8a6MlhHPrge+LcXsLKQiAiymzZtQhOU7NixIzY2tspZVEsAjBs3
DsvNqVwhonPBenXu3Hnr1q1a/SussJyrU2OzDSABQBCKxNYEAHbLadOmYRvs
1asXsjzY1rx5c5Qgik2dOpXVQZ7LHgEPHDiQf0d6wYIFP/74I7+3vXv3vvvu
u7Nnzx41apSnp6dE4YEDB/r06WNnZzdixAj2Pbhjx441atTo5Zdf/uSTT9av
X8+iZFFREVLm3r17I/hyGzs0A4zp2rVrv379+OUmukI4TZjR4EnYWghnJGq8
KG5ubmy+kZGRiFY49fLyunnzpnAWWHoM9KelfhhQzqWybt26Vq1a9ezZE0nu
Bx98AGkkNO/QoUPCX9QRXUc+TZo04d94gVvYl+mgkXBlzp07d+3atXJmIV8A
rFq1CuINazpkyBDuDo+cuWj1X4pEoJ8+fXqnTp24LxWaYrYBJAAIQpHYmgAQ
ggQnLy9P+DxaSFZWlujDd5k/BYwoyb0Pz0CYMPhuNVqFhoYKv06VlpaG5KtK
C/mYfVM1mJHQeFHi4+OhFtjP4MDJaCVaDVEsMDCQe7xiAWT6h73ozt0AF4Kp
Cd9mNLaOcpD/G9Taat4BqBLRuXCkpqZKPAGpltkGkAAgCEVi+wJAqdiOK6Kj
o4ODg6Xr3LhxIyIiwoyxrEpsxz+mYF4BYC2UsRYEQRhAAsBa2JQrqryxb7E7
/xw25Z8aI+fOle2jjLUgCMIAEgDWglwhDfnHdqC1IAhFQgLAWpArpCH/2A60
FgShSEgAWAtyhTTkH9uB1oIgFAkJAGtBrpCG/GM70FoQhCIhAWAtyBXSkH9s
B1oLglAkJACsBblCGvKP7UBrQRCKhASAtSBXSEP+sR1oLQhCkZAAsBbkCmnI
P7YDrQVBKBISANaCXCEN+cd2oLUgCEVieQFAEESdw4x7DkEQNgLdAbAW5App
yD+2A60FQSgSEgDWglwhDfnHdqC1IAhFQgLAWpArpCH/2A60FgShSEgAWAty
hTTkH9uB1oIgFAkJAGtBrpCG/GM70FoQhCKpuwJArVaXlZXJqZmeni6zEKhU
qnv37hl8mpubyx8LQyckJBg0rKyszMzMlGMPQ6YrhNOUHigtLS0/P79mJvEp
Li4uLS3F6FjxmvVgIvIvFZianJys0WhwnJ2dLX+I8vLy1NRUYbmxa8MCsD+x
mrU1ZbmlIQFAEIqkLgoAbHQeHh6dO3c+d+4cK4mKimr4JKdOnUL5/v37J0yY
MG/evA8//NDPz49VFi0ERUVFc+fO7d+//9GjRxFTuHJE/3bt2gUFBbFTZ2fn
Tp06NW7cuFu3bpwMcHBwaN++PcZFn7dv35YziypdIZymsYEQ+1555RU28bZt
2yJw18wk9OPu7u6kZ9++fYiP0dHR3t7ectqaHTmXipeX16uvvvree++NHTu2
a9euPXv2HDVqlMz+165di/rz58/HOt66dYsVGrs2agwUVLXqr9RTg4FqsNzy
IQFAEIqkLgqAsLCwrVu3NmjQgIuMc+bMsbe3Dw4ODgkJ8fHxadKkSaGe1q1b
IyNGBU9Pzx49euBAtBAga0aoHTlypHDHnjRpEsZiAgCZ5qxZswoKCpKSklq2
bLlgwQIUhoeHv/POO/+PvTMBi6rq/3hW+rqUlW22WLa8ZWaWZWWrlWZattpi
WVavae674r4riwgKiIq4gSLuK4KiqIgCIuKCQoCigqyygywDzP/LnLz/69yZ
YYBhne/n4eE5c+7Zz7nn9/3de+cOEsB6ovCff/7ZJEOh7Ka+iqB2/vzzz50a
QkJCKtqk1NTUo0ePIhATE+Pj4xOpAR0UMSgTgdDQ0CtXrhjTL1NR7vjMmTMH
MszDw0N8hOz5+uuvv/zyS2MKDwgIwMBev34d4QULFrRp00alUulbGwDDMnv2
bAyLWuOk//jjj0ZadhcXFwg5Y1KqNQKsbdu2aExFZYOB6a50y+VQABDSIKmz
AgCbobRzlmiQH01ISJBbRuzn0iF4zZ999hkC4eHhSOPr64uwu7v7K6+8oi8S
YGOEmw/LrtUMmL9Zs2ZJAgAeMfxicQhb7pIlSxCYMWOGdNEYhrhly5amGgqt
buqrqFu3bsOHD4f4kTIa3yRYPViN9PR0hHfs2HH48GFhFgXJyclirAoKCjCw
wjjWDIbHJyoqqkmTJlrCBqKlZ8+eWil12t/x48c/8cQTIgzxg0HetWuXvrVh
aWnZvXt3FA6diY/z58+3sbExshcrVqwwXgDs27fvtddeQxswEfrS6CxN33RX
peVyKAAIaZDUQQHg6ur69ttvY0+DN9SvX79169YNGDDgzTff/O6776Q0WpZR
Drz4pUuXinC7du0ee+wxLy+vTp06SZuqMhKtQmnwH+dquHr1qkh548YNaAmM
jyQAJIKCgrBXS3fbJbDB9urVy1RDYaCbUkVI06JFizs0YIgq2iRh+NSaayAr
buHt7S3uI+Tl5R0/flxqjJubWyX8x8pheHzg/qO/Bw4cKDfXpk2b/P39tSJh
JVu1aiXCUH0oCrZSrWttQAI1btxYXFeZOnUqPnbs2NHIh0/UFRQA33zzDdr/
1FNPffrpp/rS6OyOHGm6q9hyORQAhDRI6qAA2LNnDzZkaIA1a9ZADDz44IPX
rl1TqVT9+/eX0uizjHDP77vvPqQXH8+fP3///fcj5fTp06U0ykhHR0d8fOed
d5YtW/bqq68+9NBDYp/87bffwsLCENASACNGjLjrrrtgdmEptBrw+eefo9mm
GgoDAkBeEQYnODj4q6++QuKBAwca3yQMFyxURkaG9BFDB0mASFEpjJd0VaSk
pATTUWMPyBken759+6Kz0dHR5ZaDjki3+CU2btwoZceSRnjhwoVqXWsjMDAQ
KxDjEBsbC2E5ePBg5DW+F8YLgOvXr3/00UcIzJ49u1GjRlFRUcZ3R4403VVs
uRwKAEIaJHVQAGDLuvPOO93d3cXH5557rkuXLpGRkZJjrtZvGX18fOC7SR/3
7t37xhtvvPLKK3fffbe0+ykjsTc2a9ZMbNToHUqGCNmyZYtkBbQEAGyin59f
27Zt3333XXntx44d++CDDzCephoKfd3UWRHaD8f23nvvlVscw02Ki4uDTde6
vYKP+/fvX7lypVY82Lp1q8kfMNOH4fH57rvvMDKVfiwhOzv70UcfffPNN+3t
7SE1UZS3t7da19qAKHrmmWesra3/+OMPcasdeefMmTNu3Dj5gtSH8QIAZa5d
u1atmRSs/zFjxlSiX/LprmLL5VAAENIgqYMCAGD7lR4+h6mFS964cWOYKimB
PssIUz5z5kwRxgYIb+7cuXO5ubmffvppq1atiouLdUYiy3333ScV8sgjj8DH
f/LJJ3/99df/aUBdn332mZOTk7wueMqIlzzi1NRU7LHG3yWvtAAwUJG4nY19
3sgmweHdtGmTMh4GApYrLy9PK/7AgQPyJw2qFcPjM3nyZOV9mQoBj9vR0RFz
Om3atBYtWty4cUPn2lBrLrBERETAjvfu3fvIkSOQDUuWLEEaaaUZwEgBAK3V
rl27zp07d9EAzx0tuVnB7wMqp7sqLZdDAUBIg6SOCwBsjKGhodire/Xq1bJl
y7S0NJFAp2XERvf4448jvfgI69CkSRPhxmJXR/rg4GCdkagLgZiYGJGxTZs2
2CHnzp076RY4+tNPP7m5ucmrgy8MwyFsBMYQPumFCxfEIekeRBWHQtlNwxXB
c4duMSalFLlhwwZl/KVLl4Q3qsW+ffsMX382IYbHJygoqFGjRpgUrXgjL79I
ZGRkYLpnzZql1rNgpJSYhe+//37jxo2Qo0iTnp5ua2tbbvlGCoDdu3cPGjRI
+ijuUMgVb7kYmO7KtVwOBQAhDZI6KABgUu+6665169apNdva119/rdb4Mk2b
NhVPNKk1Fkr5DBi2a8n8qTVPtd17772BgYEIR0ZGwqGD76MzEoW/8MILDg4O
as0X/VC7VjsRI5zNy5cvo1KxpcMJnTFjhkjw888/T5w40UvD4sWLjfGwjBkK
ZTeVFaEvu3btEl+UwFFnZ2fjmwQfH1ZGaJi4uDgMCMIYDX2GHkpJfD2wBih3
fAYMGAANsHz5cikGze7Xr59WMoyPvqIKCgr69OnTrVs38doHnWtDpMTYvv32
25CIixYtQhbELF26VN9tejlGCgC0wc/PT94wyN0OHToo78Lo646+6a50y+VQ
ABDSIKlrAgC75dChQ2H1OnXqBC8PbWvevDliYG0HDx4s0sA7E7eAe/ToIb8i
PWXKlCFDhshLW7ly5fvvvz9mzJi+fft6enoaiMSWiH1y2LBhzz333KpVq7Ra
dffddws3fNu2bXfeeeezzz7bs2dPGxsbYToRuON2jBmicodC2U2dFdnZ2SHw
0ksvffDBB9j5hbkxvknu7u7ie3+hoaGwVvi4adOmsLAwpdnC1GPoKnpdutIY
s1Ssra1hKF977TV4uB999BEsoLJ569ev9/Hx0YrMycnZsGHDG2+8IY2YQOfa
UGtGSXyTDsIAK3P8+PFWVlbG9MIYATB8+HBM0K+//ipdvli7du0999yDyD/+
+MOY7hiY7kq3XA4FACENkromAJTAIc3IyFDej1aSmpoq3f6WY/yrgBMSEsq9
hgzboXxdQCUw4aaamJgYHx9fubyXL1+GqsEgqzUXBNA7nclgxXx9faXbKzWA
keMjnnKXbt8oQdeUfjRmPyAgQN934gx/08H4d1CrK/g1QGPQ2R0jqVDL5VAA
ENIgqfsCoKFSd4YiIiLiyJEjhtOcPn06ODjYtLbMMHVnfKqCyQVArdAw5oIQ
ogUFQG1Rp4ai3Av7NXblX6JOjU+lMebKVd2nYcwFIUQLCoDagkNhGI5P3YFz
QUiDhAKgtuBQGIbjU3fgXBDSIKEAqC04FIbh+NQdOBeENEgoAGoLDoVhOD51
B84FIQ0SCoDagkNhGI5P3YFzQUiDhAKgtuBQGIbjU3fgXBDSIKEAqC04FIbh
+NQdOBeENEgoAGoLDoVhOD51B84FIQ0SCoDagkNhGI5P3YFzQUiDpOYFACGk
3mHCPYcQUkeoYQFACCGEkLoABQAhhBBihlAAEEIIIWYIBQAhhBBihlAAEEII
IWYIBQAhhBBihlAAEEIIIWZIrQiA06dPq1Sq5ORkfQmKi4sNHL148aKfn1+5
tYSFhQXeQt7m/Px8xBQUFKg13c/Ozq5g8wkhhJB6T80LgLNnz+7cuTMlJcXa
2lpfGsNHg4ODN2/eXG5FS5Ys8fDw2Kvh1KlTIhLSYu3atbNmzcrIyFBrur9h
w4aKd4IQQgip39SwACgtLYVdhn3fuHEjrLCjoyMCaMD27dutrKwcHBzEO8fk
Ry9fvmxnZzd//vzFixdfuHBBfbsAQIyLi4vOulBRbGysVu3btm3bs2fPnDlz
hAAAqCU+Pr7SPSKEEELqIzUsAOLi4mBwEbhy5YqlpWVaWlpWVta5c+ecnZ0T
EhJCQkIWLlwIMy0/iv9Xr15FvfDiFy1apL5dAERGRq5bt05nXRAAKM3JycnL
y0ulUiHG19fX3d29pKRELgAQuX///kr3iBBCCKmP1LAAgIkXtlt+kX/Lli3H
jh0TYVtb22vXrsmPFhQUeHt7w82H9YfhVht9CwDuP0QFWgslcOjQoQsXLtjZ
2d24cSMnJ2f27Nnw+qEEkOz8+fNr166tdI8IIYSQ+kgNC4CAgIAdO3aoNQLA
yspKRK5fvz4oKEiEFy9eHBMTIz+6fft2GGioAljzCgkAiaNHj3p4eIjLC7Ya
Zs2aZWNjk5SUhKNRUVH6biIQQgghDZUaFgBnzpxxd3dHAOXMnTs3Pz+/tLQU
phkmvrCwEFZ+wYIFKpVKfhSHxPWB8PBwpQBAFp0X8PPy8mDZkR3Frl69WiuN
/BZAWFgY5EGle0QIIYTUR2pYAGRmZlpaWopr73DtEV65ciWM9datWxG2t7cP
DQ0VKaWjERERCMyfP9/JyUkIgJMnT0oCAOlxVFkR7Lu1tfV8Da6urqhCfhTq
QhIAu3btOnHiRKV7RAghhNRHav5rgO7u7tLPixcUFIjH89Sar+fDYZenlI6i
hZX4tj5KQy4t068FSl60aJHhNIQQQkjDo+YFQHJyMvx6U7W/ivj7+0vPHxJC
CCHmQ628CbDueNzKyw6EEEKIOcDfAiCEEELMkMoJAHrNhBBCSP0FdrwSAiAm
JgZZarvthBBCCKkksOPCmldIAMTHx6emptZ22wkhhBBSSdLS0hITEwsLCysk
ALKysvgruoQQQkg9BRY8KiqqoKBA341+fQIAiPfsQT8UFRXxeQBCCCGk7gN7
DaudmpoK+y7etFMJAQDy8/MTExNjYmL+IYQQQkh9AFZbXPkvKSnRZ99FSgMC
AEA80P0nhBBC6hEw3Pp8f+MFgKCgoKCQEEIIIXUefff9KycACCGEENJgoAAg
hBBCzBAKAEIIIcQMoQAghBBCzBAKAEIIIcQMoQAghBBCzBAKAEIIIcQMKVcA
ZGVlxcXFRUdHV9v7igghhBBiSmC1YbthwSstAMTvASUmJubk5BQWFqoIIYQQ
UrcRP/6bnJwcFRVlQAMYEADIJX4JqLi4uLbfaEgIIYSQipGZmQkTr08DGBAA
cXFxSUlJ/BUAQgghpJ6SmpoKa15RARAdHV1QUFDbbSeEEEJIJSkqKoqJiamo
AEA83X9CCCGk/gI7Dmuen59fUQFQ2w0nhBBCSJWANS8sLKQAIIQQQhoA8fHx
oaGhvhoQwEd9KWHNxfcCqigAsrNyL5yNTk1OM2EvUObFczGXoq4VFhZVIntG
elbIiXMmbI8AZWakZZm8WMMkJ94I8DtlIEFRkWrf9iP8XgYhhJgzMNB7Fehz
200iAA7vD5o1zsFtxY61y7Yvnr/mctS1qvfCzztw5rgl65ZvX7Zow5yJTpf0
lHkmJOLYoRCdh5BlyYK1VW+JFg6W62Iir5qqtBspGRtX7yk3WfzVpEPeJwxk
z88v2LHxQFGllBIhhJAGAJx9yehnapA+6rwOUHUBcD0uecpwW3ig4uPVy9eP
7A9CIDwsasaYxRP+ttq71Q8foy7GrrDfaDVt+dSRi44cCBaJvXcenTjYetoo
u7Ohkbf14mqSvMzL0XFTR9oh4LxwveeavRMGWy+1cU+/kRkdcWX0/+aN/GPu
GudtojSLITbIKCSBJABSktIWzlo5ZsB82O6szJyyNl9LmjdpKcrZ6em7cOZK
ePRzJjiKJxt9vY7v23FE3hifXf4odsGUZacCz6s1AmD9yl2Thi60m7s68XoK
YiLDL1tPXzF5uC1MsOipo5XbXAsnmOaM9CxHazdUtHLJprzcmzh64Wz0zLFL
MAh7thyCwz5+kOWwX2dNH23/bztnlrXTZbFnYUFhsap49gRHdHmexdKYf66K
Pl48F2M1bQXSH9hzTCs7Rhv/CwuLVjttHTfQEm24FpuglaUsQUEheq1SqSq3
wAghhNRNQkND9QkAHFKmr7oACPIPc3XYLMIF+YX4E1fsZ493gAZISkiFRc7O
zIEZGv7b7NiY+CuX4mGeYLwyM7JhB5Oup54P+weWTl+ZglF/zs3NyYN9XLN0
K0rDUd+9AWrNxYftHvsRQGmThi2MjYmLDL8EUQFfWBIAHqt2b163D4IBltFr
+2HEwJhucfdOS82AJhF2E/YdMgMBmHL5FQwUazHUBocgbGD0b+blQwAsX+SB
eEiRret9kAYNiDh/KSc7D0Whv+jpiP6z0QwImED/MMgh2NxVTluELMGwoHcQ
BvMnO/9zMRZSBNZZ1IV27t58CBIFVYQGhUMADPllxoE9Aaj0nwuXoXmQZs5E
p/AzUdASa523Yajl2TFE+A+VYjvb9UZKOqqDRFFmQdWIQWsrs7wIIYTUVXx9
fSXTLweROKRMX3UBEOB3ysm6zDZlpmeP/WsBXHI4m6nJabDycMnxB18bdhBm
0X7eGpFl1jiH5MQbxw+HWk5dLtIgF8yxvEw4ztJHKAqYVNhcCAB4/WrNjXhY
cwSO3BIAKM3dZadIj7wweZIAgAKB9UcA8gD2HZ4+FAJKQ0xM5FUhAPbvPrZr
00EY36kj7eRfckRLpGJFPKwzFAsCaIn9vDILC7GB9qAXkDFnQiLQU6SRskAb
oHAM0Wa3ffDxhbculXY9Llmy4JOH28I3RzkQGG7Ld0AAjPxjbklJSdk03RIA
kC42M1zQqvybBVrZhQCAQAo6dkZehVYWQgghDZKaFwBwdUf/OQ/WSnyEBYT5
i7+aBMfZ/+BJ8Qf3GWYRdk2kgfMLAeDnE2g3Z5WURlhknWVeOBsNUwhzBgEQ
dyVR1AKfWi0TACgNLrlID7/+dPAFIQCQa8LfVjnZuWrNnYW5Fk6IsRhiA7mi
1hhxIQBSk9PnWSw9fiR02wYfee9QvtY9eukZgNiYeOFiwwS7Omw+6htsNW25
EABST9E26xkuB72Owy5DAMBezx7vIC9NsuBo1fhBlr57A8RonAuNRPchqP6d
plsCoLi4GPZ92aINk4YthC5SCgCXxZ6hQeHyKrSyKNcAIYSQBkDN3wKAfYFX
e1hz3z8jPQtOcXBAmQc6deQiGFy1xrmOu5qoFABwh2eOXZKbk5efX7B1vU9B
fqG8zGmj7Py8A9Wa59th+zxW7UZYKQDg2K7V3BxPTU6DKYdZRwD2Hd6udAUA
LvCBPQEoE7WI2/Rrl22HWkAbYBaFAFBr7Ljl1GUw6/Le3UhJnzrSLv1GZk52
3sJZK8UtALkAQPNG/j4nL/cmNAYsuJYAgMI5eypCpVKhJRAAmmGxi468Ar9+
leOWqIuxGATpmgNEgnh8IuzkRXELQCkAdnr6ZmflIj2G93J0nDy7EACBR087
224oLCiEtlm5ZJMyC8Yh5MQ5vsqJEEIaGDX/EKBa8+AfNAAczGG/zlq6cD2s
DyLhg8PdnjJiEXxS2LuI8zHL7W4TAAjs3XYYhh6GyXvnUa0yr1yKF2WOGTAf
tk88QQcTDC2BAKyquAVwIyUDDj4MOsL7th9BUTDo4iHDy7cEALI4WrnBmK6w
3whPHzFJ11NtZ7ki5Z4thyQBAJGAxiiHyGPVHtjWKcNtkUAtuwKAFoorABAV
EwdbwxDbzHBBw+Q9hR23GGqDP0drty3u3ogJ9A8b/ec8SBRXh83CCkN4oNll
7bySiAajy9AhGWlZEADjBt4SABdjMbAIHPQ6jkZCOK1bvl0r++j/zcN/DBS6
hkGbOW4JpIgyCyQNuiMehiSEENKQqPmvAQpgs4SZllPuF9PgHYvb3LrLTM+C
0224BGSXvv+OgL7SpO8UqDVusnjS7/jhUPFkAizjprVeWs///3/ewiIDjRQJ
9PnUaJJ0L0NqsNawyJ/JL/cqfVn2otue4Vc+0i+/nKLMYrgvhBBC6i81/yKg
+oV4GhB+Mdx58V05j1W7V9hv5C1yQgghZoJ5CgBCCCHEzKEAIIQQQswQCgBC
CCHEDKEAIIQQQswQCgBCCCHEDKEAIIQQQswQCgBCCCHEDKk+AaBSqRLiU6S/
qn/F/qjvyRspGeWnI4QQQkh5VJ8ASIhLHjdwgceq3eIvNTmtEs2DxZd+i+fA
noCk66mVKIQQQgghWlSrAJgzwVEeYz9vjfjN37CTF7dtKPsJP+eF6z3X7J0w
2Hqpjbv4xd4LZ6Nnjl0ydeSiPVsOFRcXjx9kOezXWeIndJfbeYgfAvDeedRi
iM2U4bbHDoXgo88uf3eXndNG2S2YsuyfC5fVGtngZO0+aejCNUu3lpSUFBYU
7vT0Vb4vlxBCCDFbqlUATB5uezr4Av7OhkYiZq6Fk7gOcDLg7PqVu9SaX/eD
jc7OzHF12Oy7t+yndmaPdwjyD8tIz5o/2fmfi7HXryVJP3drN2fVlUvxmRnZ
k4YtjI2Jiwy/NHGwdVFhEYw7SobRP7TvhPjFHIiKHRsPFKuKcejq5esobc5E
p5zsvGoaQ0IIIaTeUa0CYPT/5rks9sTfGs0v9uoUANERVxAIOXFutdPWlKQ0
4eyrNb/Og//y37sXAuD44VD4+yLG0dot/EwUrLzX9sP4mJWZA22g1vzEz5QR
i/bv9uczA4QQQohOavIWAARAUkLZTXwYaEkAxF0pu6p/JiRildMWmPvZ4x3k
WZQCwM8nEA6+iFlhv/F08AUIgEPeJ/DxZl7+pKELxaHI8EsbXHePG7ggNiau
KuNDCCGENEhqUgDAXgf4nVKpVM62G3QKAASmjrSLjrxSUlKyynFL1MXYlKQ0
xIirAUIApCanzRizODM9GwGLITb5NwuUAgC1XNL82u9a5237d/sXFxeHnDin
7+d6CSGEEDOkGgVAfMqciU7ymPCwKBjo8YOsnKzd/xUAs1aK5/rOnopY7bQV
gUD/sNF/zoNld3XYLEy21bQVU0cuUmsEwNXL1xHYt/0IYiADjhwIxsddmw76
eQeqhQDQ3AL452Isjs4a52A72zU7K/dGSvqoP+dmZeaYdOQIIYSQekwNvwgI
rn25T+MjTdHtLw1QZoFTj2SGyyksKJSXWZFmEkIIIQ0cvgmQEEIIMUMoAAgh
hBAzhAKAEEIIMUMoAAghhBAzhAKAEEIIMUMoAAghhBAzpGEIgNLS0jNnzhj/
Xb+EhITs7GytyJiYmIwMo14djBGLjo6uRL3VCnpkkqlRqVRBQUFVL6dCXLhw
oYZrNEC5K8H4pVJ/Mb6Pdeos0MJUJ0U1wZVGapeGIQDCwsLuuOOOI0eOlJuy
uLj4t99+a9SoUXBwsNah559/ftiwYeWW4OXl9dhjj/34448VqrdCoJGVyDV5
8uSHH364ilUHBgZ26NChefPmVSzHeOLi4rp164YZqbEay6XclWDkUjGGys11
DWB8H6vpLDAJJjkpqo+aXGmEKKkvAiA3N3f58uX6jmIX9fb2RkeMKery5cvY
r5QC4OTJk/Hx8caU0KdPn19++aWi9RqPi4tLJV5cnJSUdOLECZPUrlMAHD16
FENU9fKVeHp63n333dVRsvHIF1i5K0GeoIrDYuRcV9/g66PcQbC1tRWBajoL
Ko18KitxUhjeaqpOba00QpTUigAQO57WjlFSUqJvJ0R8v379/v77b2OKlQL6
rknC5ZQEgFaNWiWUatBqJPjpp59+/fVX43MZaIxOVqxYYaQA0BpDrVxK71Lf
yGBapfDatWuVAiAhIaFNmzYHDx4UH0UJ8nLkJaj1D4XSTKhUqm3btjVp0kTR
OW3KHUNlq+SHCgoK9BWoXGDljr9IoDUslcCYua6+wdcaK62StRY2lpMUgyl7
8MEHlZXqw8CpYaA9+tKYdirVsgE0cqupjyuNECU1LAAWLVrUsWPH4cOHt2/f
vnHjxoMHD0akq6vr22+/PWPGjLZt2+LsgOL95ptvvvrqq9dee23evHk4d9zd
3Zs1a4b1/91334k2f/zxx88888xvv/0WGxsLC+Lk5NS5c+fdu3cfP378yy+/
RPa//voLVqxXr17K1wgLATBx4sQOHTq0bNnSysoKkX5+ft9///2AAQPS09OH
DRv2yCOPoFVPPvnkE088IW5P4zS0sLD49ttvP//8cxyFAJDXqy+X6B1Kfv31
17t37z569Ojz58+XO0rGGAUkGDRoEHaSF154AQ7FtWvXxo8f//TTT4ujGRkZ
Y8aM+eGHH9q1awe5Mm7cOH0js2vXLgzjzz//3KlTJ2wyaj0CAAkwaF26dJk9
e/bUqVMxF4sXL7733nthCLRK0DcUkZGRv/zyS58+fTDL16+X/aaDj4/PJ598
goxYDP/5z38QM3LkyIceegguG+QZlgTiRe3Y91D1119/jfRi+WmtgaCgIBSO
nvbu3RuGKSfntt99wFxjyaGEgQMH6ixQvsCklYBk06dPv++++zBW+fn5SPbf
//4XC1KeQD4sXbt2ffbZZ5csWYL47du3v/TSS2fOnDHJXFfH4GuNgNYAenl5
iT6iTAwdipo2bRriW7VqtXPnTiw2jDw0GxJjsqSzQK0RCWhhz5493333XZQA
B9zAqSFHOcXe3t6YYgz+m2++efjwYX1TiSrQDEwckrlrkKZSflIcO3bs8ccf
R/fPnj2LAUdF77//PnYzrQHU2mqUe1H9XWmEKKlhAXDy5EksY5xQFy9ehPFC
+Ny5c3v27EEAG/6aNWuwS+BMtLOzQ2KcqnfffTf2OoRxtop7YWgt7ALMKE49
aAlICOw5AQEBKAFbECI/+uije+65BzsGPiLy6NGjWm0QAuCLL75AY/r379+o
UaPrGmCjYdaxOdja2iLB/PnzL126hI0OZzRy4XR77733cBR2E7sZNg15vfpy
xcTEQGPgpA4PD8fRBQsWYD8sd5SMMQq+vr4YMTFKlpaWKBZ7iDCjAKoGOwYC
M2fOvPPOO9FTfSPz2GOPiQuSb7zxhqNj2a836hQAiYmJIgvKQdcQRnUoHBOh
VYK+ocCWKC4aw5Qg/sqVK02bNsVcIAYrQbRcTI24m2xtbY1xRiA6Oho7bWpq
2Q9Jv/jiiyhNuQauXr0KqYPV4unpOWHCBPmlD+z8KBPjg0oRSE5OVhYoX2DS
SlBrHDeUj01YFIUFgKrlCaRhUWseDkEY1ak1t8X//PPPcifayLk2+eArR0Br
AGE6RR/RXxh0FLhs2bLAwECcm0iv1pwOYnbkZwE+zp0795133kGgsLAQiTFi
GEOdTZKjbA/OFyxCpEfMrFmzsFQQVk4l+gubCKuKZGjno48+Kp9KrZMCprNF
ixbCZKOPQlQo17+UHS1X7kX1d6URoqSGBUBBQQGWLlSrWnMvrHHjxjBVOIth
pMRZLE4i8Yy9WnNWQt+qNWeNOH2wz8D36afh1VdfhRev1uw2yAUxjzBOBzgO
as05hfPUw8NDqw3Cypw6dUqt2SIgALAJIwxZIs61ffv2IYE4bSH14QIggI1r
zpw5ogScpxAAWvXqzIVtE/sPBADC8G1dXFyMGSVjjMLp06dRHdx8DCM2JcRg
AKW9DiMgNhM4EeigUB06RwabCfYW7OFPPfXU2LFj1eUJAIS3bNmCsHSdU1mC
zqGYNGnSAw88sHnz5pSUFKwi+EqvvPKKKGHTpk3Y4RHAIUkASCZm1KhRcKBE
SmytqEvnGvjxxx8xg8qBysvLw16NKXB2dkbhsGLKAtWyBaaWrQQA64BRTUtL
QwcnT56slUA+LJgycb0F4SlTphw6dMjwDAoqJABMNfg6R0BrAKU+Yl1JT2is
X78ehSMLZkdYW/XtZwHsKQy9iMepjXiYcp1NkqNsz8iRI+F0ixjx0M6MGTOU
U4mON2nSBKeAWrOfwBqqb59K+UmRlJSEDQdeBta/OBF0DqCUXd9eVE9XGiFK
alEAgM6dO//xxx8IYIfBzqa+tcNIJx2kcrNmzdSas2bEiBEI2NvbQ5ZrFSu2
IOGDSGYO4ITasGGDVmIhAKSLZv/973+HDBmi1iMAYOhxCqPXMKOrV68WWXDq
9e/fX6teZS4EUAu0zapVq2CCYbNu3LhhzCgZ+QwAvDm0ChtXZGSk+va9Do4P
XI/Y2Fi0uVevXiJS58hcvHixe/fuS5cuhdMxevRotUEB4O/vj/COHTsQlg4p
S9A5FDA9H3zwgbj+gx24d+/ePXv2FCVs27ZNzLJOAdCjRw8htyR0roFffvlF
fDVDiZubGwrZunUrCj9+/LiyQLVsgalv35azsrIwGk5OToMGDZJWvta2LIYF
YOeHiUlISOjatauRT30YLwBMOPg6R0BrAHUKAKwoFIIqMDutW7cWkdJZIAKS
AIC1wsc9e/bobJIcZXvEVXfpI1aCOOO0pnLlypU4rbSebZBPpfykAN9++y2m
xtfXd968efoGUMquby+qpyuNECW1KACw78ErsbS0VMsEADxWJMB5JNJDQj//
/PNq2VkDuYszWmhptebSHKR1VQTAE088Ia7yGRAAOMXg2vz1118iCwTA77//
rjZCAAALC4vXX38dxlq4J8ZgjFGIiIjIycnBaKD92NbUt+91KpWqY8eOn3/+
OXY20SSdI4MSnnnmGTFE3bp1K1cAiKuOchukswSdQxESEoJWwTpAEXl4eMAJ
wuyLbmoJAHFtVhIAGO2HH35Y2uVwVOca0LctHzx4EDYiIyMDGkxsy8oC1fq3
ZQCN2qFDBwymFKO1LYthUWuc0Pvvvx9Hx40bZ3j6JIwXACYcfJ0jYIwAOHDg
AAqPiYnRKQDUmstcX375pYjHUCMey75cAaBsDzT5XXfdJVx78Pjjj8PVVU6l
MLWSC4y6cNSAAEBLoJmhha5du6ZvAKXs+vaierrSCFFSKwJA3HTDYsa5ef36
9eLiYpzs69atQ2R+fn7btm3F/WvQpUuXmTNnqjU+AlY7Tq74+HicZW+99RbO
epxxffr0wfklzriNGzeqNafnhx9+qNY8LYBiYc602iAEgPhCzalTp+677z6x
NWEHEE/+iD02OTkZYcR88cUXCGBHgj3CvoFi4X7Ca0BT5fXqzAX/on379tgw
MzMzjf9mnzFGYb0GtcZ6YsRELmzvwhtauHAh/AiM1U3Z8+HKkYHpRJvhdCAl
egeFAzcE5WBetBqAeKTEdhoZGbl582aERck6S9A5FH379sUhEZg4cSI2Q1Gg
WnOTFy1HCVgeLVu2hFhCSuSCKsAgo51I+ffff2Oypk+fjrrQfuUa+P7773v3
7q0cKJTWpEkTTDoMH8rx9vZGB7UKVMsWGJotrQSBMGTy2zdSAvmwiEPYkBFz
+vRpE861yQdfOaRqzY0t+QBKfUS9mB1xjowcOfKTTz5BAK5306ZNsaqxG8jP
Api2Vq1aibqgq2HOMDU6myRH2R64upKngLlDA9BZ5VRevnz5nnvuQS0BAQE4
HcSXc+VTKT8p1JqbX23atEHXxEedAyhlv3r1qs69qJ6uNEKU1IoAaNeuHU4r
nHE4wbH7DR06FJGwquIFdPBWnn76aXiI33zzzQ8//CD2OmwRsErYfLDb4ATB
iYbzulevXuHh4ZDxAwcORAmwbtge4ZhgT/Dy8oJZQST0tuQCC1Dgp59+ik0D
0vrll1/GSYfINWvWwPRArsMdgHFHRmxlR44cefDBB+GowlrBx3zppZdQbzsN
77zzDiyvVC9OQ525Tpw4gXbeoQE2F9uvMaNkpADAVmZlZYVNb8uWLaGhoTCI
qAVeDPJik7/jFugXvJjAwEDlyMDjfvfdd9EwbGgDBgzAlo4tDhOBoxMmTNBq
AzYiTAEmC1mQ4Pfff8emhDRaJWCX0zkUcJq6du1qbW0NDxH7LVRf//79MThP
PfUUWi6eM1drLpgg8rnnnsMCwH/xYJvwBxGPvVQ8dqW1BjDvqKhFixbicQ45
8ArhlkLmzZgxAx4cqoMeUxYoLTC0X6yEnTt3SoW88cYbwqjJl4pIIIYFhYuj
Fy5cEHeKjcTI2z2mHXzlkGoNoLyPMDoosGfPnij51VdfFc9tRkdHw3d+4okn
4FNLZwEi0SpUARcb84iT6/z58xAJOpsk753OKba3t0f5c+fOhYQWrVJOJc5K
qAsUKDaQ2NhY+VSiFvlJIerCCpeuCioHcPXq1fKtRrkX1d+VRoiS2roFkJCQ
YOAdaBDqELrCZZCQvxITjmFSUlKlmyFaYuQdeTniwWOt7/4YwNXVdfbs2dgH
4ALAV8UmLN1SNIAxRkGlUiFNYmKiMiUmFHsF1BQsI/5DqKBeA0VJF1qV31/W
Qt9bSY0pAQ1Wjjn2OkwlFpX8PqaoRTw5Ka9C6+3Nxq+BwsJC4QPiv1SRskAD
71yVOqgTeUY4wrCzxrRKYPw7H0w++MoR0Im4BYDs0j0XAWZNX41IiV2ioi+z
UrYnLy8Pa1h+FUvnVGInMbBXaIE2a+08ygGUZ9e5F+mjLq80QpTUsADA8oYA
2LRpkwm7UGfBPtO8eXO4MCoNcBB69OihfC+BEuONgk52794NTyE0NFSteRe6
h4fH+PHjK10aMRJnZ+dVq1Z17tw5LS3N+FxVnOsaAH4oHFhj1i2pGSq30ghR
UpMCABvdyJEjIQDgkNb8z83UCk5OTh06dGjatOn7779vYWFhpMcKx6cqlWKO
+vfv/8gjj7Ru3bp3797YLuq4iWkAYIRfeumlp556Sn451xiqONfVTXR09Hvv
vYdzdtSoUTQ3dYFKrzRClNTwFYCcW9SdN4fXALXSWWwUdfaHZhok4iVRtd0K
E4MlJJ2z/LpZHaFBrjRSK9SXHwMihBBCiAmhACCEEELMEAoAQgghxAyhACCE
EELMkKoLgGxCCCGE1HlMLgAIIYQQUu+oPgGgUqlSk032xeGiItW+7Uf4vTZC
CCHEJFSfAEiIS54zwbGKzTsTEnHsUIi67L2vBTs2HigqNKO3BxBCCCHVR00K
gJSktIWzVo4ZMN/Bcl1WZtnr9FOT02xnuY4fZLXWeVtebtkL4Te47rIYamM3
d/XVy9ejI66M/t+8kX/MXeO8DYlnjFmM/4UFhauctowbuGCuhdPlqLLf9HRe
uN5zzd4Jg62X2rin38hEzMVzMVbTVkwfbX9gzzGRZaenL1+dQQghhEjUpADw
WLV787p9sNGrnbZ6bT+sidmzcc3e7MwctxU79m71g9Hf7LavIL/w8P6gVY5b
kACB7R77RfZRf87F/5AT5yAPUpPTD3odt5+3BjELZ65cs3QrCnF12Oy7NwAx
cyY6hZ+JgqKArkBpGelZiMnJrtPvXCWEEEJqkpoUAFOG2woPPTYmznr6ChGT
polRa95vKXLBsm9cvWf+ZGd8PKIQAGuctwUdO6PW/ErX+EGWN/PyIQCiI66o
NdoA0kKksZnhEuB3Kv9mOT9vRwghhJgnNSYAYN8n/G2Vk132Y5fxV5PmWjiV
xQy2zs78/5/WPR/2z5QRi/ZtP+K1/bA+AbDCfuPp4AtSgdlZuRAAcVfKfqj0
TEjEKqey6wbFxcUQCcsWbZg0bGEhHxsghBBCFNTkFQA45gf2BMA6b13vs2Pj
AcSsW77de+dRmHLfvQH427PVb4u7N+IREAIAXvxazQMA6lsC4PjhUGgAmHWY
e+sZLmrNLQAtAbDT0xfCAMVOHbnocnQcagw5cY6/iEcIIYRIVKMAiE8Z8ssM
WG3xFxsTF3c10dHKbexfC2DBU5PTkeZabAJc/nEDLW1muGSkZSUn3pgxZrHF
EBs470IA3EjJgJu/dtl2hEf/bx7+5+XedHfZOX6QFax/ZPglxCyctRIlI3D2
VIS4BXDQ6/i0UXYzxy6BwIDdv5GSjgZkyS41EEIIIWZOzb8IqKhI+2n8gvxC
+Ueti/YlJSXKr/8rC9ECueRp+EumhBBCiBy+CZAQQggxQygACCGEEDOEAoAQ
QggxQygACCGEEDOEAoAQQggxQygACCGEEDOkYQsAlUoVFBRU2634l/T09PDw
8NpuRbVjJt0khJD6TgMWAIGBgR06dGjevLkxiZWvGjAtzs7OaMkff/xRrbVU
dy/KpWa6SQghpOrUWQFw9OjRkydPVrEQFxcXIwUAUlb3u4I//fTT6raMpu1F
5aagBrpJCCGk6tSWADD8ar6EhIQ2bdocPHjQcCFoueEEa9euNVIArFixwkjT
KZIZ+WpBebLPP/+8Epax3D7KMb4XahNNgahO3kitbubn52s1qUI9IoQQUk3U
vACATenSpcvXX3/9ySefoKixY8c+++yzffv2zczMvHz58nvvvWdra/vzzz/f
cccdSGZnZ4cs3t7eH3/8ca9evd58883Dhw+rNXZn0KBBf//99wsvvLB8+XLE
xMfHf/PNN1999dVrr702b948Yd1MKwCcnJxQ+IwZM9AwFOvg4IDIkSNHPvTQ
QydOnAgODn777bfbt2+vs5vq2y2ju7v7W2+91bZt29mzZ6OpOgtR9tEkvVC2
rXJTsGjRoo4dOw4fPhytbdy48eDBg0XhUjfj4uJ+/PHHMWPGPPfcczt37lT2
KDIyEmHM2oQJEx588MHPPvvs/Pnz33///f333//bb7/xx5sIIaRaqWEBEB0d
ja0+NTUV4RdffBHmIzc39+GHHx4xYoRIAPNXWFiYmJgI63P06FHEhIeHw9pe
ulT2uz+zZs1q2rQpwr6+vkiJmLNnz1paWsKGdurUSZgqxNx9992LFy9Wm1oA
oN4777zzww8/hJUcMGDAI488otaYOTT1yJEjCFtbW4tIZTfVMssIQ9+1a9fs
7OyQkBDkPXTokM5CtPpoql6YagpOnjyJBFBcFy9ehB1H+Ny5c/JuQtV069YN
ASsrKwyaskdJSUlffPEFSvPx8UHfUQX0FUpzcXFBaaI6Qggh1UQNC4BRo0bB
8RRh7PCwMghMnz69ZcuWOTk5YWFhMCWIkVsf2BHYBZEFlhfx8MFPnz6NALxL
GK+rV68eO3YMH2HaRLI33njjpZdeUlfDLYAWLVo4O5f9TOG2bdtQo0qlSklJ
kWz3kiVLhO3W2U3JMsK97dChQz8NrVu3njRpks5CtPpoql6YagoKCgoQ2L69
7Ica0cLGjRvD0Mu7GRERERAQEB8f36dPnyeffFJnjyZOnNilSxdR8iuvvDJl
yhQERMniOgMhhJBqooYFQI8ePWD+tCITEhJgPmBYJ0+e7O/vr75lfURYXNWX
EsM49u/fH4Fp06Y1atToqaeeioyMXL9+vVwADBs2rFmzZurqFAC7d+9GjRg6
nbZbZzcly/jOO+9oefQ6C9Hqo6l6YaopkAsA0LlzZ9E7qZtIMEgDzPrjjz+u
s0dyAfDBBx9MnTpVrblTgJJ9fHyM6TIhhJDKUcMC4Keffnr44Yelx88kL++X
X35p3779J598IuyXsD7w6xEeMmTIXXfdBZ9RpIQpgUGBdwl39dChQ0888cS3
337r5+eH9G5ubiINnNznn39eXYMCQHREst06uylZRrjY3bt3l8qEDdVZiFYf
TdULU02BXAAgywMPPCBUjdTNoUOHiksNaJUQAMoeyQXAhx9+SAFACCE1Rg0L
AFhk7O2wgKdOnZo+fbqTk5OIDwoKQjzMgfiYlZWFj+7u7vAT4YRKhiYuLu7O
O+88e/bseg1qzaX4tm3b5ufn4//PP/8sssOmzJw5U60xPf/5z3+MsezGmE4Y
TZTm6OiIsKenJ1qF0YAdbNmyJRxbtPmLL75o1qwZGqOzm926dYORVd8SD4MH
Dz5//ryDgwPsps5CtPpozPAa0wtTTYEQAOLpROgEjMz169fl3XzxxRc//vjj
vLy8vn37tmrVKjs7W9mj0aNHv/nmm6LGV199dezYsQgUFhaiZC8vL2O6TAgh
pHLUsACAeRLuJIwIbJD8xTUvv/wyDKL08bvvvoNNmTFjBsL29vbwGefOnQsX
FTYOMbAjbdq0sbKygq3ZsmULYkJCQp5++unhw4d/8803P/zwA9p5+vTpTp06
wZRMmDChXLNojOm0sbFBaW+//TZM5wcffIAwDCjiLSws0J3nnnsOteM/FIKy
m6tXr27RokXr1q1h/WHg4P8i+3333Ycs+KizEGUfy8WYXphqCoQAaNeuHXTX
I488IuSBvJvW1tZ33333Cy+8sGDBgiZNmqDLWj0KDg5+5plnmjdvvnnzZsgS
1IUZDAgIgAxAyT169BCKghBCSHVQK+8ByM3NhT8oj8FH8aC4nIyMDCkMRzI8
PBy1i48qlQqGLDExUW7v4KHDXU1OTq5Ekyr0DXoloqlw2+WRym7KSUlJQacM
FKKzj4YxvhdVnwLpFkBCQoK+NxBKdw1EpyrRI0IIIdVErb8J0N/fH95lv379
PDw8TFhsRamiAKgjVK4XlZsCGHcIgE2bNlW0OkIIIXWBWhcA06dPb9q06dix
Y2vX/mo54/WUyvWiElOAlCNHjoQA6Nq1a935uSVCCCHGU+sCQM13w9YBKjEF
Obfg9BFCSH2kLggAQgghhNQwFACEEEKIGUIBQAghhJghFACEEEKIGVJ1AZBN
CCGEkDqPyQUAIYQQQuod1ScAVCpVQnwK/lKT06q7F4QQQgipENUnABLikscN
XLBx9Z41ztscrdzOnoqo7r4QQgghxEiqVQDMmeAowudCI+dZLC1WFc+e4Oi8
cD3CiPTeedRiiM2U4bbHDoWIZD67/BGzYMqyU4FlP0mTkpS2cObKMQPmuyz2
LCwo+8WcQ/tOzBy7ZP5k5/AzUfh48VyM1bQV00fbH9hT9qu1hYVFqxy3jP1r
ASKTE2/oSFBQuNPTV6VSmXwYCSGEkPpFzQgA2Hq3FTsgAIb8MuPAnoCbefmZ
GdmThi2MjYmLDL80cbB1UWERYiyG2lyOjrt6+fqkoQuRxmPV7t2bD2Vl5jhY
rgsNCs/OzIEYyMnOQ4JtG/aj2DkTnaAE8nJvrnXeVpBfGHLinJO1O8rZteng
xtV7lAky0rMQgxKqbzwJIYSQekG1CoBRf85dsmAtbO60UXaw2hAAI/+YW1JS
gqPHD4e6u+wUKR2t3WCmA/xOSTHipfSTh9vCYYd4WL7Iw235DmScOnIRfPwz
IRGikDXO22xmuCBj/s0C8XHlkk1Iv3W9D2pUJiCEEEKIoFoFAOx1xPlLMZFX
hb2GABj71wJx1M8n0HPNXhFeYb/xdPCFI/uDhNsugAYYP8jSd2+A/8GT+DsX
GolI+PK+Xsctpy6HJCgrsLg46NiZZYs2TBq2sLCwCOWsX7lLpBe3FbQSmHTk
CCGEkHpMzdwCEMgFQGpy2owxizPTsxGwGGIDD/1GSvrUkXbpNzJzsvMWzlp5
My9/zdKtUAVIHHbyYmhQeEZ61p6tfhAGqcnpI36fg/idnr7ZWbmIgdK4HB0H
T3+V4xbUcj0u2XvnUWUC6IGQE+cawM/+EkIIIVWkGgVAfIpSAIwbuED6uG/7
EdhlyIAjB4JFjMeqPaP+nDtluO2BPQH4GHclccmCtXDeLacuy0jLQoyrw2ak
nzl2iZ9PID4e9Do+bZQdPq5bvh1mPTcnz235jsnDbZHmwtloZQJoDJSflZlj
osEjhBBC6iu1+yIguOTi7oBEUWGRVozWpXskkLvwSFxUpDKQXiuBVuGEEEKI
ecI3ARJCCCFmCAUAIYQQYoZQABBCCCFmCAUAIYQQYoZQABBCCCFmCAUAIYQQ
YoaYgwCIiYnJyMgwJmVpaemZM2fqyFcFs7OzTTLUKpUqKCio6uVUiAsXLlQ6
r/HzVb9IT08PDw83VWmmWh61TvVNN07k06dPR0dHV0fhEqmpqTdu3KjWKgip
JsxBADz//PPDhg0zJmVYWNgdd9xx5MgR0zaguLi4ErkmT5788MMPV7HqwMDA
Dh06NG/evIrlGE9cXFy3bt0aNWpU6RKMny/jqdwUmBBnZ2fMwh9//GGqAk2y
POoC1THdoKCg4JNPPrGysmrcuPHWrVul+Pnz5zdr1uzRRx9NSEgQMcePH+/c
uXOTJk2GDBkyffp0HL3rrrt69uzZu3fvd955p2XLll988YXOKiCtR40adeed
d27ZssXk7Zfw9/d///33cUI9++yz7777brt27fr27YvzuvpqJOZDzQuAo0eP
njx50lTtNwZUFx8fbyCBra2tCMBMeHt7Y0BM2wAXF5dKvH84KSnpxIkTJqld
pwCovonw9PS8++67K5QlNzd3+fLlIlzufFWCyk2BPio3dJ9++qkJBYCplkd1
UKHxqY7pBmvXrv3888/VGgMKJ11+CIYeOr9r166SLAwKCurRo4cIf/jhh61b
t5YSx8TESIeUYK+obgGg1kgUNNjBwUGtOVPee++9e++9Ny+Pv2pKqkoNCwCo
7jZt2hw8eFB8FBfb5ZfcUb48vdi0SzXI45U2Wuu6vVbJUnYRwIkvxWzbtu3B
Bx9UVqoPfU0ywIoVK4xMrNUvrVxKN1YkUN6zkA8jdkKlAKi+iYBbhCGFP6Xo
nDby2enXr9/ff/+tVZ0B9HVcH8ZPQbnFag2d4RbKxwf2SC4A8vPzyx1MY6qQ
MNxsYwqXSqjEXTCpfGPGx/DpqfPkqmiTLCwsvvnmG52H4La//fbbMKlTpkwR
MZcuXfr5559F+Kuvvnr88celxDgRLl68aKAiaF2dAgANLii47UdIlUtCX6RW
XjQArXV0/PfN6osXL8bHkJAQA60ixBhqWADgLMPS7dKly+zZs6dOnYqNAosZ
ahYmY9euXb/99hsSdOrUCXtIenr6sGHDHnnkEVdX1yeffPKJJ54Qt5UjIyN/
+eWXPn36tG3b9vr164jBVoMCv/76608++QRtg5hHgp9++ql3796w7F5eXt9/
//2AAQNQ5vDhw1HUtGnTEN+qVaudO3deu3btmWeegbVCYvhTTk5OnTt33r17
t1pjbdHCnj17vvvuuygBDpe+JpWLMdYHCQYNGgQj+MILL8AXRsPGjx//9NNP
i6MZGRljxoz54Ycf2rVrh66NGzcOTsGXX36JLe6vv/6Cfe/VqxcsL1JqDaNa
jwCojonw8fHBFCBj+/bt//Of/yBm5MiRDz30EAY2ODgYWy7iRe1aU+bu7t6s
WTO04bvvvvPz8xPzJVJ6e3t//PHH6N2bb755+PBhxGCOXnvttRkzZqAE9Eu4
RSaZAmXDxo4d++yzz/bt2zczM/Py5cvwvGxtbaWhs7Oz09nCRYsWdezYEYsN
/W3cuPHgwYNF4ZIAiIuL+/HHHzGhzz33HBahcvYxtghjcidMmIC1+tlnn50/
fx7Dcv/992NqkFhreWBxYgFj9NAGDKbhpaXWnPVoM1Y+SouNjUVMSkoKpvJ/
//sf2tytW7cNGzbgxMFcT548OScnB/JMzKPOvForQWt80J633noLh7DSYNf0
nZ4GTi7EIM3rr7/evXv30aNHYyi0OqicAlh2DA4ceYzzoUOHtNJDABw7dgyt
atSoEfIiBpOLVomjcgGABn/77beG14wQAJgRrBm0cNOmTYicOHEiFgAGYeDA
gfqWhL51opVXfbsAwGyiUw888ABGzHDDCCmXGhYAiYmJWMlHjx7FroJFjvD0
6dNnzpyJk/qxxx4Tu9Mbb7yBpY51js0WCebPnw99jg0H6XEUJ4W4Yg87jvjo
6GhsI+IS34svvog0V69ehZXEWenp6Yn9Eycmto5ff/0V3YSlQ4HLli0LDAyE
dUN65FqyZAm2HbXG4gcEBCCBEABz585955131GU/LlCIxNj8sRvobFK5GGN9
fH19YSIROHv2rKWlJc5ujIwwo8DKykp4KBirO++88+TJkxjAjz766J577sGO
hwaLUUUCrWFU6xEAJp+IK1euNG3aFKYNMbA1ouX4KD1TYW1tLcZZOWUIvP/+
++JGMCyImC+Ew8PD0XIUjvCsWbNQ/iUNGIEPP/wQmzYMhyjTJFOgbFhubu7D
Dz88YsQIkQAThMUgDZ2+FmJ2kAB2BPs2hgLhc+fOqWUCALoIRlZMKzqinH0Y
9C+++AKlQVNh9FAFNA9Kc3FxQWmoQr480C8YC2H3scIfffRRw0sLJwIsDiYa
Uw8DJOwOlre9vb20MCAAEMb6F5MCQy/mUWderZUgHx9ohq5du2ZnZ8NdRSRs
sb7TU98yi4mJadmyZX5+PoYaRxcsWKBl+HROAcK///47NIbOiYYAgCLFioUX
AGGDVaolAFAImoSYl19+GTrB8LIRAmDjxo1QRMJth7pAU9FOtASB5ORknUtC
Z6Qyr/qWAIC8Qas6dOiAAdm/f7/hVhFiDLUlABDGWYOwdKULvgCOwgQ/9dRT
8LwQs2/fPiQQGzJcBnFBb9KkSVC/mzdvhs+CxuBchr8mShCbDwJQyDitpEoR
FgYFm6R0b3r9+vViL4UAkPZMbO+IhAus1lhS7EUiHhs14rHV6GxSuRhjfU6f
Po2S4RXC6GCTFK2VBAAcHDhBCMBBhtsi9sA///wT8WqNn4J+eXh46BxGwwLA
VBMBt+WVV14RJcAJwhaq1viVkgCQhJbOKYMAkNSUNF8wlDB8IhJbNIqC449w
ixYtnJ2d1ZrbN4gUlz6qPgU6GwY7i/0W9i4sLEzcpJAPnc4WYiQR2L59u1pz
xxbOHdaPWiYAIiIiMLzx8fHwmuHt6px9jCfMuigZAysuVouShZMrLQ8U1aRJ
E2QU1aGdWv3SKhxy8d577+2n4dVXX4VBgVeOBHDkRXroKyEAoDCFAEhISBBd
VuZVrgT5+MAmIo1ID38cKdX6T0+dywxyHd2EAEAYxhoSSKt3+hZJuQIAgT17
9uBsgviJioqSCwCoPmgerIGtW7e+++67hpcNTr3PPvsMnZJuUuTl5UHeoM1Y
pWgP3A2dS0JnpDKv+pYAwFI8cODAvHnzsGYgBtLS0gw3jJByqRUB4O/vj/CO
HTsQlg5hkXfv3n3p0qU4H0ePHq2+fUPATiI2Z2wyH3zwgVDOOON69OiBQ1q1
4FzG+Sh91CkAhFODKmCYpGd+hADALicCkgDAboaP2C50NqlcjLz+DAcK2xHM
rtiK5QIA5z6cU7R59erVvXr1EpGSAABIKTZt5TAaEAAmnAhstj179hQlwC43
a9ZMrUcA6JwyCADJ0ZbmCwFpbwfI3r9/f7VMAIhLH8bc3TZmCnQ2DLYPOzOq
mzx5shgu+dDpbKF8YwedO3cWdl8SAEgwSAPMunS1WWv25QIA4wzXXq1x9lGy
j4+PWrY8Vq5cCaNseBDkhcPT79Spk/woVgiKFRJCbVAAKPOqFStBPj7vvPOO
paWlVnp9p6fOZXbmzBm0Z9WqVRC96KbyC3f6FokxAkCteVQAlUJd67wFAMQ3
CNCM5xXMnDlTrREAWJBt27bNzMyUcrm5uWE5IS8KP378uM4loW+daOVVK54B
gBeAjwsXLtTZO0KMp1YEwLFjx9S32x14WM8884zYdrp162bA7oSEhMDjg2nG
tgCfF54C5LqkvYVzZIwAgJZG4TExMToFgFrjbnz55ZciXjyFC9+q+gQAvEIM
wqFDh5544glx21EuANDljh07woLALkuPNCsFgM5hNCAATDgR8N/hBopuagkA
MSmSANA5ZToFwJAhQ+666y7JMGFbFo5wNQkAnQ1Ta5ZT+/btP/nkE1GCfOh0
tlC+sSMLhkUYQUkADB06VIwhWiVsjXL25QLgww8/NCAAhKWQ7nRjlWp9rV6r
cASQUVzfUGvuC8B5l3/7VS4A0EG1TAAo88JN1loJ8vH5+++/ISallogxqZAA
UGts9Ouvvw4No7y4oW8K1AYFwMiRI6Wv0aHlQr3oEwASRQrEQ7nYUnBWPvro
o1g/IuXBgwehVTALEC1KASAtCZ2RyrxqhQAQdwdw+uvsHSHGU8MCICsrC0sX
exc8EbHt3NQ8bY6dBGEnJ6f4+HiYib/++gsphWESd8G+++478W3cvn374pAI
YJMUzgv2mVOnTsFNRgk4BD0vP/dhyJBdrdkzsUeJHQabALZ0tcaBatq0KdQ7
+iVOuo0bNyIe9qhVq1aiLjs7uw4dOsA06GxSuRhjfdZrUGusJ7wJkQutFdYN
ah8OIwbnpuzhfGxZ4g4y0mAPxFDoHEaUg01bqwEmnwiYS1GgWnMrFi1HCdji
WrZsia0bKZELqiA/P1/nlMHlwcaLfQ+1SPMFL1LaIePi4lAmmodZQHfEZujp
6Sm1vOpToLNhas13xBCPPiqHTmcLxcYunqOAHURrxUOS6JewMi+++CKUW15e
HoYOayw7O1s5+5Beb775pqjx1VdfFfdihED18vKSL4+kpKR77rkH6zMgIACF
SIZM39JCFpiYt956C9Yc5qZPnz6IQTPQvCtXrojHYIQAgF1GG3BSoC+IxDpR
5sV0aK0E+fgIhTZ48ODz5887ODgIIaTv9NS5zGD7oL4g1HGG6pxBnVMgSoCA
0TnR6JcQ+QLMDpa6NG7vvfceFKaRXzqABsCpt2nTJqFeRAex4Js0aYLGQA4h
0tvbW2wsWktC5zpR5sU6EZMiHqpEjUgjv3RASKWp+fcA4MTEUocT9O6772IZ
Q6hjx8CpjY84lbAzDBgwABYZ2y98BySAIYZv8uCDD0Ihw8rAd+jatau1tTXc
c5gYZBQuAE58bN04O7BNITFOYeyQqG7NmjWwQfDsdu7ciU0JBfbs2RMlY1MV
T6xFR0fD54VzhFN44MCBSACriki0ClXAO4AD8vLLL2MHwxaks0nldtlIAdCm
TRsrKytsRFu2bAkNDcU2i7pgCJAX++odt0B33Nzc4MK0bt0aOz/MAQwu4uFE
w+PWGsaZM2d26tQJRydMmKDVBtNOBEa+f//+mIWnnnoKLRfftlBr3DdEPvfc
c8OHD8d/8VSh1pSpNcYXjYEkQ3XSfCHe3t4eUzN37lxYATGhNjY2aMzbb78N
My18Nxhrk0yBzoYJxALQGjpxr1nZQrGxt2vX7ueff4ZlERv16tWrsSYxZTA9
GDS4jS+88MKCBQuw28Mr15r94OBgrMnmzZtjMYuRefrpp2EFIANQMsSSj4+P
fHnAdGJS8BFzLZ7MN7C01Jq3IqBedLNXr17i5YS2trb4iEgYR0kAYJbvu+8+
TAcWGP5jfnNycpR5tVaCfHygWNA7FIhysADwUd/piRp1LrMTJ06gLrHyMTXQ
GMqJU04BRhvZUQsitRKPGzcOA/vSSy/Jv6h44MABcRViypQpWPOoCx/Lfcxe
pVKNGTNG7BinT5/GjDdq1AhnzcmTJx966CF0GSPw/PPP44wQLrzWktC5TsLC
wrTywh8RZyjSYME//vjjUGUQAyZ8rwUxW2rlTYD63vwpXcfT+v6sHJx0OKp1
KxAZ4UaVW6+4BYDs0jVMATqlr0akRH+reK4ZY33QL6RBdcqUmCDsqPBDsd/i
P/w47LcGijJmGAUmnwhICPj4GE+5AyVqEc9xyavQmjJ9jYEHhI4b4+YbwPj3
ACgbho/iSosceWu1Wihd2k1ISND3BkJphMWwGJh9I0FFwndWorNw1JuUlCRP
Bn2LViGxJABEMtFC+fRp5dW5EuTjA11a6bfWuLq6zp49OyYmBnoPJhsrX+er
fau+SEz7TB2kjrh2h//iS/3KJaFvnWjlNWGrCNHCHF4FLAF3A96EMQ+Nm5YK
vYVGCXxG+FOhoaFqjTHy8PAYP3686VpnFlRuCvz9/eFd9uvXT3zDwkhgRrGx
i++D1zvg46Px4pZBrQOzCG8dXrxKA7zjHj161Pz5W3V0Lol6vU5Iw8B8BAAc
h/feew9n3KhRo2r4GzRVfGknxrx///6PPPJI69ate/fu7ezszKt/FaVyUzB9
+vSmTZuOHTvW+AFHypEjR96hedNszf8GUxVJTU0dNGgQGt+tWzd91xNqGCcn
pw4dOmAW3n//fQsLC62rFvUCnUuiXq8T0mAwHwEAbyLnFvXxwhp2jFr/RRsz
pBI/DCEtM5P/qER1g/Oibp4j9W4ktdC5JOrvOiENhsoJAHqghBBCSP0FdrwS
AiAmJoaSlRBCCKm/wI4La14hARAfH6/185qEEEIIqUekpaUlJiYWFhZWSABk
ZWXhkDFfuyOEEEJIXQMWPCoqqqCgQN+Nfn0CAOTl5SEv9ENRURGfByCEEELq
PrDXsNqpqamw77D+KpWqEgIA5OfnJyYmxsTE/EMIIYSQ+gCstrjyX1JSos++
i5QGBAAQbxirbUVDCCGEEGOB4dbn+xsvAAQFBQWFhBBCCKnz6LvvXzkBQAgh
hJAGAwUAIYQQYoZQABBCCCFmCAUAIYQQYoZQABBCCCFmCAUAIYQQYoZQABBC
CCFmSLkCICsrKy4uLjo6utreV0QIIYQQUwKrDdsNC15pASB+DygxMTEnJ6ew
sFBFCCGEkLqN+PHf5OTkqKgoAxrAgABALvFLQMXFxbX9RkNCCCGEVIzMzEyY
eH0awIAAiIuLS0pK4q8AEEIIIfWU1NRUWPOKCoDo6OiCgoLabjshhBBCKklR
UVFMTExFBQDi6f4TQggh9RfYcVjz/Pz8igqA2m44IYQQQqoErHlhYSEFACGE
kAYMXN2EBkRycnJeXl4VxwTWXHwvgAKAEEJIgwS2EkYT/+HwFtV/0AvRI1jk
qgxL1QWASqVKTU77/3HOvZmVmVOVJoHLUdcuRV2rYiH1lOTEGwF+p2q7FYQQ
0nCAvwzjVdt228Tk5uZCAygfyYuPjw8NDfXVgAA+6huWqguAhLjkORMcpY9H
9gd5rtlbxcny3nl0344jVSyknhJ/NemQ94nabgUhhDQcYCgbhu8vBz1Cv0pK
SuQ9hYHeq0DfdfvqEwDhYVEzxy4ZP8jSY9UetLBYVTzPYunKJZvGD7KCfXdb
sWPC31YbXHeLXIixGGIzZbjtsUMhapkA0CoEMSEnzk0ebjt9tP0Wd+9tG3wQ
c2jfCaSZP9k5/EyUvGFIv8F1l8VQG7u5q69evo6Y1OQ021muaMBa5215uTej
LsY6WrnNtXDauHpPYUHhKqct4wYuwMfLmosPN1IynKzdJw1duGbp1rL2Fxe7
u+ycNGyh/bzVOCSvSKvxPrv80U00Ek29fi1p3qSlEwZb7/T0XThzJY5mpGc5
WrshBmnQBjEsqBoxaC20XMw/V9c4b0PKi+dirKatQE8P7DkminVbvgO1oKeh
QeEzxixGRiRWpkRfUJ1KpargKUIIIQ0TGErdRjT+tOrC9qK8TPGp2HdKVa1y
SpTq5PKqFqKLYn/rouwUrUj0S/5GPjj7ktHP1CB91HkdwCQCACZ1z5ZD4g/W
TQiAWeMcTgacTbyeAgsYHXEFlm7ILzNOHDkNmzi038x924/AFMJupiSlZWZk
w7DGxsRFhl+aONi6qLBIEgBahSBmijCsccmzxzvAImdn5owZMD8nOw8mftuG
/fKGIWaz276C/MLD+4NWOW5BDFTExjV7kQXyY+9WP9jNEf1no9KiIhXKhE5I
TU4/6HXcft4aJEYvdmw8gGbDmKKo08EXbGe7wqoG+ofhT6pF2XikhyJKiE9B
XphyCJW01IwV9hthspEeeaGRhN6AYBDDgham38iEjEFF/1y4vNTGHSnnTHSC
pIFIgFxBL1Cs5dRlGWlZKHPKiEUQIV7bD0OcKFNiYBGDMTHRqUMIIfUbHQIg
K6nU+dUSz++Kd/9d6vBf1fktiFPPuqOosKAqZloVfbBk1XtVKUEfpXZPFaX8
oxWpJQBCQ0P1CQAcUg6LSQQAfHnYU/EHrxmmE742HFKRYP/uY8KSjvpzrvDi
cQj2DoGlC9dHnL90/HAoTLlIDP0AWyYEgLIQ1AVJIGKQALlQ4NSRi2Dfz4RE
aF0JEW2DQYeDD69ZrREPaZp61ZqvQEIAOFiuEx9hVYOOnVFrrhuMH2R5My8f
rYKd3b/bX/j7SddTx/61YOt6H9h6eRXKxsNSw1sXVUASQCEgHBN5VQgARKLL
6A4GCvoEwzLi9znCW/dYtTvA75QkANAkmxkuiMm/WfbaJRSLxiAQ5B8maoRa
sJ3lqkxJCCFEjlIAwFKXWj1QdDO77ENarOpqYJFGAJTsHFBq81DJph+KcjPK
koVvK13yfKn1g4gvys8r2fGn6pwn4ks2fV983B6BYq/hqtDVOgRA4vkSl7dK
LVuWeHxdlJNWlnLvsLJyVryBvKoz628V/hwiiw9YlH38x6fE7bPS5a/D1hcH
LCorJDulxL1XqeV9JZ59She2LlcA+Pr6SqZfDiJxSDks1XQLIP5qEpxQEePn
E4gYWDoYUBEDsy4eFHS23QBrKBKIQ/CU4WsLAaAsJPF6CtxkEQP/V9hBeL6+
Xsctpy5fvshD3rDzYf/Agu/bfgQpIQBgeScMts6WPaAIASBlEfWqNQYaeiY7
KxdhOPUbXHePG7hAGH1ogF2bDk4ebnto3//fo1c2HpZa3MRHURZDbDLTywRA
dMQVIQC2e+y3nuECWQLnXQgAaVjw8dihEEkAYFqhSZYt2jBp2MJCzYUFUSwi
IRUQuBabIASAVkrdJwAhhJgrOq4AFNwsdXihdOGjxT7ji+JDRRwEQLHPuKLE
8FLnjqqzG8v8bvu2xYEOqivHSx1fVP3jXRxgW7xnCJRA6YJ7YazLEji2k7LL
BUDJtv7QBkVJF0pWva8KXVN0/Qx0hSpqv+qsR+nsO1UhLqJwVZgbtAcOFd24
pLqwo3RWI9SCv9L5LYpu5hQHO0MwFF0LLvYeW3Z1op4IAATgmMNuwpW2m7Pq
wtloAwIAnj6MIwwlArCYcGOlWwBahYiYQP8wOL9QAhAAGelZe7b6wdSmJqfD
lZY3DPFb3L1FQFwBWLd8O0pGYt+9AfiTCwA48jDfsJ5nQiJgoBEDh1p8E2Gt
8za43v9cjA3SXPk/fiTU0cpNqkXZeMlSl+Vdth2jkZx4A9ZZCAB05OypCLj8
SxasNSwAUA50CFqLLl+OjjMgALRSYj2EnDjHtzUSQohA9zMAsLBBTiVrPpIs
cpmRzUoq89YPWJR55dfDSm0fF2mLD82AC18Udwoeuury0ZKN35Zdk8+4Xmrz
cJHs8cJ/BUBhYZlfv3do8aHpJeu6l2z+qfiYTcm230SaEtd3yqqDJJjXDAnw
V+rwX9h6CICSlV1EmlL7p1F7ycZvVMHOZZ9z00tn31UXbwHEp9wmAA4Eb1rr
hUDYyYvzLJbCJm5a54VRgaWDKy3SyAUAvGwE4KfDeMFEIrta88CbEABahSAG
Bnr2BMd5k5bCsIorAK4Om5ERegDOuLxhMLuIR14YXyEAYDGnjFg0bqClzQyX
jLSsiPMxy+3+FQB5uTdR2vhBVrD+okmw+Mg+a5yD7WxXmNec7FzLqctmjlsy
18Ip6mKsvCKtxu/adNDP+9+WJF1PhY3GoT1bDgkBEBoUbjHUBn+O1m7QJ/Jh
+VcAXIxdunA9Ph70Oj5tlB36Bd0Cay4Ve5sAmO2qTHkjJX3Un3Or/mVMQghp
GOh8BqAoI/5f4x5gC7NeJHsGoPjw7OL9E8t888XP/pvm6IKyuwCw7Atblx2C
b+75XbHvlBLPPvJS/xUABTdLF9xTphmO2+NPdW4TqijZ2u9fAbDybQgA1ZUT
pVb3iwRlaWIDygSAe89/BYDTS2UCwO2zsqsHGq1SOvc/5QqAmn8I0DDGP4uO
Xihv4msVAuu2d6tfdmYOUsLYeW0/LOKLCov0ObzKS+IF+YX62iA0xm3ZCwoN
fCy38YFHT4vvFBw/HCqeLRSJYff1tUEOylQ2yZiU+kaSEELMEB3PAFzcWebC
p8cVFeQXe48uWfuxUgBozP2jqsi9SFayorMqfGuZ+fbsU7rgXtji4qClCBQH
OuoQAGXJvis+PAclqEJXqU65FiWcK7VuBROvCl1ddp0/xEVT+COqS4dRY/GB
Saorx5UCoEw2uPUoykouDnQw5haAusa/BljDBPidgg8+fbT9aqetN/Pya7El
xhAbE2c9fQXccwfLdXDYa7s5hBBijui8BQCXvHR+i7Ln9Ja/Lh4ChGkW1/Nh
u/99MO/MhlKn9mWGfs/gorysskOBjqX2bcvyJ0eUGeXE8NsEQIxfyar3ywJX
g8puLiy4p9S5Y1FqdJHmtkKp/dNQGiXruos7Dqow91LHF0utHijZ8GVRwU3V
xV0l7r1uCYD2RdfPFKVfg5AonXN3icubpYueKEqJKlcAqGv2RUCEEEJIXUbv
ewBuZhdl6jkkJz+3/DQ6ufWGgaLkyLLHC2/mFGUmltq1Uf3j82889IZGVxgs
RG8CnQLAeCgACCGENGzqwpsAi3f9BS++dPEzZTcXTIF4EyAFACGEEKIPGMrc
3Mp68XWVvLy8pKQkCgBCCCFEH7BcDezXAMUvAWVnZ1flG98UAIQQQho8sJjw
lxMaEDk5OVX8whcFACGEEHMAznLZl7AbBOhI1d/2RgFACCGEmCEUAIQQQogZ
QgFACCGEmCEUAIQQQogZQgFACCGEmCEUAIQQQogZQgFACCGEmCEUAIQQQogZ
QgFACCGEmCEUAIQQQogZQgFACCGEmCEUAIQQQogZQgFACCGEmCEUAIQQQogZ
QgFACCGEmCEUAIQQQogZQgFACCGEmCEUAIQQQogZQgFACCGEmCEUAIQQQogZ
QgFACCGEmCEUAIQQQogZQgFACCGEmCEUAGQWIYTUE2p7v2xQUAAQnFPXrmXy
j3/8418d/6MAMC31WgBs377d09NThNPS0vARgdjY2FUyLly4EBwcfOrUKZEs
MTERkTk5OSdOnBAJPDw8rly5gkPZ2dkiZuvWrfioTKCPGzdunNUQExODwZTC
JuljZmZmfHy8SYrSBwUA//jHv3rxRwFgWuq1AHj55ZcbNWrk5+eHcFhYGD4i
sGXLlscee2zILQ4fPjxmzJjJkyfjUEpKSvv27W1sbBAeNmxYly5dRo8e3b9/
/1atWiF7RkbGiBEj7r33XhcXF50JlA1A1ZANJSUlGzdudHBwyMvLQ+TRo0fn
zZuH0kzSR0iXnTt3Gp8+MjKyohNEAcA//vGvXvxRAJiW+i4Ahg4d+tZbb6lv
FwBdu3aVJxMCIC0trWPHjsL6qzX2febMmQiUlpYio4+PD8Jnzpx5/PHHDSSQ
ExAQcOLECRF2cnLy9/cXYdhrDw+PauiuUaC1qP369evGZ6EA4B//+Fcv/igA
TEt9FwAhISEvvPDCtm3b5ALgwQcf/EbDH3/8odYIgCFDhrz++uvW1tZSXtj3
l156qU+fPoh/7bXXMAhqhQBQJpCAnV20aBH+qzVX6bEsT58+naQB8SdPntTX
ZoweWrhmzRq46vgYHh4OwbB161ZHR8ecnJwNGzasWLEC3Vm8eHFKSkpMTIyd
nZ24mxAXF7dr167Vq1cjsH//fkiOU6dOoa5z587h6OHDh3EUhRQUFFy5cmXz
5s3GDyMFAP/4x7968UcBYFrquwCA3d+0aVO7du1gDSUBAMO9UcOOHTvUGgFw
xx13QBVMmjRJygv7/uOPPyIBbG737t1//fVXtUIAKBNIwNCvXLlShENDQ62s
rI5r2Lt3L5Zoenq6vjYjASw1jDjSREREuLi4FBcXHzp0SFzn9/T0dHd3R2DV
qlUoDdJi3rx5KpUqPj4ekiA1NRUWH1XjEIQBJAf6iNrVmksQZ8+eFWIAc4Rk
xg8jBQD/+Me/evFHAWBaGoAAgBsOJ33EiBEGbgEMGDAAxrFly5Zr164VkdIV
frXGDb/nnnvUem4ByBNIREVFSdf5oUDEc4MApnnJkiUG2gzzPWfOHDj14hoC
akTk0qVLYb4RAyFx48YNzAjsPsYZxn39+vVI4OrqChPv7e0tru2vW7cOskSk
Fw8bQP8gnJubq9ZcnUB2cXXCGCgA+Mc//tWLPwsLi023uHDhgpFbHNFHAxAA
COzfv79Ro0aGnwFAAAa0efPm4ma9ZN/RfVjADh06qPUIAHkCCZhdR0fH/2Pv
TeC6qvL//5xmrCmXKW1zmSZryrSaxiYrq0lbnNax0clKrcx2y8lqKp36lori
Di6IuygKiiKC4i6KG27ggqI8VAREBEFAEEd4IHz+z989j+7/zv0sfICPfID7
fj7O4/M4n3vPPed9zj33vF/nrkTKy8vxvMqPAwKDOb6eDI9cWFio/yUZ0/lN
mzYx0ycHsqU9Dx8+TARJkJGRMWXKFJt2P8PcuXPx4EuXLt2+fXtOTs7o0aNZ
y6qzZ8+Wlpb6+Pjk5+cjBrDh9OnT6hkHRMLu3buJsApF4X4zigCQIEFCvQhy
BsCz1HcBoHvebt266QKga9euxmS6ALBpp8pbtmyZmpqKf2/cuHFTjSeffJJ8
8KRt27a99tpru3fvbtMEgCmBqfQJEyZcuXIFUUGfVLcIbt26lThz9osXL6o0
iAGUqr5JVFTUMo3ExESUA+4+KCgoLi6OrfjF1+O4d+7cSQLa2aZdCGCmf/ny
5dWrV7Nqw4YNycnJx48fV88poBwmTZp07NgxZEBMTMy8efNyc3Nt2tkJ9USk
m4gAkCBBQr0IIgA8S70WAN4lPT09NjbWdRoUAlN+/W9JSUlxcbF+PyFrWaKW
8xscHLx//37cvZ6eyb5+Jl9JAiOsIgERNiksLFQpyZx8XNyEYI8IAAkSJNSL
IALAs4gAqAkpKSlFRUUeyer8+fM+Pj6Iihrmw/RfnQdwHxEAEiRIqBdBBIBn
EQFQR8jOzkZOVOn5fU8hAkCCBAn1IogA8CwiAISr//kOQRAEz+Dt8bJBIQJA
EARBECyICABBEARBsCAiAARBEATBgogAEARBEAQLIgJAEARBECyICABBEARB
sCAiAARBEATBgogAEARBEAQLIgJAEARBECyICABBEARBsCAiAARvv9pTEASh
anh71GwgiAAQhsnHgCRIkFB/gggAT1FfBEBERMSSJUtUPC8vj78qHhwc/PLL
L48bN27AgAGmb+n27ds3OzvbuCQqKmr//v0OVzkkPz//kEZiYmJGRoZnalJF
2DtXu8FFAEiQIKEeBREAnqK+CICOHTs2atRo8+bNxA8cOMBfIkePHv3973+/
ZcsWIu3atTty5Ihxk9tvv/3UqVPGJf7+/uvWrXO4ygQFFRUVlZeXIzDmzp17
4sSJiRMnbtq0yfMVq4xz585NnTrV/fTJyclV3UEiACRIkFCPgggAT1GPBMDA
gQM7d+5sMwgAvH/Tpk3bt2+Pv9YFwCANm+ble/fufeutt5JATfy//fbb8PBw
h6uM7NixIy4uTsX9/Px27dpFJCQkZM6cOR6pS0VFhUfycZZ5aGhoZmam+5uI
AJAgQUI9CiIAPEU9EgD79u279957ly9frguAadOmvfTSS1lZWSUlJUoADBky
pEuXLsXFxTbNy//0009M3t9///133nmHJX369FFO3H6VDg6Uyb7y0Tk5OfS0
Y8eOxcfH+/j4mM4wKCgrLCwsIiJizZo1Y8eOLSgoYCEpo6KiVqxYgXggAR55
2bJlCxcuXL16dWRkpLqWER0dnZCQQITftWvXBgYGsiOuXLmyatWqlStXzp49
Gx1y/vz5uXPnxsTEkAyfTp5svnXr1sOHD1NWYWFhdnY2CWzafqSIoKCg5OTk
tLS0pUuXut+2IgAkSJBQj4IIAE9RjwQAfh9Xy5wdd6wEwKJFi3r27KkSIAAG
DBjw4IMPXrhwQS3Rz/MfPHiwbdu2tv8VAKZVOrhUnK+Kx8XFIQaCg4P9/Pz0
bO0JCQmZPn36mTNnxowZk5eXh/cPCAigVXHZ48aNI0F4ePikSZMQKmSCqCDO
wr179+KsUQhsnpKS4u/vj/ffs2fPggULWEsa1c5EUlNTUQLjx4+/dOnSuXPn
aIeMjIzJkyfbNBWhbocggjxgeX5+PvsIs91vWxEAEiRIqEdBBICnqF8CgIl5
p06dBg0a5FAA/PGPf7zttttwpmqJ7uUPHTrUpEkTmyMBoK/SOX78OBN2FWfO
jmM9e/Ys/Q3P7tCwsrKy4cOH47jx78qz87t9+3abph+Y12MzMkBdR7BpZxhG
jBhBM65evbqkpIQ4Hp85flFRkU27ukHpaAMUBTlTqK+vb3l5Oc7dOKkn/1Wr
VuHrMYwq2DTdQlYnT55URYwcOdL9Cw0iACRIkFCPgggAT1G/BACR9evXN2rU
yKEASExMxAkiA3Jzc22al8eb4z2HDh367LPP2v5XAJhW6RQUFKib7mgWHx+f
Y8eOEccd63cAFhcXFxYW6unxuXh8vO3OnTtXrlyZnp6ODWgGMp85cyabEx87
diyze30T5vJhYWF4fDTDqFGjSMnmxFnFFH7atGlM+ZX7RgmQMjMzk5pu27bN
pj0BgTBAmRw8eBBxQlnsjv3797MQC9XFBYQBmbjftiIAJEiQUI+CCABPUY8E
AC5Pxbt166YEQEhIiFEAJCUlEfnoo48ee+wxJtd4+TZt2rRu3bpVq1Zq2759
++oCwLTKyIQJE/DXkZGRdLPY2FiWMMFnJq7OLeB2ccp64g0aRJiSz549+/z5
82s0+Kty3rFjB/N3Y/4kUzfp4foDAwODg4PJQYkWMvfXOH36NH9jYmJIgDY4
evRoQEDAxo0byY3lLERdnDp1ipk+IoH8l2kggWzaSQz9MUl3EAEgQYKEehRE
AHiK+iIAqgdVY0punH27s4rlyu87hE2YbtsvZ6Ge2+XLl12cgTduTjKaVMWP
HDmyZcsWm3ZhQt3ah0LQE2OwHkfesEpF1G9xcTEJVDIURX5+vrPS7REBIEGC
hHoURAB4ioYtAKoNk311Ub42YUYfFBTE3J+J/759+6qXCdN/dTLBfUQASJAg
oR4FEQCeQgRAnYLmRQA4PMNw9RABIEGChHoURAB4ChEAgggACRIk1KMgAsBT
iAAQauPbXYIgCJ7D26NmA0EEgCAIgiBYEBEAgiAIgmBBRAAIgiAIggURASAI
giAIFkQEgCAIgiBYEBEAgiAIgmBBRAAIgiAIggURASAIgiAIFkQEgCAIgiBY
EBEAgrff6SUIglA1vD1qNhBEAAjD5FsAEiRIqD9BBICnEAEgiACQIEFCPQoi
ADxFwxMAERERS5YsUfG8vDz+EklNTZ1rICkpac+ePfHx8SpZVlYWCy9evBgX
F6cShIaGpqWlsaqoqEgtCQ8P5699AmecP3/+kMbhw4dPnz59detcM0QASJAg
oR4FEQCeouEJgI4dOzZq1Gjz5s3EDxw4wF8iy5Ytu+OOOz77hS1btnz11VdD
hw5lVU5OTocOHcaNG0f8888/f/zxxwcPHvzuu+/efPPNbF5QUDBo0KCmTZvO
mjXLYQJ7Ayga2VBeXo4OmT59OtojICBgw4YNzgy+fPlyRUWFp6qfnJxc1R0k
AkCCBAn1KIgA8BQNUgAMHDiwc+fOtv8VAM8884wxmRIAeXl5Dz30kPL+Ns2/
//zzz0TwyGy4bt064gcPHmzVqpWLBEZ27NgRFxen4vj92NhYItHR0QsXLnRo
7cWLF+fOneumAHAnGWlCQ0MzMzPdyVAhAkCCBAn1KIgA8BQNUgDs27fv3nvv
Xb58uVEAtGjR4nWN/v372zQB8Nlnn3Xq1Gns2LH6tvj3+++/v1evXix/+OGH
aRmbnQCwT6CD8504caJy0xcu/L9eigGHDh1iYUZGhr2ply5dmj59+uTJk2lS
toqJiVm/fn1QUFBUVFR2djb6gaKvXLkSGBhYWFiI2CBCgpkzZx4+fBizWUgy
9INN24/UkW2Tk5PT0tKWLl3qfouJAJAgQUI9CiIAPEWDFAC43bCwsPbt28fH
x+sCAMe9WGPFihU2TQBcc801qIIhQ4bo2+Lfe/fuTYKQkJDnn3++X79+NjsB
YJ9AB3c8e/ZsFU9ISBgzZkxsbCx+HGOcWRseHo5cIYJ/X7NmDREcOiWWl5f7
+vri4o8cOeLn58dy6uLj43Py5ElKQU4gG2zauQV1kwMRZAPL8/Pz2UdIDvdb
TASABAkS6lEQAeApGqoAYELNJH3QoEEuLgF88MEHiYmJzZo1mz9/vlqon+EH
PG+TJk1sTi4BGBPoHD9+PDQ0VMVx+hSqFtJdc3Jy7E3FyHHjxuXl5eXm5g4f
PvzChQvFxcUkxu/jyqdOncr0H1eOZycxk3o98+3bt69atQpfT+JDhw7ZNO0x
YsQI5IHKduTIke7fVyACQIIECfUoiADwFA1VABBZv359o0aNXN8DQGTt2rU3
3HDDtm3bbAb/TpvQxx544AGbEwFgTKBTUFCA1ybC/J3pvzIDZz1q1CicO3H8
O85dT3/27NlJkyadPn2alNOmTVN2siQrK4utmNTHxsZOmTJl165d+HoyJL3a
cOHChVhFApw+u2P//v1lZWWbNm1Sjz+QWOXmJiIAJEiQUI+CCABP0SAFAM5R
xbt166YLgK5duxqT6QLApt2t17Jly9TUVPx748aNm2o8+eST5IN3btu27bXX
Xtu9e3ebJgBMCUylT5gwgWk7ooIuumDBgpCQEGbuamJu007UGy8H4PdJT7m5
ubljx45dvHjxxo0bx40bd+LEiTVr1jD3P378uL+/P5N9zFDn/BWBgYEzZ848
deoUM/29e/dGRUUt00hMTLRp5xzUdQE3EQEgQYKEehREAHiKhicAvEt6erq6
898haAOm6vrfioqK0tJSFWcvsEpfUqZBpKSkxD4fFpaXl+tr+S0uLlZ3JPIb
HBycn5/vvs0iACRIkFCPgggATyECwOOkpKQUFRV5q3Sm/7m5uVXaRASABAkS
6lEQAeApRAAIIgAkSJBQj4IIAE8hAkC46h/uEgRB8CjeHjUbCCIABEEQBMGC
iAAQBEEQBAsiAkAQBEEQLIgIAEEQBEGwICIABEEQBMGCiAAQBEEQBAsiAkAQ
BEEQLIgIAEEQBEGwICIABEEQBMGCiAAQBEEQBAsiAkDw9ks9BUHwJm4OAnVk
rPD2eNmgEAEgDJOPAUmQYNUw7BfP7pFktWOt4CnqvgCIiIhYsmSJiufl5fGX
SGpq6lwDSUlJe/bsiY+PV8mysrJYePHixbi4OJUgNDQ0LS2NVUVFRWpJeHg4
f+0TuIbNDx8+vGPHjsTERNftcPny5a1bt+7cudPNal64cOHMmTNEjhw5smrV
qkuXLrFf3GlqfcNq4/WDWoIECd4KIgCsTN0XAB07dmzUqNHmzZuJHzhwgL9E
li1bdscdd3z2C1u2bPnqq6+GDh3KqpycnA4dOowbN474559//vjjjw8ePPjd
d9+9+eab2bygoGDQoEFNmzadNWuWwwT2BlA0fp/IwYMH/f39cf1IhaCgoMjI
SBdmoyhOnz4dFRXlZjVRLyrDc+fOjR8/XkWmTp3q/oaK5OTkqu4grx/UEiRI
8FYQAWBl6oUAGDhwYOfOnW3/KwCeeeYZYzIlAPLy8h566CHl/W2af//555+J
VFRUsOG6detsmh9v1aqViwRGmOzHxcUROXbs2MiRI7Ozs9Xy/Pz8vXv3OrOZ
WfmkSZOqV1+yVWcnXIC1LlahPTIzM90v0esHtQQJErwVRABYmXohAPbt23fv
vfcuX77cKABatGjxukb//v1tmgD47LPPOnXqNHbsWH1b/Pv999/fq1cvlj/8
8MPU1GYnAOwT6OBMJ06cWKHh5+cXHR3tjsFM/OfNmxcQELBr1y42jImJWb9+
fVBQUFRUVFpaGsupDi5+yZIlhw8fJttDhw6dPHmSCL9szvKEhITz58/PnTuX
bW3aqQDSr1mzhqoVFBSgUgIDA8lz5syZ+oYUtHjxYiwMDg6mlKVLl7rfwl4/
qCVIkOCtIALAytQLAYDfDwsLa9++fXx8vC4AcNyLNVasWGHTBMA111yDKhgy
ZIi+Lf69d+/eJAgJCXn++ef79etnsxMA9gl0mO/Pnj2bSG5uLh3vxIkTbtqM
tXh5IjhrHDcRvDnlXr58mXwiIyOpCN6cNPhrll+4cGHkyJFlZWX48TFjxuDl
2WTSpEmpqams8vf3z8/PT0lJUWcV2NbHxwenj3n6hsXFxSzMy8tLTExkH6Fb
3G9hrx/UEiRI8FYQAWBl6osAwDMySR80aJCLSwAffPAB7q9Zs2bz589XC/Uz
/Dbt5romTZrYnFwCMCbQOX78eGhoKJGzZ8/S8dy5S1DBrJxpO7Jh+PDh+Gi8
M5sXFhYmJSURuXjxIhoAI69cuTJq1CiWM+VftGgRG545c0Z5eVy5r69veXn5
8uXL1SX+1atXqzsKmN0rq0DfEMLDw5EZ6nwFqsDFZQITXj+oJUiQ4K3w5Zdf
MqQwCCQlZbhIRgLGIn7XrNnhRWu///77pb/AcOrmECc4o74IACLr169v1KiR
63sAiKxdu/aGG27Ytm2bzeDfqSNd94EHHrA5EQDGBDrMxPXb8KZMmbJp0yYV
x2WrCT6enbjJ4KKiotGjR+N/MXvatGnKWtx6VlbWypUr1QkBZuj4enVF4PTp
03Tm7du35+Tk8EsaJvt79+4NCwvLzMxk+k8/P3/+PObt3r07Pz9/zJgxCBJV
ltoQsYESuHTpEnIiOzubNKpcNxEBIEGCZYOcAbAy9UIA4LJVvFu3broA6Nq1
qzGZLgAAr9qyZcvU1FT8e+PGjZtqPPnkk+SDt23btu21117bvXt3myYATAlM
pU+YMIF5uk27CRC3ztQ7IiKCybi6WyA6Oho3bdqElOoSfG5u7tixYxcvXrxx
48Zx48adOHECGYDfx5uPHz8ehbB///7JkyefPHmSmXtISMjly5fJedasWUiF
mJiYwMBAIkz/iaBqZsyYQbbp6elsopelNkQ5kP+OHTvmzZtXVlZ2/Phx9bCk
m3j9oJYgQYK3gggAK1P3BYB3weHGxsaqOL4VV2u8URBtwELTJuvWrcMFqziJ
1ZX90tJS+8zLy8tVbqxVZ+zLNNQqPWfanN+SkhL7HNSGJEY8qGcVyTA4ODg/
P9/9Onr9oJYgQYK3gggAKyMCoFJSUlKUb62UhISE0NDQ+fPn45GvtlXOQHvk
5uZWaROvH9QSJEjwVhABYGVEAHgQ5uxpaWkOJ/t1Ga8f1BIkSPBWEAFgZUQA
CNX5IIcgCA0FNweBOjJWeHu8bFCIABAEQRAECyICQBAEQRAsiAgAQRAEQbAg
IgAEQRAEwYKIABAEQRAECyICQBAEQRAsiAgAQRAEQbAgIgAEQRAEwYKIABAE
QRAECyICQBAEQRAsiAgAwduv9hQEoR5QpwYNb42WDQwRAMIwb3/gQ4IECXU8
DLMTAHXHGKHa1EEBEBERsWTJEhXPy8vjL5HU1NS5BpKSkvbs2RMfH6+SZWVl
sfDixYtxcXEqQWhoaFpaGquKiorUkvDwcP7aJ3BGcXHxoV9ISUnx7Bd+yW3n
zp0bNmxwkYY6RkZGXr582YPlOkQEgAQJElwHEQANkjooADp27NioUaPNmzcT
P3DgAH+JLFu27I477vjsF7Zs2fLVV18NHTqUVTk5OR06dBg3bhzxzz///PHH
Hx88ePC777578803s3lBQcGgQYOaNm06a9YshwnsDaBoZENFRUV0dLSfn9+p
U6cQDLomsQcfTeKqVhMBs3TpUhcJMjMzKd1Zic62Sk5OruoOEgEgQYIE10EE
QIOkbgqAgQMHdu7c2fa/AuCZZ54xJlMCIC8v76GHHlLe36b5959//pkIHpkN
161bR/zgwYOtWrVykcDIjh074uLiVHzBggVoACL79u3z9fV1aO3FixeRB0oA
VEkG4P31MxgOwZLIyEj75bt37961a5ezrbAhNDQU8eC+JSIAJEiQ4DqIAGiQ
1E0BgMO99957ly9fbhQALVq0eF2jf//+Nk0AfPbZZ506dRo7dqy+Lf79/vvv
79WrF8sffvhhqmazEwD2CXTwnhMnTlR+nFU+Pj5MqIuLi+fNm6euRJi4dOnS
9OnTJ0+eTJugJQIDA9evXz9z5kxWHTlyJCoqasWKFcpZI1SowqpVq+bMmUOe
FIHZLLRPWVJSwl/yGTVqVEJCAsunTZvG8pUrV+7Zs2f//v10fhaWlZVlZGSQ
EtuIXLhwISQkBFGxadOmtLQ01+cWTIgAkCBBgusgAqBBUjcFAH4/LCysffv2
zJF1AYDjXqyB+7NpAuCaa65BFQwZMkTfFv/eu3dvEuANn3/++X79+tnsBIB9
Ap3s7OzZs2er+PHjx0eMGEFKvDaO2Nk9AOHh4cgVIpiKYDh58iSZ4NMDAgJo
WGbi6uwE1dm6dStumq5bWlp69uxZf39/m+b9jSkpBYVw+PBhVAcpL168iKMf
M2YMeaampqIczp8/P378eDY8c+bMpEmTcnNzUSx6ieydY8eO8ctC9xtcBIAE
CRJcBxEADZI6KwCYIzNJHzRokItLAB988EFiYmKzZs3mz5+vFupn+G2ab23S
pInNySUAYwIdnH5oaKiKr1mzJigoyLWpGInXVhN5Jt36trjm7du327R7DgMD
A4kgJGJjYyMjI5ETNsPpfVNKlIafnx/ZMtOfPn26yo2UO3fujImJuXLlyp49
e5YvX85CdAIef+3atepsPzuRrEijrBo5cqT71yNEAEiQIMF1YJRgshP2CyIA
GgZ1VgAQWb9+faNGjVzfA0AEJ3jDDTds27bNZvDvVIpO8sADD9icCABjAp2C
goKpU6eqOBHlmo0wMS8sLNT/MpHH7Z4+fZqZO/N0/tq0O/xHjBhBnMjMmTOZ
kts0/75o0SIm7GrDhQsXxsfHp6enm1JGRERER0crb75hw4asrCxl/4wZM9R5
BjQG4gHJMXr06IyMDGUDyc6cOXPixAlsYEl+fr66auAmIgAkSJDgOsgZgAZJ
3RQAuDwV79atmy4AunbtakymCwBgLtyyZcvU1FT8e+PGjZtqPPnkk+SDd27b
tu21117bvXt3myYATAlMpU+YMIGJNk6WPoY7Ns2j8c6oX/0vQoX0lIv/nTx5
sr58jQaTfZV/WVlZUFDQ2LFjmbZfunSJJTho8ikpKTGlTEhIIMMVK1agENgE
V27THnIkvboG4e/vj1XEV69ezUJEQnJy8qFDh1AIxMnKpp3HcHjHgjNEAEiQ
IMF1EAHQIKmDAsC7MCuPjY11thZtgDfX/yIPSktLHaY0PhuIbEAksCERdZYe
1+8wpb6KX/2ug23btuXk5OiJ9ZTsC30TUH/Zm8HBwUo5uIkIAAkSJLgOIgAa
JCIA7ElJSSkqKvJghlu2bGFunpaWFh4eXqUH9OLi4hYuXJiUlOT+Jkz/9QsN
biICQIIECa6DCIAGiQiA2oEp+dmzZ6v6vqDCwsIqzeWrhwgACRIkuA4iABok
IgAET36iQxCEBkqdGjS8NVo2MEQACIIgCIIFEQEgCIIgCBZEBIAgCIIgWBAR
AIIgCIJgQUQACIIgCIIFEQEgCIIgCBZEBIAgCIIgWBARAIIgCIJgQUQACIIg
CIIFEQEgCIIgCBZEBIDg7Zd6CoJQD6hTg4a3RssGhggAYZh8DEiCBAkuwzD5
GFBDRASAIAJAggQJroMIgAZJfRQAERERS5YsUfG8vDz+qnhwcPDLL788bty4
AQMGpKenGzfp27dvdna2cUlUVNT+/fsdrnLIxYsXDx06dOTIEX1JWVnZIY3y
8vIa1shNCgsLt2zZEh8f79lsRQBIkCDBdRAB0CCpjwKgY8eOjRo12rx5M/ED
Bw7wl8jRo0d///vf4x+JtGvXzuip4fbbbz916pRxib+//7p16xyuMkFBRUVF
FRUVkZGRdLwrV66o5WvWrOFvYmKiZ2vnmrCwsL1797pIkJycXNUdJAJAggQJ
roMIgAZJPRUAAwcO7Ny5s80gAPD+TZs2bd++Pf5aFwCDNGyal+/du/ett95K
AjXx//bbb8PDwx2uMrJjx464uDgVnz17Nh2voKCAeHp6+siRI319fWtt+q8Y
P378+fPnXSRAqISGhmZmZrqfpwgACRIkuA4iABok9VQA7Nu37957712+fLku
AKZNm/bSSy9lZWWVlJQoATBkyJAuXboUFxfbNC//008/nThx4v3333/nnXdY
0qdPnzlz5jhcpYMznThxIr/EyYfiRowYgesvLS2dP38+fnbx4sUOLUQkBAcH
r127dsuWLX5+frjjGTNmrFq16tKlSyEhIURIExkZmZSUROZkEh0dTXoWkjIq
KopVW7duzc7ODggIOHjw4JUrVwIDAwsLC1mCPSRbt24dS4jEx8evX7+eCAWx
4dSpU6l+Wlra0qVL3W9PEQASJEhwHUQANEjqqQDA74eFhTFnxwMqAbBo0aKe
PXuqBAiAAQMGPPjggxcuXFBL9PP8+NO2bdva/lcAmFbp4HCZ9av4QY1JkyYd
PnwYf33y5Ekm4+gQZ0bOnDmTbVNTU+mr+OjY2FjcOssXLlx46NAhvDlaIj8/
H13h4+OTl5eXmJjI1J48EQnnzp2jguXl5b6+vqREzKAi2DYuLm7FihVEtm/f
jrtHPCB71FkLpALZqusR7COlE9xEBIAECRJcB0aJ8PDwsF8QAdAwqL8CAPfX
qVOnQYMGORQAf/zjH2+77baUlBS1RPfyeMkmTZrYHAkAfZXO8ePHmearOJ2/
qKgoKCiIqToCICsri06IB3doIW6dtThuNANOnBZesGCBul2Qv+SzbNmyyZMn
6znPnTuX6uDTjTP3jIwMZvRM//HmrFJ1JEObpiLQIcQpBYVg004FjBkzRp3u
IKuRI0eqExfuIAJAggQJroOcAWiQ1F8BQISZdaNGjRwKAObCTLGRAbm5uTbN
y+PN8b9Dhw599tlnbf8rAEyrdAoKCnDBRGgifDSR5cuX+/v7l5aWMgfXPbhN
8/jKESsoffr06Sr9jh07ysrK8MiUkpaWxlT92LFjs2bNwqefOXMmISGBKf+o
UaOys7OpwrZt22zaow1sQhEojdjY2ClTpuzatQuxQbKTJ09SECoCeYAMwDwi
6rkAqrN7924ipJw2bZr77SkCQIIECa6DCIAGST0VAGoiDN26dVMCICQkxCgA
kpKSiHz00UePPfZYSUkJXr5NmzatW7du1aqV2rZv3766ADCtMjJhwgTm4Djr
SZMm5eTkxMTEpKamnjhxYuzYsSzBg6tkeOqwsDB9q8jISPy+2hwFgkdGAOCd
jx49Onr0aHz6ihUr5s+fj+8eN24cKefNm4fHZy3yYOPGjWrbNWvWMPdHNiA5
Vq1ahd/38fFhW8QG2mbZsmV79+5FACAJ+MUwMlFqh030RyPdQQSABAkSXAcR
AA2S+igAqgfVTE9P1x/ic3MVy/G5lWbOtnhwFwkuX75s007Oqwgllmvwt6io
yGiJnk+ZBhEEjDETm3aVX+VWWlqqliMP1Dl/cggODnZ2bcIhIgAkSJDgOogA
aJBYRwBUm5SUFKOPruMw/VfnAdxHBIAECRJcBxEADRIRAIIHv9AhCEJDpU4N
Gt4aLRsYIgAEQRAEwYKIABAEQRAECyICQBAEQRAsiAgAQRAEQbAgIgAEQRAE
wYKIABAEQRAECyICQBAEQRAsiAgAQRAEQbAgIgAEQRAEwYKIABAEQRAECyIC
QBAEQRAsiAgAQRAEQbAgIgAEQRAEwYKIABAEQRAECyICQBAEQRAsiAgAQRAE
QbAgIgAEQRAEwYKIABAEQRAECyICQBAEQRAsiAgAQRAEQbAgIgAEQRAEwYKI
ABAEQRAECyICQBAEQRAsiAgAQRAEQbAgIgAEQRAEwYKIAKh3sL+Mfy9duuTi
ryAIgiA4RARA/SI0NLRNmzbKy2dkZPTs2XPq1KkDBgwoLy83/TVtKMJAEARB
MCICoH6BZ2/evLny5h9//DF6gEi/fv3Wr19v+ktk7NixI0eOTExMXLFiRVhY
mHctFwRBEOoUIgDqHTfffLMSAJ06dYqPjycybNiw4cOHm/7GxsZ+9913OTk5
0dHR7733nndtFgRBEOoaIgDqHboAaNGixcmTJ4n4+fkx6zf9nTVrVmBg4Pjx
4ydOnBgXF5eenl5aWupl0wVBEIQ6gwiAeocuAF588UU15R8yZMhPP/1k+ou7
X7t2bXZ29sCBA3/44YeAgAAkgZ7JsWPHwjSCg4O///57dMKXX345ePDg2bNn
s3Dx4sVLlizJy8tzZgM5k4CUxl+1lRFjAtbqf93sQsXFxWpD+7KMJVa6yh6j
Mep3+/btbrb/ypUrHdZRLzEiIoLfAwcOuM7n3LlzujGXL192s3Q4f/68sQqQ
mprq/uawbNmyoqKiKm3iRWJiYtLS0pyt3bFjh7OeRuevYdGnT5/Wd25FRYVp
LfmzdunSpTUsxURhYaHe7Y3s3LnTzRwiIyPt+7zeRS9cuOBZgxWxsbHGvWAs
MTc3t9rZ7tmzhxz27t3rQVMFHREA9Y6bbrpJCQBfX9+FCxcS6dOnz8aNG01/
VeIff/xx165dL7/8MvFFixbpmURFRfXWeOWVV2644YYnnnji97//fdu2bfn7
1ltvvfnmmx07dnzwwQcdGjBjxoxrrrnm7bffJqXxl63sF+q/rFWRXr16sTkd
qdKa9uzZ87bbbnORrWmVwpkxCpMx+i8mbdu2zVh6QkKCvZ3Tpk1TdXdhDDpK
ZejCbQEN/pe//IVNWrRowY6otDV0/vSnP3Xo0EGvAruMskzPhrhgzJgxpEcu
ul+iF0FuXaPh8C5WtIF9V1Qt07lz51atWrlf0HXXXcdRYFxCk6qGUnsTFW3a
5I477njsscdYNXLkyGpUzRnPPPPMXXfdpbqTsadRkDt+cOzYsXoXNfLee++R
JzmTvwetVWzdupVCTUeiPpI89NBD1ctWHYOq/U+cOOFZmwWbCID6BqK6UaNG
06dPJ37mzJkePXoQ/+abb+z/Qnp6OqMW82iWBwYGZmZm2mdIGjyR/XJ6BcLA
4TzxvvvuQ1TUpBZPP/30hg0bKk3WsmVLhzZfDYYNG/b9998bl/j5+bVp02bV
qlXGhfiITZs2uZNhv379Zs+e7WxtVlYWQk5NKpnxNWnSxM2TAGxy4403solx
4VNPPbVu3Tp3Ngc8I1VAdbiZ3rv079+frksHDgoKsl87YMCAyZMnO9yQhmre
vHlOTo47pdD4v/rVr1q3bm1cuH79+i5duqj4kSNH7r77buPa06dP33LLLTbN
Sd1///3ulOIOFy9eZP867AxfffUV4s315uXl5WhmF0M0owHHtcevBo4bNw7z
nJX429/+1v65JHdg/jJ06FAidIDly5fXyETBESIA6jumKarDmbWLo8+ZAICu
XbuuXbvWuOTKlSuMikwiqmXp/w8H9U8//eQ6DdNnZlg1LMh9tmzZ8vjjjxuX
MOb8+9///vzzz/Ul+fn5TZs2dXPwnDVr1jvvvONs7ZIlS8hf/4sHVw9uVMqp
U6fatm1rWujr6/uvf/3Lnc3pHoz/+BfcREZGhjubeBcqy4CzbNmye++9NyUl
xbiKXo0LdnGahcl7ZGSkO6Ug8+jt7dq1O3TokL5w4MCBzKb1v8hRY4sFBwe/
8cYbygy0HIrO/Uq5YPXq1d26dXO4ij7zj3/8w/Xm6Oq//OUvrtP8+c9/rqGA
t+e9996bM2eOs7WMGMePH69GttRl69atRDgSKxU/QjUQAWBxXAiA//u///vP
f/5jXILXvuaaaxITE2tYKKPcs88+6zoNY/7f//73GhbkPvhEPKN+npn5I6N6
fHw89Q35BT8/v1dffdXNDJOTk++8805na3EuEydO1P/6+Ph8/fXX7mSLq7I/
e3/w4MF77rnHnc1jY2OVziGTlStXurNJ7UPjl5SUsEeYd6tZOUvefPNN9oWu
AS5cuIAYc+3shg8fbjqrw1YvvfSS/S0TH3/88aRJk8aPH08RONnXX3+dX+LG
lL169TJeRPvggw8CAgJUvGfPnnPnzi3RQCSbMqciGG9/4uighmkh3cDZBQWM
MV3UoLvu3bvXqPk//PBDZ6dEdL744osJEya4TlNV2BEuRAUHclXn76RfvHjx
b3/727KyMv7OnDmTBq+plYIdIgAsjgsBgLNgDMQR60tQ8kePHq15oYWFheT8
ySefML/+9NNPmVPPnz/f5Fu/++473GLNy3IfpuS//vWvH3nkkUcffZTpnroF
guGU0bufRvfu3at0A1Xz5s3vu+8++8sojMBUH4WgL9m3b5+b10lHjx7NbMh+
+e9+97v8/PxKNx81apS6QjRkyJARI0a4UyJ+p0r3KNacd999l/a5TmPevHn6
ciwfNmyYir/22mtvvfWW692xceNGclisERMTw5J//vOfaNqOHTsak6Eubrvt
NiUtoqOjIyMjo6Ki+E1KSjImW7t2LVbRKx7SIH769Gm1Sl2qxlv96le/Uld2
6NIFBQVqLQ6dAwdL8GVPPPHE7bffTjw7Oxsl9tRTT5ls7tSpkwtPSo/iqDxx
4sRJDTok5apnf0wVcUFoaCj9nI69Y8cOZ2mQMeS8Z88e11np5Tq7XKigzRFj
leaDilDDi6+vL6VTO2YKatWWLVuefvppd4wRqoQIAIvjQgDYtMugt9xyC+Mb
8czMzJtvvtlT5R46dChQA3fGdBj3yqCkr2WgZgRgAuip4tyBvk1N8cXxGqbr
7NXg3LlzVM10sYNB9cYbbzQ5F8ZbNy9Y01AOr4bjTUwPMgwePJg2NCV74403
1CuhlixZwry10uLKy8vJBHlWaUpPkZub26xZM4fXWbZu3Yp/tGnPQZDm4sWL
rrPCMX377bd9+vRRd9BFRES0bt0ad9miRQvddwOTaDcv4jP0Hf6FM2fOOEyD
5EtMTGR3UCJ9yabNf1HRDzzwAAZ06NCBon/44Qdm+sgAZJtxW3wontTF/ZxT
pky5/vrr77777j/+8Y/kjxz68ssvf/75Z7WWrkX+ldaCZpkwYYLqHqZ+qIPl
6BnUZqW5AZLDxRgCCDCOaNeZcPRhz/jx44mzO9SYo0NrI5zcMUaoEiIALI5r
AWDTLgSo23tMl609xYEDBxgzOeSZPanHhRghcZEuHkKsR2zatMl0bznzQYe3
S+EmaGFn+eCI33///RdffJFB0uFJGNYaH/O0aSeT7QVA+/btcV427cB356oB
e4d98cUXX1Sa0lMw5VfX1u1RaoS1ePCPPvqoStkuWLDglVdeufXWW23aBWv9
7L1N6+HfffddTWw28u6775I5Fs6ePfutt95iCbNyuvSgQYNef/31UaNG2bST
/yxkX7Rp08Z4c/u6deuqeou+ukqFBkBnoiHVLXNugknOXDxKA334wgsvOFxr
kijR0dEvvfSSi4LocpVKLNRL27Ztn3/++ezsbHSR/W1LCJJKJZ9QVUQAWJxK
BQC7mxGGgQINr/S5Z2E+0rRp08aNGz/33HPqjB8uQI2cDYCSkhLTTftdu3bV
T2wamTx5sguntmrVKmZAOAj7q8YK+9uwX3vtNeaYxnvkmFYzf1STawZY4sXF
xa7txxH07t37kUcecZ3Mg+Al1dOsDqG7YtK0adOqmu358+fpxrQJcWbiOCx2
DT7lN7/5TaUPbFYJvD+l0GhZWVk4MnJWU9fly5dTkFJfgNx95513+vTpM3fu
XH3bH3/80f5hw0rZunXrCI2pU6dWaUO6k/01CMXbb7+NgGnSpIn9qZizZ89S
O+NbEZBPrs/wk5imcP1aBnXTLCWy9+kD9gk6duzYunXrq/QSA8siAsDiVCoA
YPPmzRzjuBj7d6F4BHziww8/PGTIEDWMqNcYXo2CvMLf/va3Hj164GrxuYzw
zh5pP3LkyL333ussky+//NLX19dFKfY3BzLBZ3g3io3ExETjRAy37uJyMyP/
5cuXUX3MnXGU/3Xy3oZ9+/bFxcW5MKxKMJ9lalyT98a4gJana9m0B9NwNMHB
wa+88grVVLeZeYq9e/eiu2bMmGHT3tjAHlf3slIpo8ALCwvbvXv39OnTBwwY
oJYcP3780UcfNT13c1Wh7s2bN9fvVTDyhz/8ITk5+fHHHze9HINNELStWrXa
v3+/vrBz587qXn0XIIpcvzHp888/9/f3p4nYTQ5vTkDCDRo0iPZ0XZBQJUQA
WBx3BMDVhjGTAQRXxbH/6aef8otV3jXJg3DIMGqhAebMmYPfcXYXpXruwNks
qUOHDuqCsjNOnjxpfOiAgbpx48aDBw9GtukLQ0NDjWfX+/fv70xonTt3jr1w
ww038MucC0dgP8IzDoSHh9N5SGN8XK7a0FBt27Z1/5WMNeGll1567rnnXLyo
odqo2+dOnTpl077X2b17dxrTWeJjx46pvca0WumT6j0vX23olsZHGxQpKSl3
3HEHHfKLL74wPqsC3377rXpXmH6WRr24oKSkxHVB48ePd30hCbHKRIPqu7jj
dOXKlchp1wUJVUIEgMWpCwJAJzo6eubMma49XX0kMzOzRYsW7777LrVzkYyh
1eHTUngHNnd9+oW1eJCvv/6akZa4muzPnTuXQvU0P/zwg34XvU1705GzMZnh
/c0337RpQsKmXSw2OQIGfIrr2rUrwgMXcPvttyNymFmnpaVVuzvRFWvtzQ9M
vbHfUw/v1wSqjMNl8vvhhx/WfumIUrWjjfz8889IR5t244TxYhw7Go16/Phx
Hx+fIUOGqIVr166lG1Ra0J49e3796187u4Bl0x5jqfS2H/aXB+9DFmwiACxP
nRIADZi77777lltuYcbnIs3o0aMd3h8YGBjYt2/fSotgdPX19X377bdHjRq1
ZMmSXr167d69+9FHH7VpT/3jaPT70hUbN250dssZZhgn9fPmzVMnz3V27dr1
yCOP6BeI8/Pzyfz111+nXCLVu1lr1apVtTa/y8nJoVVrpyzXqAte3bp188pr
GbKzs5s3b266CHLPPfeofpKUlGS8U3TFihXqpeIRERHqbgqb9rCJm4/rfv/9
985uYd2/f7+bD2K0bt1anV0RPIIIAIsjAqB26NOnj/09+Sa2bdvWuXNn++XP
PvssY6+bBTE4M0ozZ8eDM0+/4YYbGHKZuKWmppreq3zu3DnmUw7POSMM9M9J
2LTx+YEHHjAmwHuaZqwFBQU33njj119/3aJFi+p9ugXd8u2331Zjw3rN0qVL
1ccOKj2LfpXo1KmTekmCgn193333qTh9o0mTJvpNAl988YW6ooQLaNeuHRGU
Q8uWLd33yN98843D2wUnTZr0ySefuJMDIlM9xyp4BBEAFkcEQO0wZ84cfdLk
DI5E/dVnOuq5ePdfxcOcDnd/1113qRvOu3Tp4u/v//bbbztMjN4wDv6quIqK
Cko0no/FsOuvv95ow0cffWR/K/6DDz745z//+aWXXlqwYIGb1hp58803Xdz/
34BZs2ZNpW/vuXqEhIQYnwXAQRtfStm1a1ddCnbo0EF9b1Q9j3nixAl0qekp
V9fQ2R577DH75T179sQMd3IYP3688e3cQg0RAWBxRADUKdq2bWt6Ue2ECROc
PRfvjNtvv12/VMqc+oUXXjA+9m7Ex8dHXe21aXcRMEFjFr98+XLTZ3Hg4Ycf
Ns7r//KXv9jf/P/ZZ5+pt9OYXsDrkMLCQtPj5Pfff7/xVfxC7cB+p+VjY2PV
30ceeUSP27SX8Kt3FyQlJTVv3lw/X4QCRBM6O6XvDPZ406ZNz58/bzKgcePG
zl6sZILxqkWLFp59cMPKiACwOCIA6hTPPPOMcUqelpaGK6/qMxHM39UZWpv2
aXhGaeNDW0YOHjzIWvWaeuZWSIUlS5Ywp7N/U8F//vMfhm711hqG3xtuuMH+
HQJoFXJDP7jzEQd1z4D+t7S01P7sh1A7jBgxQr0K6ezZszfddJNxL6gvEKle
5PoWVjd59dVXjV9ounLlSocOHVq2bOl+Dl26dFmzZk3NLRFsIgAsjwiAOkX/
/v2NX1X76quv3HmJugvUC3BcPFy2aNEidXNg165d1TeaHb6KloE6IiLilltu
CQ0N/aeGswyZEpq+WWMPguSuu+5i2Nc/iLBixYqr8Z16wR02btyo3rRP3+vT
p49xVUpKSps2bVjr/vemXUN/1p8gsGna49FHH63SC0amTZsmHwbyFCIALI4I
gDoF46HxC4z4RDc/E1wTPv7444CAgObNm1f6Bp7MzEzUwvfff2//zTsd9UDi
Z5995iKfn3766Ztvvhk3bhyeRT1K0KtXr6vxVL7gDuobBEz8X3/9dfvXAjRp
0uS66677r5M3QVUVhITxe8d///vfp0+fXqUc9u7d+6c//ckjxggiACyOCIA6
BcOv/uQ1B+aNN97o4iNrnmLGjBnM++yv+1ebjIwM5ISz9znMmjXr+uuvVy/8
GTRokL+/v/q2r7zl1Ys8+OCDe/bsadasmekCvU17TMD1Z5erREFBAYrilVde
QSKiFVu2bFnVK1zqapGnBInFEQFgcUQA1Cl27typ3ya9e/fuhx9+uBYKZUrV
pk0bxmQP5jlw4EDTu4MUxcXF11xzjbqZ3KZ9FLJdu3bz5s2r9GtxwlVFfTrq
8ccft181e/Zs12/xrSotWrRAA9C3KfGuu+6qRg4IEo4UD5pkWUQAWBwRAHWK
rKysW265RcUnTJhQO5/hU6/1M156qDmLFy92+EkX+w/e3XnnnY8++mhERIQH
SxeqwbRp02rhdFN5eTkFqcc9kBb2Jxzc4dNPP508ebKnTbMiIgAsjgiAOsWV
K1duvPFG9bWgHj16eHbm5QIEgGdH1MzMTIdvbUVm/N///Z9xyccff0zp9l+d
EwRnhISEuL7JRHATEQAWRwRAXePFF18MCwtDCTRv3jwnJ8fb5lQf3Pr9999v
urHw6aefVs8a6CQnJ8tTXYLgFUQAWBwRAHWNOXPmvPHGG7t3737ooYe8bUuN
2Lp1a48ePfRvCpSUlKgXBdi/QEAQBK8gAsDiiACoa6gn9//zn//o7+irvyxb
tuzVV19FzFCjBx98kLjDzx0KguAVRABYHBEAdRAcJR7TzZej1mXOnTvXvHnz
J554YubMmbXwQgNBEKqECACLIwJAuKrceeedjRs3lnf8CkIdRASAxREBIFxV
2rdvL+9tE4S6iQiABkBFRYX+OK16gsx9RAAIgiBYE+8KgHPnzgUGBlaaLCoq
Sn3OrF+/fmfPnq00PXnm5OSUlZWlpaW5acn27dvf1nAzvcJYREJCwsqVK6u0
ec357rvv2mgcPHgwIyOjZ8+eU6dOHTBggP3HX5wJAxEAgiAI1sS7AiA1NfWT
Tz6pNJm/v7/6FlWrVq1OnjxZaXryxC+npKTccccd7phx5cqV1q1bL1682Nnb
y51hLGLt2rWTJk2q0uY1pKCg4OWXX1ZfaLVpL1QJDQ21aTJJ3XA1duzYkSNH
JiYmrlixIiwszGEmIgAEQRCsSS0LgKKioh49etx8881t27adMmUK3qdr1642
7avTLH/sscdYNWTIkG+++ebWW2997rnnlLv/9ttvw8PDbb8IgIsXL7Zv375p
06a33367+ljqqVOn/vrXv44aNapTp07R0dHPPPPM6dOn33zzzWuvvZaUb7zx
xvfff697Z5LpzyYr3n33XZVyzJgxFD1s2LBXX331xRdf3LZtG87xxhtvvPvu
u6OiomzalP/rr7/GDASDj4+PsYhly5apb2pTqWeffbZZs2ZdunRRXzuldq+/
/jp/b7vtth9//LHarWdix44djzzyyG9+85uhQ4fatG92qFesYz/NEhsbiz05
OTk0yHvvvecsExEAgiAI1qSWBQBO/+mnny4uLiYTPObx48fbtGlj075Hds89
9+BwExISfvWrX+HxmcLjtkaMGMHaPn36qI+kKwFQWloaExOjMkEGZGRk4Gcb
NWr05Zdfrlu3Do+mkpEVKiIrK+v8+fPMiO+6666KigoqixdmUmy0Kikp6Xe/
+x0p0SdvvfXWfffdt2jRoi1btpDVgQMHSkpK8OBoAJs2ze/YsSM5Y3lAQICx
iFmzZjH1Js2//vWvAQMGZGZmDh48+J133lG1Y3MyPHr06E033eTZ17shA8iT
GrVo0ULpJT8/PyzBnsDAwPHjx0+cODEuLo66OHzbqggAQRAEa1LLAmDVqlW4
WmaseEP+GgUA03CVBvetiggKCmJmbbMTADbti6Ldu3e///77f/3rXzPtRQAY
vZhKZjw/j+tHAGzcuDE8PPypp54yWXXmzBn9veUIgHnz5qn4pUuXMBXFwrZN
mjRhCZ593Lhx+obGInQB8Ic//AHZYNN8K9leuXLFWLvHH38cM6rdgA754IMP
UD4vvviiOgMwZMiQn376CXePXMnOzh44cOAPP/yAXMFCfZOpU6feptGyZUsU
122/UNWLIIIgCEI9pfbvAcArffjhh7fccss333zjUAC0bdtWFREcHKw+EmoS
AIsXL27Xrh1u9Ny5c2gAdwSATTvz37t377/97W8hISEmk5wJgE8++QSvyjT/
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
    "], {{0, 1848}, {683, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Software" -> "Created with the Wolfram Language : www.wolfram.com"], 
      "Comments" -> 
      Association[
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "Creation Time" -> 
        DateObject[{2019, 7, 22, 15, 25, 26.}, "Instant", "Gregorian", -4.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{683, 1848},
  PlotRange->{{0, 683}, {0, 1848}}]], "Input"]], "Text",
 CellID->984259520]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing Transcriptome Mapped Data", "Subsection",
 CellID->964105434],

Cell["\<\
We will next preprocess the imported transcriptome data. We will first \
relabel the data, carry out quantile normalization and filtering and we will \
finally create time series.\
\>", "Text",
 CellID->1926312606],

Cell[CellGroupData[{

Cell["Labeling, Normalization and Filtering", "Subsubsection",
 CellID->433330108],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->62840614],

Cell["\<\
First, we illustrate how to change the outer keys. In this example, we notice \
that the sample numberings do not correspond to actual days, so we may want \
to adjust the outer keys to correspond to real times. \
\>", "Text",
 CellID->1020016945],

Cell["\<\
We form an association between samples to actual days of the study:\
\>", "MathCaption",
 CellID->381670302],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[76]:=",
 CellID->199112125],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1332666250],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "rnaExample"}], "]"}]}]], "Input",
 CellLabel->"In[77]:=",
 CellID->2014709187],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.73998`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[77], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[77]=",
 CellID->2120249074]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantile Normalization", "Subsubsubsection",
 CellID->1747728821],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["QuantileNormalization",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/QuantileNormalization"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "performs quantile normalization of ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->818482745],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileNormalization"]], 
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " can perform quantile normalization across various samples for multiple \
forms of data, including ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " and matrix data."
}], "Caption",
 CellID->1606736180],

Cell[TextData[{
 "We normalize the transcriptome data using the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileNormalization"]], 
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function. The Measurement is located in position 1, 1 in the list."
}], "MathCaption",
 CellID->1093504481],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaQuantileNormed", "=", 
  RowBox[{"QuantileNormalization", "[", 
   RowBox[{"rnaLongitudinal", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[78]:=",
 CellID->364761141],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[78], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[78]=",
 CellID->2073287215]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tag Missing and Low Values", "Subsubsubsection",
 CellID->1673762423],

Cell[TextData[{
 "Next, we will tag values of  less than 1 FPKM as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 ". Additionally, we will treat values of FPKM less than 5 as \"noise\" and \
set them all to a token value of 1."
}], "Text",
 CellID->529597330],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["LowValueTag",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/LowValueTag"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["valueCutoff", "TI"]}], "]"}], Cell[TextData[{
     "takes an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " and tags values in specified position as ",
     Cell[BoxData["Missing"], "InlineFormula"],
     "[] based on provided ",
     Cell[BoxData[
      StyleBox["valueCutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1118958870],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " allows us to tag low values."
}], "Caption",
 CellID->827431311],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], "1", Cell["\<\
Selection of which component of a list to use in the association or \
OmicsObject input values.\
\>", "TableText"]},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], "1", Cell["\<\
Selection of which list to use in the association or OmicsObject input values.\
\>", "TableText"]},
   {"OtherReplacement", 
    RowBox[{"_Missing", " ", ":>", " ", 
     RowBox[{"Missing", "[", "]"}]}], Cell["\<\
Replacement rule for any other kind of replacement in the data.\
\>", "TableText"]},
   {"ValueReplacement", 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell["\<\
Value that specifies how tagged data points will be replaced.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->29072],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->956870455],

Cell[TextData[{
 "We first use  ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to tag values of 0 as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[]:"
}], "MathCaption",
 CellID->1372190648],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaZeroTagged", "=", 
  RowBox[{"LowValueTag", "[", 
   RowBox[{"rnaQuantileNormed", ",", "0"}], "]"}]}]], "Input",
 CellLabel->"In[79]:=",
 CellID->581335803],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 79, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 79, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 79, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[79], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[79]=",
 CellID->1591346998]
}, Open  ]],

Cell[TextData[{
 "We next use  ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " again to set all FPKM values <1 to unity:"
}], "MathCaption",
 CellID->351193473],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaNoiseAdjusted", "=", 
  RowBox[{"LowValueTag", "[", 
   RowBox[{"rnaZeroTagged", ",", "1", ",", 
    RowBox[{"ValueReplacement", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[80]:=",
 CellID->1223638755],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[80], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[80]=",
 CellID->1007655648]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1524282659],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->222118196],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["FilterMissing",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilterMissing"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["percentage", "TI"]}], "]"}], Cell[TextData[{
     "filters out data from ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", retaining data across the datasets with a ",
     Cell[BoxData[
      StyleBox["percentage", "TI"]], "InlineFormula"],
     " of data points not missing."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1425592616],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " allows the removal of data marked as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], and retains only data with measurements available for a certain \
percentage of samples."
}], "Caption",
 CellID->460047533],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"MininumPoints", "3", Cell[
    "Minimum number of datapoints to keep.", "TableText"]},
   {"Reference", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "Select a reference outer key for which should remove dataset if the \
reference point has a ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     " value."
    }], "TableText"]},
   {"ShowPlots", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[
    "Whether to show summary plots.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2081738160],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->969678196],

Cell["\<\
In this dataset we will use a reference point, day \"255\" which was a \
healthy measurement. \
\>", "Text",
 CellID->2046575969],

Cell["\<\
Hence, we filter out data where the reference point \"255\" is missing and \
retain data with at least 3/4 points available:\
\>", "MathCaption",
 CellID->132360816],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaFiltered", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"rnaNoiseAdjusted", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[81]:=",
 CellID->1942659867],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6719999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6719999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.5, 0}, {0.5, 18427.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{35.65072057646116, 
           133.66873498799035`}, {-48.97193256023674, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 18427]& ,
        TagBoxNote->"18427"],
       StyleBox["18427", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18427, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 6841.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{133.16873498799035`, 231.18674939951956`}, {
           24.448647134884688`, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6841]& ,
        TagBoxNote->"6841"],
       StyleBox["6841", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6841, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-0.54, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{-0.5, 1.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[81]:=",
 CellID->1221241714],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "18427"}], ",", 
     RowBox[{"1", "\[Rule]", "6841"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[81]:=",
 CellID->1908272819],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$45449$45555 = False, DynamicChart`click$45466$45555 = 
       False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.440497565477732, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 18427]& , TagBoxNote -> "18427"], 
                    StyleBox["18427", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[18427, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$45449$45555, 
                    FEPrivate`Not[DynamicChart`click$45449$45555]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$45449$45555, {{{1., 0.}, {0., 1.}}, {
                    0.13191433757046722`, 0.15032833247044558`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$45449$45555}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.440497565477732}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 6841]& , 
                    TagBoxNote -> "6841"], 
                    StyleBox["6841", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[6841, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$45466$45555, 
                    FEPrivate`Not[DynamicChart`click$45466$45555]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$45466$45555, {{{1., 0.}, {0., 
                    1.}}, {-0.1319143375704672, -0.1503283324704456}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$45466$45555}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["18427", {}, StripOnInput -> False], 
                    TraditionalForm], {0.43971445856822405`, 
                    0.5010944415681519}]}}}, StatusArea[#, 18427]& , 
                 TagBoxNote -> "18427"], 
                StyleBox["18427", {}, StripOnInput -> False]], Annotation[#, 
                Style[18427, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$45449$45555, 
                  FEPrivate`Not[DynamicChart`click$45449$45555]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$45449$45555, {{{1., 0.}, {0., 1.}}, {
                0.13191433757046722`, 0.15032833247044558`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$45449$45555}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["6841", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.4397144585682239, \
-0.501094441568152}]}}}, StatusArea[#, 6841]& , TagBoxNote -> "6841"], 
                StyleBox["6841", {}, StripOnInput -> False]], Annotation[#, 
                Style[6841, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$45466$45555, 
                  FEPrivate`Not[DynamicChart`click$45466$45555]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$45466$45555, {{{1., 0.}, {0., 
                1.}}, {-0.1319143375704672, -0.1503283324704456}}, {{1, 0}, {
               0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$45466$45555}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}], 
   FormBox[
    FormBox[
     TemplateBox[{"0", "1"}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[81]:=",
 CellID->1820484635]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[81], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[81]=",
 CellID->1685741636]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Transcriptome Time Series", "Subsubsection",
 CellID->267016150],

Cell[TextData[{
 "We can now create time series for each of the genes. MathIOmica provides \
functions to facilitate the process, such as ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CreateTimeSeries"]], "paclet:MathIOmica/ref/CreateTimeSeries"},
   
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeExtractor"]], "paclet:MathIOmica/ref/TimeExtractor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". The functions assume an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " as an input for which times have been used as the sample labels (outer \
keys)."
}], "Text",
 CellID->94668970],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     RowBox[{
      ButtonBox["CreateTimeSeries",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/CreateTimeSeries"], "[", 
      StyleBox["omicsObject", "TI"], "]"}], " "}], Cell["\<\
creates a time series list across an OmicsObject using outer keys as times.\
\>", "TableText"]},
   {
    RowBox[{
     ButtonBox["TimeExtractor",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeExtractor"], "[", 
     StyleBox["omicsObject", "TI"], "]"}], Cell["\<\
extracts a list of sorted times from an OmicObject's outer keys.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1824801338],

Cell[TextData[{
 "We extract the times for the filtered RNA data using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeExtractor"]], "paclet:MathIOmica/ref/TimeExtractor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->2019621014],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesRNA", "=", 
  RowBox[{"TimeExtractor", "[", "rnaFiltered", "]"}]}]], "Input",
 CellLabel->"In[82]:=",
 CellID->643857816],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[82]=",
 CellID->15810684]
}, Open  ]],

Cell["\<\
For each gene we now extract a time series (list of values) corresponding to \
these times:\
\>", "MathCaption",
 CellID->148216279],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesRNA", "=", 
  RowBox[{"CreateTimeSeries", "[", "rnaFiltered", "]"}]}]], "Input",
 CellLabel->"In[83]:=",
 CellID->2137454280],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "2.294595133333334`", ",", "1", ",", "4.676944000000001`", ",", 
              "4.481310666666667`", ",", "4.955066666666666`", ",", "1", ",", 
              "1.2572603333333332`", ",", "2.1476724666666676`", ",", 
              "1.932187333333333`", ",", "1", ",", "2.582170666666667`", ",", 
              "2.3130066666666664`", ",", "4.102843333333334`", ",", 
              "3.8092893333333335`", ",", "1.4547106666666665`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "5.916647999999999`", ",", "4.320814`", ",", 
              "3.195994666666667`", ",", "3.6416366666666664`", ",", 
              "2.7327000000000004`", ",", "2.134606133333333`", ",", 
              "2.1716795999999996`", ",", "3.2342906666666664`", ",", 
              "1.8957593333333331`", ",", "3.0267020000000002`", ",", 
              "4.340044000000001`", ",", "7.270013333333333`", ",", 
              "2.011321133333333`", ",", "9.277005333333333`", ",", 
              "7.5441486666666675`"}], "}"}]}], ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[83], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[83]=",
 CellID->344747750]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Take Log Ratios Compared to Reference in Transcriptome Time Series\
\>", "Subsubsection",
 CellID->1837977213],

Cell["\<\
Next, we want to use log ratios of expression at any time point compared to a \
healthy datapoint. \
\>", "Text",
 CellID->1135789927],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SeriesApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/SeriesApplier"], "[", 
     StyleBox[
      RowBox[{"function", ",", "data"}], "TI"], "]"}], Cell[TextData[{
     "applies a given ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     ", an association of lists, implementing masking for ",
     Cell[BoxData["Missing"], "InlineFormula"],
     " values."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1719166110],

Cell["Applying a function to a series with Missing data.", "Caption",
 CellID->1779824032],

Cell[TextData[{
 "We first use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement the logarithm:"
}], "MathCaption",
 CellID->1087636944],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesRNALog", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Log", ",", "timeSeriesRNA"}], "]"}]}]], "Input",
 CellLabel->"In[84]:=",
 CellID->533314544],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.8305564154590727`", ",", "0", ",", "1.5426449051847884`", ",",
               "1.499915563163511`", ",", "1.6004106221145828`", ",", "0", 
              ",", "0.22893501503264826`", ",", "0.7643846820900576`", ",", 
              "0.6586526945127277`", ",", "0", ",", "0.9486303888715844`", 
              ",", "0.83854826550484`", ",", "1.411680229288034`", ",", 
              "1.3374426450561796`", ",", "0.3748070263246455`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1.7777700723187606`", ",", "1.4634438104320098`", ",", 
              "1.1618983591500285`", ",", "1.2924332142933417`", ",", 
              "1.0052901314367368`", ",", "0.7582821487875812`", ",", 
              "0.7755008773783016`", ",", "1.1738096354916885`", ",", 
              "0.63961946188012`", ",", "1.107473577885762`", ",", 
              "1.46788448630977`", ",", "1.9837581255648373`", ",", 
              "0.698791786422256`", ",", "2.2275387935694635`", ",", 
              "2.0207722517470934`"}], "}"}]}], ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 84, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 84, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 84, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[84], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[84]=",
 CellID->1534941352]
}, Open  ]],

Cell[TextData[{
 "Now we need to compare  to use log ratios of expression at any time point \
compared to a healthy datapoint. We can use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesInternalCompare"]], 
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->440466924],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SeriesInternalCompare",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/SeriesInternalCompare"], "[", 
     StyleBox["associationOfLists", "TI"], "]"}], Cell[TextData[{
     "compares each value in each list of ",
     Cell[BoxData[
      StyleBox["associationOfLists", "TI"]], "InlineFormula"],
     " to an internal reference value in the list, if the reference point \
itself is not ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1719094828],

Cell["\<\
Comparing values in a series to an internal reference point in the series.\
\>", "Caption",
 CellID->581787458],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"CompareFunction", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MatchQ", "[", 
         RowBox[{
          RowBox[{"Head", "[", "#2", "]"}], ",", "Missing"}], "]"}], ",", 
        RowBox[{"Missing", "[", "]"}], ",", 
        RowBox[{"(", 
         RowBox[{"#1", "-", " ", "#2"}], ")"}]}], "]"}], "&"}], ")"}], Cell[
    TextData[{
     "The function is used by a ",
     ButtonBox["Query",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Query"],
     " operation on non-missing input data. Namely: ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Query", "[", 
        RowBox[{"All", ",", 
         RowBox[{
          RowBox[{"CompareFunction", "[", 
           RowBox[{"#", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "ComparisonIndex", "]"}], "]"}]}], "]"}], "&"}]}], 
        "]"}], "@"}]], "Input"]
    }], "TableText"]},
   {"ComparisonIndex", "1", Cell["\<\
List position of list value that will be used as a reference data point.\
\>", "TableText"]},
   {"DeleteRule", 
    RowBox[{"{", 
     RowBox[{"Head", ",", " ", "Missing"}], "}"}], Cell[TextData[{
     Cell[BoxData["DeleteRule"], "InlineFormula"],
     " allows the customization of how to select values for the reference \
data point for which its key should be deleted.  The ",
     Cell[BoxData["DeleteRule"], "InlineFormula"],
     " value takes the structure ",
     Cell[BoxData[
      RowBox[{"deleteRuleOptionValue", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{
            Cell[
             TextData["MatchQ"]], "paclet:ref/MatchQ"},
           "RefLink",
           BaseStyle->{"InlineFormula"}], "first", " ", "argument"}], ",", 
         RowBox[{
          TemplateBox[{
            Cell[
             TextData["MatchQ"]], "paclet:ref/MatchQ"},
           "RefLink",
           BaseStyle->{"InlineFormula"}], "second", " ", "argument"}]}], 
        "}"}]}]], "InlineFormula"],
     ".\nThe ",
     ButtonBox["MatchQ",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/MatchQ"],
     " function referred to here is implemented by ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["SeriesInternalCompare"]], 
        "paclet:MathIOmica/ref/SeriesInternalCompare"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " internally, and uses the ",
     Cell[BoxData["deleteRuleOptionValue"], "InlineFormula"],
     " as:\n",
     Cell[BoxData[
      RowBox[{"MatchQ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"deleteRuleOptionValue", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"reference", " ", "comparison", " ", "value"}], "]"}], ",", 
        RowBox[{"deleteRuleOptionValue", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]], "InlineFormula"],
     "\nThe default removes the corresponding key if the value used for \
reference in the comparison is actually ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     ", i.e. the comparison reference point has ",
     ButtonBox["Head",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Head"],
     " that matches ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1460313503],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesInternalCompare"]], 
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->2045927005],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->1398268181],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesRNALog", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[85]:=",
 CellID->779768946],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.8305564154590727`", ",", "0", ",", "1.5426449051847884`", ",",
               "1.499915563163511`", ",", "1.6004106221145828`", ",", "0", 
              ",", "0.22893501503264826`", ",", "0.7643846820900576`", ",", 
              "0.6586526945127277`", ",", "0", ",", "0.9486303888715844`", 
              ",", "0.83854826550484`", ",", "1.411680229288034`", ",", 
              "1.3374426450561796`", ",", "0.3748070263246455`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.31432626188675084`", ",", "0.`", ",", 
              RowBox[{"-", "0.3015454512819813`"}], ",", 
              RowBox[{"-", "0.1710105961386681`"}], ",", 
              RowBox[{"-", "0.45815367899527293`"}], ",", 
              RowBox[{"-", "0.7051616616444286`"}], ",", 
              RowBox[{"-", "0.6879429330537081`"}], ",", 
              RowBox[{"-", "0.2896341749403213`"}], ",", 
              RowBox[{"-", "0.8238243485518898`"}], ",", 
              RowBox[{"-", "0.3559702325462477`"}], ",", 
              "0.004440675877760203`", ",", "0.5203143151328276`", ",", 
              RowBox[{"-", "0.7646520240097537`"}], ",", 
              "0.7640949831374537`", ",", "0.5573284413150836`"}], "}"}]}], 
           ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[85], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[85]=",
 CellID->1779061158]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Transcriptome Time Series", \
"Subsubsection",
 CellID->384896847],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1747726374],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedRNACompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "rnaCompared"}], "]"}]}]], "Input",
 CellLabel->"In[86]:=",
 CellID->755844152],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.21829331924794013`", ",", "0.`", ",", "0.4054499736632343`", 
              ",", "0.39421951450899434`", ",", "0.4206324102233949`", ",", 
              "0.`", ",", "0.06017048739059012`", ",", "0.20090154784186665`",
               ",", "0.1731122416739286`", ",", "0.`", ",", 
              "0.2493264424569924`", ",", "0.22039379964993433`", ",", 
              "0.3710288154208633`", ",", "0.35151711414050807`", ",", 
              "0.0985097078669049`"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.1564105847744402`", ",", "0.`", ",", 
              RowBox[{"-", "0.15005077872901465`"}], ",", 
              RowBox[{"-", "0.08509587199020531`"}], ",", 
              RowBox[{"-", "0.22797994802620195`"}], ",", 
              RowBox[{"-", "0.3508925636575009`"}], ",", 
              RowBox[{"-", "0.34232442368796406`"}], ",", 
              RowBox[{"-", "0.14412365801429614`"}], ",", 
              RowBox[{"-", "0.40993981010358166`"}], ",", 
              RowBox[{"-", "0.17713286793361294`"}], ",", 
              "0.0022097062671921166`", ",", "0.25891144382253184`", ",", 
              RowBox[{"-", "0.3804953156202253`"}], ",", 
              "0.3802181288269338`", ",", "0.2773298893139476`"}], "}"}]}], 
           ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[86], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[86]=",
 CellID->1063560421]
}, Open  ]],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ConstantSeriesClean",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantSeriesClean"], "[", 
     StyleBox["dataIn", "TI"], "]"}], Cell[
    "removes constant list series from an association of lists.", "TableText"]}
  }]], "DefinitionBox",
 CellID->1164836919],

Cell["Removing constant series.", "Caption",
 CellID->953171581],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1883423327],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaFinalTimeSeries", "=", 
  RowBox[{"ConstantSeriesClean", "[", "normedRNACompared", "]"}]}]], "Input",
 CellLabel->"In[87]:=",
 CellID->786900109],

Cell[BoxData["\<\"Removed series and returning filtered list. If you would \
like a list of removed keys run the command \
ConstantSeriesClean[data,ReturnDropped \[Rule] True].\"\>"], "Print",
 CellLabel->"During evaluation of In[87]:=",
 CellID->1253250375],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.21829331924794013`", ",", "0.`", ",", "0.4054499736632343`", 
              ",", "0.39421951450899434`", ",", "0.4206324102233949`", ",", 
              "0.`", ",", "0.06017048739059012`", ",", 
              TemplateBox[{"20"},
               "OutputSizeLimit`Skeleton"], ",", "0.1731122416739286`", ",", 
              "0.`", ",", "0.2493264424569924`", ",", "0.22039379964993433`", 
              ",", "0.3710288154208633`", ",", "0.35151711414050807`", ",", 
              "0.0985097078669049`"}], "}"}]}], ",", 
           TemplateBox[{"11783"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 87, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 87, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 87, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[87], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[87]=",
 CellID->859442849]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Transcriptome Data", "Subsection",
 CellID->1956292219],

Cell["\<\
In addition to the above, we want to create a resampled distribution for the \
transcriptome dataset prior to classification and clustering. In this \
subsection we first resample the imported and labeled transcriptome dataset, \
Then, we carry out the full analysis in this \"bootstrap\" dataset, to create \
a set of random time series. This bootstrap distribution of time series will \
be used to provide the cutoffs used in the time series classification in the \
following subsection.\
\>", "Text",
 CellID->673780035],

Cell[CellGroupData[{

Cell["Resampling the Transcriptome Data", "Subsubsection",
 CellID->576856357],

Cell[TextData[{
 "First, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["BootstrapGeneral"]], "paclet:MathIOmica/ref/BootstrapGeneral"},
   
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1399228810],

Cell[BoxData[GridBox[{
   {
    RowBox[{"BootstrapGeneral", "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["numberResampled", "TI"]}], "]"}], Cell[TextData[{
     "performs a resampling of the ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " data with replacement, and generates a new association structure with \
numbering corresponding to the ",
     Cell[BoxData[
      StyleBox["numberResampled", "TI"]], "InlineFormula"],
     " of new identities."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1661281776],

Cell["\<\
We can perform resampling of an OmicsObject to create a bootstrap dataset to \
be used for statistical considerations.\
\>", "Caption",
 CellID->2000128109],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->809854710],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"rnaLongitudinal", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[88]:=",
 CellID->2018927283],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "5.5402`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.00246625`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "12.7439`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99990"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99996", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.347246`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "12.2697`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 88, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 88, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 88, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[88], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[88]=",
 CellID->1775673247]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Transcriptome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->1483609541],

Cell[TextData[{
 "We normalize the transcriptome bootstrap data using the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileNormalization"]], 
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function:"
}], "MathCaption",
 CellID->214676973],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapQuantileNormed", "=", 
   RowBox[{"QuantileNormalization", "[", 
    RowBox[{"rnaBootstrap", ",", 
     RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[89]:=",
 CellID->303358251],

Cell[TextData[{
 "We use  ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to tag zero values as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[]:"
}], "MathCaption",
 CellID->375344567],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapZeroTagged", "=", 
   RowBox[{"LowValueTag", "[", 
    RowBox[{"rnaBootstrapQuantileNormed", ",", "0"}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[90]:=",
 CellID->1256666330],

Cell[TextData[{
 "We next use  ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LowValueTag"]], "paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " again to set all FPKM values <1 to unity:"
}], "MathCaption",
 CellID->1035495647],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapNoiseAdjusted", "=", 
   RowBox[{"LowValueTag", "[", 
    RowBox[{"rnaBootstrapZeroTagged", ",", "1", ",", 
     RowBox[{"ValueReplacement", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[91]:=",
 CellID->367863841],

Cell["\<\
Next, we filter out data where the reference point \"255\" is missing and \
retain data with at least 3/4 points available:\
\>", "MathCaption",
 CellID->61312748],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapFiltered", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"rnaBootstrapNoiseAdjusted", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[92]:=",
 CellID->1838688723],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6719999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6719999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.5, 0}, {0.5, 72929.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{35.65072057646117, 
           133.66873498799038`}, {-48.971932560236766`, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 72929]& ,
        TagBoxNote->"72929"],
       StyleBox["72929", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[72929, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 27071.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{133.16873498799038`, 231.1867493995196}, {
           24.454727201168545`, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 27071]& ,
        TagBoxNote->"27071"],
       StyleBox["27071", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[27071, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-0.54, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{-0.5, 1.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[92]:=",
 CellID->793810163],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "72929"}], ",", 
     RowBox[{"1", "\[Rule]", "27071"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[92]:=",
 CellID->1398994377],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$49768$49842 = False, DynamicChart`click$49774$49842 = 
       False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.4406715590832082`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 72929]& , TagBoxNote -> "72929"], 
                    StyleBox["72929", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[72929, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$49768$49842, 
                    FEPrivate`Not[DynamicChart`click$49768$49842]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$49768$49842, {{{1., 0.}, {0., 1.}}, {
                    0.1319274151555435, 0.15031685577598033`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$49768$49842}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.4406715590832082`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 27071]& , 
                    TagBoxNote -> "27071"], 
                    StyleBox["27071", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[27071, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$49774$49842, 
                    FEPrivate`Not[DynamicChart`click$49774$49842]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$49774$49842, {{{1., 0.}, {0., 
                    1.}}, {-0.13192741515554346`, -0.1503168557759804}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$49774$49842}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["72929", {}, StripOnInput -> False], 
                    TraditionalForm], {0.43975805051847827`, 
                    0.5010561859199344}]}}}, StatusArea[#, 72929]& , 
                 TagBoxNote -> "72929"], 
                StyleBox["72929", {}, StripOnInput -> False]], Annotation[#, 
                Style[72929, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$49768$49842, 
                  FEPrivate`Not[DynamicChart`click$49768$49842]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$49768$49842, {{{1., 0.}, {0., 1.}}, {
                0.1319274151555435, 0.15031685577598033`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$49768$49842}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["27071", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.43975805051847816`, \
-0.5010561859199345}]}}}, StatusArea[#, 27071]& , TagBoxNote -> "27071"], 
                StyleBox["27071", {}, StripOnInput -> False]], Annotation[#, 
                Style[27071, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$49774$49842, 
                  FEPrivate`Not[DynamicChart`click$49774$49842]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$49774$49842, {{{1., 0.}, {0., 
                1.}}, {-0.13192741515554346`, -0.1503168557759804}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$49774$49842}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}], 
   FormBox[
    FormBox[
     TemplateBox[{"0", "1"}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[92]:=",
 CellID->100043236]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "4.7468285833333335`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "11.660224000000001`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99992"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "11.26338088888889`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[92], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[92]=",
 CellID->1866962899]
}, Open  ]],

Cell["\<\
For each bootstrap member we now extract a time series (list of values) \
corresponding to the series times:\
\>", "MathCaption",
 CellID->274183705],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesBootstrapRNA", "=", 
  RowBox[{"CreateTimeSeries", "[", "rnaBootstrapFiltered", "]"}]}]], "Input",
 CellLabel->"In[93]:=",
 CellID->1853107120],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "4.7468285833333335`", ",", "1", ",", "204.56655238095237`", ",",
               "1", ",", "1", ",", "1", ",", "3.217454`", ",", "6.863135`", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
              "6.6208108333333335`", ",", "1.1237841555555557`"}], "}"}]}], 
           ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "28.96456190476191`", ",", "1", ",", "1", ",", 
              "9.124801666666668`", ",", "1", ",", "1", ",", "1", ",", 
              "1.018968911111111`", ",", "18.96063425`", ",", "1"}], 
             "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[93], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[93]=",
 CellID->1161877176]
}, Open  ]],

Cell[TextData[{
 "We use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement a logarithm:"
}], "MathCaption",
 CellID->373642571],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesBootstrapRNALog", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Log", ",", "timeSeriesBootstrapRNA"}], "]"}]}]], "Input",
 CellLabel->"In[94]:=",
 CellID->568506969],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1.557476728391234`", ",", "0", ",", "5.320893362054563`", ",", 
              "0", ",", "0", ",", "0", ",", "1.1685903635716475`", ",", 
              "1.9261643344309773`", ",", "0", ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "1.8902178448251994`", ",", 
              "0.11670170060702972`"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "3.3660730794475615`", ",", "0", ",", "0", ",", 
              "2.210996164072526`", ",", "0", ",", "0", ",", "0", ",", 
              "0.018791244561346027`", ",", "2.9423649482715892`", ",", "0"}],
              "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[94], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[94]=",
 CellID->600894861]
}, Open  ]],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->369078912],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesBootstrapRNALog", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[95]:=",
 CellID->1176501448],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1.557476728391234`", ",", "0", ",", "5.320893362054563`", ",", 
              "0", ",", "0", ",", "0", ",", "1.1685903635716475`", ",", 
              "1.9261643344309773`", ",", "0", ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "1.8902178448251994`", ",", 
              "0.11670170060702972`"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "3.3660730794475615`", ",", "0", ",", "0", ",", 
              "2.210996164072526`", ",", "0", ",", "0", ",", "0", ",", 
              "0.018791244561346027`", ",", "2.9423649482715892`", ",", "0"}],
              "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[95], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[95]=",
 CellID->1771820633]
}, Open  ]],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1458062219],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedBootstrapRNACompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "rnaBootstrapCompared"}], "]"}]}]], "Input",
 CellLabel->"In[96]:=",
 CellID->715818816],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.24812700467967763`", ",", "0.`", ",", "0.8476899256853185`", 
              ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.1861721728003447`", 
              ",", "0.3068639024333002`", ",", "0.`", ",", "0.`", ",", "0.`", 
              ",", "0.`", ",", "0.`", ",", "0.3011371428406584`", ",", 
              "0.01859215157747957`"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", "0.`", ",", 
              "0.`", ",", "0.`", ",", 
              TemplateBox[{"5"},
               "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
              "0.0037675423468814012`", ",", "0.5899281714099865`", ",", 
              "0.`"}], "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 96, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 96, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 96, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[96], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[96]=",
 CellID->1492281749]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->841142010],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedBootstrapRNACompared", "]"}]}]], "Input",\

 CellLabel->"In[97]:=",
 CellID->188913869],

Cell[BoxData["\<\"Removed series and returning filtered list. If you would \
like a list of removed keys run the command \
ConstantSeriesClean[data,ReturnDropped \[Rule] True].\"\>"], "Print",
 CellLabel->"During evaluation of In[97]:=",
 CellID->1269750011],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.24812700467967763`", ",", "0.`", ",", "0.8476899256853185`", 
              ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.1861721728003447`", 
              ",", "0.3068639024333002`", ",", "0.`", ",", "0.`", ",", "0.`", 
              ",", "0.`", ",", "0.`", ",", "0.3011371428406584`", ",", 
              "0.01859215157747957`"}], "}"}]}], ",", 
           TemplateBox[{"99965"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", "0.`", ",", 
              "0.`", ",", "0.`", ",", 
              TemplateBox[{"5"},
               "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
              "0.0037675423468814012`", ",", "0.5899281714099865`", ",", 
              "0.`"}], "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 97, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 97, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 97, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[97], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[97]=",
 CellID->1143434638]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Transcriptome Time Series", "Subsection",
 CellID->834625544],

Cell[TextData[{
 "In this subsection we will classify the transcriptome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1375671789],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesClassification",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClassification"], "[", 
     RowBox[{
      StyleBox["data", "TI"], ",", " ", 
      StyleBox["setTimes", "TI"]}], "]"}], Cell[TextData[{
     "takes a ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " association (or list of lists) of values corresponding to intensities \
collected over time and classifies the values into classes (groups) that show \
distinct similar temporal patterns. ",
     Cell[BoxData["TimeSeriesClassification"], "InlineFormula"],
     " takes as inputs:\n",
     Cell[BoxData[GridBox[{
        {
         StyleBox["data", "TI"], Cell[TextData[{
          
          "Association with series as values, or a list of series, where the \
series contain information regarding time intensities/observations. Each \
series may include ",
          Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData["Missing"]], "paclet:ref/Missing"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          " data points and may be entered as list of ",
          Cell[BoxData["N"], "InlineFormula"],
          " signal intensities corresponding one-to-one to the ",
          Cell[BoxData["N"], "InlineFormula"],
          " ",
          Cell[BoxData[
           StyleBox["setTimes", "TI"]], "InlineFormula"],
          " with ",
          Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData["Missing"]], "paclet:ref/Missing"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          " inserted appropriately if the data is absent, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["X", "1"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "1"], ")"}]}]}], ",", 
             RowBox[{
              SubscriptBox["X", "2"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "2"], ")"}]}]}], ",", "...", ",", 
             RowBox[{
              SubscriptBox["X", "N"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "N"], ")"}]}]}]}], "}"}]]],
          
          ". Alternatively, each series data may be a list of pairs of values \
{{",
          Cell[BoxData[
           SubscriptBox["t", "1"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "1"]]],
          "},{",
          Cell[BoxData[
           SubscriptBox["t", "2"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "2"]]],
          "},. ..,",
          Cell[BoxData[
           RowBox[{"{", 
            SubscriptBox["t", "N"]}]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "N"]]],
          "}} for only existing measurements."
         }], "TableText"]},
        {
         StyleBox["setTimes", "TI"], Cell[TextData[{
          "A global complete set of all possible ",
          Cell[BoxData["N"], "InlineFormula"],
          
          " times during which all data series could have been collected in \
the window of the experiment, including times for which no values were \
reported or are missing, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["t", "1"], ",", 
             SubscriptBox["t", "2"], ",", "...", ",", 
             SubscriptBox["t", "N"]}], "}"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]]]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->628162865],

Cell["Classifying a set of time series based on temporal behavior.", "Caption",
 CellID->503663403],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AutocorrelationCutoffs", 
    RowBox[{"{", "0", "}"}], Cell[TextData[{
     "Cutoffs, for \"Autocorrelation\" and \"InterpolatedAutocorrelation\" \
methods, for different lags that will be used to filter out data series for \
which the lags are not within cutoffs. The list length corresponds to cuttofs \
at different lags, with the ith lag cutoff provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "jk"]}], "}"}]}], TraditionalForm]]],
     " up to ",
     Cell[BoxData["k"], "InlineFormula"],
     ", where ",
     Cell[BoxData[
      RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "  ", "n"}]], 
      "InlineFormula"],
     ", and typically ",
     Cell[BoxData[
      RowBox[{"n", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "setTimes", "]"}], "/", "2"}], "]"}]}]], 
      "InlineFormula"],
     ". The classification will only consider lags up to the length of the \
list provided. The cutoffs are user-provided and typically calculated through \
simulation."
    }], "TableText"]},
   {"AutocorrelationLogic", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "Option to return the autocorrelation logic list for each signal, with \
the default set to ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["False"]], "paclet:ref/False"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". If set to True, a logic vector is returned indicating whether or not \
at a particular lag the autocorrelation for a signal is above or below the ",
     Cell[BoxData["AutocorrelationCutoffs"], "InlineFormula"],
     "."
    }], "TableText"]},
   {"AutocorrelationOptions", 
    RowBox[{"{", 
     RowBox[{
      ButtonBox["UpperFrequencyFactor",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/UpperFrequencyFactor"], " ", 
      "\[Rule]", "  ", "1"}], "}"}], Cell[TextData[{
     "Options that are used by the internal Autocorrelation function in the \
case that  the ",
     Cell[BoxData[
      RowBox[{"Method", "\[Rule]", " ", "\"\<Autocorrelation\>\""}]], 
      "InlineFormula"],
     " is set."
    }], "TableText"]},
   {"InterpolationDeltaT", "\"\<Auto\>\"", Cell["\<\
Time step used to grid the time window over which calculations will be \
performed. If set to \"Auto\" the step will correspond to dividing the span \
of the interval into a number of equal steps equal to the number of input \
time points.\
\>", "TableText"]},
   {"InterpolationOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "Options list for the internal Interpolation function used to \
interpolate between data points that have ",
     Cell[BoxData["Missing"], "InlineFormula"],
     " values or uneven spacing."
    }], "TableText"]},
   {"LombScargleCutoff", "0", Cell["\<\
Cutoff value for \"LombScargle\" method, for filtering the highest intensity \
observed in the power spectrum. The cutoff is user-provided and typically \
calculated through simulation. \
\>", "TableText"]},
   {"LombScargleOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PairReturn", "\[Rule]", "  ", "False"}], ",", 
      RowBox[{"NormalizeIntensities", "\[Rule]", " ", "True"}]}], "}"}], Cell[
    TextData[{
     "Options that are used by the internal LombScargle function if the case \
that the ",
     Cell[BoxData[
      RowBox[{"Method", "\[Rule]", " ", "\"\<LombScargle\>\""}]], 
      "InlineFormula"],
     " is set."
    }], "TableText"]},
   {
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], "\"\<LombScargle\>\"", Cell["\<\
Selection of which algorithm to use in the classification scheme.\
\>", "TableText"]},
   {"ReturnAllSpikes", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Option whether each signal may maintain unique membership to each spike \
class, or be allowed to belong to multiple classes. Used in \"Autocorrelation\
\" and \"InterpolatedAutocorrelation\" methods. If set to False, first spike \
maxima are classified, and only signals found not to belong to spike maxima \
are then considered for membership in the spike minima class.\
\>", "TableText"]},
   {"ReturnData", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell["\<\
If set to True will return input keys to data associations in the \
classification. If set to False will only return the keys of the input data \
in the classification.\
\>", "TableText"]},
   {"ReturnModels", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Whether to return the models as well as the classification information for \
the input data. The data is returned as an association with the  key \
\"TimeSeriesClasses\" for classification groups and one of the following: (i) \
\"Models\" for model-based methods, (ii) \"LombScargle\" for periodograms in \
the \"LombScargle\" method, (iii) \"Autocorrelations\" for autocorrelation \
based methods.\
\>", "TableText"]},
   {"SpikeCutoffs", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"1", " ", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{".99", ",", 
         RowBox[{"-", "99"}]}], "}"}]}], ",", " ", 
      RowBox[{"2", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{".99", ",", 
         RowBox[{"-", "99"}]}], "}"}]}]}], "|>"}], Cell[TextData[{
     "Association with number, ",
     Cell[BoxData["n"], "InlineFormula"],
     ", of data points as keys, and values corresponding to cutoffs, in the \
form ",
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{"n", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Cutoff", "n"]}], ",", 
          RowBox[{"Minimum", " ", "Spike", " ", 
           SubscriptBox["Cutoff", "n"]}]}], "}"}]}], "|>"}]], "InlineFormula"],
     " used to call spike maxima and minima for a time series with this \
number of datapoints. The values are provided by the user depending on data \
approach based on simulation. The default values are only place-holders and \
should be replaced by real values. The association must have corresponding \
keys for all lengths of input datasets, so that ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Keys", "[", 
        RowBox[{"OptionValue", "[", "SpikeCutoffs", "]"}], "]"}], 
       "\[Element]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Possible", " ", "lengths", " ", "of", " ", "numeric", " ", "data"}],
          "}"}], "."}]}]], "InlineFormula"],
     " ,  i.e. all possible lengths of series constructed by excluding ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Missing"]], "paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or other non-numeric values)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->495990132],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1722114517],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " uses multiple methods to classify data. The periodogram/autocorrelation \
methods used use cutoffs from simulation/user-provided values, to assess \
class membership based on statistical significance. In this tutorial we will \
use the \"LombScargle\" method, to classify data based on a Lomb-Scargle \
computation of a periodogram. The data is classified based into classes major \
(highest intensity) frequencies based on the generated periodogram for a \
signal, when the intensity of this frequency is above an intensity threshold \
cutoff. Additionally, data that displays spikey behavior in the real \
intensity, that is not classified into any frequency classes, is classified \
as a SpikeMaximum or SpikeMinimum if the spike is higher or lower \
respectively than what one would expect from a random signal."
}], "Text",
 CellID->1268036459],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<LombScargle\>\"", Cell[TextData[{
     "Classification based on periodograms (power spectra) generated by a \
Lomb-Scargle computation as implemented internally by the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function. The data is classified into classes of major (highest \
intensity)  frequencies and spikes (maxima or minima in real signal \
intensity), depending on cutoffs typically provided by simulation and passed \
to the function by the ",
     Cell[BoxData["LombScargleCutoffs"], "InlineFormula"],
     " and ",
     Cell[BoxData["SpikeCutoffs"], "InlineFormula"],
     " option values. The returned {computed classification vector} for this \
method is the intensity list of the periodogram for each signal."
    }], "TableText"]},
   {"\"\<Autocorrelation\>\"", Cell[TextData[{
     "Classification based on autocorrelations generated by a Lomb-Scargle \
approach using an inverser Fourier transform of spectral intensities, as \
implemented through the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Autocorrelation"]], 
        "paclet:MathIOmica/ref/Autocorrelation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function. The data is classified into autocorrelations at different \
lags and spikes (maxima or minima) classes, depending on cutoffs typically \
provided by simulation. The returned {computed classification vector} for \
this method is the autocorrelation list for each signal."
    }], "TableText"]},
   {"\"\<InterpolatedAutocorrelation\>\"", Cell[TextData[{
     "Classification based on autocorrelations generated directly in time, \
with ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Missing"]], "paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " data handled through interpolation. The data is classified into \
autocorrelations at different lags and spikes (maxima or minima) classes \
depending on cutoffs typically provided by simulation. The returned {computed \
classification  vector} for this method is the autocorrelation list for each \
signal."
    }], "TableText"]},
   {"\"\<TimeSeriesModelAggregate\>\"", Cell[TextData[{
     "Classification based on model fitting of time series through ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesModelFit"]], "paclet:ref/TimeSeriesModelFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and all available models therein. The data is classified into \
aggregate model classes. The returned {computed classification vector} for \
this method is the actual input signal."
    }], "TableText"]},
   {"\"\<TimeSeriesModelDetailed\>\"", Cell[TextData[{
     "Classification based on model fitting of time series through ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesModelFit"]], "paclet:ref/TimeSeriesModelFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and all available models therein. The data is classified into model \
classes based on individual model degree parameters.  The returned {computed \
classification vector} for this method is the \"BestFitParameters\" for the \
model fit. If this list is empty an integer list is returned {token integer} \
- this is used in subsequent clustering applications."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1644998689],

Cell[TextData[{
 "Methods for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->788494545],

Cell[TextData[{
 "To create the cutoffs for the classification we will first use the \
bootstrap time series set created in the previous subsection, and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileEstimator"]], 
    "paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->1104163398],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["QuantileEstimator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/QuantileEstimator"], "[", 
     RowBox[{
      StyleBox["data", "TI"], ",", " ", 
      StyleBox["timepoints", "TI"]}], "]"}], Cell[TextData[{
     "obtains the quantile estimator following bootstrap for time series.  It \
takes as inputs:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["data", "TI"], Cell["\<\
Association or list with series as values, from which to generate a \
distribution.\
\>", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["timepoints", "TI"], Cell[
         "Timepoints over which the time series run.", "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}},
      GridBoxDividers->{"Rows" -> {{True, True, True}}}}]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->219567939],

Cell["\<\
Estimating  the quantile value that can be used as a cutoff for \
classification of time series based on bootstrap simulations.\
\>", "Caption",
 CellID->908945433],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AutocorrelationOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Specific options when calculating autocorrelations for the time series.\
\>", "TableText"]},
   {"InterpolationDeltaT", "\"\<Auto\>\"", Cell["\<\
Time step used to grid the time window over which calculations will be \
performed. If set to \"Auto\" the step will correspond to dividing the span \
of the interval into a number of equal steps equal to the number of input \
time points.\
\>", "TableText"]},
   {"InterpolationOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Options list for the internal Interpolation function used to interpolate \
between data points that have Missing values or uneven spacing.\
\>", "TableText"]},
   {"LombScargleOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PairReturn", " ", "\[Rule]", "  ", "False"}], ",", 
      RowBox[{"NormalizeIntensities", "\[Rule]", " ", "True"}]}], "}"}], 
    Cell["\<\
Specific options when calculating LombScargle periodograms for the time \
series.\
\>", "TableText"]},
   {
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], "\"\<LombScargle\>\"", Cell["\<\
Method of calculation. Choices include one of the following: \
{\"LombScargle\",\"Autocorrelation\", \
\"InterpolatedAutocorrelation\",\"Spikes\"}\
\>", "TableText"]},
   {"QuantileValue", "0.95", Cell["Which quantile to extract.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1624929440],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileEstimator"]], 
    "paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->639559181],

Cell[TextData[{
 "Depending on the cutoffs we would like to generate, we select the \
appropriate Method (also considering the Method that the downstream ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " will use)."
}], "Text",
 CellID->67687095],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<Autocorrelation\>\"", Cell[TextData[{
     "List of values corresponding to selected quantile of autocorrelations, \
with the ith lag quantile provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "ck"]}], "}"}]}], TraditionalForm]]],
     " up to k lags, where 1\[LessEqual] k \[LessEqual] n, and typically \
n=Floor[Length[timepoints]/2].  The method utilizes the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Autocorrelation"]], 
        "paclet:MathIOmica/ref/Autocorrelation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function internally."
    }], "TableText"]},
   {"\"\<InterpolatedAutocorrelation\>\"", Cell[TextData[{
     "List of values corresponding to selected quantile for autocorrelations, \
with the ith lag quantile provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "ck"]}], "}"}]}], TraditionalForm]]],
     " up to k lags, where 1\[LessEqual] k \[LessEqual] n, and typically \
n=(Length[timepoints]-1). The method utilizes an ",
     ButtonBox["Interpolation",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Interpolation"],
     " followed by a ",
     ButtonBox["CorrelationFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/CorrelationFunction"],
     " implementation to compute autocorrelations, i.e. missing data or \
uneven sampling is handled by data interpolation."
    }], "TableText"]},
   {"\"\<LombScargle\>\"", Cell[TextData[{
     "Single value corresponding to selected quantile of maximum peak \
intensity of periodogram. The method utilizes the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function internally."
    }], "TableText"]},
   {"\"\<Spikes\>\"", Cell[TextData[{
     "Association with number, n, of data points as keys, and values \
corresponding to quantiles for maxima and minima of the series, in the form ",
     
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{"n", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Quantile", "n"]}], ",", 
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Quantile", "n"]}]}], "}"}]}], "|>"}]], 
      "InlineFormula"],
     " . The keys are generated automatically so that so that ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Keys", "[", "output", "]"}], "\[Element]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Possible", " ", "lengths", " ", "of", " ", "numeric", " ", "data"}],
          "}"}], "."}]}]], "InlineFormula"],
     " ,  i.e. all possible lengths of input series constructed by excluding \
Missing or other non-numeric values)."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->131328315],

Cell[TextData[{
 ButtonBox["Method",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Method"],
 " selection and output for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileEstimator"]], 
    "paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->751094438],

Cell[TextData[{
 "The default output for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " is an ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Association"]], "paclet:ref/Association"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". The general output structure is for M output classes of each having ",
 Cell[BoxData[
  SubscriptBox["m", "i"]], "InlineFormula"],
 " members: "
}], "Text",
 CellID->1062814029],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "11"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "11"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "11"]}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["Member", "12"], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "12"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "12"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      " ", 
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"1", 
         SubscriptBox["m", "1"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   RowBox[{
    SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "21"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "21"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "21"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "22"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "22"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "22"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"2", 
         SubscriptBox["m", "2"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   " ", "...", ",", " ", 
   RowBox[{
    SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "M1"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M1"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M1"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "M2"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M2"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        SubscriptBox["Mm", "M"]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "|>"}]], "InlineFormula"]], "Text",
 CellID->2093893304],

Cell["\<\
Before we classify our transcriptome data, we estimate for the \
\"LombScargle\" Method a 0.95 quantile cutoff from the bootstrap \
transcriptome data:\
\>", "MathCaption",
 CellID->1669899255],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95RNA", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"rnaBootstrapFinalTimeSeries", ",", "timesRNA"}], "]"}]}]], "Input",\

 CellLabel->"In[263]:=",
 CellID->532996142],

Cell[BoxData["0.8602315900893768`"], "Output",
 CellID->177650624]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
transcriptome data:\
\>", "MathCaption",
 CellID->365627628],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95RNASpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"rnaBootstrapFinalTimeSeries", ",", "timesRNA", ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[264]:=",
 CellID->186560353],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"14", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.884016143838748`", ",", 
      RowBox[{"-", "0.3480693290704187`"}]}], "}"}]}], ",", 
   RowBox[{"15", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.858813122520236`", ",", 
      RowBox[{"-", "0.3376351832224358`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[264]=",
 CellID->811386742]
}, Open  ]],

Cell["\<\
Now we can classify the transcriptome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1987903082],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"rnaFinalTimeSeries", ",", "timesRNA", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95RNA"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95RNASpikes"}]}], "]"}]}]], "Input",
 CellLabel->"In[265]:=",
 CellID->136519148],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[265]:=",
 CellID->1026543908],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.08553735041954855`", ",", "0.2041353122187633`", ",", 
                   "0.21930279158524527`", ",", "0.3784958694491304`", ",", 
                   "0.5848999163284979`", ",", "0.34601221698539536`", ",", 
                   "0.5457352214922402`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
                   TemplateBox[{"7"},
                    "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
                   "0.07591897179810148`", ",", "0.`"}], "}"}]}], "}"}]}], 
              ",", 
              TemplateBox[{"821"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}], ",", 
           
           TemplateBox[{"7"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 265, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 265, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 265, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[265], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[265]=",
 CellID->755245404]
}, Open  ]],

Cell[TextData[{
 "The default output for TimeSeriesClassification is an Association with \
outer keys being the classification classes,  inner keys being the class \
members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". The general output structure is for M output classes of each having ",
 Cell[BoxData[
  SubscriptBox["m", "i"]], "InlineFormula"],
 " members: "
}], "Text",
 CellID->673783308],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "11"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "11"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "11"]}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["Member", "12"], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "12"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "12"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      " ", 
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"1", 
         SubscriptBox["m", "1"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   RowBox[{
    SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "21"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "21"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "21"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "22"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "22"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "22"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"2", 
         SubscriptBox["m", "2"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   " ", "...", ",", " ", 
   RowBox[{
    SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "M1"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M1"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M1"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "M2"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M2"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        SubscriptBox["Mm", "M"]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "|>"}]], "InlineFormula"]], "Text",
 CellID->594786925],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->1134620377],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "rnaClassification", "]"}]], "Input",
 CellLabel->"In[101]:=",
 CellID->2057374526],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[101]=",
 CellID->568030100]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->172558847],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", "rnaClassification"}]], "Input",\

 CellLabel->"In[266]:=",
 CellID->1093618079],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "822"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "5963"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "116"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "35"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "61"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[266]=",
 CellID->1781151258]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->47471690],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "rnaClassification"}]], "Input",
 CellLabel->"In[267]:=",
 CellID->1140260793],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"PADI4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AHDC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC28B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AGO1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JAK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C1orf52\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IARS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"URB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HSPA14\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"WBP1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PDZD8\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LOC102288414\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TRMT112\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DRAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CDK2AP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FAM168A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FLI1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EFCAB4B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EMG1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NDUFA12\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ELK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SSH1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C12orf49\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IPO5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TMCO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KIAA0586\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JKAMP\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PCNX\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EHD4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CLPX\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AAGAB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RCCD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FAM173A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LINC00921\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZC3H7A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GLG1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBTPS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TNFRSF13B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZNF207\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ACLY\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PSME3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TEX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKCA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ATP9B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBP\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ADNP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HOOK2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EMR3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SDHAF1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZNF529\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RPL18\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CTU1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GEMIN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GMCL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"COA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MRPS9\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GTF3C3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NDUFS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RALGAPA2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LOC284801\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SAMHD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SERINC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"USP25\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RUNX1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DSCR3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"THAP7\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAPK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PITPNB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EWSR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NPTXR\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TCF20\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ARPC4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STT3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SNRK-AS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC12\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKAR2A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GSK3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PTPLB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DNAJC13\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LRCH3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KLF3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ANTXR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GPRIN3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPP4B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PTGER4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NNT\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC125\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"POC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ERAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TBC1D22B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HACE1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SYNJ2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CYTH3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAG3L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAG3L3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MTERF\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBLAC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TRIM56\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AHCYL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RNF122\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ADAM9\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKDC\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AGO2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ERMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KDM4C\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FOCAD\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CEP78\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RC3H2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GTF3C4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZRSR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PDK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CASK\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DDX3X\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TIMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ARHGEF6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IDS\"\>", ",", "\<\"RNA\"\>"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[267]=",
 CellID->384783444]
}, Open  ]],

Cell[TextData[{
 "We may also want to know what these frequencies correspond to. The \
\"LombScargle\" method uses a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " transformation."
}], "Text",
 CellID->1070903617],

Cell[BoxData[GridBox[{
   {
    ButtonBox[
     RowBox[{"LombScargle", "[", 
      RowBox[{
       StyleBox["data", "TI"], ",", " ", 
       StyleBox["setTimes", "TI"]}], "]"}],
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/"], Cell[TextData[{
     "calculates the Lomb-Scargle power spectrum for time series ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " that runs over specified ",
     Cell[BoxData[
      StyleBox["setTimes", "TI"]], "InlineFormula"],
     ". It takes as input:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["data", "TI"], Cell[TextData[{
          
          "Time series (data as a list; list may be the value of a single key \
in an association). The series may include Missing data points. Data may be \
entered as list of N signal intensities corresponding one-to-one to the N \
setTimes with Missing inserted appropriately if the data is absent, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["X", "1"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "1"], ")"}]}]}], ",", 
             RowBox[{
              SubscriptBox["X", "2"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "2"], ")"}]}]}], ",", "...", ",", 
             RowBox[{
              SubscriptBox["X", "N"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "N"], ")"}]}]}]}], "}"}]]],
          ". Alternatively, the data may be a list of pairs of values {{",
          Cell[BoxData[
           SubscriptBox["t", "1"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "1"]]],
          "},{",
          Cell[BoxData[
           SubscriptBox["t", "2"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "2"]]],
          "},. ..,",
          Cell[BoxData[
           RowBox[{"{", 
            SubscriptBox["t", "N"]}]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "N"]]],
          "}} for only existing measurements."
         }], "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["setTimes", "TI"], Cell[TextData[{
          
          "A complete set of all possible N times during which data could \
have been collected in the window of the experiment, including times for \
which no data was collected,",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["t", "1"], ",", 
             SubscriptBox["t", "2"], ",", "...", ",", 
             SubscriptBox["t", "N"]}], "}"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}},
      GridBoxDividers->{"Rows" -> {{True, True, True}}}}]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1990717933],

Cell["\<\
Calculating the power spectrum of a (possibly unevenly sampled) time series.\
\>", "Caption",
 CellID->201079671],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"FrequenciesOnly", "False", Cell[TextData[{
     "Whether to return only the computation frequencies. An association of \
frequencies \"f\" ordered from low to high by index i is returned in the \
form:\n",
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<f1\>\"", "\[Rule]", " ", 
         SubscriptBox["frequency", "1"]}], ",", 
        RowBox[{"\"\<f2\>\"", "\[Rule]", " ", 
         SubscriptBox["frequency", "2"]}], ",", " ", "...", ",", 
        RowBox[{"\"\<fi\>\"", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["frequency", 
            RowBox[{"i", ",", "...", ","}]], "\"\<fn\>\""}], "\[Rule]", " ", 
          SubscriptBox["frequency", "n"]}]}]}], "|>"}]], "InlineFormula"]
    }], "TableText"]},
   {"NormalizeIntensities", "False", Cell[
    "Whether the intensities list should be normalized or not.", "TableText"]},
   {
    ButtonBox["OversamplingRate",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/OversamplingRate"], "1", Cell["\<\
Rate at which to oversample the time series using zero-padding.\
\>", "TableText"]},
   {"PairReturn", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Whether data should be returned as {frequency list,intensity list} or as \
pairs: {{frequency1,intensity1}, {frequency2, \
intensity2},...,{frequencyN,intensityN}.\
\>", "TableText"]},
   {
    ButtonBox["UpperFrequencyFactor",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/UpperFrequencyFactor"], "1", 
    Cell["\<\
Value \[GreaterEqual] 1,  by which to scale the upper Nyquist cutoff \
frequency and increase spectral resolution. \
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->3905959],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1222943503],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["True"]], "paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->661398041],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"rnaFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesRNA", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[104]:=",
 CellID->741518215],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[104]=",
 CellID->1561171098]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proteomic Data", "Section",
 CellID->1387790784],

Cell[CellGroupData[{

Cell["Importing OmicsObject Proteome Data", "Subsection",
 CellID->1225055698],

Cell[TextData[{
 "We now import the proteomics data example (for details on how to import \
such data please refer to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporter"]], "paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirect"]], 
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirectLabeled"]], 
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObjectCreator"]], 
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->72301240],

Cell["We import the proteomics OmicsObject MathIOmica example:", "MathCaption",
 CellID->1419719176],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", "\"\<proteinExample\>\""}], 
     "}"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[105]:=",
 CellID->458823941],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.937`", "}"}], ",", 
                 RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.073`", "}"}], ",", 
                 RowBox[{"{", "24", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.059`", "}"}], ",", 
                 RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5219"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"9"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 105, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 105, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 105, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[105], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[105]=",
 CellID->647445040]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->1754470356],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", "proteinExample"}]], "Input",
 CellLabel->"In[106]:=",
 CellID->285316335],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"14\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>", ",", "\<\"21\"\>"}], "}"}]], "Output",
 CellLabel->"Out[106]=",
 CellID->309147931]
}, Open  ]],

Cell["\<\
We notice that sample 8 is missing - this is because it was used as a \
reference in the proteomics experiment. Point 18 is missing as there was no \
sample for that time point. We will address this in the next section.\
\>", "Text",
 CellID->460190071],

Cell[TextData[{
 "We can get the expression raw data from any sample and entry. For example, \
the ",
 Cell[BoxData[
  SuperscriptBox["14", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["214", "th"]], "InlineFormula"],
 " entries in sample 12:"
}], "MathCaption",
 CellID->1259531385],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<12\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", "22"}], "}"}]}], "]"}], "@", 
  "proteinExample"}]], "Input",
 CellLabel->"In[107]:=",
 CellID->1197679216],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"A5PLN9\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1.057`", "}"}], ",", 
      RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"A6NGU5\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[107]=",
 CellID->1086334224]
}, Open  ]],

Cell[TextData[{
 "The keys correspond to UniProt accessions, and have been tagged with a \
\"Protein\" label as well. The  values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example: ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "relative", " ", "intensity", " ", "compared", " ", "to", " ", 
       "reference"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "number", " ", "of", " ", "unique", " ", "peptides", " ", "identified", 
       " ", "for", " ", "the", " ", "given", " ", "protein"}], "}"}]}], 
    "}"}]}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1823731250],

Cell["\<\
The measurement for each protein is a relative intensity, i.e. the ratio of \
the value for the protein compared to the reference timepoint that has been \
chosen as the healthy sample \"8\", day \"255\" (in the experiment this was \
TMT reporter with 126 amu). The last list, the \"metadata\", in the \
proteomics OmicsObject was chosen to be the number of unique peptides \
identified for the given protein.\
\>", "Text",
 CellID->220886326],

Cell[CellGroupData[{

Cell["Additional Information: Gene Translation", "Subsubsubsection",
 CellID->237385776],

Cell[TextData[{
 "As an aside, let us consider the form of the protein identifiers. \
MathIOmica can perform basic ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GeneTranslation"]], "paclet:MathIOmica/ref/GeneTranslation"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " going from one kind of identifier to another, using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GetGeneDictionary"]], 
    "paclet:MathIOmica/ref/GetGeneDictionary"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1605734052],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["GeneTranslation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/GeneTranslation"], "[", 
     RowBox[{
      StyleBox["inputIDList", "TI"], ",", 
      StyleBox["targetIDList", "TI"], ",", 
      StyleBox["geneDictionary", "TI"]}], "]"}], Cell[TextData[{
     "uses ",
     Cell[BoxData[
      StyleBox["geneDictionary", "TI"]], "InlineFormula"],
     " to convert ",
     Cell[BoxData[
      StyleBox["inputIDList", "TI"]], "InlineFormula"],
     " IDs to different annotations as indicated by ",
     Cell[BoxData[
      StyleBox["targetIDList", "TI"]], "InlineFormula"],
     ". It takes for inputs:\n",
     Cell[BoxData[GridBox[{
        {"inputIDList", Cell[TextData[{
          "List of ",
          Cell[BoxData["n"], "InlineFormula"],
          " IDs (strings) to be converted in the form ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["inputID", 
               RowBox[{"1", ","}]], 
              SubscriptBox["inputID", "2"]}], ",", "...", ",", 
             SubscriptBox["inputID", "n"]}], "}"}]], "InlineFormula"]
         }], "TableText"]},
        {"targetIDList", Cell[TextData[{
          
          "List of target identifier strings, as used in the gene \
geneDictionary,",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{"target", " ", 
              SubscriptBox["ID", "1"]}], ",", 
             SubscriptBox["targetID", "2"], ",", 
             RowBox[{"...", "target", " ", 
              SubscriptBox["ID", "k"]}]}], "}"}]], "InlineFormula"],
          
          ", e.g. {\"UniProt ID\",\"Gene Symbol\"}. Can also be provided as a \
single string for only one kind of IDs."
         }], "TableText"]},
        {"geneDictionary", Cell[TextData[{
          "Gene dictionary to base translation on in the form generated by ",
          Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData["GetGeneDictionary"]], 
             "paclet:MathIOmica/ref/GetGeneDictionary"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]]]
    }], "TableText"]},
   {
    ButtonBox[
     RowBox[{"GetGeneDictionary", "[", "]"}],
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/"], Cell["\<\
creates an ID/accession dictionary from a UCSC table search - typically of \
gene annotations. GetGeneDictionary uses MathIOmica data for the annotations..\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->730612315],

Cell["Translating gene identifiers using a gene dictionary.", "Caption",
 CellID->69474757],

Cell["We use GetGeneDictionary to define a gene dictionary:", "MathCaption",
 CellID->1155116896],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"geneDictionary", "=", 
  RowBox[{"GetGeneDictionary", "[", "]"}]}]], "Input",
 CellLabel->"In[108]:=",
 CellID->797502192],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"\<\"human\"\>", "\[Rule]", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"UCSC ID\"\>", "\[Rule]", 
              RowBox[{"{", 
               
               RowBox[{"\<\"uc001aaa.3\"\>", ",", "\<\"uc010nxr.1\"\>", 
                ",", "\<\"uc010nxq.1\"\>", ",", "\<\"uc001aal.1\"\>", 
                ",", "\<\"uc001aaq.2\"\>", ",", "\<\"uc001aar.2\"\>", 
                ",", "\<\"uc001aau.3\"\>", ",", "\<\"uc021oeh.1\"\>", ",", 
                TemplateBox[{"121567"},
                 "OutputSizeLimit`Skeleton"], ",", "\<\"uc022cfk.1\"\>", 
                ",", "\<\"uc031tkn.1\"\>", ",", "\<\"uc022cgh.1\"\>", 
                ",", "\<\"uc022cha.1\"\>", ",", "\<\"uc022chb.1\"\>", 
                ",", "\<\"uc022chc.1\"\>", ",", "\<\"uc022che.1\"\>", 
                ",", "\<\"uc022cpe.1\"\>"}], "}"}]}], ",", 
             TemplateBox[{"6"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{
              RowBox[{"\<\"HGU\"\>", "\[Ellipsis]", "\<\"x ID\"\>"}], 
              "\[Rule]", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[108], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[108]=",
 CellID->113335974]
}, Open  ]],

Cell["\<\
The current version of the gene dictionary has accessions for the following \
identifiers:\
\>", "MathCaption",
 CellID->811349928],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Keys"}], "]"}], "@", "geneDictionary"}]], "Input",
 CellLabel->"In[109]:=",
 CellID->1984565093],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"human\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"\<\"UCSC ID\"\>", ",", "\<\"UniProt ID\"\>", 
     ",", "\<\"Gene Symbol\"\>", ",", "\<\"RefSeq ID\"\>", 
     ",", "\<\"NCBI Protein Accession\"\>", ",", "\<\"Ensembl ID\"\>", 
     ",", "\<\"KEGG Gene ID\"\>", ",", "\<\"HGU133Plus2 Affymetrix ID\"\>"}], 
    "}"}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[109]=",
 CellID->19720129]
}, Open  ]],

Cell["\<\
We can now use GeneTranslation (setting the optional InputID to \"UniProt \
ID\") to convert our example \"UniProt ID\" accessions to \"Gene Symbol\":\
\>", "MathCaption",
 CellID->589880236],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneTranslation", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<A5PLN9\>\"", ",", "\"\<A6NGU5\>\""}], "}"}], ",", 
   RowBox[{"{", "\"\<Gene Symbol\>\"", "}"}], ",", "geneDictionary", ",", 
   RowBox[{"InputID", "\[Rule]", " ", 
    RowBox[{"{", "\"\<UniProt ID\>\"", "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[110]:=",
 CellID->557131970],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Gene Symbol\"\>", "\[Rule]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"A5PLN9\"\>", "\[Rule]", 
      RowBox[{"{", "\<\"TRAPPC13\"\>", "}"}]}], ",", 
     RowBox[{"\<\"A6NGU5\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[110]=",
 CellID->723726465]
}, Open  ]],

Cell["\<\
We note that an ID might not necessarily be annotated across all databases, \
as in the above example.\
\>", "Text",
 CellID->1398286274]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing of Proteome Data", "Subsection",
 CellID->1281067914],

Cell["\<\
We will next preprocess the imported proteome data. We will first perform a \
transformation on the data towards a normal distribution, then we will \
re-label the samples with real time and carry out filtering for unique \
peptides present in each protein identification, as well as for missing data. \
Finally, we will create the proteomics time series or relative intensities \
compared to the healthy reference point for each protein.\
\>", "Text",
 CellID->1997801546],

Cell[CellGroupData[{

Cell["Power Transformation, Labeling and Filtering", "Subsubsection",
 CellID->1973203023],

Cell[CellGroupData[{

Cell["Data Power Transformation", "Subsubsubsection",
 CellID->666869090],

Cell[TextData[{
 "To make the data comparable across time points, and as close to a normal \
distribution as possible for each sample, we normalize each time point \
/sample by using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ApplyBoxCoxTransform"]], 
    "paclet:MathIOmica/ref/ApplyBoxCoxTransform"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->611320926],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ApplyBoxCoxTransform",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ApplyBoxCoxTransform"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "for a given ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " set, computes the Box-Cox transformation at the maximum likelihood \
\[Lambda] parameter."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->351641937],

Cell["\<\
Applying a power transformation (Box-Cox) for an optimized parameter for each \
dataset.\
\>", "Caption",
 CellID->171038615],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which component of a list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["HorizontalSelection",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/HorizontalSelection"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Horizontal selection across components for a single level association with \
multi-list values.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1055700668],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ApplyBoxCoxTransform"]], 
    "paclet:MathIOmica/ref/ApplyBoxCoxTransform"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->651235562],

Cell[TextData[{
 "We apply a Box-Cox transformation to the proteomics data measurement in the \
OmicsObject, which is in the first list first component for each identifier. \
The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1312882619],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedProteinData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"proteinExample", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[111]:=",
 CellID->223704608],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.15263837861185456`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.15263837861185456`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->916487219],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.17708643543086405`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.17708643543086405`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1393161984],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4215814241016595`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4215814241016595],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1933820101],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.29228668269327357`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.29228668269327357`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1615625703],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4320423187977895`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4320423187977895],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->944609390],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3466732904603381`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3466732904603381],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1760647747],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3680613181947485`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3680613181947485],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->729347633],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.08340736160903305`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.08340736160903305],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->928300839],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", "0.134129663481085`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.134129663481085],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->200801478],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.16633647201933024`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.16633647201933024`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->584112668],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.08662842477048169`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.08662842477048169],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->805571796],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.199246934668649`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.199246934668649],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->507574800],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.22177775113087478`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.22177775113087478`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1093520098]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5221"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", 
                   TemplateBox[{"21"},
                    "OutputSizeLimit`Skeleton"]}], "}"}], ",", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton"]}], "}"}]}], ",", 
              TemplateBox[{"5223"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 111, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 111, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 111, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[111], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[111]=",
 CellID->627236060]
}, Open  ]],

Cell["\<\
We can plot the data to see what the resulting distributions look like:\
\>", "MathCaption",
 CellID->1190633123],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "transformedProteinData"}], ")"}]}]], "Input",
 CellLabel->"In[112]:=",
 CellID->718275515],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.609], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.609], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.9, 0}, {-1.8, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-82.10026737967915, -73.84625668449199}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.7, 0}, {-1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-66.5922459893048, -58.33823529411765}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.5, 0}, {-1.4, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-51.084224598930476`, -42.830213903743314`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-35.57620320855615, -27.322192513368975`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1.1, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-27.822192513368975`, -19.568181818181827`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-20.068181818181827`, -11.81417112299465}, {
              18.944799262775355`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.9, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-12.31417112299465, -4.060160427807489}, {
              18.944799262775355`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.9, 0}, {-0.8, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-4.560160427807489, 3.6938502673796805`}, {
              18.900813620652837`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 10.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{3.1938502673796805`, 11.44786096256685}, {
              18.592914125795218`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 10]& ,
           TagBoxNote->"10"],
          StyleBox["10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[10, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 18.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{10.94786096256685, 19.20187165775402}, {
              18.24102898881508, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 20.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{18.70187165775402, 26.95588235294118}, {
              18.15305770457005, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 20]& ,
           TagBoxNote->"20"],
          StyleBox["20", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[20, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 41.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.45588235294118, 34.70989304812835}, {
              17.229359219997193`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 96.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{34.20989304812835, 42.46390374331551}, {
              14.810148903258757`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 96]& ,
           TagBoxNote->"96"],
          StyleBox["96", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[96, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 171.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{41.96390374331551, 50.21791443850268}, {
              11.511225744069982`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 171]& ,
           TagBoxNote->"171"],
          StyleBox["171", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[171, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 511.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{49.71791443850268, 
              57.971925133689844`}, {-3.4438925775857925`, 
              19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 511]& ,
           TagBoxNote->"511"],
          StyleBox["511", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[511, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 1161.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{57.471925133689844`, 
              65.72593582887701}, {-32.03455995722183, 19.53277054702039}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1161]& ,
           TagBoxNote->"1161"],
          StyleBox["1161", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1161, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 1073.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{65.22593582887701, 
              73.47994652406418}, {-28.163823450440344`, 
              19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1073]& ,
           TagBoxNote->"1073"],
          StyleBox["1073", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1073, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 514.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{72.97994652406418, 
              81.23395721925135}, {-3.575849503953343, 19.532770547020387`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 514]& ,
           TagBoxNote->"514"],
          StyleBox["514", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[514, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 197.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{80.73395721925135, 88.98796791443851}, {
              10.367599048884541`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 197]& ,
           TagBoxNote->"197"],
          StyleBox["197", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[197, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 85.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.48796791443851, 96.74197860962568}, {
              15.293990966606444`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 85]& ,
           TagBoxNote->"85"],
          StyleBox["85", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[85, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 45.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{96.24197860962568, 104.49598930481284`}, {
              17.053416651507124`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 45]& ,
           TagBoxNote->"45"],
          StyleBox["45", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[45, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 35.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{103.99598930481284`, 112.25}, {
              17.493273072732293`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 35]& ,
           TagBoxNote->"35"],
          StyleBox["35", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[35, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 18.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.75, 120.00401069518718`}, {
              18.24102898881508, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 11.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{119.50401069518718`, 127.75802139037435`}, {
              18.5489284836727, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 7.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{127.25802139037435`, 135.51203208556151`}, {
              18.72487105216277, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 7]& ,
           TagBoxNote->"7"],
          StyleBox["7", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[7, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{135.01203208556151`, 143.26604278074868`}, {
              18.944799262775355`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{142.76604278074868`, 151.02005347593587`}, {
              18.768856694285287`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.5, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{173.78208556149735`, 182.03609625668452`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.5, 0}, {1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{181.53609625668452`, 189.79010695187168`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.522, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-1, 2], 
         Rational[3, 5]}, {All, All}}, {{-0.5, 0.6}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.476], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.476], Thickness[Small]}], 
        RectangleBox[{-1.2, 0}, {-1.15, 1.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 1.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 2.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 4.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 1.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 2.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 5.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 6.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 21.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 30.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 69.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 92.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 102.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 140.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 163.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 207.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 334.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 382.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 434.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 391.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 365.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 372.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 351.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 260.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 147.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 75.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 29.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 12.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 9.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 6.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 5.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 3.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 4.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 1.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 2.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 1.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 1.},
         RoundingRadius->0], RectangleBox[{1.15, 0}, {1.2, 1.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 3.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.78, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-3, 4], 
         Rational[3, 4]}, {All, All}}, {{-0.75, 0.75}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.567], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.567], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.25, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-78.5598007818019, -72.4929943955164}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.95, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-45.1589624640889, -39.092156077803395`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.85, 0}, {-0.8, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-28.458543305232396`, -22.39173691894692}, {
              21.520832192096776`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.75, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-22.89173691894692, -16.824930532661412`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.75, 0}, {-0.7, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-17.324930532661412`, -11.258124146375906`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.65, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-11.758124146375906`, -5.6913177600904135`}, {
              21.594036755152175`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.65, 0}, {-0.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-6.1913177600904135`, -0.12451137380490707`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.55, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-0.6245113738049071, 5.442295012480578}, {
              21.667241318207573`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.55, 0}, {-0.5, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{4.942295012480578, 11.009101398766084`}, {
              21.520832192096776`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.45, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{10.509101398766084`, 16.575907785051584`}, {
              21.594036755152175`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.45, 0}, {-0.4, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{16.075907785051584`, 22.142714171337076`}, {
              21.594036755152175`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.35, 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.642714171337076`, 27.709520557622582`}, {
              20.7155819984874, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.35, 0}, {-0.3, 31.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{27.209520557622582`, 33.27632694390808}, {
              19.544308989601035`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 31]& ,
           TagBoxNote->"31"],
          StyleBox["31", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[31, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.25, 50.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{32.77632694390808, 38.84313333019358}, {
              18.153422291548473`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 50]& ,
           TagBoxNote->"50"],
          StyleBox["50", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[50, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.25, 0}, {-0.2, 79.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{38.34313333019358, 44.40993971647907}, {
              16.03048996294193, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 79]& ,
           TagBoxNote->"79"],
          StyleBox["79", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[79, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.15, 174.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{43.90993971647907, 49.97674610276458}, {
              9.076056472679129, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 174]& ,
           TagBoxNote->"174"],
          StyleBox["174", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[174, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.15, 0}, {-0.1, 313.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{49.47674610276458, 
              55.54355248905007}, {-1.0993777920211834`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 313]& ,
           TagBoxNote->"313"],
          StyleBox["313", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[313, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {-0.05, 558.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{55.04355248905007, 
              61.11035887533557}, {-19.034495740593677`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 558]& ,
           TagBoxNote->"558"],
          StyleBox["558", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[558, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.05, 0}, {0., 758.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{60.61035887533557, 
              66.67716526162107}, {-33.67540835167327, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 758]& ,
           TagBoxNote->"758"],
          StyleBox["758", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[758, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.05, 774.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.17716526162107, 
              72.24397164790656}, {-34.846681360559636`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 774]& ,
           TagBoxNote->"774"],
          StyleBox["774", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[774, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.05, 0}, {0.1, 535.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.74397164790656, 
              77.81077803419207}, {-17.35079079031953, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 535]& ,
           TagBoxNote->"535"],
          StyleBox["535", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[535, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.15, 326.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{77.31077803419207, 
              83.37758442047756}, {-2.0510371117413584`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 326]& ,
           TagBoxNote->"326"],
          StyleBox["326", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[326, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.15, 0}, {0.2, 154.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{82.87758442047756, 88.94439080676307}, {
              10.540147733787087`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 154]& ,
           TagBoxNote->"154"],
          StyleBox["154", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[154, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.25, 81.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.44439080676307, 94.51119719304856}, {
              15.884080836831139`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 81]& ,
           TagBoxNote->"81"],
          StyleBox["81", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[81, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.25, 0}, {0.3, 53.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{94.01119719304856, 100.07800357933405`}, {
              17.93380860238228, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 53]& ,
           TagBoxNote->"53"],
          StyleBox["53", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[53, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.35, 40.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{99.57800357933405, 105.64480996561956`}, {
              18.885467922102453`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 40]& ,
           TagBoxNote->"40"],
          StyleBox["40", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[40, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.35, 0}, {0.4, 22.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{105.14480996561956`, 111.21161635190506`}, {
              20.203150057099617`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 22]& ,
           TagBoxNote->"22"],
          StyleBox["22", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[22, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.45, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{110.71161635190506`, 116.77842273819056`}, {
              20.27635462015501, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.45, 0}, {0.5, 7.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{116.27842273819056`, 122.34522912447605`}, {
              21.301218502930585`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 7]& ,
           TagBoxNote->"7"],
          StyleBox["7", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[7, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.55, 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{121.84522912447605`, 127.91203551076157`}, {
              21.228013939875186`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.55, 0}, {0.6, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{127.41203551076157`, 133.47884189704706`}, {
              21.44762762904138, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.65, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{132.97884189704706`, 139.04564828333255`}, {
              21.667241318207573`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.75, 0}, {0.8, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{149.67926105590357`, 155.74606744218906`}, {
              21.667241318207573`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.85, 1.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{155.24606744218906`, 161.31287382847455`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.95, 0}, {1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{171.94648660104554`, 178.01329298733106`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.41700000000000004`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-2, 5], 
         Rational[9, 20]}, {All, All}}, {{-0.4, 0.45}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.45499999999999996`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.45499999999999996`], Thickness[Small]}], 
        RectangleBox[{-1.45, 0}, {-1.4, 1.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.15, 1.},
         RoundingRadius->0], RectangleBox[{-1.15, 0}, {-1.1, 2.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1.05, 1.},
         RoundingRadius->0], RectangleBox[{-1.05, 0}, {-1., 1.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.95, 4.},
         RoundingRadius->0], RectangleBox[{-0.95, 0}, {-0.9, 2.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 4.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 3.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 6.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 7.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 12.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 19.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 24.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 48.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 75.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 74.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 89.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 89.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 128.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 168.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 245.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 278.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 343.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 377.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 376.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 345.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 335.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 317.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 236.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 130.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 101.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 51.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 34.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 29.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 14.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 11.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 11.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 16.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 3.},
         RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 7.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 2.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 4.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 1.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 2.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 3.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 2.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 1.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.35, 1.},
         RoundingRadius->0], RectangleBox[{1.45, 0}, {1.5, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.883, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-17, 20], 
         Rational[4, 5]}, {All, All}}, {{-0.85, 0.8}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.602], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.602], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-23.29901960784312, -15.691176470588218`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-9.083333333333329, -1.4754901960784252`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{12.240196078431367`, 19.848039215686278`}, {
              16.05669343918261, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{19.348039215686278`, 26.955882352941174`}, {
              16.05669343918261, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.455882352941174`, 34.06372549019607}, {
              15.912841803959392`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 12.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{33.56372549019607, 41.17156862745097}, {
              15.625138533512956`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 12]& ,
           TagBoxNote->"12"],
          StyleBox["12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[12, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 79.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{40.67156862745097, 48.27941176470587}, {
              12.412452013527766`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 79]& ,
           TagBoxNote->"79"],
          StyleBox["79", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[79, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 285.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{47.77941176470587, 55.387254901960766`}, {
              2.5346397282001636`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 285]& ,
           TagBoxNote->"285"],
          StyleBox["285", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[285, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 530.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.887254901960766`, 
              62.49509803921566}, {-9.21324381502927, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 530]& ,
           TagBoxNote->"530"],
          StyleBox["530", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[530, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 1065.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{61.99509803921566, 
              69.60294117647057}, {-34.8667854298364, 16.700545074405824`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1065]& ,
           TagBoxNote->"1065"],
          StyleBox["1065", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1065, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 1057.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{69.10294117647057, 
              76.71078431372547}, {-34.48318106924114, 16.700545074405824`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1057]& ,
           TagBoxNote->"1057"],
          StyleBox["1057", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1057, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 777.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{76.21078431372547, 
              83.81862745098036}, {-21.05702844840751, 16.700545074405827`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 777]& ,
           TagBoxNote->"777"],
          StyleBox["777", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[777, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 158.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.31862745098036, 90.92647058823526}, {
              8.624358952649704, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 158]& ,
           TagBoxNote->"158"],
          StyleBox["158", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[158, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 29.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{90.42647058823526, 98.03431372549016}, {
              14.809979267248059`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 29]& ,
           TagBoxNote->"29"],
          StyleBox["29", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[29, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 11.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{97.53431372549016, 105.14215686274505`}, {
              15.673089078587363`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{104.64215686274505`, 112.24999999999996`}, {
              16.008742894108202`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.74999999999996`, 119.35784313725486`}, {
              15.960792349033799`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{118.85784313725486`, 126.46568627450976`}, {
              15.960792349033799`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{125.96568627450976`, 133.57352941176467`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{133.07352941176467`, 140.68137254901956`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{140.18137254901956`, 147.78921568627447`}, {
              16.104643984257017`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.624, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-3, 5], 
         Rational[3, 5]}, {All, All}}, {{-0.6, 0.6}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.6, 0}, {-1.4, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.45588235294116, 31.69444444444443}, {
              18.670170862552855`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{31.19444444444443, 36.4330065359477}, {
              18.670170862552855`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1., 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.9330065359477, 41.17156862745097}, {
              18.456276284524616`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.8, 29.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{40.67156862745097, 45.91013071895423}, {
              17.17290881635518, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 29]& ,
           TagBoxNote->"29"],
          StyleBox["29", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[29, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.6, 152.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{45.41013071895423, 50.6486928104575}, {
              10.595650541986808`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 152]& ,
           TagBoxNote->"152"],
          StyleBox["152", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[152, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.4, 259.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{50.1486928104575, 55.38725490196076}, {
              4.873970579731397, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 259]& ,
           TagBoxNote->"259"],
          StyleBox["259", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[259, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.2, 452.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.88725490196076, 
              60.12581699346403}, {-5.446442810131167, 19.223644507059916`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 452]& ,
           TagBoxNote->"452"],
          StyleBox["452", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[452, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {0., 877.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{59.62581699346403, 
              64.8643790849673}, {-28.17274172563163, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 877]& ,
           TagBoxNote->"877"],
          StyleBox["877", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[877, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.2, 955.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{64.3643790849673, 
              69.60294117647057}, {-32.343685997182305`, 
              19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 955]& ,
           TagBoxNote->"955"],
          StyleBox["955", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[955, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.4, 656.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{69.10294117647057, 
              74.34150326797383}, {-16.35506628957139, 19.223644507059916`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 656]& ,
           TagBoxNote->"656"],
          StyleBox["656", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[656, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.6, 184.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{73.84150326797383, 79.08006535947709}, {
              8.884493917760892, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 184]& ,
           TagBoxNote->"184"],
          StyleBox["184", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[184, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.8, 44.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{78.58006535947709, 83.81862745098036}, {
              16.37080414874928, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 44]& ,
           TagBoxNote->"44"],
          StyleBox["44", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[44, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {1., 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.31862745098036, 88.55718954248363}, {
              17.921539839454017`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.2, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.05718954248363, 93.2957516339869}, {
              18.509749929031678`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.4, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{92.7957516339869, 98.03431372549016}, {
              18.456276284524616`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.6, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{97.53431372549016, 102.77287581699343`}, {
              18.509749929031678`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.6, 0}, {1.8, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{102.27287581699343`, 107.5114379084967}, {
              18.616697218045797`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.8, 0}, {2., 2.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{107.0114379084967, 112.24999999999997`}, {
              18.616697218045797`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.6720000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1.6, 2.}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.2, 0}, {-2., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.64271417133707, 26.257310195982875`}, {
              18.867915887176146`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.6, 0}, {-1.4, 9.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{33.98650224527448, 38.601098269920286`}, {
              18.1585533606675, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.2, 12.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{38.101098269920286`, 42.71569429456609}, {
              17.89254241322676, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 12]& ,
           TagBoxNote->"12"],
          StyleBox["12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[12, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1., 31.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{42.21569429456609, 46.8302903192119}, {
              16.207806412768726`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 31]& ,
           TagBoxNote->"31"],
          StyleBox["31", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[31, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.8, 99.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{46.3302903192119, 50.944886343857696`}, {
              10.178224937445245`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 99]& ,
           TagBoxNote->"99"],
          StyleBox["99", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[99, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.6, 219.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{50.444886343857696`, 
              55.0594823685035}, {-0.4622129601844307, 19.456586202989726`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 219]& ,
           TagBoxNote->"219"],
          StyleBox["219", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[219, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.4, 349.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.5594823685035, 
              59.1740783931493}, {-11.98935401594991, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 349]& ,
           TagBoxNote->"349"],
          StyleBox["349", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[349, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.2, 466.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{58.6740783931493, 
              63.28867441779511}, {-22.36378096613884, 19.456586202989726`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 466]& ,
           TagBoxNote->"466"],
          StyleBox["466", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[466, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {0., 559.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{62.78867441779511, 
              67.40327044244091}, {-30.61012033680184, 19.456586202989726`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 559]& ,
           TagBoxNote->"559"],
          StyleBox["559", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[559, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.2, 639.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.90327044244091, 
              71.51786646708672}, {-37.703745601888286`, 
              19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 639]& ,
           TagBoxNote->"639"],
          StyleBox["639", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[639, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.4, 548.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.01786646708672, 
              75.63246249173253}, {-29.634746862852452`, 
              19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 548]& ,
           TagBoxNote->"548"],
          StyleBox["548", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[548, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.6, 375.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{75.13246249173253, 
              79.74705851637833}, {-14.294782227103006`, 
              19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 375]& ,
           TagBoxNote->"375"],
          StyleBox["375", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[375, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.8, 191.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{79.24705851637833, 83.86165454102414}, {
              2.020555882595829, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 191]& ,
           TagBoxNote->"191"],
          StyleBox["191", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[191, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {1., 80.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.36165454102414, 87.97625056566993}, {
              11.862960937903276`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 80]& ,
           TagBoxNote->"80"],
          StyleBox["80", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[80, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.2, 40.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{87.47625056566993, 92.09084659031573}, {
              15.4097735704465, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 40]& ,
           TagBoxNote->"40"],
          StyleBox["40", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[40, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.4, 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{91.59084659031573, 96.20544261496154}, {
              17.626531465786016`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.6, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{95.70544261496154, 100.32003863960735`}, {
              18.601904939735405`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.6, 0}, {1.8, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{99.82003863960735, 104.43463466425314`}, {
              18.51323462392182, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.8, 0}, {2., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{103.93463466425314`, 108.54923068889894`}, {
              18.867915887176146`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2.2, 0}, {2.4, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{112.16382671354475`, 116.77842273819056`}, {
              18.779245571362566`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.2920000000000003`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-2.2, 2.4}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.6, 0}, {-2.4, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.63235294117647, 26.224424552429674`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.4, 0}, {-2.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{25.724424552429674`, 30.316496163682864`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.2, 0}, {-2., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{29.816496163682864`, 34.40856777493607}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.8, 0}, {-1.6, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{38.00063938618926, 42.59271099744246}, {
              19.124539917646118`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.6, 0}, {-1.4, 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{42.09271099744246, 46.684782608695656`}, {
              18.202278742559628`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.2, 51.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{46.184782608695656`, 50.77685421994886}, {
              14.882138512248265`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 51]& ,
           TagBoxNote->"51"],
          StyleBox["51", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[51, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1., 85.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{50.27685421994886, 54.86892583120205}, {
              11.746450516954202`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 85]& ,
           TagBoxNote->"85"],
          StyleBox["85", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[85, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.8, 124.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.36892583120205, 58.96099744245525}, {
              8.149631934116892, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 124]& ,
           TagBoxNote->"124"],
          StyleBox["124", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[124, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.6, 184.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{58.46099744245525, 63.05306905370845}, {
              2.6160648835979536`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 184]& ,
           TagBoxNote->"184"],
          StyleBox["184", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[184, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.4, 273.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{62.55306905370845, 
              67.14514066496164}, {-5.592059574671804, 20.085670505189363`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 273]& ,
           TagBoxNote->"273"],
          StyleBox["273", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[273, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.2, 449.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.64514066496164, 
              71.23721227621483}, {-21.82385625619402, 20.085670505189363`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 449]& ,
           TagBoxNote->"449"],
          StyleBox["449", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[449, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {0., 611.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{70.73721227621483, 
              75.32928388746804}, {-36.764487292595156`, 
              20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 611]& ,
           TagBoxNote->"611"],
          StyleBox["611", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[611, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.2, 574.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{74.82928388746804, 
              79.42135549872124}, {-33.352120944775145`, 
              20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 574]& ,
           TagBoxNote->"574"],
          StyleBox["574", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[574, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.4, 520.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{78.92135549872124, 
              83.51342710997443}, {-28.3719105993081, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 520]& ,
           TagBoxNote->"520"],
          StyleBox["520", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[520, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.6, 397.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.01342710997443, 
              87.60549872122763}, {-17.028098145744273`, 
              20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 397]& ,
           TagBoxNote->"397"],
          StyleBox["397", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[397, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.8, 200.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{87.10549872122763, 91.69757033248082}, {
              1.1404470034595704`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 200]& ,
           TagBoxNote->"200"],
          StyleBox["200", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[200, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {1., 76.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{91.19757033248082, 95.78964194373403}, {
              12.576485574532041`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 76]& ,
           TagBoxNote->"76"],
          StyleBox["76", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[76, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.2, 35.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{95.28964194373403, 99.88171355498721}, {
              16.357756392386648`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 35]& ,
           TagBoxNote->"35"],
          StyleBox["35", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[35, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.4, 13.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{99.38171355498721, 103.97378516624042`}, {
              18.386730977576924`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 13]& ,
           TagBoxNote->"13"],
          StyleBox["13", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[13, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.6, 13.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{103.47378516624042`, 108.06585677749362`}, {
              18.386730977576924`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 13]& ,
           TagBoxNote->"13"],
          StyleBox["13", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[13, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.6, 0}, {1.8, 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{107.56585677749362`, 112.15792838874681`}, {
              18.84786156512017, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.8, 0}, {2., 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.65792838874681`, 116.25}, {
              19.03231380013747, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2., 0}, {2.2, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{115.75, 120.3420716112532}, {
              19.401218270172066`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2.6, 0}, {2.8, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{128.0262148337596, 132.61828644501279`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2.8, 0}, {3., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{132.11828644501279`, 136.710358056266}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{4., 0}, {4.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{156.67071611253198`, 161.26278772378518`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.692, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-13, 5], 2}, {All, All}}, {{-2.6, 2}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.7, 0}, {-1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-10.014705882352928`, -5.004901960784309}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{8.024509803921575, 13.034313725490208`}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1.1, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{12.534313725490208`, 17.544117647058826`}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{17.044117647058826`, 22.05392156862746}, {
              18.420171671427592`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.9, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.55392156862746, 26.563725490196084`}, {
              18.158448402172937`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.9, 0}, {-0.8, 9.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.063725490196084`, 31.07352941176471}, {
              17.809484043166734`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{30.57352941176471, 35.58333333333334}, {
              16.76259096614812, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 33.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.08333333333334, 40.09313725490197}, {
              15.715697889129505`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 33]& ,
           TagBoxNote->"33"],
          StyleBox["33", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[33, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 70.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{39.59313725490197, 44.602941176470594`}, {
              12.487777568322112`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 70]& ,
           TagBoxNote->"70"],
          StyleBox["70", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[70, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 139.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{44.102941176470594`, 49.11274509803922}, {
              6.468142375465083, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 139]& ,
           TagBoxNote->"139"],
          StyleBox["139", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[139, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 200.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{48.61274509803922, 53.622549019607845`}, {
              1.1464359006204603`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 200]& ,
           TagBoxNote->"200"],
          StyleBox["200", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[200, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 299.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{53.122549019607845`, 
              58.13235294117648}, {-7.490431984783104, 19.094653850930694`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 299]& ,
           TagBoxNote->"299"],
          StyleBox["299", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[299, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 401.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{57.63235294117648, 
              62.642156862745104`}, {-16.389023139441324`, 
              19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 401]& ,
           TagBoxNote->"401"],
          StyleBox["401", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[401, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 600.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{62.142156862745104`, 
              67.15196078431373}, {-33.75, 19.094653850930698`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 600]& ,
           TagBoxNote->"600"],
          StyleBox["600", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[600, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 619.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.65196078431373, 
              71.66176470588236}, {-35.40758070527947, 19.094653850930698`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 619]& ,
           TagBoxNote->"619"],
          StyleBox["619", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[619, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 533.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.16176470588236, 
              76.17156862745098}, {-27.904846986646074`, 
              19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 533]& ,
           TagBoxNote->"533"],
          StyleBox["533", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[533, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 349.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{75.67156862745098, 
              80.68137254901961}, {-11.852486472360663`, 
              19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 349]& ,
           TagBoxNote->"349"],
          StyleBox["349", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[349, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 159.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{80.18137254901961, 85.19117647058823}, {
              4.723320580434059, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 159]& ,
           TagBoxNote->"159"],
          StyleBox["159", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[159, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 93.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{84.69117647058823, 89.70098039215686}, {
              10.481232504036436`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 93]& ,
           TagBoxNote->"93"],
          StyleBox["93", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[93, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 42.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{89.20098039215686, 94.2107843137255}, {
              14.930528081365544`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 42]& ,
           TagBoxNote->"42"],
          StyleBox["42", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[42, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 27.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{93.7107843137255, 98.72058823529412}, {
              16.239144427638813`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 27]& ,
           TagBoxNote->"27"],
          StyleBox["27", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[27, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 9.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{98.22058823529412, 103.23039215686275`}, {
              17.809484043166734`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 17.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{102.73039215686275`, 107.74019607843138`}, {
              17.111555325154324`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 17]& ,
           TagBoxNote->"17"],
          StyleBox["17", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[17, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{107.24019607843138`, 112.25}, {
              17.896725132918284`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.75, 116.75980392156863`}, {
              18.420171671427592`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.1, 0}, {1.2, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{116.25980392156863`, 121.26960784313725`}, {
              18.24568949192449, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.3, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{120.76960784313725`, 125.77941176470588`}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.5, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{129.7892156862745, 134.79901960784315`}, {
              18.420171671427592`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.04, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1, 1}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.504], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.504], Thickness[Small]}], 
        RectangleBox[{-2.2, 0}, {-2.1, 1.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.7, 1.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.5, 1.},
         RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1.4, 2.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.2, 1.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.1, 3.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1., 6.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.9, 12.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.8, 29.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.7, 46.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.6, 84.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 139.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.4, 156.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.3, 196.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.2, 242.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.1, 321.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 425.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 399.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 386.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 368.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 266.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 144.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 57.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 35.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 17.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 13.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 11.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 7.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 6.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 1.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 3.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 2.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 2.},
         RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 1.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 1.},
         RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.352, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-13, 10], 
         Rational[13, 10]}, {All, All}}, {{-1.3, 1.3}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44099999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44099999999999995`], Thickness[Small]}], 
        RectangleBox[{-2.1, 0}, {-2., 1.},
         RoundingRadius->0], RectangleBox[{-1.9, 0}, {-1.8, 1.},
         RoundingRadius->0], RectangleBox[{-1.7, 0}, {-1.6, 1.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.5, 1.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.3, 4.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.2, 3.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.1, 4.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1., 14.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.9, 25.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.8, 46.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.7, 83.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.6, 109.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 125.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.4, 147.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.3, 165.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.2, 247.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.1, 289.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 384.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 375.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 343.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 327.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 277.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 182.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 86.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 46.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 30.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 21.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 12.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 11.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 9.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 4.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 2.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 2.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 3.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 3.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 1.},
         RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 1.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 1.},
         RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.17, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-21, 10], 
         Rational[7, 5]}, {All, All}}, {{-2.1, 1.4}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], 
        RectangleBox[{-1.95, 0}, {-1.9, 1.},
         RoundingRadius->0], RectangleBox[{-1.85, 0}, {-1.8, 1.},
         RoundingRadius->0], RectangleBox[{-1.75, 0}, {-1.7, 1.},
         RoundingRadius->0], RectangleBox[{-1.35, 0}, {-1.3, 1.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.25, 1.},
         RoundingRadius->0], RectangleBox[{-1.15, 0}, {-1.1, 1.},
         RoundingRadius->0], RectangleBox[{-1.05, 0}, {-1., 1.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.95, 1.},
         RoundingRadius->0], RectangleBox[{-0.95, 0}, {-0.9, 4.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 4.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 6.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 9.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 4.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 8.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 19.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 29.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 30.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 34.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 46.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 84.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 116.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 106.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 153.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 196.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 224.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 269.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 297.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 310.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 344.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 284.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 253.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 175.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 101.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 78.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 43.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 27.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 25.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 19.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 21.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 13.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 10.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 5.},
         RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 5.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 3.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 4.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 4.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 2.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 3.},
         RoundingRadius->0], RectangleBox[{1.05, 0}, {1.1, 3.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.15, 1.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 1.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 2.},
         RoundingRadius->0], RectangleBox[{1.35, 0}, {1.4, 1.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.45, 1.},
         RoundingRadius->0], RectangleBox[{1.45, 0}, {1.5, 1.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.55, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.884, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-17, 20], 
         Rational[17, 20]}, {All, All}}, {{-0.85, 0.85}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.1, 0}, {-2., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-28.053921568627445`, -23.044117647058812`}, {
              20.120823987220888`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.3, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{3.5147058823529562`, 8.524509803921575}, {
              20.214253458771424`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{8.024509803921575, 13.034313725490208`}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1.1, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{12.534313725490208`, 17.544117647058826`}, {
              20.120823987220888`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{17.044117647058826`, 22.05392156862746}, {
              20.214253458771424`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.9, 11.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.55392156862746, 26.563725490196084`}, {
              19.279958743266057`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.9, 0}, {-0.8, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.063725490196084`, 31.07352941176471}, {
              18.34566402776069, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{30.57352941176471, 35.58333333333334}, {
              18.34566402776069, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 41.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.08333333333334, 40.09313725490197}, {
              16.477074596749958`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 61.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{39.59313725490197, 44.602941176470594`}, {
              14.608485165739227`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 61]& ,
           TagBoxNote->"61"],
          StyleBox["61", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[61, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 90.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{44.102941176470594`, 49.11274509803922}, {
              11.899030490773665`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 90]& ,
           TagBoxNote->"90"],
          StyleBox["90", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[90, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 181.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{48.61274509803922, 53.622549019607845`}, {
              3.3969485796748344`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 181]& ,
           TagBoxNote->"181"],
          StyleBox["181", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[181, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 290.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{53.122549019607845`, 
              58.13235294117648}, {-6.786863819333654, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 290]& ,
           TagBoxNote->"290"],
          StyleBox["290", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[290, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 392.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{57.63235294117648, 
              62.642156862745104`}, {-16.31666991748839, 20.80768293032196}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 392]& ,
           TagBoxNote->"392"],
          StyleBox["392", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[392, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 515.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{62.142156862745104`, 
              67.15196078431373}, {-27.80849491820439, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 515]& ,
           TagBoxNote->"515"],
          StyleBox["515", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[515, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 578.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.65196078431373, 
              71.66176470588236}, {-33.694551625888195`, 20.80768293032196}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 578]& ,
           TagBoxNote->"578"],
          StyleBox["578", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[578, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 510.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.16176470588236, 
              76.17156862745098}, {-27.34134756045171, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 510]& ,
           TagBoxNote->"510"],
          StyleBox["510", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[510, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 306.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{75.67156862745098, 
              80.68137254901961}, {-8.28173536414224, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 306]& ,
           TagBoxNote->"306"],
          StyleBox["306", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[306, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 154.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{80.18137254901961, 85.19117647058823}, {
              5.9195443115393225`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 154]& ,
           TagBoxNote->"154"],
          StyleBox["154", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[154, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 78.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{84.69117647058823, 89.70098039215686}, {
              13.020184149380105`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 78]& ,
           TagBoxNote->"78"],
          StyleBox["78", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[78, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 43.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{89.20098039215686, 94.2107843137255}, {
              16.290215653648886`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 43]& ,
           TagBoxNote->"43"],
          StyleBox["43", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[43, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 25.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{93.7107843137255, 98.72058823529412}, {
              17.971946141558544`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 25]& ,
           TagBoxNote->"25"],
          StyleBox["25", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[25, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 24.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{98.22058823529412, 103.23039215686275`}, {
              18.065375613109083`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 24]& ,
           TagBoxNote->"24"],
          StyleBox["24", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[24, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{102.73039215686275`, 107.74019607843138`}, {
              19.560247157917665`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 10.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{107.24019607843138`, 112.25}, {
              19.373388214816593`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 10]& ,
           TagBoxNote->"10"],
          StyleBox["10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[10, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.75, 116.75980392156863`}, {
              19.74710610101874, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.1, 0}, {1.2, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{116.25980392156863`, 121.26960784313725`}, {
              20.120823987220888`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.3, 3.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{120.76960784313725`, 125.77941176470588`}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.3, 0}, {1.4, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{125.27941176470588`, 130.2892156862745}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.5, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{129.7892156862745, 134.79901960784315`}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.5, 0}, {1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{134.29901960784315`, 139.30882352941177`}, {
              20.214253458771424`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.04, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1, 1}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[112]=",
 CellID->2106720944]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->528878766],

Cell["\<\
As with the transcriptome, we notice that the sample numberings do not \
correspond to actual days, so we may adjust using the sampleToDays \
association created before and reproduced here for reference:\
\>", "MathCaption",
 CellID->1740422649],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[113]:=",
 CellID->750369086],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1712427223],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "transformedProteinData"}], "]"}]}]], "Input",\

 CellLabel->"In[114]:=",
 CellID->188499867],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[114], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[114]=",
 CellID->2096017719]
}, Open  ]],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->292613774],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinRawData", "=", 
  RowBox[{"TimeExtractor", "[", "proteinLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[115]:=",
 CellID->222147988],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380", ",", 
   "400"}], "}"}]], "Output",
 CellLabel->"Out[115]=",
 CellID->448057845]
}, Open  ]],

Cell["\<\
We notice a small complication: there are two timepoints missing, compared to \
the transcriptome: (i) the reference time point \"255\" does not appear \
explicitly in our computation (corresponding to a zero value about which \
other timepoints are computed for proteins with at least 2 unique peptides). \
(ii) there is no sample for day \"329\". \
\>", "Text",
 CellID->1796883614],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantAssociator"]], 
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed data. Timepoints \"255\" (zero \
measurement assumed to have at least 2 unique peptides available per protein) \
and \"329\", assumed to be Missing data:"
}], "MathCaption",
 CellID->306227952],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinLongitudinalEnlarged", "=", 
  RowBox[{"ConstantAssociator", "[", 
   RowBox[{"proteinLongitudinal", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<255\>\"", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
      RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}]], "Input",
 CellLabel->"In[116]:=",
 CellID->1402371052],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[116], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[116]=",
 CellID->1430534533]
}, Open  ]],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->136402831],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProtein", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinLongitudinalEnlarged", "]"}]}]], "Input",
 CellLabel->"In[117]:=",
 CellID->1157329268],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[117]=",
 CellID->1914467966]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Unique Peptides", "Subsubsubsection",
 CellID->1560572010],

Cell[TextData[{
 "Typically, proteomics data from mass spectrometry is filtered to retain \
only identifications of proteins that are supported by at least 2 unique \
peptides having been identified per protein. We can use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilteringFunction"]], 
    "paclet:MathIOmica/ref/FilteringFunction"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement the filtering:"
}], "Text",
 CellID->1315991259],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["FilteringFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilteringFunction"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["cutoff", "TI"]}], "]"}], Cell[TextData[{
     "filters OmicsObject data by a chosen comparison (by default greatr or \
equal) to a ",
     Cell[BoxData[
      StyleBox["cutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->391089394],

Cell["\<\
FilteringFunction can be used to filter data in an OmicsObject.\
\>", "Caption",
 CellID->1739485138],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which component of a list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["SelectionFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/SelectionFunction"], 
    ButtonBox["GreaterEqual",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqual"], Cell[
    "Selection of comparison to use for filtering.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2083543412],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilteringFunction"]], 
    "paclet:MathIOmica/ref/FilteringFunction"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1245777502],

Cell[TextData[{
 "We filter out proteomics data with less than 2 unique peptides per protein. \
The unique peptides is reported as the second list, first component in the ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " values in this case:"
}], "MathCaption",
 CellID->178778395],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinUnique", "=", 
  RowBox[{"FilteringFunction", "[", 
   RowBox[{"proteinLongitudinalEnlarged", ",", "2", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "2"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[118]:=",
 CellID->398862612],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y616\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[118], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[118]=",
 CellID->715621561]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1066609228],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1455293487],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredProteinData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"proteinUnique", ",", 
    RowBox[{"3", "/", "4"}]}], "]"}]}]], "Input",
 CellLabel->"In[119]:=",
 CellID->1426380326],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.588], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.588], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 2475.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{28.785228182546035`, 
           43.69675740592474}, {-50.75544747610698, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2475]& ,
        TagBoxNote->"2475"],
       StyleBox["2475", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2475, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.5, 0}, {5.5, 443.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{86.43134507606085, 101.34287429943956`}, {
           48.42148648390962, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 443]& ,
        TagBoxNote->"443"],
       StyleBox["443", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[443, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.5, 0}, {6.5, 143.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{100.84287429943956`, 115.75440352281827`}, {
           63.06375035595931, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 143]& ,
        TagBoxNote->"143"],
       StyleBox["143", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[143, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.5, 0}, {9.5, 499.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{144.07746196957567`, 158.9889911929544}, {
           45.68826389446034, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 499]& ,
        TagBoxNote->"499"],
       StyleBox["499", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[499, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9.5, 0}, {10.5, 345.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{158.4889911929544, 173.40052041633308`}, {
           53.204626015445854`, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 345]& ,
        TagBoxNote->"345"],
       StyleBox["345", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[345, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{13.5, 0}, {14.5, 1320.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{216.1351080864692, 231.04663730984788`}, {
           5.617268431284344, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1320]& ,
        TagBoxNote->"1320"],
       StyleBox["1320", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1320, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{0.21999999999999997`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{0.5, 14.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[119]:=",
 CellID->1543152527],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "2475"}], ",", 
     RowBox[{"5", "\[Rule]", "443"}], ",", 
     RowBox[{"6", "\[Rule]", "143"}], ",", 
     RowBox[{"9", "\[Rule]", "499"}], ",", 
     RowBox[{"10", "\[Rule]", "345"}], ",", 
     RowBox[{"14", "\[Rule]", "1320"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[119]:=",
 CellID->604516470],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$165560$165694 = False, 
       DynamicChart`click$165566$165694 = False, 
       DynamicChart`click$165572$165694 = False, 
       DynamicChart`click$165578$165694 = False, 
       DynamicChart`click$165584$165694 = False, 
       DynamicChart`click$165590$165694 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.16534698176788387`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 2475]& , TagBoxNote -> "2475"], 
                    StyleBox["2475", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[2475, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165560$165694, 
                    FEPrivate`Not[DynamicChart`click$165560$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165560$165694, {{{1., 0.}, {0., 
                    1.}}, {-0.016515869094466458`, 0.19931689860133397`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165560$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.9965728, 0.58382944, 0.22525344]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.36737093040064384`, 
                    0.16534698176788387`}]}], "DelayedMouseEffectStyle"], {}},
                     StatusArea[#, 443]& , TagBoxNote -> "443"], 
                    StyleBox["443", {}, StripOnInput -> False]], Annotation[#, 
                    Style[443, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165566$165694, 
                    FEPrivate`Not[DynamicChart`click$165566$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165566$165694, {{{1., 0.}, {0., 1.}}, {
                    0.19898052539076774`, -0.020168056803123918`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165566$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8704000000000001, 0.50272, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.5393317914392433, -0.36737093040064384`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 143]& , 
                    TagBoxNote -> "143"], 
                    StyleBox["143", {}, StripOnInput -> False]], Annotation[#, 
                    Style[143, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165572$165694, 
                    FEPrivate`Not[DynamicChart`click$165572$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165572$165694, {{{1., 0.}, {0., 1.}}, {
                    0.17979686437075768`, -0.08759616180200691}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165572$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.1393910198186905`, -0.5393317914392433}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 499]& , 
                    TagBoxNote -> "499"], 
                    StyleBox["499", {}, StripOnInput -> False]], Annotation[#, 
                    Style[499, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165578$165694, 
                    FEPrivate`Not[DynamicChart`click$165578$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165578$165694, {{{1., 0.}, {0., 1.}}, {
                    0.13358764292344796`, -0.14884334603252297`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165578$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.5542616286181081`, -1.1393910198186905`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 345]& , 
                    TagBoxNote -> "345"], 
                    StyleBox["345", {}, StripOnInput -> False]], Annotation[#, 
                    Style[345, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165584$165694, 
                    FEPrivate`Not[DynamicChart`click$165584$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165584$165694, {{{1., 0.}, {0., 1.}}, {
                    0.04442044170887618, -0.19500467778591452`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165584$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.5542616286181081`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 1320]& , 
                    TagBoxNote -> "1320"], 
                    StyleBox["1320", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[1320, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165590$165694, 
                    FEPrivate`Not[DynamicChart`click$165590$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165590$165694, {{{1., 0.}, {0., 
                    1.}}, {-0.1402473568544977, -0.14258568965827945`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165590$165694}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["2475", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.055052896981554855`, 
                    0.6643896620044465}]}}}, StatusArea[#, 2475]& , 
                 TagBoxNote -> "2475"], 
                StyleBox["2475", {}, StripOnInput -> False]], Annotation[#, 
                Style[2475, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165560$165694, 
                  FEPrivate`Not[DynamicChart`click$165560$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165560$165694, {{{1., 0.}, {0., 
                1.}}, {-0.016515869094466458`, 0.19931689860133397`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165560$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["443", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.6632684179692258, -0.06722685601041306}]}}}, 
                 StatusArea[#, 443]& , TagBoxNote -> "443"], 
                StyleBox["443", {}, StripOnInput -> False]], Annotation[#, 
                Style[443, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165566$165694, 
                  FEPrivate`Not[DynamicChart`click$165566$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165566$165694, {{{1., 0.}, {0., 1.}}, {
                0.19898052539076774`, -0.020168056803123918`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165566$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["143", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.5993228812358589, -0.29198720600668965`}]}}}, 
                 StatusArea[#, 143]& , TagBoxNote -> "143"], 
                StyleBox["143", {}, StripOnInput -> False]], Annotation[#, 
                Style[143, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165572$165694, 
                  FEPrivate`Not[DynamicChart`click$165572$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165572$165694, {{{1., 0.}, {0., 1.}}, {
                0.17979686437075768`, -0.08759616180200691}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165572$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["499", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.44529214307815984`, -0.4961444867750765}]}}}, 
                 StatusArea[#, 499]& , TagBoxNote -> "499"], 
                StyleBox["499", {}, StripOnInput -> False]], Annotation[#, 
                Style[499, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165578$165694, 
                  FEPrivate`Not[DynamicChart`click$165578$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165578$165694, {{{1., 0.}, {0., 1.}}, {
                0.13358764292344796`, -0.14884334603252297`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165578$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["345", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.14806813902958724`, -0.650015592619715}]}}}, 
                 StatusArea[#, 345]& , TagBoxNote -> "345"], 
                StyleBox["345", {}, StripOnInput -> False]], Annotation[#, 
                Style[345, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165584$165694, 
                  FEPrivate`Not[DynamicChart`click$165584$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165584$165694, {{{1., 0.}, {0., 1.}}, {
                0.04442044170887618, -0.19500467778591452`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165584$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["1320", {}, StripOnInput -> False], 
                    
                    TraditionalForm], {-0.4674911895149923, \
-0.4752856321942648}]}}}, StatusArea[#, 1320]& , TagBoxNote -> "1320"], 
                StyleBox["1320", {}, StripOnInput -> False]], Annotation[#, 
                Style[1320, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165590$165694, 
                  FEPrivate`Not[DynamicChart`click$165590$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165590$165694, {{{1., 0.}, {0., 
                1.}}, {-0.1402473568544977, -0.14258568965827945`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165590$165694}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}], 
   FormBox[
    FormBox[
     TemplateBox[{"1", "5", "6", "9", "10", "14"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9965728, 0.58382944, 0.22525344], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6643818666666668, 0.3892196266666667, 
                    0.15016896000000002`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9965728`", ",", "0.58382944`", ",", "0.22525344`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8704000000000001, 0.50272, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5802666666666667, 0.33514666666666665`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8704000000000001`", ",", "0.50272`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.49372288, 0.31936, 0.27266112000000015`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.74058432`", ",", "0.47903999999999997`", ",", 
                    "0.4089916800000002`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.42680576000000003`, 0.3325866666666667, 0.49611296], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.64020864`", ",", "0.49888000000000005`", ",", 
                    "0.74416944`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[119]:=",
 CellID->363177333]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"2471"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6W5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.05149461539056731`"}], "}"}], ",", 
                 RowBox[{"{", "14.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.026397012306561926`"}], "}"}], ",", 
                 RowBox[{"{", "10.`", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[119], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[119]=",
 CellID->772910957]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Proteome Time Series", "Subsubsection",
 CellID->1796762249],

Cell["We can now create time series for each of the proteins. ", "Text",
 CellID->1723717413],

Cell["\<\
For each protein we now extract a time series (list of values) corresponding \
to these times:\
\>", "MathCaption",
 CellID->141883528],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesProtein", "=", 
  RowBox[{"CreateTimeSeries", "[", "filteredProteinData", "]"}]}]], "Input",
 CellLabel->"In[120]:=",
 CellID->929606926],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.06539623262957527`"}], ",", "0", ",", 
              "0.002994714615415848`", ",", 
              RowBox[{"-", "0.03484490076135003`"}], ",", 
              RowBox[{"-", "0.01821227311815761`"}], ",", 
              "0.06270726568914738`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.08295938346569019`", ",", 
              "0.06898558805479732`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.050132042020201786`"}], ",", 
              RowBox[{"-", "0.13767416728731544`"}], ",", 
              RowBox[{"-", "0.012088757412992066`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[120], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[120]=",
 CellID->185873596]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Proteome Time Series", "Subsubsection",
 CellID->1908271188],

Cell[TextData[{
 "Next, we normalize each protein series, using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1758442397],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedProteinAll", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "timeSeriesProtein"}], "]"}]}]], "Input",
 CellLabel->"In[121]:=",
 CellID->471416365],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.20512151369766354`"}], ",", "0.`", ",", 
              "0.009393207686535883`", ",", 
              RowBox[{"-", "0.1092943507816164`"}], ",", 
              RowBox[{"-", "0.05712452965038666`"}], ",", 
              "0.19668731272116724`", ",", "0.5296378663769438`", ",", 
              "0.07400932770616492`", ",", 
              RowBox[{"-", "0.539240654836878`"}], ",", "0.2602100094709663`",
               ",", "0.21637986893336714`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.15724392568889564`"}], ",", 
              RowBox[{"-", "0.4318281414007336`"}], ",", 
              RowBox[{"-", "0.03791753927664883`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.05027722328878657`"}], ",", "0.`", ",", 
              "0.09612084857400716`", ",", "0.08485184825964483`", ",", 
              "0.2073722042772388`", ",", "0.18814267853211547`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.13483525476760364`", ",", 
              
              RowBox[{"-", "0.13334802450732536`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.18513498512557355`"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3695191728536936`"}]}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 16201641659859159471, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 16201641659859159471, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[121], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[121]=",
 CellID->1536305234]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->2143452651],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinFinalTimeSeries", "=", 
  RowBox[{"ConstantSeriesClean", "[", "normedProteinAll", "]"}]}]], "Input",
 CellLabel->"In[122]:=",
 CellID->970526932],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.20512151369766354`"}], ",", "0.`", ",", 
              "0.009393207686535883`", ",", 
              RowBox[{"-", "0.1092943507816164`"}], ",", 
              RowBox[{"-", "0.05712452965038666`"}], ",", 
              "0.19668731272116724`", ",", "0.5296378663769438`", ",", 
              "0.07400932770616492`", ",", 
              RowBox[{"-", "0.539240654836878`"}], ",", "0.2602100094709663`",
               ",", "0.21637986893336714`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.15724392568889564`"}], ",", 
              RowBox[{"-", "0.4318281414007336`"}], ",", 
              RowBox[{"-", "0.03791753927664883`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.05027722328878657`"}], ",", "0.`", ",", 
              "0.09612084857400716`", ",", "0.08485184825964483`", ",", 
              "0.2073722042772388`", ",", "0.18814267853211547`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.13483525476760364`", ",", 
              
              RowBox[{"-", "0.13334802450732536`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.18513498512557355`"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3695191728536936`"}]}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 16201641659859159471, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 16201641659859159471, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[122], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[122]=",
 CellID->1486179957]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Proteome Data", "Subsection",
 CellID->1059869896],

Cell["\<\
In addition to the above, we want to create a resampled distribution for the \
proteome dataset prior to classification and clustering. In this subsection \
we first resample the imported and labeled proteome dataset, Then, we carry \
out the full analysis in this \"bootstrap\" dataset, to create a set of \
random proteome time series. This bootstrap distribution of time series will \
be used to provide the cutoffs used in the time series classification in the \
following subsection.\
\>", "Text",
 CellID->214174283],

Cell[CellGroupData[{

Cell["Resampling the Proteome Data", "Subsubsection",
 CellID->444582009],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->168882663],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"proteinExample", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[123]:=",
 CellID->1585019354],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.061`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.053`", "}"}], ",", 
                 RowBox[{"{", "10", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.13`", "}"}], ",", 
                 RowBox[{"{", "8", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"6", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.888`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
              RowBox[{"7", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99987"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99995", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.027`", "}"}], ",", 
                 RowBox[{"{", "15", "}"}]}], "}"}]}], ",", 
              RowBox[{"99996", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.926`", "}"}], ",", 
                 RowBox[{"{", "6", "}"}]}], "}"}]}], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.993`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.325`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 123, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 123, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 123, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[123], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[123]=",
 CellID->844239042]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Proteome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->1807183132],

Cell[TextData[{
 "We apply a Box-Cox transformation to the bootstrap set proteomics data \
measurement in the OmicsObject, which is in the first list first component \
for each identifier. The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1847604807],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedProteinBootstrapData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"proteinBootstrap", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[124]:=",
 CellID->80455629],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.15017066817014188`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.15017066817014188`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->534263066],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2228174692911122`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2228174692911122],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->2122200127],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.3687984643437591`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.3687984643437591],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->840909824],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2879300846458019`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2879300846458019],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->53150085],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4791399700665757`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4791399700665757],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1067283359],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3408826705882606`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3408826705882606],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1639847900],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.36683619844100357`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.36683619844100357`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->961166574],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.06735147105718207`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.06735147105718207],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1489251853],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.13961988867477013`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.13961988867477013`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1713518480],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.15632482895988384`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.15632482895988384`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->499513137],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.1004790270547353`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.1004790270547353],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->406807222],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.1867068807032459`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.1867068807032459],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->690439218],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.21520312209478668`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.21520312209478668`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->820946473]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.05894938566154792`", "}"}], ",", 
                 RowBox[{"{", "1.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.05144349547436535`", "}"}], ",", 
                 RowBox[{"{", "10.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.12110290200091585`", "}"}], ",", 
                 RowBox[{"{", "8.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99991"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.0070283213420885195`"}], "}"}], ",", 
                 RowBox[{"{", "1.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.27554911350071687`", "}"}], ",", 
                 RowBox[{"{", "1.`", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 124, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 124, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 124, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[124], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[124]=",
 CellID->2128264267]
}, Open  ]],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys to actual days:"
}], "MathCaption",
 CellID->1446718475],

Cell[BoxData[
 RowBox[{
  RowBox[{"proteinBootstrapLongitudinal", "=", 
   RowBox[{"KeyMap", "[", 
    RowBox[{"sampleToDays", ",", "transformedProteinBootstrapData"}], "]"}]}],
   ";"}]], "Input",
 CellLabel->"In[125]:=",
 CellID->1187557991],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->918869862],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinBootstrapData", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinBootstrapLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[126]:=",
 CellID->890865057],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380", ",", 
   "400"}], "}"}]], "Output",
 CellLabel->"Out[126]=",
 CellID->1249911037]
}, Open  ]],

Cell[TextData[{
 "As with the regular protein data above use the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantAssociator"]], 
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed bootstrap data. Timepoints \
\"255\" (zero measurement assumed to have at least 2 unique peptides \
available per protein) and \"329\", assumed to be Missing data:"
}], "MathCaption",
 CellID->916506595],

Cell[BoxData[
 RowBox[{
  RowBox[{"proteinBootstrapLongitudinalEnlarged", "=", 
   RowBox[{"ConstantAssociator", "[", 
    RowBox[{"proteinBootstrapLongitudinal", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<255\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
       RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[127]:=",
 CellID->1973625881],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->19000568],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinBootstrap", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinBootstrapLongitudinalEnlarged", 
   "]"}]}]], "Input",
 CellLabel->"In[128]:=",
 CellID->1514966620],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[128]=",
 CellID->569763905]
}, Open  ]],

Cell[TextData[{
 "We filter out proteomics bootstrap data with less than 2 unique peptides \
per protein. The unique peptides is reported as the second list, first \
component in the ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " values in this case:"
}], "MathCaption",
 CellID->1183809265],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrapUnique", "=", 
  RowBox[{"FilteringFunction", "[", 
   RowBox[{"proteinBootstrapLongitudinalEnlarged", ",", "2", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "2"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[129]:=",
 CellID->1993811047],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.05144349547436535`", "}"}], ",", 
                 RowBox[{"{", "10.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.12110290200091585`", "}"}], ",", 
                 RowBox[{"{", "8.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"8", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07468549415355666`", "}"}], ",", 
                 RowBox[{"{", "4.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"9", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.150168186299147`"}], "}"}], ",", 
                 RowBox[{"{", "14.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99992"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"88851", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"47564", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"39785", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"81335", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"2", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99998"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"81335", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[129], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[129]=",
 CellID->1808037231]
}, Open  ]],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
bootstrap samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1212150445],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredProteinBootstrapData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"proteinBootstrapUnique", ",", 
    RowBox[{"3", "/", "4"}]}], "]"}]}]], "Input",
 CellLabel->"In[130]:=",
 CellID->1582653673],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.595], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.595], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 142.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{35.65072057646117, 51.15349202438874}, {
           67.05973819184112, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 142]& ,
        TagBoxNote->"142"],
       StyleBox["142", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.5, 0}, {2.5, 1220.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{50.65349202438874, 66.15626347231631}, {
           61.43907938575053, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1220]& ,
        TagBoxNote->"1220"],
       StyleBox["1220", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1220, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.5, 0}, {3.5, 5012.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{65.65626347231631, 81.1590349202439}, {
           41.66770814948383, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5012]& ,
        TagBoxNote->"5012"],
       StyleBox["5012", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5012, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.5, 0}, {4.5, 11693.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{80.6590349202439, 96.16180636817145}, {
           6.833179871662658, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11693]& ,
        TagBoxNote->"11693"],
       StyleBox["11693", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11693, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.5, 0}, {5.5, 18728.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{95.66180636817145, 
           111.16457781609904`}, {-29.8470935057467, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 18728]& ,
        TagBoxNote->"18728"],
       StyleBox["18728", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18728, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.5, 0}, {6.5, 22396.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{110.66457781609904`, 
           126.1673492640266}, {-48.97193256023675, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 22396]& ,
        TagBoxNote->"22396"],
       StyleBox["22396", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[22396, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.5, 0}, {7.5, 19536.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{125.6673492640266, 
           141.17012071195418`}, {-34.05998062571069, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 19536]& ,
        TagBoxNote->"19536"],
       StyleBox["19536", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[19536, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.5, 0}, {8.5, 12532.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{140.67012071195418`, 156.17289215988177`}, {
           2.458659706254494, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 12532]& ,
        TagBoxNote->"12532"],
       StyleBox["12532", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12532, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.5, 0}, {9.5, 5943.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{155.67289215988177`, 171.17566360780933`}, {
           36.81350281695104, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5943]& ,
        TagBoxNote->"5943"],
       StyleBox["5943", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5943, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9.5, 0}, {10.5, 2117.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{170.67566360780933`, 186.1784350557369}, {
           56.76214900628554, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2117]& ,
        TagBoxNote->"2117"],
       StyleBox["2117", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2117, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10.5, 0}, {11.5, 573.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{185.6784350557369, 201.18120650366447`}, {
           64.81251746324646, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 573]& ,
        TagBoxNote->"573"],
       StyleBox["573", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[573, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{11.5, 0}, {12.5, 96.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{200.68120650366447`, 216.18397795159206`}, {
           67.29958077540343, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 96]& ,
        TagBoxNote->"96"],
       StyleBox["96", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[96, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{12.5, 0}, {13.5, 12.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{215.68397795159206`, 231.18674939951964`}, {
           67.73755418886503, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 12]& ,
        TagBoxNote->"12"],
       StyleBox["12", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{0.24, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{0.5, 13.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[130]:=",
 CellID->1368119989],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "142"}], ",", 
     RowBox[{"2", "\[Rule]", "1220"}], ",", 
     RowBox[{"3", "\[Rule]", "5012"}], ",", 
     RowBox[{"4", "\[Rule]", "11693"}], ",", 
     RowBox[{"5", "\[Rule]", "18728"}], ",", 
     RowBox[{"6", "\[Rule]", "22396"}], ",", 
     RowBox[{"7", "\[Rule]", "19536"}], ",", 
     RowBox[{"8", "\[Rule]", "12532"}], ",", 
     RowBox[{"9", "\[Rule]", "5943"}], ",", 
     RowBox[{"10", "\[Rule]", "2117"}], ",", 
     RowBox[{"11", "\[Rule]", "573"}], ",", 
     RowBox[{"12", "\[Rule]", "96"}], ",", 
     RowBox[{"13", "\[Rule]", "12"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[130]:=",
 CellID->885246694],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$168596$168835 = False, 
       DynamicChart`click$168602$168835 = False, 
       DynamicChart`click$168608$168835 = False, 
       DynamicChart`click$168614$168835 = False, 
       DynamicChart`click$168620$168835 = False, 
       DynamicChart`click$168626$168835 = False, 
       DynamicChart`click$168632$168835 = False, 
       DynamicChart`click$168638$168835 = False, 
       DynamicChart`click$168644$168835 = False, 
       DynamicChart`click$168650$168835 = False, 
       DynamicChart`click$168656$168835 = False, 
       DynamicChart`click$168662$168835 = False, 
       DynamicChart`click$168668$168835 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.132670530453598, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 142]& , TagBoxNote -> "142"], 
                    StyleBox["142", {}, StripOnInput -> False]], Annotation[#, 
                    Style[142, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168596$168835, 
                    FEPrivate`Not[DynamicChart`click$168596$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168596$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.199998009896269, 0.0008922093542924382}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168596$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.988576, 0.6767648, 0.2841781333333333]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.056015669706007, 
                    3.132670530453598}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 1220]& , TagBoxNote -> "1220"], 
                    StyleBox["1220", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[1220, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168602$168835, 
                    FEPrivate`Not[DynamicChart`click$168602$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168602$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19977678950077757`, 0.009446394908218388}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168602$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.994288, 0.6103824, 0.24208906666666669`]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.741102422110166, 
                    3.056015669706007}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 5012]& , TagBoxNote -> "5012"], 
                    StyleBox["5012", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[5012, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168608$168835, 
                    FEPrivate`Not[DynamicChart`click$168608$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168608$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19412248198905793`, 0.04812963729769719}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168608$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.006409564141657, 
                    2.741102422110166}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 11693]& , TagBoxNote -> "11693"], 
                    StyleBox["11693", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[11693, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168614$168835, 
                    FEPrivate`Not[DynamicChart`click$168614$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168614$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.14388299307930927`, 0.13891610526695403`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168614$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.928, 0.5210666666666667, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.8296946198130639, 
                    2.006409564141657}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 18728]& , TagBoxNote -> "18728"], 
                    StyleBox["18728", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[18728, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168620$168835, 
                    FEPrivate`Not[DynamicChart`click$168620$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168620$168835, {{{1., 0.}, {0., 1.}}, {
                    0.03043019727813825, 0.19767145239921113`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168620$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.5774875615828763, 
                    0.8296946198130639}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 22396]& , TagBoxNote -> "22396"], 
                    StyleBox["22396", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[22396, {}], "Tooltip"]& ], 
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168626$168835, 
                    FEPrivate`Not[DynamicChart`click$168626$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168626$168835, {{{1., 0.}, {0., 1.}}, {
                    0.19841189618432042`, 0.02515391525274853}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168626$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8049706431934798`, -0.5774875615828763}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 19536]& , 
                    TagBoxNote -> "19536"], 
                    StyleBox["19536", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[19536, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168632$168835, 
                    FEPrivate`Not[DynamicChart`click$168632$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168632$168835, {{{1., 0.}, {0., 1.}}, {
                    0.07410370626023725, -0.1857650147861445}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168632$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.5923794258892263`, -1.8049706431934798`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 12532]& , 
                    TagBoxNote -> "12532"], 
                    StyleBox["12532", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[12532, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168638$168835, 
                    FEPrivate`Not[DynamicChart`click$168638$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168638$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.11748587423872935`, -0.1618550875146082}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168638$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.965789128694909, -2.5923794258892263`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 5943]& , 
                    TagBoxNote -> "5943"], 
                    StyleBox["5943", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[5943, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168644$168835, 
                    FEPrivate`Not[DynamicChart`click$168644$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168644$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.18700204879205642`, -0.0709241407954538}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168644$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.0988041616479007`, -2.965789128694909}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 2117]& , 
                    TagBoxNote -> "2117"], 
                    StyleBox["2117", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[2117, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168650$168835, 
                    FEPrivate`Not[DynamicChart`click$168650$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168650$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19880662692911488`, -0.021815707393246214`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168650$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6167072, 0.5082666666666666, 0.7586295999999999]], 
               
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.134806813458039, -3.0988041616479007`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 573]& , 
                    TagBoxNote -> "573"], 
                    StyleBox["573", {}, StripOnInput -> False]], Annotation[#, 
                    Style[573, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168656$168835, 
                    FEPrivate`Not[DynamicChart`click$168656$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168656$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19993856278568675`, -0.004956925578824368}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168656$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.5579536, 0.5317333333333334, 0.7947799999999999]], 
               
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.140838671352932, -3.134806813458039}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 96]& , 
                    TagBoxNote -> "96"], 
                    StyleBox["96", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[96, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168662$168835, 
                    FEPrivate`Not[DynamicChart`click$168662$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168662$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19999857877864946`, -0.0007539804509012958}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168662$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.140838671352932}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 12]& , 
                    TagBoxNote -> "12"], 
                    StyleBox["12", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[12, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168668$168835, 
                    FEPrivate`Not[DynamicChart`click$168668$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168668$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19999998578776984`, -0.00007539822190018135}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168668$168835}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["142", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666600329875633, 
                    0.0029740311809747936`}]}}}, StatusArea[#, 142]& , 
                 TagBoxNote -> "142"], 
                StyleBox["142", {}, StripOnInput -> False]], Annotation[#, 
                Style[142, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168596$168835, 
                  FEPrivate`Not[DynamicChart`click$168596$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168596$168835, {{{1., 0.}, {0., 
                1.}}, {-0.199998009896269, 0.0008922093542924382}}, {{1, 0}, {
               0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168596$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["1220", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6659226316692585, 
                    0.031487983027394625`}]}}}, StatusArea[#, 1220]& , 
                 TagBoxNote -> "1220"], 
                StyleBox["1220", {}, StripOnInput -> False]], Annotation[#, 
                Style[1220, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168602$168835, 
                  FEPrivate`Not[DynamicChart`click$168602$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168602$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19977678950077757`, 0.009446394908218388}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168602$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["5012", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6470749399635264, 
                    0.1604321243256573}]}}}, StatusArea[#, 5012]& , 
                 TagBoxNote -> "5012"], 
                StyleBox["5012", {}, StripOnInput -> False]], Annotation[#, 
                Style[5012, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168608$168835, 
                  FEPrivate`Not[DynamicChart`click$168608$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168608$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19412248198905793`, 0.04812963729769719}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168608$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["11693", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.4796099769310308, 
                    0.46305368422318005`}]}}}, StatusArea[#, 11693]& , 
                 TagBoxNote -> "11693"], 
                StyleBox["11693", {}, StripOnInput -> False]], Annotation[#, 
                Style[11693, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168614$168835, 
                  FEPrivate`Not[DynamicChart`click$168614$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168614$168835, {{{1., 0.}, {0., 
                1.}}, {-0.14388299307930927`, 0.13891610526695403`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168614$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["18728", {}, StripOnInput -> False], 
                    TraditionalForm], {0.10143399092712749`, 
                    0.6589048413307037}]}}}, StatusArea[#, 18728]& , 
                 TagBoxNote -> "18728"], 
                StyleBox["18728", {}, StripOnInput -> False]], Annotation[#, 
                Style[18728, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168620$168835, 
                  FEPrivate`Not[DynamicChart`click$168620$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168620$168835, {{{1., 0.}, {0., 1.}}, {
                0.03043019727813825, 0.19767145239921113`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168620$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["22396", {}, StripOnInput -> False], 
                    TraditionalForm], {0.6613729872810681, 
                    0.08384638417582842}]}}}, StatusArea[#, 22396]& , 
                 TagBoxNote -> "22396"], 
                StyleBox["22396", {}, StripOnInput -> False]], Annotation[#, 
                Style[22396, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168626$168835, 
                  FEPrivate`Not[DynamicChart`click$168626$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168626$168835, {{{1., 0.}, {0., 1.}}, {
                0.19841189618432042`, 0.02515391525274853}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168626$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["19536", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.24701235420079082`, -0.6192167159538149}]}}}, 
                 StatusArea[#, 19536]& , TagBoxNote -> "19536"], 
                StyleBox["19536", {}, StripOnInput -> False]], Annotation[#, 
                Style[19536, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168632$168835, 
                  FEPrivate`Not[DynamicChart`click$168632$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168632$168835, {{{1., 0.}, {0., 1.}}, {
                0.07410370626023725, -0.1857650147861445}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168632$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["12532", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.3916195807957644, \
-0.5395169583820272}]}}}, StatusArea[#, 12532]& , TagBoxNote -> "12532"], 
                StyleBox["12532", {}, StripOnInput -> False]], Annotation[#, 
                Style[12532, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168638$168835, 
                  FEPrivate`Not[DynamicChart`click$168638$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168638$168835, {{{1., 0.}, {0., 
                1.}}, {-0.11748587423872935`, -0.1618550875146082}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168638$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["5943", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.623340162640188, \
-0.23641380265151263`}]}}}, StatusArea[#, 5943]& , TagBoxNote -> "5943"], 
                StyleBox["5943", {}, StripOnInput -> False]], Annotation[#, 
                Style[5943, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168644$168835, 
                  FEPrivate`Not[DynamicChart`click$168644$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168644$168835, {{{1., 0.}, {0., 
                1.}}, {-0.18700204879205642`, -0.0709241407954538}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168644$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["2117", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6626887564303829, \
-0.07271902464415403}]}}}, StatusArea[#, 2117]& , TagBoxNote -> "2117"], 
                StyleBox["2117", {}, StripOnInput -> False]], Annotation[#, 
                Style[2117, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168650$168835, 
                  FEPrivate`Not[DynamicChart`click$168650$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168650$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19880662692911488`, -0.021815707393246214`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168650$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["573", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6664618759522891, \
-0.01652308526274789}]}}}, StatusArea[#, 573]& , TagBoxNote -> "573"], 
                StyleBox["573", {}, StripOnInput -> False]], Annotation[#, 
                Style[573, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168656$168835, 
                  FEPrivate`Not[DynamicChart`click$168656$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168656$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19993856278568675`, -0.004956925578824368}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168656$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["96", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666619292621648, \
-0.0025132681696709855`}]}}}, StatusArea[#, 96]& , TagBoxNote -> "96"], 
                StyleBox["96", {}, StripOnInput -> False]], Annotation[#, 
                Style[96, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168662$168835, 
                  FEPrivate`Not[DynamicChart`click$168662$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168662$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19999857877864946`, -0.0007539804509012958}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168662$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["12", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666666192925661, \
-0.00025132740633393777`}]}}}, StatusArea[#, 12]& , TagBoxNote -> "12"], 
                StyleBox["12", {}, StripOnInput -> False]], Annotation[#, 
                Style[12, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168668$168835, 
                  FEPrivate`Not[DynamicChart`click$168668$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168668$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19999998578776984`, -0.00007539822190018135}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168668$168835}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13"}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6590506666666667, 0.4511765333333334, 
                    0.18945208888888887`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.988576`", ",", "0.6767648`", ",", 
                    "0.2841781333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6628586666666667, 0.4069216, 0.16139271111111114`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.994288`", ",", "0.6103824`", ",", 
                    "0.24208906666666669`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.544`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6186666666666667, 0.3473777777777778, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.928`", ",", "0.5210666666666667`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.928, 0.5210666666666667, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.928, 0.5210666666666667, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5706666666666668, 0.3320888888888889, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8560000000000001`", ",", "0.4981333333333333`", ",", 
                    "0.2`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.784`", ",", "0.47519999999999996`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.49854684444444447`, 0.31893333333333335`, 
                    0.24943982222222214`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7478202666666667`", ",", "0.4784`", ",", 
                    "0.3741597333333332`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4744270222222222, 0.32106666666666667`, 
                    0.36554631111111113`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7116405333333333`", ",", "0.4816`", ",", 
                    "0.5483194666666666`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6754608`", ",", "0.4848`", ",", "0.7224792`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4111381333333334, 0.33884444444444445`, 
                    0.5057530666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6167072`", ",", "0.5082666666666666`", ",", 
                    "0.7586295999999999`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37196906666666674`, 0.35448888888888896`, 
                    0.5298533333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5579536`", ",", "0.5317333333333334`", ",", 
                    "0.7947799999999999`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13}], 
             "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None", ",", "None", ",", "None", ",", "None"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[130]:=",
 CellID->574479642]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"10", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.0440972546516367`"}], "}"}], ",", 
                 RowBox[{"{", "15.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"15", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.09820855580560213`", "}"}], ",", 
                 RowBox[{"{", "2.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"83", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.26095238819475913`", "}"}], ",", 
                 RowBox[{"{", "4.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"131", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.05787920075595823`"}], "}"}], ",", 
                 RowBox[{"{", "3.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"6366"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"88885", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"91871", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"92952", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"96125", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"10", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              TemplateBox[{"6372"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[130], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[130]=",
 CellID->314696655]
}, Open  ]],

Cell["\<\
For each bootstrap protein we now extract a time series (list of values):\
\>", "MathCaption",
 CellID->1388846014],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesProteinBootstrap", "=", 
  RowBox[{
  "CreateTimeSeries", "[", "filteredProteinBootstrapData", "]"}]}]], "Input",
 CellLabel->"In[131]:=",
 CellID->1335198055],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[131], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[131]=",
 CellID->2001941671]
}, Open  ]],

Cell[TextData[{
 "Next, we normalize each protein series, using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1164916883],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedProteinBootstrapAll", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "timeSeriesProteinBootstrap"}], "]"}]}]], "Input",\

 CellLabel->"In[132]:=",
 CellID->149642882],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"10", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.03144802637947889`"}], ",", "0.`", ",", 
              "0.06407161618429313`", ",", 
              RowBox[{"-", "0.11500814497472765`"}], ",", 
              "0.02030351406722126`", ",", 
              RowBox[{"-", "0.05862659638869126`"}], ",", 
              RowBox[{"-", "0.023784381510738785`"}], ",", 
              TemplateBox[{"20"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", 
               TemplateBox[{"19"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"-", "0.06295888538654712`"}], ",", 
              RowBox[{"-", "0.17115950215528627`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.7173193068037694`", ",", 
              
              RowBox[{"Missing", "[", "]"}], ",", "0.3749107966117535`"}], 
             "}"}]}], ",", 
           TemplateBox[{"6372"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 132, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 132, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 132, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[132], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[132]=",
 CellID->2007366948]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1523959247],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrapFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedProteinBootstrapAll", "]"}]}]], "Input",
 CellLabel->"In[133]:=",
 CellID->145606560],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"10", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.03144802637947889`"}], ",", "0.`", ",", 
              "0.06407161618429313`", ",", 
              RowBox[{"-", "0.11500814497472765`"}], ",", 
              "0.02030351406722126`", ",", 
              RowBox[{"-", "0.05862659638869126`"}], ",", 
              RowBox[{"-", "0.023784381510738785`"}], ",", 
              TemplateBox[{"20"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", 
               TemplateBox[{"19"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"-", "0.06295888538654712`"}], ",", 
              RowBox[{"-", "0.17115950215528627`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.7173193068037694`", ",", 
              
              RowBox[{"Missing", "[", "]"}], ",", "0.3749107966117535`"}], 
             "}"}]}], ",", 
           TemplateBox[{"6372"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 133, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 133, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 133, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[133], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[133]=",
 CellID->848200666]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Proteome Time Series", "Subsection",
 CellID->2003973854],

Cell[TextData[{
 "In this subsection we will classify the proteome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileEstimator"]], 
    "paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for the \"LombScargle\" method to provide a cutoff for the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " inputs."
}], "Text",
 CellID->1328457457],

Cell["\<\
First, we estimate for the \"LombScargle\" Method, 0.95 quantile cutoff from \
the bootstrap proteome data:\
\>", "MathCaption",
 CellID->1629616244],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95Protein", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"proteinBootstrapFinalTimeSeries", ",", "timesProteinBootstrap"}], 
   "]"}]}]], "Input",
 CellLabel->"In[268]:=",
 CellID->2101262717],

Cell[BoxData["0.8350640860442666`"], "Output",
 CellLabel->"Out[268]=",
 CellID->384258966]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
proteome data:\
\>", "MathCaption",
 CellID->218785383],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95ProteinSpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "proteinBootstrapFinalTimeSeries", ",", "timesProteinBootstrap", ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[270]:=",
 CellID->633928417],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"12", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.804264750066626`", ",", 
      RowBox[{"-", "0.8380547398330289`"}]}], "}"}]}], ",", 
   RowBox[{"13", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.8027925581149449`", ",", 
      RowBox[{"-", "0.8174904385249819`"}]}], "}"}]}], ",", 
   RowBox[{"14", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.7877720084250821`", ",", 
      RowBox[{"-", "0.8216094289485545`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[270]=",
 CellID->1148116342]
}, Open  ]],

Cell["\<\
Now we can classify the proteome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1746502806],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"proteinFinalTimeSeries", ",", "timesProtein", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95Protein"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95ProteinSpikes"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[271]:=",
 CellID->1666173246],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[271]:=",
 CellID->1621576223],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 271, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 271, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 271, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[271], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[271]=",
 CellID->116615884]
}, Open  ]],

Cell[TextData[{
 "As discussed above, the default output for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " is an ",
 Cell[BoxData["Association"], "InlineFormula"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". "
}], "Text",
 CellID->808687274],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->690387281],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "proteinClassification", "]"}]], "Input",
 CellLabel->"In[137]:=",
 CellID->484887026],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",\

 CellLabel->"Out[137]=",
 CellID->459471277]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->1931356472],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "proteinClassification"}]], "Input",
 CellLabel->"In[272]:=",
 CellID->1092900499],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "124"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "48"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "77"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "7"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "36"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "18"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[272]=",
 CellID->1294671978]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->642146293],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "proteinClassification"}]], "Input",
 CellLabel->"In[273]:=",
 CellID->1447420276],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"O00160\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00267\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00273\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00571\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O15031\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43143\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43175\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43312\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43516\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O60271\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O60879\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O75643\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O75792\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O95498\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P00488\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P00915\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P02042\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P02671\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P04844\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P08174\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P09326\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P09496\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P11021\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P12956\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13501\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13611\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13667\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P19387\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P23141\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P23368\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P32119\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P32189\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P33176\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P40306\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P42892\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P50225\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P51531\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P52888\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P54920\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P55036\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P60660\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P84095\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q01518\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q07021\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q08722\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q09666\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13151\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13217\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13488\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14165\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14643\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14653\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q15084\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q5H9R7\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q6NYC8\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q709C8\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q86YP4\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q92499\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96AT9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96L92\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96RT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q99439\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BTE3\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BTV4\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BWS9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9C0I1\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H0D6\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H2U2\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H444\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H4Z3\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NS69\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NUP9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NVJ2\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NYB0\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9UQ35\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9Y277\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9Y2Q0\"\>", ",", "\<\"Protein\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[273]=",
 CellID->157992455]
}, Open  ]],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["True"]], "paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1243280944],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"proteinFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesRNA", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[140]:=",
 CellID->806940498],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[140]=",
 CellID->1715219372]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metabolomic Data", "Section",
 CellID->779816621],

Cell[CellGroupData[{

Cell["Importing OmicsObject Metabolome Data", "Subsection",
 CellID->1971981026],

Cell[TextData[{
 "We now import the metabolomics data example (for details on how to import \
such data please refer to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporter"]], "paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirect"]], 
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DataImporterDirectLabeled"]], 
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObjectCreator"]], 
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->1838680125],

Cell["\<\
We import the metabolomics OmicsObject MathIOmica examples for each of \
positive and negative mass spectrometry aligned mass features:\
\>", "MathCaption",
 CellID->902655240],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesNegativeModeExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", 
      "\"\<metabolomicsNegativeModeExample\>\""}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[141]:=",
 CellID->1102136272],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"23444", ",", "16317", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"2289"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"421.948`", ",", "0.39287496`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "115528", ",", "130042"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C11 H12 Cl2 O11 S, db=0.00, overall=48.58, \
mfg=97.17 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[141], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[141]=",
 CellID->1616524567]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesPositiveModeExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", 
      "\"\<metabolomicsPositiveModeExample\>\""}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[142]:=",
 CellID->1021092447],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "202.0329`", ",", "0.33260712`", ",", "\<\"Meta\"\>"}], "}"}],
                "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"263741", ",", "276622", ",", "337241"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "174.0375`", ",", "0.33451426`", ",", "\<\"Meta\"\>"}], "}"}],
                "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"78435", ",", "88529", ",", "121073"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], 
              ",", 
              TemplateBox[{"3670"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "36919", ",", "102737"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"8"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"19\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[142], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[142]=",
 CellID->1548290285]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->969019879],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", 
  "metabolitesNegativeModeExample"}]], "Input",
 CellLabel->"In[143]:=",
 CellID->1948611152],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>"}], "}"}]], "Output",
 CellLabel->"Out[143]=",
 CellID->1243364280]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", 
  "metabolitesPositiveModeExample"}]], "Input",
 CellLabel->"In[144]:=",
 CellID->619818574],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>"}], "}"}]], "Output",
 CellLabel->"Out[144]=",
 CellID->1440862894]
}, Open  ]],

Cell["\<\
We notice that sample 7, 18 and 21 are missing as there was no sample for \
these time points. This will be addressed further below.\
\>", "Text",
 CellID->1900924848],

Cell[TextData[{
 "We can get the intensity data from any sample and entry. For example, the \
",
 Cell[BoxData[
  SuperscriptBox["77", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["155", "th"]], "InlineFormula"],
 " entries in sample 14:"
}], "MathCaption",
 CellID->729703917],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<14\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"77", ",", "155"}], "}"}]}], "]"}], "@", 
  "metabolitesNegativeModeExample"}]], "Input",
 CellLabel->"In[145]:=",
 CellID->2002108649],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"322.0892`", ",", "0.4402413`", ",", "\<\"Meta\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"31950", ",", "29801", ",", "27440"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Isosorbide-2-glucuronide [ C12 H18 O10, db=60.03, \
overall=60.67, mfg=61.31, KEGG ID=, CAS ID=29542-01-6 ]\"\>", 
        ",", "\<\"29542-01-6\"\>"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"146.0588`", ",", "0.7426923`", ",", "\<\"Meta\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"62667", ",", "1", ",", "60382"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Adipic acid [ C6 H10 O4, db=45.74, overall=46.59, \
mfg=47.44, KEGG ID=, CAS ID=124-04-9 ]\"\>", ",", "\<\"124-04-9\"\>"}], 
       "}"}]}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[145]=",
 CellID->81485738]
}, Open  ]],

Cell[TextData[{
 "The outer keys correspond to the identified features in the form {mass to \
charge ratio (m/z), retention time, \"Meta\"}, i.e. each m/z and retention \
time has been tagged with a \"Meta\" label as well to indicate these are \
metabolomics data. The  values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example: ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "1"}], 
       ",", 
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "2"}], 
       ",", 
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "3"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Annotations", ",", " ", 
       RowBox[{"CAS", " ", "Number"}]}], "}"}]}], "}"}]}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->527526154],

Cell[TextData[{
 "We would like to combine the positive and negative mode metabolomics data. \
We will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["EnlargeInnerAssociation"]], 
    "paclet:MathIOmica/ref/EnlargeInnerAssociation"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->449223127],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesExample", "=", 
  RowBox[{"EnlargeInnerAssociation", "[", 
   RowBox[{"{", 
    RowBox[{
    "metabolitesNegativeModeExample", ",", "metabolitesPositiveModeExample"}],
     "}"}], "]"}]}]], "Input",
 CellLabel->"In[146]:=",
 CellID->1688076284],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"23444", ",", "16317", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "36919", ",", "102737"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], "}"}], ",", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton"]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 146, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 146, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 146, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[146], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[146]=",
 CellID->2034427395]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing of Metabolome Data", "Subsection",
 CellID->1357359281],

Cell["\<\
We will next preprocess the imported metabolome data. We will first perform \
calculate the median of the technical replicates, transform the data towards \
a normal distribution, then we will re-label the samples with real time and \
carry out filtering for missing data. Finally, we will create the \
metabolomics time series or relative intensities compared to the healthy \
reference point for each mass feature identified.\
\>", "Text",
 CellID->1802528277],

Cell[CellGroupData[{

Cell["\<\
Medians of Technical Triplicates, Data Transformation, Labeling, Filtering, \
Matching Mass\
\>", "Subsubsection",
 CellID->524759768],

Cell[CellGroupData[{

Cell["Median of Technical Triplicates", "Subsubsubsection",
 CellID->1551861331],

Cell["\<\
The metabolomics intensities have three measurements, corresponding to \
technical triplicates. Typically we would like to use the median of these \
values. An additional complication is that some of the triplicates have \
intensity values of 1, which should be taken as a Missing value. We can use \
MeasurementApplier to perform the calculation:\
\>", "Text",
 CellID->944497302],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["MeasurementApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/MeasurementApplier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", 
      StyleBox["omicsObject", "TI"]}], "]"}], Cell[TextData[{
     "applies a ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to the measurement list of an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", ignoring missing values."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1659581078],

Cell[TextData[{
 "Applying a function to the measurements in an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 "."
}], "Caption",
 CellID->1061570710],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ComponentIndex"]], "paclet:MathIOmica/ref/ComponentIndex"},
       
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for MathIOmica functions, such as ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Applier"]], "paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", that allows selection of which component of a list to use in an \
association or ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input or output values."
    }], "TableText"]},
   {"IgnorePattern", "_Missing", Cell[TextData[{
     Cell[BoxData["IgnorePattern"], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["MeasurementApplier"], "InlineFormula"],
     " specifying a pattern of values to delete prior to applying the \
function to the measurement list."
    }], "TableText"]},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], "1", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ListIndex"]], "paclet:MathIOmica/ref/ListIndex"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for MathIOmica functions, such as ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Applier"]], "paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " that allows selection of which list to use in the association or \
OmicsObject input or output values."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->524783694],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["MeasurementApplier"]], 
    "paclet:MathIOmica/ref/MeasurementApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->324206829],

Cell["\<\
We implement a Median calculation, and ignoring entries with missing and \
values of 1:\
\>", "MathCaption",
 CellID->873132756],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metaboliteMedians", "=", 
  RowBox[{"MeasurementApplier", "[", 
   RowBox[{"Median", ",", "metabolitesExample", ",", 
    RowBox[{"IgnorePattern", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"_Missing", "|", " ", "1", "|", "1."}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[147]:=",
 CellID->986470141],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "19880.5`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "69828.`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "16606.5`", "}"}], ",", 
                 RowBox[{"{", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[147], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[147]=",
 CellID->469857818]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Power Transformation", "Subsubsubsection",
 CellID->128983684],

Cell[TextData[{
 "We apply a Box-Cox transformation to the metabolite median data in the \
OmicsObject, which is now the first list first component for each identifier. \
The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1069961234],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedMetaboliteData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"metaboliteMedians", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[148]:=",
 CellID->1957883507],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2888569651995717`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2888569651995717],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->64325918],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.28237388560304527`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.28237388560304527`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->107170713],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2762019481112037`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2762019481112037],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->95796752],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2620754231729624`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2620754231729624],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->824325630],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27130818835487147`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27130818835487147`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->524837664],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27702965627620246`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27702965627620246`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1492609609],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.29539457602287605`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.29539457602287605`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1812054345],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2648334191658074`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2648334191658074],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1204774573],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2785561129338028`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2785561129338028],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1653787195],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26951291666846366`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26951291666846366`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1967842748],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2657839634539137`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2657839634539137],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1388283531],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2627686191517685`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2627686191517685],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->66431071]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.263454850806397`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3238554275098924`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[148], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[148]=",
 CellID->637169717]
}, Open  ]],

Cell["\<\
We can plot the data to see what the resulting distributions look like:\
\>", "MathCaption",
 CellID->2078239195],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "transformedMetaboliteData"}], ")"}]}]], "Input",
 CellLabel->"In[149]:=",
 CellID->144631910],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.518], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.518], Thickness[Small]}], 
        RectangleBox[{3.21, 0}, {3.22, 3.},
         RoundingRadius->0], RectangleBox[{3.22, 0}, {3.23, 8.},
         RoundingRadius->0], RectangleBox[{3.23, 0}, {3.24, 17.},
         RoundingRadius->0], RectangleBox[{3.24, 0}, {3.25, 55.},
         RoundingRadius->0], RectangleBox[{3.25, 0}, {3.26, 97.},
         RoundingRadius->0], RectangleBox[{3.26, 0}, {3.27, 169.},
         RoundingRadius->0], RectangleBox[{3.27, 0}, {3.28, 254.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 322.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 352.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 461.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 502.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 528.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 549.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 496.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 452.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 440.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 369.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 292.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 181.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 154.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 91.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 68.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 37.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 9.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2052, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.21, 3.45}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.504], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.504], Thickness[Small]}], 
        RectangleBox[{3.27, 0}, {3.28, 3.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 6.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 23.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 44.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 88.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 142.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 209.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 249.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 328.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 411.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 441.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 466.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 482.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 500.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 486.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 431.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 388.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 353.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 284.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 185.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 145.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 106.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 68.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 44.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 23.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 3.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2648, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.27, 3.53}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{3.32, 0}, {3.33, 1.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 3.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 13.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 21.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 50.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 85.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 134.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 188.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 225.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 281.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 370.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 397.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 428.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 446.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 447.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 422.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 445.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 377.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 359.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 320.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 262.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 201.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 141.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 97.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 70.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 63.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 30.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 11.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3144, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.32, 3.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], 
        RectangleBox[{3.45, 0}, {3.46, 1.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 9.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 10.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 17.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 33.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 52.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 82.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 138.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 149.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 171.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 199.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 242.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 274.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 312.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 299.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 323.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 297.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 301.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 300.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 298.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 281.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 262.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 244.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 241.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 185.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 156.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 108.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 76.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 70.},
         RoundingRadius->0], RectangleBox[{3.74, 0}, {3.75, 54.},
         RoundingRadius->0], RectangleBox[{3.75, 0}, {3.76, 44.},
         RoundingRadius->0], RectangleBox[{3.76, 0}, {3.77, 21.},
         RoundingRadius->0], RectangleBox[{3.77, 0}, {3.78, 14.},
         RoundingRadius->0], RectangleBox[{3.78, 0}, {3.79, 3.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4432, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.45, 3.79}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.469], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.469], Thickness[Small]}], 
        RectangleBox[{3.36, 0}, {3.37, 1.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 4.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 5.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 21.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 32.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 50.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 94.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 165.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 184.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 203.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 288.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 317.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 344.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 351.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 364.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 393.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 416.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 369.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 368.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 368.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 338.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 258.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 226.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 172.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 150.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 129.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 114.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 74.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 47.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 31.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 6.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3537999999999997`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.36, 3.67}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{3.31, 0}, {3.32, 1.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 5.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 9.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 23.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 43.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 71.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 164.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 197.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 255.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 280.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 321.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 373.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 378.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 403.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 444.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 429.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 391.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 385.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 378.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 319.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 272.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 191.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 151.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 144.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 114.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 77.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 48.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 26.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3042000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.31, 3.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.518], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.518], Thickness[Small]}], 
        RectangleBox[{3.14, 0}, {3.15, 1.},
         RoundingRadius->0], RectangleBox[{3.15, 0}, {3.16, 1.},
         RoundingRadius->0], RectangleBox[{3.16, 0}, {3.17, 7.},
         RoundingRadius->0], RectangleBox[{3.17, 0}, {3.18, 23.},
         RoundingRadius->0], RectangleBox[{3.18, 0}, {3.19, 53.},
         RoundingRadius->0], RectangleBox[{3.19, 0}, {3.2, 118.},
         RoundingRadius->0], RectangleBox[{3.2, 0}, {3.21, 193.},
         RoundingRadius->0], RectangleBox[{3.21, 0}, {3.22, 277.},
         RoundingRadius->0], RectangleBox[{3.22, 0}, {3.23, 379.},
         RoundingRadius->0], RectangleBox[{3.23, 0}, {3.24, 467.},
         RoundingRadius->0], RectangleBox[{3.24, 0}, {3.25, 513.},
         RoundingRadius->0], RectangleBox[{3.25, 0}, {3.26, 530.},
         RoundingRadius->0], RectangleBox[{3.26, 0}, {3.27, 559.},
         RoundingRadius->0], RectangleBox[{3.27, 0}, {3.28, 526.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 512.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 449.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 390.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 319.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 240.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 162.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 93.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 76.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 29.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.1352, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.14, 3.38}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.44, 0}, {3.45, 2.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 16.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 23.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 28.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 60.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 83.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 143.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 186.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 205.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 243.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 272.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 315.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 338.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 392.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 368.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 355.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 361.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 333.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 366.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 291.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 301.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 286.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 220.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 177.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 142.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 121.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 108.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 67.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 55.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 32.},
         RoundingRadius->0], RectangleBox[{3.74, 0}, {3.75, 18.},
         RoundingRadius->0], RectangleBox[{3.75, 0}, {3.76, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4335999999999998`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.44, 3.76}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{3.29, 0}, {3.3, 1.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 2.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 5.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 17.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 28.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 61.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 100.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 166.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 194.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 307.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 324.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 403.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 383.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 416.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 425.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 437.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 410.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 371.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 393.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 338.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 311.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 220.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 172.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 161.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 124.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 78.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 43.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 29.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2842000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.29, 3.58}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.37, 0}, {3.38, 2.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 1.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 5.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 8.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 29.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 46.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 92.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 118.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 119.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 190.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 234.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 293.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 306.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 359.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 309.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 394.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 366.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 333.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 389.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 334.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 335.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 313.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 268.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 209.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 158.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 133.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 135.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 98.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 54.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 58.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 28.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 10.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3636, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.37, 3.69}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.42, 0}, {3.43, 1.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 3.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 12.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 11.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 26.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 56.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 102.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 115.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 155.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 218.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 244.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 284.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 354.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 356.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 358.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 351.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 371.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 363.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 396.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 319.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 361.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 294.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 253.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 218.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 165.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 133.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 115.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 90.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 56.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 39.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 25.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 10.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4135999999999997`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.42, 3.74}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5529999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5529999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.42, 0}, {3.44, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.504901960784196`, 26.62306501547971}, {
              18.560274912575586`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.44, 0}, {3.46, 2.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{26.12306501547971, 31.24122807017534}, {
              18.485439040025405`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.46, 0}, {3.48, 18.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{30.74122807017534, 35.859391124870854`}, {
              17.28806507922253, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.48, 0}, {3.5, 58.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.359391124870854`, 40.47755417956637}, {
              14.294630177215344`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 58]& ,
           TagBoxNote->"58"],
          StyleBox["58", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[58, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.5, 0}, {3.52, 149.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{39.97755417956637, 45.095717234262}, {
              7.484565775148994, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 149]& ,
           TagBoxNote->"149"],
          StyleBox["149", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[149, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.52, 0}, {3.54, 307.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{44.595717234262, 
              49.71388028895751}, {-4.339502087779394, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 307]& ,
           TagBoxNote->"307"],
          StyleBox["307", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[307, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.54, 0}, {3.56, 442.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{49.21388028895751, 
              54.33204334365314}, {-14.44234488205365, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 442]& ,
           TagBoxNote->"442"],
          StyleBox["442", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[442, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.56, 0}, {3.58, 591.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{53.83204334365314, 
              58.950206398348655`}, {-25.592889892030417`, 
              19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 591]& ,
           TagBoxNote->"591"],
          StyleBox["591", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[591, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.58, 0}, {3.6, 667.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{58.450206398348655`, 
              63.56836945304428}, {-31.280416205844073`, 
              19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 667]& ,
           TagBoxNote->"667"],
          StyleBox["667", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[667, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.6, 0}, {3.62, 702.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{63.06836945304428, 
              68.1865325077398}, {-33.89967174510036, 19.13511078512576}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 702]& ,
           TagBoxNote->"702"],
          StyleBox["702", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[702, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.62, 0}, {3.64, 681.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{67.6865325077398, 
              72.80469556243531}, {-32.32811842154659, 19.13511078512576}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 681]& ,
           TagBoxNote->"681"],
          StyleBox["681", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[681, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.64, 0}, {3.66, 625.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{72.30469556243531, 
              77.42285861713094}, {-28.137309558736522`, 
              19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 625]& ,
           TagBoxNote->"625"],
          StyleBox["625", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[625, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.66, 0}, {3.68, 560.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{76.92285861713094, 
              82.04102167182646}, {-23.27297784297485, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 560]& ,
           TagBoxNote->"560"],
          StyleBox["560", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[560, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.68, 0}, {3.7, 458.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{81.54102167182646, 
              86.65918472652208}, {-15.63971884285652, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 458]& ,
           TagBoxNote->"458"],
          StyleBox["458", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[458, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.7, 0}, {3.72, 296.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{86.15918472652208, 
              91.2773477812176}, {-3.516307489727417, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 296]& ,
           TagBoxNote->"296"],
          StyleBox["296", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[296, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.72, 0}, {3.74, 191.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{90.7773477812176, 95.89551083591311}, {
              4.341459128041448, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 191]& ,
           TagBoxNote->"191"],
          StyleBox["191", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[191, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.74, 0}, {3.76, 106.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{95.39551083591311, 100.51367389060863`}, {
              10.70250829480672, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 106]& ,
           TagBoxNote->"106"],
          StyleBox["106", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[106, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.76, 0}, {3.78, 41.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{100.01367389060863`, 105.13183694530414`}, {
              15.566840010568399`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.78, 0}, {3.8, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{104.63183694530414`, 109.74999999999977`}, {
              18.560274912575586`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4124, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.42, 3.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[149]=",
 CellID->841573546]
}, Open  ]],

Cell["We may also wish to standardize the distributions:", "MathCaption",
 CellID->1914505686],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesStandardized", "=", 
  RowBox[{"Returner", "[", 
   RowBox[{"transformedMetaboliteData", ",", 
    RowBox[{"Applier", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StandardizeExtended", "[", 
        RowBox[{"#", ",", "Mean", ",", "StandardDeviation"}], "]"}], "&"}], 
      ",", "transformedMetaboliteData", ",", 
      RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
      RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}], ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[150]:=",
 CellID->1349581601],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[150], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[150]=",
 CellID->1805328114]
}, Open  ]],

Cell["\<\
We can again plot the data to see what the standardized distributions look \
like:\
\>", "MathCaption",
 CellID->2141940815],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "metabolitesStandardized"}], ")"}]}]], "Input",
 CellLabel->"In[151]:=",
 CellID->1785374157],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 2.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 7.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 10.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 27.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 48.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 82.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 134.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 188.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 228.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 292.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 298.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 386.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 423.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 414.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 461.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 416.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 412.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 381.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 376.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 335.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 270.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 214.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 143.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 142.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 74.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 62.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 51.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 25.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 5.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.116, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 5.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 13.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 30.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 43.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 92.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 134.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 183.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 226.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 278.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 328.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 399.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 384.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 412.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 436.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 448.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 433.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 379.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 377.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 329.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 269.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 197.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 149.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 134.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 93.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 64.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 35.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 31.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 6.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.116, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 6.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 12.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 23.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 49.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 93.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 131.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 181.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 216.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 268.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 348.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 383.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 397.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 455.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 421.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 402.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 440.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 383.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 340.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 343.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 268.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 231.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 161.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 110.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 87.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 64.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 42.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 26.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 6.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.116, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-2.8, 0}, {-2.6, 4.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 14.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 18.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 39.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 67.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 136.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 172.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 204.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 247.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 304.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 354.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 344.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 404.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 359.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 361.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 367.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 343.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 316.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 307.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 260.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 206.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 143.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 98.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 75.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 63.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 36.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 21.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 4.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.912, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-2.8, 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 2.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 4.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 9.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 25.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 45.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 82.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 122.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 197.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 229.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 296.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 353.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 374.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 386.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 414.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 449.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 423.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 391.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 418.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 373.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 309.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 243.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 189.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 159.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 151.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 108.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 67.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 46.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 18.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.112, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 5.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 7.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 22.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 41.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 69.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 158.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 192.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 255.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 283.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 333.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 376.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 385.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 409.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 452.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 428.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 401.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 385.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 379.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 320.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 262.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 192.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 156.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 138.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 113.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 68.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 47.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 16.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.112, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.476], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.476], Thickness[Small]}], 
        RectangleBox[{-3.2, 0}, {-3., 1.},
         RoundingRadius->0], RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 3.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 9.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 28.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 43.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 84.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 130.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 178.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 237.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 298.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 350.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 382.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 401.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 429.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 438.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 417.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 421.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 368.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 361.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 310.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 279.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 222.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 178.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 137.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 79.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 65.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 46.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 22.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.3200000000000003`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3.2, 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-2.8, 0}, {-2.6, 2.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 16.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 28.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 38.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 71.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 146.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 197.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 237.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 289.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 307.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 397.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 426.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 442.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 411.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 417.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 392.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 389.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 357.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 332.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 279.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 202.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 170.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 138.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 93.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 71.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 39.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 21.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.912, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-2.8, 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 2.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 3.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 9.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 20.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 44.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 76.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 137.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 178.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 252.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 295.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 362.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 392.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 409.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 398.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 436.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 434.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 384.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 365.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 374.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 327.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 278.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 205.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 171.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 134.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 106.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 70.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 41.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 18.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.112, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 3.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 2.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 6.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 25.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 43.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 104.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 126.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 146.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 232.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 292.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 342.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 377.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 356.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 442.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 410.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 381.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 424.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 380.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 363.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 319.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 239.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 195.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 151.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 143.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 97.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 64.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 42.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 22.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.112, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 5.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 12.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 15.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 49.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 93.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 129.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 172.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 233.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 293.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 343.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 391.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 415.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 381.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 416.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 414.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 444.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 369.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 359.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 332.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 252.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 221.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 160.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 130.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 96.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 66.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 39.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 20.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 4.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.116, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3., 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.469], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.469], Thickness[Small]}], 
        RectangleBox[{-3.4, 0}, {-3.2, 1.},
         RoundingRadius->0], RectangleBox[{-3., 0}, {-2.8, 1.},
         RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 4.},
         RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 12.},
         RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 14.},
         RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 52.},
         RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 84.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 117.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 187.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 266.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 279.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 347.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 385.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 402.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 436.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 410.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 439.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 392.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 355.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 350.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 325.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 296.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 211.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 177.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 128.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 96.},
         RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 69.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 43.},
         RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 17.},
         RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-3.524, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-3.4, 2.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[151]=",
 CellID->628044284]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->418653686],

Cell["\<\
As with the transcriptome, we notice that the sample numberings do not \
correspond to actual days, so we may adjust using the sampleToDays \
association created above:\
\>", "Text",
 CellID->1156073030],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[152]:=",
 CellID->38250836],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1834860801],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "metabolitesStandardized"}], "]"}]}]], "Input",\

 CellLabel->"In[153]:=",
 CellID->640311487],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"5963"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 153, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 153, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 153, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[153], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[153]=",
 CellID->658156183]
}, Open  ]],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->571106757],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetaboliteRawData", "=", 
  RowBox[{"TimeExtractor", "[", "metabolitesLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[154]:=",
 CellID->1486846456],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380"}], 
  "}"}]], "Output",
 CellLabel->"Out[154]=",
 CellID->2090185631]
}, Open  ]],

Cell["\<\
We notice a complication: there are three timepoints missing, corresponding \
to the three samples for which we had indicated above that there were no \
measurements (compared to the transcriptome samples). These are samples on \
days \"186\", \"329\" and \"400\".\
\>", "Text",
 CellID->280773926],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantAssociator"]], 
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed data, tagging these data as \
Missing data:"
}], "MathCaption",
 CellID->945801823],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesLongitudinalEnlarged", "=", 
  RowBox[{"ConstantAssociator", "[", 
   RowBox[{"metabolitesLongitudinal", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<186\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{"\"\<400\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}]], "Input",
 CellLabel->"In[155]:=",
 CellID->417284067],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 155, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 155, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 155, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[155], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[155]=",
 CellID->1212402591]
}, Open  ]],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->430709602],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetabolites", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesLongitudinalEnlarged", "]"}]}]], "Input",
 CellLabel->"In[156]:=",
 CellID->1916390424],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[156]=",
 CellID->1525504201]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1084739385],

Cell[TextData[{
 "We will next remove values that have been tagged overall as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Additionally we remove data where the reference healthy sample \"255\
\" was missing. We use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for this implementation:"
}], "Text",
 CellID->1226164312],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredMetaboliteData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"metabolitesLongitudinalEnlarged", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[157]:=",
 CellID->890515172],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.651], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3., 0}, {4., 4601.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{28.785228182546035`, 
           69.63751000800642}, {-50.75544747610698, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4601]& ,
        TagBoxNote->"4601"],
       StyleBox["4601", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4601, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4., 0}, {5., 1158.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{69.13751000800642, 109.9897918334668}, {
           39.64008495588685, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1158]& ,
        TagBoxNote->"1158"],
       StyleBox["1158", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1158, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0}, {6., 172.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{109.4897918334668, 150.34207365892715`}, {
           65.52739107785777, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 172]& ,
        TagBoxNote->"172"],
       StyleBox["172", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[172, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6., 0}, {7., 31.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{149.84207365892715`, 190.69435548438756`}, {
           69.22932836304835, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 31]& ,
        TagBoxNote->"31"],
       StyleBox["31", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[31, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7., 0}, {8., 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{190.19435548438756`, 231.0466373098479}, {
           69.9907197195769, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{2.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{3., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[157]:=",
 CellID->341844674],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "4601"}], ",", 
     RowBox[{"4", "\[Rule]", "1158"}], ",", 
     RowBox[{"5", "\[Rule]", "172"}], ",", 
     RowBox[{"6", "\[Rule]", "31"}], ",", 
     RowBox[{"7", "\[Rule]", "2"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[157]:=",
 CellID->864680193],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$182320$182439 = False, 
       DynamicChart`click$182326$182439 = False, 
       DynamicChart`click$182332$182439 = False, 
       DynamicChart`click$182338$182439 = False, 
       DynamicChart`click$182344$182439 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.7056467156813797`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 4601]& , TagBoxNote -> "4601"], 
                    StyleBox["4601", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[4601, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182320$182439, 
                    FEPrivate`Not[DynamicChart`click$182320$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182320$182439, {{{1., 0.}, {0., 1.}}, {
                    0.1506281553794014, 0.13157187696084188`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182320$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.925621327638784, -1.7056467156813797`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 1158]& , 
                    TagBoxNote -> "1158"], 
                    StyleBox["1158", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[1158, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182326$182439, 
                    FEPrivate`Not[DynamicChart`click$182326$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182326$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.1355704985970502, -0.1470395862009521}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182326$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.106826537704997, -2.925621327638784}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 172]& , 
                    TagBoxNote -> "172"], 
                    StyleBox["172", {}, StripOnInput -> False]], Annotation[#, 
                    Style[172, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182332$182439, 
                    FEPrivate`Not[DynamicChart`click$182332$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182332$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.19843032592021287`, -0.02500811378729119}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182332$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.1394856162634417`, -3.106826537704997}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 31]& , 
                    TagBoxNote -> "31"], 
                    StyleBox["31", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[31, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182338$182439, 
                    FEPrivate`Not[DynamicChart`click$182338$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182338$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.19996601022710422`, -0.003687106433730781}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182338$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.1394856162634417`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182344$182439, 
                    FEPrivate`Not[DynamicChart`click$182344$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182344$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.1999998890098529, -0.00021070369365843502`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182344$182439}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["4601", {}, StripOnInput -> False], 
                    TraditionalForm], {0.5020938512646713, 
                    0.4385729232028062}]}}}, StatusArea[#, 4601]& , 
                 TagBoxNote -> "4601"], 
                StyleBox["4601", {}, StripOnInput -> False]], Annotation[#, 
                Style[4601, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182320$182439, 
                  FEPrivate`Not[DynamicChart`click$182320$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182320$182439, {{{1., 0.}, {0., 1.}}, {
                0.1506281553794014, 0.13157187696084188`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182320$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["1158", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.4519016619901673, \
-0.49013195400317355`}]}}}, StatusArea[#, 1158]& , TagBoxNote -> "1158"], 
                StyleBox["1158", {}, StripOnInput -> False]], Annotation[#, 
                Style[1158, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182326$182439, 
                  FEPrivate`Not[DynamicChart`click$182326$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182326$182439, {{{1., 0.}, {0., 
                1.}}, {-0.1355704985970502, -0.1470395862009521}}, {{1, 0}, {
               0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182326$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["172", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6614344197340428, \
-0.08336037929097062}]}}}, StatusArea[#, 172]& , TagBoxNote -> "172"], 
                StyleBox["172", {}, StripOnInput -> False]], Annotation[#, 
                Style[172, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182332$182439, 
                  FEPrivate`Not[DynamicChart`click$182332$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182332$182439, {{{1., 0.}, {0., 
                1.}}, {-0.19843032592021287`, -0.02500811378729119}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182332$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["31", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6665533674236807, \
-0.012290354779102602`}]}}}, StatusArea[#, 31]& , TagBoxNote -> "31"], 
                StyleBox["31", {}, StripOnInput -> False]], Annotation[#, 
                Style[31, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182338$182439, 
                  FEPrivate`Not[DynamicChart`click$182338$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182338$182439, {{{1., 0.}, {0., 
                1.}}, {-0.19996601022710422`, -0.003687106433730781}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182338$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["2", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666662966995096, \
-0.0007023456455281167}]}}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
                StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                Style[2, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182344$182439, 
                  FEPrivate`Not[DynamicChart`click$182344$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182344$182439, {{{1., 0.}, {0., 
                1.}}, {-0.1999998890098529, -0.00021070369365843502`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182344$182439}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}], 
   FormBox[
    FormBox[
     TemplateBox[{"3", "4", "5", "6", "7"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.544`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.784`", ",", "0.47519999999999996`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6754608`", ",", "0.4848`", ",", "0.7224792`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[157]:=",
 CellID->658164502]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"4599"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"406.3805`", ",", "14.560919`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.3484220998264644`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"2,4,6-trimethyl-2,15\"\>", 
                    "\[Ellipsis]", "\<\"ipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 157, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 157, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 157, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[157], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[157]=",
 CellID->82519417]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matching Unique Mass", "Subsubsubsection",
 CellID->1252715262],

Cell[TextData[{
 "We may want to match a unique mass to the metabolites. This is a putative \
mass identification based on the uniqueness of the mass feature. If matched, \
a KEGG compound identity can be prepended to the identifier using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObjectUniqueMassConverter"]], 
    "paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->1581980320],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["OmicsObjectUniqueMassConverter",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"], 
     "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["massAccuracy", "TI"]}], "]"}], Cell[TextData[{
     "assigns a unique putative mass identification to each of ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     "'s inner association keys, using the ",
     Cell[BoxData[
      StyleBox["massAccuracy", "TI"]], "InlineFormula"],
     " in parts per million."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->472784104],

Cell[TextData[{
 "Matching putative mass identifications to mass features in an ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OmicsObject"]], "paclet:MathIOmica/ref/OmicsObject"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " of metabolites."
}], "Caption",
 CellID->392942028],

Cell["\<\
We match our identities to KEGG compound identifiers, using a 2ppm accuracy \
(this may take some time depending on the number of matching data):\
\>", "MathCaption",
 CellID->1324534886],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"massMatchedFilteredMetabolites", "=", 
  RowBox[{"OmicsObjectUniqueMassConverter", "[", 
   RowBox[{"filteredMetaboliteData", ",", "2"}], "]"}]}]], "Input",
 CellLabel->"In[158]:=",
 CellID->642344200],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"4599"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"406.3805`", ",", "14.560919`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.3484220998264644`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"2,4,6-trimethyl-2,\"\>", 
                    "\[Ellipsis]", "\<\"id ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[159], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[159]=",
 CellID->524174621]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Metabolome Time Series", "Subsubsection",
 CellID->1109625018],

Cell["We can now create time series for each of the proteins. ", "Text",
 CellID->719686978],

Cell["\<\
For each metabolite feature we now extract a time series (list of values) \
corresponding to the set of times:\
\>", "MathCaption",
 CellID->1151139342],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesMetabolites", "=", 
  RowBox[{
  "CreateTimeSeries", "[", "massMatchedFilteredMetabolites", "]"}]}]], "Input",\

 CellLabel->"In[160]:=",
 CellID->518745171],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[160], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[160]=",
 CellID->824935153]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Take Difference Compared to Reference in Metabolome Time Series.\
\>", "Subsubsection",
 CellID->1009763177],

Cell[TextData[{
 "Now we need to compare  to compare the difference of each intensity for a \
given metabolite's time series to the intensity of the ratios of expression \
at any time point compared to a healthy datapoint. We can use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesInternalCompare"]], 
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->278067401],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->96962883],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesMetabolites", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[161]:=",
 CellID->1862570155],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.32665866089642104`"}], ",", 
              RowBox[{"-", "0.24484346068429885`"}], ",", 
              "0.03077460777441865`", ",", 
              RowBox[{"-", "0.11284688855970915`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6407940659720814`"}], ",", 
              RowBox[{"-", "0.16561264066131298`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.3404546845684606`"}], ",", 
              RowBox[{"-", "0.14390369162531425`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4599"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[161], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[161]=",
 CellID->530691439]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Metabolome Time Series", \
"Subsubsection",
 CellID->1412731195],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->966741969],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedMetabolitesCompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "metabolitesCompared"}], "]"}]}]], "Input",
 CellLabel->"In[274]:=",
 CellID->170999781],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3437843266552544`"}], ",", 
              RowBox[{"-", "0.2576798179368774`"}], ",", 
              "0.0323880217434761`", ",", 
              RowBox[{"-", "0.11876308894482825`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6743888433582577`"}], ",", 
              RowBox[{"-", "0.17429518017096568`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.35830363159453466`"}], ",", 
              RowBox[{"-", "0.1514481005734021`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4600"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 274, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 274, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 274, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[274], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[274]=",
 CellID->1856841682]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->245953314],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolomeFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedMetabolitesCompared", "]"}]}]], "Input",
 CellLabel->"In[275]:=",
 CellID->1978811570],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3437843266552544`"}], ",", 
              RowBox[{"-", "0.2576798179368774`"}], ",", 
              "0.0323880217434761`", ",", 
              RowBox[{"-", "0.11876308894482825`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6743888433582577`"}], ",", 
              RowBox[{"-", "0.17429518017096568`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.35830363159453466`"}], ",", 
              RowBox[{"-", "0.1514481005734021`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4600"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 275, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 275, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 275, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[275], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[275]=",
 CellID->1324492706]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Metabolome Data", "Subsection",
 CellID->453326653],

Cell["\<\
We also would like to create a resampled distribution for the metabolome \
dataset prior to classification and clustering. In this subsection we first \
resample the imported metabolome dataset. Then, we carry out the full \
analysis in this \"bootstrap\" dataset, to create a set of random metabolome \
time series. This bootstrap distribution of time series will be used to \
provide the cutoffs used in the time series classification in the following \
subsection.\
\>", "Text",
 CellID->184556424],

Cell[CellGroupData[{

Cell["Resampling the Proteome Data", "Subsubsection",
 CellID->633718938],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->1542785493],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"metabolitesExample", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[164]:=",
 CellID->878226973],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"88478", ",", "100725", ",", "59680"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99998"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"44327", ",", "153862", ",", "33442"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid\"\>", 
                    "\[Ellipsis]", "\<\".87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[164], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[164]=",
 CellID->1614351122]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Metabolome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->360522749],

Cell["\<\
We implement a Median calculation, and ignoring entries with missing and \
values of 1 for the bootstrap set:\
\>", "MathCaption",
 CellID->677226397],

Cell[BoxData[
 RowBox[{
  RowBox[{"metaboliteBootstrapMedians", "=", 
   RowBox[{"MeasurementApplier", "[", 
    RowBox[{"Median", ",", "metabolitesBootstrap", ",", 
     RowBox[{"IgnorePattern", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"_Missing", "|", " ", "1", "|", "1."}], ")"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[165]:=",
 CellID->480725279],

Cell[TextData[{
 "We apply a Box-Cox transformation to the bootstrap metabolite median data \
in the OmicsObject, which is now the first list first component for each \
identifier. The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->700277754],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedBootstrapMetaboliteData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"metaboliteBootstrapMedians", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[166]:=",
 CellID->1357825918],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2871523055287482`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2871523055287482],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1877585153],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.28037607704250345`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.28037607704250345`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->163355591],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2763466764965233`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2763466764965233],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->259759008],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26024284466383885`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26024284466383885`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->778641117],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27025675415129474`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27025675415129474`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->617410823],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2739743911493624`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2739743911493624],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->71021389],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2947078607539085`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2947078607539085],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->901761449],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2650660721998507`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2650660721998507],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->932516019],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2801283174874604`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2801283174874604],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1175383913],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26904171465531007`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26904171465531007`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->290081537],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2651084328101397`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2651084328101397],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1628114812],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26292251438570274`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26292251438570274`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->458717401]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3502234334097394`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"99996"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99999", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3211903759895276`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid [ \"\>", 
                    "\[Ellipsis]", "\<\"96.87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[166], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[166]=",
 CellID->197065877]
}, Open  ]],

Cell["We may also wish to standardize the distributions:", "MathCaption",
 CellID->1180721070],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesBootstrapStandardized", "=", 
  RowBox[{"Returner", "[", 
   RowBox[{"transformedBootstrapMetaboliteData", ",", 
    RowBox[{"Applier", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StandardizeExtended", "[", 
        RowBox[{"#", ",", "Mean", ",", "StandardDeviation"}], "]"}], "&"}], 
      ",", "transformedBootstrapMetaboliteData", ",", 
      RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
      RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}], ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[167]:=",
 CellID->1630125210],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.023749550672516283`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"99996"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99999", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.7142620049001477`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid \"\>", 
                    "\[Ellipsis]", "\<\".87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[167], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[167]=",
 CellID->666411065]
}, Open  ]],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys with labels corresponding to days:"
}], "MathCaption",
 CellID->314732997],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapLongitudinal", "=", 
   RowBox[{"KeyMap", "[", 
    RowBox[{"sampleToDays", ",", "metabolitesBootstrapStandardized"}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[168]:=",
 CellID->465258018],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->1296207012],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetaboliteBootstrapData", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesBootstrapLongitudinal", "]"}]}]], "Input",\

 CellLabel->"In[169]:=",
 CellID->1277135516],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380"}], 
  "}"}]], "Output",
 CellLabel->"Out[169]=",
 CellID->1243550350]
}, Open  ]],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantAssociator"]], 
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append the \"186\", \"329\" and \"400\" missing days to the \
transformed bootstrap data:"
}], "MathCaption",
 CellID->115749397],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapLongitudinalEnlarged", "=", 
   RowBox[{"ConstantAssociator", "[", 
    RowBox[{"metabolitesBootstrapLongitudinal", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<186\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}], ",", 
       RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}], ",", 
       RowBox[{"\"\<400\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[170]:=",
 CellID->1927414844],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->889199561],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetabolitesBootstrap", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesBootstrapLongitudinalEnlarged", 
   "]"}]}]], "Input",
 CellLabel->"In[171]:=",
 CellID->438322254],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[171]=",
 CellID->1039879846]
}, Open  ]],

Cell[TextData[{
 "We next remove values that have been tagged overall as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Additionally we remove data where the reference healthy sample \"255\
\" was missing. We use the function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FilterMissing"]], "paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for this implementation:"
}], "MathCaption",
 CellID->107474856],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"filteredMetaboliteBootstrapData", "=", 
   RowBox[{"FilterMissing", "[", 
    RowBox[{"metabolitesBootstrapLongitudinalEnlarged", ",", 
     RowBox[{"3", "/", "4"}], ",", 
     RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[172]:=",
 CellID->1335914459],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.651], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {4., 75579.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{35.65072057646118, 
          75.1579263410729}, {-48.97193256023675, 68.30012181935953}}],
        StatusArea[#, 75579]& ,
        TagBoxNote->"75579"],
       StyleBox["75579", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[75579, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {5., 21924.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{74.6579263410729, 114.1651321056846}, {
          33.926816797881756`, 68.30012181935953}}],
        StatusArea[#, 21924]& ,
        TagBoxNote->"21924"],
       StyleBox["21924", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21924, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5., 0}, {6., 2352.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{113.6651321056846, 153.1723378702963}, {
          64.16620403927763, 68.30012181935953}}],
        StatusArea[#, 2352]& ,
        TagBoxNote->"2352"],
       StyleBox["2352", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2352, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6., 0}, {7., 142.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{152.6723378702963, 192.17954363490804`}, {
          67.58072712345323, 68.30012181935953}}],
        StatusArea[#, 142]& ,
        TagBoxNote->"142"],
       StyleBox["142", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7., 0}, {8., 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{191.67954363490804`, 231.18674939951973`}, {
          67.79548672015025, 68.30012181935953}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{2.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{3., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->1038652436],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "75579"}], ",", 
     RowBox[{"4", "\[Rule]", "21924"}], ",", 
     RowBox[{"5", "\[Rule]", "2352"}], ",", 
     RowBox[{"6", "\[Rule]", "142"}], ",", 
     RowBox[{"7", "\[Rule]", "3"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->1884409036],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$593535$593641 = False, 
       DynamicChart`click$593540$593641 = False, 
       DynamicChart`click$593545$593641 = False, 
       DynamicChart`click$593550$593641 = False, 
       DynamicChart`click$593555$593641 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.6071759697234667`, 
                    3.141592653589793}]}], {}}, StatusArea[#, 75579]& , 
                    TagBoxNote -> "75579"], 
                   StyleBox["75579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[75579, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593535$593641, 
                    FEPrivate`Not[DynamicChart`click$593535$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593535$593641, {{{1., 0}, {0, 1.}}, {
                   0.1439702482353572, 0.13882567350115624`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593535$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.984701516469519, -1.6071759697234667`}]}], {}}, 
                    StatusArea[#, 21924]& , TagBoxNote -> "21924"], 
                   StyleBox["21924", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[21924, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593540$593641, 
                    FEPrivate`Not[DynamicChart`click$593540$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593540$593641, {{{1., 0}, {
                    0, 1.}}, {-0.1326484068914845, -0.1496809946157199}}, {{1,
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593540$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.132482034894383, -2.984701516469519}]}], {}}, 
                    StatusArea[#, 2352]& , TagBoxNote -> "2352"], 
                   StyleBox["2352", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2352, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593545$593641, 
                    FEPrivate`Not[DynamicChart`click$593545$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593545$593641, {{{1., 0}, {
                    0, 1.}}, {-0.19931148083858252`, \
-0.016581121974442822`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593545$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 
                    1., {-3.1414041580305785`, -3.132482034894383}]}], {}}, 
                    StatusArea[#, 142]& , TagBoxNote -> "142"], 
                   StyleBox["142", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[142, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593550$593641, 
                    FEPrivate`Not[DynamicChart`click$593550$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593550$593641, {{{1., 0}, {
                    0, 1.}}, {-0.19999783816574662`, \
-0.0009299080749361384}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593550$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.1414041580305785`}]}], {}}, 
                    StatusArea[#, 3]& , TagBoxNote -> "3"], 
                   StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593555$593641, 
                    FEPrivate`Not[DynamicChart`click$593555$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593555$593641, {{{1., 0}, {
                    0, 1.}}, {-0.1999999991117356, \
-0.000018849555893581826`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$593555$593641}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["75579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.47990082745119067`, 
                    0.46275224500385403`}]}}}, StatusArea[#, 75579]& , 
                TagBoxNote -> "75579"], 
               StyleBox["75579", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[75579, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593535$593641, 
                 FEPrivate`Not[DynamicChart`click$593535$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593535$593641, {{{1., 0}, {0, 1.}}, {
               0.1439702482353572, 0.13882567350115624`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593535$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["21924", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.4421613563049483, \
-0.4989366487190663}]}}}, StatusArea[#, 21924]& , TagBoxNote -> "21924"], 
               StyleBox["21924", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[21924, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593540$593641, 
                 FEPrivate`Not[DynamicChart`click$593540$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593540$593641, {{{1., 0}, {
                0, 1.}}, {-0.1326484068914845, -0.1496809946157199}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593540$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2352", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6643716027952751, \
-0.05527040658147607}]}}}, StatusArea[#, 2352]& , TagBoxNote -> "2352"], 
               StyleBox["2352", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2352, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593545$593641, 
                 FEPrivate`Not[DynamicChart`click$593545$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593545$593641, {{{1., 0}, {
                0, 1.}}, {-0.19931148083858252`, -0.016581121974442822`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593545$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["142", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666594605524887, \
-0.003099693583120461}]}}}, StatusArea[#, 142]& , TagBoxNote -> "142"], 
               StyleBox["142", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[142, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593550$593641, 
                 FEPrivate`Not[DynamicChart`click$593550$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593550$593641, {{{1., 0}, {
                0, 1.}}, {-0.19999783816574662`, -0.0009299080749361384}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593550$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666666637057853, \
-0.00006283185297860608}]}}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
               StyleBox["3", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[3, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593555$593641, 
                 FEPrivate`Not[DynamicChart`click$593555$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593555$593641, {{{1., 0}, {
                0, 1.}}, {-0.1999999991117356, -0.000018849555893581826`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$593555$593641}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}], 
   FormBox[
    FormBox[
     TemplateBox[{"3", "4", "5", "6", "7"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1., 0.544, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.6754608, 0.4848, 0.7224792]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->173842096]
}, Open  ]]
}, Open  ]],

Cell["\<\
For each bootstrap metabolite feature we now extract a time series (list of \
values) corresponding to the set of times:\
\>", "MathCaption",
 CellID->40883495],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeSeriesMetabolitesBootstrap", "=", 
   RowBox[{
   "CreateTimeSeries", "[", "filteredMetaboliteBootstrapData", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[173]:=",
 CellID->2081617072],

Cell["\<\
We compare every value in each bootstrap series to the healthy \"255\" time \
point, which is the second element in each series: \
\>", "MathCaption",
 CellID->1475115608],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapCompared", "=", 
   RowBox[{"SeriesInternalCompare", "[", 
    RowBox[{"timeSeriesMetabolitesBootstrap", ",", 
     RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[174]:=",
 CellID->1716802688],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SeriesApplier"]], "paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->454276768],

Cell[BoxData[
 RowBox[{
  RowBox[{"normedMetabolitesBootstrapCompared", "=", 
   RowBox[{"SeriesApplier", "[", 
    RowBox[{"Normalize", ",", "metabolitesBootstrapCompared"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[175]:=",
 CellID->725274691],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ConstantSeriesClean"]], 
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1396633943],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolomeBootstrapFinalTimeSeries", "=", 
   RowBox[{
   "ConstantSeriesClean", "[", "normedMetabolitesBootstrapCompared", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[176]:=",
 CellID->1230418291]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Metabolome Time Series", "Subsection",
 CellID->298821825],

Cell[TextData[{
 "In this subsection we will classify the metabolome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantileEstimator"]], 
    "paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for the \"LombScargle\" method to provide a cutoff for the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " inputs."
}], "Text",
 CellID->1481646089],

Cell["\<\
First, we estimate for the \"LombScargle\" Method, 0.95 quantile cutoff from \
the bootstrap metabolome data:\
\>", "MathCaption",
 CellID->1952930858],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95Metabolites", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "metabolomeBootstrapFinalTimeSeries", ",", "timesMetabolitesBootstrap"}], 
   "]"}]}]], "Input",
 CellLabel->"In[276]:=",
 CellID->768869658],

Cell[BoxData["0.8461247616777212`"], "Output",
 CellLabel->"Out[276]=",
 CellID->1856700619]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
proteome data:\
\>", "MathCaption",
 CellID->1337236679],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95MetabolitesSpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "metabolomeBootstrapFinalTimeSeries", ",", "timesMetabolitesBootstrap", 
    ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[277]:=",
 CellID->1520498098],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"12", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"0.6705198068392632`", ",", 
     RowBox[{"-", "0.651832513904884`"}]}], "}"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[277]=",
 CellID->1886752990]
}, Open  ]],

Cell["\<\
Now we can classify the proteome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1474915870],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metaboliteClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"metabolomeFinalTimeSeries", ",", "timesMetabolites", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95Metabolites"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95MetabolitesSpikes"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[278]:=",
 CellID->507289769],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[278]:=",
 CellID->1019182225],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "1514.0966`", ",", "0.36623535`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.15009402640884575`", ",", "0.15075945952409445`", ",", 
                   "0.33651460690487767`", ",", "0.1975579977785776`", ",", 
                   "0.43038474234090673`", ",", "0.6678462629237746`", ",", 
                   "0.41379036735122116`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
                   TemplateBox[{"12"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"Missing", "[", "]"}]}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"134"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"6"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 278, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 278, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 278, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[278], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[278]=",
 CellID->1066388514]
}, Open  ]],

Cell[TextData[{
 "As discussed above, the default output for TimeSeriesClassification is an \
",
 ButtonBox["Association",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Association"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". "
}], "Text",
 CellID->754816834],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->1020626209],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "metaboliteClassification", "]"}]], "Input",
 CellLabel->"In[180]:=",
 CellID->1712806074],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", 
   ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[180]=",
 CellID->497917949]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->1056863292],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "metaboliteClassification"}]], "Input",
 CellLabel->"In[279]:=",
 CellID->864104307],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "136"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "713"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "63"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "38"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "43"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "15"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "33"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[279]=",
 CellID->2040720583]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->575017700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "metaboliteClassification"}]], "Input",
 CellLabel->"In[280]:=",
 CellID->646072400],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"373.8593`", ",", "0.4113235`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C11821\"\>", ",", "184.0236`", ",", "0.6534444`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"221.1087`", ",", "10.306158`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C18218\"\>", ",", "272.2353`", ",", "12.773695`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"294.1655`", ",", "13.049499`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"631.3846`", ",", "13.522097`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"563.3196`", ",", "13.700788`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"779.6037`", ",", "13.962242`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"362.2657`", ",", "14.001`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C17873\"\>", ",", "384.3602`", ",", "14.298198`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"390.2971`", ",", "14.359208`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"420.3606`", ",", "14.665766`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"434.3762`", ",", "14.779639`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"392.366`", ",", "15.017344`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"394.3811`", ",", "15.151882`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1599.146`", ",", "15.281029`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"693.6282`", ",", "15.692093`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"874.7147`", ",", "15.911758`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"281.9862`", ",", "0.39045456`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"504.3091`", ",", "14.391079`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"416.3126`", ",", "14.462658`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"735.5212`", ",", "15.179166`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"571.9606`", ",", "0.3881667`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"489.9575`", ",", "0.38891178`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"325.9501`", ",", "0.3924723`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"465.9127`", ",", "0.39305556`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"383.9092`", ",", "0.39772224`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"301.9058`", ",", "0.40786114`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"219.9025`", ",", "0.4121111`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"161.944`", ",", "0.4130858`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"139.0609`", ",", "0.45847225`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"115.0636`", ",", "0.4639722`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"71.074`", ",", "0.48255876`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"253.165`", ",", "9.127285`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"298.1321`", ",", "9.309667`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C20605\"\>", ",", "411.1791`", ",", "9.316696`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"440.2009`", ",", "11.290919`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"355.2179`", ",", "12.744277`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"338.2438`", ",", "12.854486`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1061.1475`", ",", "13.061242`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"210.198`", ",", "13.161266`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"501.3666`", ",", "13.296033`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"594.3745`", ",", "13.370138`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1538.0292`", ",", "13.379565`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"404.3139`", ",", "13.602781`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"692.323`", ",", "13.76518`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"670.265`", ",", "13.873167`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"814.5844`", ",", "14.151257`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"366.3494`", ",", "14.30147`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"442.4017`", ",", "14.35682`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"406.3808`", ",", "14.358058`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"278.1517`", ",", "14.363973`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C19658\"\>", ",", "344.2712`", ",", "14.433056`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"420.3577`", ",", "14.4446125`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"311.3186`", ",", "14.611917`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"791.5832`", ",", "15.4236`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1553.1772`", ",", "15.442857`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1545.174`", ",", "15.501686`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"352.0515`", ",", "0.53367996`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C17237\"\>", ",", "254.0726`", ",", "12.292558`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"336.228`", ",", "12.510321`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"638.4015`", ",", "13.413879`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"668.3243`", ",", "13.987971`", ",", "\<\"Meta\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[280]=",
 CellID->1348085108]
}, Open  ]],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LombScargle"]], "paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["True"]], "paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->861507568],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"metabolomeFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesMetabolites", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[183]:=",
 CellID->1022947302],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[183]=",
 CellID->603088833]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combined Data Clustering", "Section",
 CellID->1340833355],

Cell[TextData[{
 "In this section we will combine the omics data classes from the individual \
classifications above using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["JoinNestedAssociations"]], 
    "paclet:MathIOmica/ref/JoinNestedAssociations"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "  and hierarchically cluster the information to obtain a second level of \
classification using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will visualize the results in the following section."
}], "Text",
 CellID->834349127],

Cell[CellGroupData[{

Cell["Combining Multi-omics Classified Data", "Subsection",
 CellID->1502510612],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["JoinNestedAssociations",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/JoinNestedAssociations"], "[", 
     StyleBox["associationList", "TI"], "]"}], Cell[TextData[{
     "merges the nested ",
     ButtonBox["associationList (",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/associationList"],
     "an association of associations",
     ButtonBox[")",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/associationList"],
     " by joining the inner associations for each matching key."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1289482141],

Cell["Joining classification data.", "Caption",
 CellID->2068861910],

Cell[TextData[{
 "We combine the classification data using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["JoinNestedAssociations"]], 
    "paclet:MathIOmica/ref/JoinNestedAssociations"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->681556684],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"combinedClassification", "=", 
  RowBox[{"JoinNestedAssociations", "[", 
   RowBox[{"{", 
    RowBox[{
    "rnaClassification", ",", "proteinClassification", ",", 
     "metaboliteClassification"}], " ", "}"}], "]"}]}]], "Input",
 CellLabel->"In[281]:=",
 CellID->245414890],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.08553735041954855`", ",", "0.2041353122187633`", ",", 
                   "0.21930279158524527`", ",", "0.3784958694491304`", ",", 
                   "0.5848999163284979`", ",", "0.34601221698539536`", ",", 
                   "0.5457352214922402`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
                   TemplateBox[{"7"},
                    "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
                   "0.07591897179810148`", ",", "0.`"}], "}"}]}], "}"}]}], 
              ",", 
              TemplateBox[{"1081"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}], ",", 
           
           TemplateBox[{"7"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 281, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 281, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 281, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[281], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[281]=",
 CellID->808884430]
}, Open  ]],

Cell["We can check the keys before and after the combination:", "MathCaption",
 CellID->1179244319],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Keys", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "rnaClassification", ",", "proteinClassification", ",", 
    "metaboliteClassification"}], " ", "}"}]}]], "Input",
 CellLabel->"In[282]:=",
 CellID->764718377],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", 
     ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f2\"\>", ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", 
     ",", "\<\"f7\"\>"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[282]=",
 CellID->729829850]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "combinedClassification"}]], "Input",
 CellLabel->"In[283]:=",
 CellID->432691270],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[283]=",
 CellID->1950743689]
}, Open  ]],

Cell["\<\
We can also check the membership counts before and after the combination:\
\>", "MathCaption",
 CellID->2090161703],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Length"}], "]"}], "@", "#"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "rnaClassification", ",", "proteinClassification", ",", 
    "metaboliteClassification"}], " ", "}"}]}]], "Input",
 CellLabel->"In[284]:=",
 CellID->810244695],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "822"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "5963"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "116"}], ",", 
     RowBox[{"\<\"f2\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
     RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "35"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "13"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "61"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "124"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "48"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "77"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "36"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "18"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "136"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "713"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "63"}], ",", 
     RowBox[{"\<\"f2\"\>", "\[Rule]", "38"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "43"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "15"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "33"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[284]=",
 CellID->1387605075]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "combinedClassification"}]], "Input",
 CellLabel->"In[285]:=",
 CellID->75235690],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "1082"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "6724"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "256"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "41"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "85"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "64"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "112"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[285]=",
 CellID->916666016]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clustering of Classified Data", "Subsection",
 CellID->1764557057],

Cell[TextData[{
 "Now that we have combined the classes for the various omics, we can cluster \
them together to obtain the various trends using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". A two-tier hierarchical clustering of the data is performed, using a set \
of two classification vectors, ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"classification", " ", 
      SubscriptBox["vector", "1"]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"classification", " ", 
      SubscriptBox["vector", "2"]}], "}"}]}], "}"}]], "InlineFormula"],
 " for each time series to cluster the data pairwise. The vectors are \
typically the output from ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". Similarities at each clustering tier are then computed using in \
succession from each time series first ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"classification", " ", 
    SubscriptBox["vector", "1"]}], "}"}]], "InlineFormula"],
 ", and subsequently ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"classification", " ", 
    SubscriptBox["vector", "2"]}], "}"}]], "InlineFormula"],
 " (which corresponds to the ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"input", " ", "data", " ", "time", " ", "series"}], "}"}]], 
  "InlineFormula"],
 " if the input is from ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClassification"]], 
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ").  "
}], "Text",
 CellID->32166003],

Cell[TextData[{
 "The number of groups and subgroups for each tier of clustering is \
automatically determined by using internally the \"Silhouette\" (default) or \
\"Gap\" as \"SignificanceTest\" methods (see also ",
 ButtonBox["Partitioning Data into Clusters",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/PartitioningDataIntoClusters"],
 ")."
}], "Text",
 CellID->58096227],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesClusters",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClusters"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "performs clustering of time series data using two tiers of hierarchical \
clustering to identify groups and subgroups in the data. TimeSeriesClusters \
takes as input series data, where each data is comprised of two lists and \
performs clustering of the data to identify groups and subgroups based on \
similarities between the input series. The form of the input data is either \
an association of classes and members, where each member must have a list of \
two components, typically two vectors used in classification: ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"classification", " ", 
          SubscriptBox["vector", "1"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"classification", " ", 
          SubscriptBox["vector", "2"]}], "}"}]}], "}"}]], "InlineFormula"],
     ".\n",
     StyleBox["I", "Notes"],
     "n the most common case of using as input data that came from performing \
a ",
     ButtonBox["TimeSeriesClassification",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClassification"],
     ", the ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{"classification", " ", 
        SubscriptBox["vector", "2"]}], "}"}]], "InlineFormula"],
     " will correspond to input original data for the corresponding time \
series."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1813135289],

Cell["Clustering of classified time series.", "Caption",
 CellID->571851293],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"ClusterLabeling", "\"\<\>\"", Cell["\<\
Additional label to append to each cluster being computed to prepend to the \
inbuilt G#S# labeling.\
\>", "TableText"]},
   {"DendrogramPlotOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Options passed to the DendrogramPlot function used internally to generate the \
dendrograms.\
\>", "TableText"]},
   {
    ButtonBox["DistanceFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/DistanceFunction"], 
    ButtonBox["EuclideanDistance",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/EuclideanDistance"], Cell[TextData[StyleBox[
    "Distance function to be used in calculating the similarities between \
different time series in the first tier of clustering.", "Notes"]], 
     "TableText"]},
   {"LinkageMeasure", "\"\<Average\>\"", Cell["\<\
Which linkage measure to use in computing fusion coefficients.\
\>", "TableText"]},
   {"PrintDendrograms", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[
    "Option to print dendrograms for the clustering computed.", 
     "TableText"]},
   {"ReturnDendrograms", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[
    "Option to return the dendrograms as output.", "TableText"]},
   {"SignificanceCriterion", "\"\<Silhouette\>\"", Cell["\<\
Method used in determining the number of groups and subgroups at each tier of \
clustering.\
\>", "TableText"]},
   {"SingleAssociationLabel", "\"\<1\>\"", Cell["\<\
Label to use in case a list is provided to name the class of data produced.\
\>", "TableText"]},
   {"SubclusteringDistanceFunction", 
    ButtonBox["EuclideanDistance",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/EuclideanDistance"], Cell[TextData[StyleBox[
    "Distance function to be used in calculating the similarities between \
different time series in the second tier of clustering.", "Notes"]], 
     "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1454392793],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1320801797],

Cell["\<\
The output of TimeSeriesClusters is always an association of associations, \
providing a summary of the two tier clustering results for each class \
provided in the input. The output has the form:\
\>", "Text",
 CellID->416113495],

Cell[TextData[Cell[BoxData[
 RowBox[{"output", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"<|", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "1"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "11"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "12"], "..."}]}], "}"}]}], ",",
        " ", "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", "11"], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "12"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "11"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "12"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "11"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "11"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "2"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "21"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "22"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", "21"], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "22"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "21"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "22"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "21"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "21"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "M"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "M1"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "M2"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", 
           RowBox[{" ", "M1"}]], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "M2"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["subsplitClusters", "M1"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["subsplitClusters", "M2"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "M1"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "M1"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "|>"}]}]]]], "Text",
 CellID->1412755833],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<Cluster\>\"", Cell[TextData[{
     "Cluster generated using the input ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{"classification", " ", 
        SubscriptBox["vector", "1"]}], "}"}]]],
     " for similarity calculations. "
    }], "TableText"]},
   {"\"\<InitialSplitCluster\>\"", Cell["\<\
Clusters resulting from splitting the initial cluster (reported by key \
\"Cluster\") into groups using the SignificanceCriterion to determine the \
number of clusters.\
\>", "TableText"]},
   {"\"\<IntermediateClusters\>\"", Cell["\<\
Aglomerative clustering result of hierarchical clustering of each of the \
initial split clusters (reported by \"InitialSplitCluster\")\
\>", "TableText"]},
   {"\"\<SubsplitClusters\>\"", Cell["\<\
Custers generated from splitting the clusters following the second tier \
clustering (reported by \"IntermediateClusters\") into subgroups using the \
SignificanceCriterion to determine the number of clusters.\
\>", "TableText"]},
   {"\"\<Data\>\"", Cell[TextData[{
     "Data reported in the order of clustering results as rules of ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"classification", " ", 
         SubscriptBox["vector", "2"]}], "}"}], "\[Rule]", " ", "label"}]]],
     " for each time series, sorted in order of the clustering results."
    }], "TableText"]},
   {"\"\<GroupAssociations\>\"", Cell["\<\
Association denoting membership of each initial data label to groups and \
subgroups generated by the two tier clustering.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1608083999],

Cell[TextData[{
 "Output keys for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provide clustering information."
}], "Caption",
 CellID->986073698],

Cell["\<\
We now cluster our combined data (a printout of the clusters is included as a \
default option):\
\>", "MathCaption",
 CellID->565513990],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"combinedClusters", "=", 
  RowBox[{
  "TimeSeriesClusters", "[", "combinedClassification", "]"}]}]], "Input",
 CellLabel->"In[286]:=",
 CellID->1978491955],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"5"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f6\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"\<\"Cluster\"\>", "\[Rule]", 
               RowBox[{"Cluster", "[", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "]"}]}], ",", 
              TemplateBox[{"4"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"\<\"GroupAssociations\"\>", "\[Rule]", 
               RowBox[{"\[LeftAssociation]", 
                RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\<\"MIR6723\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"ZNF324\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"CBX6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
                   
                   TemplateBox[{"106"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"O60884\"\>", ",", "\<\"Protein\"\>"}], "}"}],
                    ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"RTFDC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "246.1213`", ",", "0.9403793`", ",", "\<\"Meta\"\>"}], 
                    "}"}]}], "}"}]}], "\[RightAssociation]"}]}]}], 
             "\[RightAssociation]"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 286, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 286, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 286, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[286], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[286]=",
 CellID->92211928]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization", "Section",
 CellID->1200455778],

Cell[TextData[{
 "After our data have been clustered, we would like to visualise the results \
in heatmaps and dendrograms. For the two-tier clustering we have performed \
MathIOmica can output all the clusterings in labeled dendrograms and heatmaps \
using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesDendrogramsHeatmaps"]], 
    "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", which iteratively calls ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesDendrogramHeatmap"]], 
    "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " on each class."
}], "Text",
 CellID->944139540],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesDendrogramsHeatmaps",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "generates  dendrograms and associated heatmap plots for clustered time \
series data, typically the output of all classes generated by implementing  ",
     
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesClusters"]], 
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". "
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["TimeSeriesDendrogramHeatmap",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "generates a dendrogram and heatmap plot for one set of time series ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " clusters, typically the output of a single class of  ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesClusters"]], 
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->581300403],

Cell["Visualizing the results of classification.", "Caption",
 CellID->1012763018],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"FunctionOptions", 
    RowBox[{"{", 
     RowBox[{
      ButtonBox["ImageSize",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/ImageSize"], " ", "->", " ", "200"}], "}"}], 
    Cell[TextData[{
     "Options list passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesDendrogramHeatmap"]], 
        "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2015411944],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesDendrogramsHeatmaps"]], 
    "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->768978677],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"ColorBlending", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CMYKColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "1", ",", " ", "0"}], "]"}], ",",
       " ", 
      RowBox[{"CMYKColor", "[", 
       RowBox[{"0", ",", " ", "1", ",", " ", "1", ",", " ", "0"}], "]"}]}], 
     "}"}], Cell[TextData[{
     "Color scheme for the plot. The color list is passed to an internal ",
     ButtonBox["Blend",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Blend"],
     " function to create a ",
     ButtonBox["ColorFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ColorFunction"],
     " for an internal ",
     ButtonBox["ArrayPlot function",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ArrayPlot"],
     "."
    }], "TableText"]},
   {"DendrogramColor", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"1", ",", " ", "1", ",", " ", "0"}], "]"}], Cell[
    "Color to highlight the dendrograms.", "TableText"]},
   {"FrameName", "\"\<Dendrogram and Heatmap\>\"", Cell[
    "Label for plot frame.", "TableText"]},
   {"GroupSubSize", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", " ", "0.1"}], "}"}], Cell["\<\
Relative size of group and subgroup reference column in plot.\
\>", "TableText"]},
   {"HorizontalAxisName", "\"\<Time (arbitrary units)\>\"", Cell[
    "Label for the horizontal heatmap axis.", "TableText"]},
   {"HorizontalLabels", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[
    "Labels for horizontal axis for each column.", "TableText"]},
   {"IndexColor", "\"\<DeepSeaColors\>\"", Cell[
    "Choice of color for labeling the group/subgroup index.", "TableText"]},
   {
    ButtonBox["ImageSize",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImageSize"], "200", Cell[TextData[{
     ButtonBox["ImageSize",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ImageSize"],
     " is an option that specifies the overall size of an image to display \
for an object. "
    }], "TableText"]},
   {"ScaleShift", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "Option to reset the blend of the colors used overall. The option is a \
real positive number, and is used as a multiplier for an internal ",
     ButtonBox["Blend",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Blend"],
     " function's second argument."
    }], "TableText"]},
   {"VerticalLabels", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[
    "Labels for vertical axis for each row.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1299131947],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesDendrogramHeatmap"]], 
    "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1044394180],

Cell["\<\
For each class a separate plot is generated: dendrograms are represented on \
the left, and are highlighted to represent the grouping level. The G, S, \
columns represent the groupings and subgroupings generated by the clustering. \
 The legend shows the corresponding groupings and subgrouping, and the number \
of elements in each group subgroup.\
\>", "MathCaption",
 CellID->1376228890],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimeSeriesDendrogramsHeatmaps", "[", "combinedClusters", 
  "]"}]], "Input",
 CellLabel->"In[287]:=",
 CellID->1880076040],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
/ernVKlSLV261Fjy8uXLxgXpsmbNeuTIkTgnxkyARrrv1q2b/Fq1atXHHnts
69atu3btcsjsgwcPNh69T58+sbGxqt04nt8h3V+8eLFAgQIO6T5z5szmOQoA
AAAAAEhOklXVJPB58uTp169fZGTkP//8M3bsWPPx+eqMcnO6f+21106fPi1p
etiwYUZj9uzZb9686fJRvEz39957786dO//8808jxUuONl+QrnTp0sbCtWvX
Pn78uGqPiYkZP378wYMHjSUd0r3BOd03aNDAWKeaWO/GjRtDhw41+uyQ7hs1
amQs/9lnnxk/lylTxmGiAAAAAAAAkkfNmjU1j8qXL6+WdLgiXqpUqTJnzmxu
8XDuuZfpvmfPnqqxVatWRuN7771nLBwZGWmeeU+UKFFCeqgmrlcXoFe8T/ed
O3c21pYpU6ZSpUo5PC9zujcfk//6669LS926dY2W9u3b+/AWAAAAAABg0Zw5
c5yvd2/Imzfv4cOH1ZIO6d5B2bJlPey59jLd9+rVSzVevnzZ3KspU6YYyw8e
PNgh4BtSpUplHB7vfbrfuXOnw0SCStasWR2WNB+Tnz59+n/++Ucaz5w5Y5y2
Lx1QcxQAAAAAAJDMYmJievbsWbx4cXNqzpYt26effnr+/HljMXO6r1u3bu7c
uY2c26hRI1mJh4fwkO7NV5bv16+f0b506VIJy6pdHuvSpUvGTZs3b65SpYqE
buOO8nOtWrX+/PNPYxlj73/v3r3ND7dv3z7VnjlzZqNx7ty59913n7G2IkWK
/N///d/8+fMdlmzbtq2xTKdOnYy7z5kzx2i/9957Hab6BwAAAAAgOUlC37hx
47Jly44dO+Z8qzndS/i9efPmli1b/vrrL8+5PnBu3Ljx999/r1y58p9//nF3
vr/3ZA2ytsWLF58+fdov3QMAAAAAIAVyN2c+AAAAAACwC9I9AAAAAAB2R7oH
AAAAAMDutm/f/u1tBw4cCHZ3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDcaQAA
AAAAAAAAAAAAIAUI9hEEAAAAAADAF6R7AAAAAADsjnQPAAAAAIDdke4BAAAA
ALA70j0AAAAAAHZHugcAAAAAwO5I9wAAAAAA2B3pHgAAAAAAuyPdAwAAAABg
d6R7AAAAAADsjnQPAAAAAIDdke4BAAAAALA70j2S2cyZM8eOHXvkyJFgdwQA
AAAIKfv37588efKlS5fCtgNhjnQfqm6YBLsvd8iePbt82CTjB7sjAJAE8fHx
MpzevHnT+abY2Fi5KS4uLvl75Y7002VvpZMp8O8CgBRLhpHNmzfPmzdv69at
KWqUs0iNhKH0jJR9+/alTp1atrQff/zx8OwASPch6fjx4+Z39q677ipXrlyD
Bg3mzp0b7K6R7gHY0vLly2XsSpcu3ZUrVxxu+u9//ys3ffzxx8nWGdnMXr9+
vYft0ldffVW6JOPt9evXze2tW7dWfxdOnDgR+G4CsLG//vrrueeey5gxo7E9
+cADD4wePTrY/fIDNZ6L+vXrB7svfjZr1iz11NKmTXv58mXrKzx79qz8uTl8
+HCwOoCkIt2HJCPdy6Zd/vz5U6VKZbzL77777rlz54LYN9I9ADsytgadjzZU
6f6dd95Jts7cfffdLntiUOlezJ4922iMj4+///77SfcAEvXVV1+lT59eDRcy
4Dz22GMS1tSvX3zxRbB7Z1WLFi3Uc8mWLVtMTEywu+NP169ff+ONN4oUKTJg
wAC/rPDbb7+VF6pdu3bB6gCSinQfkox0v337dvn18uXL69evr1u3rmp84YUX
gtg30j0AO0o56T4uLk4d9+hNun///feNxlWrVhl/8Un3ANxZuHChGigeffTR
zZs3q8arV6927do1c+bMkZGRwe2eRbGxsXnz5k2VKlXx4sXlOf7222/B7lGK
1qNHjySlewQd6T4kOaR7w9ChQ1X7jBkzXN7x4sWL69evP3nypJcPdODAgW3b
tjkc+engxo0bmzZtki6pX3PmzOlNur9y5YqsWTpz5swZD48ua070S1fpgLwO
O3bsSNKppol2QP46SAfWrl17+PDh+Ph4D6u6fPmyrMr8619//XXt2jXvOwMg
6HxO996Pq+fPn9+6dasMa56PZpRByV1PDCrd58qVy3xwvmyeqWO63KV774c1
RRaTDruciwCATcXFxZUqVUpGiccee0yGL4dbEz3+U4aOo0ePyjCyc+dOGVJc
LiND3MaNG2Ux//TYRDauZM2nT5/2sMySJUvk2ZUpU2bw4MHyQ7169TwsfPXq
1V27dm3YsCHROeLkics4L6P9vn37vBk/vdyIVWSxLVu27Nmzx5s1e8P70V4d
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
atSoITfVrl3baHF3DTU1v73D/neXCxvT4hlHoSdpI9Y4icA8M7zB89xx7sJv
kkZ7g/wh05yu5eqZh/Tt/cfgVlLSfZLer5BHug9JDulexrE///zz5ZdfVo3m
4evW7X0uWsK0nOavSXft2iX/fcxzg3if7uV/mbrWZ+nSpY3rNcsora4rqvma
7uPj49W3i/fdd5+xWSuPpa7eIpvTxrR+t25vbztcXMMdLztw5swZtZj5+hqb
N29W18PSSPdA6ErS9e69H1dbtGihJUwgbGyc3LhxQ+5lnKTvsjNqguVatWqZ
V24+5937dO/9sHbLdL37efPmqRYZ3N5++20t4bB8h01xADY1e/Zs9d9ftuKM
LSsZuNq1a6f5mu4lkqdKlUpL2AtsTIH++++/q0nt6tWrZywpW5XqgvV16tRR
S8o4o+adU5zTvay5cePGxhgoOVqt1pyX1YHxVapUce6bipYZM2ZUw7v8+9BD
D73wwgvr1683L3b69Gm12qZNmxqN33//ffbs2WXMd5hMr0uXLqq3J0+eVC1J
2oiVhSWTagmnDHz99dfGJNUy5vfs2VO6YZ5b3oG7cJ2k0d4watQoLeHcscjI
SKNR/k457P33pgO3kvIxuOV1uk/S+xUOSPchyUj3uXLlUufXKPIfqlWrVg7j
j4wY6ktLkT9//po1a8p/rjJlyqjpQWRIMZb0Pt2LiIgI9f83c+bMzz33nPoe
OEOGDOo/mm/pXuzdu1edPi9bktLJatWqqRWKgQMHmpc0jh+QF6FixYovJZBn
9/7778uSDt9bet+BF198Ub2SMkTLJv3DDz8sP8vzKlasmEa6B0JXktK99+Pq
0qVLVaNsxtSvX79q1arq6ER18Wh3f5rV3MuiYMGCbyQoWbKkDLZG2Pc+3d/y
eli7Zbr6sJZwHL7cUR3pKjp06JD0FxVACiVxVUVstR0lI4w69lK8/PLL5iW9
TPe3bocyLWFCJNkkk40itaFYqFAh4/Lrirp+sZZwqbunn35ahiMtYfex2sXs
8nr3WsJ0dpUqVZLVGoOqMVWyBMkcOXJobnaFSwBXd1HXrF+9erWab1+6V7hw
4VdeeaVFixYywqvhTtZj3r/8wQcfqGeRNWvWp556SjYymzVrpvZQi4YNG5of
yPuNWHHs2LECBQqoW+W5yMIVKlRQ74JsXqquenidXYZr70d7g6QGNfJLnyVB
y98p6Yn8nXJ5qb5EO3ArKR8DL9N9kt6vcKCZBLsv8BsZpszvrAwdEm+bN2++
ZMkSd3cZN26ceapJ8eCDD8omqPmrADURtId0v23bNnP77Nmz1Q4mLeFLv3Ll
yv31119qL4+x30c5cOCAWsz4htMD+b//7rvvmmefli6Zh3pFtsBloNDckOHR
PGOn9x04ffq0uqyeIuPb66+//s8//6hrlxgDo8rvDunemNWKdA/YjnE2vTfp
XvFmXFWLqYOdFNncku3PuLg4NUuJy87IrbLtrbZ4FdmqKVu27MGDB9UCapgy
TsIyU+nefG1oL4e1W7e3tYYOHSqbZGp7TOTJk2fs2LFev5AA7GHlypVGslaD
jGRASdMOZ4I3aNBA83r36LRp08zbZhkzZpQg5jyd3blz52QUMhaTjcnPP//8
5s2b6mLH6prOikr3pUqVkh+MLxtlm7NGjRrmLbpFixapp+BuOhR1CfW6deuq
X2NiYr766qvHH3/cYZiV1RrXhzJs3rxZ7mhs8Sr58+fv06eP83xuXm7EKrL1
2LVrV/W9hCL9qV69+t9//+3hRZbXSnN1FYBbSRntzXbu3Gns31fkpe7du7cP
HVC8/Biol9RdujevP0nvV8gzv1PB7guCLyoqauPGjWvXrpXA7q91Hjp0aPXq
1TJQ+2uFyo0bN2Q4XbZsmcs1y3Aq/8dleB84cKAkd0nTfyWYN2/e4MGD1dfR
3nzP7M6JEydks1k6YBwrBQAueTOuXr9+fdu2bbKBZw7diZJ7yZr//PNPGeKc
zyRNKm+GNZXuJ0+efCvhRIA1a9bs2bPH4uMCSMnU5tb69eudw5fPJHcvWbJk
x44dniczlygq45tx4rxLKt0XL178VsLXntu3b5dR0Y9dlR7u3r07MjJShuhE
V6tGe1n4yJEjnrcPPW/EOjt+/PjSpUu3bNly8+bNJPTeDd82Yo8dO7Zy5Up5
R/bt2+eXrV8vPwZJkqT3K1SR7hGS1NQlzz//vMtb1feWztNYAQA8cHecJAAE
hYcr4gHhiXSPkKSuHFq0aFHzNFPKunXr1FlOHEoKAElCugeQopDuAQeke4Sk
qKgotRVaoECBrl27/vrrr9OmTfvmm29q1aqlDsv/6KOPfLiEKACEM9I9gBSF
dA84IN0jVO3atat27dpZs2bV7lS2bNmffvqJaA8ASfXkk0/myZNnxowZwe4I
AOgmTZokg1KFChWC3REgpSDdI7Rdu3ZtyZIl48ePnzhx4urVq80XgQIAAACA
kEG6BwAAAADA7kj3AAAAAADYHekeAAAAAAC7I90DAAAAAGB3pHsAAAAAAOyO
dA8AAAAAgN2R7gEAAAAAsDvSPQAAAAAAdke6BwAAAADA7kj3AAAAAADYHeke
AAAAQCg5ePDg2LFj58yZE+yOAMmKdA8AAAAg0G545N/HGjZsmKSbJ554wr+r
BVI40j0AAACAQCtatKjm3sqVK/34WKR7hCfSPQAAAIBAK1OmTI7bjABitCxf
vtyPj0W6R3gi3QMAAABITtmyZZP0MWHChACtn3SP8ES6BwAAAJCckpTur127
tmHDhpMnT3pe7Pjx45s2bVKn8H/99dee0/3FixfXr1+f6DoBeyHdAwAAAEhO
ntN98eLF77rrritXrkRGRlarVi1TpkwqrRQrVmzNmjXOy48fP75AgQJqmYwZ
M9arV693797u0v2UKVMefvjhVKlSqeXvvvvufv36xcbGmpfp1KmTdKBgwYIn
Tpwwt/fo0UO1nz9/3sKzBwKFdA8AAAAgOXlO93nz5pVbu3fvnj59+tSpU5co
UaJQoUIqsOTMmfPixYvmhdu2bWvk+rJly95zzz1GunFO9++88466qWjRoq+/
/vozzzwj65dfX3rpJfNily5dKlKkiLRXq1YtPj5eNa5ZsyZNmjTSOGXKFP+9
EoA/ke4BAAAAJCdv0r0oX7787t27VaMsrBpHjBhhLLlixQq1F/61114zUv+v
v/6aK1cu53T//fffS6Mk9NGjRxuZPTIyUs3yN27cOPPC69atS5cunbQPHjxY
fr169epDDz0kv3700Ud+eg0A/yPdAwAAAEhO3qT7mjVrXr9+3dwuYV/aW7Zs
abQ8//zz0iK5W51ubxg6dKhDuo+JicmSJYs09unTx+HhJL9Le+XKlR3aBw0a
pA4J2LFjx2effaZODbh8+bIPzxdIHqR7AAAAAMnJm3Q/adIkh/aPP/5Y2uvU
qaN+jY+PV+sZOXKkw5LOc+avW7dOWtKmTRsVFeWw8KZNm+QmeVCHdln/f/7z
H7mpYMGCqVOnTpcu3YYNG5L6TIHkRLoHAAAAkJx8S/fqFPtatWqpXw8ePKhS
TGRkpMOSzul+9OjRauH0Tow05DC3njh16pTqqujXr5+l5wwEHukeAAAAQHKy
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
r7/++uGHHzr6yeOPF3jpJdJ9GNWMGVrt2lqRIuy7J91Tfi7SvR2LdA8AIYB0
D5u6cCHi558bv/NOje7dy/ulypS56+WXSfdhVFOmaHXraqVKafffT7on3VP+
LNK9HYt0DwAhgHQPmzpy5PnPP9cKF9aGDPFPPf209sorpPswKkn3H36oPfss
c+aT7ik/F+nejkW6B4AQQLqHTUm679RJP2l61Sr/1Msva7Vqke7DqEj3pHsq
QEW6t2OR7gEgBJDuYVOS7mVr5Pnn/Zb13nlHY878sCrSPemeClCR7u1YpHsA
CAGke9hUSKb7mze11au1yEhL1ayZ1r496T7xIt2T7qkAFenejkW6B4AQQLqH
TYVeuo+P186f1/r312vAAN+rZk2tZUvSfeJFuifdUwEq0r0di3QPACGAdA+b
Cr10f+2aNmyYPpNA69Zax46+V7VqWvPmpPvES6X7ihW1hx8m3ZPuKX8W6d6O
RboHgBBAuodNhV66v3pV3+eeL5+e7rt08b2qVyfde1Wke9I9FaAi3duxSPcA
EAJI97CpkEz3rVrptWmT3g2fq317fQ8+6T7R4sh80j0VoCLd27FI90g5Goeu
YL+0CH2ke9hUqKb7IUO0S5csrYc5870s0j3pngpQke7tWOQOpByh+mkM1eeF
FIV0D5si3bsr0r2XRbon3VMBKtK9HYvcgZQjVD+NHp5XXFzc9u3bIyIi+vfv
37Fjx759+44dO3b58uWxsbHu7hIVFTVixIglS5Y437R79+5JkyYNGTJEVjV0
6FD5edu2bR46tnDhwuHDh1++fDlJT8c30dHRP/7448SJE33ozI4dO8aPH//d
d99Nnz59165dgeymjZHuYVOke3dFuveySPekeypARbq3Y4VqnoIdhd5fTON5
uXy+ktMl1Ls8kv/LL788ceKE812uX78uN8kCP/30k7k9Pj5+2rRpLlc1derU
uLg451WtX79eLXDu3DnLb13iJJvLY33++ecub/XQmTlz5jg8o7lz5wa+v/ZD
uodNke7dFeneyyLdJ08FPbNQyV+kezsW6R4pR+j9xTSel/OTjYmJ6dChg4qr
48aN27Rp08mTJ/fs2SPRtUWLFtIotzrswT9z5szgwYPVXRzS/e7du1X7mDFj
du3adeLECWmRZVTjokWLzAvHx8cvW7ZMPUrypPsVK1aox3JO9547c/To0WbN
mjVp0mTBggWHDx+ePXu2WszzMQnhiXQPmyLduyvSfaIVH6/FxmqTJunpvkIF
0n1gK+iZhUr+It3bsUj3SDlC7y+m8bycn+wvv/wi7c2bN9+5c6fDTRJppV1u
Xb16tdG4ePHili1bGvuvHdL95MmTpbFnz54Sls3t6tiAQYMGGS2nT5+WX827
wgOd7k+dOmX03CHdJ9oZdeuECROMlkmTJknLN998E9A+2xHpHjZFundXpHvP
JdH+wgXt5EltzBjt/fdJ9wGvoGcWKvmLdG/HIt0j5Qi9v5jG83J4pjExMWpv
9ezZs12+FOPHj2/WrJk51TZp0kSWl7Q+btw453Q/atQoaRw+fLjDenbs2NG9
e/chQ4YYB+erA92bN2++ZMkSeQif0/2ePXukJy6P+TeLjY3t16+fOqjAOd17
7sz169fVsz548KDRePjwYWmR9qtXr/rQ7RBGuodNke7dFeneQ8XF6S/v3Lna
7Nlahw5avXqk+4BX0DMLlfxFurdjke6RcoTeX0zjeTk803Xr1nnebx6TwNwi
uX7t2rWSpufPn++c7pctW6Yy75QpU1yesG9YunSppPIzZ87Iz+oIAd/Sfd++
feW+ERERDkcLOJg5c6YsNmTIkAMHDjine8+dUXeRJ+XwEOp7gP379/vQ7RBG
uodNke7dFeneQ127pm3bpuXMqRUtquXLp1Wvrqf7hx8m3Qewgp5ZqOQv0r0d
i3SPlCP0/mIaz8vhmap91m3atPHhVZo3b55zur969erAgQON49s7dOjw888/
r1u3Ljo62sOqrOy7P3LkiDrefvz48e6W2bt3r2Tz1q1by0McPHjQ5Xn3Hjqz
Y8cOafn0008dlpQWTr13RrqHTZHu3RXp3vOLvHmzliWL9vrrWrlyWs2apPuA
V9AzC5X8Rbq3Y5HukXKE3l9M43k5PFNJxOowe3Pj33//HRER8X8Jfkzwyy+/
OL9KLtO9uHHjxqRJk9q0aWM+jb1p06Zz5sxxt3vdSrq/ZToCYcqUKc63xsTE
dO7cWW5ds2aN/OpDut+yZYu0dOzY0WHJbt26SfvGjRt963aoIt3Dpkj37op0
76HktV2/XnvkEf1n5sxPngp6ZqGSv0j3dizSPVKOUPqL2fhODs906tSp0ti+
fXtz45IlSxzuJYHX+VVyl+6VuLi4vXv3zpo1a9CgQRLt1Xq+//57lwsnmu53
7Nix1qNOnTqph5BHdLivmrF/1KhR6lcf0v327dulRR7CYUnJ+9Iu2d/dqsIT
6R42Rbp3V6R7D0W6T/4Kemahkr9I93Ys0j1SjtD7i2k8L4dnunjxYhWKz58/
bzSePHky8rbffvstSeleQv2VK1cclrxw4YLkevVA6tx2B4mm+x49ejT2mnln
ujqoXvzxxx+rEqgT8Fu1aiU/b9261ZvOHD16VFpat27tsKS0SPvu3bvddTs8
ke5hU6R7d0W691Ck++SvoGcWKvmLdG/HIt0j5Qi9v5jG83J4pseOHVPhd+3a
tS5fiv3793uf7mVtTZo0kYUvX77ssHB8fPxnn30myy9fvtx5VYmm+zlz5oz1
SK1cDBgw4Nq1a8Yd1Sx/7vTs2dObzkRHR6vlr1+/bjTKo6jG06dPu+t2eCLd
w6ZI9+6KdO+hSPfJX0HPLFTyF+nejkW6R8oRen8xjefl/GT79Okj7Z988sme
PXucb922bZv36T4uLq5du3bSuGjRIoeF5aa2bdvKTV7uLk+SY8eOSf9lDfJc
HK5Pt2/fvgl3GjlyZOOEi9/JzwsWLPCyM2oCvXXr1hkta9eulRZ5Ur71OYSR
7mFTpHt3Rbr3UM7p/rnntGLFSPcBrKBnFir5i3RvxyLdI+UIvb+YxvNyfrKH
Dh1SeVYC8ooVK9SeaAnjEpmnTJmibvL+yPyIiAi1R3vGjBkXL15UjZKUhw8f
Lo0tW7a8ceOG86qspHuJ8126dFE74p2PGXDmw3n3t25fXKB3797qvAP5t1ev
XtIye/ZsH/oc2kj3sKkUm+6vX9dOntROnEhyHTigNWxIug9IbdigrV2r19Kl
2s8/63H+1u10/+KLWsmSpPsAVtAzC5X8Rbq3Y5HukXKE3l9M43m5fL6bNm1S
p5Ar7dq1U9eYU7p16+byom8u0/2lS5fMV8Rr06aN2puvviJYtWqVyw5YSffq
jH7ppPFlgme+pfvo6Gj1EnXo0OGHH36Qf+XnHj16xMbG+tDn0Ea6h+3Ex8df
uXLln38qduqkVarktwDol3QfH69FRelXVPeh1q/X3n1XGzyYdO/nun5dmzlT
mz5dmzFD+/VXbdAg/VD8W7fTfbVqWunSpPsAVtAzC5X8Rbq3Y5HukXKE3l9M
43m5e8pnz56dMGGCkcRFixYt+vTp88cff7gLsL///rssNnbsWIf2mzdvTpo0
SV2ETmnZsuWAAQNcHvmvqC8TzDP7eW/u3LnyWN7f9/Dhw41dXd4u0c6cPHmy
d+/expPq1avX0aNHfehwyCPdw3YuXbrUt2/fFi0eqFJFv1i5vzKgX9J9TIy+
jfTss/qF1F97LWn16qv6hdcHDCDd+7OuXtXmzNEvbf/uu9rHH2vvv6+/1IUL
6zepdP/KK9qTT5LuA1hBzyxU8hfp3o5FukfKEXp/MY3n5fmJx8XFRUVFSf49
ceKE/GzxZbx69eqBAwf8sirPXB7tHyDR0dGHDh06e/ZsfHx8sj2ovZDuYTtn
zhx6773/vvRSzjJltGee8VsM9Eu6v3JFe+stLUcO7dFHtcceS1qVLKnlz6/1
70+692dFR2ujRunvyEsv6e9vrVpalSpaoUL6TSrd16ihPfUU6T6AFfTMQiV/
ke7tWKR7pByh9xfTeF7BfWERDkj3sJ2FC/9Tt27eTz9NW7t2itt3f/myniIH
DNCWLdNWr05ayV3q1ePIfD/XhQta377aRx9pK1ZoW7Zoq1bpB+ebz7vnyPxA
V9AzC5X8Rbq3Y5E7kHKE3l9M43m5e8pxcXHbt2+PiIjo379/x44d+/btO3bs
2OXLl3s4rzwqKmrEiBFLlixxvmn37t2TJk0aMmSIrGro0KHys8sz90+fPj1r
1qwxY8aMGjVqxowZhw8fTvp7lWQLFy4cPny4h/n3oqOjf/zxx4kTJyZDZ0IS
6R62M2lS9rp1tYEDtQ8+0I+B91cM9Fe6r1JFPxQ8JibJ92XOfP9WbKz+duzc
qX32mf6CnD+vNzrPmS/v12OPke4DWEHPLFTyF+nejkW6R8qRnH8xn0rbMBnK
eF4un6/kdAn1jV358ssvT5w44XyX69evy03Os+rFx8dPmzbN5aqmTp1qPkR/
+fLlav46Q5MmTebOneu/t9GF9evXq8fyMIPfd99953naPXhGuoftSLqXUDZ7
tta5c4qbM590n3LqxAlt2jStalU9vHfq5DbdywKlSpHuSfeUP4t0b8ci3SPl
CKt0HxMTo2aAF+PGjdu0adPJkyf37NkjQbtFixZqlniHPfhnzpwZPHiwuotD
ut+9e7dqHzNmzK5du06cOCEtsoxqXLRokVrs2LFjKtoPGTJk7dq1f/3114gR
I9Qysnwg3tP4+Phly5apZ+Qh3a9YsUItQLr3GeketiPp/uOPtYUL9a0R0r1z
hWG6j4vTbtzQJz0w186d+hn3Tz+tz4FAuifdU8lZpHs7FukeKUdYpftffvlF
2ps3b75z506Hm44ePSrtcuvq1auNxsWLF5uvl+eQ7idPntw44dLzDpPOqWMD
Bg0apH6dNWtW44RL7xnfG8TFxXXq1EkaA3FI/OnTp+WhzccJuEz3p06dMp4a
6d5npHvYDunec4Vhur94Udu9W1uw4I7q318P7198odWtq3XtSron3VPJV6R7
OxbpHilH+KT7mJgYtTt79uzZLl+K8ePHN2vWbMKECUZLkyZNZHlJ6+PGjXNO
96NGjZLG4cOHO6xnx44d3bt3HzJkiDo4f9KkSRKf5V/zMlOmTJH7jhgxIklv
1p49e6QnnqflnzNnjvoGY8mSJS4vZy9iY2P79eunjjog3VtBuoftkO49Vyil
+5s39ZdFXhDPtXGjNnas9s032siR/6sWLbQ33tD69dMaNdJP4jh2TH93jh/X
Zy8sVEj7+299+Ro19MvhFS1KuifdU/4s0r0di3SPlCN80v26des8H6kek8Dc
Irl+7dq1kqbnz5/vnO6XLVumzqCXqO7yhH0P1P793377LUn36tu3r9wrIiLC
wyXqli5dOm7cuDNnzsjP6mgE5+c7c+ZMdabAgQMHSPdWkO5hO6R7zxVK6f7C
BW3vXm3DhkTqk0+0++7TX/m33vpfVaqk75cfMULfcf/pp/pVCbZt09as0efM
z5BBk4/QSy9p2bJpWbNqWbKQ7kn3lD+LdG/HCs90f/PmzQkTJqxfvz7YHcEd
wifdq53abdq08eFVmjdvnnO6v3r16sCBA40D4Dt06PDzzz+vW7cuOjra89qM
rwX279+fpG4cOXJEHU4/fvx4b5Z3ue9+79698tCtW7eW9oMHD5LurSDdw3YC
lO7r1dNefVU/WTs62vc6eVJ74QXSvbcVF6e/Yu7q+HE9kk+YoP3ySyL1xhta
/vz6PvrPPvu3WrfWatfW0327dvq1FeTNlZj/44/at9/q+/HTptW/CnjiCS19
ej3pZ8yYqlixYoH+3JLuqfAp0r0dKzzTvTrl2eH4ZARd+KR7ScTqMHtz499/
/x0REfF/CX5MIB9U51fJZboXN27ckI90mzZtzOe5N23adM6cOe52r2/cuFEd
8O/b/wXjCIQpU6YkurBzuo+JiencubM0rlmzRn4l3VtEuoftBCjdv/aaHsxX
rdI2b/a95O4VKujz+ZPuvXzKEt7d1f/9n/bmm3psr1QpkSpSRH/Zt23Tz75X
tXKlfs3EatW07Nm1TJn0CJ8167976jNn1oe7dOn0jK+kT5/+6aefDvTnlnRP
hU+R7u1Y4Zbur169akwkTrpPacIn3U+dOlUa27dvb25csmRJ4ztJInZ+ldyl
eyUuLm7v3r2zZs0aNGiQRHu1nu+//955yWXLlqlo/80339y8edPl2nbs2LHW
IzUjn5BH9PzmOqd79T9x1KhR6lfSvUWke9hOgNL9Bx/oh2pHROhHbvtccvcn
ngjHdH/tmp6pJV/v2OFtbd+urVihz2Y/bJj29dcuql8/7cUXtZw5terVHatq
Ve3xx/VL3ZUqpZUurR+WL//K6y/PesoUvX74QT9c/8kn9b3zqVNrnmXIkKFC
hQqB/tyS7qnwKdK9HSus0v3WrVslOxjRiXSf0oRSunfI6Q7PdPHixar9/Pnz
RuPJkycjb/vtt9+SlO4l1F+5csVhyQsXLkiuVw+kTn43qPWL0aNH37hxw907
0qNHj8Ze27hxo4c31yHd79ixQ93rjz/+WJVAnYDfqlUr+Vn+q3pYFVwi3cN2
ApTuv/9ea9hQD4kSz30uufu992ozZ4Zduj98WGveXKtZ844z3z1X7dpayZL6
yPP229q777ooWebRR7UCBfRvAByqdWt9f33evHqulwXy5NEyZtTSpNF3x6dK
pcd5tWtefpBfhfrXnUyZMlWuXDnQn1vSPRU+Rbq3Y4VVulcHLQ8dOnT69Omk
+xQolNK95333x44dU9l27dq1Ll+K/fv3e5/uZW1NmjSRhS9fvuywcHx8/Gef
fSbLL1++3GhR5wWIqVOnepgT71bC/ABjPVIrFwMGDLh27ZqHVTmke3W+vzs9
e/b0sCq4RLqH7QQo3a9fr6fykSP1mO9zff21vjd51qyUnu6le3/8oU2erP32
m39q4ECtaVM9dHu/JSkhvUYNfeQpXVorU8ZFySuZL5++717eZYeqUEHLnVu7
6y79wPscOfRp8STOS5ZXcV5Kkr7xc6LpPl26dGXKlAn05zaM071FwU89VFKL
dG/HCqt0/9VXX6ndi+oQaNJ9ShM+6V706dNH2j/55JM9e/Y437pt2zbv031c
XFy7du2kcdGiRQ4Ly01t27aVm4y94RLJGydMo2fkfZ8dO3ZM+i9rk+dy9epV
zws7pPt9+/ZNuNPIkSMbJ1w+T35esGCBxb6FIdI9bCdA6d4vZZc58y9c0D7/
XL8Q/Hvv+ackjDdurH+5MWmStzV2rNaypT7yZMzottKn/3cvvIeSIK/KyPJJ
lSpVqqJFiwb6cxvG6T74sYVK5iLd27HCKt0bSPcpU1il+0OHDqnAKwF5xYoV
p0+fvpUQxiUyT5kyRd3k/ZH5ERERaq/3jBkzLl68qBolSg8fPlwaW7ZsqQ6/
3759u1osMjIy9k6er1zvTOJ8ly5d1H5252MGnLm73r2B8+4tIt3Ddkj3nuvL
L/WD5Hv00A8hcFfDh2tNmujh2l+bhdWqafXra+3b6yfLe1nSz2bN9NMZnnrK
dT30kL7jXh1v75DlM2T4X6VPr5eaIk/tsjfK2HGfaBUuXDjQn1vSPRU+Rbq3
Y5HukXKEVboXmzZtat26tXE4ert27dQ15pRu3bpt27bN+V4u0/2lS5fMV8Rr
06aN2puvviJYtWqVWkySuLuD4b/66qskvVnqjH7ppPFlgmek+0Aj3cN2SPee
a+BA/aT1evX07OyuypfXp6Pv1k2/SJyHGjnSsdydkiBre/ll/d8PPkhCNWjg
+ox7VZUq6ZMYqMxulJDYnimTPvW9UfKrBPyEY+z/922ASvpqeQ+l0n2hQoUC
/bkl3VPhU6R7OxbpHilHuKV7cfbs2QkTJhhJXLRo0aJPnz5//PFHbGysy7v8
/vvvstjYsWMd2m/evCkfaXWNOaVly5YDBgwwjvyPi4szZtG3nu7nzp0rj2We
FdAz9cWFh+UPHz4sC3Ts2DFJ3YCBdA/bId17rl279OPe+/XTBg1yW6++qu8Z
r15d+/RTT/XYY/q+dXUWfNmy+hT0qtS+9XLltKef/reKFtUeeECf4y5//qRV
vnxuK0cOfde8Sy5zuqbdsbPee+nSpStbtmygP7ekeyp8inRvxyLdI+UIw3Sv
SO6OioqSeHvixImkHiHv7OrVqwcOHPDLqjzzMNk+kh/pHrYTqule7tKmjda/
v3b8uBYdneS6eFE/m17qxAltwQL9MnMe6rXXtFy59Ons3n/fU6VL9+9l4qXU
FHZG5cypl6wkd+5/S5ZRO9BtJ0OGDOXLlw/055Z0T4VPke7tWLZL97NmzYqo
XNlDefOMSPcpU9ime8A68yZusPsCeCVU0/21a/qp6C++qH30kX5SfJKqYUP9
anSVK+svyHPP6TvcixXzVPny6cld8rjnHetq8nlzOU9qJ+tRpa5GZ0eS7p95
5plAf25J91T4FOnejmW73CHp3vMHqeN//5voSkj3KRPpHvCZeRM32H0BvJLC
073E89mz9Z3pN28mreS+Q4dqDz+sHwZvHAPvZT3+uH4cu/fhWp3A7oFNc7pv
2HdPuqf8W6R7O5btckfg0v2VK1f27t174MCBQHUdiQnDdB8XF7d9+/aIiIj+
/ft37Nixb9++Y8eOXb58ubuT7kVUVNSIESPkM+x80+7du+VTPWTIEFnV0KFD
5WeX8/KdPHnyt99+Gzly5Pjx49euXZvoxez8YuHChcOHD/cwu350dPSPP/44
ceLEZOhMSDJv4ga7L4BXUnK6l1D/1FPaL79oS5dqf/6ZtFq2TBs/Xnv0Ue2R
R/R/k1RFiugnnqvZ481l7Fg372F3mIJe7uiwgz5jRi1PHv1fNSO9cUd1bnvo
yZgx47PPPhvozy3pngqfIt3bsUj3hq1bt6rJxgPWdyQiOf9iVs7UJRnKeF4u
n6/kdAn1Lue4+/LLL0+cOOF8l+vXr8tNznPmx8fHT5s2zeWqpk6daj4Bf/Xq
1Wr6ekPPnj0vXLjgv7fRhfXr16vH8jBn/nfffcec+VaYN3GD3RfAKyk53at9
9yNH6vPaTZmStJo8WRs9Wp/s7uGHfUn3kr4zZXIsh8vHmy8kJ6VmmE9Sug/J
ffqS7p977rlAf25J91T4FOnejhWe6X7p0qXu0n3btm0D1nckIqzSfUxMTIcO
HVTmHTdu3KZNm06ePLlnz565c+e2aNFCGuVWhz34Z86cGTx4sLqLQ7rfvXu3
ah8zZsyuXbtOnDghLbKMaly0aJFa7PTp082bN5eW4cOHb9u2bdWqVd26dZNf
hw4dGpi3VP/aYdmyZeoZeUj3K1asUAuQ7n1m3sQNdl8Ar6TkdH/9uvbDD1qd
Onq98UbSSu5SrZqeqUuW/Heaeu+rVCmtUCH9+nHeT1afN6+WJYvbwCsZ32WQ
l+6FHvbdk+4p/xbp3rfq3cVSWXz08Ez3SJnCKt3/8ssv0i5Ze+fOnQ43HT16
VGXw1atXG42LFy9WF5Vzme4nT56s9sJLmja3q2MDBg0apH6dO3eu+grr+vXr
qkV9qdWsWbOYmBhr754Lp0+floc2HyfgMt2fOnXKeGqke5+ZN3GD3RekRDI4
RKcwY8dm//DDFJHu4+K02Ng76to1beZMrX597e239SvOJ6nkLjVr6gn9uef0
AwCMqlxZq1hRb3RXzz6rX7++dGn9kH7nKlpUD/4FC+r/mqtAAX3Se+dj9V2W
ca150r3PSPdU+BTp3rfq08lSWXx00j1SjvBJ9xKl1e7s2bNnu3wpxo8fL4l7
woQJRkuTJk1keUnr48aNc073o0aNUnvkHdazY8eO7t27DxkyRB2cv2vXrqlT
p0ZGRhoLXLp0KdFj5l3as2eP9MTzRffmzJmjvsFYsmSJOh3A+VFiY2P79eun
jjog3Vth3sQNdl+Q4ki0j4qKmpLCtGuX+b//1S/61j2o6V6i/fnz2smTd9SJ
E9r+/dqWLb7U5s3apk3auHHamDH6AQBGffWVfun5tm09VZs2WuvWWqtWLuqN
N/53eXqHKl1anz+/cOHEq2BB7Z579FHCmyPzE52yL6XhyHzSvbvq/4WlCnr/
g1WkezsW6R4pR/ik+3Xr1nnO1DEJzC2S69euXStpev78+c7pftmyZdLYpEkT
2WB2ecK+S1evXv3555/ljt26dfPyLoa+ffvKHSMiIhyOFjBbunTpuHHjzpw5
Iz+roxGcn+/MmTOlfciQIQcOHCDdW2HexA12X5DiXLkStWHDrA4dOgwd2mHY
sJRSDRpkeOst7Y8/tC5d9Eu/rVsXnFq1Sps1S5s2TZs61Z81eLDWs6fWo8e/
JVtcX3yhX3r+3Xd9rGrVtBIltOLF9QP+Herhh/Xkfv/9ide99+pXtPcS6d4l
0j0VPkW6D0oN/tRSke6RcoRPulc7tX2bwnHevHnO6V5y+sCBA40D4GUbXmL7
unXroqOjXa5EHTOv9qd/+umne/bsSWo3jhw5og6nHz9+vDfLu9x3v3fv3iZN
mrRu3VraDx48SLq34v/ZOxO4qKr2j5+3xTSzfd9X25c3szJNrextedu1TbPF
in0Z1thEIEARwQUUUIhkCUdw+wtpsgRhKqTxJoISBi4QCIK4sQ/+n8Oh63Vm
uMzM4zBzmfP7fD994MyduWdmGJvvPec8R/wV19R94TG7VFcXOjldMWLEiJkz
R3z5pbnw4ovknXdIQQFxd6eF45591gQ8/TRd6n755eefkSPJpZeewxVXqFfD
0wtWOk8rF1ygB0Oynh4L2P3zzz9v7E+Txdr9ImeCAek7pp3qbLFwuzeMoNko
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
Y/dGBVlnDCksyLOnzECBPLt8Qdq9yftvMMu/RoEsQYnsPLd7HvOJRdl9W1ub
l5cX89nk5OSSkpL6+vrKysqsrCx7e3tohFvVRvAbGxsXLFjA7qJm9xUVFaw9
Pj5+3759dXV10ALHsMacnBzNDhQWFrJbB8Hu+zsX9BYa3dzctm3bVlZWJpT7
O3jwoLG7NPQi/opr6r7wmF243Q8CXl60Iv0LL1A9748ZM8jtt9Pydz09Wmhr
I6Wl9DVxdERhb09XyoO8X3QRHWfvD0L6quSJERfQM8/SeRLhdm9UTD4eiqFg
IgoT9jz+SxTIsyPtfr4HCpP/2cgUbvc85hOLsvuUlBRot7Oz27t3r9pNNTU1
0A63bt++XWjMzc0V75enZverV6+26t16vqenR9zO5gaEh4erneLIkSPCoxnb
7vs7V2Njo7W1NTSWl5cLjQEBAXz43rCIv+Kaui88g53OgVJenuPszO3ecEC9
4aU7dUqKr74iTz9NK9W7uvYLCD54t58f+ftvLRw+TIqL6eT8zz4jn3+O4tZb
6aA8wKbQa4WcWwxfMHox8gqfmW9UkHvSIYUFuXA+ewoKZEVBTL195Bxv5OuG
tHtMXTvgk2QUmIIDcVYokPvde81Fwe2ex3xiOXbf1tbGBug3btyo9aVITU21
tbVNS0sTWpgIg60nJydr2n1cXBw0RkVFqT1OWVnZnDlzIiIixJPzu7u7586d
ywb6Dbb7yspK6MmAFf4lzrVu3TpoSUhIEB9fU1MDfW5qajKgSxYe8VdcU/eF
Z1DT2tpaMVC2bEkG9+R2bzCnT9M19WvXSvH223TcfMsW0tjYLxUV1O4ffJAe
rJU33iATJpwHxoyh5fcfeoiW6bOc8LF7o4Ksa4e0e+SedEjJRdq937eGs/JT
FKa1+7leKMZvRYHZQvGrFShCfFAEzUbB7Z7HfGI5dl9cXMzGsvvT2LbeiFvA
64uKisCmN23apGn3+fn50GhtbZ2enq51wb44GzZsgINB+aurqw22+9DQULhv
YmKi2mwB3c+1YsUKNj+hvr4+Ly8vOTl5y5Yt8LMBneE5w+3eUtPd3XXo0F74
7Pz8sxQpKQtmzOB2bzjNzSQzkyxfLsVrrxEPD1qvXvpxxo4lTz5JDx6QV14h
L79sIFOm0Lp548fTPexGjpRixAg6vj80wu3eqMxIIRiQdv/xDyiQQ7FfL0eB
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
0dF5eXmaN1VUVCiVyoiICHioyMhI+Fnryn04aVFREdy6bNky+K/Wov3nKwOe
q6WlJTMzc0Vv4Ae13fp4dI/4K66p+6JH6usPvPwyLQr3ww9EqRyYmBhaymwI
2/3u3UShoNuZgbrKiDvuUN92TYzmxu7nhaee6itZf9tt9Nfrr6ebwoPjjxxJ
B/SZ4+P517/oBHj4QffFAsKc//MFv1KhY3hVPaOC2T28Nyi7n5SPAqmZ76xD
gSmLh6wbj7mwACDtHjN6Duy/BwXmj1WxkGBATlpAftLkaPfHriQScLuXbwbz
/5hTnvppEBCel9bnC54OUm+lLcHBwXV1dZp36ejogJs0q+r19PSwveQ0k5GR
IZ5+f+LECdB/tWPgY3X+3sazGfBce/fudXJyEt/q7OwMjcbozJCP+Cuuqfui
R8DuX3uNavuhQ+TIkYH54w/yxBNDuareyZPkzz9ptflt22RDfj5xdKTbxr34
onZeeMEovPoqefll8tJLfaeYPJkycSItbs/q2+vC+PHkuefIuHF9BfSefpqM
HUt55hnaCFxzDd3GDtpnzOhj+nQpPvqIvPMOrcKn4/SGhx8egAcfpJcvIJpL
9RmWWUBPa8Dun332WWP/q2Wxdo/c5Atp98ip9cjOL7VDgalGOCMFxSJnFEi7
f3kLCnSpB8Mz+WeCAXlxALOUgyJDu2+6mkjwzSfc7uUai7L7trY2tj0cJDk5
uaSkpL6+vrKyMisri21RB7eqjeA3NjYuWLCA3UXN7isqKlh7fHz8vn376urq
oAWOYY05OTnCkXAAtLi5uW3btq2srEwoaifsW3ceI30ueHYeHh7sUsZvv/22
c+fOkJAQ+BUaec18AyL+imvqvugRsPv//pds3Eja2nSS35oaWrp8wQLS02N6
OjrIqVPUx+G/lszRo7Q2/iefkPfflx/TppGpU8l771ElB956i16meOMN+jM0
ArfeSh57jF5GcHPrw9VVCy4ufTg7wzervisMEkyYQK8qsAsL0jz9NLnvPvq5
7q9AH7d7IbxmvlFBjici7f77z1CYVnLDPA3nl+dRlD2E4qf/oJjrhQI5bwHz
x/r2eoIBWSYC+UmTo90fvYZIwO1evrEou09JSYF2Ozs7zaHqmpoaaIdbt2/f
LjTm5uaK98tTs/vVq1db9W4939PTI25ncwPCw8PZr42NjayCfXl5uXBMQECA
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
tbW10Odly5Y1Nzfr2xkeCLd7DsfYcLs3Wzo76dL7f/2L2z23e6PA7Z4jI+Ro
9xWjiQTu3O5lGwu0exaVSgVKe+jQobq6On3H0DXT2tpaXV094EM1NjbW1tZi
Tsdm++sS6XPB49T0xoCLDDxCuN1zOMaG273Z0t5OJk6k//pxuzem3SODEpY4
KxRfrUCBtHvvUMNB7vmeNBPFAjcUQbNRpH2EAvPH6hpBMES6oEB+0uRo9/vu
JxJwu5dvLNbueXjw4XbP4RgbbvdmC9g9H7sf2naP3BEPubca0u4xPV//Ngpk
yf3U6SiQRQO+/wwF5o8VaffzvkGB/KTJzjvA7ssfJBJwu5dvLNDuVSrVnj17
EhMT582b5+3tHRoampSUVFBQ0N+0fEhzc3N0dHReXp7mTRUVFUqlMiIiAh4q
MjISflZbuf/7779v7ieFhYWGvm9SOXLkSGZmZlxcHHSmvLy8q6vLGGfhgXC7
53CMDbd7s4Xb/ZC3e/dwFEhLRdp9+jTDQV7WCHdHsfENFGvfRbFQgQLzx4qc
8yA9z3xAkJ80Odq9dCEC98+43cs1g/l/zEmv7RwEhOel9fmCp4PUW2lLcHBw
XV2d5l06OjrgJs2qej09PUIJO7VkZGQIU+IXLVqk9RiIl5fXeX0zaXbs2CGu
Ewjx8/PjFfOMFG73HI6x4XZvtnC7H/J2jxwMRUou0u53PGM4y79G8VEais++
R+G2AAXymgzmjxWzmAKIsUGB/KTJ0e5LHyEScLuXbyzK7tva2tjub5Dk5OSS
kpL6+vrKysqsrCx7e3um22oj+I2NjQsWLGB3UbP7iooK1h4fH79v3766ujpo
gWNYY05ODjussLBQeW7g1MIdz++72dDQwJ7IvHnz/vzzz6qqKnZtYeHChfja
Ajya4XbP4RgbbvdmC7f7IW/3yg9QLLVDgbT7de8YDnJ2euLnKKZmoEBuDPfn
fSgwf6zIKRNzvVAgP2lytPvdjxIJuN3LNxZl9ykpKdBuZ2e3d+9etZtqamrY
TvHiPehzc3PF4+Bqdr969Wqr3q3ne3p6xO1sbkB4eHh/r/mqVavYHdvb2/V9
v6TDHtnHx0covtfd3c22wNu6dev5PRcPhNs9h2NsuN2bLdzuh7zd730AhWnt
3irOcDa8hQJZThC5IMJ5EQrk0D/mj9UlkmB4ZgcK5CdNjnb/v8eJBG7c7mUb
y7H7trY2Nq69ceNGrS9Famqqra1tWlqa0MK2jQNbZ6PtanYfFxcHjVFRUWqP
U1ZWBh/ziIgIrcPlbMTfxsbm8OHD+r5ZlZWV0BOJUfjIyEh48E2bNokbN2zY
AI3Lly/X93Q8A4bbPYdjbLjdmy3c7oe83dfcgiJlBgqk3b+3xnCi7VEg148j
190jS+7bR6NACTLiggyQMAsF8pMmR7sveYJIwO1evrEcuy8uLmZD8E1NTVpf
irbeiFvA64uKisCmwZc17T4/Px8ara2t09PTtS7Y10x7e7uPjw/cC+6i6zsk
SmhoKNw3MTFRbbaAkKCgIM1hejagHxwcbMAZeaTD7Z7DMTbc7s0WbvdD3u6R
66BNW1UPs+7eMwxFzksokGcP80Tx/C8oMH+syE0WpqeiQH7S5Gj3u54kErh9
zu1errEcu8/MzIRGhUJhwKv0448/atp9a2vr/PnzxSXyVq5cWVxcfPLkyf4e
Jzs7G450dHSE+xrQjcOHD7OVAqmpqVoPiI2NZSUFxI2+vr5sur4BZ+SRDrd7
DsfYcLs3W7jdD3m7X+KIIv5LFEi7/+0pw0GufM/8LwrkjvOYzQKACFcUmD/W
GSkEA3JJAvKTJke73zmGSMDtXr6xHLsHI2bT7MWN5eXliYmJ3/UmoTcpKSma
r5JWu4d0dnYqlUqFQiGuUW9jY5OZmal1eJ19/Ptzc10izEDQOvr/888/s+kE
cBhr2bp1Kzve3d3d4JPy9Bdu9xyOseF2b7Zwux/ydr/yUxT5k1Ag7R6zeHx2
EIrisSg+/gHFaz+i8AlBgfljfWMjweC4BAXykyZHu5f+O+R2L98MJbu3Ojdq
zzQjIwMaPTw8xI15eXlq97K1tdV8lfqzexaVSrV//374mISHh4Pas8eJjY1V
OwyOYTfV1tZKvCNlZWVFkmFz+yFwRs2esM37IN69Yc/IqndfPImT8hgWbvcc
jrHhdm+2cLsf8nYf4oPim3kokHaPqRv/eSIKhygUyKp6SD2f/DMKzB9r3Y0E
w1sbUCA/aXK0+6KniQSu3O5lm6Fk99Jj97m5uUx7jx07JjTW19dv/Sdr167V
y+5BpU+fPq12ZEtLC5seD2lsbBTflJiYaCVZS58lICDASufs2rVL7e6tra1w
IjaBX6FQrFixgg3fh4SESJ+Xx4Bwu+dwjA23e7OF2/2Qt/tIFxT770GBtHtM
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
QF4csEC7//E1IgG3e/nGouw+JSUF2u3s7DTHzWtqaqAdbt2+fbvQmJub6+Dg
IIxuq9n96tWroTEwMLCnp0fczuYGhIeHs18PHDjA7g6nYC3g4Kzlr7/+wr17
6oGPKjysq6urcI1CpVL5+PhA46pVq7TeBdrZs2hvbz+/nbGEcLvnDG3S6TRL
EhVlyj7wmvnmA7f7weeTZIIBaffIHee/mYcCOb99eqrhIO1+3jco/vMTCuTf
DLLzGLtf+SnBgLwU9t0XKORo91mvEwkUX3K7l2ssx+7b2trYAP3GjRu1vhSp
qam2trZpaWlCi7W1NRwPts4GuNXsPi4uDhqjoqLUHqesrIzOL4qIYJPzq6ur
mcsLa+1bW1vZCHt5ebleb1ZlZSX0RGKTO6VS6enpCf8VN6anp8O5oqOjNY9n
0w9sbGwOHz6sV094WLjdc4Y23O45YrjdDz7h7gQD0u5TP0aB9ERkUb6kmYaD
tHvlByjeWYfCOhbFxjdQYOw+zopgQF4OQl7LkqPdS7+V3O7lG8ux++LiYmbZ
TU1NWl+Ktt6IW8Dri4qKwKY3bdqkaff5+flsVTvos9YF+yxwd1dXV7YW4NSp
U3AKsG/41dHRUd+Z+aGhoXDHxMREtdkC0mFzCdauXavW3t7ezob1of96dYNH
iPnYPfxJwF9al26pqdn/+uvc7jkDw+2eI4bb/eDjtoBgQNo9cuX76vdRJH+C
AnNVBGn3i5xRIN81pN1j9hoAMHa/4S2CIWMqCuRfuxzt/v/eJBJwu5dvLMfu
MzMzoVGhUBjwKv3444+adt/a2jp//nxxVbqVK1cWFxefPHlS7e5lZWVM8O16
Az84ODgYUKP+8OHDbKVAamqqjncRLkFUVVWp3ZSdnc0uMsAT0bcnPCzmY/en
T59uaGg4oFt++23rf/5D/u//uN1zBoDbPUcMt/vBB2lqSE9E6jly2T5yLPWn
/xgO0u4xpwaQde2Q8z0SZqHA2D1y4Tyy3AHyZZej3a9/m0jgzO1etrEcuwcj
ZtPsxY3l5eWJiYnf9SahNykpKZqvkla7h3R2diqVSoVCIS4+b2Njk5mZKR5e
B5FniwKEeHh4GLboXpiBoMuA+65du9jiArW5+izwD6leFwp4NGMmdq9S1dXW
lv/222+//lqgC5mZysmTud1zBobb/dBGpSLHj5OWFl0pKSFJSeStt/ruzu1+
EEDunI60e2RZvEgXFMizYxYFmLaq3gN7USCvCH3/GQqM3SMLNSB3YETOuJCj
3UtPw+B2L98MJbu3OjdqzzQjI4NptbgxLy9P7V62traar1J/ds+iUqn2798P
H5Pw8HBQe/Y4sbGx7NbKykrWAord1Bu2EB68m9WxV0tZWVmRZNh0egicUeKd
zc/PZ2q/ZMmSrq4utVuhw+xBamtrJR6ERzpmYvctLR8GB99+1123jRt3iy6M
HXvjfffRfau53XOk4XY/tDl2jHz/PVm6VFcCA+EbLN3CgN2d2/0gMDuIYEDa
PfLaQup0FMgaaxhTM+26++d+RYEcg/YORYGxe+RkD8wuCYDdUhRytPs17xEJ
nL/idi/XDCW7lx67z83NZT577NgxobG+vn7rP1m7dq1edg9Sf/r0abUjW1pa
wOvZiRobG8/8U9QuLi5OfFhiYmJ/4+YBAQFWOmfXrl1a31b2XCDLly/Xurqf
dUAo7M9jWMzE7puaJnl6kpEjyfPP68S4cWT0aG73nIHhdj+0qaggISEkIID+
VxdcXcmMGeTVV/vuzu1+EJDesmpAkHaPKUwHIMvibR2PAvPETWv3c71QILd9
/9YPBcbukaPn8z1QOC1GIUe7ly5EwO1evrEcuxf2oSsqKtL6UlRVVelu9/Bo
1tbWcPCpU6fUDu7p6XF3d4fjCwoK4NegoCDhZyElJSXQ6Ovrq3muzMzMJMmw
B4eEhYVpbmMHZ2drECAZGRla6+91dHSw9fs7d+7U+lLw6Bgzsfuamkn+/mT8
eHLihE7s30+/n/OqepwB4XY/tPn4Y/L44+S994i3t07Y2pJp07jdDypIv0ba
PdJSkTPzkcXbU2YYDtLuV3yFAjl6jty3HX1ByfCsfZdgQE41WeCGQo52L103
g9u9fGM5dg8JCQmx6q0jV1lZqXlraWmp7nYvVMLPyclROxhucnFxgZt2794N
v0ZGRsLP69atEx8Dsg+NIP56vl30qgL0H+4Lz0VrNTzQfzbtX+16gjgHDhxg
x+hbtJ9HLeZj9/A1bOJEXb/S19cTviMeRxe43Q9t4IV95RWiUJC4OJ0ICaGC
//rrfXfndj8IeMwnGJB2H2uNImAOCqQjY8qnI+0e+brZxKBAjoAXTESBsXvk
qZFF75F1HuRo99JX55y43cs2FmX3Bw8eZBvNgyAXFhY2NDSc6ZVxUOb09HR2
k+4z89nkdsj69euPHz/OGpuamqKioqx6q+Izd4aPD/zq7OwMZ2fHHDt2zMvL
CxpXrVql15sFOu/n5wd3DAwM1JwzANmzZw/r0tatW7vPDTxN4bDt27fDMfBQ
ep2dRzPc7jlDG273Q5tPPyUxMWTnTvpPgS6Ul9M3glfVG0xmJhEMSLtHauZC
BQrk9uWYRQFIu0dWS0Be1kAuiEAXcjQ82VMIBuSGesg6D3K0+7SPiATc7uUb
i7L7M71T4kG0hXXrrq6ubI46i7+/f2lpqea9tNr9iRMnxDviKRQKNprPLhFs
27aNHdbR0cGU3N7efvHixStWrGAd8PT01GroEmEr+qGTwsUEtYD197dCf9Gi
RcJhbFV+TEyMXmfn0Qy3e47sACMrKSG//07+97+BWbCAuLiQJUtM2WFu97rQ
00NaW+miG72YNo0kJJA9e3Q9C98Rb/BBzrJG2n2YJwrk2D3y4gAGpN0jz65Y
iGKpHYpNr6LA2P3PkwkGZM+RK0HkaPc/fEwk4HYv31ia3UOOHj2alpYmmDjz
7pCQkOzs7O7ubq132bx5MxyWlJSk1t7V1aVUKn19fYWHcnBwCAsLU5v5DzIO
Us8q2LMsW7asublZ3zcrKysLziWuCiiOSqUSKvZL2/3y5cuhZcOGDfp2gEct
3O45sqOmhhrZhAnkpZcG5pFH6MzthQtN2WFu97rQ3U327aNV79zc9GDMGDrf
ntu9Ods9cu9ypN0v/xoFcmO4+C9RYOoVIO1+mS2KnJdQIK/JIIstYOx+y8sE
Q5QDilBvFHK0e+nqE05fc7uXayzQ7lnAhcGvDx06VFdXJ561blhaW1urq6ul
H6qzs7OmNx0dHQafiK+UN6twu+fIjs2byfvvUw3U5bs9HPnxx2TRIlN2mNu9
LlRXE6WSLorXy93GjiXLl3O7N2u7n5pBMCDtPs4KhVUcCqRtmbCqHnIFd94L
KJCSK11pbUAwdv/dFwQDckc85LUsOdp90idEAm738o3F2j0PDz7c7jmyIzyc
ODiQtDSSnT0wfn7E3p4sXmzKDnO714XCQvpmffEFfX9157nnuN2bu90nf0Iw
IO0eOYzrGoECufw8YZbhIO0eOTdeer70gCD/ZpCl4zF2jzz195+hQM64kJ13
gN1LVxJw5HYv21ig3atUqj179iQmJs6bN8/b2zs0NDQpKamgoKC/afmQ5ubm
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
CvHx8aSbnu/U4eHhs2bNgn/5jUREREC1VatWaf6rzMzMhOOU3sNO+kiWLl0K
Jfv27eM/ZNeuXVC4bt26x5Xn8MCBA5s2bSopKeEqkGsmgpNjImF2z2DIiEeP
0M2b6MqVOnDxIlq3Dnl7o0WLNAXejL/+it56C02YgG9ozaRJuIWffxbSrx8G
7p01qwrwfYKTUy28/z7q0QOvqvfbb9X8+CMerg//iqK6kt64cdW8+SZ67jlm
98zuxWF2zzAd5Gj3I/ciCSYzu5dtTMfuk5OTVXur+SmtDL8EvD4pKQl8GYRX
VWATEhLMKyfIg4mLTtjncujQIfDugoICuE1GCKg7Bv5TQ7WoqCjpavx4enrC
Q4KCggRjCTQ/kvnz53Pd9FxIh/7ChQtFG8zMzLS1tYUKJ0+e1PxQjSbM7hly
QalEpaX6oKjI8JuwqyM/H6WloaSkOnD4MF6DbuJENH68poA79+qFPxMGDsTv
Sq0ZPBj171/l8nw6d0Zvv41dfvHiKry8qvH2lmLAADyQvnt31Lt3NZ06oWef
xf+q8sorIsABcLRrh1q2hMJXdPWhqi7M7uUIs3uG6SBHu/9sP5KA2b18Yzp2
T7qt7ezstDhLe/fuVbX7kpISb29vboi7k5PTpk2bkpOT7927J9GUao+5arjr
BpcvX9b8IK9fv07mEYSFhWlSX/VI1q5dS1Yk4FdzcXEhw/UFD4+Jifnjjz+4
OQuqS+ubQpjdM+oDhQL3MpeU6JKrV1FoKO6Grj8CAtCSJejTT9G33zZEvvkG
jRqFfRkMVx2qNv3BB6hjR6yxXbpoCkjxM8/gz4Q2bVDbttrz9NO4hdathTRv
joUankXzQ+KABuHhTz6JW+CAkqZN8b9aUPnApu+++66uPlTVhdm9HGF2zzAd
5Gj3n/6FJGB2L9+Yjt2D85Jh9vzC8+fPBwUFbazMhsqEhoaqniVRu39cOQ89
PDzczs6OP5Pd0tIyOjpaXQd6rXZ/+vRpMiNAMFZfk3DjEyIiImqtrHokhw4d
IlcVoB1ScuTIEdKgo6Oj4OFkHwGSkJAQ1Z31TCHM7k2WsrJ67P6+dw/dvo1y
cnQG/IUkJyM3t+qx3PXBzJloyhTUogXq0AHP725ovPRSlXQ3a6YWcNUmTWrQ
uDF+CCgweLGGgIDDSaBPo0Y6aEQPMTMz69evn64+VNWF2b0cYXbPMB3kaPfD
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
F1e1LL8EZPV+bgF//ePnh9fQ++676o0AgG+/RV26MLs3WrunHKS9xIGK9G5U
rP9NeyhnvlOeN0q/XuhChdVqKmj+WCntPngCFZTvNDnafcerSAJm9/KNydo9
Cwt9Go7d69b+RNm5k62ZbzDKyvAc7eJi3XDjBt76fPJkZGFhuowfj826Qwfd
z0/v1Am1aIFXn5PG3ByNHo26d8f1e/bEpq/K229X8847VfTujXv8CXBbb7z+
Onr2WWRmhv/lgB8bN2Z2b7R2T7muHeXybpSLpP0eoD3TV1AROIUKytNOudwB
5cgBmj9WSrvf/BMVlO802XkH2H2Ha0iCCbOY3cs1Jmj3CoXi3LlzQUFBixcv
dnZ29vT0DA4OTkxMVDcs/3HlyPlVq1bFx8er3pWRkREeHu7r6wtNLV26FG6L
ztzncuDAAT8/P4lp7Pfu3duwYUP9rWKXl5cXFRW1Zs2asLCwpKQk1fH/cGwx
MTHr1q2DUwSnBY6nno7ECNJw7F4PsB3xdEVpKV4qQXMKCvDW6mQDdJ0QFYXd
9uuvseDLhbFj0Zdfoi++qGLUKBGggihffSXCJ5/gCe8tW6IXXhDn+efV3iXx
EACabdoU93FL8O23WO0//BCr/TPPoBdfRO3bC/nf/8SByhwvvaQ/nnsOPfkk
/qwDnedo1Aj+faJr1666+lBVF2b32obK7imnYNNsfQ4k9aXi+3DtmRJIxWwP
KkbvpIJyyETih1TQ/LFS2v2YHVRQvtPkaPf/y0YSMLuXb/T5P+bRW4/1APe6
RF8veDpIvblYFi5cmJubq/qQsrIyuEt1VT2lUkn2rVNNZGSk6BD9kydPkgr8
VfUE8ff3Fyx2p8McP36cLNnHxd3dvaioiKsALu/g4MCv4OLiUlBQUB8HYwRh
ds+oKxUV6MoVFBtbB/bswcO8wa3U6V5dgaZatEADBuBJ03KhTx/0yivVL6FD
B/Tyy5iOHTHgyHAvoXPnKl59FfPaa9V06YJ5/XUM3AWuChpuZiakeXP8b5Mm
+N46Abb7xBNVzqvarCrwEKgPleFfzYH6dX2ITiDPqxozM7MBAwbo6kNVXQxr
919HlRkKSt+htPs/FlNBubjcb+upoFkxYN8IKiZvoIKy755y3r0BV9WjvLCw
YwwVlPMp5Gj3L91AEvzM7F62MSm7Ly0tJfu7QUJCQs6cOZOXl5eZmRkTE2Nt
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
/okn9F7ysmV1pr7yysxSlSu77geXKl/+Ul1+eUqVK3eprPO+7eeDmzPHTZUq
lVLWQe/2Q+KLF79UxYqlVNGi+oAB+em2zNHyTqpw4XTK7V3y5tX79HPndi3/
jg3Inl+kcN496Z6iskCR7gEA9k3cULdFC9N0byox0eeKj1dbt+rhyjt0UJ06
hb46dtQjpVvXEcsM1bSpat1atWmjf0q1aqWrZUvVokVKNW+uhwsw1aRJSsmj
uPrqlLKujX7VVZe+NGjQQA8IL2WOEKhbV1edOikjvZux380o8TVq6KpeXX8J
U6WKLreXZjM3pVWVK6dflSqlUzKPy6IqVtRfO0RFuQ5H7/dp+OZE++yGdE+6
p6gsUKR7AIB9EzfUbdHCOt3794VATIy+MNl77+kh0ENe0owZM5xeZC2wNXOm
eucdPdCfvd5661LJDKbefPNSyaMwZV/UtGmX6o03Uur111Nq6tRLNWXKpZo8
OaUmTVITJ+qfbktuclivvZZOpb7Lvffq72TatdOjE9ird28/67rr9Bcmgfpm
xvqCxZtq2jTli5orr9RfsFSurI/BKFhQf+Fgvq+IitIXrLeughdAefLkadKk
SbA7N9I9RVFBLdI9AIB0T1HhW++/r0+pGDZMff11YGrKlABcZc9ejz7qbQ0Z
oq8Y+PTTasAA/T3DzTfrA1qqV9cnR1xxhT5KoUIFfTJCgQL6Env2Suughago
14qMvFTWhfly5JCfuRs2bBjszo10T1GU5xrprEj3AADSPUWFb0m6lzA+aZI6
ejQwtXev2rZNbd4cgtqyRa9aatMm9eefas0atWqV+uUX/UaOjk6p66/XF3R4
9ln1wgvqpZf0YBfyy6hReqv4uef0txzPPKO/JXj8cf3Fwn/+owYNUg8+qPr3
1wc59Oun7r5bjyxxxx3q9ttVjx76KpA336xPuChWLKJq1arB7txI9xSV5et/
QxyVw7WT7gEApHuKCt+SdC9bdDNmhL4lGVN9+qhx4/Sj/vpr9cMPauFC/cv8
+WrePPXJJ7rf+PBDfXbJ22/rEzHeeEMfivDaa2rCBPXii/qOY8akXIbSfA/w
5JPqscf0EA1lyqiKFSsGu3Mj3VMU5bnm9HRUpHsAAOmeosK3slu679dPB3bJ
9UePqmPH9JgV8suRI+rwYV0HDuj6+2+1f7/at0/X3r1qzx61e7fatUvXjh1q
+3Zd27bp0Sy3bNF1++16xELSPemeokJe79/tqEj3AADSPUWFb2W3dH/PPXqn
/C+/BHKZ992nOwrSPemeokJeM/o7KtI9AIB0T1HhW6R759W/vx67j3RPuqeo
kNdb9zoq0j0AgHRPUeFbYZTuExL0gfRHjjiqu+7SVzMMVLq/eFEfun/nnRyZ
T7qnAlwf9nJUIW9/qGrmfY6KdA8AIN1TVPhWGKX7kyf14PZPPqmeeML/atRI
TZwYsHR/6JBq21ZfZS8qinRPuqeolPriJv8rtC0n3QMASPcU5bBiYvTQbWbc
tgyu117T17ufPj30T4LnSkzU49099JC+Pp2TatBAP+RApfvdu1WtWipfPhUZ
Sbon3VOBrEWdHVXI2x+qWtraUZHuAQCke4pyWEOG6FdaoUIhqLx5Vbt2YZDu
z59X33yj97xPnarefNP/kgc7eXLA0v2yZeqGG1S9ehLtSfeke4oKfTk5bECK
dA8AIN1TlMPq3181b66aNdOHeWdw1aypbrwxDNJ9bKz66it19dX6wvQS8/2u
667T3w84T/cJCfq6eJMmqU6d1JVXqsqVSfeke4oKfX1+s6Mi3QMASPcU5bBu
vVXn6z//VMePZ3RNm6aGDQuD8+4l3X/9tWrfXl+kXt6Sfle/foEZM1/a89xz
qmhRVb++TvdcEY90T1GZob7r5KhI9wCATJjub79djR2rD5pdudJRSeSpUoV0
TwW9brlFzZqlT71PTMzokvX+NxxG1TPpvkMHdeaMo+V4c0W8uDi9unPn3NfJ
k+rgQbVwoerTR4f6Ro1U48b6EAjSPemeokJey1o5KtI9ACCzpftz507cd58+
E7ZFC9WqlaOShVSqRLqngl5Wus/4VYfLmPkZlu4TE9XRo2rbNrVli/tasUJ9
8IEqXFhVqKAHJOzYUZ/L37Ah6Z50T1Ghr3X1HBXpHgCQ2dJ9XNyJTz/VBxs7
/5Ts10+fTku6p4JdWSzdnzqlVq1SL72kFxuomjpV/ec/qmVLdfq0o7b16qUj
+eTJaZ6Y/8UXeoYRI/TT8txzuiex6umndUkzbrtNRUSoMmXUtdfq3feVKqmy
ZeVnpWB3bqT7cKwJjzuqkLefCq9a0dhRke4BAJkt3SclnYiNVevWqdWrndZb
b3FkPpURlcXS/b59auZMVaqUPmQ9UNWokT76XX5xmO67d1c9eug9+I884r4e
eEB3ZZUrq+rV9du/YkW9jz55SHxVsqQqXVoVL64KFtTpvlw5vQc/Rw49f0RE
RNWqVYPdtZHuKYryXLsqOirSPQAg86X78/HxIw8eHHnggNOaN68fo+pR/lVC
gh754auv9L7gdKt1a/XOO1kn3a9apcaNU127BnKTddgwdddd+soCDtO9PM/P
PaeeeSbNFQ0ZorsyifCS5UuVUiVKXLp6YL58qkCBlKvbC8n4UVE65oscOXLU
rFkz2F1btk33g6YoJ+X05TfSUQ143VE9O9ZRvfaI/zXpP45q8ERH9Z9JjmrK
IEfl8LE/M87/euQ1R/VzC0dFugcAZL50HzA//bSEdE/5V/Hxavx4NWCAvtpd
ulWzpt7ZnWXS/YIF6vHH9ciWy5cHrJYuVa+8otq0cZrujxxRH32kXn01zXr+
ed2V5cmjK39+HeftJMubOO8iV65c9erVC3aPlG3T/cOTlZNymO4drj20taiz
/+UkokqF9oG//ISjCmHLnx7vqJ4b7ahI9wAA0j1FuVRCgtq6VV9NftQo9fLL
6VejRvo0kFCl+/vuU/feq37+OWAlMbx/f31u+6lTAavDh9XcufqKeA5H1YuL
U4cOqb179bO9a5eb2r5dffedHhJfSn758Uf1ww+65M958/R4em++qV5/XX8f
Ig+wQwe9Hz9HDpUzZ0SVKlWC3SNl23Qf8qOdqexWa+s7qpC33+8i3QMASPcU
5VKS7teuVbVq6X3B77yTfjVtqt5+OzTpfvZs1bu3PopesnOgavhwfbU4icAB
bKeHMfPj432+6r0s7fhxFRPjvg4fVgcOqL//1le+O3IkZaJM2bxZn3SwdKlO
/UuWqG+/VbfeqooV0wE/d27GzCfdU/+qbVUcVcjb76Tevsf/Cm3LSfcAANI9
RbmUSfdXX63HZpSQmG516aLeey806X7rVjV6tN4n7s0ZBF6WPJzrrsugdH/x
ovr9dz12wfz5PtSMGXp4vXbt9ANPXTJdqm1bXdY88kvLlqpZs5Qh/szPSpXU
0KH6wdaokfXT/TubEkJVIQ9rFBUu5TCeO1w76R4AsgDSPZVNSoLkiRNeVUyM
io5WTZqo/fu9WnIIx8w/dkzHcMmnt98esJIs3KlT4NP9ggX6vPt9+/71VB89
qj7/XE2ZoiZN8qGGDNHXs4uIUDlzOqpChfSl+nr1UldeSbon3VNU6It0DwBw
iHRPZYeSl8Hq1XoHrgTh669Pp2SeVq30ldAlinqz8BCm+/h43cg//lDr1wes
pk3TwwkGNt3HxanfftNXoOvUSV9l3qqOHVX9+vorBYnY3tc11+ih7yWbywKd
VP78+vyLUqX04Huke9I9RYW8SPcAAIdI95RPJXEyNlYfXx1edfiw+uYbHQlr
1lS1a6dflSrp8jLdd+um3n1X7djh8/njUufP60HnTp70qmJi9Jhy3pQ8Xr9r
9mz1n//oMfN379ZfWfhRckeXwe62bdOXFxR5816qqKiUi9O1bKl363tfV16p
h8SXeF6smKOSBlhI96R7igp5ke4BAA6R7imfSrLbTz/p4cfDq95/Xx/Off31
asUK9eef6dTateqzz1TDht4emX/ttXpPd3S0PjzA1/rtN32Jtzff1NfUc1tv
vZVSM2aoESPUPfek1L336tHyTd1//6VKfR79Aw/8qx58UD30kK4BA/5VAwfq
GjRIH4og8blcOVWvnj9Vp46qVk3CsmuVLXvpmnT2EpKyfSqJ9skXqXda1tXx
IiKy/pj5pHuKyvxFugcAOES6p7yvuDgdSM1lxcKrXn1VJ9/u3fXY6elevu34
cfXrr+qqq/Qe53Pn0q8bblDjx6tPP9W7p32tzz5TL72kRo7UNWrUpTJTrImy
3fXcc6pfP30ou6lOnVTnzpfqmmtSyn7cu6nrrksp63dzAoI0215duqRUy5aq
cmUdoi+7zJ8qUCBlj3wYyZEjR/Xq1YPdI5HuKYryXKR7AIBD9k3cULclwEj3
Aa+tW9UTT+hD1q29xuFSd9+t43C3bur0aZWYmE7Fx+svMYoU0ceoL16cfg0a
pA8Xb9pUtWjhc7Vrpwfnb9BAV/36bnaF162r94aXKaN3f5curYoWvVTSwtRl
nVTu9qaCBfXJ5qkrX75LJbk+d+6UHesO94mHi8jIyObNmwe7RyLdUxTluUj3
AACH7Ju4oW5LgGXPdC/hNCEhWLVhgz6uu3hxNXhwmNUDD6gbb9S7rbdt07vv
Pde+ferHH3UQfuUVPVxeutW/v87mlSqpKlX+Vebkfc9Vq5b+WaGCrvLl1eWX
u1a5cvqYdknc0p4CBVzPW3dbkZHuK08ePVB86mPjwy6MB1xUVFSrVq2C3SOR
7imK8lykewCAQ/ZN3FC3JcCyYbq/eFEfWB4TE6z66Sf11FP6vOyzZ8OsJLN/
+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
f/APM6ReRETEyZMng9eGhIQE+5+JiYlz584tUaKEuUZe8NYLAACAoCLdA0CG
GTlypLkWnttbzWj2NWvWDNLat2/fXrRo0TJlyqS+adasWbLqvHnzhnZAAAAA
APiNdA8AGWbevHkmRLsdyO6RRx6RW/v06ROktcfGxubMmVNWkfoI/CVLlsj0
UqVKuezZBwAAQLgg3QNAhpHsXLduXelvW7ZsaR/F7sSJEy+//HLx4sXlpsmT
JwevAWbtTZs2PXjwoDVx3759DRo0kOkDBgwI3qoBAAAQVKR7AMhIv/76a6lS
paTLzZ8/f8eOHXv16tWqVSv53fTDlStX3rRpU1DXnidPHrP2Zs2a3X333dde
e21kZKRMqVev3s6dO4O3agAAAAQV6R4AMtihQ4duvfXWIkWKWN2v/N6hQ4e5
c+devHgx2GtftmzZDTfcYK53b1SsWHHgwIHnzp0L9qoBAAAQPKR7AAiVffv2
rVy50n6QfIaJjY3dsmWLrP348eMZv3YAAAAEHOkeAAAAAIBwR7oHAAAAACDc
ke4BAAAAAAh3pHsAAAAAAMId6R4AAAAAgHBHugcAAAAAINyR7gEAAAAACHek
ewAAAAAAwh3pHgAAAACAcEe6BwAAAAAg3JHuAQAAAAAId6R7AAAAAADCHeke
AAAAAIBwR7oHAAAAACDcke4BAAAAAAh3pHsAAAAAAMId6R4AAAAAgHBHugcA
AAAAINyR7gEAAAAACHekewAAAAAAwh3pHgAAAACAcEe6BwAAAAAg3JHuAQAA
AAAId6R7AAAAAADCHekeAODBjh075syZc+rUqVA3JDOSJ2fWrFnz58/37748
saEVFxf31Vdf/f7776FuCAAAgUG6B4AsL84LFy9eTH3H7du358iRQz4grrzy
yoxvdub3xhtvyJNTq1YtX+/IE5sZ9O3b12z/fP7556FuCwAAAUC6B4CsbceO
HcoLTz/9dOr7fvHFF+bWXLlynTlzJuMb75+EhISFCxfKz2CvyO907+UTe/To
0ZUrV+7Zs8dZM+Few4YNzX/h2Wef9TDbunXr5L8QwJfTn3/+uXv37kAtDQAA
C+keALK2Xbt2Ff43q9u3T/zf//6X+r4XLly49dZbq1Sp8uKLL2Z8y/32wQcf
VKtWze3RCIHld7r38omdOnWqLP/xxx930Eakad68eXXr1m3btu2OHTs8zFai
RAn5LwTwHIpXXnmlRYsWgVoaAAAW0j0AZDcFCxaUPv///u//Qt2QoIiLi6tc
ufI777yTAevyO917aeTIkaT70EpISDDnUAQw3Z85c6ZYsWL+DdcAAIAHpHsA
yG4Cnu4lraxfv97+5x9//HH+/Pm05j958uTKlSsPHjwYqAbYTZkypVy5cvHx
8WnNcPHixZ07dy5fvnzPnj2JiYneLFNm27dvn9xl48aN9kMCXNJ9bGzsqlWr
jhw54vAhWAYNGuRHuk+rtRY/ngFx9uxZ+S/LPy6ADzAY5IX3+++/B+rVJQ/W
bCN5k+7lyZT1ylO0fft2z0/sqFGj6tSpkwEnjwAAshXSPQBkN57TfenSpS9L
5c4773SZ7c8//yxUqFDfvn2HDh0aFRUlC6xSpcrRo0eHDRuWL18++bNMmTIb
NmxwudfcuXNr1KgRERFhPndKlCgxbty4AB5Cf+bMmVKlSo0ZM8btrStWrOjT
p0/RokWtD74CBQq88MILqb8KkFgtj3rBggXy+/vvv1+9enXrLuXLl7dmM+m+
fv368kg7dOiQJ08eM0+lSpW++uorl2V6+cSKunXrVqxYsWTJkmaB8tPlXkuW
LPGjtT49AxL8Cxcu3KZNG/n9wIEDd999d+7cuc1dcuTI8eabb5rZWrZsKat2
+4THxsbK2uXWxYsXu/13eLBw4UK5Y7FixVLfVKRIEbnpp59+sqbUrl1bppw9
ezY6Orpz58558+Y17ZTn4bfffrPfd+LEian/BWLt2rUua5k+fXrVqlXLlStn
ncki7xr7Xa699lr7/OfOnXvyySftT2z+/PnbtWuX+mVgxMTEyDP/7rvv+vrM
AADgAekeALIbn9K9+YC4+eabXWb7/fffZbrJ9RLzzWySc83p/ObPHj162O9y
1113memSm2655ZZmzZqZY56vu+66QD20V199VULooUOHUt9kjnK30nfr1q2L
Fy9u/nz44YddZu7du7dMl6QsCzTzREREVKhQQZKj/Yxpk+6t56FMmTLyDOTK
lcvMP2vWLPsyvXxihYRE+zzppnsvW+vTM7B9+3aV/I2NRPuaNWua2eQfLY9C
flm0aJGZbcqUKfJnyZIlJcu7LOGDDz6QmypWrOjHHuqvv/5a7iv/ytQ35cyZ
U2764YcfrCmlSpWSKf/973/liZJXVJ06da644grT4CJFipw8edKa0yXdmzeC
WL16tctapk6dauaxvrHxnO5vvfVWM5s84fLvuOaaa8wTJcaPH+/2MT722GPy
RvD1mQEAwAPSPQBkNz4dmS8ZxEO6F5Jr4uLi3n77bfOnzC9pbujQofL75Zdf
bs0/bdo0mSLRbMaMGdZBy9HR0earAEmmAXloLVu2lGDl9qbFixfLukaNGmUd
WH7+/Pn77rtPJQ9c7zKumsnLDRo0kJ81atSQNv/9999JyaPh7dy505rNSvfy
SK091Lt27apdu7ZK3m8u86fV1LSeWLubbrpJeXFkvpet9ekZMOk+KirKHGsx
cODAn376yRxlIcu0Trs4d+6cGXRu5syZLq1q166dTH/++ec9N94tP9K9aN68
+ebNm81EeXmbiVOmTElrLRL800r3llWrVpl5PByZv3//fjPPBx98YE2Ud8FH
H33UtWvXtK6JsHz5crlL6sMGAADwG+keALKbAKb7HDlymB3le/fulT/Lli1r
cp+EL7PT2cwcGxubP39+mfLCCy+4LOfll1+W6ZIEnT6qpCRpibRHEndaM6TO
2mfPnjW7yGfPnm2fbvKyaNy48bFjx9JaoEn3pUuXPnr0qH36smXLzN09jJwW
8HSfbmuTfHkGTLo3PH/3Mnr0aJmnbt269olbtmwx8fzAgQOeG++WH+n+xhtv
dHl0EvaVu8MSLIFK9+vXrzfzfPrpp+k8MJvExER5v8iz5/1dAADwjHQPANlN
ANO9ld8lJMqf9erVM39KXDJ7hM2fK1asMH+mzp5mTglo/j+efyxevFgWJbE0
3Tk3b948b968cePGPfjggybbjh071j6DycvyRHm+VpqHMfPLlSsnN02YMCGt
+wY83afbWrt0nwEr3XtIx4Y5hVzZDtcXTz31lEp1aob3/Ej3H3/8scuc5rCE
7t27p7WWQKV70axZM5V8aIo85Llz5547d87DzBaZuWfPnt7MCQCAN0j3AJDd
ZHy6nzFjhvmgyZOK9RnkfGy9Dz/8UOKVh9Hyd+7cOWDAgDJlyqhURo4caZ/T
5OV77rnH8xo9pHsT9wYPHpzWfQOe7tNtbZIvz4CV7nfv3p3uYs1juf76682f
cXFxJUuWlCnff/99uvd1KyDp3rSqa9euaa0lgOleFtWnTx8zjoRKHlKvW7du
s2fP9vyqlpdHy5YtPcwAAIBPSPcAkN1kfLo3J92LB9IwcOBA54/rtdde83AM
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
AAAAAAAAAAAAAAAAnqxcufLw4cOhboVXYmJili9fnpiYGOqGAAAAAACQWWzf
vr1KlSpKqVy5cg0ePNjl1osXL+7/x+nTp0PSQruhQ4fmyZNHWluhQoU///wz
1M0BAAAAAMBnMTExf/zxx/HjxwO4TEn06h85c+bct2+f/dZ58+ZZt44ePTqA
6/XDwYMHTbQ3HnroodC2BwAAAAAA7504ceKZZ54pUaKEFWyvuOKKfv367d+/
3/nCBw0apGxWr15tvzVI6X7YsGFF/zFnzhwz8eLFi/K4zMRSpUqlvteBAwdy
5cpltefmm28OVHsAAAAAAAiqv//+u1y5csqdQoUKzZgxw+HyN2zYUKRIEbPA
7t27u9wapHRv/0qhd+/eZuJvv/1mTcydO7fbOz7wwANmhssuuyw6OjpQ7QEA
AAAAIKjatGnjNtobknadr+LChQuLFy/esmVL6psyIN2XLFnSDJEny0833Ysd
O3Z8//33sbGxgWoMAAAAAABB9ffff1uBNzIycvr06b///vv8+fPvv//+nDlz
Nm/eXIK5mfPo0aNrk23bti0p+WD+b7/99pVXXvnmm2+OHTvmstjt27evdWf3
7t0uc6aV7q3ViT179rjc69y5c8uXL5fWvvHGGz///POpU6dcZnA5HWDlypUy
sXXr1qnT/ZkzZ9w2VZw/f95lsRs2bDA3mQEApRmLFy9+9dVXP/nkE3kmfXzu
AQAAAAAIjAULFliBt2HDhvab1q9ff/DgQevP119/3cxWqlSpiRMnFihQwLpj
vnz5rHPbjfbt27s9EqB27douDXCb7iUpm2H2DYnP9ru88847xYoVsy82f/78
06ZNs8/jku5lyadOnbKfU2+l+59++sltU4XLgxIlS5Y0N7333ntjx461D8FX
sGDBL7/80ud/AAAAAAAAjq1bt86eZ++///6NGze6ndNK92lZsGCBNXNa6b5W
rVoui02d7o8dO1a3bl1r4rPPPmuf/5577kmrAcOHD7dms9K9GVKgefPm8+fP
l18kjxcvXlx5l+4//vhjl9Za6d7+5YalaNGiZ86c8fdfAQAAAACAn+Lj4ytX
ruySUjt16vTFF1+Yc9UtLum+YMGCzZo1y58/vzWlcePG1sy9e/euahMREeFl
upd03LRpU2uKy1n/s2fPtm7KmTNnx44du3TpYu2Rj4yM3L59u5nTSvddu3aV
nzKPGS6vQ4cO0nJ7ul+xYoW9qfajAjykeyNPnjz58uWzT/nggw8C8n8BAAAA
AMAnixcvtod0S+vWrTdt2mTNZk/3EqtjYmJk4saNG/PmzWtNN6fkpxYVFeVN
uh82bFinTp2sP3v06JGQkGCf2f5FxHfffWcmrl692po4fvx4M9FK92PGjLE/
qHHjxplf0hpVT5bgZbofPHjwuXPnTp8+ffvtt1sTR44c6e3zDgAAAABAQK1d
u9Yeqy2RkZHvvvuumcee7u2XyevZs6c1fdGiRW6X72W6z5kzp/V7q1atrAH9
jJiYGOvW/Pnzv2Rj7b7v27evmdlK95MmTbIf5x8dHR2QdF+2bFlrov2Igoce
eijdZxsAAAAAgOBZtWqVpGMriRsFCxY0u+nTSvdPPfWUNX3mzJlul+xlureT
SO4yZL2HE+QtnTp1MjNb6X7s2LEjRowwv9euXXvXrl0BT/crVqyw7hKQCwgC
AAAAAODQsWPHxowZYx9e/vvvv09KO90PHDjQmv7555+7XaYf6V488cQT9jl/
/vnndNN9jx49zMxWuv/vf/+7du1a8/tzzz23efNm0j0AAAAAIOvZuXOn5Giz
g95iBqMzPvnkk6S0032jRo2s6ZKd3a7C+3RfqlSpyy+/3PweERGxePFia84z
Z87kyJHD3FSgQIG9e/cmpGKNBGil+xEjRsifnTp1qlev3rp16zZt2kS6BwAA
AABkMSdPnqxTp47E0uLFi48bNy46OnrLli2zZs2yH5+/Y8eOpH+n+5tvvvnw
4cOSpl999VVrYqFCheLj492uxct0L5F548aNS5cutVJ8hQoVTpw4Yc3coEED
a+Zu3br9/fffZnpsbOyHH364a9cua06XdG8h3QMAAAAAsp4bb7xRedS8eXMz
p8sV8SIiIlwuBvfSSy+ltRYv0/2oUaPMxMGDB1sTe/fubc0cHR1tH3lP1KlT
R1pYqFAh+f2OO+6w5iTdAwAAAACyj6+++ir19e4tpUqV2rNnj5nTJd27aNSo
kcsQ93ZepvvRo0ebiWfOnLG3au7cudb8L7/8skvAt0RERFiX8CPdAwAAAACy
ldjY2FGjRtWuXduemgsWLPjEE08cP37cms2e7m+77bZixYqZ3/PkydO/f39Z
iIdVeEj38+fPtxY7btw4a/rixYslrZvpsq5Tp05ZN61Zs6Zjx44Sz607yu9d
u3ZdunSpNY+193/MmDH21W3fvt1Mz5cvn9umek73ZcqUMTdVrFjRmrh69Wrr
LoMGDfLwPAAAAAAAEGyS0FetWrVkyZL9+/envtWe7t9+++34+Pi1a9f+8ccf
nnN98MTFxf31118///zzli1b0jrfHwAAAAAA2KU1Zj4AAAAAAAgXpHsAAAAA
AMId6R4AAAAAgHD3559/Tv3Hzp07Q90cAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AMjuFAAAAAAAAAAAAAAAyARCfQQBAAAAAADwB+keAAAAAIBwR7oHAAAAACDc
ke4BAAAAAAh3pHsAAAAAAMId6R4AAAAAgHBHugcAAAAAINyR7gEAAAAACHek
ewAAAAAAwh3pHgAAAACAcEe6BwAAAAAg3JHuAQAAAAAId6R7ZLD58+fPmjVr
7969oW4IAAAAkOns2LFjzpw5p06dyrYNCDu7du2SgPPVV1+FuiGk+ywrzibU
bfmXQoUKyYtNMn6oGwIAPkhMTJTuND4+PvVNFy9elJsSEhIyvlVpkXa6ba00
MhN+LgAIKukK1qxZs2DBgnXr1mWqnsoh05tlpUdkbN++PUeOHLK1fOWVV2bP
BgRKnEeBXderr74qz9hVV10V2MX6gXSfJf3999/2/+xll13WpEmTvn37fv31
16FuGukeQFj66aefpO/KnTv32bNnXW6688475ab77rsvwxojm+grV670sE17
0003SZOkv71w4YJ9+iOPPGI+Fw4cOBD8ZgIIsT/++KNVq1ZRUVHWNmH58uVn
zJgR6nYFgOmTRa9evULdlgD74osvzEPLlSvXmTNnnC/w6NGj8pGxZ8+eUDUg
VKpWrarS9vPPPwdwXaR7BJWV7mXTrkyZMhEREdZ/+e67746JiQlh20j3AMKR
tSWZ+khFk+7vuuuuDGtMiRIl3LbEYtK9+PLLL62JiYmJl19+OekeyCZee+21
PHnymLe8dBr16tWTsGb+fPrpp0PdOqcGDRpkHkvBggVjY2ND3ZxAunDhwq23
3lqlSpUXX3wxIAucOnWqPFGPP/54qBoQKg0bNiz8DysKWVPkYz2A6yLdI6is
dP/nn3/Kn2fOnFm5cuVtt91mJrZv3z6EbSPdAwhHmSfdJyQkmGMmvUn3ffr0
sSb+8ssv1ic+6R7I2hYtWmTe7LVq1VqzZo2ZeO7cueeeey5fvnzR0dGhbZ5D
Fy9eLFWqVERERO3ateUxfvbZZ6FuUaY2cuRIn9J9llSwYEF5Ev7v//4vSMsn
3SOoXNK95ZVXXjHTP//8c7d3PHny5MqVKw8ePOjlinbu3Ll+/XqXIz9dxMXF
rV69Wppk/ixSpIg36f7s2bOyZGnMkSNHPKxdlpzuF7bSAHkeNmzY4NMpNuk2
QD5ZpAHLly/fs2dPYmKih0WdOXNGFmX/848//jh//rz3jQEQcn6ne+/71ePH
j69bt066Nc9HQkqnlFZLLCbdFy1a1H5wvmzamWO60kr33ndrhswmDXY7FgGA
EEpISKhfv7680+vVqyddkMut6R7DKW//ffv2SVewceNG6RbcziPd1KpVq2S2
wLTYRjaQZMmHDx/2MM+PP/4oj65hw4Yvv/yy/HLHHXd4mPncuXObNm36/fff
0x0jTh649NXSY2/fvt2bPtDLDVFDZlu7du3WrVu9WbI3vO+xzXEOwUj3vr4M
5J8r/wjPH4je/7984lO696adScmBS14AJl9MnDjRc7r3NWT5jXSfJaWV7uW9
L/28TG/QoIHLXebOnVujRg3rGP4SJUqMGzfOpUufNWvWZZddNnz4cNlWfOqp
p6pUqWJmzpUr12OPPZY64x86dKh79+7W2V5XXHHFnDlzSpcunTrdS79UuHDh
Nm3ayO+yzXn33Xfnzp3b3CtHjhxvvvmmfWZ5s0s3ZTZQzdqbNWsm75fUz8PR
o0cffPBBa1Ey52U2vXv39q8BK1as6NOnj2w2W++dAgUKvPDCC/ZNXHnmpYV9
+/YdOnSoeQbk6ZL2DBs2LF++fPJnmTJlNmzY4P7/ByDz8SPde9OvitOnT0+a
NKlRo0bWnPKLdGv2bwXF9OnTq1atWq5cOesIQ9lWsfdp1157rTWzSffdunVT
toPzK1asWKFCBdn2SJ3uvenWRLVq1WRFEg3GjBkjizJzShcnm9apEwSAUPnk
k0/M23PevHnezC+bVfLWXrBggfz+/vvvV69e3eoKypcv7zLzDz/8UL9+fXME
kShevLhs27jss1i4cKEssFixYqnXVaRIEbnJflD0W2+9JVOeffbZdevWdezY
MTIy0ixZuqwvvvjCbYMfeughmUHWK5tSpr+SSJh6tsWLF7du3dp6LNK1yrbo
kCFDZAPVZU65+5NPPmnvA/Pnz9+uXTu3Q6B7vyGalLzt/e6779asWdN6xqQP
l85Zgrl9Ntk8viwV+XBxu0wve+y6devKc1iyZElzgob8dFn+kiVL/GtAkncv
A1G7dm1ZztmzZ6Ojozt37pw3b14zv7zGfvvtN5eZvf9/+cFzuvepneLDDz90
+RCUj0WVRrr3ZmNA8oI0QP5fLp/OI0eONNOPHz/u5SNVNl7eBZlfWulevP32
26YjsvcAslFq5pdNx1tuuUX6KPNuve666+z3feONN2TiDTfc0KpVK/NGbtCg
gfR+5r7yqrbPvHnz5lKlSln9s/QA1tleKlW63759u0rOv/KSlg7QzCPdpvkq
YNGiRdace/futd5N0tomTZqY7JwzZ85p06bZl3nhwoWrr77a9Hj33nvvPffc
Y2K1easK+0ln3jfAHN1kVKpUSXoheR7Mnw8//LA12++//27e7+qfPWXCfJFu
bZn36NHD+/8pgNDyNd172a9Kn1OmTBkzp3SnMlu9evWkQ5M/pcuyD4I0depU
s7llnUibbrqfPHmy+ufg/OXLl8vv//nPfyShq3+ney+7NWF6ddncMp8jshlj
RgAQsmnk+TguABlm+PDh5u3s5W7i3r17y/yS683RxSo5WMnmlmScFi1a2Occ
NWqU1V81b97c2iSrU6fOiRMnrNm+/vprlTwMaep1mf5NsqE1xWxeSk9oOjf5
xdpolGbMmjXLZQkSi0zPY2JX5cqV5XcJUC6zSQQ2GU06tFtvvVXyl3RZZt9N
sWLFXA6RkhnMA5HHK8/GNddcY7YAxfjx4+1zer8hmpS8a1sWaGaWLl22S+Wh
mWdAtk7tX+G6hGtzl5tvvjn1E+h9jy3x3740n9K9hwYkef0ySPrnU+O///2v
rF0+BGUG8wkiihQpYv9a2Kf/lx88p3vv2ykee+wxc5P86xs1alSyZEnrP5I6
3Xu5MSCbFma3aefOna23rbzCzasl9cvbA2Xj/b2QyXlI99Z5l9u2bTNTpC8y
ndKMGTOsl1N0dLQJodLVW/c13a+IjIycOHGiORAlJiZG3tfmzWhfUadOnVTy
cP3W966HDh2SXsIswW26l/eI+Wpr4MCBsiFtvtTauXOn/ZvAG2+80azr+++/
N1OOHTsmbxCZKH3C1q1brTnNECLyXt6yZYuZsmHDBula5ZH+8ccfLk+L9w1Y
vHixPDPSrVlH7Mut9913n0re1t2xY4eZaNK9kA5KnijzpYqQDiEhIWHo0KHy
++WXX57mvxBAJmOle9nSm/xv8uGu/p3uve9XRbt27dq3by99i/VNviRxs1Pm
3nvvTd2SVatWmZake2T+jz/+WL16dXNw/pAhQ1TyEMFmM8ye7r3s1pL+2f4R
Dz30kLX2F1980Ux8/fXXfXpKAQSJGWrphhtu8HJ+k+4bNGggP2VDSDouc0Kl
dB32XcySNUww6dWrl3X1kDlz5pgdPf3797fm9CPdm+0i6Y7MxF27dplz6suX
L+/yzaFsAcp06Y5M72ouBdKzZ0+XFT3wwAMqeceKfbf+7t2777///nfffdc+
5/79+00DPvjgA2uibK199NFHXbt2dcmV3m+ICunDTUc6fPhwa2NStoflH3TN
Ndd4uO6JyY9uw7X3PbbFfCL4dGS+hwZ4/zJIsn1qSFjYvHmzmSgR20ycMmWK
Naf3/y//eJPuvWnnsmXLzF54eXKs1C8vFfOp7ZLufdoYWLFihfk24+WXX05K
Pp7EfBvvdkvAA9J9luQh3Vs3mf3RsbGx5s34wgsvuMxpTmWSzU5riul+JQLb
++Sk5OOvzDKPHj1qpkjPY6a88847Los13we6TfeGy0vdztq6/vjjj+3T5fVf
tmxZl61r813ZoEGD7HOabva5555zWbKXDTBS75+Szs08rtmzZ5spJt1L72eO
Jtq7d6/8KY00fbs8gSr5S1TPKwKQeVj9T1qs/senfjXJXZcinn/+eZmzZs2a
qW/yPt3LxqfZw/Ltt99KzK9UqZLcZIbNdzn2z5tuLemf7Z/Uj6tjx46pt2oA
hErDhg1dNoEksLxqI1t09vlNuheNGzeWrJrWYtu3by/z1K1b1yWWvvbaa+bu
1v4UP9J96dKlrc1IQ2KUWazLRqPkR2W7CKnZpsqXL5/L5UrN7vgmTZqke178
+vXrzYo+/fRTz3P6tCEqKdjMPHr06NSL8nxYhYdwneR1j20JbLr3/mWQ9M+n
xo033ujSZrNn0H6wgff/L/94k+69aWfbtm1liuRul+G8zOBm9s9BXzcGxEsv
vWSi1oYNG5588kmVfLyxr8ct2LdMfLojMjMP6X737t3mJvPt6IoVK1Tyd32p
O/PVq1er5K9GrSmm+61Vq5bLnCa6inXr1pkp5sUpHV3qryXdjplvhWuXY4pc
TJgwQeapUKFC6i7RnO1So0YNa0qPHj1kyu23326fzZyFOnDgQJe7e9kAF/JZ
OW/evHHjxj344IOmUx07dqy5yaR7K79Lr6uSB7cxf5rnVp5279cFILSsjTrZ
sBz4b+bbdWujzqd+1e706dOyNfvmm28OGTKkTZs2Ko3vAH1K91u3blXJl0qR
n8OHD09KI91bPHRrSf9s/7hs1gpps0o+WCut9gDISCbd27d25G1r3+YvUqSI
fX6T7iX+uN3zazF9wsyZM12mnz9/3pz8aEUnP9J96s1LUa5cOblJcpM1JT4+
3hyIbh0aKlPMiM0uXZO0wexirlKlysiRIzdu3OjhoTVr1kwl72OVrce5c+e6
PYs/yccNUXOaQ4kSJXwa1dnwnO4tnntsS2DTvfcvg6S0PzXMwQbdu3e3pvj0
//KDN+k+3XbK/90sx+X7sSR3Y+b7sTEgy7/22mtV8knN8mzIO0gCha+PlHSf
JXlI99YGqjmdc8aMGebPPKlYLwzrYNG0ut+TJ0+aOa0j3vv16yd/durUKXXb
PKf73bt3e3hc99xzj8xzzTXXpL7ps88+U8n7yq0O2XyHFhkZaX0VfPDgQXPE
y1tvveVydy8bYOzcuXPAgAHWqbJ20h2ZeUj3QBbj/Xn3PvWrxuzZs7t162aN
Qer5o9mndC+/N23a1MxvNpbcpntvurWktLd/vv32WzOz98P+AAienj17yvux
S5cu1hTZIByVTGKgSiPdy1aWh2Vau4d++eWX1LeakYWeffZZ82eg0r0J3Y88
8og1xTpeVEJQt38UKFBAJZ8L6XJ32dqsVKmS1ZvVrl376aefdhnOzpBN2T59
+lhjxOXPn18WKz2zS1/t04aoeVbdzpwuz+neyx7bEsB079PLICntTw2z/K5d
u9onev//8oN/6d6lnbt27TJtS31NydTp3o+NgaTkEzdMU8W4ceP8eKT214Mf
d0fm5CHdT5o0SSUf8mG+dTTng4gH0mD/4jfddC+h1Uy5++67VRonfHlO93v3
7vXwuMyXBm77SVmgSh59xTp8JSYmpmrVqjKxZMmS8t589NFHzRgsNWvWPH36
tMvdvWxAUvJJB8WKFVPJX7jJR+S8efPkSZbw3q5dO0W6B7Iu79O9T/1qbGxs
r169zDZh27ZtZfNAthn2799vnd+UuiW+pnvT7Tds2NDclDrde9mtJaW9/fPp
p5+q5N1eXOsTyAzM8D5uR9UzHYjbdG8d6+6WlWt+/fXX1Leai3EMGTLE/Bmo
dG+u9DRs2DBritmX6lbevHlTb+DFxcV98cUXci8rC8vWl/TDbq/0J1uDL730
UuvWrU0jVfJ+5GXLllkz+LQhak4RtX/H4j3P59172WNbApjufXoZJKWXmlMv
36f/l0+cpHurndu2bTOtWrFihcucqdO9TxsDloULF1qj68sb2Y9Han9T+HF3
ZE5ppXt5y5jvxKTjMlNkM9LM6c2lKr1P99IPK1uYtXOS7s3YTdLTenPThQsX
zMh+dvL2dPsdoPfp3jyBPXv2dDm9i3QPZG3ep3uf+tX33ntPJV9ZwxqgyViy
ZElaH83r1q0zN3m4HrQ93R86dKhz587WiCKp072X3VpS2ts/48aNU8nnIab7
eAFkAOs4/NQXdPM73SckJJiTiFMPTyTJy0Qn66ZvvvnGNCD1N37ep3vZajU7
5T/88ENrihm7bPz48b/b/Pbbb+bYp48++iit9icmJsps3bt3Nw17/vnnPTzY
Y8eOTZ482fR40j9bfaNPG6Jjx46VKeXKlfPjAvce0r33PbbFPGq3WdLXBvj0
MkjyPd1bfPp/eSMg6V5ez+YAj9RDNKRO9z5tDBjy0WxG4DfjkEvMl7eSl/e1
2IOPr/dFpuU23cvbxHyXK6zLjJ4+fdocrO7N+ebep3uzvSrkQ8Q+59GjR83V
LvxL9999953bTysJ8qavs19jzgxYMXjwYNkAlk1cecgeLpfpZQOsEQZcTkyT
Ds2c40a6B7Iq79O9T/2q2Q+V+prC5iBPtx/N0pGam9xehNewp3sXLune+24t
KY3tH+mBK1asqNyNWQ0gJOT9K1tr8q68+uqrXXZn+53uRcuWLVXyyHsu083I
G/bNzrVr15op8ot9zpkzZ5rp3qR7a9fnhg0bzBTzpYHbE5m7dOkiN3Xr1s2a
ktZYZGZ8e5f9725ntobFs45C92lD1DqJwD7iusXz2HFphV+femyLfBipVJdg
88xD+vb+ZZDkS7r36f/lh4Ck+6R/vl1xOadAPPXUU+rf6d6njYGk5KRm9ku2
a9dOfh80aJBKvjpDunseXSgbn+6IzMwl3UsfuHTp0uuvv95MtHd9Sf/sc1HJ
Q3rav2LdtGmTvKTt44p4n+7lHWquE9qgQQPres3Sw5trkip/07281M03k+XK
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
xZEjR9QIKXQlBQAAp0C6BwC4HaR7ANwI0j3wSR48eKCuQtOkSTN48OBVq1Zt
3Lhx2rRpNWrUUN3yW7du7cL0owAAEJlBugcAuB2kewDcCNI98FXOnTtXq1at
WLFiWdTQyJ8//5IlSxDtAQDAWQoUKJAoUaLvvvvO7AMBAPgOa9eupT8sRYsW
NftAAPAFkO6Bb/Py5cs9e/asXLlyzZo1hw4d0k8CBQAAAAAAAAA+A9I9AAAA
AAAAAADg7SDdAwAAAAAAAAAA3g7SPQAAAAAAAAAA4O0g3QMAAAAAAAAAAN4O
0j0AAAAAAAAAAODtIN0DAAAAAAAAAADeDtI9AAAAAAAAAADg7SDdAwAAAAAA
AAAA3g7SPQAAAAAAAAAA4O0g3QMAAAAAAAAAAN4O0j0AAAAAAAAA2Ofy5cvL
li3bvHmz2QcCbEMnaN26dU+ePDH7QMwE6R4AAAAAAABf5c2bN3/88cf27dtP
njwZFBRk9uF4msDAQHrh9PIvXrwYHBzM2dTs2bMpMX322WfuOjZgH6fO3aVL
lz766CM6QXnz5vXM4UVMkO4BAAAAAADwPX7//ffixYtHixZNu9pPnTr1vHnz
zD4uD3Hv3r2uXbtGiRJFe/lx48atX7/+zZs3Xdsg0r3HcOHcbdmyRa35ySef
PHv2zJNHG6FAugcAAAAAAMDHmDJlihaOEidOnCtXLko96se+ffuafXSG8+LF
i/z586vX++mnn+bJkyd+/PjqR3rw008/ubBNpHvP4Nq5e/XqVZ06dTJmzDhu
3DgPH3CEAukeAAAAAAAAX2LXrl3q8p6i6B9//KEWBgYGDh48OEaMGAcOHDD3
8Fzm6NGjbdq0sV7+3XffDRo0SL8kICCAXn6UKFFWrFjx9OlTtZDeiqJFiyZN
mvT69esu7B3pXuH4WXANI85d5AHpHgAAAAAAAJ8hKCgod+7cdG2fK1eux48f
Wzx7//59+78eHBz877//Hj58+OzZs2/fvrW5zrNnz44fP06rueeIdbx8+ZK2
fOfOHZvP7ty58/PPP7dePnPmzNq1a+uXVKtWjd6Bhg0bWqxJb467eua/ePGC
DvXu3bv2f+v169enT58+c+YMPXB8X8+fPz916hTlaDvbv3LlyokTJ+gwHN+s
I9g/Be+cOQuuYcS5cxn6BtFZuH37tof36zJI9wAAAAAAAPgMGzZsUNf23377
rSPrd+7cOU6cONu3b6fHy5cvz5Ili36cvsXKu3fvzp07typfRiRKlGjgwIGU
B/Xr/PDDD7TBhAkTWu8rfvz49NT+/fu1JQsXLqQl/fv3P3nyZNmyZaNGjaq2
nDZt2i1btmir/fzzz8uWLfP390+VKtUyK5o2bUp5kx7Q8asQXblyZdpIqVKl
7L92pw5VpXt6+RTVy5Qpow18SJ8+/bZt26y3cO/evQ4dOnz66afaePA4Opo1
a6at+c8//8SLF69kyZL0+NatW/RytN+it3r+/Pn6zT558oROWdy4cbXNFi5c
mBKo0afgnfNnwTUcPHdEsmTJ4ljRqFEj6zWfPXtmvaaes2fPWvzK+vXrs2bN
+r///U8b3jJmzJiw7ndFHJDuAQAAAAAA8BkGDRqkIqeDJeIpZtL6lMgmT56s
QgElmjRp0kSPHr1o0aL6NYcNG6ZWiBkzZpEiRWgd9WOOHDkePXqkrfb999+r
EdPW+/r444/pqd27d2tLVGROnjy5Csv0gOKzKhFAh0FRUa02cuTIihUr5s2b
l3Zd0YosWbIkSpRIPVYTotH66tg6duyoPzYLXDhUQhUqDOtQFa9evSpQoAA9
FStWrNatW7dq1SpGjBjq17OEoK9+cOnSJVqeMWNGivbZsmVTq1F+p/RKD3bt
2qWtef36de1tz5QpU8GCBdXB0NHOmTPH0FPgwlkIC4rSo0aNCutZB8/dO6t0
r36rZs2a1mu+ePGC4rlFotduodBhW/SRaNKkifYm165du3DhwuqOVqVKlewc
T0QA6R4AAAAAAACfoX79+nRhX6VKFQfXV+k+T5489G/WrFnnzZun+j9TPr1y
5Yq22m+//aYCTuPGjZ8/f64Wrlu3joIeLWzXrp22pmuROVWqVHv37lULr169
mj17dhHSeYAOQ1vZ8T7hdIRqC0Ts2LH9/PwuXrxo/YvGHSodktr1hQsX1JIz
Z85QwKfN/v777xb7UumecrpqLO7UqdP+/ftVMzGdAn3XCNVrndKoVlzuwYMH
FDlpYfTo0bXXaNzreueOnvn79u2jF9ujRw+bzzp47qyhDYaV7q0JCgqqU6cO
rU8n5dChQ/qn5syZo26Y0HdBu0V24MCBePHiqftgjmzfLJDuAQAAAAAA8Bny
5ctHF/adO3fWlpw/f36yDkpz+vVVuie++OILiophbfbLL7+kdXLmzEmxSL98
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
0pQpbZgqlVQ9SJLkgzsDFt0A9MX8MT2fuSDdGyezHZaZ7husYalNfO+azJZc
Tr5mTs3WZxzLGptZcjotkMxbOpxpDsb0Y3nkC5ZdprNEugcAAB9Af33r4V1H
tHQfwVXz3f/4o0z69NgFjx+XpekPH/bE0VK6v3JFDBok2rThWru2SJhQpvJm
zVyxZMnQUE+vXVmkiMifX+TLZyktdNCcOeVkfBkzijRpbKiCvzJZMrPSKnAO
pHvj5IxiDoGV7pkplVmbLvlNlpyYOdGfZb11LJnlDpj1Cjhl8UjOh7XNAsGR
+XljftOQ7kFYtAfeidkfHGAO+utbD+8a6d4pnz6VCbRSJdGwoWjc2BWrVROZ
M4tDhzxxtK9fi/37ZaaePJnrgAEyMlNMzpvXFbNlE+nSyZIF6dOH+tlnIlGi
9/3qXVB1rbeYMs/mrHlRopiVVoFzIN37arqv9S1LZiNyjtMsOfXPv6vJktnH
m9lhg1NOkFzckiXnw8qcjG9KN5bMbxqyAAgLfDa8EZy1SIv++tbDu0a6d8pn
z2QH9ezZZQu+a2bNKmOys+k+KEi2+z996pz374tNm2SI5k8FOG2aPHiK5zly
uCi98EyZ3psnj7xXEDfuey3K34VbLk+rjKceaH3sgfeCdO+r6f6rjSyZ8fyL
Iyw5QY85GR+z5D4z3TNl9lvgfFiZBQeQ7kHEBJ8NbwRnLdKiv7718K6R7p3y
7VtZW54i88aNLkoxOV8+53rmv34t/vpLtvv7+Ylu3ZywSxdRq5bsu377Ntfr
1+V4hG+/dVF6xyzetO3bxe7dYt8+6d69slx/8+YfdHJo2FA0aCDr7detK+rU
EV99JV9LzZqiRg3Z/4GsUkXOnFixoqhQQZQvL5Inl6X2KN2rovf0WK9WMc9i
ud6PPgr9Dtqs4xfWaH3gRpDufTXdM1uBZ3Zimf4yy0EjXJc5YX37uWbKnLd9
dxmWnA8rs9sAs84D85uGLADCQvtsmPi/GHRci7MGIhv661sP7xrp3lmfPxfX
rsnx7K5JkbZoUefSPe2RInDOnLI2HcVbx6X1ixWTg9Pd8sIfPhQ3b4p//gn1
0iVx9Kj02DFXPHVKfuT++096+7a4eFF2/u/XT5bvI+lB376id2/Rs6est9+j
h7xZ4ecn71d07Cg6dBBt28pqAK1bi5YtRYsWcmh/xoyyEz6F9ChRQv/VT3tn
8aNNtbnwkO7NAuneV9M9cwQ3c/ryT96w5NTMZ75w5s0B5t6Z1RK6TWHJ+bBy
ZtMjmSNBmN80ZAEQFkj33qXFWQORDf31rYd3jXTvrMHBsrC/y54+LWvmO5Xu
6dSMHy9j7Pr1zrWY0/pDh7ot3b99K9VeyMmTolEj2bzepIkrNm0qU7lSld2j
zD58uBg1Sjpy5HtHjHjvsGGiU6fQgK9s3z7UPHlkbfx48UT8+HLsg5r8Tg3D
jxr1g6Z5EGFBuvfVdL+jEsvmS1lm/Jvl3Pauy+xaX3c9y3F9WAb0Zsm8J8P5
sDKr1g8ezpL5TUMWAGGBdO9dWpw1ENnQX996eNdI9x723DnZdn/woOxv76B0
gujyuHNnWSLv0CEn/OUXORAgY0Z5ct3uDz/IvgG1aon69bnWqSMH9TduLBvr
Vdt9WPbpIzvwW9fkb9pUfoYTJ5bpPmFCme7V7PYxYoSme33TPIiwIN0bZ/Ff
BEdmum+2jGX5XSybLmepTXzvgsycyGz+ZtbMHzmQJfPOBqdrPbPPw67yLJmT
BSALgLBAuvcuLc4aiGzor289vGuke8+n+2zZxOrV4vx5R927V3ZN79tX9o1/
8cIJnz4V27bJeFusmPulz0z37mL+fLFqFddly2QrfPLkstpelixhmjlzaKN8
ihSh09lrpkwpQz1F+7hx5b/qgZJivqaG6lSv+thT6tePyqfl+uH5drroA7eD
dG+cnO7lJDPdt5vHsvJ2lsx0P6Oz6zKbv5k9zFc0YbmgDUvm4PeNX7ku86YK
c6aDHyqwRBYAYYF0711anDUQ2dBf33p410j3HvbKFflujxwp1q511JkzZdt0
v34ysDu1r7dv5RCAEiWcG63voAUKyEbzIUPE2LFcR42SLfixYokECWSFf8rp
NqVnKdoTtKbF7HiU4mPG/EBax1oNi3Svz/K03GaoR7r3AEj3xrm6oeBoblW9
6ltYMlty+41x3R/LsWRWrf+pLMuxfVky72xwBkSM6ceS2XbP3DuyAAgLpHvv
0uKsgciG/vrWw7tGuvewjx6JcuVk2fwvvnDU3Llls3Xfvk6ne5J+5fJlWcLO
7QYEiKRJZayOH59rvHgyeodb016rbG+duCngo8CdD4B0b5zz2gmOzHTPHAfN
7HjAnB+Ns+shw1j2Hcuy1SKWC1uzZBblW1vfdYsdYPlzCZbMpv/IlgVu3ry5
ffv2lStXbtmy5fr16+Guf/Xq1Z07d65atWrHjh302OLZS5cuHbbi7Nmzxhy7
p0G69y4tzhqIbOivbz28a6R7D/v8uawDryq9O2jdunKovgtt9+9Cmu9VrXsL
b9wQZ86wnD9f9s/Pl0/kz29p9uwU0+Rod32vePuqJvho0WTAp19Uveut1frb
W5gkyfuNkDFjmhVPAQuke+Oss0FwZKZ7ZshtsoIlsxG5wxzXrfUtS2bRe2bM
HDaE5baqLDlHzryfs6U6y6HfsIxUWeCnn37q2LFj+/+nQ4cOu3btsrP++vXr
aR39+hs2bNCvMGHChPZWBAQEGPw6PATSvXdpcdZAZEN/fevhXSPde96nT8WT
J05IUXrIEFlTzoV0/y6kyH9QkKUvX8r56zlu3/5+InsLJ0yQc9VRVM+c2TkT
J5at87Fi2bhj4Lj58snKBsAb8fl0X7bwbrNssURwZKZ75jjo+mtZ9g5g2XKx
67adz7LHJJbMjv2tF7JkllLkVFpgfmAar2RZ4QeWkScL/P333xTPO3XqtGfP
nhs3bvzwww8q6V+7ds3m+r///js926VLlwMHDty5c+fgwYP0mJYcP35cW6d7
9+60zbVr167TsXfvXg+9JINBuvcuLc6aTYKCgk6fPr148eKxY8f2799/9OjR
y5Yt279//9u3b8P6lQcPHsyYMYO+NdZPnT9/nj78EydOpE1NmjSJHp86dcrO
3nft2jV9+vRnz56F/+FjE+6+wlrh0aNH27Ztmx8CPaAf9c8+ffr0B1vcvXvX
kJfhDPrrWw/vGuk+4vvPP3KquCZN5CR0Fy64wbNn5Tz148fL9vcFC9zs3Lmy
m0HdurIx/bPPnDNFCjmHHf0ifSCVOXKInDmdk34lQ4b3Y+QxMb0XgXRvnMyk
xkz3zMnRmGGNWVWv6zTTZJ415sB5TqcFssxulpwxBY1WsWTOwMgsExF50v2s
WbPoxe7cuVNbsmPHDlqydOlSm+tTAqJn6fJeW7J9+3ZasmDBAvXjvXv36MeB
AwcaetgmgnTvXVqcNWsop1Oot+5tQowcOfLWrVvWv/Lq1St6ilZYsmSJfnlw
cPDGjRttbmrDhg1BQUHWmzp69Kha4f79+65/KB0j3H2FtcLZs2f9/Pz0L6db
t276sTbqpp81J06cMPYlOYD++tbDu0a6j/jSqRkyRH422raVs73zbdlSFC8u
N/jll6J8eTdbtKgM1ylTinTpnA7mmTPLsfwJErw3Rgzb9fFsqq+zpzr8x4z5
fr57IZD0IzpI98bJnFuNme6ZreedZ7Bk1vTzm+q6/UezZLbdn8/Css0Cll/P
YsmZjI/5tjPb7r/cwzKSpHsKI3SVTi/24cOH2sLHjx936NChS5cuNhsuZ8yY
Qevv379fW3LkyBFaMnHiRPUjXc/Tj3PnzjX64M0C6d67tDhrFrx48aJfv34q
ii5fvpw+vbdv37548eL333/fuXNnWkjPWnwR7t69q409sUj358+fV8sXLFhw
7ty5W7du0RJaRy386aef9CvTt2/fvn1qL0an+3D3ZWcFevm9e/dW9zoo/h87
dmzUqFH0Iy18/fq1Wmfz5s20ZMSIEWs/5ObNm8a9KAfRX996eNdI9xHfx4/F
zp2ialUxaBD3GlvZq5ecqp4CL533vHndbNq0ImNGObcdpfusWZ2TfjFVKtmC
r0kJPX78D/I+SUso9UePbikt1KRET0aJEloAX5W4R7qP4CDdGydzBDfzbw5z
HHT3ySyZ87Z3mum6E/1ZfjOU5Z+5WZo7jyGn7b7eOpbMHhdfbWQZSdL9f//9
R6+0Z8+eFst79epFyynmWP+Katmny/jnz5/Tjy9fvlTtnps2bVIrbNmyhX5c
t27d1q1bZ8+evXjx4r1792opwAdAuvcuLc6aBStWrKCnOnXqZF318d9//6Xl
9OyhQ4e0hbt371ZDUWyme/rY08Jhw4ZRWNYvV9+R8ePHa0vu3LlDP+qbuY1L
9+Huy/4KV69eVQvpDVFLbty4oZZcunRJLVE3/fbt22fQS+Cgv7718K6R7r3C
J0/E7Nlixgz3OHasLNYXLZqcYl4fpfnSBilKU7TPmVNGdb4U5JMlszRpUpnl
KbmrCK9JS5T0GHgjSPfGyZx8nJnua2xmWe5HllW3saz5neu2n8uSma+ZN1WY
PQd6TmDJ6RvPLMPIvKnCmUKRjCTp/vLlyyqqWyynJbT84sWL1r/y6tWradOm
0bP+/v6TJ09W9wHogQr7xMyZM6076H7zzTcRYQSuW0C69y4tzpqeFy9eqNbq
rVu32jzXK1eu/Prrr1evXq0tUfUkKa0vX77cOt3PnTuXFk6fPt1iO2fOnKGv
wMSJE7XO+du2bVN3Ffbs2UO7cDnd05eUjsRmn3+NcPdlf4UrV66ob7E21j4w
MFCt9tdff6klqv8D/T1x4SUYjf761mM7pb+H9Bfvxo1jhw/LocpI9xHQN2/k
GPktW8SaNWLAAFlYzy327Cmnqs+dWxQsKAoVsmGePCJNGss55R0xVizZMp4g
gSxiz58pj6QUb90DP2bMcKakJ4E3gnRvnMyYyUz3zL0X/4Ulc2I4Tu90Zhdx
5sj3pc1ZMnvmMwe/+0903brrWTI/rrU3sYwk6f7s2bP0SseMGWOxfNy4cfpL
dz0vX76ksGMR3letWqW1zvfv35+WDB069Pfff79z587x48fVlT9FG4sGTS8F
6d67tDhretSgEjvJ+kUI+iWU6w8fPkxpWnVisUj3+/btax8yi8T69ettDtjX
2Lt3L6VydctL9RBwLd2PHj2afnfx4sV2vlzh7sv+CvRi/f3924eMXHj27Bm9
IWvXrqUfu3btqr71tFC9jTt37pw2bdrIkSMXLFigL7NpLvrrW8/s8e3bt//+
+++xY8cOHvxu40ZZY/z6dfPDrOd9+1ZWj3/0KIJ6545YsULWn2/Vys22bCka
NJDWqSNq1pTWqvXeMmVE+vShvdkB8BhI98ZZeq/gyEz3DdawrLiTJafoPckZ
0bCqEUvmlPHM1vM1DVgyB4OYWEdxSjeWzBkiIlW6p8BisVx1JD537pz1r8ye
PVu1xZ8/f/758+f077Bhw2gJLVcrnDp1ijKOvuY2Xeiqlr6w6vB7F0j33qXF
WdOj2qy7d+/uwsdAFZO0SPeBgYEBAQHaXa9+/fotXbr0yJEjT58+tbMpTtv9
9evX1UiBlStXOrJ+uPuyucKZM2dUwO8UQvuQWTN++eUX9az6M2LN4sWLXXhF
bkd/feuZPV64cGH48OElS5asW7dqpUoidepImu4vXZJl3r/8Uo5qj4BWqCA+
/1w2po8c6X6HDZM2bizHZWTMKNvrNXPnlhXsU6Y0Id9haHxkBuneOJlzcDPT
PbPAGjPkDhjFkjOCm1k+XZv43jXX12XJnFCP2b+d092C2WUi/zGWnEINZCRJ
96rP7dChQy2WU3in5f/884/F8rt373bo0IGu/+/cuaMtpCDQtWtXWt9OY+WY
MWPafzh+2XtBuvcuLc6aHkrE1ne3/vrrL4qli0JYGMKKFSusf9dmuidev369
du3a7t2763Nux44dt23bFlbzOifdv9P1QFi/fn24K7uW7inIawX3FL1799YG
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
s+R+pR0svTHdX08l7Ih07y6Q7r1Li7MGIhv661vP7DEyp/vXr2X1tnr1xLFj
sjB7ROuZHxQkHj6UAwfMcvZsUb++rFy3c6cn3LpVngVKxN27i759HbVPH1kw
oUULWSGfHoweLcaMCccRIz6IGwMGyKb/0qVltT1Vgs8RrecNJJMmDZ3CL1o0
G0P1geMg3RsncwpvZrrn9LImmbcmuk5jyQnIbRawZB75kGEsmXsv8itLTr5m
dplgNv2X3M/S67IApft/Ugs7It27C6R779LirIHIhv761jN7jOTpftUq0bix
oBdOMb9bt4iV7p89k7X+vv3WNHv0kN3dp0wRf/zhCY8dkxk/Tx45NaHj6V7Z
tq3sY09ncPhwMXKkPYcNk7dxaP127UJt2VLUqCGzeZkyslnfvrRO8eI2cn3R
orIDQOLEsk9+jBhyDL51aT7gOEj3xllvneDITPfMGcCZjcgd5rDkpHtm73RO
QT+SOSRhdH+WzCZsTneLaltZMu/JMAeSeF0WoHR/LY2wY2+kezeBdO9dWpw1
ENnQX996Zo9I982aiTt33s93b/pRKYOCxPnzchy36g1uiilSiKpV5WT3qr69
0b55IwID5YmYMkXOeeeUvXvLtvtGjWRy79LFnq1ayf7z0aLJAf5KVUyvcGGH
evVTuqd3pmBBUahQqPSL9G/GjLKvPp0vfZ09fbd8NX2evuyeIyPxI+2AfaR7
42T2Tmem+/prWbafy7L1Qpacke/M6uvM9405omFMP5bMvXNGvjNr5jOntGPe
jPK6LEDp/mpaYUeke3eBdO9dWpw1ENnQX996Zo9I95Tu796NcDPiUdo9fVoO
4p40yTSbNpWjzvv0ET//7CH37ZMT3E+YIAICLKX83rr1B+Xu1ZR2ZJs2okED
2XZfrJgM4OXLf2CFCqJiRTmvPcVw8vPPZe4mLBrWU6WS0+rpJ+OzKa3zf+yd
CXxM1x7Hz2uLUmpp0apaq6iqolqvWrW21c2+70oSSRCxEymaxBJRJNbQELGE
UCrdqJRWa+lD7Twttaeo2oMs3v84eZPrzuTOZH73zuRmzu/z/eQzuXPn3jtz
J9zvPef8T8mS7JlnHoBeW7x45k0DZVd8ZUk91Rh8affakXZvHGBfZdDuB0+D
AEvugzcHkJkEwSntWq+BAOfjmzwcArR7ZOA82OfhzR8hmn4PYToXILs/UYFp
IO1er0i7NxeqsybjaVFe37pmj9Luc6fdp6byonblyrnzGJYuZU8+yVurtfu6
u4Zu3XiLObk5WTwhat8R9eplUqtWZk37ChW4g1sgJa9SJbO3vKVJXeXdnmnQ
uTnS7o1j0giGANo92IQNdq0Hh+2PCnMe9xa9B3uYg98ZcNg+0nYP3lh4bTtE
g60QpnMBsvvjFZkG0u71irR7c6E6azKeFuX1rWv2KO1e2P333/Nibh07svDw
XMHkyfxuwzPPuPPz2bePV9Xr0we9nneEkSPZwIHM2ztb2rfnrfDKiveNG2eW
tReV7emrSxZPPPdc1gNB5cq8Yb1ECU6xYll98osUyaxv//DDNnrRO9HULqNX
pN0bR8gYhgD+pQ+fDDE0HAK0e+TGAthtALw5MHIiBDiiARxWgFTVA+3+jZ8g
Xv8ZwnQuQHb/e2WmwbAe0u71ibR7c6E6azKeFuX1rWv2KO1e2P22bdwuCxbk
Zc9zCU8+yZ56yp2fT0YGmzuX16kbPdpw/P15ecP338+Wjz7igk+0bctp1Yov
qVPngbnqLPPUixnrxKR1RMWKvBdE2bJZfenLlMmcsJ4+YRL/fPkeIH9+jrKP
vZB9GZdF2r1xgM3foN2DjchI33jCjYXrwY8d7GEOzogHduwHB7832eQ84DgU
cC6/rnEQpnMBsvtjzzENpN3rFWn35kJ11mQ8LcrrW9fsMQ/b/eXLLDqaT5GW
XSm2KVN4f+82bXhVvVOn+IxsI0e6op3aEcaOZf37cwN12cd19Cj7+Wf2ww8P
MHUqLzJPB0MEBfHR7k2a5GzmOAd57TXezV45Db2KZs348Pl33+U/RSM+HQa5
vEXkq1ThIm9pshfT0JPXP/ssb68XFC36AKIF/7HH1GPwrcvdywnrXRxp98YB
DgAH/2UDbWvqEAiwoiCi5+DHDtp9rxgI8OYAWFwO8etuSyAa/QAB9hwwnQuQ
3f+3CtNA2r1ekXZvLlRnTcbTory+dc0e87Dd//e/vJZa6dK8MdcmJIakz++9
x/76i7dT377NkpNzC3QWNm/mZnrjhotYtYpNmqR1WU52T2YtCsepGrtBaIPk
zkWK8JH1DlKvHv+ukrxXqMApX563zoufAvroBCVK8E71qqnnbcq7Cjk2342R
dm8cYF070O5ByQXLu4F7R8YUBH0KAY67Bz838KSD09LV2eU84JiCtzZDgPM/
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
JfPxMZB+/fjEcyEhfNyBa1iyhDfHv/IKq1+f1arF7b5qVTtUqcJH6JPgE6VK
qcvoWchuyjybk+jJeEik3RsH6Dug3X8aBDF9EMTQcAhk8Dg4Jx1YVQ9p/ibA
yvNI13ri/UTnAfuKILvGMaPdb23ANJB2r1ek3ZsL1VlTJiEhgZYPGzZMuTAp
KcnrwfTv39/6tdnZvUh6evrvv/9Of5Xh4eGk9mI7c+fOtV5z8+bNQrdnzpyZ
3STyBw8e3KEZUSWPQnvM/ptrZ1937969ePEi7Us01lMOHDgg3ouY/o8y6n7E
Z+J1f148jd3lkiivb12zR4Xd36ZPPSNjc1paHmHp0qdcXFXvzh02ezZr355P
bHf4sIEcPMj69OGT1/ft6yK6dOGSTsIutP255/jQe7tUqECapqZcOVa2LBf/
MmX4EH7abLFimXX4xdR7Sh5/PJMiRbKm1ZM95/N8pN0bR1xXhgDaPajnG5pD
TBoBgQz5X/AxBFhyH6xX0G8+BNhzAKFvNAQ4osEDx93/9AbTQNq9XpF2bxZU
km59Kjdt2iSe+ueffywLk5OTt/4/a9asyZHdkwjfvHlTteaVK1csvkz6rHxK
bN/rfnk6S0V664wbN87L4ezatcvmRhzclwjJqZeiN/6tW7diYmLEEICAgIDo
6GjRfB8aGqq9ndwQ5fWta/aosPu8luXLy7ve7mfO5D3njx0zdkcZGWziRNat
G2vXTou2be2PjneQFi24Ylerxl54IQv6lfzdwbnwaOXq1fnP55/PvDlAryWe
fZYP5CfI9OknOX6JElmIjv2ib3/BguzRR/nPfPncJZ0yLoq0e+Pos5AhgHYP
tkEv7gExJgTCa57zgIXpQMARDeBZ67gCotEPzoMMpiBe2w4BvnEz2v2PbzIN
pN3rFWn35kJ11pQ5e/asEN4dO3bYPNfHjx933O5pa97e3rTyjRs3VCtnZGQM
HTqU1t+yZYtliRgXQElISNCuiZeYmBirGbFxyuTJk2/fvm29d419Xbx4cf/+
/ZcvX1YuFDUDVU3z6enply5dEvX5RcmCBQsWaBx2Lony+tY1e5R2b0a7J06c
YAcOsH37smXvXvbTT/ztr12rAwkJ7LPP+EwEYWGZTJjAfH25bpOSlyplH5J3
C5bu+oTF6IsW5dpOG7S00at46CH+bOHCvPAjOT4tofUfeUSOlM+DkXZvHGB5
N9DuwZHIMwdAgDXWkGr/4z6BAPvGz/OCAHsOtE2AQArTgZPxvfMtRLclEGa0
+80NmQaDpd3rFGn35kJ11lQJDQ2lpwYMGGApIqcMaa/jdk/aGxgYSAu///57
1cr01ODBg+mpffv2iSWk5F73B7NbfN/pnD17lo5ftKTfunXLegXtfU2fPp2e
Xb16tXIh/UoLw8PD790f1x8REbFu3TrlCmK++82bN4MH74Ior29ds0dp9zgp
Kez6dfbPP+yvv9jkyXyuOhfYvV3S0tju3WzTJn3YuJEL/ty5WURGsqFDhYhp
NdlXqMC74ouO9xqQ3Rcpwj2dhD07Hn6YS33RonxN4fjiVoB4Soziz21z7ck4
F2n3xgFqJmj3YO33ycMhwNrviCeCk/GBfr2qHQRoqa//DIF0bgePHLwV5oHj
7n9oxDSQdq9XpN2bC9VZU+XkyZNiCDkJ8k8//XThwoV792WclHnVqlXiKcd7
5sfExIgm8rVr1169elUs/PvvvyMjI2mhv7+/6BJ/4MABsdrWrVvTHozGzPU2
QzovRHv8+PHWfQYc2Zdoph84cCC9ZfGSP//8U3TCJ0u99/+qfb6+vpbxC6Lh
nvZr3U8gF0Z5feuaPUq7x9m+PbNpe+pU1ro18/Zm//2v++3+6lXe6b1+ffbW
W7zQPUijRnw7b7yRBW25WjX+RQ0M5NMTZMeIEezjj3m/+qeftkOpUpk98DWw
dNS3dNdX8cwzUvDzQqTdG0fQpwwBtHtwBPf8fhBI13pi6hDnAXsdgOPHIwIh
wKIBYAt4vZ3OA95NAusBghMlmNHukxozDaTd6xVp9+ZCddass2fPnkGDBlnG
rQcGBgq3FQkODrZUj1fGpt1fu3ZNOSNeQECAaM0Xtwh++eUXsRqZeHaj5qdP
n56jb6MY0U8HabmZoIrdfZGh08vFkvDw8NmzZ4t7GhMmTBD3ImgFcQNhwIAB
9KyosEfrnDhxIkeH6q4or29ds0dp9yCpqXwXM+93WA0KYu++S/8j5wq7v3KF
91dv0IA1a8beflt/mjZl9epxoQ4O5j32Q0LYp5/y7voq6GPx9eVj9kVvfA0c
sXu7SLvPG5F2bxxLuzAE0O7XtoT4vilErxgIxO7HB0OA1f7BTguz+0P4zoJo
nOQ84K7BgSRg078Z7X5TE6bB4D7S7vWJtHtzoTprNnPp0qXly5dbTJzi5+cX
Ghq6cePGtLQ0my/59ttvabXY2FjV8tTU1Pj4eDEdvIi/v//kyZMtPf/T09Mt
VfRxuyeRpH0pqwIq4+C+Ll++PGfOHMtyeklcXJyyk//58+eVdy2GDx9umR0v
90d5feuaPUq7B/nzT1507vXX7dh9ejrvKp+a6jouXeJ913/9lZ06xc6e1Z/T
p/no/iFDMhk0iL/xHj3UdOvG3n+f32cg6bZLdrPmOY5U+7wRaffG8dE6hgDa
PdhBHRx+DtZYQ1rPkTH7xLLOEOBJB+sVgLPGI7c1VraHAD83EDPavfbtNWn3
ekXavblQnTWNkAuT5546dYpkNqc95K1DdnzixAldNqUduwXwHQwd8PHjx8+c
OZPdxHxXrlw5efLkX3/9ZfQ70jfK61vX7FHaPcjvv7N33uHd1GNiWHQ0nznO
x0dt93fvsl9+0W0IvIN8+SW3e3LwtDQn31p6Ou/e/88/2XLyJO+0IFrtSe1b
t2bNm7OWLR/go494x/4iRexTuDAfR0/JrqqeI8jyenkj0u6N4xM0kN1PHAkB
9swHZz8PG+U8E8ZCgMXbweHnYNN/pT8gkC8r2OfBLwoC/Eszo91vbMY0kHav
V6TdmwvVWZPxtCivb12zR2n3uN23acM6d+a19a5cYRER6qp6GRm8Gb1GDd7t
XDnXm9HQ7vLlg+z+xg1eUuDHH7NlyxZebW/DBk6XLnySO9rvq6+qqVeP1a5t
n5o1ef09StmyvGKAc8jJ8vJGpN3nVbsH2+77z4bouQgC6dX/aRDELF+I7rEQ
4IiGMmchkC8rWK8AnAoQ/EsznQuQ3W9ozjSQdq9XpN2bC9VZk/G0KK9vXbNH
afe43bdty/uf38tmRjyy+3PnWJUq7JVXWJMmrqNhQ96Wjdj9b7+xOXM4MTH2
ee899tJLrG5d/mk4R6tWvERA5cq8I8S//22D6tX5x0graGAZuV+0aBaPP84e
e4z325cxS6Td51W7X94JYvogiK/eg0COHCw4EOUHAXZaAOdZqH4IAvmygl0m
wKEc4F+a6VyA7P67t5kGAdLudYq0e3OhOmsynhbl9a1r9ijt3mi7T09nR4/y
IvObNvHGfZdx8iTv647Y/YABvJR9jRp86IFdKlZkHTqw+fNZfLzzLFuW2c/f
Js2b854AL7+sRZ06vJAgfdr0k3j9dX5boH59VqsWF3wZs0TavXF8FsAQQLsH
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
NZtJT08/cOBATEwMGdmoUaPCwsJiY2O3bNmSlpaW3UsuX74cFRWVlJRk/dTR
o0fj4+MjIiJoU9OmTaPH+/fvt14tOTl5zZo1c+bMWbp06Y4dO27dupWDb6Gz
2bBhQ2Rk5I0bN1TLL1y4QP+GLFiwYN68eWvXrj116lROt0BLyGrnz59PHyN9
dNevX9f/6J2K8vrWNXuUdq9jMjIyzpw5Qx/pl3pn3brlCQlLVqxYsnx57OLF
C7p2bf/xxz369eulQd++Pbt161ioUD5l/XnRFO5Ii3l2FCvGe9dn155uF432
dNnmLmOJtHvjGBfMEEC7HzgDYtB0CGTCegK5M9A3GgI88hf3QwR8BgGOShgw
03n6LIRovgHiva8gzGj3S7swDQb2k3avT6TdmwvVWbMOeTqJmJethISEnD9/
3vold+7coadohUWLFimXk4msXr3a5qYSEhLS09Mta27btq1///7KFcaPH3/l
yhUdvqDZ59dffxX7+vvvv5XLScZVB+Pt7U0+5fgWyOWHDBmi3MKYMWMuXrxo
6NtxMMrrW9fsUdq9E6G/nRs3blyzCn3Tvvhi1fTpIVFRE2bPNoRZs8ZHRIxt
3rzZBx988KG9NG/e/JFHHtFXu0R3eiMi7V7GEmn3xgG2w4J2D7aeN9sIAd5b
QHodgIIM1isANRNsAQfvySCfm9c8iHe+hQC/rma0+yVdmQbS7vWKtHtzoTpr
qqSkpIwcOVII6ZIlS/bs2ZOcnHzs2DESND8/P1pIz6pa8Elap06dKl6isvuj
R4+K5QsWLDhy5Mj58+dpCa0jFn7//fditQsXLvj6+tKSyMjI/fv3//LLL8HB
wfTrtGnTdP6y/j+kTps3bxbvSOXmZ8+eFWofERGxY8eO3bt3R0VFidXo4B3Z
AiU6OpoWhoaG0kd3+PDhcePG0a9hYWEGvZ0cRXl965o9Srt3Infv3t27d+8u
q/z445Znn3381VcLtWxZqEMHQ2jXrtA77xQqWDBffgeSL18+m4PTnWtqF2iM
bVdi0B0AGQ+JtHvjWNiHIYB23/tziNZrIMB52/vPdh6wbnzXOAhwZjfwjhDY
QR2Z7z54PAR41pCKAYQZ7T62O9NA2r1ekXZvLlRnTZW4uDh6ilybnFT11Jkz
Z4SDb9u2zbJw06ZN/v7+lhZqld2vXLlStMKTCyuXi74B4eHh4leyP/p18ODB
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
JYB7RyYLAGvmd1kKAb5xM9p9dF+mgbR7vSLt3lyozpoyZ8+eFT67Y8cOm+f6
+PHjjts9bc3b25tWvnHjhmrljIyMoUOH0vpbtmyhX8nx9+/ff/nyZeU6okxf
UFCQ9b4SExNjNSM2Tpk8efLt27ez++rey8bu6fDEIAVKQkKCRoE+m1tYtmyZ
eKFyNdEvYuHChRqbck2U17eu2WPetnv6eqTrnf/855PISBPYvTZ37rBbt3ih
AF04coQNHcq73ztSqa9PH17oj1bOjjZteBs9qbqGxWcHrSYq9mdXrp9g0u5z
faTdG8cnaCC7//YdCHDgfLclEFOHOA8yrRs+s1uZsxBgwf+IQAjkywqOaBgV
BgH+pZnR7uf1Yxr4S7vXKdLuzYXqrKkSGhpKTw0YMMBmRTtycMftniQlMDDQ
uhVbPDV48GB6at++ffTr9OnT6fHq1auV69CvtDA8PNzRL+L/c/bsWTp+ei29
l1u3bmmvbNPuY2Njve6X0RM3H3K6BVFAb+zYscrVgoKCaGFSUlJO3oohUV7f
umaPedvur1+/npycfFLXfPXV4JAQ3lTtdkNH2LiRRUWxCRP0oXt3Xj1v3Dj2
2WeOEhGRLaGhrGZNPh9fuXLs2WezKFWKT/AnRutnB61QpAjXfPL37JAun/sj
7d441rRmCKDdx3WFmDYYYuYAiE/GOQ9YcADsG1/1CAR4UyV0NAQy7n52f4hW
X0CA5QTNaPdzvZkG0u71irR7c6E6a6qQWQhdJUH+6aefLly4cO++jJMyr1q1
SjzleM/8mJgY0QK+du3aq1evioUkwpGRkbTQ399f9HgXzfQDBw6kvYh1/vzz
T1H6nsQwR99G0nnh0ePHj7fuM2Adazc/cOCAOOatW7emPRj6HBzZQkpKyqBB
g7wUhfV+/vln+jUwMDC7yQJcGeX1rWv2mKft/urZs6cOHjywa9evOrJ0qdeo
Uax/f/cbOkJMDBs0iBe+04W6dXlJ/MmTWXS0DkRG8s751arxivpKypZlTz/N
q+hrU7x4Zv98YfHZIZObI+3eONxbM//7phBgIzLYPX7GQOcB7R6cCvCjdRBg
zfxZvhBIn4dNTSDmeUGAX1cz2r129Qlp93pF2r25UJ016+zZs0fIqQg5qRBt
keDgYJul7G3a/bVr15Qz4gUEBIjWfHGLwCK/t2/fps2K5eHh4bNnzxbKPGHC
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
9u3bt2nTRtq9G8nI4BPK24U+2z//ZD//zOLjXceKFezTT3mzO0m30ZDUt2rF
3n2Xt+ATYjACYw8oPMm+6JxfvHjWzyJF2GOPZY7HpwfWFCr0AGJu+gIF1Ih6
gJY56y3IuD7S7o0DbE8E7R7sYY500ibARuRpg50HnLC++iGIqUMgwIMfMQkC
+bKCQznAzw38SzOdC5Ddjw9mGvSXdq9TpN2bC9VZk/G0KK9vke3UrFnznXfe
6dev30R7kW33uRNS/tu32bVrWVy9ys6fZzt2cOles8ZFJCSwSZN4q/qHH2by
/vs606JFJuT1zZvz+nuCV17hgwJUIQcXnfOl3eftSLvPq3b/WQBE+5UQZU9D
dI91ntGhEGC1f3DCem1ls8u4TyCQL2uHeIaAnHEC/EsznQuQ3WufSmn3ekXa
vblQnTUZT4vy+hbZTrNmzebPn//rr79etpeVK1eOGjVKVtXLbVy/zkX+888f
ICyMt2iT85IFiwZuo2nShA/2r1WLD70nXniBlS3LnnlGN2hrpORK9SbvtkCi
rYpy6nnZMz8PR9q9cYB1xkC7B5txkdZzAnzvyNzlf1SCmOsNAY5oAM9ay7UQ
yESEYOP7zAEQ3ZZAmM4FyO616ytKu9cr0u7Nheqs2Ux6evqBAwdiYmImTZpE
XhYWFhYbG7tly5a0tDTrNbdv375s2bJZs2bFxcXROqmpqap1jh49Gh8fHxER
QZuaNm0aPd6/f7/G3jds2BAZGXnjxo2cfRFzEjrsHTt20JHMnj2bfh47dkz5
7PXr17+zlYsXL1rWocP76quvSG/pU6J3TS8x7mj1jfL6FtnOu+++u3z5ctVH
ZzN6zYiXa+2eDuzWLfNx9ixbtYpNnfoAgYGscmU+EL5+fV5n3gW8/DKfrq5K
Fe71xPPP8zr2xYvrBm3t4YcfcHZp3zJM2r2RgCORQbtvmwCBjHwnwKZYZNfx
HSDAmQ7+UxcC/NjBtns3jikAz9r6DyDMaPfaI2uk3esVaffmQnXWrHP58mUS
MS9bCQkJOX/+vGXNmzdvTpgwQbVOUFDQ33//LVbIyMhYvXq1zU0lJCSQYlvv
/ddffxUrWDaie65duxYREaE6HvoXw7LC7t27bR7znj17xArk8kOGDFE+NWbM
GKX75+Yor2+R7Ui7F3bfsCEfM75xo/mYPp099RQLCHiALl14Vb0WLfjccx07
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
BRDIiAYCKXcATsb34ZcQjZMgzGj3wyczDaTd6xVp9+ZCddaUSUhIoOXDhg1T
LkxKSlK1YpMIq1545coV4by+vr4HDx603nJ6evrvv/9Of5Xh4eGk9mI7c+fO
tfmNsmv3tIsdmrEovHKeOxGSelo+aNAgOmaxJC0tTUxvt2jRonv36/uRxVsm
vxOJjIykFaZMmUKPxd0AYfqWiHKC9CFkd8y5J8rrW2Q70u49hPR0PvHfnTs5
5sYNdvo0++or3tru4+Mk/v5s9Gg2ciRHlAsYOpQFBrLBg/n8fQMH8hX8/Di+
vnz9Fi1YrVp8xMFbb/Ex/krefPMBGjTgvPHGA9CS2rV53f4qVWxQqRIv7+9E
HYCHHnKXwspkG2n3xgF2dQbtHplUjgBvTYB2jzQi+0VBgGMK3vgJApxJULvS
ml2QORC1h4HbBdTzd7+BMKPdaxdw8PGTdq9PpN2bBZWkW5/KTZs2iaf++ecf
y8Lk5OSt/48oKKeye1pBlKEjZT569KjyKZL6mzdvqvZCWk1eL3Zkc454u3Yv
Stw7GOWQ+Xv/d3NVv33RaYGeym6P//nPf7z+P2ZBzKCnms5v48aNXoqpAHNz
lNe3yHak3XsIpPY3b/KGeCe4dIk33D/8MKtf30VUqMDr+HXrxmXfOei1LVrw
Hv7WvPYaq1btAVXPzuWV0NsnZHJbpN0bB+g7oN1H+UGAmgk2IiOzwnWPhQDv
yTT6AQK8OeDGqnqr2kGABQc6roAwo91rd6WQdq9XpN2bC9VZU+bs2bPCiHfs
2GHzXB8/flxl96dPnxYN3yT49HLV1ry9vWllMTueMhkZGUOHDqVXbdmyxXov
du0+MTExVjNi45TJkyffvn1b+Vrh5iq7p/frdX/mvnv3bz6cPHnS0rIvsnfv
XovdL1u2jB4nJCQoVxDdHlSl+HNnlNe3yHak3XsCx4+zSZN4w3fz5s5Aol23
LitZku3encXOnWzdOubt7UxTfp8+mWP2s6NdO16Zv0kTOwf29tvZQsdM7/f1
17nLP/44L+snqvwJ6FfRS1+F6NUvKFxYzWOPPTDwXzbl54ZIuzcOcAQ3aPef
BkFEBEKAs8YjvdPBtnuwh/n7iRBd4yDA4efIyHfw+waOaGi9BsKMdh84lWkg
7V6vSLs3F6qzpkpoaCg9NWDAAJvWtn//fqXdnzlzRgyoDwkJUenwvfsN94GB
gdbN3OKpwYMH01P79u2z3gs47v7s2bN0/LQFei+3bt1SPStmxFM1069bt44W
xsbG0uNp06bR41mzZilXEJ0WhJ+KAnpjx45VrhAUFEQLk5KSnDtmV0Z5fYts
R9q9J7BvH+vXj2tpmTLOIHT4mWfY1atZXLzIHX/YsMz+9qLLfWAg72lvF1Gj
T0Cmb02vXqxxY/bqq3Ygc7fLK6/wvxFyc8uofCHyJUqoR/SLQf2W4fnW4k8I
xy9UiCPtPjdE2r1xfIIGsnvfWRBgUT6kLB6BdC9vuAUCHJIwuz9E9UMQ4D0Z
5MsKztHQYzEE+JdmRrsfPI1p4C3tXqdIuzcXqrOmysmTJ4VckyD/9NNPFy5c
uHdfxkmZV61aJZ4Sdp+RkSGqx9O/D9evX097MGJrMTExog197dq1V69eFQtJ
28Uwdn9//7t371ofA2L3pPNCtMePH2/dZ+Ael8R/xIx7GzZsEEuSk5MHDRrk
9f+h9OvXrxfHbJnvnh74+fl5/b9OfkpKiljfUljv559/pl8DAwO15wLIJVFe
3yLbkXbvCXz3Hbfv7t3Zjz86w6ZNbMoU3lrdsWMW7drx4vbe3ll237Yte+GF
zNnxNKhQgf+0NKNndz+BRNtmxTwnoIh+9RYeeYQX5LdAv9rF8lpLX32Z3BBp
98YBTirn3nH33ZZARPeF+CzAecAbC8igAGJFRwjwngzyuRFIwQFwqoIxIRAV
TkCY0e61q09Iu9cr0u7NheqsWWfPnj3CXkVIWsUccyLBwcH79++n1Xbt2qUx
2v3333+nda5du6acES8gIEC05otbBKqy85Ygdi9G9NNBWm4mWGf16tXiGEJD
Q+fPny8a+qOiotLT0+/dvz8wZswYsQId/OzZs8XxhIeHW+5arF27lpZ4e3vP
uB96oDGcIbdFeX2LbEfavRtJT+ej2pUN4gaxfDkbM4bXtXPuOO/c4fcHihVj
NWpkUa0ae+453sg+dGgmzZpxJX/0URtz2CkpUiSri3tOoY2TaDMrW88OcnCL
m1usXJbEz0uRdp9X2+61S2rbBRwH7T0Xotph53nvKwiwYgDYNx60e3BUAvJl
BfvGg9838C/NjHavXUJB2r1ekXZvLlRnzWYuXbpE4mYxcYqfnx+58MaNGy2G
a2njtpk//vhDrJaamhofH2/xZdFkP3nyZA0rFDcTlJX9HA+JJO3L7ms3b94s
hgZ43S8GuGDBgjt37lievXjxIkm95YBJ/5ctW2Z54/fu91tITEwUDfpe92cK
+OKLL5w4WrdEeX2LbEfavRs5eZLP8/7ii7aLv+lI1aq8ozsJuNOHev0627OH
bduWxYYNLCSEV8Br1CiTihVJtXgjPnhVr8GwYfztFCnC6tWzz8svZ75xOsg6
dfgdiSpV+BE+9VTmXQiZPBBp98bR9HuG4F67B9vuB86AQI4cLIsHtkGfqAAB
Fr2P7Q6B9OoHjxw8a2AFSzPavfZfkLR7vSLt3lyozppG0tPTL1++fOrUqfPn
z4t2bSS3bt06ceKELpvSjs3e/jZDFn/27NnsjiclJeXMmTMaB0zLz507R+vQ
mk4eqzuivL5FtiPt3o0cPszndKtQwf4AcxCyWrLvIUOcP9TUVPbPP3xqPAuH
DrHFi9n77/MbFIJXXuHF90JD2dSpRjFhAp8jr1gx7uwq6A2+8Ya0e4+LtHvj
SGrMEEC7R6aMJzovg+izEAKZHG3ATAhkVjhinhcEMhUgAU7nh5TFmzwcot0q
CHBIghntXvtr7O0v7V6fSLs3F6qzJuNpUV7fItuRdu9GvviCffwxmzyZbd9u
LOHhfE55p3vmC9LTueNbuHuXXbvGzp3LYts2Nm8eL5oXGGgU3t7c00uXtlFm
v1MnbvcFCmQWtCfocf78vPyd6NJPjwkxyt6gue1kh3/XR9p9Xu2ZD/aN/2Qc
BLj3D790HrAROdIfostSCFDPZwyEQL6sYNf6Z85AgH9ppnMBsns7Q2Ok3esU
affmQnXWZDwtyutbZDvS7t3IihWsf3+2cCE7c8ZYFi3iajxgAEtONpD//Ie/
FycmyLOmVy/bdOzIC/eVLMnat1fTpg1vr2fZTF5vjRGRdu/6SLs3DrCKOGj3
4Nxq4LACcAA40n4NVl9HbiwQgREQoaMhpgyDcONEhA22QoAdNkznAmT32p+n
tHu9Iu3eXKjOmoynRXl9i2xH2r177d7fn61axdLSjCUpiXXtyme169HDQLp0
ySykj1O8eNa880oKF+bt7w8/bHsy+gIF3KWYMm6LtHvjAMu7gXY/cwDE+GAI
cL77iSOdB2y7R3ZNgCcdnNIO0XMCKYsHFmoAPzcQ07kA2b12fUVp93pF2r25
UJ01GU+L8voW2Y60e/fa/YABbPVqw3e0dy8vdvfqq3wggLvo1Yt17sz7zztC
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
g8AikAGfQZjOBcjute+P9Rso7V6fSLs3F6qzJuNpUV7fItuRdp8jmjThl50n
T+qztZzWzBd2X62aIW8tI4OlpeVs4nslV6+yf/6BoK/EtWvs+vVsWbKED89/
4gk+NiGnlC37AE8/zQcClCjBq+21asVvsxBhYSw0lBdDID79lE2YwKHv6rhx
/KQHB3Po2xsUxMaM4XUCiVGj+G2Bxo3Z669n0qABq1+fnyNmjN0XKCDt/oFI
uzcOsBUYtHtQz4dPhmi/EgKZuxys9g/2OgBHvs/1hgAVu8FW5wHnu2/1BYQH
zoin3ZVC2r1ekXZvLlRnTcbTory+RbYj7V7avVLwnSMlhTuvt3dWM7dz9Oun
BUk0/YyKYt98A5GYyGJi2MyZXN7r1WMvv/xA3X4VqsEU9AWwQMfz1lusdm1e
E0A1iOCxx/gfpobIOx3w5Xkv0u7zqt2DQ7BBXeq0HEJ7ti9twD7e4JTxs/tD
ILc1iJZrIZAbMuDdJPBj/2QchOlcgOxee6SDtHu9Iu3eXKjOmoynRXl9i2xH
X7u/devWTc2cPXt45Ehp97nU7p3mxg3eAi5aro2jcmU2YgTvww9WGKDT99NP
vPL/kiVcz6tU4X3pnaN6dd4TIDuLV7XdW5DRMdLujaPLUoYA2j2o5+C8cm4c
dw9OWA82Ii/4GAI86WCPi5f2Og84FgMsZgj2FTGdC5Dda//rIe1er0i7Nxeq
sybjaVFe3yLb0dHuU1JSQkJCAgMDB2cfX9+P33yTd2+Wdn8vD9n96dO8EdzP
j333nYF0784+/JB16ZI5QN45vL1Zx468Z/4bb3Bq1WI1ajg/i1+VKrwUgKj2
7yBPPMGKFGGPP54JPSYKF1aXCChYMKt2X/78vE++qN2nYzeAvBFp98ZRfxtD
AEUPEWRCe74tu4CKjUzG13oNBOiJ4McOzhoP3lBCGDYFAhzRENcVwnQuQHav
3Zmhr7R7nSLt3lyozpqMp0V5fYtsRy+7z8hI/+efI35+/by82np5tcmOXr3e
fe01afeZmNTu09NZcjL/EEjqBdu384bsoUPZvn0oe/eyPXv427Rm8GDWsiWf
tq9duyzat7dPhw5Z0EuaNuVeXLUqb3mnDxOhYkX2zDPS7t0ZaffG0W8+QwDt
Hql/TrRbBQHaPVKNcGEfCP9IiKTGEBNHQnywHgI542DX+snDITywqp722BZp
93pF2r25UJ01m0lPTz9w4EBMTAwZ2ahRo8LCwmJjY7ds2ZKWlma95vbt25ct
WzZr1qy4uDhaJzU1VbXO0aNH4+PjIyIiaFPTpk2jx/v377fe6YULF+jPdsGC
BfPmzVu7du2pU6ec/EY6ELv7unLlSmJiYvT90AP6NadbuHHjBlnt/Pnz6WOk
j+X69evGvZ0cRXl9i2xHL7tPTb36ww/lmjZ9fOrUx+bOzZZp0wqRoAUHS7vn
mNTuL1/mDegvvsjb6wW1anFvnThRh9L9t2/z2wXbtrGff1bz5Ze82F3v3lzw
6VskaNUqkzZtOG3bPmD9pPMdO2bRuTPr1Im9/z63abLsJ598YHY/R6YCVFK0
KFdvkm4xL57gf+ydB3gUVffGr50iRZCuCAooUlQUbCgiSpNPEAQUlKYQOiG0
QCACEqpBmggI0pEqKEF6EwUBEQVpfnz0JkgVElrC/xxu/sMw2Uw2+87uZrPn
fX5Pnt3Z2buzO4POe+8p5MTtueceKzSCS+cuLt4dibv3HmD1ddDdR/WAWFgD
Agy0Ht7ec8B+95MaQ4Br0D2iIN5cBoFEHYAf3b0/BPjpgeju689UNoi7d0ri
7gMLy1lLqjNnzpARa+FK/fr1O378uLHnpUuX+vbta9mnZ8+ep0+f1jskJCTM
mzfP5VBz586Nj483hiL/26pVK/MOISEh5Aqdv17d+Kxdu3a1b9/evEOHDh1o
o/sjkJfv1KmTeYeIiIhTp0554+ukVub7W2Qc59z9uSVLuLnYhAnc4i05Jk9m
e0V3buLubwSsu//7by5AlzevKlMmkVKl+OngwQ4Mfv262rSJjfzChVa+/Zbr
4DVpwvH5RI0aiX81xhYzb7/NGI/10n+lSuzudfk7emCgl9HdJ1Mm9uZkvbU9
N0ix7r3L/SUf3zOJu/ceYOo66O7Bqnpg8XYwsP+L1p4zuAsEGJkPTmsgX5yo
uhgCWbsHOzCC9QCDsN993VnKBnH3TkncfWBhOWsWxcXFhYeHa0M6derUrVu3
njhxghwcGbQ2bdrQRnrVWMEfP348bQkNDSULv2fPnoULF3bu3Jm2REdH6x1o
ox6K9ty9e/fx48dpy6RJk/TGFStW6N2OHj2qzTK9cePGjb/99tuoUaP0PrS/
s5drip9F365Lly56KmPz5s2//vprVFQUPaWNV69edfNov/rqK3pKb6Sfbteu
Xb1796an/fv3d/a7eCbz/S0yjrPunuzV4cPq6tVkOXmS+4hJVT1NgLr733/n
ZfH331e7dyeyejWXjh861IHB6cLImpU7yL/2mot69ZUrq6pV+S89pR3Kl+f2
c7RzmTIcP/Dkk6pYMfXoo+T4uNhd3ry8Op89Ozv3DBluWy5XStbE04nE3XuP
oR0Vgn/z7ue8CwEWrkfqAYLTGuBZ++0ZiDajIIZ1gECmNcCCfmDBgZn1IQLR
3dtPtnzcQdy9MxJ3H1hYzppF06ZNo5dat25tXqrWOnLkCG2nVzds2EBPyerq
p8uXLzf2Wb9+vfa5Fy9epKezZ8+mx3369ElISDAPpWMDhgwZop/Sv1Z6GhYW
ZswbxMfH9+jRgzbOnDkTvD4tSvGzDhw4oL8CfV+9A9l5veV///ufOyPs3r2b
Hrds2fL8+fN6B3qgJwT279/v7NfxQOb7W2QcZ939f/7DGdk23u3sWSUd8Qxm
z+ZKccOGqb173WLnTjV/PieM+/dH+O03DsBo0kSdOpXItm2qdGmuqrdmDUpM
DJtuGr9lSx7QQseOnN1P0IMOHXgL7fbxx+qjj1TjxvxjNmjA0fh16qh33uFl
+mrVeAbgvvsSM9lThZH2boMRkK9nDES+l7h77/H2dwoBdPdgkbTXV0LYt+tK
kcmNPGfG+xBg7XcwMn96A4g+vSAi+3gOaM+nfAiBXDBEILp7+1gIcfdOSdx9
YGE5a2bFxcXpBfqFCxe6PNfTp08nl0qejh4fP348MjKyY8eOhoclXb58WRvh
gwcP0tOxY8fS45EjR1rG2bFjB9m96OhoHZw/a9asrl270l/zPnPmzKH3jho1
KlVXI5nNqVOnmmP+LUrxs8iA669g5NrHxsZqb75z5053Rvj222+TfusvvviC
NtJuqfo63pD5/hYZR9x9qnDW3X/7LZviV19V4eFu0aULZ50/+qiffwRy9w0b
sq02+t2fOcOl48ntZs+Oki0bm+Xt2/lS+fdfF1y8mIhl+4ULiZw/f4t//lE/
/sjWmw6PfrdUUbgwxwAQ9F76S0+JQoX4sf5L2w0efFAiAfwjcffeAykNR4Du
vtIKCP92xEMqBkz9AKLdCAjwdwNdKjgngwR7vLoWAqyWMKQzRCC6+9rzlA3i
7p2SuPvAwnLWzNq0aZM2tkbivEVxN2VzMfz55586Cf3KlSv0dM2aNfopuVpz
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
9HFOsXOn6tdPvfGGevddxyhRgivPv/02d6/zgEaNONlBS0fL3303lyawcP/9
Pve9wSFx994DXP4G3b1/7XmHYRBIQb8mEyHAtftnf4UAPx0MmUA6CYJV9cDI
fHBKJxDdfZUlygZx905J3H1gYTlrNiInS5b20KFDx48fT22EfFLFxsbu37/f
kaHsZVNsP7XjHLmpK1eueDYCfdNjx47RCHFxcY4ckiMy398i44i7TxXi7m+k
xt0fOaJ++UX98INjRESotm25i73HzeuT8t57iX3k7bPddev5pNsLFFC5cyeG
1uuS9fRXl7I3Y+lV53IdX48gSpXE3adXdw+6rXqzIMC4BaSlHVjMsP1wiBc2
QIDt/EI/h0AuVzCnwL57e4rYW90UCUR3b19mUNy9UxJ3H1hYzpoo2GS+v0XG
CRJ3f+0afzROhQp+dvebNnGvc88Wvo8dY0vuS3dP1v6bb/gTnaJuXa7mN3y4
J63nk6N7d+5VR+6eDHhSV25g7imfHNqeJ21OpxF37w2Ju/ceYOd00N2HD4AA
Y7xBm4nExiML0ATSjI8A16DBvABwcgAKbsfcfe15EEHo7t9cpmxo1lHcvTMS
dx9YWM6aKNhkvr9FxgkGd0/W/vBhNXSoAxQvzmbQj+6e/HK2bOyvPWD1as6X
96W7r12by8iHhDjGK6+oJk3UjBl8mTnFvn1qyxYVHc3/lDJndk2mTIkGP2vW
VCDygcTde4+AXrsHzRoY2N/yS88BkwJ69YWotAKi/kx/gvzs4PUG/m5B2O/+
jeXKBnH3TkncfWBhOWuiYJP5/hYZJxjcfWwsG1KwDZymWDE/u/tff+Ua7IsW
ecLMmdzZDXf3f/zBPeA++EAdOmQH/UovvKBeekl16uQY1apxnvuoUWr7difZ
tIndfZYsfH6feMI1hQpxZH6RIrd47DHeWLBgsmTPnlgwn8iWLbHmniVcXwRK
3L33AGO8wf/Ygp+OGD0C/HSkczp45GBnt4cPQYBpBWDNfKTJAvi71ZoPgVT7
JwLOC5C7f32FskHcvVMSdx9YWM6aKNhkvr9FxgkGd//XX7zQ3LZtwLv7+Hhe
aK5QgU2uB7zxBleQw909Offy5dm6liqVApkzq65dOd/fKebN44mF/Pn5iziI
Nu8NG7LN37bNNT/+yJ8+efItvvhC9e2rwsKSpVs3rgFIfPqpatdOPf30rbkC
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
sIc8/jPPqKeeusVDD3Gne3L35gAAl0jd/tRK3L33ANevQXcP+kT/9rtHfjew
XD8SNkDkOgkBfjo4qRI+wHPAMw5WDAC/eCC6e/vmC+LunZK4+8DCctaS6syZ
M2TEWrhSv379jh8/buwZFxcXFRVl2WflypXGDgkJCfPmzXM51Ny5c8liJ/30
zZs36x1Onz7tyPWZVBcuXIiOjrYcD/0Xw9iB3HqrVq3Mr4aEhJBFNXYgL9+p
UyfzDhEREadOnfLSATsr8/0tMo64+1Qh7t6euDheef/jD5QNG3ixvnFj1ayZ
a+ilsmW55J3Oi7eBdtDF8I2S+CnW0zOwvJQ1K9fSJ4zS+lmyMBky3AYZeUJ3
uteQr9ch9/TAnjvv9I9HDlyJu/ceYCYy6O4/D4UAI6UHhEMg8xJgebdPe0KA
/e7Bn73npxDI9QZ2SQD7GFZdDBGI7r70H8oGcfdOSdx9YGE5axaRYQ8PD9eO
derUqVu3bj1x4gQ5ODJobdq0oY30qrGCTzvQlo4dOy5ZsmTPnj0zZszQbzQc
H23UW8aPH7979+7jx4/TlkmTJumNK1asMH90QkLCmjVr9Kd41d3TwdD4ZM/X
r1+/Y8eOL7/8Un/iwYMH6dWjR49qax8dHb1x48bffvtt1KhRegc6eD3CV199
RU+joqLom+7atat37970tH///l46YGdlvr9FxhF3nyp84+6vXeOG76dOqX/+
CSTogA8cUKtXK7oSQL79lrvv1amj3nvPNXXrcts7ssOZMiU6boIeuyRjxkTf
fc89/BZ6amwxPzaMuRmzbSefrvPoDTNOAxIiP0rcvfcAK32B7h50qX0iIcDv
PqSz54BV9cCOeLn/hkBWz4kvW0L0/sRzwHqAoD3/YCpEILr7UtuUDY07i7t3
RuLuAwvLWbNo2rRp9FLr1q3JtFpeOnLkCG2nVzds2EBPr1692q5dO3pK1t7Y
Ry/lz5s3Tz+dPXs2Pe3Tpw85d/NQOjZgyJAhxpaTJ0/SU/NquJfc/alTp0JC
Qmj8nTt3Ghu1PdfL9/SXHoeFhRmTGPHx8T169KCNM2fOpKe7d++mxy1btjx/
/rzegR7oCQGXiQlpTeb7W2Qccfdp0N0fOqSmTFHt2qlOnQIJOuB33+U+dJUq
oZQrx8vuefKoxx5zzaOPcpa6eZ2dICNvrKpb0Paf3DqZcctSu4G0ugtEibv3
HqBPBN09uIz76lqIxpMg6s/0HDABvNkECLCmH9jvfmhHCCQ2/t05EOA/FnDp
PxDdfcntygZx905J3H1gYTlrZsXFxeml84ULF7o819OnTycbS55O77xs2bLJ
kyfHxsYaO+jJgUmTJumnY8eOpacjR460jLNjxw6ye9HR0UZwfkxMjJ5VWLVq
lXbKnrl7MptTp051GfOvNX/+fBp8woQJ5o1HjhyhQ9KfOGvWrK5du9Jf8w5z
5syhd40aNYoef/vtt0m/1BdffEEbaTcPjtnHMt/fIuOIu0+D7n79ejVkCOeV
d+gQSLRsqapX5xXtYsVQdKI6+XHdk84lOXJwqLyOjTci5PVafHLoIHlzzLwZ
USBK3L33aPmlQgDdPVhcrs5cCDA8HlmHBRvWg78bmPUP/m71ZkG8943ngHXt
wDoPyJETgeju7ZsviLt3SuLuAwvLWTNr06ZN9uvmcTeV3JVARq9Dhw709s2b
N+sta9as0UnrZHvNCftJtXr1anLlOnVdRwh45u779+9P7504caIlWsCQDqrf
sGHDiRMnVq1aRR+6bNkyemw/rA42IF9Pj0eMGEGPY2JizDuQgaWNw4cP9+CY
fSzz/S0yjrj7NOjuo6K4OPygQeqrrwKJkSNVq1a8wJ3cArr7kK/XcfKWfHYd
CZ8coiCUuHvvAeZQ+9fdgzbzwykQiEEGy7uBzQLA3w1s+/7OtxDVF3kO6O4b
TYZoMB0iEN39kzuUDeLunZK4+8DCctbM0gvooaGhqb0GyL5169ZNzwxMmjTp
2rVrentsbOzgwYONYPvw8PDJkydv2rTJvsI8snZ/+PDhtm3b0tunT5/ucgcd
/6+DEIwDa9269U8//ZTcmMYcxb59+278v9OnjUn3CYjUe/P9LTKOX9x9t25q
61a1d6+PWLpUNWgQSO6+d29uBjd2rPrhB8dYtEjFxKiFC73IvHkqOprbzyUX
b//aa9wL3hJOnxxZs1oh/07Gnx4k9xY9MyAKKom79x7NxykE0N0jwe0EODUB
rqUiOftgK0DQnoORA1E9IMC1+9dXeo5/1+7BTJBAdPfFdyobGom7d0ji7gML
y1kzizwvbbe4sJ07d06cOPHrm5pwU9OmTbO8sV+/foZTnjp1qrmZ3dWrV2fN
mhUaGmrOqW/ZsmVMTExyy+uIu79hikBwGSevM+hJXbt2XblyJZn6AQMG0FP6
0CNHjiTdf8uWLTpP34jV1192/fr1ST+0d+/enh2zL2W+v0XG8bG7P3dORUaq
hg3Z4EdE+IhWrdhXBpC779uXf6WlSx1oLWdw8SJPrXi7sN7ff6vDh5Nl+3Zu
D1ewIOfme8Ddd3O6PY3w9NN23HWXv4ymyA8Sd+89wAppoLsH64zVmg8BdigL
GeM54EeDv9ugrhDg2j2Y9Y90nAcLNYCtAMFIlUB090/sUjaIu3dK4u4DC8tZ
M2vu3Lm0vUuXLuaNq1atanG7yAhb3khO/NSpU0uWLCHLTDuQX7bsEB8fv3fv
XvpXOWTIELL2epwxY8a4vKJSdPc7duzYaCvDwpv73GnpI+zQocO5c+f0luvX
r+v2dka5AENr1qzR1n7EiBFGQIKeDdClBQ2R2W9xs2NgcsecdmS+v0XG8bG7
J485YQL9n4j7nXXv7iNCQlSFCs64+4oVuQn7okVqyxYv0qYNz34sX+7YdEFs
LKcn0AlautSfzJnDOfUvvaSqVvWEIkW4j/yLL/IIFp5/XpUurUqVYnRxewSj
YL5E+6d9ibv3Hv7tiAe6VLBIGlibDonMB909uHYPBmyAvQbAAHXkjIOFGmrP
gwAnowLR3du3VhR375TE3QcKFpOe9FSuXLlSv3T27Flj44kTJ376f+mCcknd
vaFff/1Vj6C9M5n6S5cuWfahl8jX691c9ohP0d3rEvduasuWLeb3am9uidvX
QQuWSQn9ZUnjxo27evWqsV130LO081u+fHmLm030kjvmtCPz/S0yjo/d/Y2b
LdFHjOCqcT6ja1f15pvOuPvy5dUTT7DHLFfOizz2mGra1El3/9//csk7RzLi
ETJm5IV1OiOeTQ706cMZFjVrWqGrrmJFDgnIn98ZChTgsn5Erlz+8qwidyXu
3nuERSsE0N33iIJ4cxkEOLOBZL6DIRMdhkGAVfXAmvlI0Xui4irPQXL2ibqz
IYKwql7RPcoGcfdOSdx9YGE5a2YdPXpU+9mNGze6PNf79u0z3P2VK1f+97//
7dixw7zDtWvXdJs8GoFGCwkJoZ3NgfpaCQkJnTt3pt3Wrl2b9FNSdPcxMTFT
bKUHJw0aNOjy5cvm92pvbnH3dLQtbnbuMw5P+33S3LlzLRkEM2bM0NvNG3XY
g6UUf9qU+f4WGcf37v7aNfXLL+rnn33HjBncqc0Rdz96NHvMnj3RG1d7KldW
bdu66+7p9zx2TC1ebOeLx4xhX/zss1yvz4/QVytVinsBeJZh0bixeust/nEs
VKqkypblEvqPP36Lhx/mLeaK+u6j0/yzZePifqI0LnH33gPMBQb/MwguYYP1
2cC1eyTKustgCLChHji3AE4OgMnvCGBPOjDUBKwyEYjuvsh/lQ2Nuoi7d0bi
7gMLy1mzSDesJ4fu0rVt377dcPdk7fVjc0c8eqy9+e7du+Pj48PCwpIuc9+4
uabfsWNHemnbtm1JPwXMuz969KieYaDvYj42Ld0Rz7JM/91339HGKVOm6Kf0
oMXNMnouJx90Ab1evXqZN/bs2ZM2rlq1yrNj9qXM97fIOL53977HwZr5Z8+q
v/7i2Qmv0rIlxxu46e5jYzmYPzSUC/ElR926fGo+/tjPJ+LCBfXee1x2r3x5
J3nhBVW8OEfUP/fcLQoXVpky+ctxinwncffeA0keJ0B3DwZpg5XnwSJpSHR6
708gwEVkMGSiXwQEuISNxMZXXQwBtiqosgQiEN39Y3uVDeLunZK4+8DCctYs
OnjwoDbXZJDXrVt38uTJGzfNOFnmOXPm6Je0uzeW6adNm3b9+vUbNxPYJ0yY
0OJmVvuVK1doy8SJE/UK+IIFC86fP68/gmz7yJEjaWPbtm3NEe+GEHdPdl4b
7T59+iSNGSCdPXtWd9xbtmyZ3nLixAndyE+n0v/555/6mH/66afrt4t+hxs3
2wLq/Y3Cej///DM9DQsLs+8FkEZkvr9FxhF3nyri4tTp0+rIEe9C1j4iwl13
T/tHR6tOnezukxs14gj2Jk3U5ctOcvEix/xv2OAua9eqzp25DEKLFlaaN1cf
fMDlEcj7myHzTla9YEE7dAj9XXfdFl2fPbuHWfN33OGM6xT5RuLuvYd/O+KB
LhWcHADNWujnnhPRDwLMu6+8FOLTCAikLB6BTEaBhRrAtfsgrJn/6P+UDeLu
nZK4+8DCctaSauvWrdq9apFp1T3mtCIjI7dv3673JP+rN3bq1Gn8+PG9evXS
T41+9xcuXDB3xAsNDdWr+XqKwFJ23hDi7nVGPx2kMZmQVPPmzdPHEBUVNW7c
OD1HMWrUKG3e+/Tp0yIZDRs2TI+wYMECvbg//KZ05b3k0hnSmsz3t8g44u7T
IP36sbv/7jtuMZAiP//M8eqRkdxuPjk6dFB16qh69ewK2nvA3r1q7lw1eLAD
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
EEh4eavREOEDIMpsgQB7DYC1EJG8e6TePgHGikhkvkgkEonM97fIOGnQ3f/2
G5d237DB1+4Vr5kfuFy5ouLiUoDObObM3NT+7bddr8vXqqVeeYWX0Zcts2PC
BDVypBoxwgWDBvH8wH33sZ3PmTN1kPfPmNFFSEbBgonx9hZ0HL4Z3dT+jjtc
IEqzEnfvPcY1VwiguwdNLlgCPWQMBLJ+DQYtIM34CLAxXK++EGBVPSTc4p1v
IcpuggBDTcTdi0QiUTqQ+f4WGUfcvUHQuvurV9V333HVu3Hj7CD3/cADnFm/
ZYv64w8X/P47F9N780314Yd21KvHJQ5c8vbbHJnfpIkKC1OdOqWO0FAevG5d
F7zzDuf7Ew0aqPfe4wgNXc+fttesyRdtjRqqenWeWHjuOV7uz5WLyZ2byZOH
oxGyZuUJAaPZvV7ldx9jfkAmChyXuHvv8QkqyN2DscpgkTTQYiPzEt37Q3za
E+LVtRCDu0AM6QyBXKxF/1IIYKwI+C9N3L1IJBKlA5nvb5FxxN0bBIS7T0jg
ngLOcuGCGj78VgW85OjcmZfI//yTG/8ld2y7drHFrlLFQypVUiVKcIoEHc/I
kS6g7ckxdCgH/IeEuKBVq1tl/cLCVPv2qnVr3kgvffyxataMzzsddsOGfACF
C3OCv0HBglyQ4YEHODBAW3Ujht+Cy2h/cffelrh77wGWdwPdPVg+Haw83787
BJI83nwcxKCuEOCsCBjYD2b9Q2UiekP0i4AAY0XE3YtEIlE6kPn+FhlH3H0A
ufsrVxIL1zvItm3ctO7ZZ/l2ul8/O3r14lVsG3d/42YYwN9/c9cDzzh8WK1a
xb67XTsX0Pb69ZOt11erFi/916jhGnpJU6UKL9AXKcJF+zVJS/c/+mhirf4C
BThtP1cudvdZs3KpvUyZuKI+iQy+KC1I3H16Xbsf2RaiZ18IMMK8yUTPAac1
wBhvsOh910EQYD4FcrE+fEghgBkN4L80cfcikUiUDmS+v0XGEXcfKO4+Pl6d
PavWr1crVzrJ4sWc7U4mNzpajRplx2ef8dr9mjU8w+Cxf7eHRv7xR67O16yZ
Cxo2VJUr8/K6Z1EBb7zBWQOvvspGPnduF/X3iIceutWDjx5ra68r6id193fc
wX/1g6R5+pK27xuJu0+v7h6MjQcX33tEQSC91cAY7+gwiI+/8icl/oRALlaw
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
5hvVubPq2NErhIaqtm1VmzZep1Ur1b69ioxUvXqpnj05379HDxUezsEDXbvy
F+zUSYWFJVYbaNcu8S1Ey5YqJEQ1b64++oiT95s04SD/Ro3UBx9wh7sGDdR7
73GUfr16qm5dbnb/zjscsf/22+o//1FvvcVUq6aqVlVVqnALv0qVuFnAa6+p
ChW4rqAO43/pJY7k1zEMzz3HwQZPP62eeoqr8esCfU8+mdgU7/HHeV6CnLh5
ekFPKegJhOzZeXJAzwZkzHird565R565TZ4xLSDB+elD4u69x7I3FQLo7od0
hhjUFeLLlhDd+3tOdBjEqDYQ4M9eaz7ES//H3n2AOVG1bRwfUOlFehOQIiBV
QQFpCwgioIgUCyIgKFWxvKIvAkqVIhYERBCVDwERVMTCK0iVovQuTXrvILDL
Arv7PbMHxzHJZic5yWYT/r/rufbanUwmJ5Nk9tyZmTPLtSqEY+ZrnpLQeI5W
ke4BIALY+7c6y0mV6T6Url27sHx51EcfRY0eHfY1blzUlClRX3wRNXly1P/9
X9SkSVGffx712WdRn34aNXFi1CefRE2YEDV+fNTHH5vPd+zYqDFjrt9x1Kio
99836913o0aOjHrnnagRI6KGD48aNixq6NCoIUOiBg+OGjTIrAEDovr3j3rr
rag334zq1y+qTx+zeveO+u9/zerVK+rVV6P+8x+zXnkl6qWXzOrZM+qFF6Ke
fz6qR4+obt3M6to1qnNns559NqpTp6iOHaM6dDCrXTuznnwyql69qBYtzHr0
0aiHHqpRt27FsmULlC1bSKpMmUJ33FGocOE8kujV+Pn2sqa4Hxggv8tdbrrp
+k58Lzv9kZqlTLq/v/qCUNXyUwmhqhX3GTqlme6/aKtVmldO/7SjVumMWv/8
aK3SPDJf87rt7f5Pq/oN1CqdSyhOeE6rNE/bf3KaVpHuASAC2Pu3Ossh3bu7
evVcTEyE1OXLruV9/ujoZOrSpWTq4kVvdeFC8vXXX64lzp+/Xrt37/r22287
dnymS5fOqsTDDz8s2TxPnuunFTiv7NnNnfgS4dUefzXgnstQAwwLkJqR7oNX
U9sYOqWZ7nsN16rQDoH+3AT/q+s4rdI8RLzSBq3STPf/HapVbwzxvzS/FdG8
WEDDeVpFugeACGDv3+osh3SPYIuPjz979uysWbO+DoTRo9/573+f/s9/7nnr
rapWdex4Z6ZMZlRX5/g7r8yZzQifNu31LC9T1Jn+6dP/c16/+sV+eT7/9uxz
GEAwkO6DV5rHeGume80z3zVHh9M8QF3n3PMH/6dVw17XqiprtErz+HbN0RJ0
zsXQucyBlOYFHFvN1CrSPQBEAHv/Vmc5pHsE27Vr1/bt29euXbsnA6F27QrV
qxsDBhgffvhP/ec/5jn41ln2zstlmL4iRcyB/jJmvJ7uJchLorefuW8lfXvM
98j9CH/71wIIFNJ98GpUT0OnNNO9ZtDT/GpCM+vpDIunue9+yBtade8qrXrs
K63SvFCCzlH9mt8mvT5Mq+os0SrSPQBEAHv/Vmc5pPvIFh0dvXnz5nUhtWLF
3MmTX3z44Up9+5Z/6y3deuyxvNWqmUP8Pf/8PyV/li9vlCrlT91xxz91993X
B/QrXdr8s2RJo0SJf6pQId199xzkH3Ck++BVaK+ItzhKq94coFXfP6xVOkfm
a7b8k2e16pnPtErniUuN6KVVOtdA1BxpQfPAfkbVAwDY+7c6yyHdR7azZ89O
nz79s5AaNer1Z581atY0PvvMmDpVt1580Rxsv3p188KCKVANGlwf8F/qrrt0
oygD9Qcc6T549b8HDZ3STPcj/6NVdRdpleZ15V740P/q9pFW6QzXL6V52r7m
6HC/1taqz57xvzQPG9AcMeDZT7SKdA8AEcDev9VZDuk+svXt26hu3bIdO5Z+
8cWQVefORRo1MqpWNVatMrZs0a1ffzWmTTOGDTNGjnRagwebV+iTnO5HtC9V
yjwZP08e80p8uXObZ+XbSx2xb12Gz71cTgTgmPyAI90HrzQHMNdM99+00CrN
famaI/brJDXNgemmP65VmmPm61wsQGpsd63SOe9e8/qPmqexaJ5PQboHgAhg
79/qLId0n6pcunQpOqBat84u+fTxx69fyz4k9cwzZlKuXNlYu9bYtk23Nm40
Fi0yPvnEhxo1ymjY0Lj//uTjfP36/6qoKKNgwesj6kuWz5zZ9Yp7KuC7RH57
Zcz4T8lCEHCk++DVtCcNndJM9189plWaVyib1F6r3nvZ/9I8On18Z61q+bVW
aZ4XoHk6hs6+++8e0SrN6xhaF773r0j3ABAB7P1bneWQ7lMJNbD8e++9N3z4
8BGBU61ahn79jKVLje3bQ1YbNhiTJ5tZuHFj4+GHdatpUzOG167tQ1WubBQo
YNSpY97XpZo0MVtlVe7cZpwvVMi47bbrlSXL9bH11LB7LtfLU8PrqaH11aD6
Vqkz9F0KAUe6D171HWTolGa6f7u3Vk3spFU6h9ZL6YzIp/nQmuutxnKt0hwS
UCeeS+mcSKJ5UoB14Xv/SvN8CtI9AEQAe/9WZzmk+1QiLu7a4cN/du3a6bnn
nu7cOWBVseItEycaJ0/KmyRkdfmysWKFebm6UqXMAet8rdKlzbKPbuexbr/d
DOOFC3uoXLnM3e41a3pI9w8+aDRq9M++ewnpEuezZbte0uYMGa4Hc5fwbkV4
4T7UHkfgpxjSffBK81RizXSvmRM1r1DWfaxW6bRcc1w7zWvSNfpZq3SuOC+l
eXx7z1H+V5/BWlV1pVZprnbSPQBEAHv/Vmc5pPtU4tKlo9Om1WzbtsDbb+d7
9938gar77kvz6achTvdxccb588bixeYR9arkd+cl8//0k/Huu8aIEUnWwIFG
x47mqHe1anmo++4zB8CvVMmoUsW1JPvnzm1eTU+VGtbePb8j1SLdB690z3zX
S/ftJ2mV5gXENVOqzin/msd4a45rpzmY4dcttWpBfa3SOZlCcxzFpj9q1aC+
WkW6B4AIYO/f6iyHdO+3uLi4y4Fz4sSOd94xnnrKHFj+yy8DVg0bGu+9Z2za
ZBw+HJQ6dMiH2r7dPHFeHa6/Y4fTkpnXrDFXy4QJSdaoUeZ18e6++/rg9i5V
p455DID9yndWqQPvEb5I98Grt3RppXvN649rHpk//36t+uDFkJXmUQeaQ8cP
eFOrSu7SKp03q+aZ75rjAWp+0kj3ABAB7P1bneWQ7v0THx9/5syZAF4UfunS
n1591eja1di/37hwIWDVo4e5h7p2bdfx4gJV9eqZF4xzWMWKGUWK+FOFC5uj
1qvKm9dDyfRs2cwB7pIauz5duusnzrsUh9CHO9J98ErzXGDNdK9z7XKpOY21
SnMM8ylP+V+ah9a/86pWaR6grjlWQ+W1WjX0v/7Xf0ZqleYojpoH9pPuASAC
2Pu3Ossh3fvn6tUrf/yxfvbsWT/9FJiaOXNC587mCPOnTwfyqPhBg4waNczy
aRi6ZKt6dfNLg7JljeLFzczusNTZ6y6XkHO5ZpzHsmdza0Q7e0h3OKidSxHt
IwDpPlL33WteeF3zUGfNoe10SvPS568P0yrN8Qo0zwsotkerdN6sj3xn6JTm
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
X7V37/Xas8fYvdusP/80tm0zf1q1a5eftXOnt9qxw7W2b/+npA2q/vjDtbZu
/Vdt2fJPbd78T23alExt3PhPbdjwT61f/69at8611qy5Xhs3Vj906FCoPzgA
AACAFtI9oO3xhIQoL3XlStTVq1Hx8dcrLi7q2rXrJdNVyTxSsbHX6/LlqJiY
6xUd/U9dumTWxYtRFy78q/76K+r8ebPOnbteZ89GnTxp/rTXmTP+1OnTvtWp
U9dLGmDViRPJ1/Hj1+vYset19GjydeTIP3X48PU6dCj5OnDgeh058vzFixdD
9vYBAAAAAoF0DwAAAABAuCPdAwAAAAAQ7kj3AAAAAACEO9I9AAAAAADhjnQP
AAAAAEC4I90DAAAAABDuSPcAAAAAAIQ70j0AAAAAAOGOdA8AAAAAQLgj3QMA
AAAAEO5I9wAAAAAAhDvSPQAAAAAA4Y50DwAAAABAuCPdAwAAAAAQ7kj3AAAA
AACEO9I9AAAAAADhjnQPAAAAAEC4I90DAAAAABDuSPcAAAAAAIQ70j0AAAAA
AOGOdA8AAAAAQLgj3QMAAAAAEO5I9wAAAAAAhDvSPQAAAAAA4Y50DwAAAABA
uCPdAwAAAAAQ7kj3AAAAAACEO9I9AAAAAADhjnQPAAAAAEC4I90DAAAAABDu
SPcAEBLx8fHz589//vnnmzZtWqdOHfll0qRJp06dSplHP3r06OjRozt37ly7
du0nnnhixIgRv/76a8o8NAAAAIKBdA8AKW/btm0VKlQw3BQuXHj16tXBfvTZ
s2fnzp3b/dF79eoVHx8f7EcHAABAMJDuASCFLVu2LFu2bLLVLVmy5Lhx47Zv
3/7HH38MHTq0XLlyMjFDhgz79u0L3qPHxsaqR2/QoMHEiRP37NmzYcOGN998
Ux5XJg4cODB4Dw0AAIDgId0DQEo6d+5c4cKFZZPbtGnTixcv2m86evRolixZ
5Kb+/fsHrwHz5s2Th8iTJ090dLR9+pgxY2R62bJlg/fQAAAACB7SPQCkpOef
f17ttY+JiXG/deDAgXJr1apVg9eAKVOmyENUqFDBZfqJEyeKFy8uDx0bGxu8
RwcAAECQkO4BIMVER0dnz55dtrffffedxxmuXbvmMfUH0JEjR9Q2v02bNqdP
nw7qYwEAACDFkO4BIMV89dVXsrHNkSPHlStXQtiM0aNHp0mTRlqSJUuWl156
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
5pvV/JMnT7Yv0+GKFRIS7fMkm+4dttanNbB7924j8RsbifZlypRRs8kLLc9C
fpk3b56abcyYMfJn3rx5Jcu7LGHKlClyU9GiRf3YQ/3TTz/JfeWldL/ppptu
kpsWLFhgTcmXL59Meeutt2RFyTuqXLlyt99+u2pwjhw5zp8/b83pku7VB0Gs
X7/e5VHGjh2r5rG+sfGe7lu2bKlmkxUuL8cDDzygVpQYNmyYx+f48ssvywfB
1zUDAIAXpHsAuNH4dGS+ZBAv6V5Irrly5cpnn32m/pT5Jc298cYb8vttt91m
zf/xxx/LFIlmEyZMsA5aXrZsmfoqQJJpQJ5azZo1JVh5vGnRokXyWAMGDLAO
LL98+XKnTp2MxIHrXcZVU3m5UqVK8rN06dLS5iNHjiQkjoa3d+9eazYr3csz
tfZQ79u3r2zZskbifnOZP6mmJrVi7R5++GHDwZH5Dlvr0xpQ6T5DhgzqWIvu
3bsvWbJEHWUhy7ROu4iOjlaDzk2cONGlVXXr1pXpgwcP9t54j/xI9+K+++7b
sWOHmihvbzVxzJgxST2KBP+k0r1l7dq1ah4vR+YfPnxYzTNlyhRronwKpk2b
1qxZs6SuibBy5Uq5i/thAwAA+I10DwA3mgCm+7Rp06od5QcPHpQ/CxYsqHKf
hC+101nNHBMTkzlzZpkyZMgQl+WMHDlSpksS1H1WCQnSEmmPJO6kZnDP2pcu
XVK7yKdPn26frvKyuPfee8+cOZPUAlW6z58//6lTp+zTly5dqu7uZeS0gKf7
ZFub4MsaUOle8f7dy8CBA2We8uXL2yfu3LlTxfOjR496b7xHfqT7hx56yOXZ
Sdg3PB2WYAlUut+8ebOa55tvvknmidnEx8fL50XWnvO7AADgHekeAG40AUz3
Vn6XkCh/VqhQQf0pcUntEVZ/rlq1Sv3pnj3VnBLQ/H8+f1u0aJEsSmJpsnPu
2LFj1qxZQ4cO7dKli8q2b7/9tn0GlZdlRXm/VpqXMfMLFSokN7377rtJ3Tfg
6T7Z1toluwasdO8lHSvqFHLDdri+eO211wy3UzOc8yPdf/XVVy5zqsMSWrRo
kdSjBCrdi+rVqxuJh6bIU545c2Z0dLSXmS0yc+vWrZ3MCQCAE6R7ALjRpHy6
nzBhgvpHk86N9T9If2y9qVOnSrzyMlr+3r17u3XrVqBAAcNN//797XOqvPzM
M894f0Qv6V7FvZ49eyZ134Cn+2Rbm+DLGrDS/f79+5NdrHoujRs3Vn9euXIl
b968MmX+/PnJ3tejgKR71apmzZol9SgBTPeyqHbt2qlxJIzEIfWaN28+ffp0
7+9qeXvUrFnTywwAAPiEdA8AN5qUT/fqpHvROQndu3fXf14ffPCBl2MAFi1a
lCtXLiPxOIEuXbrMmjVry5Yt0mx1erjHdN+pUyfvj+gl3ZcvX15u6tu3b1L3
DXi6T7a1Pq0BK90fPHjQ+2ITEs/LkCSeJk2abdu2yZ/ffPONkThkvfPL7bkI
YLr3soYDmO4VWWnvvPNO7dq1VSONxGEJly5dmtT8gwYNKleuXLKLBQDAIdI9
ANxoUj7dL1u2TP2jOXToUICehAeTJk3KmDFjUrcWK1ZMGtC6dWtpqn16MNJ9
bGysuizg1KlTk7qvk3TfokULmSfZrz4cttanNeBTuhcdOnSwmtqsWTPD61kJ
yfrf//6nHt0avs+Swul+06ZNap4TJ044b/+ZM2dGjx6tGpY9e3aXFW7p1atX
tWrVnC8WAADvSPcAcKNJ+XR/4cIFdbX0ZE/i1jF37lx5CPsV0Cxq0D/hcmb6
tWvXKleuHPB0/9FHH6mH27p1a1L3dZLuZXUZDq4Y6KS1vq4BX9O9PNM0adJk
yZJl165d8lpnyJDh9OnTTu7o0caNG9WjuwwpP3HiRDU9xdL9qVOn1Dy///67
lwZ7HBhf7qLuu2LFCo/3at++ffPmzb0sFgAAn5DuAeBGk/LpXgwdOlT9rxk4
cKB9h+z27dvlIRyOQubd3r17ZfnWlensTp48qR590qRJ1sQNGzZUqVJFTddJ
95Jqn3vuOWvAwHnz5qnL/HkfMM1Juh8/fryReGGCZcuWWROvXLnisi/YSWt9
XQO+pvuEv3fZly5dWn5KkxzeyyPJ3fLmMRLHxFMj4ctTHjRokNVjSbF0LwoW
LGgknr9vf9+ePXvW+v3jjz/Onj27vMNd3sZ9+/ZVyz927JjHJcvKf+2117w8
NAAAPiHdA8CNJiTpPi4urmnTpurfTYECBR566KEnnniicuXKaiCyUaNGBeKZ
Jdx55529evXyeFP9+vVVEq9bt+6TTz6pLuOePn36UqVKaaZ7dax45syZa9Wq
JWtAFmskntvufTw6J+le0qKKrvIQ9erVa9OmTcOGDeXlc7mMmsPW+rQG/Ej3
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
Wbp0aesY/jx58gwdOtRlkz558uRs2bL17dtX+oqvvfZaiRIl1Mw333zzyy+/
7J7xjx8/3qJFC+tsr9tvv33GjBn58+d3T/eyXbr11lvr1Kkjv0ufs23btrfc
cou6V9q0aT/55BP7zPJhl82U6qCqR69evbp8XtzXw6lTp7p06WItSubMZvP0
00/714BVq1a1a9dOus3WZydLlixDhgyxd3FlzUsL27dv/8Ybb6g1IKtL2tOn
T59MmTLJnwUKFNi6davn1w9A6uNHuneyXRUXLlz48MMPq1SpYs0pv8hmzf6t
oBg/fnzJkiULFSpkHWEofRX7Nq1Ro0bWzCrdN2/e3LAdnF+0aNEiRYpI38M9
3TvZrIk77rhDHkiiwaBBg2RRak7ZxEnX2j1BAAiVr7/+Wn08Z82a5WR+6VbJ
R3vOnDny+xdffFGqVClrU1C4cGGXmRcsWFCxYkV1BJHInTu39G1c9lnMnTtX
FpgrVy73x8qRI4fcZD8o+tNPP5UpvXv33rRp0/33358+fXq1ZNlkff/99x4b
3LVrV5lBHle6Ump7JZHQfbZFixbVrl3bei6yaZW+aK9evaSD6jKn3P3VV1+1
bwMzZ85ct25dj0OgO++IJiT2vSdNmlSmTBlrjck2XDbOEszts0n3OJsb+efi
cZkOt9jly5eXdZg3b151gob8dFn+4sWL/WtAgrO3gShbtqws59KlS8uWLWvY
sGHGjBnV/PIe+/33311mdv56+cF7uvepnWLq1Kku/wTl36KRRLp30hmQvCAN
kNfL5b9z//791fSzZ886fKaGjcO7IPVLKt2Lzz77TG2I7FsA6ZSq+aXr+Oij
j8o2Sn1aH3zwQft9x40bJxObNGlSq1Yt9UGuVKmSbP3UfeVdbZ95x44d+fLl
s7bPsgWwzvYy3NL97t27jcT8K29p2QCqeWSzqb4KmDdvnjXnwYMHrU+TtLZq
1aoqO990000ff/yxfZmxsbH33HOP2uJ17NjxmWeeUbFafVSF/aQz5w1QRzcp
xYoVk62QrAf15/PPP2/NtmbNGvV5N/7eUybUF+lWz7xVq1bOX1MAoeVrune4
XZVtToECBdScsjmV2SpUqCAbNPlTNln2QZDGjh2rulvWibTJpvvRo0cbfx+c
v3LlSvn9hRdekIRu/DvdO9ysCbVVl+6W+j8i3Rg1AoCQrpH347gApJi+ffuq
j7PD3cRPP/20zC+5Xh1dbCQGK+luScapUaOGfc4BAwZY26v77rvP6pKVK1fu
3Llz1mw//fSTkTgMqftjqe2bZENriupeypZQbdzkF6vTKM2YPHmyyxIkFqkt
j4pdxYsXl98lQLnMJhFYZTTZoLVs2VLyl2yy1L6bXLlyuRwiJTOoJyLPV9bG
Aw88oHqAYtiwYfY5nXdEExJ3bcsC1cyySZd+qTw1tQakd2r/CtclXKu7PPLI
I+4r0PkWW+K/fWk+pXsvDUhw/DZI+Pu/xltvvSWPLv8EZQb1H0TkyJHD/rWw
T6+XH7yne+ftFC+//LK6SV76KlWq5M2b13pF3NO9w86AdC3UbtOGDRtaH1t5
h6t3i/vb2wvDxvm9kMp5SffWeZd//vmnmiLbIrVRmjBhgvV2WrZsmQqhsqm3
7qs2vyJ9+vSjRo1SB6KcPn1aPtfqw2h/oAYNGhiJw/Vb37seP35cthJqCR7T
vXxG1Fdb3bt3l460+lJr79699m8CH3roIfVY8+fPV1POnDkjHxCZKNuEXbt2
WXOqIUTks7xz5041ZevWrbJplWe6bt06l9XivAGLFi2SNSObNeuIfbm1U6dO
RmJfd8+ePWqiSvdCNlCyotSXKkI2CHFxcW+88Yb8fttttyX5EgJIZax0Lz29
0f8m/9yNf6d759tVUbdu3Xr16sm2xfomX5K42inTsWNH95asXbtWtSTZI/MX
LlxYqlQpdXB+r169jMQhglU3zJ7uHW7WEv7u/4iuXbtajz58+HA18aOPPvJp
lQIIEjXUUpMmTRzOr9J9pUqV5Kd0hGTDpU6olE2HfRezZA0VTNq0aWNdPWTG
jBlqR89zzz1nzelHulf9ItkcqYn79u1T59QXLlzY5ZtD6QHKdNkcqa2ruhRI
69atXR6oc+fORuKOFftu/f379z/77LOTJk2yz3n48GHVgClTplgTpbc2bdq0
Zs2aueRK5x1RIdtwtSHt27ev1ZmU/rC8QA888ICX656o/OgxXDvfYlvUfwSf
jsz30gDnb4ME238NCQs7duxQEyViq4ljxoyx5nT+evnHSbp30s6lS5eqvfCy
cqzUL28V9V/bJd371BlYtWqV+jZj5MiRCYnHk6hv4z32BLwg3UckL+neuknt
j46JiVEfxiFDhrjMqU5lkm6nNUVtfiUC27fJCYnHX6llnjp1Sk2RLY+a8vnn
n7ssVn0f6DHdKy5vdTurd/3VV1/Zp8v7v2DBgi69a/VdWY8ePexzqs1sv379
XJbssAGK+/4p2bip5zV9+nQ1RaV72fqpo4kOHjwof0oj1bZdVqCR+CWq9wcC
kHpY25+kWNsfn7arCZ42KWLw4MEyZ5kyZdxvcp7upfOp9rD8/PPPEvOLFSsm
N6lh812O/XOyWUv4u//j/rzuv/9+914NgFCpXLmySxdIAsv7NtKjs8+v0r24
9957Jasmtdh69erJPOXLl3eJpR988IG6u7U/xY90nz9/fqsbqUiMUot16TRK
fjRsFyFVfapMmTK5XK5U7Y6vWrVqsufFb968WT3QN998431OnzqikoLVzAMH
DnRflPfDKryE6wTHW2xLYNO987dBwt//NR566CGXNqs9g/aDDZy/Xv5xku6d
tDMqKkqmSO52Gc5LDW5m/z/oa2dAvPPOOypqbd269dVXXzUSjzf29bgFe8/E
pzsiNfOS7vfv369uUt+Orlq1ykj8rs99Y75+/Xoj8atRa4ra/N55550uc6ro
KjZt2qSmqDenbOjcv5b0OGa+Fa5djily8e6778o8RYoUcd8kqrNdSpcubU1p
1aqVTHn88cfts6mzULt37+5yd4cNcCH/K2fNmjV06NAuXbqojerbb7+tblLp
3srvstU1Ege3UX+qdSur3fljAQgtq1MnHcvu/6a+Xbc6dT5tV+0uXLggvdlP
PvmkV69ederUMZL4DtCndL9r1y4j8VIp8rNv374JSaR7i5fNWsLf/R+Xbq2Q
NhuJB2sl1R4AKUmle3tvRz629j5/jhw57POrdC/xx+OeX4vaJkycONFl+uXL
l9XJj1Z08iPdu3cvRaFCheQmyU3WlKtXr6oD0a1DQ2WKGrHZZdMkbVC7mEuU
KNG/f/9t27Z5eWrVq1c3EvexSu9x5syZHs/iT/CxI6pOc8iTJ49Pozor3tO9
xfsW2xLYdO/8bZCQ9H8NdbBBixYtrCk+vV5+cJLuk22nvO5qOS7fjyV4GjPf
j86ALL9Ro0ZG4knNsjbkEySBwtdnSrqPSF7SvdVBVadzTpgwQf2Zzo31xrAO
Fk1q83v+/Hk1p3XEe4cOHeTPBg0auLfNe7rfv3+/l+f1zDPPyDwPPPCA+03f
fvutkbiv3Nogq+/Q0qdPb30VfOzYMXXEy6effupyd4cNUPbu3dutWzfrVFk7
2RypeUj3QIRxft69T9tVZfr06c2bN7fGIPX+r9mndC+/V6tWTc2vOkse072T
zVpC0v2fn3/+Wc3sfNgfAMHTunVr+Tw2bdrUmiIdwgGJJAYaSaR76WV5Waa1
e2jFihXut6qRhXr37q3+DFS6V6H7xRdftKZYx4tKCGr+tyxZshiJ50K63F16
m8WKFbO2ZmXLln399dddhrNTpCvbrl07a4y4zJkzy2Jly+yyrfapI6rWqseZ
k+U93TvcYlsCmO59ehskJP1fQy2/WbNm9onOXy8/+JfuXdq5b98+1Tb3a0q6
p3s/OgMJiSduqKaKoUOH+vFM7e8HP+6O1MlLuv/www+NxEM+1LeO6nwQ0TkJ
9i9+k033ElrVlLZt2xpJnPDlPd0fPHjQy/NSXxp43E7KAo3E0Vesw1dOnz5d
smRJmZg3b175bL700ktqDJYyZcpcuHDB5e4OG5CQeNJBrly5jMQv3ORf5KxZ
s2QlS3ivW7euQboHIpfzdO/TdjUmJqZNmzaqTxgVFSXdA+kzHD582Dq/yb0l
vqZ7tdmvXLmyusk93TvcrCUk3f/55ptvjMTdXlzrE0gN1PA+HkfVUxsQj+ne
OtbdIyvX/Pbbb+63qotx9OrVS/0ZqHSvrvTUp08fa4ral+pRxowZ3Tt4V65c
+f777+VeVhaW3pdshz1e6U96g++8807t2rVVI43E/chLly61ZvCpI6pOEbV/
x+Kc9/PuHW6xLQFM9z69DRKSS83uy/fp9fKJTrq32vnnn3+qVq1atcplTvd0
71NnwDJ37lxrdH35IPvxTO0fCj/ujtQpqXQvHxn1nZhsuNQU6UaqOZ1cqtJ5
upftsGELs3Y66V6N3SRbWic3xcbGqpH97OTj6fE7QOfpXq3A1q1bu5zeRboH
IpvzdO/TdvX//u//jMQra1gDNCmLFy9O6l/zpk2b1E1ergdtT/fHjx9v2LCh
NaKIe7p3uFlLSLr/M3ToUCPxPMRkny+AFGAdh+9+QTe/031cXJw6idh9eCJJ
Xio6WTf973//Uw1w/8bPebqXXqvaKT916lRrihq7bNiwYWtsfv/9d3Xs07Rp
05Jqf3x8vMzWokUL1bDBgwd7ebJnzpwZPXq02uLJ9tnaNvrUEX377bdlSqFC
hfy4wL2XdO98i21Rz9pjlvS1AT69DRJ8T/cWn14vJwKS7uX9rA7wcB+iwT3d
+9QZUORfsxqBX41DLjFfPkoO72uxBx9f74tUy2O6l4+J+i5XWJcZvXDhgjpY
3cn55s7TveqvCvknYp/z1KlT6moX/qX7X375xeN/Kwnyaltnv8acGrCiZ8+e
0gGWLq48ZS+Xy3TYAGuEAZcT02SDps5xI90Dkcp5uvdpu6r2Q7lfU1gd5Onx
X7NsSNVNHi/Cq9jTvQuXdO98s5aQRP9HtsBFixY1PI1ZDSAk5PMrvTX5VN5z
zz0uu7P9TveiZs2aRuLIey7T1cgb9m7nxo0b1RT5xT7nxIkT1XQn6d7a9bl1
61Y1RX1p4PFE5qZNm8pNzZs3t6YkNRaZGt/eZf+7x5mtYfGso9B96ohaJxHY
R1y3eB87Lqnw69MW2yL/jAy3S7B55yV9O38bJPiS7n16vfwQkHSf8Pe3Ky7n
FIjXXnvN+He696kzkJCY1NR+ybp168rvPXr0MBKvzpDsnkcXho1Pd0Rq5pLu
ZRv466+/Nm7cWE20b/oS/t7nYiQO6Wn/inX79u3ylraPK+I83csnVF0ntFKl
Stb1mmULr65Javib7uWtrr6ZLFSokNWtlcdSV36RT5A1rF/C3/1tlwtzJMVh
A06ePKlms1+bY8OGDep6WAbpHohcPl3v3vl2Vf37Ll++vNWxuXLlitzLOi/P
Y2PU4MzSu7Av3H7Ou/N073yzlmC73v2cOXPUFNm4Pf7440biYfku3XgAIfTD
Dz+oj7D0xKzekWx8XnnlFcPfdC+RXB0z3L17d2to8Z9//lkNavfEE09Yc0rP
UF2wvkWLFmpO2VaocecU93QvS+7cubO1HZMcrRZrz8vqwPj777/fvW0qWmbI
kEFtouXnHXfcUa9evdWrV9tnO3HihFps165drYkff/xx9uzZZbvtMphe3759
VWuPHTumpvjUEZWZJZMaiacMjBo1yhpoWrbbAwYMkGbYx5Z3kVS49mmLbRk/
fryReP6X/Wxx+V/jsvffSQMSfHkbJDhOzT69Xv4JVLpXew9lDchrqqZcvXr1
v//9r1r/LteOcd4ZsGbOli2bOsw4JiZGjWNQo0YNeQjnz9SwcX4vpHJWus+Z
M6c6N0eRt2LPnj1d3kuytVFfeIoCBQo89NBD8sGsXLmyOvLEeusm+JLuxeef
f64++5kyZapVq5b6Djl9+vTqQ+pfuk9IPOFFnT4vPUlpZMOGDdUCxYgRI+xz
WscPyEqoXbv2g4nk2bVr107mdPnO03kD6tevr9akbN6lS1+6dGn5XZ5XqVKl
DNI9ELl8SvfOt6uLFi1SE6Vr0aZNmwYNGqgeiLrwdFL/mtW4zUbisLotE5Uv
X142tlbnwXm6T3C8WUuwXRHYSDwOX+6ojpIV0rfxfaUCCCIJCypiq76QbCXU
8ZOicePG9jkdpvuEv8OOkTiokXSrpGOjOnu33367dfl1RV2D2Ei81F21atVk
k2Ik7j5Wu5g9Xu/eSBzOrk6dOrJYa8NoDXcsQVJdJdzjrnAJ4Oou6pr1v/32
mxpvX5pXrFixJk2a9OjRQ7bSapMly7HvX+7QoYN6FlmyZLn33nulo9itWze1
h1o8++yz9gdy3hEVhw8fLlKkiLpVnovMLElNvQrSRVRN9bKePYZr51tsi/T8
1dZb2iwJWv7XSEvkf43HS/Ul24AEX94GDlOzT6+Xc/Kev/lvqsHyJrGmLFy4
0Nd2JiR+OVOmTBm1tBIlSsiroP5rq92aLuneeWdgxYoVqpH2d8WOHTvUwn0a
M8GwcX4vpHKyibO/srLZkXjbvXt3+9vYxRdffGEfplIUL15c3nX2rwLU2I9e
0v3mzZvt03/44Qe1g0l9mqpWrbpu3Tq1l8fa76Ps3btXzWZ9O+qFbDfatm1r
H3BSmmT/N6FID1w2MkYSZNNqH+3TeQNOnDihLqunyIfu0Ucf3blzpzrdxtqo
qvzuku6tUa1I90DYsU6gc5LuFSfbVTWb6hUo0lWTvqt0CdQoJR4bI7dKv131
lhXpEVWpUmXfvn1qBrWZsk7CslPp3n5daYebtYS/+z/vvfeedOesYX9y5849
efJkxysSQMpZvny5lazVhkIyoKRplzPB27dvbzjePfrNN9/Y+1cZMmSQIOY+
nN3p06dlS2LNJh3C11577erVq+qCxeq6zIpK9xUrVpRfrC8Mpd8oscjeK5s/
f756CkmdxawuTf7YY4+pP2NiYj744IO77rrLZVMpi7Wu8WTZsGGD3NHqtSoS
x4YMGeI+npvDjqgiPcB+/fqp7yUUac8DDzzwxx9/eFnJ6jBv96sAJPiyxbbb
tm2btX9fkVU9aNAgPxqgOHwbqFWaVGq2L9+n18sh9Y1HUuwvmfN2JiQGHwnp
9q/OevfurYbEkbDj3oxkOwPyuVArs02bNi73nT59urqLx6/rPbI/kMO7IIKd
OXNm7dq1K1eulPdtoJa5f//+3377TTbygVqgcuXKFdkUL1682OOSZVMs2wf5
1zBixAhJ7pKm1yWaM2fOyJEj1efRyXfUSTl69Kh0m6UB1nFWAOCRk+1qbGzs
5s2bpadhD93JknvJkn/99VfZxLmfheorJ5s1le5nzJiRkHgiwO+//75r1y7N
xwUQbKrLtHr1avfw5TfJ3QsXLty6dav3wcwliso2yjpx3iOV7suWLZuQ+NXl
li1bZMsWwKZKC3fs2LFs2TLZzCa7WLXFlpkPHjzovY/nvSPq7siRI4sWLdq4
caNPR1knxb+O6OHDh5cvXy6vyO7duwPSg3X4NvCJT69XCEk2l/UvL6jDNRmM
kOUR6R4RSQ17EhUV5fFW9Z2n+zBWAAAvkjp2EQD85uWKeAB8RbpHRFJXHS1Z
sqR9mCll1apV6gwpDiUFAJ+Q7gEEHOkeCCDSPSLSmTNnVC+0SJEi/fr1mzZt
2jfffPPhhx82a9ZMHZbfsWNHPy4/CgA3MtI9gIAj3QMBRLpHpNq+fXvz5s2z
ZMniMoZGlSpVJk2aRLQHAF/dc889uXPn/u6770LdEACR46uvvpINS40aNULd
ECASkO4R2S5fvrxw4cKpU6dOnz79t99+s18ECgAAAAAiBukeAAAAAIBwR7oH
AAAAACDcke4BAAAAAAh3pHsAAAAAAMId6R4AAAAAgHBHugcAAAAAINyR7gEA
AAAACHekewAAAAAAwh3pHgAAAACAcEe6BwAAAAAg3JHuAQAAAMC7PXv2TJ48
efbs2aFuCDyTF2jGjBl//fVXqBsSSqR7AAAAIFJdvXp1w4YNc+bM2bRpU1xc
XKibk9Kio6PlicvT37VrV3x8vM6ixo0bJ4npzjvvDFTb4J1Pr93u3bvTpk0r
L9Bdd92VMs1LnUj3AAAAQORZt25drVq1MmTIYPX2CxcuPGHChFC3K4WcOnXq
hRdeSJcunfX0s2fP/thjjx05csS/BZLuU4wfr93333+v5rz55psvXryYkq1N
VUj3AAAAQIT54IMPrHCUJ0+eChUqSOpRf77++uuhbl3QxcTEVKlSRT3fW265
pVKlSjly5FB/yi/z58/3Y5mk+5Th32sXGxvbsmXLEiVKDB8+PIUbnKqQ7gEA
AIBIMm/ePNW9lyi6YcMGNTE6Orpfv36ZMmVatmxZaJvnt9WrV3fq1Ml9+nff
fde3b1/7lBEjRsjTT5cu3ZQpUy5cuKAmyqqoUaNGvnz5Dh486Mejk+4V56+C
f4Lx2t04SPcAAABAxIiLi6tYsaL07StUqHD+/HmXW0+fPu397vHx8YcOHVq5
cuW2bduuXbvmcZ6LFy+uXbtWZgtMi20uX74sSz5x4oTHW3/++ee7777bffrY
sWMfffRR+5SHHnpI1sATTzzhMqesnEAdmR8TEyNNPXnypPd7XblyZcuWLVu3
bpVfnD/WpUuXNm/eLDnay/L37t27fv16aYbzxTrh/SVI8OVV8E8wXju/ySdI
XoVjx46l8OP6jXQPAAAARIyvv/5a9e1nzZrlZP4ePXpky5Ztzpw58vsXX3xR
qlQp+3n6LjMvWLCgYsWKavgykTt37j59+kgetM8zd+5cWWCuXLncHytHjhxy
05IlS6wpn376qUzp3bv3pk2b7r///vTp06slFy1a9Pvvv7dm+/XXXydPnvzK
K6/cdtttk920bdtW8qb8Iu1XIbpx48aykKioKO/P3aemqnQvT1+iev369a0T
H4oVK/bjjz+6L+HUqVNdunS55ZZbrPPBs9k8/fTT1pwHDhy49dZb69SpI78f
PXpUno51L1nVn3zyiX2xf/31l7xk2bNntxZbvXp1SaDBfgkSfH8V/OPwtRP5
8+fP5ubJJ590n/PixYvuc9pt27bN5S4zZ84sXbp0mjRprNNbhg4dmtT3XakH
6R4AAACIGH379lWR0+EQ8RIzZX5JZO+//74KBZJoihQpkjFjxho1atjnHDBg
gJohc+bM9913n8yj/ixXrty5c+es2X766Sd1xrT7Y910001y04IFC6wpKjIX
KFBAhWX5ReKzGiJAmiFRUc02ePDgRo0a3XXXXfLQjdyUKlUqd+7c6nd1QTSZ
X7Wta9eu9ra58KOpQg1UmFRTldjY2HvuuUduypIlS8eOHZ955plMmTKpu5dK
ZB/9YPfu3TK9RIkSEu3LlCmjZpP8LulVfpk3b54158GDB63VXrJkyapVq6rG
SGs//vjjoL4EfrwKSZEoPWTIkKRudfjaJbile3WvRx55xH3OmJgYiecuid76
CkWa7XKMxFNPPWWt5EcffbR69erqG60HH3zQS3tSA9I9AAAAEDEee+wx6dg3
adLE4fwq3VeqVEl+li5desKECer4Z8mne/futWb7/fffVcBp06bNpUuX1MQZ
M2ZI0JOJzz33nDWnf5H5tttuW7RokZq4b9++smXLGokHD0gzrJmdHxMuLVRL
EFmzZu3Zs+euXbvc7xi8pkqT1EPv3LlTTdm6dasEfFnsunXrXB5LpXvJ6Wpn
cffu3ZcsWaJ2E8tLYD80Qh21LmnUGlzuzJkzEjllYsaMGa3nGLznlRCII/MX
L14sT/bll1/2eKvD186dLDCpdO8uLi6uZcuWMr+8KL/99pv9po8//lh9YSKf
BesrsmXLlt16663qezAnyw8V0j0AAAAQMSpXriwd+x49elhTduzY8b6NpDn7
/Crdi3vvvVeiYlKLrVevnsxTvnx5iUX26R988IG6uxVj/YiW+fPnP3XqlH3O
pUuXqsXOnj3bmuhTrjx79mzbtm2tkwgkNTdr1uz333+3zxO8pqqdv/ZXQXTs
2FEm9uvXz+WxVLpXvIRHifxqnq+++so+PTo6umDBgjJdHjTYzyshQOfdy0LS
p0//yiuveLzVyWvnzqd0/8ILL6gI73L2QUxMjPrCyv3ogpEjR8r0unXrOll+
qJDuAQAAgIih0n337t2tKRIG7X3+HDly2OdX6T5r1qx79uzxslh15PPEiRNd
pl++fFkdc/7ll1+qKX5ES48D0RcqVEhueu+996wpfuTKHTt2yKpQeU2RRGl9
QRHYpr777rvWlFatWsmUxx9/3D5b8+bNXV4axUr3zz//vMdnocjyZZ4iRYq4
n3MxaNAgI/HQi2A8L/tLkBC4UfXmzJkjAf/VV19Nagbvr5075+leDcsvxo8f
73LTqlWrjMTRDNy/6Vq/fr3clC9fvmSXH0KkewAAACBitG7dWjr2TZs2taZs
2bJlQKIuXbokle6feeYZL8vcv3+/ygsrVqxwv1UN0d+7d2/1Z6CiZfXq1eWm
F1980Zrid648e/bssGHDcufOrZ7FqFGjgtHUnj17WlMkEcsUSa/WDvFjx46p
E70//fRTl7tb6V7Ws5dnIa+RzPPAAw+43/Ttt98aiUPwRUdHB/x52V+CBMev
QpwD33//vTSyV69eXp51Uq+dO4fpfurUqWqsPPeDKMSECRPUA6VzY6Xm1Dy2
HukeAAAAiBhvvPGGkcSoemvXrk0q3Xu8grll3759Ki+4nKGsSNaTm6yMFqho
WaFCBbmpT58+1hTNvcYStMuVKyfLLFOmTGCbWr58ebnJfrX306dPlyxZUibm
zZtXUudLL72UJ08e9dDWNdwtVrr3fjH3Dh06JJXuZ8+ebSQewX7x4sUAPi/3
lyDB2auwceNGwxfffvutlyee4Om1c+ck3csTVzm9Y8eOHmdQJ92LzklwP/Qi
VSHdAwAAABHDOg7f/TJtfqf7uLg4dYC0+1nh165dy5o1q/2m//3vf6oBLlfK
S/AlWl65ciVLlixy09SpU62J+seEjx8/3kg821od4B2QpsbGxqpzE+xNlYkN
GjRwybASPO0DFVocpvvhw4cbiUPrJ3tT8F6CBGevwtWrV3c68OWXXxqJwwV4
Od7e4vLauUs23W/cuFGdYNKkSRNpocd5li1bplbdoUOHkm1SKkS6BwAAACKG
xG1JatK3v+eee1x2E/ud7kXNmjWNxJH3XKZ/8sknKkps2bJFTbH228ov9jkn
TpyopjuJltYu1K1bt8qfX3/99cCBAyUG5s2bd6Cbxo0bly5dWn4ZNGhQTExM
QuIAaDNnznR/FjKPLPP2228PYFM/+ugje1MVNQJbz549T5w4MX/+/CVLlhw/
fjypdesw3f/yyy8ev7eJjY0tVqyYTG/VqlUAn5fLS5Dg+6vg3bp163LmzPnk
k0+6HOju8LVz5z3d79+/X409KO9hdYSDR/KRUSdQeB8DIdUi3QMAAACR5Icf
flDd+0qVKm3atElNjI6OfuWVV/xO95IH1dnK3bt3ty6R9vPPP8vSZOITTzxh
zXn+/Hl1tfQWLVqoOS9duqSGfUsqWsqSO3fufPbsWTVRYqxarBVXJ0yY0KVL
l0aNGsn0Lm7uu+++IkWKqN/lsWbMmKEeSJ6aPH21q/fIkSOSbdVOdnksnaY+
99xz1pBr8+bNUxdKa926tX11SWg1/n2hQC8cpvv4+Pi6devKbIUKFbIGkJeg
qq6BKJnUeq2D8RL4+ip4f8rr16+XaC8td4n2zl87d17Svbxe6ip7JUqU8PI1
izJ06FDVhoEDB9oPfti+fbs8hBrZINUi3QMAAAARRhKKyndCYlT5/2fvPMCj
KtM2/AKiFEHBQhGRmkaX3gmQ0HsTaVKU3otUBUSlw1JFUYpAKAldmlQBlY40
cUG6giBIryH7f9+OfxbDZDI5z5xMzpnnvu7Li51MMjWzuc/5St68KVOmdPzP
atWqPXlNN+v+P/9fT/LfueRVq1bNly+fo/ezZct25cqVJ6/p2PpN/rvPWvHi
xZ977jn1b/UtjvX8nW62rkidOnW5cuXUj3VshZYhQ4YYq8y5OTL/zz//fOut
t6J/bJo0aXLnzh39P9W/VfwavquOke3qrpYpUyb6GXj6rs6ZMyf6yS9btmzV
/1KzZs2WLVuOHj06xvYEbta94uTJk475++puqHsYEhLiaHCF+rEJ8BK4/yq4
4KeffnrppZcaNmz49PD4eL12MXBR9xUrVoz+Ia87IyIiIvrKjx8/rlGjhuPK
mTJlUq+aukvqeXM8Jy6W9UsMsO4JIYQQQgixHzt37ozOOvnvyVk/Pz+VcjFW
22vVqpX6aocOHdz5mSqCVMtH50OKFCk6d+789DJxV69eVaEXfbXMmTP369dP
pZxjn7gtW7ZEX9ORlvnz51f/UCHsuL7KKJVXly5divFjN2zYULhw4afvlfre
Bg0axLgwPDxcBbhj5riDlClT9u7dO8ZOZ+7fVcdq6gMGDJgxY4YjsV3c1Zs3
bz75RMVA3ZMndx84ffq04/Knf87TXLlypXnz5k8u4R4YGPhkrcf3ccXrJfhP
PF8Fp6jH3rp169hmvv/H7dcuBuoBqms6vQ8vvfRSbK+FA3XnY3zL119/7Zjv
EE2OHDlU2vPcPSGEEEIIIcQrPHz48ODBg3v27Hm6wQ2jom/z5s1Hjx51vTXY
5cuXv/vuuydnoz+NIy2DgoL+899zpkeOHNm3b58H76r6mcePH1c5eerUKRdL
t7lzV58kKirq2LFje/fudXpX1dNSsGBBFcijR49W5X7gwIH9/2XNmjVjx451
jKlwZ7CECxwv69atW1XFu7haYngJDOPma2cq165dU8/Grl27XIwZSFSw7gkh
hBBCCCFewcV2bNbFsfxd+fLlnX61bt266qtNmzZN2DsVK7Z8CXwW1j0hhBBC
CCHEK9gyLR27z+fKlSt6kbpodu/e7ZgpP3fuXK/ct6ex5Uvgs7DuCSGEEEII
IV7Blml57dq1DBkyqMeVNWvWIUOGLFiwICIiYtKkSbVr13YMy2/Tpk2M1Q+8
iC1fAp+FdU8IIYQQQgjxCosWLXr55ZdLlSrl7TviYY4fP163bt0n14VzULhw
4dmzZyeetP+PfV8C34R1TwghhBBCCCEe5/79+5s3b54/f/7ChQt/+OGHixcv
evseEZvDuieEEEIIIYQQQqwO654QQgghhBBCCLE6rHtCCCGEEEIIIcTqsO4J
IYQQQgghhBCrw7onhBBCCCGEEEKsDuueEEIIIYQQQgixOqx7QgghhBBCCCHE
6rDuCSGEEEIIIYQQq8O6J4QQQgghhBBCrA7rnhBCCCGEEEIIsTqse0IIIYQQ
QgghxOqw7gkhhBBCCCGEEKvDuieEEEIIIYQQQqwO654QQgghhBBCCLE6rHtC
CCGEEEIIIcTqsO4JIYQQQgghhBCrw7onhBBCCCGEEEKsDuueEEIIIYQQQgix
Oqx7QgghhBBCCCHE6rDuCSGEEEIIIYQQq8O6J4QQQgghhBBCrA7rnhBCCCGE
EEIIsTqse0IIIYQQQgghxOqw7gkhhBBCCCGEEKvDuie25PHjxw8xbt26dZ34
Bjdv3lSvuNnvyfcIISRxY/bHICGEELNh3RP7ERkZeeHChQ0Yffr0CQkJqVix
YoiVqVy5ciUSF23atNm5c6fZb0v1l3OQ1PJBW38liB9+CPlWGGTHaZCld0DW
XWbcqmshGy+CDNkAWXMVZIUtkFXWGRd8xRuEQ749H5J1TwghNoB1TxIPUVFR
kZ7g3r17+/fv//LLz2fNMm6lShVTpXru2WefUf+1rs8++2xyEhf58uVbuXKl
2W9v1j3rnnXPumfdE0IIMRXWPUk8XL9+/ejRo4dgtmzZXK5cscaNA7t0Ceza
1aC5cqXz90+SN2+SggUtaYECSfz8kijSpKFx+OabgeHh4Wa/vVn3Xql7MJda
zYZs/jXkO7OMCz7wZvMgi/8ICb5nqq2BLLrbuKV2QpbbBgk+cNY9IYTYANY9
STwcOnRw9eply5cvWbkScubMaalTS5060rGjdO5s0DfflOBgqVpVatb0siEh
UrFivFV3vmhRSZ5c0qeXl16irixePGDJkiVmv719tu6RRFWCdV8/AvLdzyFb
zoFE+ho8jdtoMSSYme2+gKy0ERIsdOvKuieEEBvAuieJh3Ll8hQtmrFChYw1
a0JWrvxKhgyybZscPCg//WTQb7+VL7+UGTPk88+96fTp0q2bNGkijRvH27p1
xd9fcuWicVi5cuCKFSvMfnuz7ln3rHvWfWKWdU8IITaAdU8SD/7+LxQpIqGh
0qABZI0aki2bbNokP/4ou3YZVNX9F1/ItGledvJkad9eGjWShg3jbZ06kjev
BATQOKxSJZDz7s2z/WeCCNY9OLQeHKAOzl5HRvWDeQ4O7EdWDFCCd778Vkhk
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
XBDB36zmX0MGb4YEb/2tMOOCC/qBR0WqroUEZ/2DIkcGKm6CLLUTEjyo4jt1
P23aNPVg161bF33J2rVr1SVz5sxxev1Zs2apr65evTr6kjVr1qhLZs6cafp9
JYSQeMK6t7ese095754MHCht20r//l6o+1Sp9JeSJpVnnjFLryc2696usu5Z
96x71n3iISoqqnv37urB/vXXX9EX3rhxo3379l26dImMjHz6W6ZMmaKuv23b
tuhLdu/erS4ZN25cQtxjQgiJD6x7e+sLda9e8VOn5OOP5aOPTPSDD/SKc506
6TXotmzxvOvX6930mjTRQ/QHDoxp6dKSI4dky6b/66bqyq+8Ii+/TOO2eHGu
mW+i1b8RRLDukUBWgkOdwczsNNW4tVZCglMSwOcNnHePrFegRI5LgA8cFPxd
85G6/+OPP9Qj7d27d4zL+/Tpoy6/dOnS09/iOLP/0Ucf3blzR/3P+/fvjxw5
Ul2ydOnShLjHhBASH1j39tYX6v7RI9m4UVKn1tPATTV5cn2G/cwZsx7Iw4f6
xVq8WK9gP3/+P+zSRUJCpEIFCQ5217Jlxd9fcuemcRsayjXzTbTdF4II1j14
DhqsLXD2+nszjNt2JmT0xvfGBPekA+fdgxvDIcvilf0OEpy2X3oHpI/U/alT
pxypHuNydYm6/MSJE09/y4MHDyZNmqS+2qtXrwkTJjiOA6h/OGKfEEISFax7
e+sLdf/ggXzxhV7y3aQx8w4HDdK93K2brFolP/xgijt2yKxZ0q6dNGwojRvL
W2/9zzJlJCBAd6ibW7ypa+bIoc9K589P47ZmTa6Zz7pn3bPuWfc+Ufc///yz
eqSffvppjMtHjRqlLj927NjT33L//v2wsLD3/smCBQsePnyYIHeZEELiAeve
3tqm7tXL+vCh3L3rxGvXpG9fGT5c/vhDz443SfVMfvCBHpn/0UcybpyJZs2q
Z8GnTi1p0xr3+ef1Gvjq5xQtSuO2bt2AJUuWmP0Z5bN1D47xBuseGdyuBCu1
9VeQXpw4Dz5v4BDxamsgwZH5yPEccLl+8ODAm/sgfaruR44cGeNyx2D748eP
P/0t06dPV1/68MMPf/nllzt37qj/Dhs2TF2iLk+Qu0wIIfGAdW9vbVP3f/4p
33+vt2WfODGmY8ZIaKgMHaozX736JvnokRw7pocH9Okj779voq++Kq+9ps+8
58wJmS2b/lHZs9O4rVgxcMWKFWZ/Rvls3XeYLohg3XefCAkukgbWPbJiAHhQ
Bax7cNv3+hGQYN0jBxbAui9wEBI89e8jdX/69Gn1SIcOHRrjchXv6vJz587F
uPzKlSvt27fv2LHj5cuXoy+8evVq165d1fUvXrxo+j0mhJD4wLq3t7ap+7Nn
JSJCnzrv3j2mXbpIsWK67q9fN/c+3L0rn3yiA1w1fnzt3Vt69XJLleQq7f39
9VB8RD8/fZQgUyYat2XKsO5Z96x71j3r3mJ1v3LlylkVKrjQ6SO6efOmurx7
9+5RUVFPXt6tWzd1ufpqjOsfPXrU6dGAMWPGqMv37t3r2QdFCCEgrHt7a5u6
V4/ivfdkyBAZNSqmH38sFSvKsGGm1716a50+LSdOxFv1tpw2TSZM0GMP4rRy
ZXnxRT0yHzdFCtNXGrSH+fL5L1682OzPKJ+t+85TBBGs+17jIMGR+eCOeMh6
BeCBhXc/hwQfeJsvIcHlDpCp6+Bhjfw/QeY6AWnFuld/xbpwQNOmTr+xf//+
MU7Tq3+rSwYMGPD0lc+fP+/0aMDw4cPV5T///LNnHxQhhICw7u2tber+yy+l
dm359FP57LOYTp4s1aqZPjIf8eZNmTFDB747NmyoZ80nS2bi1vax7XefJIkk
TeqLBgb6L1y40OzPKJ+tezC1wLpv/xkkuKoeuLRdl8nGbTEXsuM0yGK7IMGV
GJEt7ZS1VxgXrHtQHzx3b6zulyxZoh7s5MmTHbvbq/86lsSP3hr1zp07J0+e
PH36tOOrPXv2VF9dvXp19E/Ys2ePuqRLly737t0z/XESQkh8YN3bW9vU/axZ
0qKFbN6sSzmGly9Lz556Tfu9e/UbILF54ICMHauXr2/fXk8iiNMyZSRXLsmb
VwoUSFBz5NCNny6dnhrga5Yo4c9V9Vj3rHvWPeve7I9Bz2K47m/evNm7d2/H
yvmq6D/55BP17379+kUPyz906JC6pEePHo7/uXv3bsc6+ePHj1++fPnnn3/e
vn179T+3bt2aQA+VEELchnVvb69fl+XLJTBQLlywthMnSvPmsnOnk8d4/75e
x14F/qpVsmlTovObb/R9S51a/9edGfp16+rAr1xZqlZ119BQKV9eSpY0bokS
+hBQqlR/r+nna5YtGxAeHm72Z5TP1j2YmWDdgwPUK2yBBBeuR/oafODIZnzK
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
KpXekt7eL59HBg+cPy+ffurcfv3knXekRQu3bNxYn5TPmlVy5/Z1Q0ODuN+9
efb/VBDBum8QDtlnDCRYqUipgfPuwSX3wVXrwVsvvBcSqft8hwQR3GQBPDhg
xbr/OUBcyLr3FO8RO+LttxUxC9a95Uxsdf/okWzcqJeM+9e/jDtypLzwgv3r
/sEDuXcP8v59/VugnvARI5xYoYLUqqVnyqtyj9MaNSQoSF58UQ/194jqPWBR
S5TguXsTbf+ZIHq37sE7Dy6SVmO1ccEN68Fz9+CO8+DzVnQ3JFL3QUcFEVyN
0AdX1TsWKC5k3XsKy703SJzwNbUxrHvLmdjqXhXrt9/qE6DIzSXAmvm2MSpK
/yIMG+bEFCmkVCmd7erli9Py5fVE/iRJPLavXPLkVjVPHv+FCxea/TnGumfd
s+5Z96x7D6Lq/kgecWGfVqx7z2C59waJE76mNoZ1bzlZ99Y1MhJdflB59Kh8
8YXegH7AgJgh89xz+vS9eu3q1o3batWkWDHx85OAAA+YPbukTCnJkuk5GpYz
KIh1b6Lg6utg3YNj43uOhwQHWpffalxwTkGr2ZDZT0GCxxZK/ACJ1H3BA4II
bhYAvtst99e+qvvDecWFrHtP8eR7w+v/n0IRnb6mxGaw7i0n6966qufq+HHZ
sAEyPFyH+YsvSo8eMmTIP1R1Hxoq9epJ/fpuqV7l6tX1T8MtVUqv5J80qQ58
yxkY6BcWFmb25xjrnnXPumfds+49iKr7Q/nEhax7T8G6t41OX1NiM1j3lpN1
b11VmLdqpXesa93auG+/rd/q3bvr9/yxY/9w9myZOFEmTHDX8eNl3Djjfvyx
dO0qb72lVW+YHDkkY0bJksV6lisXuGzZMrM/x3y27t8fKYhg3YdsgGz3BWS1
NZDI+mwt50CCmZnrBCS44H/wZkik7pEDMkrwgYO/a5b7a1/V/cEC4sLerHsP
wbq3jU5fU2IzWPeWk3WfwKq7dPeuvoc3b6KOHavPcWfOLHXqGLdGDSlUSD75
RA8DuHDhH+7cKV99JTNmJJATJ0qvXnqbP2WDBhIYqMfn+/lZzypVuGa+iXaa
Kohg3Vf+FrLLZEiw7pHjEr3GQTZdAPnmPsiqayHB6edI3Qf8LIjgovfgUBPL
/bWvPrcPFBQXsu49BeveNjp9TYnNYN1bTtZ9Anv+vF7Sv2FDd3eac6FKe1XB
48frF9GwP/6ol8fPmVOCgyUk5B+WK6d/C1T7J4AFC0qePHo3w4oVtRUqSNGi
+taLFLGedepwzXwTZd2z7ln3rHszUHW/v5C4kHXvKVj3ttHpa0psBuvectq1
7l9+Wa8Xd+cOumecxz18WId5QIAULoyaPbs0by6rVuknzbDqRZk7Vy9h99JL
ki6dpE2rJ7wnvM8/r+9DihRSvLjlrV8/YMmSJWZ/jvls3feYIIhg3YNTsMf0
gQQrFbnn4BhvcMl98GkvsgcSHB6P1H3pHYII7tEAarm/9lXd7y0sLuz9Duve
M7DubaPT15TYDNa95bRl3atXNmlSvS7c6NEyZkzismdPHeZr18q2baht2mhH
jdJ5btg5c2T6dPnoI30Gv149/bZXT35goBf085Ns2exgcHAgR+abJ5jnoE0W
QoLT9sEz4GW2GxecOP/OLMicJyHBNf0K74VE6h68aXCsiA/W/Z4i4kLWvadg
3dtGp68psRmse8uZMHVfq5YMHCi//65Pprv2r7/0yWj83H2mTHoS9+DBiU7V
43nzyt69emgBaN+++oUbMgRay+5JGzTQg+Rz5fLMrnbxVb3ob7yhXzirW6ZM
4PLly83+HGPds+5Z96x71r0HUXW/u6i4kHXvKVj3ttHpa0psBuveciZM3QcH
64XQly+X1avjcMUKvXa6Ckzk5h490ocIRoyQ4cMTne++qzN25045cABVPVcq
N9TL17y5Z8yZU1Kl0ju2J0/uHdVNe30/O4/siDd//nyzP8d8uO5BoLrvPAUS
XDQAXMM8y3njgsclxvaGBCO3yjpI8JAO8mbN/5MgIsdzlOBvmuX+2ld1/2Nx
cWEv1r2HYN3bRqevKbEZrHvLmWDn7ps0kZkzZdasOFTX6dcPrXv1qh06JNOm
yaRJic4+fSRfPh3m336LumiRHhHhWPpePcO4WbLoPe69XsdWl3VvqmBxgHX/
Vhjku59DDhkOmfk344K7wo3rBQnOuwfXKwDXHEDerHmOCCL4wMHfNMv9ta/q
/ocS4kLWvadg3dtGp6/p0zx+/PjIkSOzZs0aOXLkgAEDPvnkk7lz527bti0y
MjK2b7l27dqUKVM2b9789Jd++eWXRYsWjRs3Tv2o8ePHq38fPnzYxa1v2LBh
8uTJt2/fdvWm9BBOb+vWrVvrnXHlypXo61y+fFl9BM2cOXPGjBnLly8/d+5c
AtxbN2HdW86EqXuV7d2769XkWrWKw+bNJTRUn0QGb/HBA/36JkL375e2bfWa
8JUqoaofUqqUfqPmz6+Ph+Bmzar316OgZctyZL6JgsXBumfds+5Z905Rf1p/
X1JcyLr3FKx72+j0NY2B6nQV9e85Y8SIERcvXnz6Wx48eKC+pK4we/bsJy+P
ioqKiIhw+qPCw8MfP3789I/as2eP4wpXr1418maND7Hd1v79+53e5wMHDjiu
sG3bto4dOz75pfbt23/zzTdm32E3Yd1bzoSp+23bZOpU+eCDuB08WFq29EDd
g6o3gLrP333neRcu1NPbVUp7and1x3T1LFn0k+aRxqeglSsHrlixwuzPMda9
UaC6r7Mcstu/IIcPgUx3zbjgyPzxPSErboIE9zFsMRcSebMW2i+I4BaK4G+a
Fet+R2lxYa/WrHvPwLq3jU5f0ye5d+9e//79HcX69ddfq569dOnSiRMnVLp2
7txZXai+GuMM/pUrV8aOHev4lhh1/8svvzgunzlz5vHjxy9evKguUddxXLhx
48YnrxwVFbV161bHrZhd965vS/1NqC786KOPFv2T33//XX31t99+c6T9uHHj
du3atX///ilTpjh+jnp05t1n92HdW86EqfuHD/VmcHEuqadUL8rq1eiqerjF
ismrr2ozZPCwr7wiL7ygp7enTu0ZU6bU09XVTy5eXEqWpN63QQPuiGeiYHGA
dV9rJSS4MRy46Xy+Q8Yt/iPkqH6QxXZBltsG2XgRJPJmBesePCYD/qZZse63
lxEXsu49BeveNjp9TZ9k3rx56kudOnX6+eefY3zpwoUL6nL11R9++CH6wk2b
NnXp0iX6FHaMul+8eLG6cNiwYaqmn7zcMTZgzJgx0ZdcvnxZ/c8nz4abV/dx
3paj1lX+O/129cmjvtqrV6/ooxyPHz8eOHCgunDhwoUm3ed4wbo3z9u35exZ
OXPGw6rnoV49adfO+w/QoUd2xIuXly7JuXMxzZlTD3rHB89HW768Xo6+QAHP
mzevvreBgVKxolSunNCqh6Z6tmhRfTyEOqxXLyAiIsLszzHWvVFY96x71j3r
3gnqb+zvyooLWfeegnVvG52+ptHcu3fPcTp71apVTt8J8+fP79ixY1hYWPQl
7du3V9dXtf71118/XfczZsxQF06ePDnGzzl69Kj6zBk3blz04PzVq1c7jips
3rzZcWbcWN2fOHFC3ROnY/6jifO2HKMXTp065fTbFy1a1K9fP/XfJy9csmSJ
+pYpU6YYuM8eh3VvkupuHDmi9ywbOdLD9ughZcrIO+94/zH+x0t1v2iRXuxu
4sR/+MIL+j1w8aLHPHxY7yz/+eeed+pUGTZM3n7bYyvnx0t1uwUL6teLRhsa
GsT97s0TLA6w7huEQzb/GrLneMjsp4wLBvKHQyHBYwvgogHgYgvIm7XIHkEE
NwsAf9OsWPdby4sLe7LuPQTr3jY6fU2j2b17t+vz5vf+y5OXqK7ftWuXqum1
a9c+Xfdbt251zElX8et0wn40W7ZsUVXuWLbOMULAWN1/8skn6ntnzZoVY7SA
+7d1+/Ztx5Owbt26SZMmjRgxYubMmfv27XN9u47RCEuXLjVwnz0O694k796V
jh2lWze9uTn412kM27fXJ6l9s+4fPZLjx/VWfQMGxHxann9ev/rqzjx86BnH
j9dPdffu/9v43lOqO6/eGE2besdGjSRjRkmfnv7PYsUCwsPDzf4cY90bBfrA
BEPv7fmQYN37Hzdu2e8gB38ECS4uB867BxdbQN6s4JZ2oeshwd80K9b9lgri
Qta9p2Dd20anr2k0jpPaPXr0MPAmWbNmzdN1f/fu3dGjR0cPgO/fv/+cOXN2
795969YtFz8KOXd//vx5x0wBN/dCevq2fv755/ecMWvWrNh+SPRBjNhO9ycw
rHuTVHdV0bixTjkV+B70vff0yGrfrPu7d2X5cj11XXV3377/UNW9Cn8Pvvql
S+v11tR/Gza0lXXq/P37niTJP/Rl/Pz8nhxmZhKse6Ow7ln3rHvWvRNU3W8O
Fhey7j0F6942On1No1FF7Bhm/+SFx44dU2H71X/58r/Mmzfv6e91WveKhw8f
Llq0qEePHk+WcocOHVavXh3b6XWk7v/zxAgEd5ZUevq2NmzY4Pj2xYsXnz59
+uzZs+ohOy55csGBaPbt2+eYnhBjrL4XefJPXG/fl1ixYt3fuCHp0smUKbJh
g2ze7ElnzpRq1fQebV5/jA4Tsu7v3JGlS/V0+IUL9RP7pOnT6zkLH30kH3/s
Gf389OiLCRP0RAAzVA9h0qS/N75X/00w1c3lyiU5cui5/w7VvzNl0oHv9X3n
vWVQkH8CLITCujcKVPfg4u3tvoDsMwYy6KhxwZnv4I54YN2Ded5oMSTyZi35
vSB68bjEh9as+40VxYU927DuPQPr3h7GOBn99AsdHh6uLu/bt++TF27evDnG
N6oifvp7Y6t7B48fPz558qT6nR0zZoxKe8fP+eyzz5xeOc66P3r06C6XONa4
U8Q57/Lp27p8+bKq+OjN7xxMnjxZXW306NExvn3r1q2OtJ80adKjR49c31aC
wbo3yZs3dTT99JMeTO7Zn5wwa+a7bwLXfXi4NGkily/H/FLGjHot+lSpPOaL
L+ojCefOmfVYIiP1S1m9uoSGSo0aCWrVqhIS8j8rVdJr/anIfe45HzVfPta9
iYLFwbpn3bPuWfdOUX+3f1tZXMi69xSse9vo9DWNZtOmTY4o/uuvv6IvvHTp
0o7/Z+nSpfGqexX1d+7ciXHN69evq6533JBj8nsM4qz7oUOHOh087xTXU+bd
HCewd+/e956as+B4NhSff/75w4cPXf+EhIR1b5KsezN0UfcjR3p4fYNs2WT4
cPn6a/nmG1NcsUKPNGjbVt5/38P3fPBgGThQ+vePVXWLT05q6N1bT/R44w19
Tt/UxevUU5ohw98bFyYqS5bkmvkmChYH+OvQdAHkwI8h+46GLLrbuOAQcfCB
g6vqgdMKwMeOvFmRl0xZaick+JtmxbrfECIuZN17Cta9bXT6mkbz22+/OXJ1
165dTt8Jp06dcr/u1U9r3769uvLt27djXDkqKqpPnz7q+tu2bXv6R8VZ3KtX
r57rEscPV4waNer+/fux/Rynt3X9+vWzZ8+q/z55tZ9++unJulf33zGLQREe
Hu5iBT+vwLo3SV+rexWG9+6Z7tWrEhamVzN4uu4fPtTtf/u2xyxTRi8v3769
XgHPDDt3lsKFdYnPn68XE/Cg6gfOmiVffumuX3who0frjeHKl5fgYLOsUEGK
Fxd//8Ro1apcM99EweIA6x6cON9jAuSgEZBIJ4J93f9TSPAUNjj9HDw4gLxZ
wS3tAo9Bgr9pVqz7daHiwh6sew/BureNTl/TJ/n444/Vl7p27XrixImnv3r4
8GH36/7x48e9evVSF27cuDHGldWXevbsqb506NChp38UOO/+t99+U/df/QT1
WO7evev6yk/f1vjx49UlU6dOffJqjtP00SsSzJ07973/LqPn9OiE12Hdm6Tv
1L3KalX3L79syuZxMZwyRTp0kNq15Y8/Yt6NqCj90nvQNWtk7Fg9JGDUKFMc
MUKvjqgyX92KelyecsIEPdK+YMH4bfiurv/aa5I1q4m+/rqkTSuBgXoWgLq5
RGXNmjx3b6JgcbDuWfese9a9U1Tdr60qLmTdewrWvW10+po+ydmzZx3BqwJ5
+/btly9f/s9/Y1wl85IlSxxfcn9k/qxZsxwnuJcvX37jxg3HhSqlHdPYu3Tp
4nRAO1L3KucHDx6svn3YsGFPjxlw57ZWrVrluM/RC+Crf3Tu3FldsnXrVvU/
jxw54rjCjh07Iv+JeqIM3GePw7o3SZ+q+02b9LJsAweabt++Uq+enjn+dN17
3AsXZO5cmTHDLFWJh4bqM/gffeTJgwbDhukB8ClTen+buRimS6cX7gsK0osi
ql/VRGXt2gHuLKwKwro3ClT34H73jRdBdpkMWWi/ccFl58HV/sFt38tvhQQT
G3mzgoc1ym2DBH/TrFj3a6qJC1n3noJ1bxudvqYxOHDgQPfu3aPnrffq1cux
x5yDDz744PDhw09/l9O6v3nz5pM74vXo0cNxNt9xiOD77793egeQunfM6Fd3
Mvpggmuevq27d+8OGjTIcSfVnZ82bZrjOmPGjFH9rq4wbNiw2Ob4T5w40cB9
9jise5P0nbqPipLz5/Xu8MOHm+7gwXrSfc2aCVH39+/LxYu68U3y7FnZtk0/
ovff19smespevSRLFr0kYPbsf6ti/403EoUZM+oz+F6/G08bHBy4bNkysz/H
WPdGgeq+9VeQbb6E7DAdEqn7Clsge42DzHsYErzz1b+BRN6s4JAJL64Y8KE1
6/6b6uLCHm1Z956BdW8bnb6mT/Pnn3+GhYVFl7iic+fOH3/88bfffuso3KdZ
t26dutrcuXNjXP7o0aNFixZF97LjlP2oUaOcjvx34DiY8OTKfu7zzTffqNty
/3ud3taVK1dU1Eff4a5duy5YsMDxwB8/fhy95j/rHoF1/6SJre6V6nXZuFGP
MDfbTz6Rli31nm4JUPdmGxWllxEYNUoGDdKN747qmv37637v3TtWu3bVuZoh
gx4Dr/T31+/DxGD27Hp8vrpjidDSpVn3JgoWB+uedc+6Z907RdX9qpriQta9
p2Dd20anr2lsqJK9du3auXPnLl68iI85v3v37unTpz3yo1zjqeXr7927d+HC
hQS4wx6HdW+SPlX36jm/d0+/Omb7++96tLzTVfWsqHre1IO6ds1df/1Vli3T
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
mx0HXPnedg4EaPeld0OARfmQkxW8sQB+buA3zXR/7avr9vRA0kDsXq+I3VsG
u8dUYrGI3ZvR7s3IX3/xX9pVq3Lx/ORw/LhyLl50/+CB4y96/z6X1PP0pEKF
LEK+fIz6JNUnkxzWr2e7b9WKWraMT/XqVKYMf2uKFUuaokX51T08XG/iRuDn
J/3uDQQ0DrF7sXuxe7F7u1HX7WlBpEFwgNi9PhG7twx2j2nCREdHHzt2bN68
eaNGjerbt++IESMWLFiwffv2p0+fJvYrN2/enDp16tatWxP+6PTp02FhYePH
j1dPNWHCBPXfR48eTfiw69evqy/17NmzZ82atWrVqkuXLiXn5ATz3XffhYaG
3r17N952tWXdunVfffWV+hDUG//rr78Sewb1ozlz5ixbtszgPU1BxO4NQuw+
Hsru+/Th3uLKNJND48assaDdK65fpwsX6OxZi7BnD3+Mr75Kb72VLN58k6vG
vfyyHV58kXx8uNph//5Jo170s88oQwbKnt2CVKokdm8goHGAdh84HaLVfAiw
NRti9+DkdrCTIFhwoOJWCBfafYXvCSH3fyHAb5oZ7T60I2kgdq9XxO4tg91j
Gi/K05XUt7eXYcOGXb16NeGvPHr0SP1IPWD+/Plxt8fExERGRtp9qoiIiOjo
6NhHKoMODAyM+4CAgADl18h5m2R+/PFH22v98ccfcbcrYe/evXvcnenfv//v
v/9u90mmT5+uHtCrVy9DdzVFEbs3CLH7eNy/T6GhVLEiBQUlizZtuC8AbvcP
H/KxQArZ3bhBV6/yyoLUwNGj/DEWL64D3t5cmqBLF+rZM2m6daPmzentt/n+
jPUoU8ZrxYoVRl/HxO4dDWT3A4ZCVF8HUWkLBKKoH/8AAc55AKvqgYA3B5CT
FbR78IQBv2lmtPspnUgDsXu9InZvGewe07h58OBBnz59bEq7cOHCQ4cOXbt2
7cyZM0q0O3bsqDaqn8YbwVfaO27cONuvxLP706dP27bPnj371KlTV69eVVvU
Y2wbN2/ebHvYlStXbGo/fvz4ffv2/fTTT1OnTrU9Rj1er9M4bmJiYrZt22Z7
Rwnt/uuvv1Ybhw8frt74yZMnBw8erP7niBEjEj7Pjh07bM8gdp/SiN1bg4sX
afNmWrQoWUyfTqVL62D3ipgYCLUDP//Mp1Zq4MQJPqn27tWB2bNZ7Rs04MUL
SVK3Lqnv4HPP0fPPWxAvL49FixYZfR0Tu3c0Yvdi92L3Yvd2oux+cmfSoKPY
vU4Ru7cMdo9p3Kg/h9SPgoKClNXG+9Hly5fVdvXTPXv2xG7csmVLcHBw7Bh3
PLtfvny52jhkyBBl03G32+YGjB071vY/1XdZ/c+QkJDY+wbR0dH9+vVTG42Y
8X79+nX10nGH5uPa/alTp9SWDh063L5927ZF/Yft5sP58+fjPs9vv/0W+97F
7lMasXtr8McfdOwYbd2aLCIjyXbQb93icX9XoY7j2bO0bBmFh6cili9PFLWr
S5fSkiVJM3QoD8dXqpSs3oIVK3I1P7sz/C1A3rweS5cuNfo65rZ232ckIYB2
/+lyiB5jIfw2QJTd4Thgb7V2X0GApePBz82FfeXAdffgGw+YCWFGu5/YhTQQ
u9crYveWwe4xjc2DBw9sw9lr1qyxeyYsXrxYeW7cP5kCAgLU45WtL1y4MKHd
z5o1S20MDQ2N9zzHjx9XF8zx48fbJueHhYUpO1b/xn1MeHi4+t2pU6cm8yy1
5cyZM2pP4s75T5i1a9fa7mBs3brVpu1x7X7FihUJ93natGlqY9zuyU+fPh05
cqRtWoLYvQMRu3dDrl7lfnZRUTxafeaMy9i7l0aNopdecn3lt2SizrrMmbll
nhFkzGhNypb1joqKMvo6JnYvdi92L3Yvdq9jlN1P6EYaiN3rFbF7y2D3mMZm
//79dmeqx+bBs8Tdorx+3759yqY3bNiQ0O63bdtmW0GvvNjugn2N2Mb3U7pw
csSIEeq35s2bF2+2QNx8//33CxcutK2jt81GiPt+p0yZorasXbs27q+sW7dO
bZw8eXLsFvV3o20pwfnz58XuHYjYvRty4waXcQsIoAED0D/vEbp3p/r1KVs2
GjbMNfTtS5kysbAnk3TpeG9z5+ZOAUIyqVZN1t0bSLcJhAB+hcGi950nQ4C1
6Qodchywqp5ra+aDeo5UI1Qgdu95ihDAoxY0DcKMdj8+hDTo2EHsXp+I3VsG
u8c0NrZB7a5duzpwkqxfvz6h3d+/f3/MmDGxE+D79OnzzTff7N+/X6MEvS2x
twV+/vnnFO3GL7/8Ypstv3jx4uQ8PuHYve2ugtqBhPsTu/T+7Nmzat+6dOmi
fvHChQti9w5E7N4NuX2b3TZLFv4Yc+Z0GVmzslz7+HDRAOdz4QIdOEBp0lDa
tFzRLjk8/zx/YoUL61N5z02oW9cr7mwrg+K2dj/wS0IA7R70xL4jIMCZA0UO
Ok7DMIjGSyHqrYCoswoCuSuiQOw+7zFCAPsYNl8IYUa7H9edNBC71yti95bB
7jGNjTJi2zT7uBtPnDgxb968uc8y51nsliqya/cqjx8/DgsL69q1a9x17h06
dFi7dm1iw+sHDx60TfiPN1c/mYmdgZCcP+0S2r2t+P/u3bsTPufgwYP/fjaB
oX///up/7t27V/1PsXvHInbvhjx8SNu304QJNGkSTZ7sMkaNonbtKFcul00e
CAnhlnZNmya3k6CfH1WtSr6+XA/fSqj3pb7gBQpQ/vz6U6OG98qVK42+jond
i92L3Yvdi93rGGX3Y3qSBmL3ekXs3hq0/3cSHuiIiAi1vWfPnnE3bt26Nd4v
KiNO+LuJ2b0t0dHRZ8+eVd/ZsWPHKrW3Pc/MmTMTPnLbtm02tZ8yZcqTJ0/s
Ptvx48f3acZWkU8lyX7HCe3etpo+buVAFSX77Z81BFT/bav5P2vWLNuPxO4d
i9i94CrUcVy1ikfPs2RxDRkz8ndz4UIuM5gcxo+nDh2oRQur0awZT0jw9CQP
D/3x9ZV+9waCuNKzQHYPFr0Hpzp3mQSBTC+vthECvDlQZhcEeNTAxe/IyVpi
HyGU2w4BftPMaPeje5EGQWL3OkXs3jLYPaax2bJli02Kb926Fbvx2rVrO/8/
topzybd7JfX37t2L98g///xTeb3theI1kbc9v8pXX331+PHjxE5IW4u6ZObg
wYOJPc/f9ux+xowZ7eN067Nl06ZN7Z+tsj9+/LjtadWW3c9iW4DfuXNn9d9H
jhzReC2nRezeOCsUu7cAT5/S77/Tjh20Z49r2LyZ6tWjzz/nKQTxaNuWWreO
T5MmVLs21axpNfz9eXlCmjSGUKSIp8zMN45eowkBtPtW8yG6j4MAx6ARw0XG
/RUdp0KA6+4//xqi5F4IRJC9TxBC1e8gwHsyZrT7Ub1JA7F7vSJ2bxnsHtPY
XLlyxaau+/bts3sm/Pzzz8m3e/VsAQEB6sF3796N9+CYmJgePXqox2/fvj12
i21dgEpERIRGTby/n9UHWKAZ25OrjB49+uHDhxpPldDulyxZYtuHuA+zzWqY
M2eObQF+YhkyZIjGazktVrL7woXp+HF6/JiNzOXcukU5cojduy8xMfTgAd27
h3LtGnXsyO3mlbPHpVYtqlaNe9VVqmR9Klak8uXphReM6oiXL5+nEQ1V40Xs
Xuxe7F7sXuxexyi7H9GXNBC71yti95bB7jGNm+HDh6sfderU6cyZMwl/evTo
0eTbfXR0dEhISMJxcNuPunXrpn4UO9itlLz9szJ6sb7vcK5cuaL2Xz2bei/3
79/XfnBCu7f5+8CBA+M+bMCAAWrj1q1bz507t/TfsY31BwUFqf/euHEjuPO6
xDJ2v3s310Dbto2F+sgR16P2J2tWOnxY7N4cPH7MKv3XX7px4wbNmUNffkmD
BkH078+L7uvX/xf16rHdZ8xI777rLqRLxwUDDcLLS/rdG4h2UeskAe0erP0O
dsRruhii9G7HAevGB06HADu7VdwK4cKa+XmOEwI4M792FIQZ7X54P9IgKFDs
Xp+I3VsGu8c0bi5evGgTXiXIO3bsuH79+t/PZFwpc3h4uO1HyZ+ZP2/ePNug
9qpVq27fvm3bqFQ6NDRUbQwODrZNvz927JjtYTt37nz672h3rk8YpfM2Ex8y
ZEjCOQMJk9DuHzx40KVLl/ZxCuvt2rVL/c+QkBC7pf5l3b1jSabd58rF7dG/
+y5VsGoVL5oWu0+dREfz/Apl9LH88Qf98oue5e5Pn6ZevahhQ/r0U0OoW5fe
fJOHs1980V1Qb9YgvL3F7g1E+8/vJAHtHuxJB048qLsSAhFkcN092AoQfOOx
je8do+YaCMTuwSkT+Y5CgPUKzGj3w/qTBmL3ekXs3jLYPabxcujQIZve2qKs
1tZjzpZBgwYdPXo04W/Ztfs7d+7E7YjXtWtX22i+7RZBrD4rE09srvukSZNS
dK7aVvSrnYy9maCdhHavsmrVKttEgsnPYqvyl9hqBbF7x5Icuz93jluT+/m5
foFw7DLhdOnE7lMpyr537aLVq/+hQgXuEZ8zJ+XNqw8eHnwCqOdUp6XuhIRQ
585UqBDXdsieXUCpWNE7KirK6OuY2L3Yvdi92L3YvY5Rdv/lQNJA7F6viN1b
BrvHNGFu3LixdOnSWBNX6dix4/Dhwzdt2vT06VO7v/Ltt9+qhy1YsCDe9idP
noSFhdlayNkSHBw8evTo2Jn/0dHRsVX0cbtft26deq24VQG1Y7txEe/xMTEx
a9euVW/Ztg9BQUEanZUuXbqkHtO3b98U7aehsYzdX75MEyfygGaDBqmCOnV4
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
9Gm8x0dHR3fu3Fn99M6dO3G3Hzly5OzZs3ZfYsKECRr3CiQSicThiN0LIMeO
0YIFXJbt4kVzExnJa+fr1XOwZ323blx5fuBAGjxYC7sC0r8/N6/v1csRunen
Ll14an2nTimjRQuupKf22dPT3fHzk373lrX76YEQoN0vbgqBNG0H53jPaQsB
Si7Y796F6+7BQg2ra0GA3zQz2v3Lj0gDh+3+t99+U59G9+7d423v0aOH2n7t
2rV4269evaq2Dx06NCYm5uTJk+vXr9+yZcu5c+cSe/4DBw6ox4eEhNy9e9ex
PZRIJJLEInYvgFy+TEuW8Hptb29zkz07q27DhvTwoSMcPcp16pTdDxqUKP36
UZ8+LPIJUZ7es6cjKEmvWJEKF04xBQtyUzyXm3VqQOzeUEC/Bu0eHIMGAe0e
acYHCnL4JxDgsv0/00KsqAeBCPKeUoSwpibErPYQZrT7lx6TBk37Omj3P//8
s83W421XW9T2M2fOxNt+9OhRtX38+PG2EfnYzJ49+/Hjx/EeHB0d3a9fP/XT
rVu3OrZ7EolEohGxewHk+nWel67U2MvL3GTLxvPSGzTgyvkO8MsvXCJv9OhE
GT6cunblFe76UrculSjhiN3HYpuZr967rfG9G1K1qszMF7sXuxe7F7s3n92/
8JQ0cNjuT548qT6NkSNHxts+evRotf3EiRPxtv/444+xdfUXLFig/ueaNWuC
g4PVlsjISLsP7tGjx6NHjxzbPYlEItGI2L0AEh3NI9dXr/IgvqmJiqKhQ5Xo
0dmzjvDf/9KpU7xOITHWr6eiRbly3Xvv6clbb/F9iW7dKCTEQbp25dp6r77K
9eX03TezUKaM98qVK/W6qCYWt7X7fsMJAbT7BS0gln8KAbre3DaOM681BKjn
rl0XcKgQBGL3pzwJAezRsK46hBnt/vlo0iAxuz99+vSpRHLlypW//9/uR40a
Fe8X1Ra1XT0s3vZ9+/bZ7H7dunWxG48dO6a2BAYG2prixXuSuPX6JBKJRMeI
3Qs4MTEs+Pfvm5s9eyg0lEqV4gX4RjB5Ms8QyJGDT2YdKVSIx+6VoTtMp07U
qBF3urfVzHdDpCOeoYA96UC7/6odBGj34FAsUpgOfOPjukMcLAKxqBnEd1Uh
ELv/TwFCAG8HgTcHzGj3z8WQBk3s2X10dLRG6/np06erx5w/f1799+DBg+P9
7hfPqhNcunQp3vbDhw/bBu4fPnwYd/uAAQPU9p9//jl2y82bNwOeJW69PolE
ItExYveCYOPqVYqI4JHcggUNIWdOev999ecTbdyoJ/Pm8XL+pk0dp3FjqlKF
XnyRnnvOTfHy8ly2bJleF9XEInYvdi92L3Yvdq9v5icVu7+1YMGCbxLJ999/
//ez9vTq0+jSpUu8ZnadO3dW2+MVxldRvq+2d+jQIV45fdtM/iNHjsRu2bx5
s22Fvi5vXyKRSBJG7F4QbNy6RTt2UJ06kClroJ7Zy4tateIWAzoyfjx17syr
7x2mdm0qX57b+aVJkzSvvmpB8uf3DA8P1+uimljc1u5dOzMflNzZn0GAC8CR
OwPftISY2hEC1HOk4IBiYzUIxO4vZyIEcEXDT4UhzGj3xqVPnz7xhultCt+3
b9+ED37y5Iltlf2FCxdiNyrTt9XYv3z5cuzGGTNmqC0bNmwwdOclEok7R+xe
EGzExHBxvNu36c4dQ7h4kVq2pDJlqFIllIoV/0GJedmy/LQIpUtT8eJJU6wY
l09UZMtmKSpWlKp6BgIWpgPtHtTMZY0g5reCQMbuwXX3YH02sKYfOPi+si4E
YvfXMxACOPgOHnSx+7gJDw9XH0hoaKhtOF79O2XKlLhV8u7du3f27Nnz58/b
/uecOXNsS/Vji+Rv3LhRbenfv3/cCQC9evWKN5ovkUgk+kbsXjAFN2/S6dN0
8KCJ2bGDm+IFBlJQkOM0a0b581PmzC7jnXd4lQFSoj8VUru2VNUTuxe7F7sX
uxe7/yd37tzp3r27rXK+MvoRI0ao/1ZuHjstXxm62tK1a1fb//zjjz9sjx86
dOjq1atnzpxpW4l/+PDh2Od8+PChbXX/77//7oK3JJFI3CNi94IpOHeO1qyh
r792dwYN4qFz10Z9GeNOHrAATZp4ycx84wAnt4N2D/oO2M4PvDmAzOo/lhcC
vCezrwTElE4Q28tBIHb/39yE8K0vBHg3Sew+Xm7cuDFq1Chl6DYlV5pvq6hv
i83uu3XrFrvl2rVr48aNi3187969Dxw4EO8J1fZOnTrFW84vkUgkOibuH+3I
84jdC8Zx6xYtWkTt2qF/51uA9u3pgw8oY0YZu5exe7F7sXuxe7F7sXvDc/fu
3QsXLty8eTOZj//zzz/Pnz//66+/xquwJ5FIJM6J2L2Q+rlwgTp2ZKv97DN3
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
pJDuSfeke9I96R4AEFSk+1Rb0dFWCovsdC9vmHXr1HvvWZGZSrbGjVPt2qkM
GVS2bH5W1qwqUyZr9329eqp+feo/1b07R+YHsUJ7Ko1hGaZ7w0df0sn/Cvmq
C2EZ/qhi8tCyUWVSP5cxqi01jYp0DwARgHTvvOLirHHsr15NofrzT1WqVISn
+yFDVNOmqlcv9eijVPLVvbuqU8c6nb9qVT+rShVVtqz1q1GFCtR/q02b8suW
LQtUp5oU0j2Vdiq0Qyku6G5UJqf8b61hVIY/DnDePQCAdO+8rl1Tp0+rEydS
qH77TZUokerSfVycdaZ8dHRgqkkTlS+fNbz8gw9SSdYDD1iD8PfpIyHUOqK+
WjXVuLHP1aiRathQ3XmnlfHlfUW51l13cd496Z4KZJHuSfcAgJAg3TusmBgr
aN92m3UufMpU6dIqSxa1dm3on7trXbyo9u5VL76oJk0KQElQbdpU7dhhnYBP
JVqnT1vXC3jmGetiAcOHq4cfVt26qR49fK6OHa1D0LNmVTfd5P+B/ZFaVaqU
5cj8SE33X7Q1qpDH5FDVtCFGFfL2h6oM32+G6X5nFaMi3QNABCDdO6zoaGtI
t8yZrXOWU6xSYbo/flytWaOeftrKm+ZVubI1TNzRo6F/XilcN26oU6cc1cmT
as8eNXq0GjnSKgn4/fr5UxLwGzdW6dJZAV/eV5RrVa5cdsGCBYHqVJOSZtP9
B/crkzJMW4a7cQ3L8Lpyn/T0vwyHxTN84iYjBkjN7WVUhoPLmQzoZziG5OZa
RmU4KB/pHgAiAOneYf31l/rXv1T58tYB8ylT+/enxiPz589X99xj7Ud+/vkA
1B13qFat0ly6l2h/+LAaOFDdf3/y1aePdUT94MHWkHqyxsaPV2PH+lNPPWUF
/PTpud594te7Z8x80j3pnnRPug92NwgACDbSvcP6808r3VeunHKPmGJXxIuJ
UZcuqT/+cFRvvaVatFD//Kd6880AVM2a6q671M6dTndkR0YdP642blRt21px
+557kqlu3VSlSqp3b/Xkk+of//C/HntMde5sDZifP7+VZ/PksWI+patOnXKL
Fy8OVKealDSb7g2TWmjT/dKORvVRb6P6tLP/taKNUb3f36i+aWRUJj9rSBmO
mW+S7g1X+3f1jMrwSoKkewCIAKR7hxXB6X7vXusy7pMnO6r77rN2JX/5ZWCu
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
//79vT+il3Sv496wYcOSum/A032yrY33ZQ3Y6f63335LdrH6ubRp00b/99q1
a/nz55cpq1evTva+iQpIutet6tChQ1KPEsB0L4vq27evHkdCJQyp16lTp3nz
5nl/V8vbo379+l5mAADAJ6R7AEhrUj7d65PuxUNJGDJkiPnzmjJlipdjANas
WZMnTx6VcJzAww8/vGTJkh9//FGarU8PTzTdDxw40Psjekn3lSpVkptGjx6d
1H0Dnu6Tba1Pa8BO90ePHvW+2PiE8zIkiadLl27v3r3y38WLF6uEIeudX27P
TQDTvZc1HMB0r8lKe+mllxo2bKgbqRKGJVy3bl1S848fP75ixYrJLhYAAIdI
9wCQ1qR8ul+/fr3+ojl27FiAnkQiZs2alS1btqRuLVGihDSge/fu0lTX6cFI
9zExMfqygHPnzk3qvk7SfZcuXWSeZH/6cNhan9aAT+le3H///XZTO3TooLye
lZCsf/3rX/rR7eH7bCmc7nft2qXnOX36tPP2nz9/furUqbphuXLlclvhthEj
RtSpU8f5YgEA8I50DwBpTcqn+7/++ktfLT3Zk7hNrFy5Uh7C9QpoNj3on3A7
M/3GjRvVq1cPeLp/66239MPt2bMnqfs6SfeyupSDKwY6aa2va8DXdC/PNF26
dDly5Pjll1/ktc6aNeu5c+ec3DFRO3fu1I/uNqT8zJkz9fQUS/dnz57V82zc
uNFLgxMdGF/uou/7/fffJ3qvfv36derUyctiAQDwCekeANKalE/3YuLEifq7
5rnnnnPdIbtv3z55CIejkHl36NAhWb59ZTpXZ86c0Y8+a9Yse+KOHTtq1Kih
p5uke0m1Dz74oD1g4KpVq/Rl/rwPmOYk3b/77rsq4cIE69evtydeu3bNbV+w
k9b6ugZ8Tffxf++yL1u2rPwrTXJ4r0RJ7pY3j0oYE0+PhC9Pefz48fYWS4ql
e1G4cGGVcP6+6/v2woUL9t/vvPNOrly55B3u9jYePXq0Xv7JkycTXbKs/Kee
esrLQwMA4BPSPQCkNSFJ97Gxse3atdNfN4UKFWrfvn3Pnj2rV6+uByJ7/fXX
A/HM4suXLz9ixIhEb7rrrrt0Em/SpMm9996rL+OeJUuWMmXKGKZ7faz4TTfd
1KBBA1kDsliVcG679/HonKR7SYs6uspDNG3atFevXi1atJCXz+0yag5b69Ma
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
O38bxCf9raEPNujSpYs9xafXyw9O0n2y7ZTXXS/H7fex+MTGzPdjY0CW36pV
K5VwUrOsDfkESaDw9ZmS7iOSl3Rvb6Dq0zmnT5+u/5vZg/3GsA8WTar7vXjx
op7TPuL9/vvvl/82b97cs23e0/1vv/3m5Xn1799f5mnZsqXnTZ9++qlK2Fdu
d8j6N7QsWbLYPwWfPHlSH/Hy3nvvud3dYQO0Q4cODR482D5V1pV0R3oe0j0Q
YZyfd+9Tv6rNmzevU6dO9hik3r+afUr38nedOnX0/HpjKdF076Rbi096++fL
L7/UMzsf9gdA8HTv3l0+j+3atbOnyAbhuAQSA1US6V62srws09499P3333ve
qkcWGjlypP5voNK9Dt2PPfaYPcU+XlRCUKe/5ciRQyWcC+l2d9naLFGihN2b
VahQ4emnn3Ybzk6TTdm+ffvaY8TddNNNsljpmd36ap82RPVaTXTmZHlP9w57
bFsA071Pb4P4pL819PI7dOjgOtH56+UH/9K9WzsPHz6s2+Z5TUnPdO/HxkB8
wokbuqli4sSJfjxT1/eDH3dH6uQl3b/xxhsq4ZAP/aujPh9EPJQE1x9+k033
Elr1lN69e6skTvjynu6PHj3q5XnpHw0S7SdlgSph9BX78JVz586VLl1aJubP
n18+m48//rgeg6VcuXJ//fWX290dNiA+4aSDPHnyqIQf3OQrcsmSJbKSJbw3
adJEke6ByOU83fvUr0ZHR/fq1UtvEzZu3Fg2D2Sb4fjx4/b5TZ4t8TXd626/
evXq+ibPdO+wW4tPevtn8eLFKmG3F9f6BFIDPbxPoqPq6Q4k0XRvH+ueKDvX
bNiwwfNWfTGOESNG6P8GKt3rKz2NGjXKnqL3pSYqW7Zsnht4165dW758udzL
zsKy9SX9cKJX+pOtwZdeeqlhw4a6kSphP/K6devsGXzaENWniLr+xuKc9/Pu
HfbYtgCme5/eBvHJpWbP5fv0evnEJN3b7fz11191qzZv3uw2p2e692ljwLZy
5Up7dH35IPvxTF0/FH7cHalTUulePjL6NzHpuPQU2YzUczq5VKXzdC/9sHIJ
s65M0r0eu0l6Wic3xcTE6JH9XMnHM9HfAJ2ne70Cu3fv7nZ6F+keiGzO071P
/eqHH36oEq6sYQ/QpK1duzapr+Zdu3bpm7xcD9o13Z86dapFixb2iCKe6d5h
txaf9PbPxIkTVcJ5iMk+XwApwD4O3/OCbn6n+9jYWH0SsefwRJK8dHSyb/rX
v/6lG+D5i5/zdC9brXqn/Ny5c+0peuyyF198cauLjRs36mOfPv7446TaHxcX
J7N16dJFN+z555/38mTPnz8/depU3eNJ/2z3jT5tiL7wwgsypUiRIn5c4N5L
unfeY9v0s040S/raAJ/eBvG+p3ubT6+XEwFJ9/J+1gd4eA7R4JnufdoY0OSr
WY/Ar8chl5gvHyWH97W5Bh9f74tUK9F0Lx8T/VuusC8z+tdff+mD1Z2cb+48
3evtVSFfIq5znj17Vl/twr90/+9//zvRbysJ8rqvc73GnB6wYtiwYbIBLJu4
8pS9XC7TYQPsEQbcTkyTDk2f40a6ByKV83TvU7+q90N5XlNYH+SZ6FezdKT6
pkQvwqu5pns3buneebcWn8T2j/TAxYsXV4mNWQ0gJOTzK1tr8qmsWbOm2+5s
v9O9qF+/vkoYec9tuh55w3Wzc+fOnXqK/OE658yZM/V0J+ne3vW5Z88ePUX/
aJDoiczt2rWTmzp16mRPSWosMj2+vdv+90RntofFs49C92lD1D6JwHXEdZv3
seOSCr8+9dg2+TJSHpdg885L+nb+Noj3Jd379Hr5ISDpPv7vX1fczikQTz31
lPrfdO/TxkB8QlLT+yWbNGkifw8dOlQlXJ0h2T2PbpQLn+6I1Mwt3Usf+O23
37Zp00ZPdO364v/e56IShvR0/Yl137598pZ2HVfEebqXT6i+TmjVqlXt6zVL
D6+vSar8TffyVte/TBYpUsTerJXH0ld+kU+QPaxf/N/b224X5kiKwwacOXNG
z+Z6bY4dO3bo62Ep0j0QuXy63r3zflV/fVeqVMnesLl27Zrcyz4vL9HG6MGZ
ZevCdeGu57w7T/fOu7V4l+vdr1ixQk+Rzu2ee+5RCYflu23GAwihzz77TH+E
ZUvM3jqSzueJJ55Q/qZ7ieT6mOEhQ4bYQ4t/+eWXelC7nj172nPKlqG+YH2X
Ll30nNJX6HHnNM90L0t+6KGH7H5McrRerGte1gfGN2vWzLNtOlpmzZpVd9Hy
7+233960adMtW7a4znb69Gm92EGDBtkT33nnnVy5ckm/7TaY3ujRo3VrT548
qaf4tCEqM0smVQmnDLz++uv2QNPSb48bN06a4Tq2vJukwrVPPbbt3XffVQnn
f7meLS7fNW57/500IN6Xt0G849Ts0+vln0Cle733UNaAvKZ6yvXr1//xj3/o
9e927RjnGwP2zDlz5tSHGUdHR+txDOrVqycP4fyZKhfO74VUzk73uXPn1ufm
aPJWHDZsmNt7SXob/YOnKFSoUPv27eWDWb16dX3kif3Wjfcl3YsPPvhAf/az
Z8/eoEED/RtylixZ9IfUv3Qfn3DCiz59XrYkpZEtWrTQCxSTJ092ndM+fkBW
QsOGDVsnkGfXt29fmdPtN0/nDbjrrrv0mpTuXTbpy5YtK3/L8ypTpowi3QOR
y6d077xfXbNmjZ4omxa9evVq3ry53gLRF55O6qtZj9usEobV7ZqgUqVK0tna
Gw/O0328424t3uWKwCrhOHy5oz5KVsi2je8rFUAQSVjQEVtvC0kvoY+fFG3a
tHGd02G6j/877KiEQY1ks0o2bPTG3m233WZffl3T1yBWCZe6q1OnjnQpKmH3
sd7FnOj17lXCcHaNGjWSxdodoz3csQRJfZXwRHeFSwDXd9HXrN+wYYMeb1+a
V6JEibZt2w4dOlR6ad1lyXJc9y/ff//9+lnkyJGjVq1asqE4ePBgvYdaPPDA
A64P5HxDVBw/frxYsWL6VnkuMrMkNf0qyCaibqqX9ZxouHbeY9tky1/33tJm
SdDyXSMtke+aRC/Vl2wD4n15GzhMzT69Xs7Jez7j33SD5U1iT/n66699bWd8
wo8z5cqV00srVaqUvAr6W1vv1nRL9843Br7//nvdSNd3xc8//6wX7tOYCcqF
83shlZMuzvWVlW5H4u2QIUNc38ZuPvroI9dhKkXJkiXlXef6U4Ae+9FLut+9
e7fr9M8++0zvYNKfptq1a2/fvl3v5bH3+2iHDh3Ss9m/jnoh/Ubv3r1dB5yU
Jrl+TWiyBS6djEqCdK2uo306b8Dp06f1ZfU0+dB17tx5//79+nQbu1PV+d0t
3dujWpHugbBjn0DnJN1rTvpVPZveKtBkU022XWWTQI9Skmhj5FbZbtdby5ps
EdWoUePw4cN6Bt1N2SdhudLp3vW60g67tfi/t39effVV2Zyzh/3Jmzfv7Nmz
Ha9IACnnu+++s5O17igkA0qadjsTvF+/fsrx7tHFixe7bl9lzZpVgpjncHbn
zp2TnsSeTTYIn3rqqevXr+sLFuvrMms63VepUkX+sH8wlO1GiUWuW2WrV6/W
TyGps5j1pcl79Oih/xsdHT1lypRq1aq5dZWyWPsaT7YdO3bIHe2tVk3i2IQJ
EzzHc3O4IarJFuCYMWP07xKatKdly5Y//fSTl5WsD/P2vApAvC89tqu9e/fa
+/c1WdXjx4/3owGaw7eBXqVJpWbX5fv0ejmkf/FIiutL5ryd8QnBR0K6609n
I0eO1EPiSNjxbEayGwPyudArs1evXm73nTdvnr5Loj/XJ8r1gRzeBRHs/Pnz
27Zt27Rpk7xvA7XM3377bcOGDdLJB2qB2rVr16QrXrt2baJLlq5Y+gf5apg8
ebIkd0nT2xOsWLHi5Zdf1p9HJ79RJ+XEiROy2SwNsI+zAoBEOelXY2Jidu/e
LVsarqE7WXIvWfK3334rXZznWai+ctKt6XS/YMGC+IQTATZu3PjLL78YPi6A
YNObTFu2bPEMX36T3P3111/v2bPH+2DmEkWlj7JPnE+UTvcVKlSIT/jp8scf
f5SeLYBNlRb+/PPP69evl2422cXqHltmPnr0qPdtPO8bop5+//33NWvW7Ny5
06ejrJPi34bo8ePHv/vuO3lFDhw4EJAtWIdvA5/49HqFkGRzWf/ygjpck8EI
WYki3SMi6WFPGjdunOit+jdPz2GsAABeJHXsIgD4zcsV8QD4inSPiKSvOlq6
dGnXYaa0zZs36zOkOJQUAHxCugcQcKR7IIBI94hI58+f11uhxYoVGzNmzMcf
f7x48eI33nijQ4cO+rD8AQMG+HH5UQBIy0j3AAKOdA8EEOkekWrfvn2dOnXK
kSOH2xgaNWrUmDVrFtEeAHxVs2bNvHnzLl26NNQNARA55s+fLx1LvXr1Qt0Q
IBKQ7hHZrl69+vXXX8+dO3fevHkbNmxwvQgUAAAAAEQM0j0AAAAAAOGOdA8A
AAAAQLgj3QMAAAAAEO5I9wAAAAAAhDvSPQAAAAAA4Y50DwAAAABAuCPdAwAA
AAAQ7kj3AAAAAACEO9I9AAAAAADhjnQPAAAAAEC4I90DAAAAgHcHDx6cPXv2
smXLQt0QJE5eoAULFvz555+hbkgoke4BAACASHX9+vUdO3asWLFi165dsbGx
oW5OSrty5Yo8cXn6v/zyS1xcnMmi3n77bUlM5cuXD1Tb4J1Pr92BAwfSp08v
L1C1atVSpnmpE+keAAAAiDzbt29v0KBB1qxZ7a39okWLTp8+PdTtSiFnz559
9NFHM2fObD/9XLly9ejR4/fff/dvgaT7FOPHa7d8+XI9Z8aMGS9dupSSrU1V
SPcAAABAhJkyZYodjvLly1e5cmVJPfq/Tz/9dKhbF3TR0dE1atTQzzdTpkxV
q1aNiorS/5U/Vq9e7ccySfcpw7/XLiYmpmvXrqVKlZo0aVIKNzhVId0DAAAA
kWTVqlV6816i6I4dO/TEK1eujBkzJnv27OvXrw9t8/y2ZcuWgQMHek5funTp
6NGjXadMnjxZnn7mzJnnzJnz119/6YmyKurVq1egQIGjR4/68eike835q+Cf
YLx2aQfpHgAAAIgYsbGxVapUkW37ypUrX7x40e3Wc+fOeb97XFzcsWPHNm3a
tHfv3hs3biQ6z6VLl7Zt2yazBabFLq5evSpLPn36dKK3fvnll3fccYfn9GnT
pnXu3Nl1Svv27WUN9OzZ021OWTmBOjI/OjpamnrmzBnv97p27dqPP/64Z88e
+cP5Y12+fHn37t2So70s/9ChQz/88IM0w/linfD+EsT78ir4Jxivnd/kEySv
wsmTJ1P4cf1GugcAAAAixqJFi/S2/ZIlS5zMP3To0Jw5c65YsUL+/uijj8qU
KeN6nr7bzF999VWVKlX08GUib968o0aNkjzoOs/KlStlgXny5PF8rKioKLnp
m2++sae89957MmXkyJG7du1q1qxZlixZ9JKLFy++fPlye7Zvv/129uzZTzzx
xK233jrbQ+/evSVvyh/Sfh2i27RpIwtp3Lix9+fuU1N1upenL1H9rrvusk98
KFGixOeff+65hLNnzz788MOZMmWyzwfP6aJPnz72nEeOHLnlllsaNWokf584
cUKejn0vWdUzZsxwXeyff/4pL1muXLnsxdatW1cSaLBfgnjfXwX/OHztRMGC
BXN6uPfeez3nvHTpkuecrvbu3et2l4ULF5YtWzZdunT26S0TJ05M6veu1IN0
DwAAAESM0aNH68jpcIh4iZkyvySy1157TYcCSTTFihXLli1bvXr1XOccN26c
nuGmm2668847ZR7934oVK/7xxx/2bF988YU+Y9rzsTJkyCA3ffXVV/YUHZkL
FSqkw7L8IfFZDxEgzZCoqGd7/vnnW7VqVa1aNXnoVh7KlCmTN29e/be+IJrM
r9s2aNAg17a58aOpQg9UmFRTtZiYmJo1a8pNOXLkGDBgQP/+/bNnz67vXiaB
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
6KOPeEP00ujl80O9Z8+eJbflB9mpLZFVfe+996xDru3Zs4ffKO3ll1+2fbtI
WtmXbxQog5N2b7FYHnnkEar2gx/8wDqAPIkqvwciOal1W2uxCYa7FeRfcmlp
Kak9rbmd2ju/7RyRsXvaXvwuez/96U9lfmbhzJ8/n6/D3LlzbU9+qKyspCb4
yAYjFtg9AAAAAAAAHgYZCvc7gjTqjjvu+PrXv86fPvnkk7Y1nbT7/i/siQ1e
Sz5u3Lg777yT+/6PfvSjlpYW25r81m9s8D5rf/jDH7761a/SY5qFj+cvebN1
4pvf/ObDDz9Mi+W3QrvpppvsRplz8sz88+fPv/rqq9bFXnPNNT//+c+tT+kx
ya/iVeVnttOqPvTQQ9Z3wHFVN2zYYH3zx4wZM26QZ555ZsKECXFxcXa3J3DS
7omqqip+/T6tBq3h2LFjuYMTtFgXbALnt4IMR48e/d73vjd+/HjH0+OHte3s
kLH7Rx991LqQH0qxbds2a2Wz2fz000/zyt///vdpq9Eq0fvG3xOZYf1GArB7
AAAAAAAAPI/PPvvMqnVs8ODsbbfdRipnN9reW2+9RVO9vb2dWSZJELm8VR++
9rWv+fn5OQ4Td+HCBRI9a7Wbb745JCSEVI7fJ27fvn3Wmlwtf/Ob39ADEmFe
nzSK9MpoNNotds+ePXfffbfjWtG8L730kl1hWloaCTi/cpzz9a9/ferUqXZ3
OnN+Vflo6qGhoatWreKKLbOqly9ftn2j7KA1sb37QE1NDS93XI4jLS0tb7zx
hu0Q7r/61a9sbX24r2tYm6B/mFtBEnrtb7/99lBXvvc7ve3soBdINSXX4Xvf
+95Q24JDK283S1JSEr/ewcpPfvITUnscuwcAAAAAAAC4hZ6eniNHjhw8eNDR
wRVD0peTk1NRUSF/a7Dm5uZ//etftlejO8LV8vbbb+8fPGZaXl5eUlKi4qrS
MisrK0knq6urZYZuc2ZVbbFYLMePHz906JDkqtLbctddd5Egx8XFkbmXlpYe
HmTXrl0LFy7k51Q4c7KEDHyz5ubmksXLVBsJm0AxTm47TWltbaV3o6ioSOac
gREF7B4AAAAAAADgFmRux6Zf+PB3BoNBcurzzz9PU1977TXXrtSQeOQmGLXA
7gEAAAAAAABuwSPVkt99/mc/+5l1kDorxcXF/Er5jRs3umXdHPHITTBqgd0D
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
hZycHH7avDK7J5GkNTGbzUNVqKysTEtLKygosJZcvnxZ62sBdAfsHugdTe2+
ooLNmcO+/W02ZQrisYmNvcf6+7N2wO6VAruH3cPuYffA84HdC9p9cXGxvOea
BrEtIa8vKioim969e7ej3VssluDgYCqPiIgoKSnp6uoaatvt27ePrJwfKOFn
CChz7ejoaJo3MTHRyTsZdXZ2btiwgWYJDw9X0JynArsHekdTu29uZpmZ7OWX
hfwCGeFZvvz3VVVVWu+osHulCG1c2D3sHnbvJLB74F5g94J2zw+gBwYGKnjz
d+3aJXndPbm/dQg7ehAfH5+ZmVldXS1j3yLH7uvr6/mVAikpKfI1+bUAvK2p
U6fCQG2B3QO9o6ndU5qa2Nq1LD4e8disX39vTU2N1jsq7F4psHvYPewedg88
H9i9oN2TEfPT7G0Ljx8/npiYuG6QtYMkJyc7zjuU3RMnT56cP3++3Zj5ERER
ksPv94vZfb/NGQipqaky1Y4cOWJdmWnTppWVlSlrziOB3QO9o7Xdd3cPCH59
PeKxMRrHuGAwFti9UmD3sHvYPeweeD6we0G7T0tLo/Lg4GDbwpycHDsxJ/t2
nFfG7jltbW2FhYWJiYn8XH3C399f8rzHq9p9RUVFkSwzZ87kTezYsWOohfT0
9LS0tNCiVq5cySuXl5cPVXm0AbsHekdru0dGQQwu2FFh90qB3cPuYfewe+D5
wO7lYyfpjm/g3r17+aSLFy9aC41GY8EXpKenD9fuu7u7yaNtSywWS3FxcVBQ
ENVft26d46KuavcRERETnaakpER2rxmAf3wlJSVdteYoAXYP9A7sHhGOwQU7
KuxeKbB72D3sHnYPPB/YvZPpH+LYvXWI+6KiIsl3uLq6elh2v3r16qHOkM/N
zeWnxDtOuqrd79y5c6MstFj+QmJjY+2G8mtpaSkrK2ttbbUt5EMChoWFDdXi
aENHdm82m9vb2y8B8GXOn6/dvp2NGwe7RxTHoN0HlxXYvVJg97B72D3sHng+
sHtBuyeioqJo0uTJkyWNjLx4WHbPTwaYPn2649WL2dnZNImac1yU4HX3jY2N
tP584Z2dnXZTFy9eTJO2bdtmW0hPqXDBggXKWvQ8dGT3TU1NtMM88sgjjwJg
wx//+PDvfsfuvZedPet2SUR0GoN2H1xWYPdKgd3D7mH3sHvg+cDuxe2+traW
yzUJcn5+fnNzc//g4VFS5tTUVD7JebtvaWnhx9DDw8NJ8fr6+qiQ/h44cCAg
IIDKMzIyHBclYvek82FhYTT7nDlzOjo6HCvww/T+/v70injJmTNn+DD7mZmZ
Clr0SHRk91VVVQ899NCNN974UwBs+MlPfvz977P/+78Rave9vayjAxnR6ew0
8P9ZmgK7V4qQ3a/5u1BipgtFUHKf3qk8z20XyvwZQvnDAaH8MUcoNzQLRWRn
nRXJRLJ0klAEexrsHrgX2L243ROlpaVcvTlBQUFcfq2eLjm8/FDX3RcWFvL7
1/OfBYKDg603yIuNjW1vb3dclIjd8yHyaCXb2tokK3R1ddFUvgILFixYsWIF
b27u3Ll24wOMZnRk93l5eW+88cbChQtPAWBDZeXhDRvY448PjGzvdpe3S08P
q6tjH3+MjOjs3Xv/uXPntPvs4sDulQK7h93D7mH3wPOB3ati98T58+dJyvjA
dxw/P7+oqKjs7OyhjmVkZWVRtY0bNzpOqqqqiouL42fLc0JDQ7ds2dLb2yu5
KP5jgu3Ifs6TmZk5a9Ys+XlbW1s//PBD68p4e3snJyc7nsM/mtGR3e/du/ft
t99OTEzsAcCGzs6WrKwRet19Rwc7cIAtW8bWrEFGbrZtu6++vl67zy4O7F4p
sHvYPewedg88H9i9WnbPMZvNJMJ1dXVNTU30WHDrWCwWo9FYU1MjebxeRXqc
OwRPOl9dXd3Q0DDUjwyjGX3Z/TvvvCP5sxIYzYzkMfOPHmWPPsoeeIC9+y4y
chMefrcLbpMKu1cK7B52D7uH3QPPB3avrt2DUQvsHuidkWz3hw6xu+9mL77I
5s1DRm5Wrbq3qqpK6x0Vdq8U2D3sHnYPuweeD+wedg9UAXYP9M5ItvvDh9lT
T7G9e9mVK8jIjcmEUfVg97B72D3sfnT5wtmzZ3ft2pWSkrJjxw5nLs5qa2uj
L6L0XTc9Pf3QoUMWi0WyWm9vL9U5ePCg2uvr+cDuYfdAFWD3QO+McLt/5hlW
WOj+NUFkY3DBjgq7VwrsHnYPu4fdq8ynn37q7e1tHZjLy8trz549MvWPHDni
7+8/0Ybo6GjHm4ATycnJNHXr1q2arbvHAruH3QNVgN0DvQO7R4RjcMGOCrtX
Cuwedg+7h92rSVVVFem8r69vTk5OY2PjP//5T276tbW1kvWNRqOfnx9VSE1N
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
Hu1+cQCTCexeX8DunUz/EMfurUPcFxUVSb7D1dXVVrsnbT99+nRFRYVthd7e
Xn6bPL6E1atXD3WGfG5uLk2aNm2a46SrGvfOnTs3ykKL5S8kNjZWZig/Z9qC
3bt7Xa4C7H4oYPc8vb1sxgz27LOuzq9/PXADelfaPaWnh12+PDCqHiKe9vaH
bceQ0QjYvVJg97B72D3sXgKy+38EMpnA7vUF7F7Q7vu/uGE9GfqpU6ccp5aV
lVntntSeP7a9Ix495r7Mb2TPTwaYPn2640j72dnZNImac2xF8Lr7xsZG/gsD
Ldx23SSB3UsCu/cAYPc8fX1s8WI2cSIbP96l+c1vBi69d7HdI6rG4IJ+CrtX
Cuwedg+7h91LQHYv339h9/oCdi9u97W1tVx4SZDz8/Obm5up0Gw2kzKnpqby
SdzurYfpk5OT+/r6qIT+rl27lkoCAgK6u7uppKWlhR9DDw8PP3XqlLXagQMH
+L3zMjIyHNdBxO5J58PCwmj2OXPm2A3uJwnsXhLYvQcAu7fGZBq4+r693aWZ
Pp3FxsLudR2DC/op7F4psHvYPewedi8B2X18EJOJnzfsXk/A7sXtnigtLeXq
zQkKCuL3mLN6ellZGa9ZUFDAC6dOnZqQkDB79mz+1Hq/e6KwsJDfU57/LBAc
HGy9QV5sbGx7e7vjCojY/cqVK/lKtrW1OVMfdi/JaLP73t5ePjKkJ3H8+LfH
jh0Ytt3dijRK4/o74iFqx6DSp5QcsHulCNn9szuE8m6CUCLeF8qL25RHUJBv
rxDK6ylCGbtHKG60e8EfVYLjhCLY0/Ro9wunMpnA7vUF7F4VuyfOnz+/efNm
PvAdx8/PLyoqKjs7mx9/t0LyTmpvrTZr1iy7K/GJqqqquLg4fqCfExoaumXL
lqEuaeQ/JtiO7Oc8mZmZtA7Oz3vVtrKysqjCaDs0PNrsvrW1dffu3Ts9i5SU
b95338DhY3cr0igN7F7/Maj0KSUH7F4psHvYPewedi8B2f2CaUwmsHt9AbtX
y+45ZrOZrKeurq6pqYkey1Rrbm4+deqU/OFyi8ViNBpramokj9eriN0Q/UAB
o8ruOzo6jhw5Ehsb+6FnERf39bvugt27LTNnDtwRb+9e1tyM6DKtrQ/zS8w0
BXavFNg97B52D7uXgOw+NpjJxBd2rytg9+raPRi1jCq7Ly8vnzNnzvXXX/+y
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
apI5a50mNTc3nzp1aqjD5RyLxfL/sXcn4FHU9+PHv7a2v1at1nrVWrUe1YpH
ra0VRVl7qFWoF1XrgdpSgQByhDMQMCBBbpH7kiBJBAygFqIccpkYCCQECOFK
SEIgJiQhJBBykGz4f5P5u892sxmW+e7u7Oy+X8/n4UlmZ3c2m9mQd3Z3tri4
OC8vT3u83nc4AL466j4IUPehMzLw6+sZL09Dg80Px1yl7o2i7ql76p66d0PW
fZ8pQmeoe2uh7r1b9whZ1H0QoO4ZRm1sfrifUvdGUffUPXVP3bsh6773B0Jn
qHtroe6pe3gFdR8EqHuGURubH+6n1L1RSnU/M8zMWf2E0nSdY3wUA3nq20rz
+Bql+feHSnPzIaVR2Vmz2giVGTlCaRTvaZbrBVn3vaYKnenWi7q3EuqeuodX
UPdBgLpnGLWx+eF+St0bRd1T99Q9de+GrPue04XOUPfWQt1T9/AK6j4IUPcM
ozY2P9xPqXujqHvqnrqn7t2Qdd9jhtAZ6t5aqHvqHl5B3QcB6t6ic/q0KC4W
RUVN/zImTllZ+9raWl/fT6l7o6h76p66p+7dkHWvfwCHrtS9pWh74N9uWx5o
89eJxwNqzlL30EXdBwHq3opTXy/WrBEvvyxeekm88gpj5gwadN+uXbt8fT+l
7o2i7ql76p66d0PWffdZQmeoe2uh7ql7eAV1HwRk3T/5pBgxoulRYJ+O7KDh
w6l770xdnYiLEx07iqefFs8/z5g5ffvel5GR4ev7KXVvFHVP3VP31L0bsu67
zRY6Q91bC3VP3cMrqPsgUFFx2SOPiLvuEi+84Nv5zW/EgAHUvXfm9Ommv5a8
/75YvFgsW8aYOWvXPlhcXOzr+yl1bxR1T91T99S9G7Luz3FHoO4thbr3Vt3b
7fY9e/bExMSMHTs2IiJizJgxsp42b97c0NCgc66kpKR58+YdPHjQZXlNTc3a
tWvnz58vf0pERUXJD1avXn3q1KnWLkeuPG3atKqqqvP43p8n+TvbihUrZs2a
FR8fn5qaWl1d7bttWRF1HwROnbrsrbfEU0+J11/37dx5J3XvtamqEs88Iz78
UCQlibQ0xszZs6ddZWWlr++n1L1R1D11T91T927Iun9rrtCZrm9T91ZC3Xul
7svLy2XUd3Vn9OjRRUVFbs+Vl5fXvXt3uY5sfOflR44ciYyMbHlRERER8qSW
l7N9+3ZthePHjyvtDa2TNRcWFuZ8ZWTZVVRU+GhzVkTdB4HGxssOHmyKxNWr
fTsdOoihQ6l7r9X988+LJUtESUnTa/AZE6ehwdbY2Ojr+yl1bxR1T91T99S9
G7Lu/zNP6Ax1by3UvXrd19TUDBkyRGve2NjYjIyM4uLi7OzsxMTEnj17yoXy
1JaP4NfV1TkS3qXuJ06cKBcOGjRILi9olpycrG0iPDzc+aLk71GbNm3StuK7
ui8pKenRo4e8/GnTpmVmZqakpIwYMUJ+OnnyZF9szqKo+6DQoaTEdvCgbedO
306nTpdFRlL33qz7pUvF8ePmX5mQH5sf7qXUvVHUPXVP3VP3bsi67zJf6Ax1
by3UvXrdx8XFyZNk/+7bt8/lpKNHj2pdLGvI5aTY2FjH4+DOdV9VVaU9oJ+W
lua8flZWlrby/v37tSUyuidMmOD8eLqP6j4xMVFeeL9+/erq6rQlu3fvlkvC
wsJqamp8sUUrou6DQoXdXtHQ4PPp0uVhjpnvraHuA2lsfriXUvdGKdX9sk5K
M7G/0owepjSzuhufhW8ozZ82KI3i7db3faW55JTSqOysye2Eyiz+p9Io3tOs
WPf6f+eh7q2Fulese5m32kPnK1eudHsLx8fHywpevHix88KdO3dqj+mPHz/e
pe4LCwu1VD98+LDLRU2fPj06OjolJUX7dNWqVdpfFTZs2KA9bd5Y3WdnZ8fG
xtrt9tZW2L9//7Jly5KTkx1LTp486evXAlgOdQ/PdeliM1z3RUUiM1Ns2SK2
bWOaZvNm8dhjTc/Mp+4DYGx+uPtQ90ZR99Q9dU/duyHr/l8LhM68Rd1bCnWv
WPfbtm3T79yaZs5LKisrw8PDtUfhp02b5lL3jY2NAwcOlAujoqLS09Nra2tb
+95t3LhRVnlpaan8WHuGgLHWHjNmjDxvTEyMh6+XrK6u/uijj+RZRowYYWBz
wYq6h+dU6v7DD5tetn/99aJNG6Zp7rhD/OIXTW+KR90HwNj8cPeh7o2i7ql7
6p66d0PW/ZsxQmeoe2uh7hXrXnsAvW/fvp7f5lrRf/LJJ46PXV53n5qa6jiE
nfxg0qRJiYmJubm5OvWt8tj9kSNHevXqJc8eHx+vv6b2WgBtW/3798/Ozjaw
uWBF3cNzKnU/cqT4979F375Kv6gH0wwdKu69V3z8sfu6LysT2dli3TrGH7Nl
y0NlZWW+vvtQ90ZR99Q9dU/duyHr/vWFQmeoe2uh7hXrXhaxXD527FjnhXv3
7o2JiVnQ7MNmcXFx2kmbNm3SHpc/c+bM2VbqXjpw4ICsp67/S56rtcPvq9T9
WadnICQkJOispr2gQDNgwIDMzExjmwtK1D08p1L3//mPGDJEfPON2LOHaZpt
28QTT7T6zPz9+8UXX4hBg8TgwYzP5/3375f/efn67kPdG0XdU/fUPXXvhqz7
zouEzrzVm7q3Eupef1z6uuUNuGzZMrl84MCBzgs3bNjgckZZ33K5bPNevXrJ
jwsKCrQ1W6t7TWVlZUpKSkxMjPZcfal37945OTkt1zxn3WdlZaXqGjp0qLYJ
eR9v7ULOnDlTWloqL2r27Nnaynv27Glt5VBD3cNzKnX/1lti2DCRnt70BnCM
nPx80bFjq0fVmz27qTojIsx/jkEozIwZ97v9H8q7qHujlL651D11T917yIp1
/1qs0Bnq3lqoe8XH7mUoaZ174sQJx8Li4uLk76xYscJR92PHjpUfjxo1KuU7
UVFRcsmCBQvkx+Xl5drZ6+rqtEf2HRobG7dt26a9Wl+u3PJqnLPutQ15KD09
/Zx7jvbjKzY29pxrhgjqHp5TqfuuXZt+0963z/8vqQ7Q0T9m/ksvibZtxbvv
ismTGZ/PokUP5Ofn+/ruQ90bRd1T99Q9de+GrPtX44TOUPfWQt0r1r3jEPep
qalub+Hc3FxH3ffv3/+cTT137tyurTxDXntW/4ABA1qedM66X7Vq1SJd8mK1
qzFu3DiXQ/mVlpZmZmY6/vig+fLLL+XKkZGRrW0x1FD38Bx177e679xZ/P3v
IilJHD7M+Hy+/fYRP7xNKnVvFHVP3VP31L0bsu5fiRc6Q91bC3WvWPdSdHS0
POntt992e5Q52cWOuv/8888X/6/BgwfLUydMmCA/LiwsPPvdkwHk8pa/I61b
t06eJDfXciuKr7uXm5bXX7vw6upql1OnTJkiT1q+fLnzQvmpds2NbTH4UPfw
HHXv3br/xz/EwoVNT9GvrHSdV14RnTqJAwfMv56hMTY/3H2oe6Ooe+qeuqfu
3ZB1//LHQmf+Q91bCnWvXveHDx/W4loGclJSUklJiVxot9tlMickJGgnaXXf
UsvX3ZeWlmqPoY8YMSI7O7uhoUEulP9u3bq1T58+cvnKlStbXo5K3cucj4yM
lGeXsVZVVdVyBe1h+t69e2t/f5Dy8/O1w+wnJiYa2GJQou7hOerei3P6dNNt
0rZt07ved+zoOrfeKh5/nLr329j8cPcxt+7bdz1k1igWh2LdL/iX0kS9ozRt
spQmq43x2dJWafpNVhrFSp3fRWk+eUFpVHbWv/9XqMx7Q5RG8Z5mxbr/52Kh
M9S9tVD36nUvZWRkaOmtCQ8P1+LX0emtHV7e7VH1UlJStPev1/4sMHDgQMcb
5I0bN+7UqVMtL0el7rVD5MkrWVlZ6XaF2tpaeap2BSZMmDBz5kxtc6NGjXI5
PkAoo+7hOerei1NdLQYOFL/6lfjlL8UNN7jOlVeKP/+Zuvfb2Pxw96HujaLu
qXvqnrp3Q9b9S0uEzlD31kLde6XupbKyssWLF2sHvtP07NkzOjp63bp12uPv
bs2YMUOu+c0337gsz8nJGT9+vPZseU1ERMSSJUvq6+vdXo72xwTnI/t5LjEx
cdiwYfrnLS8vnzVrluPKdO/ePS4uruVz+EMZdQ/PUfdenMbGpiPnZ2aK3bvd
zDPPiGefpe79NjY/3H2oe6Ooe+qeuqfu3ZB1/+JSoTPUvbVQ996qe43dbpch
XFBQUFRUJD9W/O40NjYWFxfn5eW5fbzeizx8CF7mfG5u7tGjR1v7I0Moo+7h
ubfesg0YIL76quml4uc7r70mhg+n7v9nGhqaXmJ/4oSbefFF8fTTTe1/+jTj
86mpsen8NdtbqHujqHvqnrqn7t2Qdf/CJ0Jn/tOHurcS6t67dY+QRd3Dc+Hh
tnvuEb/4hbjllvOea64RffpQ965jt7sfmfZt24olS0RiIuPz+frrh7Qjz/gU
dW8UdU/dU/fUvRuy7v+RIHSGurcW6p66h1dQ9/BcdLStffuml4pT976el18W
NpuYPbvpoPqMr+ezz9o6Dr7qO9S9UdQ9dU/dU/duyLrvtEzoDHVvLdQ9dQ+v
oO7huepq24kTorTUyLzxhhgxgrr3dP77XzF2rHjpJfHPfzI+nwED7tu1a5ev
7z7UvVHUPXVP3VP3bsi6f2650Jku1L2lUPfUPbyCuofnGhv7NDTY6uuNzFtv
XcZR9Tyf7dtFQoKIjGz6kwjj65k+/f7s7Gxf332oe6Ooe+qeuqfu3ZB1/+wK
oTPUvbVQ99Q9vIK6x/k4dfZshbHp2vVh6t7zqa8XdXXmH24uRIaj6lH31D11
T91brhdk3T/zmdAZ6t5aArbuX/ysLqDmLHUPXdQ9/KNrVxt1zwTq2PxyF6Du
jaHuqXvqnrp3Q9b9058LnaHurYW6p+7hFdQ9/IO6ZwJ4bH65C1D3xijVfYdV
SrOsk9JM66U04wYZnye/UJq1jynNxy8rTfdZSpN5l9Ko7KztkoXK6LfqOUfx
nma5XpB1r//Xki59qXsroe6pe3gFdQ//oO6ZAB6bX+4C1L0x1D11T91T927I
uu+4UugMdW8t1L236t5ut+/ZsycmJmbs2LERERFjxoyR9bR582b9FyEmJSXN
mzfv4MGDLstramrWrl07f/58+VMiKipKfrB69epTp065rFZSUiLvkvLUOXPm
fPbZZwUFBUZ2gvMkr9i0adOqqqr8sC0Loe7hH9Q9E8Bj88tdgLo3hrqn7ql7
6t4NmRL691/q3lqoe6/UfXl5uYz6ru6MHj26qKjI7bny8vK6d+8u15GN77z8
yJEjkZGRLS8qIiJCnuRYbfPmzWFhYc4rdOvWLTEx0Tt7Riu2b9+ubev48eM+
3ZDlUPfwjy5dbMOGiZ07RXk5wwTWVFa2P3PmjK/vAtS9UdQ9dU/dU/duyLp/
KlHoDHVvLdS9et3X1NQMGTJEa97Y2NiMjIzi4uLs7GwZ2j179pQL5aktH8Gv
q6tzJLxL3U+cOFEuHDRokFxe0Cw5OVnbRHh4uHZRhYWFWtpPmjQpNTV1x44d
06dP1y7twIEDvthVGhsbN23apH1F1H1L1D384803bYMHi9RUkZvLMIE1R48+
Ul1d7eu7AHVvFHVP3VP31L0bsu71d+N/U/eWQt2r131cXJw8qUePHvv27XM5
6ejRo3K5PFXWkMtJsbGxjsfcneu+qqpKe0A/LS3Nef2srCxt5f37959tvic6
x/7Z5pcGDB06VC5csmSJ0j7hTklJyYQJE5yfJ0Ddu6Du4R/DhtneeEP076/0
izrD+GJmzLg/JyfH13cB6t4opW8udU/dU/cesmLd/+1LoTPUvbVQ94p1X1NT
oz2cvXLlSre3cHx8fFhY2OLFi50X7ty5U3tMf/z48S51X1hYqOXz4cOHXS5q
+vTp0dHRKSkp8uOlS5cOGjRI/uu8QkJCgjyjXO289oHs7OzY2Fi73a6zzqpV
q7S/YGzYsEF7zgB174K6h3/Mn9/h+ecva9PmsrvvZpjAmueea/fNN9/4+i5A
3RtF3VP31D1174as+ydWC52h7q2Fules+23btuk/ll3TzHlJZWVleHi49ij8
tGnTXOq+sbFx4MCBcmFUVFR6enptba3n303ttf8rVqzw/CzSmDFj5LliYmLk
pltbZ+PGjbGxsaWlpfJj7dkI1L0L6h7+cfRoxq5dm7Zs2bR1K8ME1uzatb2i
osLXdwHq3ijqnrqn7ql7N2TdP75G6Ax1by3UvWLdaw9q9+3b1/PbXCv6Tz75
xPGxy+vuU1NTHYfLkx9MmjQpMTExNzdXp76lTZs2aQfWk2t6fmXONh/Er1ev
XvK88fHxnqzPY/duUfcA4AfUvVHUPXVP3VP3bsi6f2yt0Jl/96PurYS6V6x7
WcRy+dixY50X7t27NyYmZkGzD5vFxcVpJ2kNHhUVpR1Y2G3dSwcOHJD11PV/
yXO1dvj99PR02fVyHZfn6nvI8QyEhISEc65M3btF3QOAH1D3RlH31D11T927
Iev+L+uEzlD31kLd649LX7e8AZctWyaXDxw40Hnhhg0bXM4oi1gul23eq1cv
+bHjjelbq3tNZWVlSkpKTEyM9lx9qXfv3i2PWbRp0yYt7adOnVpfX+/2orKy
slJ1aUfkk+R9XH+foe7dou4BwA/kf0Am/nLy14nHzRrF4lCs+5lhSvPps0qz
sqPSJLczPmseV5ov/6Y0qzoozfY/KM3y55VGZWcdNVyozIf/VhrFe5oV6/7P
64XOUPfWQt0rPnYvQ0mL4hMnTjgWFhcXJ39nxYoVjrrXXhc/atSolO9ERUXJ
JQsWLJAfl5eXa2evq6tzecvgxsbGbdu2aa/Wlys7n6RdvjR37lydNxrWNuSh
9PR0nX2GuneLugcAP6DujaLuqXvqnrp3Q9b9nzYInfkXdW8p1L1i3TsOcZ+a
mur2Fs7NzXXUff/+/c/Z1DLSu7byDHntWf0DBgzQPpXJr70uQFq2bJn+q/JX
rVq1SJe8WO2ixo0bp38oP+reLQvVvdyROnfuPGXKlCNGff7558OGDaPuAfgf
dW8UdU/dU/fUvRuy7h/dKHSGurcW6l6x7qXo6Gh50ttvv52dnd3y1MzMTEfd
yyZa/L8GDx4sT50wYYL8uLCw8Ox3TwaQy12OtC+tW7dOniQ3p30qk7xr82H0
Nm/erLgbyE3L669deHV1tf7K1L1bFqr7PXv2PPTQQzfddNODRt1111333Xef
DHyzvxQAIYe6N4q6p+6pe+reDVn3tk1CZ6h7a6Hu1ev+8OHDWvDKQE5KSiop
KZEL7Xa7TOaEhATtJK3uW2r5uvvS0lLtMfQRI0ZkZ2c3NDTIhfLfrVu39unT
Ry5fuXLl2eZA01ZLTk5u+F/671zfksz5yMhIeVEjR46sqqo65/rUvVsWqvuc
nJyOHTvecccdfzSqTZs29957L3WPkFJUVCR/2hegdfImavl3aa+j7o2i7ql7
6p66d0PWffvNQmeoe2uh7tXrXsrIyNDSWxMeHq69x5yj0zMzM92e0e1R9VJS
UrT3lNf+LDBw4EDHG+SNGzfu1KlTch1Z4q09w3/KlCnntQ/Mnj1bu5KVlZWe
rE/du2Whurfb7UeOHNm3b98eoz7++GO5W0ZFRZn9pQD+06FDhxtvvPGGG274
FVrx+OOPqz+X7Jyoe6Ooe+qeuqfu3ZB1/8jXQmf+FU7dWwl175W6l8rKyhYv
Xqwd+E7Ts2fP6OjodevWaY+/uzVjxgy55jfffOOyPCcnZ/z48dqz5TURERFL
lizRDokv66x79+7eqvvExMRhw4Y5HxVQn/aHC8/XDxEWqvuzzW/HUFJSUmyU
3GeGDx9O3SOkPPDAHx599JInnvjJk09eyrid7t0f1j8oq1dQ90ZR99Q9dU/d
uyHr/uEkoTPUvbVQ996qe43s7vLycu0Jiuf7DPmWGhsbZUnl5eVpj9f7js7B
9uEha9V9o5qUlJQxY8ZwVD2ElBtv/NnmzSI394K8PMb9FBa2P+eRW9RR90ZR
99Q9dU/duyHrvl2y0Bnq3lqoe+/WPUKWtepeEe+IB9PV1NSUl5eX+tEvf3lp
erooLxcVFYz7OXmyvR/+VkzdG0XdU/fUPXXvhqz7h74ROkPdWwt1T93DK6h7
wJ/y8vLWrVu3zI+uueai3btFfb28gzOtjc0P33rq3iilup/SR2kW/1Npsm9V
GpW6nzBAaRKfUpq1jynNF08qzbJOSqOysyrWffwrSqN4T7NcL8i6fzBF6Myb
1L2lUPfUPbyCugf8pqQk5qOP+nbr1vmdd1702/zsZz+g7ql76p66p+6pe32W
6wVZ9223CJ2h7q2Fuqfu4RXUPeA3WVm2Ll3ElVeK55/331x6qaDuqXvqnrqn
7ql7fZbrBVn3D2wVOkPdWwt1T93DK6h7wG927rT16yf++lexdKn/5uqrqXvq
nrqn7ql76v4cLNcLsu7vTxU6Q91bC3VP3cMrqHvAb9LSbDI3wsP9mq433CAy
M6l7/bH54btP3RtF3VP31D1174as+z9sFzrzZn/q3kq0PfDRv24NtJm0oyGg
5ix1D13UPeA3ptT9FVeIN99s2mj//oz7mTDhD/v37/f1d5+6N4q6p+6pe+re
DVn3v08TOkPdWwt1T93DK6h7hILGxsYzZ87UmW3LlvaRkaJfP7/W/fXXiz/9
SXToIDp2ZNxPjx6/27Fjh693QureKOqeuqfuqXs3ZN3fly50hrq3FureW3Vv
t9v37NkTExMzduzYiIiIMWPGLFq0aPPmzQ0NDS5r7ty5c00LW7dudV6npqZm
7dq18+fPlz8loqKi5AerV68+depUa1uXK0+bNq2qqsr4ruAxeTU+/PDDJUuW
+GFbFkLdIxScOHFi/fr1y802YcKdr78u3n7br3W/YoX48EMxb56YP59xP8uX
tz1y5Iivd0Lq3ijqnrqn7ql7N2Td/26H0Jk3qHtLoe69Uvfl5eUy6ru6M3r0
6KKiIueVZRO1XG3UqFGOFeRvR5GRkS3XiYiIcPuL0/bt27UVjh8/7rU9o3Uz
Z86U2xo0aJAftmUh1D2Cnt1eU1iY8+GHH77//jhzJzz85uefF716+bXujxwR
X38t1q9nWp2tWx8qKyvz9X5I3RtF3VP31D1174as+3szhM5Q99ZC3avXfU1N
zZAhQ7S+jo2NzcjIKC4uzs7OTkxM7Nmzp1woT3U8gl9fXx8WFiYXxsfHL3Wy
bt06xwVOnDhRy+ekpKSCZsnJydomwsPDnZ8M0NjYuGnTJm0r/ql7eZW0bVH3
Lqh7BL3CwpjY2Id+//s7Bg681dx5/fUfP/mkv+u+tlZUVIjycqbVqaxsf+bM
GV/vh9S9UdQ9dU/dU/duyLr/7U6hM9S9tVD36nUfFxcnT+rRo8e+fftcTjp6
9KhcLk+VNaQtOXz4sPy0f//+rX1HqqqqunfvLtdJS0tzXp6VlaVlteOYRSUl
JRMmTHB+cN/XdX/s2LFevXpR925R9wh6hw698/774pprxIgRJs9bbzW9ytvP
dc94MDY/7IfUvVFKdf9OlNJktVGa7X9QmpUdjc/oYUqj2NcbH1WaT59VmiUv
KY3KzqpY9zFvKo3iPc2KdX/PLqEz1L21UPeKdV9TU6M9dL5y5Uq3t3B8fHxY
WNjixYu1T5OTk+XKH3zwQWvfkcLCQi2fDx8+7HLS9OnTo6OjU1JStE9XrVql
/VVhw4YN2vMBjNV9dnZ2bGys3W7XX62hoUEGndzK/PnzqfuWqHsEvezsd+bM
ES+8II4fN3nWrxeDB/v7qHqMB2Pzw35I3RtF3VP31D1174as+7t3C515YwB1
byXUvWLdb9u2Tf9x85pmjk9l5suVZad/9NFHso8mT568bNmykydPOlZobGwc
OHCgXCcqKio9Pb22tra1793GjRtllZeWlsqPtWcIGKv7MWPGyPPGxMTITeus
9vnnn8vVJk2alJeXR923RN0j6B08+M68eeL1101PSJGW1pQbfn5HPMaDsflh
P6TujaLuqXvqnrp3Q9b9XZlCZ6h7a6HuFeteewC9b9++Ht7g48ePb3m4vPDw
cJnMjnVSU1O1x+Il+YEM6sTExNzcXJ36Vnns/siRI9rz7ePj41tbJycnp1u3
bn369JGbyM/Pp+5bou4R9Kh75lxj88N+SN0bRd1T99Q9de+GrPs79widoe6t
hbpXrHtZxHL52LFjnRfu3bs3JiZmQbMPm8XFxZ1tfly+d+/ecv3IyMi0tLSi
oiIZ8toj9SNGjHA+GNGBAwe0p8E7i4qKcjn8voNK3Z91egZCQkJCy1NramqG
DRsmT9Xeto+6d4u6R9ALqLofMqTpmuTmMgE0R48+Ul1d7ev9kLo3irqn7ql7
6t4NWfdtsoTOUPfWQt3rj0tft7wBly1bJpfLQndeuGHDBpczyvo+21z3u3bt
kqdWVlY6Vs7Nze3WrZtcp+VB+eRqKSkpMTEx2l8ApN69e+fk5LS8Gues+6ys
rFRdQ4cO1TYh7+Mu5124cKFcPmfOHO1T6t4t6h5BL3DqPj1dvPmmuOUWMXIk
E0Azc+b9bv+H8i7q3ijqnrqn7ql7N+Rv/nfsFTrzOnVvKdS94mP369ev16L4
xIkTjoXFxcXJ31mxYoWj7luj/SiQF6V9WldX5/KmQo2Njdu2bQsPD5erLViw
oOUlnLPuo6KiWr4ioDXp6emOMzqO1b9u3bqUZtoL8Hv37i0/3r17t87XFVKo
e9PV19fLu8nWrVu3wDc++aRLZKR49VXz6/7AATF0qHjkESGvDxM4M3Xq/dnZ
2b6+p1P3RlH31D11T927Iev+9n1CZ6h7a6HuFevecYj71NRUt7dwbm6uo+5l
sxcVFeXn57usM3r0aEfdz507t7VnyG/atEmeNGDAgJYnnbPuV61atUiXvFjt
Cxk3bpzzofy0jbYm0PrORNS96crLy++///577rnnbvjGbbddfdttolMn8+u+
oUGkpopp08To0UwAzZw5fzx06JCv7+nUvVHUPXVP3VP3bsi6v+2A0Bnq3lqo
e8W6l6Kjo+VJb7/9ttvHLDIzMx11L1fQorigoMCxQlVVlXZQu6ysrLPfPRlg
8ODBzkfa16xbt06eJDfXciuKr7svLCyU11+7cJdXTcpf1Rb/r1mzZnVtfic+
+fGaNWuMbTH4UPemKy0t/dWvfvXUU089A9/4y19uf/DBpnfEM73u5eTkiJUr
RWwsE0CzcmVb+b+Jr+/p1L1R1D11T91T927Iuv/1QaEzrw+k7q2Eulev+8OH
D2txLQM5KSmppKRELrTb7fKXnISEBO0kx2P3PXv2lJ/OnDmzvr7+bPNziefN
myeXDBkyRHs2viwU7S8AI0aMyM7Obmho2rT8d+vWrX369JHLV65c2fI6qNS9
zPnIyEjtgfiqqqpzrs/r7t2i7s3V2Ngo74kXXXTRN998kwff2Lixz7hxonNn
89OeCdSx+eHOTt0bRd1T99Q9de+GrPtbs4XOUPfWQt2r172UkZGhpbcmPDxc
ezje0emZmZnamo4D7vXr12/u3LnDhw/X2n/nzp2OS0tJSdHev147aeDAgY43
yBs3btypU6daXgGVup89e7Z2JZ2P9aeDuneLujeXVveXXHKJvK+dgG+kpw+e
OjUgjqrHBOrY/HBnN7fuX/yszqxRLA7Fuu86R2n+tUBp9A/5dc7psMr4hE9S
mj9tUJo/bFeaZz5Tmie/UBqVnXXABKEyYTOVRvGeZsW6vyVH6Ax1by3UvVfq
XiorK1u8eLF24DtNz549o6Oj161bpz3+7vD111/379/fsZr8OZCbm+tyaTk5
OePHj9eeLa+JiIhYsmSJ9oh/S9ofE044HdnPc4mJicOGDfP8vAUFBdr1MbCt
IEbdm0ur+0svvVT+a/Z1CVqBc8x8JlDH5of9kLo3irqn7ql76t4NWfc3HxI6
Q91bC3XvrbrX2O328vJy2b9FRUXyY53VSktLZYacPn1a59JksBQXF+fl5bl9
vN6LXA7RDwOoe3NR935A3TPnGpsf9kPq3ijqnrqn7ql7N2Td35QrdKYzdW8p
1L136x4hi7o3F3XvB7Lu585teke8M2cYxs3U19vkPdHX+yF1bxR1T91T99S9
G7Luf5UndIa6txbqnrqHV1D35qLu/UDW/fvvi7vvFps3M4ybSUtrV15e7uv9
kLo3irqn7ql76t4NWfc35gudoe6thbqn7uEV1L25qHs/yMlpqvubbhJLljCM
m/nyyweLiop8vR9S90ZR99Q9dU/duyHr/obDQmeoe2uh7ql7eAV1by7q3g8q
K9/56ivx5JOie3eGcTMjR/4+KyvL1/shdW8UdU/dU/fUvRuy7q8vEDrTeRB1
byXUPXUPr6DuzUXd+0Fd3XsZGZe9+eZlr77KMG5m8OD2u3bt8vV+SN0bRd1T
99Q9de+GrPtfHhE6Q91bC3VP3cMrqHtzUfd+0Nh4oq4uv6SEYdxPefm3dXV1
vt4PqXujqHvqnrqn7t2QdX/dUaEz1L21BGzdf1N2NqDmLHUPXdS9uah7IETI
/4tD86EHxeJQrPsotZneU2nyb1SarQ8YH8XMjH1NaTbZzJylLyqNys6quL/F
vao0ivc0y/WCrPtrC4XOvEbdWwp1T93DK6h7c1H3QIig7o2i7ql76p66d0PW
/c+LhM5Q99ZC3Xur7u12+549e2JiYsaOHRsRETFmzJhFixZt3ry5oaHBZc2d
O3euaWHr1q3O69TU1Kxdu3b+/PlNP+KiouQHq1evPnXqlMtFlZSUyLukPHXO
nDmfffZZQUGB+i7RmoqKilWrVs1rJj+Qn/puW1ZE3ZuLugdCBHVvFHVP3VP3
1L0bMiWuKRY6Q91bC3XvlbovLy+XUd/VndGjR7u8Q5BsoparjRo1yrHCkSNH
IiMjW64TEREhT3Kstnnz5rCwMOcVunXrlpiY6PWdRNq3b1/v3r2dt9WnTx+5
0Bfbsijq3lzUPRAiqHujqHvqnrqn7t2QdX/1MaEz1L21UPfqdV9TUzNkyBCt
eWNjYzMyMoqLi7Ozs2Vo9+zZUy6Upzoewa+vr9eSPD4+fqmTdevWOS5w4sSJ
coVBgwYlJSUVNEtOTtY2ER4erl1UYWGhdjmTJk1KTU3dsWPH9OnTtetw4MAB
7+4kcosDBw7U/lKxffv2tLS06Oho+alceObMGe9uy7qoe3NR9wFI/uioRSip
q6uz2+2+3q+oe6Ooe+qeuqfu3ZB1f1WJ0JnXBlP3VkLdq9d9XFycPKlHjx4t
H8s+evSoXC5PlTWkLZHpIT/t379/a9+Rqqqq7t27y3VkRDsvz8rK0uJ9//79
Z5vvic6xf7b5pQFDhw6VC5csWWJsZ2hNfn6+tmn55WhLCgsLtSWHDh3y7ras
i7o3F3UfaOR3pKKi4jBCybfffltTU+PrXYu6N4q6p+6pe+reDdkUV5YKnaHu
rYW6V6x7+ZuM9gD9ypUr3d7C8fHxYWFhixcv1j5NTk6WK3/wwQetfUcc4Xy4
RaRMnz49Ojo6JSVFfrx06dJBgwbJf51XSEhIkGeUq3m+A0jZ2dmxsbE6D7jk
5eVpV8nxWvvq6mrtmQN79+49r20FMereXNR9oJE/JVatWrVixZJPP2VCZdav
/7KkpMTXuxZ1bxR1T91T99S9G7LurygTOkPdWwt1r1j327Zt08r3+PHjbm/h
mmaOT2XmawH+0UcfyT6aPHnysmXLTp486VhBRor2NPioqKj09PTa2lrPv5va
a/9XrFjh+VmkMWPGyHPFxMTITbtdQYZ/eHi49rqDqqoq+eUsXbpUfvr222/z
zHwH6t5c1H2gkd+Iyy+/7LbbLr3zTiZU5tlnH0pOTvb1rkXdG0XdU/fUPXXv
hqz7nx0XOkPdWwt1r1j3q1atksv79u3r4Q0+fvz4lofLk+2cl5fnWCc1NdVx
uDz5waRJkxITE3Nzc1urb82mTZu0A+vJNT3+/jc5cuRIr169tEMBtLZOVlaW
Fvg9mskP5FmSkpLOa0PBjbo3F3UfaPLz8y+5RIwdKyZPZkJlPvroj87/l/kI
dW8UdU/dU/fUvRuy7i8vFzrzKnVvKdS9Yt3LIpbLx44d67xw7969MTExC5p9
2CwuLu5sc4BoR56PjIxMS0srKiqSIa89Uj9ixAjnx8EPHDgg68nljwBRUVEu
h993SE9Pl10v13F5rr6HHM9ASEhIcLuCDHntBQgO8mrzontn1L25qPtAc/hw
/jXXiOpqeXdgQmdsfti1qHujqHvqnrqn7t2Qdf/TE0JnqHtroe71x6WvW96A
y5Yt01LXeeGGDRtczhgWFna2OUB27dolT62srHSsnJubq4V5y4PyydVSUlJi
YmK0vwBIvXv3zsnJcVlt06ZN2iVMnTq1vr7e7Tc6KysrVZd2RD5J3sddzpud
na2dtHTp0uPNtBf4y416/fj81kXdm4u6DzTUfUiOzQ+7FnVvlFLdDx+lNPtv
V5rtf1Ca5c8bn6HRSrPiOaX56i9K89kzSvPfvyuNys6q+EeVmDeVRvGeZsW6
v6xC6Ax1by3UveJj9+vXr9fK98SJE46FxcXFyd9ZsWKFo+5bo/0okBelfVpX
V+fyenZZLtu2bdOeG79gwQLnk7TLl+bOnavzKvioqKiWrwhoTXp6uvN5tZaf
M2eO88KYmJiuuk/mDzXUvbmo+0BD3Yfk2Pywa1H3RlH31D11T927Iev+0kqh
M9S9tVD3inXvOMR9amqq21s4NzfXUfeyvouKivLz813WGT16tKPuZaS39gx5
7ZX1AwYM0D6VOaO9LkBatmyZ/qvyV61atUiXvFjtosaNG+dyKL9Ro0bJ5Zs3
b3ZemJGRIRcOGzZMZ6Mhhbo3F3UfaKj7kBybH3Yt6t4o6p66p+6pezdk3f/k
pNCZV4dQ91ZC3SvWvRQdHd21+QDy2dnZLU/NzMx01L3jKe4FBQWOFaqqqrSD
2mVlZZ397skAgwcPbvmuwevWrZMnyc1pn8ok154e79LdBhQWFsrrr114dXW1
y6mTJ0+WJ3366afOC+VG5UIZ/oqbDhrUvbmo+0BD3Yfk2Pywa1H3RlH31D11
T927Iev+4lPi4qpWh7q3Fupeve5lTWiHuJeBnJSUpL3br91ul8mckJCgneR4
7F47Nt3MmTO1F8jLf+fNmyeXDBkyRHtefWlpqfYXgBEjRmRnZzc0NMiF8t+t
W7f26dNHLl+5cqVcsmfPHm215OTkhv+l8871bsmcj4yMlBclY62qqqrlCvJe
L0+VW3d004kTJ+QVlguXLFlyXtsKYtS9uaj7QEPdh+TY/LBrUfdGUffUPXVP
3bshf8+/6LTQGfW6//bbb7/44ov4+Hi5rSNHjrS2mkySra0rLy8/5wqK1zM4
UPfqdX+2+WnqWnprwsPDtYfjHZ2emZmprek44F6/fv3mzp07fPhwrf137tzp
uLSUlBTtXee0kwYOHOh4g7xx48adOnVKriPDqrVXzU+ZMuW89oHZs2drV9L5
WH/O6urqtPzv2bPnBx98MG/ePO2LHTRokNu/BoQm6t5c1H2gCYW6P3VKVFSI
ykrm/8+pU+1bO7KrF1H3RlH31D11T927IYv7x9VCZ15Rq/uvvvqqe/fujk7p
1q3b2rVr3a7peL2zW+np6edcQeV6Bg3q3it1L5WVlS1evFg78J1GtnB0dPS6
deu0x98dvv766/79+ztWkz8HWr5DfU5Ozvjx47Vny2siIiKWLFmi/eJkt9ud
7yaKdZ+YmDhs2DDnowK2JMNfRr12ZH7NzJkz+ROZM+reXNR9oAn6updfWu/e
4qmnxN//Lp5+mmmaXr1+t2PHDl/vWtS9UdQ9dU/dU/duyLr/UY3QGZW6l0Uj
86FHjx4bNmyQbb5mzRotYdz+tnby5MlPWtBeAd27d+9jx46dcwWFmyF4UPfe
qnuN7G7ZvAUFBUVFRTrPkJcnlZaWyh379OnTOpcmg6W4uDgvL097vN53dA62
77La0WZ1dXU+vT5WRN2bi7oPNEFf96dOiQcfFLffLu6+W/z2t0zTdOr025SU
FF/vWtS9UdQ9dU/dU/duyLr/v1qhMyp1P3PmTHmDrF692rHkyy+/lEs++ugj
T85eVlbWr1+/bt26tfan43OuEIKoe+/WPUIWdW8u6j7QBH3dV1aKa68V69eL
HTtERgbTNPv3P9zaK7y8iLo3irqn7ql76t4NWfc/rBM6Y7ju5e9m2ot5nZ8h
LP+bkDHeq1cvl+c2u6Ud2VvnTwHnXCEEUffUPbyCujcXdR9ogqnuz5wRp0+7
TlGRuPJKsW+fKCkRZWVM05w40d4Pz+yi7o2i7ql76p66d0PW/Q/OCJ15JcJg
3R87dkzeGv3793dZrr0Nd3Fxsf7Z09LSujYfzay1w3ydc4XQRN1T9/AK6t5c
1H2gCZq6l2mfmSlWr3adFSvE5ZeLgwdFTY2w2xltbH7Ytah7o5TqfkyE0ijW
VsI/lObrR4yPyl8G5Che89Q/Ko3iX0W+eUhpVHZWxb8mzQxTGsV7muV6Qdb9
hfVCZwzXfW5urrw13n33XZflcolc7vadxB3sdvvQoUPlahs2bDC2QsjyvO79
/P/pOXNbXh/qHoGDujcXdR9ogqPuGxtFVZVITBSxsa4zd6746U9FdnZT/pt+
PQNmbH7Ytah7o6h76p66p+7dkHX//QahM4brft++ffLWkL8xuiwfN26cXL53
716d827fvl2uM2DAgNaeEnbOFUIWdU/dwyuoe3NR94EmOOq+pqbpgfuf/Uy8
8ILrPPusuPTSpsfuqXunsflh16LujaLuqXvqnrp3Q9b99+xCZ1qr+wMHDuxv
RWFh4dnv6n7s2LEuZ5RL5HK5ms610tZxPhzf+a4Qsqh76h5eQd2bi7oPNMFR
9/L679wpLrlEDBvmOgMGiMsuo+5dxuaHXYu6N4q6p+6pe+reDVn3FzQKnXnZ
Xd3b7fbW3ptbe+NsuU5eXp78OCoqyuW82q1UUFDQ2lUqLy/v1qy1N+w+5wqh
TOf7gpbM/nYhcFH35qLuA01w1H1VVdMh8W++2f1R9a66imfmu4zND7tWV+re
IOqeuqfuqXv3Fp6L23MtWrToo1Zs3LjxbPP718tbo0+fPvKXNOcz9u7dWy6X
p7Z2fb766iu5wqRJkwyvAACKqHtzUfeBJpjq/pZb3JxUWdl0VL3ERJGeLnbv
Zprm4MGHdX5b8xbq3ijqnrqn7ql7fxsyZEjX/32YXn4sl0REROica9asWXKd
L7/80vAKAKCIujcXdR9ogr7uKyrEBReIp54Szz8vOnVimqZfv/syMjJ8vWtR
90ZR99Q9dU/d+1tCQoK8QaZNm6a9u738d+rUqXLJ8uXLtRVOnz6dk5OTl5fn
fK5BgwbJdXbv3t3axZ5zBQBQRN2bi7oPNEFf9zU1MmbF8OFKxRRkM2PG/fKX
NF/vWtS9UdQ9dU/dU/f+dvLkyf79+3dtPnK+LPoxY8bIj2WbO57oJQtdLunb
t6/jLLW1tdoLoktLS91e5jlXAAB11L25qPtAE/R139goCgrEmjXiiy+Y/z9J
SQ+VlJT4etei7o2i7ql76p66N0FZWdnYsWO7deumJbn8BVI7or5Gq/t+/fo5
ry+XvP322y6v1vd8BQBQR92bi7oPNBaq+1Onmp5m73YKC8XXXzcdVc/tGSsr
xaFDTQfWY7QpKHjk9OnTvt61qHujlOp+xXNK82aM0nRcqTSfPmt81v1VaV6N
U5pFnZVmc3ulSXlQaVR21ke+FioT9Y7SKN7TqHu3qqqq8vPzy8vLzb4iAOAR
6t5c1H2gsVDdFxc3PQp/+LCb2bev6SHp1uqeaTE2P+xa1L1R1D11T91T9wAA
j1D35qLuvWjt2rV9+vR57bXXuil49dVXr7wy0Ovebhe7domOHcWTT4qnn3Yz
Tz0lHn1U3HCD+VfVImPzw/5J3RtF3VP31D11DwDwSKjV/ZgxY4YNG1YbMKqr
q7Ozs6l7r1iwYP5jj7W7995b27e/z/A88MBdV1wR6HVfXy82bhTXX9/06Pyd
d7qZO+4Qt97atILpV9UiY/PD/kndG0XdU/fUPXUPAPBIqNV9//7977333iUB
4+OPP545c+Yll1xC3avr3v3R4cMvmzr1x3FxPzE8U6ZccvXVgV73Z86I+Hjx
wgtiyRKxZYub2bBBfPSRuOkm86+qRcbmh/2TujeKuqfuqXvqHgDgkZCq+23b
tsm6v+666yYEjPHjx0dERFx88cXUvboXX7xx2jTx5ZciLc34rFwpAr/u6+rE
/PkiLEzs3+9+BZ1j5qtMY2PTG+oF39TV2ex2u6/3T+reKOqeuqfuqXuEuhMn
Tnz55ZdTpkyR++qwYcOmT5/+6aefmvjLc01Nzdq1a+fPny+vT1RUlPxg9erV
p06dMuv6AA4hVffyJ8OGDRs6d+4cETCGDBnSo0ePiy66iLpX99JLN8rmTU0V
J08anz17qHv3Y7eLoiIxb17TpoNsli9ve+TIEV/vn9S9UdQ9dU/dU/cIaZs2
bZK/LXdtISwsTCa/H/4+70L+zhAZGdny+shf7P3w6wSgL6TqvqGh4dChQ2PG
jHk3YIwaNWrgwIHUvVfIuo+JaapalYY9fFgE/jHzTan7M2dEeroYMkRERgbb
TJ16f05Ojq/3T+reKOqeuqfuqXuErvXr12vtPGzYsM2bN8vf5IuKitLS0iZM
mKAtlwv9fJUmTpwotzto0KCkpKSCZsnJyUOGDJELw8PDZW74+foAzkKq7qX6
+vryQFJWVrZ7926OqucV1L1P6760VLz5pujbV4wcKUaNCqqZNYu6p+6pe+qe
uqfuEXBKS0t79uwpd84ZM2bU1tY6n2S32xcsWCBPioyM9OfD91VVVd27d5fb
TUtLc16elZWl/bVh//79frsyQEuhVveBhnfE8yLq3qd1f+yYeOYZMWiQmDJF
TJ0aVBMf/0B+fr6v90/q3ijqnrqn7ql7hKjPPvtMe0Dc7Uvay8vLw8LCBg0a
VFRU5LerVFhYqFV8y1/dp0+fHh0dnZKS4rcrA7RE3ZuLuvci6t6ndV9S0nSU
/vj4pgfxKyqCak6ebF9fX+/r/dPcuv+m7KxZo1gcinW//Hml+fhlpflHgtIs
fdH4bLIpzdtTleadKKX56HWlab9ZaVR21i1thcqk/lFpFO9p1D0C0IgRI+Se
uXDhwtZWqKio8Of1Odv8q/vAgQPltYqKikpPT3d5RgFgOureXNS9F1H3jjl9
WuzcKa67TnzzjdcmMVH87W9i+fKmF+Cbfgt4e2x+2D+pe6Ooe+qeuqfuEYrk
L8lhYWFyz1y/fr3Z1+V/pKamaldMO7LfpEmTEhMTc3Nz5RU2+6oB1L3JqHsv
ou6dV9izR3z/+00P33trbr5Z3HQTdW8cdW8UdU/dU/fUPULRyZMntYLOyspy
Xv7xxx8v+M6HzVxW8IMDBw689957LsfMj4qK8udrBAC3qHtzUfdeFAh1X18v
srObotunk5kp3n1X/Oc/rda9vBp5eeKRR8RTT3ltHntM3HEHdW8cdW8UdU/d
U/fUPUJRXV2dVs1ff/218/J+/fq5ZPUXX3xhyjWsrKxMSUmJiYnRnqsv9e7d
2w/H6QV0UPfmou69yPS6b2wUJ040HXeuVy/Rs6cPJyxM/OlP4uWXxb59rV6Z
hgZx5IjIyfHabNsmnn6aujeOujeKuqfuqXvqHiGqb9++cs9ctGiR88Jt27Yl
f0d7Yb6f676uru7MmTPOS+Tv8/JahYeHyyuzYMECf14ZwAV1by7q3otMr3sZ
1Lm5//9t4/r18+H07i3++tdz1H1jY9Or78vLvTYHDzYdM3/JElFU1HRgvWCa
Eyfay/+pfb1/UvdGUffUPXVP3SNEzZ49W+6ZMuFbexP5Dz74wM91P3fuXLnF
hISElidt2rRJnjRgwAC/XRmgJereXNS9F5le9/JcS5eKBx8UM2c2vS7edzN7
tnjjDfH663p17/UpLm46qt6cOWLFCvHpp0E169c/eOzYMV/vn9S9UdQ9dU/d
U/cIUbt379ae8T5nzpyWgW+328eOHevnul+/fr3c4uDBg2tqalxOWrdunTwp
Ojrab1cGaIm6Nxd170WBUPeffCL+8pemI8ynp/twtm4VI0aILl1afd29L6ai
QowcKcLDlVIrMGfGjPv98Co56t4o6p66p+6pe4Qu2fVa4M+YMePAgQPac+2q
qqoyMjJGjhzp/9fdl5aWahsdMWJEdna29jcH+e/WrVv79Okjl69cudJvVwZo
ibo3F3XvRQFS93//e9Pbzfs0tM95zHxfTG2tWLNGdOjQ9Pz8IJveve/bsWOH
r/dP6t4o6p66p+6pe4Su6urq6dOnOw6gFxYW5jiEndS9e/fFixfL2PfnVUpJ
SenRo4fz9XG8Qd64ceNOnTrlzysDuKDuzUXdexF179NpaGg6tl58vFi8ONjm
yy8f9MNb2FD3RlH31D11T90j1G3ZsmX8+PHOx8kfPHjwnDlzCgsLTbk+OTk5
8vq8/fbbjusTERGxZMmS+vp6U64P4EDdm4u69yLqnjE6Nj/sn9S9UUp1H/ua
0iz4l9I8tlZp3u9rfOJfUZqRI5TmP/OUZsRIpfnNPqVR2VnTfi9UJuNepVG8
p1H3CHw1NTUy5+XvzH5+sL418tf44uLivLw8Hq9H4KDuzUXdexF1zxgdmx/2
T+reKOqeuqfuqXsAgEeoe3NR915E3TNGx+aH/ZO6N4q6p+6pe+oeAOAR6t5c
1L0XUfeM0bH5Yf+k7o2i7ql76p66BwB4hLo3F3XvRaFW9926Nb3ffWMjoz42
P+yf1L1R1D11T91T9wAAj1D35qLuvSjU6v7FF8XGjaKwkFGdY8ceqa2t9fX+
Sd0bRd1T99Q9dQ8A8Ah1by7q3ou8Uvf5+eKqq0RxsaioEJWV5zdFRWLhQtGx
o8/r/swZERfXtKHFi0VqKqM6u3e3q6ys9PX+Sd0bRd1T99Q9dQ8A8Ah1by7q
3ou8VfcXXSRmzBCzZp33TJ0quncXTzzh87q322WQiptvFm3aiPvvZ1TnpZd+
u2XLFl/vn9S9UdQ9dU/dU/cAAI9Q9+YK8bq32+21tbXFxcWl3vD889cvWKBa
9wUF4vrrRXS0GDPmvGfkSNG5s3j8cX/UfW6ueOAB8bvfibZtGdV55ZV7qXvq
nrqn7ql7X/8YBAD4GnVvrhCv+8rKytTU1DfffPNtb7j77p/Mnq1a9zLMFywQ
gweLIUPOe/r3F889Jx57zOd1L6e+Xhw5wnhniot53X3Q1n34JKXp+77SdFil
NPelG583Y5Sm53SluX+b0vzlK6W5Y6/SqOysYyKEyvT+QGkU72nUPQAEAere
XCFe99nZyZ99NrVTp7a9ev1Ffe6660ezZqnWfV2dSEkx8rR87Zn53br545n5
jLfH5oe9nbo3irqn7ql76h4A4BHq3lwhXveLFj01fPglffteuHDhD9SnfXsx
d65q3Z9tfli8psbIlJeL+Hh/HDOf8fbY/LC3U/dGUffUPXVP3QMAPELdmyvE
637+fFtEhBg6VKxb54V57LGm94lTr3vD47d3xGO8PTY/7O3UvVHUPXVP3VP3
AACPUPfmou6HDxfvv9/0Fm/q8+KLQv2oeipD3Vt2bH7Y26l7o6h76p66p+4B
AB6h7s1F3cu6/+AD7zTaSy8J9XfEUxnq3rJj88PeTt0bRd1T99Q9dQ8A8Ah1
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
AAAAAABYHXUPAAAAAIDVUfcAAAAAAFgddQ8AAAAAgNVR9wAAAAAAWB11DwAA
AACA1VH3AAAAAABYHXUPAAAAAIDVUfcAYIrGxsavvvqqV69eHTp0aN++vfxg
4cKFZWVl/tl6UVHRtGnTunbt+sgjj/zzn/8cP378119/7Z9NAwAAwBeoewDw
v3379t19992iheuvv3779u2+3vrnn39+5ZVXttz6wIEDGxsbfb11AAAA+AJ1
DwB+lpycfOmll8qfurfeeuusWbP279+/d+/e9957784775QLf/SjH+Xn5/tu
63V1ddrW//rXv86fPz83N3fnzp0jRoyQ25ULR40a5btNAwAAwHeoewDwp4qK
iuuvv17+yO3QoUNVVZXzSUVFRZdccok8KSoqyndXYO3atXITV111VXV1tfPy
6dOny+Vt2rTx3aYBAADgO9Q9APhTr169tEfta2pqWp46atQoeeof//hH312B
uLg4uYm7777bZXlJScnNN98sN11XV+e7rQMAAMBHqHsA8Jvq6urLLrtM/rz9
7LPP3K7Q0NDgtvq96Ntvv9V+5r/yyivHjx/36bYAAADgN9Q9APjN0qVL5Q/b
yy+//MyZMyZejWnTpl1wwQXymlxyySV9+/b16cv8AQAA4B/UPQD4zciRI+UP
22effdaxpLy8PKqFjIwMX1+TTz755KabbtJ++F944YVvvPFGQUGBrzcKAAAA
36HuAcBvunTpIn/Y9uzZ07EkMTGx5TvTrV+/3g9XpqGh4eOPP77nnnu0jf7i
F7/Iycnxw3YBAADgC9Q9APhN586d5Q/b3r17O5YcOnQo7jvaIfUuuOCCyspK
310Hu93u/GljY2NCQsJVV12lvUee77YLAAAAn6LuAcBvoqKitPfCc3uqdjT7
3/zmNz7a+qFDh372s59de+21LU9atGiR3PSPf/xjcw8IAAAAAMOoewDwm08/
/VSLaLcHsuvTp4889fXXX/fR1mtqar7//e/LTbR8Bv6mTZvk8muuucblkX0A
AABYBXUPAH4j2/muu+6SP2/btWvnfBS7ioqKiRMnXnnllfKkadOm+e4KaFt/
4IEHiouLHQuPHj3629/+Vi4PCwvz3aYBAADgU9Q9APjTli1brrnmGvkj9+KL
L/7LX/7yyiuvPPzww/Jj7efwzTffvH//fp9u/Yc//KG29bZt27722mtPPPHE
//3f/8kld999d15enu82DQAAAJ+i7gHAz44dO9apU6fLL7/c8eNXfvznP/85
ISGhoaHB11tPSkp66qmntPe719x44409evSorq729aYBAADgO9Q9AJjl6NGj
27dvd36SvN/U1NQcPHhQbv3EiRP+3zoAAAC8jroHAAAAAMDqqHsAAAAAAKyO
ugcAAAAAwOqoewAAAAAArI66BwAAAADA6qh7AAAAAACsjroHAAAAAMDqqHsA
AAAAAKyOugcAAAAAwOqoewAAAAAArI66BwAAAADA6qh7AAAAAACsjroHAAAA
AMDqqHsAAAAAAKyOugcAAAAAwOqoewAAAAAArI66BwAAAADA6qh7AAAAAACs
jroHAAAAAMDqqHsAAAAAAKyOugcAAAAAwOqoewAAAAAArI66BwAAAADA6qh7
AAAAAACsjroHAOjIzc395JNPTp48afYVCUTyxlm0aNHnn39u7LzcsOY6c+bM
qlWr0tLSzL4iAAB4B3UPAEHvjAcaGhpanvHQoUPf+9735H8Q9957r/+vduCb
NWuWvHHuuOOO8z0jN2wgeOONN7Tffz777DOzrwsAAF5A3QNAcMvNzRUeGDx4
cMvz/ve//9VOvfDCC6uqqvx/5Y2x2+1r1qyR//p6Q4br3sMbtqysbPv27QUF
BWpXE+7dd9992nchIiJCZ7Xdu3fL74IXd6c9e/YcPnzYW5cGAIADdQ8AwS0/
P/+n/8vxY9954fjx41uet66urlOnTrfccsu4ceP8f80Ni4uL+/Wvf+322Qje
ZbjuPbxhZ8yYIS8/PDxc4TqiVZ9++uldd91ls9lyc3N1Vrvqqqvkd8GLr6GY
PHnyQw895K1LAwDAgboHgFDzk5/8RP7MX7x4sdlXxCfOnDlz8803x8TE+GFb
huveQ1FRUdS9uex2u/YaCi/WfVVV1RVXXGHscA0AAOig7gEg1Hi97mWtZGZm
On+6Y8eO2tra1tavrKzcvn17cXGxt66As+nTp1933XX19fWtrdDQ0JCXl5ea
mlpQUNDY2OjJZcrVjh49Ks+yb98+56cEuNR9TU1Nenp6aWmp4pfg0LNnTwN1
39q1dTBwC0inT5+W32X5jfPiF+gLcsdLS0vz1t4lv1jtdyRP6l7emHK78iY6
dOiQ/g07cuTIO++80w8vHgEAhBTqHgBCjX7d//znP7+0hZdfftlltT179lx2
2WVvvPHG0KFDf/SjH8kLvOWWW8rKyoYNG3bRRRfJT6+99tqsrCyXcyUkJNx+
++0XXHCB9v/OVVdd9d5773nxKfRVVVXXXHPNu+++6/bUbdu2vf766z/72c8c
//Fdcskl0dHRLf8UILNaftVffPGF/Dg2Nva2225znOX66693rKbV/T333CO/
0j//+c8//OEPtXVuuummVatWuVymhzesdNddd914441XX321doHyX5dzbdq0
ycC1Pa9bQIb/T3/60/bt28uPi4qKXnvttR/84AfaWb73ve/NmzdPW61du3Zy
025v8JqaGrl1eerGjRvdfjt0rFmzRp7xiiuuaHnS5ZdfLk/avHmzY0mbNm3k
ktOnTycnJz/22GM//vGPtespb4etW7c6n/eDDz5o+S2Qdu3a5bKVOXPm3Hrr
rdddd53jlSzyXuN8lieeeMJ5/erq6gEDBjjfsBdffPGjjz7acjfQHD9+XN7y
CxcuPN9bBgAAHdQ9AISa86p77T+IZ555xmW1tLQ0uVzrepn52mqyc7WX82uf
/uMf/3A+y6uvvqotl9303HPPtW3bVnvO89/+9jdvfWnvv/++jNBjx461PEl7
lrujvh955JErr7xS+7RXr14uK3fu3Fkul6UsL1Bb54ILLrjhhhtkOTq/Ylqr
e8ftcO2118pb4MILL9TWX7RokfNlenjDSjISndc5Z917eG3P6xY4dOiQaP6L
jUz73/zmN9pq8hstvwr5wdq1a7XVpk+fLj+9+uqrZcu7XEJcXJw86cYbbzTw
CHViYqI8r/xWtjzp+9//vjxp/fr1jiXXXHONXPLOO+/IG0ruUXfeeeevfvUr
7QpffvnllZWVjjVd6l67I0gZGRkuW5kxY4a2juMvNvp136lTJ201eYPLb8fj
jz+u3VDS2LFj3X6N/fr1k3eE871lAADQQd0DQKg5r2fmywbRqXtJds2ZM2cW
LFigfSrXlzU3dOhQ+fEvf/lLx/qzZ8+WS2SazZ071/Gk5eTkZO1PAbJMvfKl
tWvXToaV25M2btwotzVy5EjHE8tra2u7dOkimg9c73JcNa2Xf/vb38p/b7/9
dnmdv/3227PNR8PLy8tzrOaoe/mVOh6hzs/Pb9OmjWh+3Fyu39pVbe2Gdfb3
v/9dePDMfA+v7XndAlrd/+hHP9Kea9GjR4/Nmzdrz7KQl+l42UV1dbV20Ln5
8+e7XKtHH31ULh89erT+lXfLQN1LDz744IEDB7SFcvfWFk6fPr21rcjwb63u
HdLT07V1dJ6ZX1hYqK0TFxfnWCjvBR9//PHTTz/d2nsipKamyrO0fNoAAACG
UfcAEGq8WPff+973tAfKjxw5Ij/9xS9+oXWfjC/tQWdt5ZqamosvvlguiY6O
drmciRMnyuWyBFW/qrNn5TWR10cWd2srtGzt06dPaw+RL1myxHm51svS/fff
X15e3toFanX/85//vKyszHl5UlKSdnadI6d5ve7PeW3Pns8toNW9Rv9vL6NG
jZLr3HXXXc4LDx48qOV5UVGR/pV3y0Ddd+zY0eWrk7Ev3D0twcFbdZ+Zmamt
s3z58nN8YU4aGxvl/UXeep6fBQAAfdQ9AIQaL9a9o99lJMpP7777bu1TmUva
I8Lap9u2bdM+bdme2poy0Ix/Pd/ZuHGjvCiZpedc88CBA59++ul7773XrVs3
rW3HjBnjvILWy/KG0n+vNJ1j5l933XXypEmTJrV2Xq/X/TmvrbNz3gKOutep
Y432EnLh9HR9adCgQaLFSzM8Z6Duly5d6rKm9rSE559/vrWteKvupbZt24rm
p6bILzkhIaG6ulpnZQe58gsvvODJmgAAeIK6B4BQ4/+6nzt3rvYfzQ9bcPwf
pH5svfj4eJlXOkfLz8vLCwsLu/ba/8fencDZWPf/H79aLYmESkqJkEg3FQlD
i2y3W6HFLUVlGSGyNKFEsoRbpJAtImvKTmEs2ZcxDCa7sQ7GNsw+8/90vr+u
/9U5Z85cZ59zzuv5+Dw8xnW+5zrfc65zfc/1Pudaims2+vfvb2yp8nKbNm0c
P6KDdK/iXpcuXbK7r8fTfY69zXLmFdDT/fHjx3OcrXouDRo0UP9NTU295557
ZMrvv/+e433t8ki6V71q0qRJdo/iwXQvs2rdurU6j4RmOaVe06ZNZ82a5fhd
LW+P5557zkEDAACcQroHgFDj+3SvDroX7bIRHh7u/vMaNWqUg30A1qxZU6RI
Ec2yn0D79u0XLFiwd+9e6bY6PNxuun/33XcdP6KDdF+xYkW5qW/fvtnd1+Pp
PsfeOvUK6Ok+Li7O8WyzLMdlSBK/6aab9u/fL/+dP3++ZjllvfnL7VnxYLp3
8Ap7MN0r8qJ99dVXtWrVUp3ULKclXL9+fXbtBw4c+Pjjj+c4WwAATCLdA0Co
8X2637Bhg/qgOXnypIeehB1Tp07Nly9fdreWKlVKOtCiRQvpqnG6N9J9SkqK
uizgjBkzsruvmXT/6quvSpscv/ow2VunXgGn0r1455139K42adJEc3hUQo6W
LVumHl0/fZ/Ox+k+OjpatYmPjzff/4SEhDFjxqiOFSpUyOoF1/Xs2bNatWrm
ZwsAgGOkewAINb5P99euXVNXS8/xIG53rFixQh7CeAU0nTrpn7A6Mj09Pb1K
lSoeT/fffvuteriYmJjs7msm3cvLpZm4YqCZ3jr7Cjib7uWZ3nTTTQUKFDh4
8KAs67x58168eNHMHe3avXu3enSrU8pPnDhRTfdZur9w4YJqs3nzZgcdtnti
fLmLuu/GjRvt3uvtt99u2rSpg9kCAOAU0j0AhBrfp3sxePBg9VkzYMAA4w+y
Bw4ckIcweRYyx44ePSrz169MZ3T+/Hn16FOnTtUnRkVFVa1aVU13J91Lqn3/
/ff1EwauXLlSXebP8QnTzKT78ePHa5YLE2zYsEGfmJqaavVbsJneOvsKOJvu
s/7+yb5cuXLyr3TJ5L3sktwtbx7Nck48dSZ8ecoDBw7Ut1h8lu7F/fffr1mO
3ze+by9duqT/PW7cuEKFCsk73Opt3LdvXzX/s2fP2p2zvPi9evVy8NAAADiF
dA8AocYv6T4jI6NRo0bq46Z48eKNGzd+4403qlSpok5E9vXXX3vimWU99thj
PXv2tHvT888/r5J4nTp13nzzTXUZ9zx58pQtW9bNdK/2Fb/jjjtq1qwpr4DM
VrMc2+74fHRm0r2kRRVd5SHq1q3bsmXLl156SRaf1WXUTPbWqVfAhXS/ceNG
fYvijz/+MHmv7LRt21bN6r777qtWrZr0U7PsxqD2NPBluh8xYoRq9tBDDzWz
qFixYv78+fWw/84776iFXqBAgaeffrp169YdO3Z87rnn1L3ee+89u7M9c+aM
3CsyMtLsKwIAQE5I9wAQagoVKiRj/rx588w0Vpc2k0RjNV3ld6t0L8nLeKsx
3SvTp09XR3/rHnnkEYn2HvntPstyIHN2J3OLj49v2rSp/riSkV955ZU///zz
f//7n222ffvtt2Vihw4dHD+cuhZARETE+PHjixUrpuZ88803N2rUKLufa3XZ
vbBW9u/fr/+8rtx9990DBw50obdOvQJqRwgHvzvbpS4xr3/J446LFy9K9/Te
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
0dG5aqRykxrNgukZKYcPH7755ptla/nJJ58MzQ54SqpDnn2s//3vf/KK/etf
//LsbF1Aug9Kp0+fNi7ZggULPvPMM2+//faSJUv83TXSPYCAtHbtWhm7brvt
tuvXr1vd9Oabb8pN7777rs86I5vo27Ztc7BN++9//1u6JONtSkqKcXrXrl3V
58KZM2e8300AfrZz586aNWvmzZtX3yZ88MEHJ0yY4O9+eYAak0XLli393RcP
W7hwoXpqt956a2JiovszvHDhgnxknDhxwl8d8JcyZcpo2fvjjz88+Fike3iV
nu5l06548eI33XSTvpRbtWp18eJFP/aNdA8gEOlbkrZ7Kqp0/9///tdnnSlW
rJjdnuhUuheLFi3SJ2ZmZj7wwAOkeyBEjBo16vbbb1ervAwalSpVkrCm/tu7
d29/985dnTp1Us/lzjvvTEpK8nd3PCklJaVZs2alS5ceOnSoR2Y4duxYeaG6
d+/urw74S5UqVe76mx6F9Cnyse7BxyLdw6v0dL937175b2Ji4rZt21577TU1
sW7dun7sG+keQCDKPek+IyND7TNpJt23bt1an7hx40b9E590DwS3lStXqpX9
sccei4qKUhNv3LjRr1+//Pnzb9iwwb/dc1N6evq999570003VahQQZ7jzz//
7O8e5Wr9+/d3Kt0HpTvvvFNehJ9++slL8yfdw6us0r1u5MiRavovv/xi945X
rlzZtm3b2bNnTT7Q0aNH9+zZY7Xnp5XU1NRdu3ZJl9R/CxcubCbdX79+XeYs
nTl//ryDR5c55/iFrXRAXoeYmBinDrHJsQPyySId2LJly4kTJzIzMx3MKjEx
UWZl/O/OnTuTk5PNdwaA37mc7s2Pq5cuXYqOjpZhzfGekDIoZdcTnUr3d999
t3HnfNm0U/t0ZZfuzQ9rijSTDts9FwEAP8rIyHjiiSdkTa9UqZIMQVa35rgP
p6z+J0+elKFg//79MizYbSPD1I4dO6SZZ3psIBtIMuf4+HgHbVavXi3PrkqV
KsOHD5c/3njjDQeNb9y4ceDAge3bt+d4jjh54jJWy4h9+PBhM2OgyQ1RRZrt
3r374MGDZuZshvkRW+3n4I107+zbQBauLAjHH4jml5dTnEr3ZvqZZQlc8gZQ
+eLrr792nO6dDVkuI90HpezSvaz7Ms7L9MqVK1vdZe7cueXKldP34S9WrNjg
wYOthvRp06YVLFiwb9++sq3Yq1ev0qVLq8a33nprt27dbDP+uXPnXn31Vf1o
r4cffnjOnDn33XefbbqXcemuu+6qXbu2/C3bnK1atbrtttvUvW6++ebvv//e
2FhWdhmm1AaqevTq1avL+mL7Oly4cKF9+/b6rKRlQYO33nrLtQ5s3bq1devW
stmsrzsFChQYNGiQcRNXXnnp4dtvv/3JJ5+oV0BeLulPnz598ufPL/8tXrx4
TEyM/eUHIPdxId2bGVfFtWvXRo8eXbVqVb2l/CHDmvFbQTF+/PgyZcqUKFFC
38NQtlWMY9rLL7+sN1bpvmnTppph5/yHHnqoZMmSsu1hm+7NDGvi0UcflQeS
aDBw4ECZlWopQ5xsWtsmCAD+Mm/ePLV6LliwwEx72aySVXvp0qXy9/Tp08uW
LasPBQ8++KBV41WrVj3xxBNqDyJRtGhR2bax+s1ixYoVMsMiRYrYPlbhwoXl
JuNO0ZMmTZIpERER0dHRL7zwQp48edScZchauHCh3Q536NBBGsjjyqaUGq8k
Eto2W7NmTa1atfTnIkOrbIv27NlTNlCtWsrde/ToYRwD77jjjjp16tg9Bbr5
DdEsy7b31KlTy5cvr79iMobL4CzB3NhMNo8L2pAPF7vzNDliV6xYUV7De+65
Rx2gIf9azT8yMtK1DmSZexuIChUqyHyuX7++YcOGl156KV++fKq9vMc2b95s
1dj88nKB43TvVD/FjBkzrD4E5WNRyybdm9kYkLwgHZDlZfXp3L9/fzX90qVL
Jp+pZmDyLsj9skv3YvLkyWogMo4AslGq2sum4yuvvCJjlFpb69evb7zvd999
JxMbNmxYs2ZNtSJXrlxZRj91X3lXGxvHxsbee++9+vgsI4B+tJdmk+4PHz6s
WfKvvKVlAFRtZNhUXwWsXLlSbxkXF6evTdLbZ555RmXnW265Zdy4ccZ5pqSk
PPXUU2rEa9u2bZs2bVSsVquqMB50Zr4Dau8mpVSpUjIKyeug/vvBBx/ozbZv
367Wd+3vX8qE+iJd3zJv3ry5+WUKwL+cTfcmx1UZc4oXL65aynAqzSpVqiQD
mvxXhizjSZDGjh2rNrf0A2lzTPdjxozR/t45f8uWLfJ3586dJaFr/0z3Joc1
oUZ12dxSnyOyGaPOACBk08jxflwAfKZv375qdTb5M/Fbb70l7SXXq72LNUuw
ks0tyTg1atQwtvz888/18erZZ5/VN8kef/zxy5cv682WLFmiWU5DavtYanyT
bKhPUZuXMhKqwU3+0DcapRvTpk2zmoPEIjXyqNj1yCOPyN8SoKyaSQRWGU0G
tGbNmkn+kiFL/XZTpEgRq12kpIF6IvJ85dWoV6+e2gIUQ4YMMbY0vyGaZflp
W2aoGsuQLtul8tTUKyBbp8avcK3CtbrLf/7zH9sX0PyILfHfODen0r2DDmSZ
fhtk/f2p8dlnn8mjy4egNFCfIKJw4cLGr4WdWl4ucJzuzfdTdOvWTd0ki75q
1ar33HOPvkRs073JjQHZtFA/m7700kv6aivvcPVusX17O6AZmL8XcjkH6V4/
7vLQoUNqioxFalCaMGGC/nbasGGDCqEy1Ov3VcOvyJMnz9dff612RLl48aKs
12plND7Qiy++qFlO169/73ru3DkZJdQc7KZ7WUfUV1vh4eGyIa2+1Dp69Kjx
m8DGjRurx/r999/VlISEBFlBZKKMCQcPHtRbqlOIyLr8559/qikxMTEytMoz
3blzp9XLYr4Da9askVdGhjV9j3259d1339Us27pHjhxRE1W6FzJAyQulvlQR
MiBkZGR88skn8vcDDzyQ7SIEkMvo6V629Mb8k3y4a/9M9+bHVVGnTp26devK
2KJ/ky9JXP0o07ZtW9ue7NixQ/Ukxz3zV69eXbZsWbVzfs+ePTXLKYLVZpgx
3Zsc1rL+3v4RHTp00B996NChauK3337r1EsKwEvUqZYaNmxosr1K95UrV5Z/
ZUNIBi51QKUMHcafmCVrqGDSsmVL/eohc+bMUT/0vP/++3pLF9K92i6S4UhN
PHbsmDqm/sEHH7T65lC2AGW6DEdqdFWXAmnRooXVA7Vr106z/LBi/Fn/+PHj
77333tSpU40tT506pTrw448/6hNla23mzJlNmjSxypXmN0SFjOFqIO3bt6++
MSnbw7KA6tWr5+C6Jyo/2g3X5kdsnfpEcGrPfAcdMP82yDJ8akhYiI2NVRMl
YquJ33zzjd7S/PJyjZl0b6af69evV7/Cy4ujp355q6hPbat079TGwNatW9W3
GcOHD8+y7E+ivo23uyXgAOk+KDlI9/pN6vfopKQktTIOGjTIqqU6lEk2O/Up
aviVCGwck7Ms+1+peV64cEFNkZFHTZkyZYrVbNX3gXbTvWL1VjfSt65nz55t
nC7v//vvv99q61p9V9apUydjSzXM9uvXz2rOJjug2P4+JYObel6zZs1SU1S6
l9FP7U0UFxcn/5VOqrFdXkDN8iWq4wcCkHvo40929PHHqXE1y96QIr744gtp
Wb58edubzKd72fhUv7AsX75cYn6pUqXkJnXafKt9/8wMa1l/b//YPq8XXnjB
dqsGgL9UqVLFahNIAsv/DGSLzthepXvx9NNPS1bNbrZ169aVNhUrVrSKpaNG
jVJ3139PcSHd33ffffpmpCIxSs3WaqNR8qNmuAip2qbKnz+/1eVK1c/xzzzz
TI7Hxe/Zs0c90Pz58x23dGpDVFKwajxgwADbWTnercJBuM4yPWLrPJvuzb8N
sv7+1GjcuLFVn9Uvg8adDcwvL9eYSfdm+hkWFiZTJHdbnc5LndzM+Dno7MaA
+Oqrr1TUiomJ6dGjh2bZ39jZ/RaMWyZO3RG5mYN0f/z4cXWT+nZ069atmuW7
PtvBfNeuXZrlq1F9ihp+H3vsMauWKrqK6OhoNUW9OWWgs/1a0u458/VwbbVP
kZURI0ZIm5IlS9oOiepol3LlyulTmjdvLlNef/11YzN1FGp4eLjV3U12wIp8
Vi5YsGDw4MHt27dXg+qXX36pblLpXs/vMupqlpPbqP+q11ZedvOPBcC/9I06
2bAM/yf17bq+UefUuGp07do12Zr9/vvve/bsWbt2bS2b7wCdSvcHDx7ULJdK
kX/79u2blU261zkY1rL+3v6x2qwV0mfNsrNWdv0B4Esq3Ru3dmS1NW7zFy5c
2NhepXuJP3Z/+dWpMWHixIlW05OTk9XBj3p0ciHd225eihIlSshNkpv0KWlp
aWpHdH3XUJmizthsNTRJH9RPzKVLl+7fv//+/fsdPLXq1atrlt9YZetx7ty5
do/iz3JyQ1Qd5lCsWDGnzuqsOE73Oscjts6z6d782yAr+08NtbPBq6++qk9x
anm5wEy6z7GfstzVfKy+H8uyd858FzYGZP4vv/yyZjmoWV4NWYMkUDj7TEn3
QclButc3UNXhnBMmTFD/vd2G/sbQdxbNbvi9cuWKaqnv8f7OO+/If1988UXb
vjlO98ePH3fwvNq0aSNt6tWrZ3vTzz//rFl+K9cHZPUdWp48efSvgs+ePav2
eJk0aZLV3U12QDl69GjHjh31Q2WNZDhSbUj3QJAxf9y9U+OqMmvWrKZNm+rn
IHX80exUupe/q1WrptqrjSW76d7MsJaV/fbP8uXLVWPzp/0B4D0tWrSQ9bFR
o0b6FNkg/NxCYqCWTbqXrSwH89R/Htq4caPtrerMQhEREeq/nkr3KnR37dpV
n6LvLyohqOnfChQooFmOhbS6u2xtlipVSh/NKlSo0Lt3b6vT2SmyKdu6dWv9
HHF33HGHzFZGZqux2qkNUfWq2m2cI8fp3uSIrfNgunfqbZCV/aeGmn+TJk2M
E80vLxe4lu6t+nns2DHVN9trStqmexc2BrIsB26ororBgwe78EyN7wcX7o7c
yUG6Hz16tGbZ5UN966iOBxHtsmH84jfHdC+hVU1p1aqVls0BX47TfVxcnIPn
pb40sDtOygw1y9lX9N1XLl68WKZMGZl4zz33yLr54YcfqnOwlC9f/tq1a1Z3
N9mBLMtBB0WKFNEsX7jJR+SCBQvkRZbwXqdOHY10DwQv8+neqXE1KSmpZcuW
apswLCxMNg9km+HUqVP68U22PXE23athv0qVKuom23RvcljLyn77Z/78+Zrl
Zy+u9QnkBur0PnbPqqcGELvpXt/X3S4912zatMn2VnUxjp49e6r/eirdqys9
9enTR5+ifku1K1++fLYbeKmpqQsXLpR76VlYtr5kHLZ7pT/ZGvzqq69q1aql
OqlZfkdev3693sCpDVF1iKjxOxbzHB93b3LE1nkw3Tv1NsjKKTXbzt+p5eUU
d9K93s9Dhw6pXm3dutWqpW26d2pjQLdixQr97PqyIrvwTI0rhQt3R+6UXbqX
VUZ9JyYDl5oim5GqpZlLVZpP9zIOa4Ywa+ROulfnbpKR1sxNKSkp6sx+RrJ6
2v0O0Hy6Vy9gixYtrA7vIt0Dwc18undqXP3hhx80y5U19BM0KZGRkdl9NEdH
R6ubHFwP2pjuz50799JLL+lnFLFN9yaHtazst38GDx6sWY5DzPH5AvABfT98
2wu6uZzuMzIy1EHEtqcnkuSlopN+07Jly1QHbL/xM5/uZatV/Sg/Y8YMfYo6
d9mQIUO2G2zevFnt+zRz5szs+p+ZmSnNXn31VdWxL774wsGTTUhIGDNmjBrx
ZHzWx0anNkS//PJLmVKiRAkXLnDvIN2bH7F16lnbzZLOdsCpt0GW8+le59Ty
MsMj6V7ez2oHD9tTNNime6c2BhT5aFZn4FfnIZeYL6uSyfvqjMHH2fsi17Kb
7mU1Ud/lCv0yo9euXVM7q5s53tx8ulfbq0I+RIwtL1y4oK524Vq6/+233+x+
WkmQV2Od8Rpz6oQVXbp0kQ1g2cSVp+zgcpkmO6CfYcDqwDQZ0NQxbqR7IFiZ
T/dOjavqdyjbawqrnTztfjTLQKpusnsRXsWY7q1YpXvzw1pWNts/MgI/9NBD
mr1zVgPwC1l/ZWtN1sqnnnrK6udsl9O9eO655zTLmfespqszbxg3O3fv3q2m
yB/GlhMnTlTTzaR7/afPmJgYNUV9aWD3QOZGjRrJTU2bNtWnZHcuMnV+e6vf
3+021k+Lp++F7tSGqH4QgfGM6zrH547LLvw6NWLr5MNIs7kEm2MO0rf5t0GW
M+neqeXlAo+k+6y/v12xOqZA9OrVS/tnundqYyDLktTU75J16tSRvzt16qRZ
rs6Q4y+PVjQDp+6I3Mwq3csYuG7dugYNGqiJxqEv6+/fXDTLKT2NX7EeOHBA
3tLG84qYT/eyhqrrhFauXFm/XrOM8OqapJqr6V7e6uqbyRIlSuibtfJY6sov
sgbpp/XL+nt72+rCHNkx2YHz58+rZsZrc0RFRanrYWmkeyB4OXW9e/Pjqvr4
rlixor5hk5qaKvfSj8uz2xl1cmbZujDO3HjMu/l0b35YyzJc737p0qVqigxu
r7/+umbZLd9qMx6AHy1atEitwrIlpm8dyeDTvXt3zdV0L5Fc7TMcHh6un1p8
+fLl6qR2b7zxht5StgzVBetfffVV1VLGCnXeOcU23cuc27Vrp49jkqPVbI15
We0Y/8ILL9j2TUXLvHnzqiFa/n300Ufr1q27bds2Y7P4+Hg12w4dOugTx40b
V6hQIRm3rU6m17dvX9Xbs2fPqilObYhKY8mkmuWQga+//lo/0bSM259//rl0
w3hueSvZhWunRmzd+PHjNcvxX8ajxeWzxurXfzMdyHLmbZBlOjU7tbxc46l0
r349lFdAlqmakpaW9vHHH6vX3+raMeY3BvTGBQsWVLsZJyUlqfMY1KhRQx7C
/DPVDMzfC7mcnu7vvvtudWyOIm/FLl26WL2XZLRRX3iK4sWLN27cWFbMKlWq
qD1P9LduljPpXkyZMkWt+/nz569Zs6b6DjlPnjxqJXUt3WdZDnhRh8/LlqR0
8qWXXlIzFMOGDTO21PcfkBehVq1a9S3k2bVu3VpaWn3nab4Dzz//vHolZXiX
Tfpy5crJ3/K8ypYtq5HugeDlVLo3P66uWbNGTZRNi5YtW7744otqC0RdeDq7
j2Z13mbNclrdZhYVK1aUwVbfeDCf7rNMD2tZhisCa5b98OWOai9ZIds2zr+o
ALxIwoKK2GpbSEYJtf+kaNCggbGlyXSf9XfY0SwnNZLNKtmwURt7Dz/8sH75
dUVdg1izXOquWrVqMqRolp+P1U/Mdq93r1lOZ1e7dm2ZrT4w6qc7liCprhJu
96dwCeDqLuqa9Zs2bVLn25fulSpVqmHDhp06dZJRWg1ZMh/j78vvvPOOehYF
ChR4+umnZUOxY8eO6hdq8d577xkfyPyGqDh16lTJkiXVrfJcpLEkNbUUZBNR
ddXB62w3XJsfsXWy5a9Gb+mzJGj5rJGeyGeN3Uv15diBLGfeBiZTs1PLyzx5
z9/6N9VheZPoU1avXu1sP7MsX86UL19eza106dKyFNSntvpZ0yrdm98Y2Lhx
o+qk8V0RGxurZu7UORM0A/P3Qi4nQ5xxycqwI/E2PDzc+Da2Mn36dONpKsUj
jzwi7zrjVwHq3I8O0v2ePXuM0xctWqR+YFJr0zPPPLNz5071K4/+u49y9OhR
1Uz/dtQBGTdatWplPOGkdMn4MaHIFrgMMlo2ZGg1nu3TfAfi4+PVZfUUWele
eeWVP//8Ux1uow+qKr9bpXv9rFakeyDg6AfQmUn3iplxVTVTWwWKbKrJtqts
EqizlNjtjNwq2+1qa1mRLaKqVaseO3ZMNVDDlH4QlpFK98brSpsc1rL+3v4Z
OXKkbM7pp/0pWrTotGnTTL+QAHznjz/+0JO1GigkA0qatjoS/O2339ZM/zw6
f/584/ZV3rx5JYjZns7u4sWLMpLozWSDsFevXmlpaeqCxeq6zIpK90888YT8
oX9hKNuNEouMW2W///67egrZHcWsLk3+2muvqf8mJSWNGjXqySeftBoqZbb6
NZ50UVFRckd9q1WRODZo0CDb87mZ3BBVZAuwX79+6nsJRfpTr169ffv2OXiR
1W7etlcByHJmxDbav3+//vu+Ii/1wIEDXeiAYvJtoF7S7FKzcf5OLS+T1Dce
2TEuMvP9zLIEHwnpxq/OIiIi1ClxJOzYdiPHjQFZL9SL2bJlS6v7zpo1S93F
7tf1dhkfyORdEMQSEhJ27NixZcsWed96ap7Hjx/ftGmTDPKemqGSmpoqQ3Fk
ZKTdOctQLOODfDQMGzZMkruk6Z0WS5cuHT58uFofzXxHnZ0zZ87IZrN0QN/P
CgDsMjOupqSk7NmzR7Y0jKE7R3IvmfO6detkiLM9CtVZZoY1le7nzJmTZTkQ
YPPmzQcPHnTzcQF4m9pk2rZtm234cpnk7tWrV8fExDg+mblEURmj9APn7VLp
vkKFClmWry737t0rI5sHuyo9jI2N3bBhgwyzOc5WjdjSOC4uzvE2nuMNUVun
T59es2bN7t27ndrLOjuubYieOnXqjz/+kCVy+PBhj2zBmnwbOMWp5eVHks3l
9ZcFavKV9EbIsot0j6CkTnsSFhZm91b1naftaawAAA5kt+8iALjMwRXxADiL
dI+gpK46WqZMGeNpppStW7eqI6TYlRQAnEK6B+BxpHvAg0j3CEoJCQlqK7Rk
yZL9+vWbOXPm/PnzR48e3aRJE7Vbftu2bV24/CgAhDLSPQCPI90DHkS6R7A6
cOBA06ZNCxQoYHUOjapVq06dOpVoDwDOeuqpp4oWLfrLL7/4uyMAgsfs2bNl
YKlRo4a/OwIEA9I9gltycvLq1atnzJgxa9asTZs2GS8CBQAAAABBg3QPAAAA
AECgI90DAAAAABDoSPcAAAAAAAQ60j0AAAAAAIGOdA8AAAAAQKAj3QMAAAAA
EOhI9wAAAAAABDrSPQAAAAAAgY50DwAAAABAoCPdAwAAAAAQ6Ej3AAAAAODY
kSNHpk2b9uuvv/q7I7BPFtCcOXOuXr3q7474E+keAAAACFZpaWlRUVFLly6N
jo7OyMjwd3d87caNG/LE5ekfPHgwMzPTnVl99913kpgee+wxT/UNjjm17A4f
PnzzzTfLAnryySd9073ciXQPAAAABJ+dO3fWrFkzb968+tb+gw8+OGHCBH/3
y0cuXLjQuXPn22+/XX/6hQoVeu21106fPu3aDEn3PuPCslu4cKFqeeuttyYm
Jvqyt7kK6R4AAAAIMqNGjdLDUbFixSpVqiSpR/23d+/e/u6d1yUlJVWtWlU9
39tuu61y5cqFCxdW/5U/fv/9dxfmSbr3DdeWXUpKSrNmzUqXLj106FAfdzhX
Id0DAAAAwWTlypVq816iaFRUlJp448aNfv365c+ff8OGDf7tnsu2bdv27rvv
2k7/5Zdf+vbta5wybNgwefq33377jz/+eO3aNTVRXooaNWrce++9cXFxLjw6
6V4xvxRc441lFzpI9wAAAEDQyMjIeOKJJ2TbvlKlSleuXLG69eLFi47vnpmZ
efLkyS1btuzfvz89Pd1um8TExB07dkgzz/TYIDk5WeYcHx9v99bly5f/61//
sp0+duzYV155xTilcePG8gq88cYbVi3lxfHUnvlJSUnS1fPnzzu+V2pq6t69
e2NiYuQP8491/fr1PXv2SI52MP+jR4/u2rVLumF+tmY4XgRZziwF13hj2blM
1iBZCmfPnvXx47qMdA8AAAAEjXnz5qlt+wULFphp36lTp4IFCy5dulT+nj59
etmyZY3H6Vs1XrVq1RNPPKFOXyaKFi3ap08fyYPGNitWrJAZFilSxPaxChcu
LDetXbtWnzJp0iSZEhERER0d/cILL+TJk0fN+aGHHlq4cKHebN26ddOmTeve
vfsDDzwwzUarVq0kb8of0n8Vohs0aCAzCQsLc/zcneqqSvfy9CWqP//88/qB
D6VKlVq8eLHtHC5cuNC+ffvbbrtNPx68oMFbb72ltzxx4sRdd91Vu3Zt+fvM
mTPydPR7yUv9/fffG2d79epVWWSFChXSZ1u9enVJoN5eBFnOLwXXmFx24r77
7ito480337RtmZiYaNvSaP/+/VZ3mTt3brly5W666Sb98JbBgwdn931X7kG6
BwAAAIJG3759VeQ0eYp4iZnSXhLZ//73PxUKJNGULFkyX758NWrUMLb8/PPP
VYM77rjj2WeflTbqv48//vjly5f1ZkuWLFFHTNs+1i233CI3rVq1Sp+iInPx
4sVVWJY/JD6rUwRINyQqqmZffPHFyy+//OSTT8pDv2yjbNmyRYsWVX+rC6JJ
e9W3Dh06GPtmxYWuCnWiwuy6qqSkpDz11FNyU4ECBdq2bdumTZv8+fOru5e1
MJ794PDhwzK9dOnSEu3Lly+vmkl+l/Qqf6xcuVJvGRcXp7/sZcqUeeaZZ1Rn
pLfjxo3z6iJwYSlkR6L0oEGDsrvV5LLLskn36l7/+c9/bFsmJSVJPLdK9PpX
KNJtq30k/vvf/+ov8iuvvFK9enX1jVb9+vUd9Cc3IN0DAAAAQeO1116TDfuG
DRuabK/SfeXKleXfcuXKTZgwQe3/LPn06NGjerPNmzergNOyZcvr16+riXPm
zJGgJxPff/99vaVrkfmBBx5Ys2aNmnjs2LEKFSpolp0HpBt6Y/P7hEsP1RzE
nXfe2aVLl4MHD9re0XtdlS6ph/7zzz/VlJiYGAn4MtudO3daPZZK95LT1Y/F
4eHha9euVT8TyyIw7hqh9lqXNKqfXC4hIUEip0zMly+f/hy997yyPLFnfmRk
pDzZbt262b3V5LKzJTPMLt3bysjIaNasmbSXhbJp0ybjTePGjVNfmMi6oH9F
tmHDhrvuukt9D2Zm/v5CugcAAACCRpUqVWTDvlOnTvqU2NjY/xlImjO2V+le
PP300xIVs5tt3bp1pU3FihUlFhmnjxo1St1dj7EuRMv77rvvwoULxpbr169X
s/3111/1iU7lykuXLrVq1Uo/iEBSc5MmTTZv3mxs472uqh9/jUtBtG3bVib2
69fP6rFUulcchEeJ/KrN7NmzjdNv3Lhx//33y3R5UG8/rywPHXcvM8mTJ0/3
7t3t3mpm2dlyKt137txZRXirow+SkpLUF1a2excMHz5cptepU8fM/P2FdA8A
AAAEDZXuw8PD9SkSBo3b/IULFza2V+n+zjvvPHLkiIPZqj2fJ06caDU9OTlZ
7XP+008/qSkuREu7J6IvUaKE3DRy5Eh9igu5MjY2Vl4KldcUSZT6FxSe7eqI
ESP0Kc2bN5cpr7/+urFZ06ZNrRaNoqf7Dz74wO6zUGT+0qZkyZK2x1wMHDhQ
s+x64Y3nZVwEWZ47q97SpUsl4Pfo0SO7Bo6XnS3z6V6dll+MHz/e6qatW7dq
lrMZ2H7TtWvXLrnp3nvvzXH+fkS6BwAAAIJGixYtZMO+UaNG+pS9e/d+btG+
ffvs0n2bNm0czPP48eMqL2zcuNH2VnWK/oiICPVfT0XL6tWry01du3bVp7ic
Ky9dujRkyJCiRYuqZ/H11197o6tdunTRp0gilimSXvUfxM+ePasO9J40aZLV
3fV0L6+zg2chy0ja1KtXz/amn3/+WbOcgu/GjRsef17GRZBleilkmLBw4ULp
ZM+ePR086+yWnS2T6X7GjBnqXHm2O1GICRMmqAe63YaemnPzufVI9wAAAEDQ
+OSTT7Rszqq3Y8eO7NK93SuY644dO6bygtURyopkPblJz2ieipaVKlWSm/r0
6aNPcfNXYwnajz/+uMyzfPnynu1qxYoV5Sbj1d4vXrxYpkwZmXjPPfdI6vzw
ww+LFSumHlq/hrtOT/eOL+b+zjvvZJfuf/31V82yB3tiYqIHn5ftIsgytxR2
796tOePnn3928MSz7C07W2bSvTxxldPbtm1rt4E66F60y4btrhe5CukeAAAA
CBr6fvi2l2lzOd1nZGSoHaRtjwpPT0+/8847jTctW7ZMdcDqSnlZzkTL1NTU
AgUKyE0zZszQJ7q/T/j48eM1y9HWagdvj3Q1JSVFHZtg7KpMfPHFF60yrARP
44kKdSbT/dChQzXLqfVzvMl7iyDL3FJIS0v704SffvpJs5wuwMH+9jqrZWcr
x3S/e/dudYBJw4YNpYd222zYsEG9dCdPnsyxS7kQ6R4AAAAIGhK3JanJtv1T
Tz1l9TOxy+lePPfcc5rlzHtW07///nsVJfbu3aum6L/byh/GlhMnTlTTzURL
/SfUmJgY+e+8efMGDBggMfCee+4ZYKNBgwblypWTPwYOHJiUlJRlOQHa3Llz
bZ+FtJF5Pvzwwx7s6rfffmvsqqLOwNalS5f4+Pjff/997dq1586dy+61NZnu
f/vtN7vf26SkpJQqVUqmN2/e3IPPy2oRZDm/FBzbuXPn3Xff/eabb1rt6G5y
2dlynO6PHz+uzj0o72G1h4NdssqoAygcnwMh1yLdAwAAAMFk0aJFavO+cuXK
0dHRauKNGze6d+/ucrqXPKiOVg4PD9cvkbZ8+XKZm0x844039JZXrlxRV0t/
9dVXVcvr16+r075lFy1lzu3atbt06ZKaKDFWzVaPqxMmTGjfvv3LL78s09vb
ePbZZ0uWLKn+lseaM2eOeiB5avL01U+9p0+flmyrfmSXx3Knq++//75+yrWV
K1eqC6W1aNHC+HJJaNX+eaFAB0ym+8zMzDp16kizEiVK6CeQl6CqroEomVRf
1t5YBM4uBcdPedeuXRLtpedW0d78srPlIN3L8lJX2StdurSDr1mUwYMHqz4M
GDDAuPPDgQMH5CHUmQ1yLdI9AAAAEGQkoah8JyRGVaxYMV++fOq/DRo0MLY0
me6z/k5PmuVY8vr161eqVEnl/Ycffvj8+fPGlurSb5rlOmvVqlXLkyeP/C13
Uefzt3uxdXHHHXfUrl1bZqsuhXbvvfdanWXO5J75Fy5ceOONN/TZ3nnnnY8+
+qj+X/lbwq/LXVV7tktXa9asqb8Ctl394Ycf9Be/Vq1a9S0aN27cunXrYcOG
WV2ewGS6F4cOHVLH70s3pIcvvfSSyuBCZuuDRWB+KTiwe/fuIkWKNG/e3Hb3
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
9zjSfYDW9u3ayJFawYLaf/5DhVZ17vyvnTt3env1JN2T7kn3pHvSPQDAq0j3
Hke6D9Bau1YbPVpr1kzbvZsKrYqNrXn16lVvr56ke9I96Z50T7oHAHgV6d7j
SPcBWqtWaWPGaJ06+b8nlM8rzAerJ+medE+6J92T7gEAXkW69zjSfYAW6T6E
K8wHqyfpnnRPuifdk+4RmtrBf/y98OFrpHuP82+6X7BAe/FF7ehRLT6ecq7m
z9eGDNHCw/2eNCnfV5gPVs92pHvSPemedE+6R0ji3eUvvPIhiHTvcX5M91ev
Rv7yy1/nhXv7be399ynnqnFjrV497d13/Z40Kd9XmA9WT9I96Z50T7on3SM0
8e7yF175EES69zg/pvvExMgVK7QHHtBef137738p5+qFF7Q6dUj3oVlhPlg9
Sfeke9I96Z50j9Ck3l1+/BAMtbJ65RFSSPce58d0n5UVee2atmSJNmeONns2
5Vz166e1b//Xj/j+TpqU7yvMBysn6Z50T7on3ZPuEZpI9z4uq1ceIYV073F+
Tfe7UlPDoqLC1q8PW7eOcq5GjSrUo8dfAd/fSZPyfYX5YOUk3ZPuSfeke9I9
QhPp3sdl9cojpJDuPc6v6T49K+tyevrl1FTK6Vq5subXX3PO/NCsMB+snKR7
0j3pnnRPukdoIt37uKxeeYQU0r3H+TXdw3WrVoWNHi2bN1pKChValZoalpmZ
6e03WMim+5HdNHfKzXQ/tJdbdb6oWzXrdbfKnW8G5r/qVk14361y81uR7zq4
VW6+Z9ypLc+4Vd92dKuGf+RWkQLgPaR7H5fVK4+QQrr3ONJ9gJJ0P3Kk9tpr
2pkzVGjVhQu1k5OTvf0GI92T7kn3pHvSPUIT6d7HZfXK23Xp0qVly5ZJYPns
s8/69OnzzTffLFiw4Pjx4w6Wo2ScMWPGJCYmWk1PSkqSmyZOnCiz6t+/v/yx
fPnya9euZTefhIQEebjVq1ebfQM5LyMjY/PmzTNnzhw7duyPP/64du3atLQ0
7z1crkK69zjSfYDavTtswgStYkV/bhlSfqmxY58+dOiQt99gpHvSPemedE+6
R2gi3fu4rF55W5GRkeHh4e1sdOzYUSK/RGPbu2zbtk21uXjxonF6XFxc3759
bWcVEREhN9nOJyUl5YsvvpAGU6dOdetdlb3r168PGDDAqj/SSaueByvSvceR
7gPUyZNhM2ZoN9+s3XsvFVoVFlZpzZo13n6Dke5J96R70j3pHqGJdO/jsnrl
raxatUoF3j59+qxdu/bw4cNnzpzZvn37V199pabLRGP7zMzMyMjITp062U33
w4cPl4m9evVav379CYsNGzZ8/PHHMrF79+7p6enGxufPn1ftvZruJ06cKPP/
8MMP58+fHxsbu2jRoh49esiUESNGeOkRcxXSvceR7gPU1atT9uzp//nn/b/6
igqtmjLl26NHj3r7DUa6J92T7kn3pHuEJtK9j8vqlTeSfK1y+tixY60OS8zI
yJg8ebL6mVv/+T4+Pl5P/bbpPjExsUOHDjJx+/btxlnFxMSoxgcOHNAnrlq1
6oMPPtDn46V0n5qaqnZL+O233/SJGzduVA9qe1hB8CHdexzpHoAt0j3pnnRP
uifdIzSR7n1cVq+80S+//KJ+Vbd7XHxCQkLHjh179ep15swZNWXx4sXSXvLy
6tWr5SardH/q1CmVmm0P2P/mm28GDRoksVqf0r59e2k5ZMiQ6dOnu5zu09PT
p02b5uCASun5p59+2q1btytXrugTk5OTs+tn8CHdexzpHoAt0j3pnnRPuifd
IzSR7n1cVq+8kSRfx8n68uXLxv+uWbNGwvj58+flb/WbuDHdZ2Zm9uzZUyb2
799/x44djs9RLLl+y5YtGRkZy5Ytcznd79mzR+7btWtXp3L63r175V7t27dP
SUlx4UEDC+ne40j3AGyR7kn3pHvSPekeoYl07+OyeuV1EsbV7++rVq1yYTna
/nYvJLCr6e0sJ+UbMWLEkiVLjhw54uBaw0uXLnVnz/xJkyap3Q9OnTplpv31
69fVdxpjxoxx7REDC+ne40j3AGyR7kn3pHvSPekeoYl07+OyeuV1V69eVTE8
JibGOH3mzJmT/zbJwqqBYjfdi9jY2MGDB1udo75///767v1W3Ez3+ln3e/bs
ee7cOceNk5KShg0bJo27dOmSkJDg2iMGliBI9xkZGbLgLl++fDV3+OWXX3r1
6kW6B2BEuifdk+5J96R7hCbSvS/LKmUbF4TkYjVx3bp1xundunWzupcEcNvl
mF26V65cubJx48YpU6aoffVVoLZ7gHyO6V5i3RaH1L794uOPP3ZwnTuZj/oe
IDw83O73FUEpCNL92bNnR48e3aBBg9a5Qz0L0j0AI9I96Z50T7on3SM0ke59
XFavvNGHH34oE6dNm2acuHXr1g1/Uzuxm0/3KSkpqampximZmZkyw+7du0vj
yZMn284nx3S/Y8eOdqZ9/vnndmciCVFdmK9r166xsbHZPVbwCYJ0L8tLllqJ
EiVq5w6VK1d+7rnnSPcAjEj3pHvSPemedI/QRLr3cVm98kbjxo2TiRLhra5E
r/v666/Np/sJEybIlLlz59o2joyMlJt69Ohhe1OO6f7EiRPTHFKH3reznCjP
6mJ8Slxc3EcffaR+3Dd5eH7QCIJ0P2/evIiICFl2kbnD8OHD33vvPdI9ACPS
PemedE+6J90jNJHufVxWr7xRdHS0ysXjx4+3DfgZGRlDhgwxn+5XrVolU3r3
7p2UlGTV+LfffpObBg0aZDsfN4+7F1OmTFHRftOmTba3njx5Uu2i8MUXX1hd
AiAUBEG6nzFjRp8+fYYOHfpn7iDvt86dO5PuARjJp4wfI3aj4tP8VRFfau6U
m2lrWX23attTbpWbj/7zK67XqK5u1eJGbtWh0m7VwL5u1ejObtXs11yvzdXc
qm86uVXu9FyKdA/vId3nnnQvJNergD927NjY2Fh1kbjExMRdu3Z9/vnnTh13
f/78edX+008/PXjwoPq6QP7dvHlz165dZfqiRYts5+Nmuo+07BUg1q9fb3tr
Zmam+oLis88+u3btWvo/ufaIgSU40r0svu+++y41d5B3bEREBOkegBHpnnRP
uifdk+4Rmkj3uSrd37hx45tvvtGPW5fMrp8HT3To0OGnn36SsG97R7vH3W/c
uDE8PNw4K/0CeUOHDpV8bTsfd9L98ePHHV/Uz/Ex+3bP8hdkgibdjx8/3t8d
+T9cES8Q7dmzR0anDQhJO3fuvHTpkrffY6R70j3pnnRPukdoIt3nqnSvbNq0
SV0qTte7d2/JUw6OUv/ggw+kme0mk0RmmVXnzp31WUVERMyaNSstLc3ufJYv
X97O5sx+JiUkJMjMZQ7ZNVi0aJGDdH/48GEXHjSwkO49jnQfiN58881HH330
wQcfLIXQ8/LLL69du9bb7zHSPemedE+6J93nHqdPn166dKlsQy5cuDAuLi7H
9leuXFm1atVPP/30888/b9++PTMz09kGoYx0nwvTvZKUlCRx/vjx43Z/rHeK
vOfPnj179OhRu7/Xe1DqP0/RDyuke48j3QeievVeqFWr8Isv5m/QoBAVatWh
Q60dO3Z4+z1Guifdk+5J96T7XOL333/v0KGD/nNe+/btZePNQfuoqKguXboY
fwH88ssvjacRy7FBiCPd59p0j+BDuvc40n0gqlz5kZkztdhY7ciRm6hQq5Mn
a9+4ccPb7zHSPemedE+6J93nBocOHZI4Hx4evnr16lOnTq1YsUIl/ePHj9tt
f/bs2U6dOrWzXPYrPj5+3759/fr1k//K9qfJBiDdk+7hM6R7jyPdB6JKlR5a
uFCLj9cuX6ZCrq5ere2DvbxI96R70j3pnnSfG3z77bfyZI3H7S5btkym/PDD
D3bbT548WW796aef9CnHjh2TKd26dVO73+fYAKR70j18hnTvcaT7QPTEEw8t
XapduSJrARWCFeaD9xjpnnRPuifdk+79TuK2ulCX8cxgV65cad++/QcffGD3
8t9dunSRW69evWqcHh0drU6+nWMDZJHuSffwIdK9x4VOuj927Ni+fftigkL5
8vcvWUK6D9kK88H6Qron3ZPuSfeke787d+6cPNOPPvrIanqPHj1k+tmzZ62m
nzlzRqYPHDgwMzNz//79S5cuXbVqlfG02zk2QBbpnnQPHyLde1zopPu1a9fO
mzdvTlAoVaoY6T6EK8wH6wvpnnRPuifdk+797siRIyqMW02XKTL94MGDVtP3
7Nkj00eMGDFy5EjjSfMmTpyoDunKsQGySPeke/gQ6d7jQiHdZ2YmHT/+Wfv2
7/Tp89pnn7UIgipePP/ixaT7kK0wH6w1pHvSPemedE+697v9+/fLMx08eLDV
9KFDh8r0ffv2WU3ftm2bfl79adOmyX8XLVqkrvo9f/58Mw2QRbon3cOHSPce
FwrpPj398vr12l13ac2aaa1bB0MVK6aR7kO4wnyw1pDuSfeke9I96d7vVLof
MmSI1XSZItMPHDhgNX3Lli0qvC9ZskSfuHfvXpnSsWPHpKSkHBt477kEENI9
6R4+Q7r3uFBI92lpl3/7TatVS1u7VouJCYYqX15jz/wQrjAfrDWke9I96Z50
T7r3u6NHj8oz7d+/v9V02ZKU6SdOnLCaHhUVpX6XT05ONk7v27evTD9y5EiO
DbzxLAIO6Z50D58h3XtciKT75cu1f/9bO3vW77nMM/XEExrnzA/hCvPBWkO6
J92T7kn3pHsPWrhw4eS6dRyU3Wd09epVmd61a1era9V16dJFplud915I3pfp
HTp0sDqdvtqTPzo6OscGHnq6gS2g070fP7tdLqtXHiGFdO9xpPtALNJ9aFeY
D9Ya/6b7unU2+Kv6fKG5U26m+7aT3Kp3prhVLWe4Vc3muV611rlV7jy01ANx
btVn/d0qNzv/439dLzef+JgP3KqPB7tVAZcCJN2n3K45qI9bvmn3jh9//LHV
z/QqoUdERNg2TktLUwfRHzt2TJ8oQV6dY//kyZM5NvDcMw5gpHvSPXyGdO9x
pPtArEqVtJ9/1s6c0RITqZCrGzfCbK9x7HGke9I96Z50T7r3IEn3yXk0B5Vd
up87d6482TFjxqiRX/4dPXq08SR4169fP3To0NGjR9V/J02apA7V18+Bv2LF
CpnSp08ftQNAjg1Auifdw2dI9x5Hug/EKlVKCwvTmjfXXn+dCrnq0aNKVFSU
t9ca0j3pnnRPuifde5Ck+6S8moPKLt1fvXr1o48+UmfOl0T/5Zdfyt+9evXS
d8uPjo6WKR9++KH678WLF1X7gQMHyoOOGzdOHWivf3Dk2ACke9I9fIZ073Gk
+0Cs6tW1unX/ekb/+Q8VctWlS5WdO3d6e60h3ZPuSfeke9K9B0mOvpFPc1DZ
pXtx4cKFIUOGSABXp7uXmH/q1Cn9VpXuu3Xrpk85e/bs8OHD9fa9e/fevn27
cYY5NghxpHvSPXyGdO9xpPtArJ07/zpn/s8/awsWUCFXq1Y9e+7cOW+vNaR7
0j3pnnRPuvcgSffX82sO6uP/ZpvulcTExGPHjiUkJJh8xMuXLx89evT06dPZ
HcyVY4OQRbrPhen+0qVLy5Ytk8AiMapPnz7ffPPNggULjh8/7mA5SsYZM2aM
rDhW05OSkuSmiRMnyqz69+8vfyxfvvzatWtWzTIyMjZv3jxz5syxY8f++OOP
a9euTUtLc/rN5Lz169d///33f/75pw8eKzcg3XtcgKb7zMzM5ORk+Zg7bsLh
w3t++EFr2DB40n18/F8Bf+NGKhQrKuo5+Yzz9ipGuifdk+5J96R7D5J0f62A
5qByTPfwGdJ9bkv3kZGR4eHh7Wx07NhRIr/EcNu7bNu2TbW5ePGicXpcXJy6
/qOViIgIuUlvdv369QEDBli1kTtazc3jjh492qFDB3ksyfhefaDcg3TvcQGa
7iXab9my5eGHH37MhPLly5UsqVWr9tdp6PwezD1S6elaSoqWlESFYqWkhNn9
IPMs0j3pnnRPuifde5Ck+6t3ag6KdJ97kO5zVbpftWqVCtd9+vRZu3bt4cOH
z5w5s3379q+++kpNl4nG9pmZmZGRkZ06dbKb7ocPH67OXCHx+YTFhg0b1JUp
unfvru/HMnHiRHU6i/nz58fGxi5atEhdV2LEiBGef8P9LSUlRf/mgXQfQEj3
HnH9+rnffx9TtKj20kv5cqwXX8z3r39pzz0XPOmeCu0K88EqRron3ZPuSfek
ew+SdH+loOagepPucw3Sfe5J9+fPn1c5fezYscnJycabMjIyJk+erH5S13/1
iI+P11O/bbpPTExUv4xbnWgiJiZGNT5w4ID8NzU1Ve0q8Ntvv+ltNm7cqNrY
7urvKdOnT9e7TboPIKR7j7h4cf3s2QX+/W/t5Mmc69gxbcaMoNoznwrtCvPB
Kka6J92T7kn3pHsPknR/uZDmoEj3uQfpPvek+19++UX9qm57XLxISEjo2LFj
r169zpw5o6YsXrxY2ks2X716tdxkle5PnTqlsvNxmwP2v/nmm0GDBkmEl79l
bp9++mm3bt2uXLmiN0hOTs7uvg6kp6dPmzbt0KFDObaMioqSmX/88cfDhg0j
3QcW0r1HXLwYOWuW1qyZduNGznX1qrZwoda4MemeCo4K88EqRron3ZPuSfek
ew+SdH/pLs1Bke5zD9J97kn3krJl4tSpU7NbWJcvXzb+d82aNdOnTz9//rz8
rX5/N6b7zMzMnj17ysT+/fvv2LHDamcAx/bu3dvOcu3IlJQU8/fas2eP3Ktr
166OvxO4cuVK9+7d1c4DY8aMId0HFtK9R6h037y5qTSUlqYtWxZU58ynQrvC
fLCKke5J96R70j3p3oMk3V8srDko0n3uQbrPJelewrj6/X3VqlUuLEfb3+7F
li1b1PR2lpPyjRgxYsmSJUeOHJHHcjCr69evq+8ZJHo7241Jkyap3Q+MF7K0
ohL9nDlz9L9J9wGEdO8Rzqb7ILsiHhXaFeaDVYx0T7on3ZPuSfceJOn+QhHN
QfVuRbrPLUj3uSTdX716VcXwmJgY4/SZM2dO/tskC6sGit10L2JjYwcPHmx1
Pvz+/fvru/dbSUpKUnvLd+nSxfwlKXUpKSlffPGF3L1nz552r2gcGRmpOpCa
mppFug9ApHuPIN1TIVxhPljFSPeke9I96Z5070GS7s8X1RwU6T73IN37sqxS
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
2Isvou5vfPxN9fX1au9i0D10D91D99C9giHdN/yASTT8L9C9KIHuoXtEs0D3
CA90r1k7OtjKlezee9k777B330Xd3w8+uL23t1ftXQy6h+6he+geulcwpPu6
HzGJQvfiBLqH7hHNAt0jPNC9Zm1rY6tWsYQEZjS6f2XQK9VpsItB99A9dA/d
Q/cKhnRf+2MmUehenED30D2iWaB7hAe616zQvXjVabCLQffQPXQP3UP3CoZ0
//FPmERXQPfCBLoXUPeDg4P5+fkbNmwgRsXGxqamph46dKitrc1xZm9vL+1u
6enppK3Dhw+3t7fbTTAajcePH6cJtCiDwUBfFBQUjI6OzvfSAwMD9HInTpxw
ektyPlq+liCB7hEervtHHmGjo6i6PXeOxcdD90JVp8EuBt1D99A9dA/dKxji
xtmfMolC9+IEuhdN98XFxQEBAUsdotfrifxms9k6s6SkhAZt5/j5+eXl5Vkn
dHR0xMXFOS4qJiaGHnJ8aZPJtGrVKpqwc+dOxbaweaLla4kT6B7hGR4uPnKE
feUr7IUXUHX71FNsyZLZC+tB98JUp8EuBt1D99A9dA/dKxjS/ZkbmUShe3EC
3Qul+6KiIg7w2NhYwntzc3NXV1d1dXVycjIfp0E+s7Ozk9M+JSWlqqrqo48+
Sk1N5XMaGxv5nHXr1tG3kZGRpaWl7VdSVlYWHR1Ng2FhYTMzM7Yv3dfXx+dr
IG4tX0uoQPcIz9hYcX4+++IX2e23o+r25z9n3//+rDuge2Gq02AXg+6he+ge
uofuFQzpvuZnTKLQvTiB7sXRPZl32bJlNJ6WljY5OWn7kNlszsjIoIfi4uL4
x/e0l9khncZfeuklGszJybk8y4cxf39/+ra6utp2UQ0NDZzV58+ftw4WFRUF
BgZaP9xXVdxavpZoge4RnpmZ4p4etmsX27MHVbebNrFnnsFn90JVp8EuBt1D
99A9dA/dKxhyR/VNTKIr/grdixLoXhzdHz58mIN9zvPiBwYG9Hp9ZGRkV1cX
fbt37176mv60nbNv3z5aQmpq6uUrH+5zPrc5nLBPExITE8vLy60jfn5+NDMp
KWnXrl0ui3tmZiYrK6upqUl6miKv5aGB7pGrqZie/mZz8zfr61F1e/z4V0NC
cN69UNVpsIP5rO7Dk5mcytR9QJqsfrlXVmUyU47uZb70M7tk9Y4yWZX5jlDs
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
99A9dA/dKxjS/c7nmESXQ/fCBLoXR/e1tbXcudu2bXMEvtls5p99W3VPlOaI
LikpcfzNFhUV0aNRUVFGo9HuocLCQnooMTGRf3vp0iV+2MCqVasWvCz/gsnM
zORrVVFRYffQkSNH9nw+tHo0OTk5mb6WflfBO6KU7h944IG0tDT6vXdonjfe
eIN+azgy3xcilO7N5tnVOHmSffCBN/fgQXbnneyRR9z/A4fuoXvoHrqH7qF7
a0j3mX9lEoXuxQl0L47uKYQmDnyyW2NjI78h3djY2JkzZxISEvhDXPf8pnWU
srKymc+HH/TY19fHJ8THx1+4cIG/XUB/VlZWBgcH03hubu7lKwcA8DcNXnnl
ldHRUbtFObs58aMCli76VHqcd+9a7r///j179tCvVakVW3xwRzxhQ/vy4OBg
f3//Zwqlo+PM22/PSlME3ZtMrLqa7dnDcnLY3r1e2+3b2S23sD/8wf0/cOge
uofuoXvoHrq3hnQv/TeC7sUJdC+U7icmJlJTU60Hq+v1eut18Cj+/v5kOsI+
zbRi3zEbNmzgSysvLw8ICLBdlPUGeWvWrCHLX17oPHrHK+9JpK2tzdmb+kH3
rgW6RxxDtKd9PyoqKkKhhIb6PfYY+/WvWXe32z3IPv2U3Xgju+OO2WMJnnjC
a/v737NvfWv2svlu/4FD99A9dA/dQ/fQvTWke+kfyPKl0L0oge6F0j1PRUUF
vy2dNfxYaOux62azmaS/oO4pxHNa1PLly62PxsTE5OTkWC+tn5ubK6H75ubm
xW9LAwMDtPCCgoLFPyUtLY1eRYN7HwsS6B5RKRaLsavrbHh4aEDAU3r9k4r0
73//3QMPsLvvFkL3HR3sq1+dvVXc00+z557z2hLwv/vdWeO7/QcO3Xuo7kNe
Z3IqU/f3HpfV/8mR1Wd2yerSba73ofdk9Y/7ZPW2CllNfElWHz0oq5v1rvfL
vbJ65GFZzf6TrHqi7tNfYBKF7sUJdC+g7nmMRiNxvq2tjX9YLycWi6W7u7u1
tZV/Xq9e7C7Rj9gFukdUitFYWl5+zbe//c8bN35h2zZlumnTF5Ytm707mwi6
v3SJXX89Ky1lg4NsbMxr29rKHngAV9VTINA9dA/dQ/fQvYIh3b/5IpModC9O
oHthdY94X6B7RKUYjcUk3299i73zDnvvPWV64ACLj5/FpiC6/973WE3N7IXl
3b4y6rWnhz30EHSvQKB76B66h+6hewVDut+2lEk0ELoXJtA9dI9oFugeUSmk
+1On2E9+wj77bPYCdIp0cHD2Eu4kTRGuqgfde1F1GuwR0D10D91D99C9giHd
b/VjEoXuxQl0D90jmgW6R1QK1/1Pf8pGRhRT2MQEE+eOeD6i+97e2VMh7rmH
1dV5bS9cuHNkZETtPQK6h+6he+geulcwpPst/kyi0L04ge6he0SzQPeISoHu
vaP9/bP3BfjKV9hTT3ltw8N/fvbsWbX3COgeuofuoXvoXsGQ7qV/HdC9OIHu
oXtEs0D3iEqB7r2j9DNPTmbLl8tFlshNS7vZqXutuhboHrqH7qF76F7BkO7T
AphEA/2ge1EC3UP3iGaB7hGVAt17TZuaWFUVO3LEa3vixO29vb1q7xHQPXQP
3UP30L2CId1vWsYkCt2LE+geukc0C3SPqBTo3mva3z/7lz1/3mvb0nKn/Nu8
LhjoHrqH7qF76F7BkO7fWM4kCt2LE+geukc0C3SPqBToHvWc6jTYI6B76B66
h+6hewVDut8YxCS6DLoXJtA9dI9oFugeUSnQPeo51WmwR0D30D10D91D9wqG
dL8hmEkUuhcnfOty4/8EPfR/oC7X7ieP+FSge0SlQPeo51SnwR4B3UP30D10
D90rGNL96yFMotC9OIHuoXtEs0D3iEqB7lHPqU6DPQK6h+6he+geulcwpPv1
oUyi0L04ge6he0SzQPeISoHuUc+pToM9wmd1v20pk1OZuv9drqz+/l1ZDd4g
qz+vcb26YlmV88YC9ebTsvqXnbIq8w0laTBK96tdsropUFZl7iwepwDS/boV
TKLL/KF7UQLdQ/eIZoHuEZUC3aOeU50GewR0D91D99A9dK9gSPfJ4Uyi0L04
ge6he0SzQPeISoHuUc+pToM9ArqH7qF76B66VzCk+7URTKLQvTiB7gXU/eDg
YH5+/oYNG4hRsbGxqamphw4damtrc5zZ3d198ODBLVu2kLmqqqomJibsJhiN
xuPHj6enp9OiDAYDfVFQUDA6OjrfSw8MDNDLnThxwtkNyYXM91pnz5495pDK
ykoNVkntQPeISoHuUc+pToM9ArqH7qF76B66VzCk+zWRTKIB0L0wge5F031x
cXFAQMBSh+j1eiK/2Wy2zqyoqKBB2zkJCQlDQ0PWCR0dHXFxcY6LiomJoYcc
X9pkMq1atYom7Ny5U6kNbL5IvBb9LRzXeeXKlWqvkgaB7hGVAt17U2dm2OCg
13Zk5K6pqSm19wjoHrqH7qF76F7BkO6TophEoXtxAt0LpfuioiKO2djY2JKS
kubm5q6ururq6uTkZD5Og3xmb28vfxNg06ZNdXV15eXl8fHx9O369eutS1u3
bh2NREZGlpaWtl9JWVlZdHQ0DYaFhc3MzNi+dF9fH5+vge4lXmt6epq/ZUGK
3GuTwsJCVVdJm0D3iEqB7r2mZjPr6GCbNrE1a7yzO3bc0tLSovYeAd1D99A9
dA/dKxjS/WvRTKLQvTiB7sXRPZl32bJlNJ6WljY5OWn7kNlszsjIoIfi4uL4
x/d5eXn0bWhoqMlk4nNqa2v5R/xGo5G+HRsb8/f3p5Hq6mrbRTU0NHBWnz9/
3jpYVFQUGBho/aBcVd1Lv1ZbWxsNrlixQr0VcGOge0SlqKf7hx+exebUlJvb
2uoruh8bY/X17OWX2UsveWc3brxZg/92QffQPXQP3UP3CoZ0L31vxAA9dC9K
oHtxdH/48GH+qfqc58UPDAyQ3CMjI7u6uuhbsvn+/fvLysqsE0ZGRriX+/v7
6dvOzk7+reMJ+6mpqYmJieXl5dYRPz8/mpmUlLRr1y6XdT8zM5OVldXU1CQ9
Tfq16G9Egxs3bnRhBcQPdI+oFPV0f9NN7IMPZr3p3p44wb79bZ/Q/bFjbN26
2UMmVq3yzm7bdktzc7PaewR0D91D99A9dK9gSPerYplEoXtxAt2Lo3t+aL2E
rG3PqbfLxMTEW2+9RU+nhfARi8USERFBIwaDoaamxu5gALuQtauqqsxmc35+
vsu6r6uro+cGBwfPeQHARb4WoZUGU1NT6a+zevXq9evX79+/f2RkxIX1ETDQ
PaJS1ND95CQrLp5d5tatbO9eN3fLFvaNb7Dqau/X/XvvsaQk9qc/sV27vLO5
ubd1dnaqvUdA99A9dA/dQ/cKhnT/ahyTKHQvTqB7QXRPGOfnmxcVFTn1G+zt
7U1OTubPXbFiha34CNHWy+7RFykpKXl5eS0tLfRa8y3t6NGjco7M37FjBz/8
YDH/eJvztdauXet4ST1aYGtrq2urJFSge0SlqKH7mZnZs91/9CP2i1+wW291
c2+6iX3pS76i+5QUtmLF7LsrXlmTSWd7eViVAt1D99A9dA/dKxjS/cqXmUSh
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
Gx8fX7lypd0cemJ/f7/yG9zVmEymVatW0Qvt3LlTvVcRLdA94myge2Gr0jXz
F9OODvaHP7Af/nD2bAWP65//fCP9z0vtHQe6h+6he+geulcwpHvpPQi6FyfQ
vVC6Lyoq4riOjY0tKSlpbm7u6uqqrq5OTk7m4zTIZ/b29vI3ATZt2lRXV1de
Xh4fH0/frl+/3rq0devW0UhkZGRpaWn7lZSVlUVHR9NgWFjYzMwMn5aenk4j
ISEhBw4caGxszM3NDQ8Pp5GUlBSVtrq+vj6+btC9a4HufSfQvbB1o+4nJ9nZ
s6yigp0+7Xmtq7tjeHhY7R0HuofuoXvoHrpXMKR76e0Quhcn0L04uifzLlu2
jMbT0tImJydtHzKbzRkZGfwjdf7xfV5eHn0bGhpqvTxRbW0t/4jfaDTSt2Nj
Y/7+/jRSXV1tu6iGhgbO6vPnz9O3U1NT/F2CwsJC65zy8nI+hxai4MbGU1RU
FBgYaD1IALp3IdC97wS6F7Zu1L2HV6fBjgPdQ/fQPXQP3SsY0v3zO5hEoXtx
At2Lo/vDhw/zT9XnvOLQwMAAyT0yMrKrq4u+JZvv37+/rKzMOmFkZIR7mR9R
39nZyb91PGE/NTU1MTGRCE9f09Li4+NDQ0NtP0yZnJyc77kSmZmZycrKWvCE
Sj8/P1pyUlLSrl27oHvXAt37TqB7YQvdu1qdBjsOdA/dQ/fQPXSvYEj3f8tg
Ev07dC9MoHtxdM8PrZfQru059XaZmJh466236Om0ED5isVgiIiJoxGAw1NTU
2B0MIJ36+np6IjHcqfsW1dXV0bOCg4Ol3xMg11dVVZnN5vz8fOjetUD3vhPo
XthC965Wp8GOA91D99A9dA/dKxjS/V8ymUShe3EC3Quie8I4v0ReUVGRU7/B
3t7e5ORk/twVK1bYio8Qbb3sHn2RkpKSl5fX0tJCryWxwPHxcf4+w6ZNm5xa
E8qOHTv44QednZ0LTj569Ch071qge98JdC9soXtXq9Ngx4HuoXvoHrqH7hUM
6f65t5hEoXtxAt0LonvrcfUNDQ2249nZ2RlXs+NK7CacPXvWeg57eHh4XV2d
7aONjY2rV6+2ux6+wWDgh/c7xmg0rl27luYEBQUNDAw4uzlZr4QfERHR09Mj
PRm6dznQve8Euhe20L2r1Wmw4/is7kNeZ3IqU/fSp+Uu2CUnZfUPh2X1j/tc
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
MEAvd+LEicVuQM7HbDZXVlZmZ2enpaXt3r27pKRkenp64ad5RaB7xNksXvdm
M+vpYS0trLkZRcVtR8eS8fFxtXcc6B66h+6he+hewZDupX+e0L04ge5F031x
cXFAQMBSh+j1eiI/0XjOZ23evJnmREZG2g52dHTExcU5LiomJoYeclyIyWRa
tWoVTdi5c6frm5Rk6B91K1eutFsfWsn+/n6VXlGoQPeIs1m87qkWy6zxUVTs
6jTYcaB76B66h+6hewVDur/7BJPo36B7YQLdC6X7oqIiDt7Y2NiSkpLm5uau
rq7q6urk5GQ+ToOOzyotLeWP2ul+3bp1fJAmtF9JWVlZdHQ0DYaFhc3MzNhO
7uvr4/NV1X16ejotPyQk5MCBA42Njbm5ueHh4TSSkpKi0isKFegecTZO6R5F
PaE6DXYc6B66h+6he+hewZDudR8wiUL34gS6F0f35Otly5bReFpamt0Ng8xm
c0ZGBv+Y2+7j+56ensDAQEfdj42N+fv706Dd1YkbGhr45PPnz1sHi4qKrAtR
T/dTU1P8sITCwkLrYHl5OX9RWmE1XlSoQPeIs4HuUa+rToMdx2d1nxTF5FSm
7p/cK6sr1slq4kuy+vh+1ytT9/rNsvqDBlmV+Z7M2ghZPXG365X+KHnBltwl
q+//WlY9Ufd3lTCJQvfiBLoXR/eHDx/mn6rPeV78wMCAXq8nv3d1dVkHZ2Zm
Vq9eTc/in4nb6r6zs5Oruc3hhP3U1NTExERitXXEz8+PZiYlJe3atctl3dPK
ZGVlNTU1zTeB1jw+Pj40NHR4eNg6ODk5Od96el+ge8TZQPeo11WnwY4D3UP3
0D10D90rGNL9kpNMon8Lg+5FCXQvju5JvtKyHhoashs5cuQIP6y9tbXVTvcW
iyUiIoIGDQZDTU2N3cEAdiHXV1VVmc3m/Px8l3VfV1dHzw0ODnbK6fX19fQs
Pz8/k8nkwot6VqB7xNlA96jXVafBjgPdQ/fQPXQP3SsY0v2dpUyi0L04ge4F
0T1hXK/X02BRUdEif3dNTU2EYtJ0f3//xYsXHc+7J7DzZfKL8qWkpOTl5bW0
tNBrzbfMo0ePyjkyf8eOHfzwg87OzsXMHx8f5+9pbNq0ybVX9KxA94izge5R
r6tOgx0HuofuoXvoHrpXMKT7O8qYRKF7cQLdC6L7kZERzvCGhgbb8ezs7Iyr
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
VzCk+/+6wCQK3YsT6B66RzQLdI84G+h+MTUa2fi4Yh0bY9ddp7zuOzvZsWOz
i/XxQvfQPXQP3UP3HqcA0v13m5hEoXtxAt1D94hmge4RZwPdL1iTiW3dOiuL
uDhlGhvLrrlGed1PTrL+ftbS4uu9dGnJxMSE2jsOdA/dQ/fQPXSvYEj332lm
EoXuxQl0D90jmgW6R5wNdL9gx8dZWBh76in25JPK9Ikn2L/8i/K6R69Wp8GO
A91D99A9dA/dKxjSvfSG9Cx0L0yge+ge0SzQPeJsoPsF29TE7ruPvfwy27xZ
maalsS99CbpXrzoNdhyf1f3bf2ZyKlP3f98uq9GrZTXxJVl96D3X+8ghWf3L
Tln9TaGsxifI6psvyqocX997XFY/+pmsfnKDrHqcAkj332plEoXuxQl0L6Du
BwcH8/PzN2zY8Morr8TGxqamph46dKitrU3i9zg6Orpjx46cnBy7caPRePz4
8fT0dFqUwWCgLwoKCmiy3TSz2VxZWZmdnZ2WlrZ79+6SkpLp6enLKmdgYID+
aidOnFD7hcQJdI84G+h+wdbVsVtuYevXz95sTpEeOcKuvRa6V686DXYc6B66
h+6he+hewZDur2tjEoXuxQl0L5rui4uLAwICljpEr9cT+Ynhcz5r8+bNNCcy
MtJ2sKOjIy4uznFRMTEx9JB12vj4+MqVK+3m0BP7+/vlb2DzxWQyrVq1il5o
586d6r2KaIHuEWcD3S9Y0v2vfsVOnhT9qnro1eo02HGge+geuofuoXsFQ7r/
RjuT6LOR0L0oge6F0n1RURHHdWxsbElJSXNzc1dXV3V1dXJyMh+nQcdnlZaW
8kftdL9u3To+SBPar6SsrCw6OpoGw8LCZmZm+LT09HQaCQkJOXDgQGNjY25u
bnh4OI2kpKQouKXZpq+vj68bdO9aoHvfCXS/YEn399zDPvxQsQWqdEc89Gp1
Guw40D10D91D99C9giHdf72DSRS6FyfQvTi6J/MuW7aMxtPS0iYnJ20fMpvN
GRkZ/CN1u4/ve3p6AgMDHXU/Njbm7+9Pg9XV1bbzGxoa+OTz58/Tt1NTU/xQ
gcLCQuuc8vJyPocWInMDc0xRUZF1haF71wLd+06g+wUL3XtadRrsONA9dA/d
Q/fQvYIh3X/tEpModC9OoHtxdH/48GH+qbrjefGXr5ylrtfrye9dXV3WwZmZ
mdWrV9Oz+Ofvtrrv7OzkfG5zOGE/NTU1MTGRCE9f09Li4+NDQ0OHh4etEyYn
J+d7rkRoZbKysha8kbGfnx8tOSkpadeuXdC9a4HufSfQ/YKF7j2tOg12HOge
uofuoXvoXsGQ7v+zk0kUuhcn0L04uidlS2t3aGjIbuTIkSP8EPrW1lY73Vss
loiICBo0GAw1NTV2BwNIp76+np5IDDeZTIt/Vl1dHT0rODhY+j0Bcn1VVZXZ
bM7Pz4fuXQt07zuB7hcsdO9p1Wmw40D30D10D91D9wqGdP/VT5lEn4HuhQl0
L4juCeN6vZ4Gi4qKFvm7a2pqIoCTpvv7+y9evOh43j0hmi+TX5QvJSUlLy+v
paWFXktisePj4/x9hk2bNi1yTazZsWMHP/ygs7NzwclHjx6F7l0LdO87ge4X
rEq6j4xkn32GKt/Bwbucet/YtUD30D10D91D9wqGdP+VbiZR6F6cQPeC6H5k
ZIQzvKGhwXY8Ozs742p2XAmfYDQaY2NjaX5lZSV9O6fuKY2NjfzQfdsYDAbb
w/ttQ4tdu3YtzQkKChoYGHB2c7JeCT8iIqKnp0d6MnTvcqB73wl07y7dP/00
O3oUVb6lpb/s7e1Ve8eB7qF76B66h+4VDOn+2h4mUehenED3WtZO2ba/CHIx
Hzx58qTteGhoqN2zCMU0Tiimr7dt28anzad7nuHh4fLy8szMTH6sPse74wny
Q0ND3OYBAQF2bzLYzqmSDD/enhIdHS19Tz3o3uVA974T79a92cx6etinn8rq
Bx+wJUvY6dNK6v7222d1v20bqnzfeedW21uyqhToHrqH7qF76F7BkO6/3Msk
+kwUdC9KoHtBPrunhISE0GBWVpbt4OnTp8uuhh8wTyi2Xve+sLCw/Er4Cfhk
dvq6traWP9dkMk1NTdkuzWKx0ALDwsJockZGhu1D3d3d/GZ5wcHBjY2N820w
NTU1SxedhIQEiW0Punc50L3vxLt1Pz7O9u5lGRmy+uqr7KabWFWVkitGTvnr
X9njj6PKNzT052fOnFF7x4HuoXvoHrqH7hUM6f7f+5hEoXtxAt2Lo/utW7fS
IBHeeid6u2zcuJHrvri4eEFTb9++nb7et2+f43L408PDw60jHR0dK1as4B+4
S58y397eniUZfur90isX5bO7GZ9doHuXA937TrxY92NjrLSUPfGEXFD4+7Of
/ERh3ZeUsEOH2Ntvo8r3vfdu+/TTT9XecaB76B66h+6hewVDuv/SZ0yi0L04
ge7F0X1tbS138bZt2xyBbzabk5KSuO6bm5v3fD5btmzhR9TT18eOHbt85bby
NBIVFWU0Gu0WVVhYSA8lJibyby9dusQPG1i1apXjZfmdTWZmJqd9RUWF9Ezo
3uVA974TL9Z9Tw/btIl94Qv0jxxZ/eMf2Q9+oLDuUTWr02DHge6he+geuofu
FQzp/t8GmESfhu6FCXQvju4p5HoO/LS0tMbGRn5h4bGxsTNnziQkJPCH+Hn3
dnE8776vr4/Pj4+PJwbytwvoz8rKyuDgYBrPzc29fOVYff6mwSuvvDI6Ojrz
+Ti7OVkPKigtLV1wMnTvcqB734kX6767m6Wmzp7hnpsrq7SQW25R8rx7VOXq
NNhxoHvoHrqH7qF7BUO6/+Igkyh0L06ge6F0PzExkZqaaj3GXq/XW6+DR/H3
9yfTEfYdnzjnVfXKy8sDAgJsF2W9Qd6aNWvI8pcXOo/e8cp7Emlra3Pqpn7Q
vcuB7n0nXqz7ri62eTMLCJC7HMWvmY+qXJ0GO47P6n59KJNTmbpPipLVt56T
VZnMzPib633xTVl9KVFW/5opq68YZHWrn6w2f8f1PrVHVtuuk9X2b8iqJ+r+
miEmUehenED3Qumep6Kigt+WzpqoqKht27ZJnBHf3t5O02JiYuzGiee0qOXL
l1sXRXNycnKmp6f5hNzcXAndNzc3L35bGhgYoIUXFBQscj7NXOpwFUHvDnSP
OBvofsFC955WnQY7DnQP3UP30D10r2BI9/86zCQK3YsT6F5A3fMYjUbifFtb
25wf1jsVi8XS3d3d2trKP69XL3aX6EfsAt0jzga6X7DQvadVp8GOA91D99A9
dA/dKxjS/f8aYRJ9Ohq6FyXQvbC6R7wv0D3ibKD7BQvde1p1Guw40D10D91D
99C9giHd/z9jTKLydf/pp58ePXr07bffptfq6OhYcP7w8HBRURH9e/jgwYPV
1dUWi8VuwsWLFwsKCrKzs/Pz8+lrmavnQYHuoXtEs0D3iLOB7hcsdO9p1Wmw
40D30D10D91D9wqGxP0v40yiMnX//vvv+/v7W08N9vPzO378uMT8s2fPBgUF
2Z5N/Nprr9neJmzfvn20ENsF7t+/X84aelCge+ge0SzQPeJsoPsFC917WnUa
7DjQPXQP3UP30L2CId3/3xNMon+WofumpibSd0BAwIkTJzo7O48dO8al39bW
Nuf87u7uZcuW0QQifG9v77lz515++WX69u233+YTPvroI/o2MDCwrKyMJpw6
dYq+ppGamhqXV9KDAt1D94hmge4RZwPdL1jS/a9+xSoq2PQ06gGdmdE5Hj+p
eKB76B66h+6hewVDuv9nI5OoHN1v3ryZfiC21+XOz8+nkbfeemvO+RkZGfQo
/UvYOsLvHRYaGsr//5KZmUnfvvfee9YJ/EZd6enpLq+kBwW6h+4RzQLdI84G
ul+M7n/2M3bkCOvoQD2g3d1LbA+eVCnQPXQP3UP30L2CId3/X5NMoi7rnjwe
HBxMP5DBwUHr4PDwsJ+fX2Bg4MzMjN18s9kcFBREj46MjNiO19bWWm/kzW8v
XlJSYn309OnTNJKSkuLaSnpWoHvoHtEs0D3ibKD7BXvuHPvpT1l6+uzH96j4
/fjjO4aGhtTecaB76B66h+6hewVDuv+nKSZRl3Xf09NDP40VK1bYjYeHh9N4
d3e33XhXVxeNv/rqqxaL5ZNPPjl69GhRUZHdLbz5R/80Z3x8nL6dnJxMSkqi
kYMHD7q2kp4V6B66RzQLdI84G+h+wX72GfvFL9iNN7Jbb0U9oH/+840VFRVq
7zjQPXQP3UP30L2CId3/n9NMon+OcVH3LS0tXOJ24zRC447/1q2rq+Ofwq9f
v972qnrp6enWG3ObTKY33niDBsPCwl5//XX+RgF9wbHv9XFN9/Qst9PeWd3T
Orud9tC9jwe6R5wNdL9gh4bYww+zX/6S3XEH6gF99tkbKysr1d5xoHvoHrqH
7qF7BUO6/z9mmERd1v0nn3xCP43Vq1fbja9Zs4bGz507Zzf+4YcfWi+Dn5WV
Rd/m5ubyi+YdOHCAz5mcnKR/Jy/9fLKzs6389+5A99A9olmge8TZQPcL1mJh
IyNseBj1jI6O3jU9Pa32jgPdQ/fQPXQP3SsY0v3/bmYSnU/3jY2N5+dJZ2fn
5au6T0pKsnsiP5aeptmNV1VVca3n5eVZB+vr62lEr9fz67ps2bKFvn3llVfo
1cfHx+nPhIQEGqFxJX8oosa1rcvjtsnL4q2zaOuDaBDoHnE20D3qddVpsONA
99A9dA/dQ/cKhnT/v1mYRP80l+7NZvPS+bN582aa09raSl8bDAa755LNaby9
vd1u/OzZs/yD+8nJSdvxuLg4Gm9paenr66NHSfq9vb3WR/v7+5cvX04Turq6
lPmJCByJnzmidtz9y0e0DnSPOBvoHvW66jTYcZb6qu5lSk2m7iPXyKrMtybe
WC6rQRtd7yOHZDUsRVaf3i2roetlde+Tstrxddf7/A5Z7blWVj/+iax6ogJ2
LpQ5n5WVlfXWPPnggw9owsjICP00goOD7W6WGhQURON2F8ankPdp3N/f3+5y
+vxI/tra2oaGhqVzvV2QnJxM49XV1TJ/DgiCINZA94izId1v28YeeIDV17Pm
Zq9qZSVbuZLp9W7HJqpxdRrsONA9dA/dQ/fQvackOjp66ec/pueEj4mJcZw8
PT3Nz7K/ePGidZCkzy+dd+nSpY6OjjnfLli5ciWNf/LJJ+r9RRAE8bVA94iz
GRu7uGUL+8IXWGQke/llr2poKPvDH+hfOG7HJqpxdRrsONA9dA/dQ/fQvadk
37599APZtGkT/zie/uRXvLdeJW98fLypqam1tZV/u2PHjqVXTtW3XiXv2LFj
NBIbG0uip6eHhobSt++99571Jfi1+AIDA/mJ+QiCIIoEukeczdTUxYoK9tBD
LC5O7j+8ReuKFeyRR6B7H6xOgx0HuofuoXvoHrr3lIyMjKxYsWLplSvnk+hf
e+01+joyMtJ6WH5tbS2NhISE8G/7+/v5/FdfffXdd9/dunXr0itn4p89e5ZP
OH36ND8Jev369YcPH96+fTs9St8WFxe752+IIIiXBrpHnM9Fk4lt2cLWrmVr
1nhV4+LYE09A9z5YnQa7DXQP3UP30D1070H57LPPkpKSuME58/kV9Xm47kND
Q60j3d3d69ats86PioqyO6GepB8TE2O91llkZCSRX7u/D4IgvhHoHnE+QzMz
hg8/NJSVeVuPHPlrRATOu/fB6jTYbaB76B66h+6he4/L2NjYxYsXBwYGFjl/
aGiotbX1008/tbvCnjXDw8O0QJqm3DoiCIL8/4HuEcSarq5iXDPfJ6vTYOuC
7qF76B66h+4RBEEQVQPdI4g10L2vVqfB1gXdQ/fQPXQP3SMIgiCqBrpHEGts
dT8ywoaGUJ/oyMhd09PTam9d0D10D91D99A9giAIomqgewSxxlb3ej277z52
773s/vtRL6+f389qamrU3rqge+geuofuoXsEQRBE1UD3CGKNre5vvpldey37
ylfY176GennvuefHGtyTCLqH7qF76B66RxCJDA4O5ufnb9iw4ZVXXomNjU1N
TT106FBbW5u710sqRqPx+PHj6enptM4Gg4G+KCgoGB0ddfd6Ib4b6B5BrLHV
/Xe/yzIy2NGj7Ngx1Mt76tQv+/r61N66oHvoHrqH7qF7BJkvxcXFAQEBSx2i
1+uJ/Gaz2d0rOEc6Ojri4uIc1zkmJoYecvfaIT4a6B5BrLHV/Te+wc6enT0p
e3QU9fKOj+O8e+geuofuoXvoHnFbioqKuItjY2NLSkqam5u7urqqq6uTk5P5
OA26ex3nyLp162jdIiMjS0tL26+krKwsOjqaBsPCwua7KyKCqBroHkGssdX9
ddexujo2McEsFtTrq9Ng64Lu3aL7v+yUVZkrL/PNgfgE1/vr92U1Yq2sLn9D
VjcFyurGIFmtvNX1yvyxD/+rrDb8QFahe8Rd6evrW7ZsGW2BaWlpk5OTtg+Z
zeaMjAx6KC4uTrSP78fGxvz9/WndqqurbccbGhr4OxLnz59317ohvhzoHkGs
cdS90ej2m7WhGlSnwdYF3UP30D10D90jiGMOHz7MP+ye83T1gYEBvV4fGRnZ
1dWl/bpJpLOzkyve8coAqampiYmJ5eXlblkxxMcD3SOINdC9r1anwdYF3UP3
0D10D90jiGPi4+Np89u5c+d8E4aGhrRcn0XGYrFERETQmhsMhpqaGrujDhDE
XYHuEcQa6N5Xq9Ng64LuoXvoHrqH7hHELmRkvV5Pm19RUZG718XpVFVV8ZXn
V/9LSUnJy8traWmhv5S7Vw3x3UD3CGINdO+r1WmwdUH30D10D91D9whil5GR
Ea7jhoYG2/Hs7OyMq9lxJXYTBEljY+Pq1avtrplvMBhEO48A8Z1A9whiDXTv
q9VpsHVB99A9dA/dQ/cIYheTycRFfPLkSdvx0NBQOzIfPXrUXSu5YIaHh8vL
yzMzM/mx+pSgoKCmpiZ3rxfii4HuEcQa6N5Xq9Ng64LuoXvoHrqH7hHEMSEh
IbT5ZWVl2Q6ePn267Gr4ifkC6t5kMk1NTdmOWCwWWvOwsDBa4YyMDHetGOLL
ge4RxJru7lndP/YYq69nX/sadO871WmwdUH30D10D91D9wjimK1bt9LmR4Sf
7wbxGzduFFD327dvp7Xat2+f40PFxcX0UHh4uPZrhSDQPYJY09dXvH07+6d/
Yo8/zv71X6F736lOg60LuofuoXvoHrpHEMfU1tbyo9m3bdvmCHyz2ZyUlCSg
7ouKimitoqKijEaj3UOFhYX0UGJioltWDPHxQPcIYs34eHFlJXvmmVkUfOlL
Hq97i4W1t7PUVLZ9O0tPR+ftgQO3dXR0qL11QffQPXQP3UP3CDJnyPUc+Glp
aY2NjSaTiQbHxsbOnDmTkJAg5nn3fX19fMXi4+NJQPx9CfqzsrIyODiYxnNz
c929jogvBrpHEJsUT0yw995j+/axa6/1eN3PzLBTp9h//ze7+WZ2++3ovH36
6Rvp/8Vqb1vQPXQP3UP30D2CzJmJiYnU1FTrBfT0er318nQUf39/UgZh392r
aZ/y8vKAgADbdbbeIG/NmjWjo6PuXkHEFwPdI4hNLk5PG/7xD0NDg+FrX/tn
T9e9ycQ2b2ZPPsleekkukby7aWk3a3BhW+geuofuoXvoHkEkUlFRsXbtWtvr
5EdFRW3btq2zs9PdqzZv6N8PtM7Lly+3rnNMTExOTs709LS7Vw3x0UD3CDJn
rrvuGk/X/cQE8/NjiYmsqGj2Q3x0vp45c8fg4KDaWxR0D91D99A9dI8gC8Zo
NBLn29raBPywfr5YLJbu7u7W1lZ8Xo+4PdA9gswZr9H966+zzk42PIzO29HR
uzR4jx26d4vu416V1YOPyurup2U1LcD13lUiq6nLZDVoo6w+vVtWw1JkNf9+
1ytT9x//RFZ7vyyr0D2CIIgXBLpHkDnjHbr392ebNrGREfevjNjVabBFQffQ
PXQP3UP3CIIgiKqB7hFkzkD3vlSdBlsUdA/dQ/fQPXSPIAiCqBroHkHmDHTv
S9VpsEVB99A9dA/dQ/cIgiCIqoHuEWTOQPe+VJ0GWxR0D91D99A9dI8gCIKo
GugeQebMN75xTVUV++wzNjrqqe3tZS+8AN1D99A9dA/dQ/fQPYIgiE8EukeQ
OfPFL16TksJ27WLZ2Z7anTvZb3/LNm6E7qF76B66h+6he+geQRDE+wPdI8ic
+c53rjEY2BtvzH727aFNSWE6HduwAbqH7qF76P7/Y+8+4KOo9v//D4j0FnpE
QIrUUKRLCypNQAxNgUsTVBC8qHwFLwJXioggKgiIoF65FKWICCoCIjX0XiIB
pIZOaAIJCST5f9zzY/5ztzHbs8vr+TgPHmT27MyZmd2z5707hXRPuifdA0Do
I90Ddn3+eZ433tD69w/i0rev9sQTpHvSPemedE+6J92T7gHggUC6B+xavbrV
xImR48cHcRkzpkHDhp6m+9RU7dw57dgx7dChkC3Hjze4efOmr19RpHvSPeme
dE+6BwD4FOkesCs5+Vpi4rWEhCAuly+ffPllT6+ql5z898UHRozQBgwI2TJ2
bM2DBw/6+hVFuifdk+5J96R7AIBPke6BUCUB3/M74l27po0bp/Xrpw0cGLJl
/PiasbGxvt4dpHvSPemedE+6BwD4FOkeCFVeSff79mlt22rPPKN9/nnIlnnz
6pw6dcrXu4N0T7on3ZPuSfcAAJ8i3QOhyivpfvdurX17rUMHbceOkC0HDtS/
fv26r3dHYNN9s69vBKoMGq95UjxM97818ajsesKjsq2WR+WXlu6XWd08Ksub
e1SWtPGofNPTozL9VY+KJ19reBjPx7zrUZnbxaNCugeAEEC6B0KVt9J9ly5a
nz7uzyEYSqQfdgfpnnRPuifdk+4BAD5FugdClUr3n32mXb/+96Xv3Su7dpHu
vYN0T7on3ZPuSfcAAJ8i3QOhSk/3V69qd++6WXbu1Dp3Jt17AemedE+6J92T
7gEAPkW6B0LV7dvX3n9fa9NGGzLE/XAkub5+fe2llwIewEn3pHvSPemedE+6
BwA4Q7oHQlVy8rW5c/OEh+fJmzdPWJibJXfuDCVLat26BTyAk+5J96R70j3p
nnQPAHCGdA+EqtTUu+fPr12/fq0nvv66SMuW2ssvBzyAk+5J96R70j3pnnQP
AHCGdA/Aid27S3BVPa8g3ZPuSfeke9I9AMCnSPcAnCDdewvpnnRPuifdk+4B
AD5FugfghKT7Tp3+PjI/KSlkS3JyZEpKiq+3JOmedE+6J92T7gEAPkW6B+CE
pPs6dbSICO2bb0K2/Phj3dOnT/t6S5LuSfeke9I96R4A4FOkewBOxMSUaNxY
q1ZN+/jjkC3//W+dEydO+HpLku5J96R70j3pHgDgU6R7AE4kJpaYNk0bPFh7
662QLePG1Tx48KCvtyTpnnRPuifdk+4BAD5FugfgxN279ZcsKTFpUol//ztk
y5Qpz/mh7yLdk+5J96R70j0AwKdI9wCcup6UdC0x8VpCQsiW27dv+Oeqek81
jg5U+femO4Eqb0zUPCkepvtpfT0qc/7hUek7zaMyu6v7pf8Uj8qI9zwqPb/x
qHz4jkdlaj+Pyq3s7pc3P/WoLHvWo3IlzKNCugeAEEC6BwA/IN2T7kn3pHvS
PQDAp0j3AOAHpHvSPemedE+6BwD4FOkeAPyAdE+6J92T7kn3AACfIt0DgB+Q
7kn3pHvSPekeAOBTpHsA8APSPemedE+6J90DAHyKdA8AfkC6J92T7kn3pHsA
gE+R7gHAD0j3pHvSPemedA8A8CnSPQD4AemedE+6J92T7gEAPkW6R8ClpKRc
unRpNxAgsbGx169f9/XrnHRPuifdk+5J9wAAnyLdI+Du3Llz8ODBZct+/vVX
CiUAJTp63aVLl3z9Oifdk+5J96R70j0AwKdI9wi48+fPNW1a97nnqnbvXrVH
DwrF32Xo0Bf379/v69c56Z50T7on3ZPuAQA+RbpHwJ06dSJfPq1mTa1lS61V
KwrF36Vfvyd27tzp69c56Z50T7on3ZPuAQA+RbpHwMXFnShTRlu6VNu1S9u9
m0Lxd4mNbcB5974rHsbzwJYDlTwqAW9/oMqXL3tUAtv4+Pzul/eHelQ8bPmd
TB4V0j0AhADSPQJO0n2lStqJE1pqqrwIKRT/l0g/vM5J98FYSPfuFdI96R4A
EBCkewQc6Z4S6BLph9c56T4YC+nevUK6J90DAAKCdO8Ht27dunbt2kU4sGfP
zooVSfeUAJZIP/QDpPtgLKR79wrpnnQPAAgI0r0frFy5csqUKX369OkHe3r0
6FaiBOmeEsAS6Yd+gHQfjIV0714h3ZPuAQABQbr3g7lzZw8bNqhr1xY9e7ai
2JYXXni6eHHSPSWAJdIP/QDpPhgL6d69Qron3QMAAoJ07wdt2zZ78sms//nP
w3PmUOyUzz57uEwZ0j0lgCXSD/0A6T4YC+nevUK6J90DAAKCdO8Hzz0XWa+e
9vPP2urVFDtlwQKtbFnSPSWAJdIP/QDpPhgL6d69Qron3QMAAoJ07wft2kW2
aqWdPq0lJ1PslGPHNK6ZTwloifRDP0C6D8ZCunevkO5J9wCAgCDd+4Gk+9at
tfPnAx5h0mmJi9PKl/8749++HfivGigPYLlzJzI1NdXX/QDpPhgL6d69Qron
3QMAAoJ07weke+fl1CmtdGntyBHt4kXt0iUKxd/l6tVGSUlJvu4HSPfBWEj3
7hXSPekeABAQpHs/IN07L2fPajVraoMHB35ESnkwy9Sptf78809f9wOk+2As
pHv3CumedA8ACAjSvR+Q7p2XCxe0pk21vHm1/PkplACUBg0qr1692tf9AOk+
GAvp3r1CuifdAwACwlvpvlGjRtOmTdu4ceMR2GjevHbLlqR7h+XmTW3WLO3D
D7Vx4yiUAJSvv6597Ngxb3WqjgQ23W+MTwtUGT9I86R4mHdemO9Ree1zj8r/
TfCovPmp++XFeR6VrrM9KlqaR2XsvzwqXeZ6VGa84n4pddSjMuQDj8riKI8K
6R4AQoC30n3NmjXHjh37ww8//AobDRpUbtGCdE+hpNsS6aUO1RnSPemedE+6
J90DAHzKW+l+3LhxL7/8cvfu3XvDRpkyRZo2Jd1TKOm2RHqpQ3WGdE+6J92T
7kn3AACf8la6X7hwocTYqKiodrDx2GMFSPcUSjoukV7qUJ0h3ZPuSfeke9I9
AMCnvJXuL1y48Mcff+yFPU2b1uS8ewolHZdIL3WozpDuSfeke9I96R4A4FPe
SvdwgmvmUyjpu0T6oR8g3ZPuSfeke9I9AMCnSPd+QLqnUNJ3ifRDP0C6J92T
7kn3pHsAgE+R7v2AdE+hpO8S6Yd+gHRPuifdk+5J9wAAnyLd+wHpnkJJ3yXS
D/0A6Z50T7on3ZPuAQA+Rbr3A9I9hZK+S6Qf+gHSPemedE+6J90DAHyKdO8H
pHsKJX2XSD/0A6R70j3pnnRPugcA+BTp3g8k3UdGaj/9pG3aRKFQ0l3Zs6f+
1atXfd0PkO5J96R70j3pHgDgU6R7P+jQIbJYMa1kSa1sWQqFku5Kq1ZV1q9f
7+t+4FUASN983Q0CAHyNdO8Hw4dHRkVpLVpIiKBQKOmu9Ov3xK5duwLdTwAA
AAAeId37weXLkadPa4cOUSiU9FhOnGh469atQPcTAAAAgEdI936QlPTGrVuR
8fEUCiU9lqtXByQlJQW6nwAAAAA8QroHAAAAACDYke4BAAAAAAh2pHsAAAAA
AIId6R4AAAAAgGBHugcAAAAAINiR7gEAAAAACHakewAAAAAAgh3pHgAAAACA
YEe6BwAAAAAg2JHuAQAAAAAIdqR7AAAAAACCHekeAAAAAIBgR7oHAAAAACDY
ke4BAAAAAAh2pHsAAAAAAIId6R4AAAAAgGBHugcAAAAAINiR7gEAAAAACHak
ewAAAAAAgh3pHgAAAACAYEe6BwAAAAAg2JHuAQAAAAAIdqR7AAAAAACCHeke
AAAAAIBgR7oHAAAAACDYke4BAAAAAAh2pHsAAAAAAIId6R4AAAAAgGBHugcA
AAAAINiR7gEAAAAACHakewAIiNTU1FWrVr3++uutWrVq1KiR/GfmzJnx8fH+
Wfq5c+cmT5786quvNmzYsFOnTuPHj1+/fr1/Fg0AAABfIN0DgP8dPHiwcuXK
mo1ixYpt377d10tfsmRJgQIFbJc+aNCg1NRUXy8dAAAAvkC6BwA/i46Ozp07
t/S6ZcqUmTZtWmxs7B9//DF27NhKlSrJxKxZs544ccJ3S09KSlJLb9KkyVdf
fXXs2LE9e/b8+9//luXKxFGjRvlu0QAAAPAd0j0A+NO1a9eKFSsmXW6rVq1u
3rxpfOjcuXM5c+aUh0aMGOG7BqxcuVIWUbBgwYSEBOP0KVOmyPSKFSv6btEA
AADwHdI9APjT66+/rn61T0xMtH101KhR8mjt2rV914A5c+bIIipXrmw1/eLF
i6VKlZJFJyUl+W7pAAAA8BHSPQD4TUJCQp48eaS//fHHH+1WuHv3rt3U70Vn
z55VfX6XLl0uX77s02UBAADAb0j3AOA38+fPl842LCwsOTk5gM2YPHlyhgwZ
pCU5c+Z88803fXqaPwAAAPyDdA8AfjNy5EjpbKOiovQpV65cGWFj9+7dvm7J
ggULSpYsqTr/TJky9ejR49SpU75eKAAAAHyHdA8AftO7d2/pbPv3769P+eWX
X2zvTPf777/7oTF379799ttvq1Spohb6yCOP/Pnnn35YLgAAAHyBdA8AftOt
WzfpbAcMGKBPOXr06Jx71CX1MmTIcP36dd+1ISUlxfhnamrqwoULCxYsqO6R
57vlAgAAwKdI9wDgNyNGjFD3wrP7qLqaffny5X209KNHj+bLly88PNz2oVmz
Zsmis2XLFtgLAgAAAMBtpHsA8JvFixerEG33QnZvvPGGPNq9e3cfLT0xMfGh
hx6SRdgegb927VqZXrhwYatf9gEAABAsSPcA4DeSnSMiIqS/rV+/vvEqdteu
XZswYUKBAgXkocmTJ/uuAWrpderUOX/+vD7x9OnTVatWlemvvfaa7xYNAAAA
nyLdA4A/bd68uXDhwtLl5siR45lnnunSpUuDBg3k/6ofLlWqVGxsrE+Xnjlz
ZrX0unXrdu3atXnz5lmyZJEplStXPn78uO8WDQAAAJ8i3QOAn124cKF9+/Zh
YWF69yv/f/rppxcuXHj37l1fL33Dhg0tW7ZU97tXSpQo0a9fv4SEBF8vGgAA
AL5DugeAQDl9+vT27duNB8n7TWJi4uHDh2XpV69e9f/SAQAA4HWkewAAAAAA
gh3pHgAAAACAYEe6BwAAAAAg2JHuAQAAAAAIdqR7AAAAAACCHekeAAAAAIBg
R7oHAAAAACDYke4BAAAAAAh2pHsAAAAAAIId6R4AAAAAgGBHugcAAAAAINiR
7gEAAAAACHakewAAAAAAgh3pHgAAAACAYEe6BwAAAAAg2JHuAQAAAAAIdqR7
AAAAAACCHekeAAAAAIBgR7oHAAAAACDYke4BAAAAAAh2pHsAAAAAAIId6R4A
AAAAgGBHugcAAAAAINiR7gEAAAAACHakewCAE8eOHVuwYMFff/0V6IakR7Jx
Zs2atWTJEveey4YNrOTk5J9//nnHjh2BbggAAN5BugeAkJdswt27d22fePTo
0YwZM8oHRLVq1fzf7PRv2rRpsnEqVKjg6hPZsOlBjx491Pjnxx9/DHRbAADw
AtI9AIS2Y8eOaSa88847ts9dunSpejRTpkw3b970f+Pdk5KSsmLFCvnX1wty
O92b3LDx8fHbt28/deqUZ82EfdWrV1d7YciQIU6q7du3T/aCF19OBw4cOHny
pLfmBgCAjnQPAKHtxIkTef+X3u0bJ44fP972uUlJSe3bty9duvS4ceP833K3
zZkz5/HHH7d7NIJ3uZ3uTW7YqVOnyvwHDhzoQRvh0OLFiyMiIiIjI48dO+ak
WsGCBWUvePEcik8++aRevXremhsAADrSPQA8aHLlyiV9/nfffRfohvhEcnJy
qVKlvvnmGz8sy+10b9KIESNI94GVkpKizqHwYrq/efNm/vz53btcAwAATpDu
AeBB4/V0L2ll//79xj937dp1+/ZtR/WvX7++ffv28+fPe6sBRlOmTClatOid
O3ccVbh79+7x48e3bt166tSp1NRUM/OUaqdPn5anHDx40HhIgFW6T0xM3Llz
56VLlzxcBV3//v3dSPeOWqtzYwuIW7duyV6WHefFFfQFeeHt2LHDW68uWVk1
RjKT7mVjynJlEx09etT5hh05cmSlSpX8cPIIAOCBQroHgAeN83RfpEiR3DY6
d+5sVe3AgQN58uTp0aPHu+++mzVrVplh6dKl4+Pjhw4dmj17dvkzPDw8JibG
6lkLFy4sV65chgwZ1OdOwYIFx44d68VD6G/evFm4cOHRo0fbfXTbtm3du3fP
ly+f/sGXM2fOMWPG2H4VILFa1nrZsmXy/9mzZ5ctW1Z/SrFixfRqKt1XqVJF
1vTpp5/OnDmzqlOyZMmff/7Zap4mN6yIiIgoUaJEoUKF1AzlX6tnrV271o3W
urQFJPjnzZu3UaNG8v9z58517dr14YcfVk/JmDHjl19+qarVr19fFm13gycm
JsrS5dE1a9bY3R1OrFixQp6YP39+24fCwsLkoXXr1ulTKlasKFNu3boVHR3d
tGnTbNmyqXbKdtiyZYvxuZMmTbLdBWLv3r1WS5k+fXqZMmWKFi2qn8ki7xrj
U5o3b26sn5CQ8Pbbbxs3bI4cORo3bmz7MlAuX74sW37mzJmubhkAAJwg3QPA
g8aldK8+IJ5//nmrajt27JDpKtdLzFfVJOeq0/nVnx06dDA+5R//+IeaLrmp
bdu2devWVcc8t2jRwlur9umnn0oIvXDhgu1D6ih3PX03bNiwQIEC6s/XX3/d
qnK3bt1kuiRlmaGqkyFDhuLFi0tyNJ4xrdK9vh3Cw8NlC2TKlEnVnzVrlnGe
JjeskJBorHPfdG+ytS5tgaNHj2qWb2wk2pcvX15Vkx0tayH/Wblypao2ZcoU
+bNQoUKS5a3mMGfOHHmoRIkSbvxC/csvv8hzZVfaPvTQQw/JQ7///rs+pXDh
wjLlvffekw0lr6hKlSo99thjqsFhYWHXr1/Xa1qle/VGELt377ZaytSpU1Ud
/Rsb5+m+ffv2qppscNkdzZo1UxtKfPjhh3bX8a233pI3gqtbBgAAJ0j3APCg
cenIfMkgTtK9kFyTnJz8n//8R/0p9SXNvfvuu/L/Rx99VK//xRdfyBSJZjNm
zNAPWo6OjlZfBUgy9cqq1a9fX4KV3YfWrFkjyxo5cqR+YPnt27d79+6tWS5c
b3VdNZWXq1atKv+WK1dO2nz27Nk0y9Xwjh8/rlfT072sqf4L9YkTJypWrKhZ
fjeX+o6a6mjDGj333HOaiSPzTbbWpS2g0n3WrFnVsRb9+vVbt26dOspC5qmf
dpGQkKAuOvfVV19Ztapx48Yy/f3333feeLvcSPfiySefPHTokJooL281ccqU
KY6WIsHfUbrX7dy5U9VxcmT+mTNnVJ05c+boE+Vd8O2337Zp08bRPRG2bt0q
T7E9bAAAALeR7gHgQePFdJ8xY0b1Q3lcXJz8+cgjj6jcJ+FL/eisKicmJubI
kUOmjBkzxmo+EyZMkOmSBD1dq7Q0aYm0RxK3owq2WfvWrVvqJ/J58+YZp6u8
LGrVqnXlyhVHM1TpvkiRIvHx8cbpGzZsUE93cuU0r6f7+7Y2zZUtoNK94vy7
l1GjRkmdiIgI48TDhw+reH7u3DnnjbfLjXTfunVrq7WTsK/ZOyxB5610v3//
flVn0aJF91kxg9TUVHm/yNYz/xQAAJwj3QPAg8aL6V7P7xIS5c/KlSurPyUu
qV+E1Z/btm1Tf9pmT1VTApr763PPmjVrZFYSS+9b89ChQ4sXLx47dmyfPn1U
tv3ggw+MFVRelg3l/F5pTq6ZX7RoUXno448/dvRcr6f7+7bW6L5bQE/3TtKx
ok4h1wyH64vBgwdrNqdmmOdGup8/f75VTXVYQrt27RwtxVvpXtStW1ezHJoi
q7xw4cKEhAQnlXVSuWPHjmZqAgBgBukeAB40/k/3M2bMUB80mW3on0GeX1tv
7ty5Eq+cXC3/+PHjr732Wnh4uGZjxIgRxpoqL7/00kvOl+gk3au4N2DAAEfP
9Xq6v29r01zZAnq6P3ny5H1nq9bl2WefVX8mJycXKlRIpqxateq+z7XLK+le
tapNmzaOluLFdC+z6t69u7qOhGa5pF5UVNS8efOcv6rl5VG/fn0nFQAAcAnp
HgAeNP5P9+qke/GqA/369fN8vSZOnOjkGIA1a9bkz59fsxwn0KdPn8WLFx84
cECarU4Pt5vue/fu7XyJTtJ9RESEPDRs2DBHz/V6ur9va13aAnq6j4uLcz7b
NMt5GZLEM2TIcPDgQflz0aJFmuWS9eZvt2fFi+neyRb2YrpXZKN99NFHDRs2
VI3ULJcl3LBhg6P6o0ePrlSp0n1nCwCASaR7AHjQ+D/dR0dHqw+a06dPe2kl
7Jg5c2a2bNkcPVqyZElpQMeOHaWpxum+SPdJSUnqtoBz58519Fwz6b5du3ZS
575ffZhsrUtbwKV0L3r27Kk3tU2bNprTsxLu69dff1VL1y/fp/Nzut+3b5+q
c/HiRfPtv3LlyuTJk1XD8uTJY7XBdYMGDapTp4752QIA4BzpHgAeNP5P9zdu
3FB3S7/vSdyeWLFihSzCeAc0nbron7A6M/3u3bvVq1f3err//PPP1eJiYmIc
PddMupfNpZm4Y6CZ1rq6BVxN97KmGTJkyJkz55EjR2RfZ82a9fLly2aeaNfe
vXvV0q0uKf/VV1+p6X5L9/Hx8arOli1bnDTY7oXx5SnquZs2bbL7rB49ekRF
RTmZLQAALiHdA8CDxv/pXowdO1Z91owaNcr4g2xsbKwswuRVyJw7fvy4zF+/
M53RpUuX1NJnzpypT9yzZ0+NGjXUdE/SvaTaV155Rb9g4MqVK9Vt/pxfMM1M
up8+fbpmuTFBdHS0PjE5Odnqt2AzrXV1C7ia7tPu/WRfrlw5+VeaZPJZdknu
lhePZrkmnroSvqzy6NGj9RGL39K9eOSRRzTL+fvG1+3Vq1f1/3/xxRd58uSR
V7jVy3jYsGFq/ufPn7c7Z9n4gwcPdrJoAABcQroHgAdNQNJ9SkpKq1at1MdN
eHh469atO3XqVL16dXUhskmTJnljzdIqVKgwaNAguw89/fTTKok3bty4c+fO
6jbuWbJkKVu2rIfpXh0rniNHjgYNGsgWkNlqlnPbnV+Pzky6l7Sooqss4qmn
nurSpUvTpk1l91ndRs1ka13aAm6k+02bNukjio0bN5p8liO9evVSsypSpEid
OnWknZrlMAZ1pIE/0/3HH3+sqpUoUaK9RURERPbs2fWw37NnT7XTc+bMWatW
re7du7/22mv169dXz3r55ZftzvbcuXPyrLVr15rdIgAA3A/pHgAeNHny5JE+
//vvvzdTWd3aTBKN1XSV363SvSQv46PGdK/Mnj1bnf2tK1WqlER7r/x2n2Y5
kdnRxdwuXrwYFRWlL1cyctu2bQ8fPvzpp5/aZtsePXrIxL59+zpfnLoXwJAh
Q6ZPn16wYEE154wZM7Zq1crRz7U6RxvWysGDB/Wf15V8+fKNHj3ajda6tAXU
gRBOfne2S91iXv+SxxOXL1+W5umtfeSRR2SL3blzp0OHDtr/HqGhflt3lO6d
bGE93e/fv99JS1JSUsaOHau+XlAklctOOXHihF5nz549L7zwgmqJLjw8fMyY
MY4umy+vmbCwMCe3eAAAwFWkewCAn125cmXnzp1bt261e468JyRwZc6c+eef
f3ZU4dy5c+vWrZMsJpHNu4tOTU39448/duzYcePGDe/OWZw5c2bjxo3r168/
evSohy333RaQGFuxYkUZTkydOtVb87x48aKstZPLF/hNUlKSvGilMbt379bP
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
z3uPHoX0KfKx7sVlke7hU3q6P3DggPx58+bN7du3v/DCC2riU089FcC2ke4B
BKP0k+5TUlLUMZNm0n337t31iZs2bdI/8Un3QGhbuXKlerNXqFBhz549amJC
QsLw4cOzZ88eHR0d2OZ56O7du4ULF86QIUPFihVlHX/44YdAtyhdGzFihEvp
PiTlypVLNsJ3333no/mT7uFTVule98knn6jpP/74o90nXr9+ffv27efPnze5
oOPHj+/fv9/qyE8rycnJu3fvliapP8PCwsyk+1u3bsmcpTGXLl1ysnSZ832/
sJUGyHaIiYlx6RSb+zZAPlmkAVu3bj116lRqaqqTWd28eVNmZfxz165dt2/f
Nt8YAAHndro3369evXp137590q05PxJSOiVHLdGpdJ8vXz7jwfkytFPHdDlK
9+a7NUWqSYPtXosAQAClpKRUqVJF3umVK1eWLsjq0fsewylv/9OnT0tXcPDg
QekW7NaRbmrnzp1SzTstNpABksz54sWLTuqsXr1a1q569eoTJkyQ/3Tq1MlJ
5YSEhNjY2B07dtz3GnGy4tJXS4999OhRM32gyYGoItX27t175MgRM3M2w3yP
rY5z8EW6d/VlIDtXdoTzD0Tz+8slLqV7M+1MswQueQGofDFp0iTn6d7VkOU2
0n1IcpTu5b0v/bxMr1q1qtVTFi5cWK5cOf0Y/oIFC44dO9aqS581a1bu3LmH
DRsmY8XBgweXLl1aVc6UKdNbb71lm/EvXLjQrl07/Wyvxx57bMGCBUWKFLFN
99Iv5c2bt1GjRvJ/GXN27dr14YcfVs/KmDHjl19+aawsb3bpptQAVS29bt26
8n6x3Q7x8fF9+vTRZyU1cxt069bNvQZs27ate/fuMmzW3zs5c+YcM2aMcYgr
W15a2KNHj3fffVdtAdlc0p6hQ4dmz55d/gwPD4+JibG//wCkP26kezP9qrhx
48Znn31Wo0YNvab8R7o147eCYvr06WXKlClatKh+hKGMVYx9WvPmzfXKKt1H
RUVphoPzS5QoUbx4cRl72KZ7M92aePzxx2VBEg1Gjx4ts1I1pYuTobVtggAQ
KN9//716ey5evNhMfRlWyVt72bJl8v/Zs2eXLVtW7wqKFStmVfn333+vUqWK
OoJIFChQQMY2Vr9ZrFixQmaYP39+22WFhYXJQ8aDor/++muZMmTIkH379j3z
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
OKWjs/1a0u418/VwbXVMkZWPP/5Y6hQvXty2S1Rnu5QrV06f0qFDB5ny4osv
Gqups1D79etn9XSTDbAin5WLFy8eO3Zsnz59VKf6wQcfqIdUutfzu/S6muXi
NupPtW1ls5tfFoDA0gd1MrDs97/Ut+v6oM6lftXoxo0bMpr98ssvBw0a1KhR
I83Bd4AupfsjR45ollulyL/Dhg1Lc5DudU66tbR74x+rYa2QNmuWg7UctQeA
P6l0bxztyNvWOOYPCwsz1lfpXuKP3V9+dapP+Oqrr6ym3759W538qEcnN9K9
7fBSFC1aVB6S3KRPuXPnjjoQXT80VKaoKzZbdU3SBvUTc+nSpUeMGHHw4EEn
q1a3bl3N8hurjB4XLlxo9yz+NBcHouo0h4IFC7p0VWfFebrXOe+xdd5N9+Zf
BmmOPzXUwQbt2rXTp7i0v9xgJt3ft52y39V8rL4fS7N3zXw3BgMy/+bNm2uW
k5pla8g7SAKFq2tKug9JTtK9PkBVp3POmDFD/ZnZhv7C0A8WddT9Xr9+XdXU
j3jv2bOn/NmkSRPbtjlP9ydPnnSyXi+99JLUadasme1DP/zwg2b5rVzvkNV3
aFmyZNG/Cj5//rw64uXrr7+2errJBijHjx9/7bXX9FNljaQ7UnVI90CIMX/e
vUv9qjJv3ryoqCj9GqTOP5pdSvfy/zp16qj6arBkN92b6dbSHI9/li9friqb
v+wPAN/p2LGjvB9btWqlT5EB4UgLiYGag3Qvoywn89R/Htq0aZPto+rKQkOG
DFF/eivdq9D9xhtv6FP040UlBEXdkzNnTs1yLqTV02W0WbJkSb03q1ix4jvv
vGN1OTtFhrLdu3fXrxGXI0cOma30zFZ9tUsDUbVV7Va+L+fp3mSPrfNiunfp
ZZDm+FNDzb9NmzbGieb3lxvcS/dW7Txx4oRqm+09JW3TvRuDgTTLiRuqqWLs
2LFurKnx9eDG05E+OUn3n332mWY55EN966jOBxGvOmD84ve+6V5Cq5rStWtX
zcEJX87TfVxcnJP1Ul8a2O0nZYaa5eor+uErly9fLlOmjEwsVKiQvDfffPNN
dQ2W8uXL37hxw+rpJhuQZjnpIH/+/JrlCzf5iFy8eLFsZAnvjRs31kj3QOgy
n+5d6lcTExO7dOmixoSRkZEyPJAxw5kzZ/Tzm2xb4mq6V91+9erV1UO26d5k
t5bmePyzaNEizfKzF/f6BNIDdXkfu1fVUx2I3XSvH+tul55rNm/ebPuouhnH
oEGD1J/eSvfqTk9Dhw7Vp6jfUu3Kli2b7QAvOTl56dKl8iw9C8voS/phu3f6
k9HgRx991LBhQ9VIzfI78oYNG/QKLg1E1Smixu9YzHN+3r3JHlvnxXTv0ssg
7X6p2Xb+Lu0vl3iS7vV2/vnnn6pV27Zts6ppm+5dGgzoVqxYoV9dX97Ibqyp
8U3hxtORPjlK9/KWUd+JScelpsgwUtU0c6tK8+le+mHNEGaNPEn36tpN0tOa
eSgpKUld2c9I3p52vwM0n+7VBuzYsaPV6V2keyC0mU/3LvWr//3vfzXLnTX0
CzQpa9eudfTRvG/fPvWQk/tBG9P9hQsXmjZtql9RxDbdm+zW0hyPf8aOHatZ
zkO87/oC8AP9OHzbG7q5ne5TUlLUScS2lyeS5KWik/7Qr7/+qhpg+42f+XQv
o1b1o/zcuXP1KeraZR9++OEOgy1btqhjn7799ltH7U9NTZVq7dq1Uw17//33
nazslStXJk+erHo86Z/1vtGlgegHH3wgU4oWLerGDe6dpHvzPbZOrbXdLOlq
A1x6GaS5nu51Lu0vM7yS7uX1rA7wsL1Eg226d2kwoMhHs7oCv7oOucR8eSuZ
fK7OGHxcfS7SLbvpXt4m6rtcod9m9MaNG+pgdTPnm5tP92q8KuRDxFgzPj5e
3e3CvXT/22+/2f20kiCv+jrjPebUBSsGDBggA2AZ4soqO7ldpskG6FcYsDox
TTo0dY4b6R4IVebTvUv9qvodyvaewuogT7sfzdKRqofs3oRXMaZ7K1bp3ny3
luZg/CM9cIkSJTR716wGEBDy/pXRmrwra9asafVzttvpXtSvX1+zXHnParq6
8oZx2Ll37141Rf5jrPnVV1+p6WbSvf7TZ0xMjJqivjSweyJzq1at5KGoqCh9
iqNrkanr21v9/m63sn5ZPP0odJcGovpJBMYrruucXzvOUfh1qcfWyYeRZnML
NuecpG/zL4M0V9K9S/vLDV5J92n3vl2xOqdADB48WPvfdO/SYCDNktTU75KN
GzeW//fv31+z3J3hvr88WtEMXHoi0jOrdC994Pr165999lk10dj1pd37zUWz
XNLT+BVrbGysvKSN1xUxn+7lHaruE1q1alX9fs3Sw6t7kmrupnt5qatvJosW
LaoPa2VZ6s4v8g7SL+uXdm+8bXVjDkdMNuDSpUuqmvHeHHv27FH3w9JI90Do
cul+9+b7VfXxHRERoQ9skpOT5Vn6eXl2G6MuziyjC+PMjee8m0/35ru1NMP9
7pctW6amSOf24osvapbD8q2G8QAC6KefflJvYRmJ6aMj6XwGDhyouZvuJZKr
Y4b79eunX1p8+fLl6qJ2nTp10mvKyFDdsL5du3aqpvQV6rpzim26lzm/+uqr
ej8mOVrN1piX1YHxzzzzjG3bVLTMmjWr6qLl38cff/ypp57avn27sdrFixfV
bPv27atP/OKLL/LkySP9ttXF9IYNG6Zae/78eTXFpYGoVJZMqllOGZg0aZJ+
oWnpt0eOHCnNMF5b3oqjcO1Sj62bPn26Zjn/y3i2uHzWWP36b6YBaa68DNJM
p2aX9pd7vJXu1a+HsgVkn6opd+7c+de//qW2v9W9Y8wPBvTKuXPnVocZJyYm
qusY1KtXTxZhfk01A/PPQjqnp/t8+fKpc3MUeSkOGDDA6rUkvY36wlOEh4e3
bt1a3pjVq1dXR57oL900V9K9+Oabb9R7P3v27A0aNFDfIWfJkkW9Sd1L92mW
E17U6fMykpRGNm3aVM1QjB8/3lhTP35ANkLDhg1bWMjade/eXWpafedpvgFP
P/202pLSvcuQvly5cvJ/Wa+yZctqpHsgdLmU7s33q2vWrFETZWjRpUuXJk2a
qBGIuvG0o49mdd1mzXJZ3fYWERER0tnqgwfz6T7NdLeWZrgjsGY5Dl+eqI6S
FTK2cX2jAvAhCQsqYquxkPQS6vhJ8eyzzxprmkz3affCjma5qJEMq2RgowZ7
jz32mH77dUXdg1iz3OquTp060qVolp+P1U/Mdu93r1kuZ9eoUSOZrd4x6pc7
liCp7hJu96dwCeDqKeqe9Zs3b1bX25fmlSxZsmXLlv3795deWnVZMh/j78s9
e/ZUa5EzZ85atWrJQPG1115Tv1CLl19+2bgg8wNRcebMmeLFi6tHZV2ksiQ1
tRdkiKia6mQ72w3X5ntsnYz8Ve8tbZYELZ810hL5rLF7q777NiDNlZeBydTs
0v4yT17zme5RDZYXiT5l9erVrrYzzfLlTPny5dXcSpcuLXtBfWqrnzWt0r35
wcCmTZtUI42vikOHDqmZu3TNBM3A/LOQzkkXZ9yz0u1IvO3Xr5/xZWxl9uzZ
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
6M+STf3ll18aZ/vXX3/JLsuTJ48+27p160oC9fUuSHN9L7jH5L4TRYoUyW2j
c+fOtjVv3rxpW9Po4MGDVk9ZuHBhuXLlMmTIoJ/eMnbsWEffd6UfpHsAAAAg
ZAwbNkxFTpOXiJeYKfUlkX366acqFEiiKV68eLZs2erVq2esOXLkSFUhR44c
Tz75pNRRf1aqVOnatWt6tV9++UWdMW27rIceekge+v333/UpKjKHh4ersCz/
kfisLhEgzZCoqKq9//77zZs3r1atmiy6uY2yZcsWKFBA/V/dEE3qq7b17dvX
2DYrbjRVqAsVOmqqkpSUVLNmTXkoZ86cvXr1eumll7Jnz66eXtbCePWDo0eP
yvTSpUtLtC9fvryqJvld0qv8Z+XKlXrNuLg4fbOXKVOmdu3aqjHS2i+++MKn
u8CNveCIROkxY8Y4etTkvkuzSffqWc8//7xtzcTERInnVole/wpFmm11jMQ/
/vEPfSO3bdu2bt266hutFi1aOGlPekC6BwAAAELGCy+8IAP7li1bmqyv0n3V
qlXl33Llys2YMUMd/yz59Pjx43q1LVu2qIDTpUuXW7duqYkLFiyQoCcTX3nl
Fb2me5H50UcfXbNmjZp44sSJihUrapaDB6QZemXzx4RLC9UcRK5cuQYMGHDk
yBHbJ/quqdIktejDhw+rKTExMRLwZba7du2yWpZK95LT1Y/F/fr1W7dunfqZ
WHaB8dAIddS6pFH94nJXrlyRyCkTs2XLpq+j79YrzRtH5q9du1ZW9q233rL7
qMl9Z0tm6Cjd20pJSWnfvr3Ul52yefNm40NffPGF+sJE3gv6V2TR0dF58+ZV
34OZmX+gkO4BAACAkFG9enUZ2Pfv31+fcujQoU8NJM0Z66t0L2rVqiVR0dFs
n3rqKakTEREhscg4feLEierpeox1I1oWKVIkPj7eWHPDhg1qtkuWLNEnupQr
r1692rVrV/0kAknNbdq02bJli7GO75qqfvw17gXRq1cvmTh8+HCrZal0rzgJ
jxL5VZ358+cbpyckJDzyyCMyXRbq6/VK89J59zKTLFmyDBw40O6jZvadLZfS
/T//+U8V4a3OPkhMTFRfWNkeXTBhwgSZ3rhxYzPzDxTSPQAAABAyVLrv16+f
PkXCoHHMHxYWZqyv0n2uXLmOHTvmZLbqyOevvvrKavrt27fVMeffffedmuJG
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
rPBwrXNnrVu3dFeGDKmxb98+X78ySfeke9I96Z50DwDwKdI9QsyFC2unTNHy
5dPq1/dtefJJrXJlrXx57ehRLSEhXZfr17V58/5O2cOHB6YMG6a9+ebfncxz
z2nt2qW78uab1Xft2uXrVybpnnRPuifdk+4BAD5FukeIOXFi7YgR2pAhWlyc
b8uff2qLFmmFCmnz52tr16br8s03WsuWWpMm2siRgSmyR95+++9OplUr7fnn
010ZMIB078PiYU70MN2fKOFR8fCiAR6GNU/OoR413KOypI1H5Ys+HpX3h3pU
PPxS5cfn3S+ni3pUljf3qEx8w6NCugeAEEC6h3nJyclXrlyJi4vzwzXr3LZt
2w8DB2rjxsnr2bclKUnbulUrWlT7/PO/A356Lh98oNWt+/clAiZODEz59FPt
/ff/PjK/Y8e/D85Pb2XQoOp79+719duHdE+6J92T7kn3AACfIt3DvNjY2KFD
h1apUqVZOtaoUa1q1fyR7lNTtWvX/o6rbdqk99KwoVapkvbii9rFiwErZ89q
q1b9fe7/zJnprvz4Y93Tp0/7+u1Duifdk+5J96R7AIBPke5hXnT0krfffrFB
g/Bu3SLSbWnbtuSTT/op3SckaKNGaYMHa4MGpevy8stalSp/H5m/fHnAyrJl
2vTp/+8o/fRWpk6txR3xfFd+aal5UjxM9x7m68VRHhUPz/r3JN3/e6RHxcNT
1z28H5+HxcN078nLNe5Rj8pvTTwq0/p6VEj3ABACSPcwb/LkFoMHZx4zJsNv
vz2Ubsvs2Q/17OmPdK/KzZtBUI4e/fvI/GzZtEcfDWQJD9cKF06PJTKy8po1
a3z99iHdk+5J96R70j0AwKdI9zDv008j//UvbdIkbd++9Ft+/VV77bW/f1I/
c4by/8r+/VpUlFau3N/376PYlvbtq27atMnXbx/SPemedP//sfceYFGdef/+
N+/73/++++6m+W5MWzdlN83YG7a1RWOMvcVYoiYasYOKxooNFETsXRQVLCga
e4mKKHYUVIqiCCpibygiUmZ/z+NkCYHhiPM9Z87MnM993Veu5DDMnOHMnMw9
55znQd2j7gEAAGgK6h4Unxkz6opPy8uW2eiwuHUmJdHw4dS3L82dC2GxXL3a
5cqVK1q/fVD3qHvUPeoedQ8AAEBTUPd2zoULFw4dOvSLfdC3b7lBg+y97u/d
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
6z1TliVzRjyjXXcv6l58ilVwRMeOFn9x+PDhBQ7Ti38XS0aMGKHwcPPnzxe3
2bFjh8pPAwAAVAV1r3uVq+WDB3TmDK1eDdXR3Z06dKAVK+QfNr9eXtS4MZUv
Ty4u0Ens1KnCkSNHtN7toO5R96h71D3qXkXMdW96qUiLqvt169aJJzt79mzz
7Pbin7NmzRJL1q9fb77B48ePExMTk5OT8//WsGHDxG3OnDmj8dMCAAAWqHvd
q1wtc3MpK0ueNA5V8dAh+vBDeuMNOWxdfkuUoO++o/XrafNm6CTu3euicK2l
WqDuUfeoe9Q96l5FrK77hw8fDhkyxDxyvij6SZMmiX8X8Z53Wr5IeLHE3d09
71cyMzN7PeP27du2eG4AAGAtqHvdqxzap2fPUrVqBdMede+Uou41NeFj4sis
+9jPWS7sxZJ5AfjcvtY7rw/LbV+znDCGpdcollubsjzqYr1xpVlyLvkXMoc7
ME7dC+7cuePj4+Pq6mpudpH5qampeT811/2gQYPy314sGTBgQIGr9QEAwN5A
3etekdA+zcqilBS6dKmgY8ZQs2ZUpw7VqwedxO7dKxw7dkzr3Q7qHnWPukfd
o+5VhFP3ZtLT0y9dunTv3j3brDAAANgA1L3uFQkdy8WL5Vh2jRrJq+9hAb/8
kurXl+c8OJYdO+K6e9Q96h51j7o3XN0DAIDzgbrXvRahY/ngAd28Samp0IIX
LtCOHdS7N/Xr50h6e1eJj4/Xerdj2LqPqkgcmXV/9lOWS79neeBfLP08rHfa
IJbr2rH0HcbSw48l86sJzhcyzHEeDtZiyfxKxxHrXiR87n8VKeoeAGBAUPe6
1yKEHNPSKCmJTp2i06f19+BBWrWKBg2iESMcyRkzqp4/f17r3Q7qHnWPukfd
o+5VBHUPAACFQd3rXmcQchSv4fHjqWlTat1af83Tx3t4kK+vI7lkSbWkpCSt
dzuoe9Q96h51j7pXEdQ9AAAUBnWve51ByHHnTnlueefO1KOH/jZtSrVrU6dO
NHCgIzl5Ms7M19D9dYgjs+5Pl2M5awBL5gRnazpYL/MS7M3NWS7rxpL5Zz9S
nSWnr5l1v6Upy0kjWKLuAQDACUDd615nEHKcOVMO8RcSQps26a+vL7VoQa+/
bmEmQXv2yy/LhYeHa73bQd2j7lH3qHvUvYqIuhcJn/PfRTqiE+oeAGA4UPe6
1xmEd+5QTAxFRFijm5scqf7oUTmineqKtdqzh3btKq7BwTRhgjx23727Izlq
VOUzZ85ovdtB3aPuUfeoe9S9iqDuAQCgMKh73csOwoQEWr2aJk+2xpYt6auv
KDlZkxV78ID276fdu4vrL7/Qtm20Zo2DuX179WvXrmm92zFs3XPmFxMy6/78
RyyZFzIz654zI954T5acLxaEnBEDhFOHsGS+5MLrWm/SByx3N2RpwLpXSHvU
PQDAmKDudS87aHDT0igoiH74wcp4adq0yLrPyZGv8MOHrXfmTOrfX44qX8yV
8fSk0aNp6FAH09+/akJCgta7HdQ96h51j7pH3asI6h4AAAqDutc97qDBvXpV
DuxWqhT99JM1Nm5cZN0/fUqzZtG0aaJerbRCBXrjDXJxoS++cGZ79qwYGRmp
9W4HdY+6R92j7lH3KiLqPvv/IwVR9wAAA4K61z3uoMFNSaFhw+SrsfgnwOfX
1ZUaNKDoaHk/+b14kTZupCZN5MF0q8vos8+ofHn57UGrVs7swIGVoqOjtd7t
GLbuD9Ukjsy6jyvNknn1+uEaLH1+st4pQ1luacZyyFSW3iNZcvJcyJkR787/
sVzbniXzKx1HrPusP5CCqHsAgAFB3esed9DgXrkiG6RzZyt/fcoUqlOHduyg
sLDfuXUr9exJf/wjDR4sT623TpH2In67d9d/rj1N9fSsHBcXp/VuB3WPukfd
o+5R9yoi6v7p/08KDkfdAwCMB+pe97iDBpdZ9z//TN99R99+K+8hv998Q1Wq
UPv2FBtLiYlWumOHvPR++nQnNyjI5dKlS1rvdlD3qHvUPeoeda8iou6f/A8p
iLoHABgQ1L3ucQftUJOJ0tPp8WNbmJBAI0fKWeSsW9X9+2nIEKpfv+C15PXq
UZky1LcvXb8uh763ThH4gYE0b56Tu2aNy+XLl7Xe7aDuUfeoe9Q96l5FRN1n
/IkURN0DAAwI6l73kIR26KNHNH68vGLdBg4cSA0bykPt1q3qvXt0/jydPFnQ
I0fkkHp/+5s8b1+0v3WK90iZMlS6tJPbsmX5gwcPar3bMWzdx35OHJl1z5x/
fIEry/11WI70tl5m6DEzc+w4lpyvNYSRVVju+tJ6maPqMf/sw3xZOmLdP/5f
UnB4Z9Q9AMBwoO51D0lob5pMdO2azO1OnahLF81t04aqVpWn0Kv7LJ4+pfBw
eu89ev99+uADdRR3VaoUlSzpbNapU3bfvn1a73ZQ96h71D3qHnWvIqLu0/9M
CqLuAQAGBHWve0tCezMrizZsoBYtaP58WrFCc6dPp3btqEMH9Z9IRgYlJcnB
89UyMZEOHqTZs/W/Uh7X3TuQqHvUPeoeda8Fou4fvkwKou4BAAYEda97S0J7
U9T9ypVyrPi1a+WwclorAr9rV03q3vxc7tyh27fV8eZNOnSIFiyghQtp0SLn
MTS0ekpKita7HcPW/blPiCOz7pPfZ7m4J8uDtVgu7GW9zBnnNzVnyczz0RNZ
7qvH8pdG1numLMt17Vh6+LF0xLpPe4UU/Al1DwAwHqh73VsS2pvmuu/cmS5f
tt2oelaPma+gyUS3btHUqTR5Mvn4qOCECfTxx/J6/K5d6YcfnMcxYyrHxsZq
vdtB3aPuUfeoe9S9ioi6f/AqKYi6BwAYENS97i0J7U1z3YuAvX3bFg/HnBFP
wdxcioujUaNo+HDrp7zP7+DB9PLLcqK9tm3lyQZOo4dHpVOnTmm920Hdo+5R
96h71L2KiLq/9xopiLpXi17AqOj90gPWgLrXvSWhvek0dZ+RQd27k5sbeXnR
pEkqKNazRAn5xmnShL7+2nns06fiyZMntd7t9DJq3Z+oTByZdR9dgeXcviz3
NmA52N96J45muawby5kDWTK/HIiqyDKitvUm/oMlc/pI5jSIDvdJXtT93RKk
4E9dUPfq4HCvDaAK2O4OCupe95aE9qaN6z41lcaMoS+/pMOHVTYsjBo3lsfc
ly2Tz8hscDAtX26lixfLyfs6dqRu3eT3Bk7jqFGVY2JitN7toO5R96h71D3q
XkVE3d/5P1IQda8WDvfaAKqA7e6goO51b0lob9q47u/epaFD6S9/oU8/VdlP
PqG335Yj/4uHyMyUPnlCaWlyvj/rvHpVvmWCgqz/fsA+3bQJo+qh7lH3qHvU
vYN9khd1f/uvpCDqXi0c7rUBVAHb3UFB3evektDetHHdP3xIc+ZQvXrUvLnK
Nm1KH34oh7hPTaX796W3bskp7TZtom3brHHrVnno38tLDq/nTM6fXzUxMVHr
3Y5h6/50OeLIrHvmjHjze7M8XpUl87lznNeH5YrvWDJXnvmlyvo21nvpPZbh
dVky/24O90le1P3NkqTgMNS9SuR/bej+/xSotRa3O3AgUPe6tyS0N21c9yaT
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
rlpFU6fK6ciNuZkuXZJnLzRurOe1/8rWq0flytGCBbRokWO7dm215ORkrXc7
qHvUPeoedY+6VxFR98qjYg5B3asE6t5QWtzueYSGhorlQ4cOzb8wLCys1+8R
9V34d4uqezO5ubmJiYnife3n5yfS3nw/CxYssHjj59Z9XFzcMUXM59sLxCMW
dSdifcy3SU1NLbCq5tn9BCOeYX7KvZ7Ni1fUvdkM1L3uEaeXou7/+7/l5du6
r0lR6jVmPiymSUk0ZAjVqiXfSg5t1644M19DUfeoe9Q96l4LxGfyU+VJQdS9
WqDujWOBSC/8Yti7d6/5R/fv389beOPGjYP/YcOGDS9U96KUHz9+XOCWDx48
MJ/9LjBfaF+A59b9uHHjehWbkydPWryTwMDAXr8ftz+PjIwM8VPzGf7u7u6L
Fy82H7739vYuapVsBupe90TSS9S9nZiZSadP0/r1tHmzg7liBfXvT61aUevW
jq2bW6WoqCitdzuGrXvmRdDMuj/7Kcu5fVmG12U5dYj1jvJiyaz7QdNYMr9U
ufQey21fW2/y+ywDerD0H8zSEes+qgIpiLpXC9S9obS43fNITU01F3FRh0WS
kpKKX/fi3lxdXcWN09PTC9zYZDJ5eHiI2+/fv7/wXT237rdu3bpCEfOdC3x9
fc3z3BXg6dOn5ng/ceJEUY+Sm5t7584d8/D75hEJAgICirqxzUDd6x53eom6
txPFhhCZ3LmzHEIQ6qKnZ+XY2Fitdzuoe9Q96h51j7pXEVH3JyuRgkO6o+7V
AXVvKC1u9/x4e3v3ejbQ3IULFwr/NCYmpvh1L7p48ODBYuGePXsK3Fj8aNCg
QeJHZ86cKXxXzOvuU1NTxfqbD7XnHy4vP5cuXer17OL6vEnt8zh+/Li/v/+m
TZvyLzTPdx8eHm7dKqkI6l73uNMxKlH3CkZEyCuy58/X/KJvX185a3zfvtyK
gVY7d27VxMRErXc7qHvUPeoedY+6VxFR98oXWaDu1QJ1bygtbvf8XL582RzX
IpAjIiJu3br172cxLpJ53bp15h8V/8x889nvgo0bN6alpZkXimyfPXu2WNi/
f//Ccf1vXt2LnDeX+Pjx4wufM5DHkSNHirqO3jwoX9++ffMuTzAfuBc3tnga
gI1B3evesHqJuldWRHfVqlShAlWrpq0ffkiNGtHIkfoPLmdYQ0MxZr6Gou5R
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
c6h7mN/0dBoxgv78ZypT5jn+859UujT17avaQ8fFyVfj3LlGd/VqFxtMqoK6
R92j7lH3qHsVEXWvvDlQ92qBujeUFrd7HqKIzafZ518YHx8fGBi49BlLnhEc
HFz4dy3WvSArKyskJMTd3T3/EPS9e/feunVrUYfXT548aT7hv8C5+sUk7wyE
devWFf7pkydPRo0aJX569OjRf//nKvsCdS9C3nyFQh5Dhw61h4vuBah729cc
6t5+zM2VZ7wvXkxLl9KyZfq4cCG1aEGff07z5j1Hb2/6/ns5Q/2kSeooNmjH
jtS6tdF1c6sUHR2t9W7HsHXPnHycWfeX3mM5uz9L5jcb7ddaL3M8wE0tWDbZ
zrLfHJabm7Nc38Z6j1Vjua8ey14LeTpg3S/9nhRE3asF6t5QWtzueYSGhppL
Nv/CsLCwXr+nT58+hX+3qLo3k5ubm5iYKN7Xfn5+Iu3N97NgwYLCtwwPDzen
/axZs7Kzsy3eW1xc3DFFzCPyCcQjFvhd84j9CxcuNP9n4boXwWv+3ZCQkLvP
MI8AINZK0wH8iwnq3vZFibq3H7Oy5ITvLi5y4PT69fVRvA4/+oi+/vr5a5ua
Kr8KeOklevllqKbVqpXJm3JFO1D3qHvUPeoeda8i4jP5kh9IwQG9UPfqgLo3
jgUivfCLYe/eveYf3b9/P2/hjRs3Dv6HDRs2vFDdi6h//PhxgVs+ePBAdL35
gW7fvp3/R+b7FyxatEjhIvdx48b1KjYnT57M+8W4uF//CLt37z78DPMF+AMH
DhT/fubMmX//ZzS/vPw3ExgY2EvxbH+bgbq3fVGi7u3Hx4+pSxeaPFnOELd0
qT7Oni2vpq9cmSIinuOePXIriGAZNw6qKa6711TUPeoedY+61wJR94t7koKo
e7VA3RtKi9s9j7yp344dO2bx1ZKUlFT8uhf35urqKm6cnp5e4MYmk8nDw0Pc
fv/+/XlLzNcFCEJDQ5XHxNu6desKRcx3LvD19c3MzMz7RfPl/EUxfvx4cZsJ
EybkXzEz0dHRYuGoUaMU1so2oO5tX5Soe/sxPZ0aNKAVKygsjPbv18dt2+Q3
DOXLy7MInuvq1bR8uW4XETirGzdWz5uxVDsMW/eRVYgjs+4P12DpP5gl87n3
n229IyaxXNeOZYtNLH9cxDKsPsstzaw39R2WO75iOXAmS0es+0U/koKoe7VA
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
+8vz5I8Xr+5NJnnYvWVLqlvXyivuHctu3SocO3ZM690O6h51j7pH3aPuVUTU
ve9QUrAv6l4lUPeG0uJ2Bw4E6t72nWUndS8Ctm9f8vQs7ofktm3lyGxarzbq
XiOHDpW13q8f+fg830mT5PURn34qhyYYNcr5nTmzytmzZ7Xe7aDuUfeoe9Q9
6l5FRN0rz56AulcL1L2htLjdgQOBurd9Z9lJ3efmyjHhQ0Lk+hTHAQOoe3fU
vaMqar1ePfrTn+i1157vq6/SK6/QSy/JUzV27nR+Dxyofu3aNa13O4at+90N
iSOz7jmlJtzcnOWZsiyDulivhx/LlZ1YVj/C0ncYy331WMaVtl7m6435ZlEe
Yu65OtwneVH3k4eTgqh7tUDdG0qL2x04EKh723eWndS9yUS3bsnAj4kpllOm
GOi6e+er+717KSBAHqcuThB5espNIBr/xx/l4X6n18urckxMjNa7HdQ96h51
j7pH3auIqHvlU1BQ92qBujeUFrc7cCBQ97bvLDup+xfVNmPmo+41MidHDhV4
716xvH1bjqNYqpRRbNiwXHh4uNa7HdQ96h51j7pH3auIqHuvUaRg3z6oe3VA
3RtKi9sdOBCoe9t3FupeQRvX/ePHcqjARo2oc2fq2vU3xX/+7//SpUv6/9nV
0mSS12JkZxdX8Zc5cuRXly+XZ27ofoRdO729q8THx2u92zFs3UdWIY7Muk9+
n2Vgd5aHa7DkzIg3fDLL0LYsv1/KcqQ3yw2tWXKGiWDOwMiZjE+49HuWDvdJ
XtS98rsAda8WqHtDaXG7AwcCdW/7zkLdK2jjus/IkIMJlC0rp7avUuU3K1ak
P/5RzboXZZ2eLpPZEY2IoNWrycvLaV24sNrFixe13u2g7lH3qHvUPepeRUTd
TxhDCqLu1SL/a0P39rS9h+7821Ba3O7AgUDd2z6TUfcK2rjuc3IoKkoOLShc
u/Y3g4LkfPdq1b1I+8REec37mDE0bpyD6elJX3whHT3aaZ01q6oN9l2oe9Q9
6h51j7pXEVH34zxJwT6oe5VA3RtKi9sdOBCoe9tnMupeQRvX/b+fHb5PSKCz
Z3/nqVP017+qVvc5OfKV1rYtdeggz/l3LL/9lt54Q16c7uHhtPr5VTl37pzW
ux3D1v2914kjs+7Pf8SSGblbmrEcMMt6f1jCcl07lj0Xs3RdwJI53MGmFtbL
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
ULZmTfrkE3mKvtjdrNbOnSuEhYVp/baDukfdo+5R96h7FRF1/90GUhB1rxao
e/Mw+v01+vbbLah7/QMWda+gpnX/1luUmCgb2eJ307wV8dLT6coVedReOH06
NWhAR4/qsbVZWXIBvnz+9htt2kTz5j3lsPhHH9Gbb1KlSpYfXI9x96h71D3q
HnVvY3X/7SZSsIcr6l4dUPfmYfT7a/Ttt1tQ9/qXHepeQdS9gqdOyen43n1X
HhAvV44qVKDISD229vp1SkiQD2BeR4ygzz6jLl2oZ08lRdpXqUL9+lH//tar
r2+VM2fOaP22Y9m6t+CIxVoHiCOzUvvMZTloMstnclj2n2m+gW1ZVg1n6TyN
pZs/S4cjLGvvN99GO1gO9WM5YQhLw/0lL+q+6WZSEHWvFr2BvWLplx4wB9S9
/mWHulcQda9geLicN6BECapXTx4Nr1hRj7oXm3riBB08SIcP/8UePeTj2bfv
U5aSL1dO3k13dxo61HqdOrXqhQsXtH7b6Y26R92j7lH3qHv1EHX/zRZSEHUP
ALBDUPf6lx3qXkHUvYI7d5KHh1ykPiVF/vg336gz7l7ZkBC5qt1rr9Hnn//F
N96g2rXlJAYPHigZHk7LlsmV+6zZRYtsf8581D3qHnWPure9uv96GynYHXUP
ALA/UPf6lx3qXkHUvYI7dsjl/ObN+3NFvO++U2HO/KcqtrNuXXkSfvv2f7Fc
OXn+wL59+Y/p51O82n195UKE1uz48TgzX0NLXSSOzLqvcYil9yiWzEZe0NNi
fv8zS2alMkf9t1rH8v1Y860eyvKHFSxH+rA0Yt033k4Kou4BAHYI6l7/skPd
K4i6V9Aidb9okRwOMHky3b37F4cNo+efpw8/lPPmKfjBB/T++1SypFXbqFG5
4OBgrd92UPeoe9Q96h51ryKi7pXPhUDdAwDsENS9/mWHulcQda9g3ro/dEge
Ug8MlGv8aaqPj3w6Zs7MvzEBAVS/PjVtahmbNJH7b82a6tipU4UjR45o/baD
ukfdo+5R96h7FRF133AnKdh9IOoeAGB3oO71LzvUvYKoewXz1v3Ro3I6+tq1
qVUrba1UiTp3lgvw5duYjAy6c4euXrWMly7JPejnn9Vx69bqV69e1fptx27r
njkSmVn3ZU+x7LmAZd19LHssNN/RI1i2/IUlc76Cqa4s6wSz/OA382V+ltVu
Dcvui1gase4b7CYFUfcAADsEda9/2aHuFbSTuk9Pp9276dNP6aef5EHwQjp4
MHXsKOte3AVRuAMHykn2mO3zVL/7jnr1ohkz8t+FrCz5GUW+0/WfanCw/IyC
6aZN8kHo0EFOxa+KkydXPX/+vNZvO6h71D3qHnWPulcRUff195CCqHsAgB2C
ute/7FD3CtpJ3WdkyLnoixUjBwd5/L2Qli9PNWrIsDX9EvHq3bCB1q7V1r59
5Yrwj9e9eYqNnzJFjuLnOHo0tW1Lzz5LDRqoY8+eFSMiIrR+20Hdo+5R96h7
1L2KiLqvt5cU7Ia6BwDYH6h7/csOda+gndR9VpY8t9zVlUaMKEKndOpEzZv/
r+7FfTl/ns6c0dZRo6hLFzmHXkICy7g4edi9RQs5uIDZa+7ucuj93/9OLVuq
o4tLpePHj2v9tmO3df/ReeLIfLVUPMbSdSpL5dOGn6rLT+Y7ypvlVztZMlfE
m9uHJWdJOyHn4yDmuPtmG1j2ms/SiHVfZx8piLoHANghqHv9yw51r6Cd1L0w
O5tOnZL3Nzi4sPr7U8+e/6t7fZw/X46+79aNjhxhGRJCbm70z39Sjx5yTAHH
Pn2oXj1Z9126qKOXV+WoqCit33ZQ96h71D3qHnWvIqLulZ9K1L3Fyc7OPn36
dEBAgJ+fn6en57hx45YtW7Z///6srCxLb5pWpKWl7dy5c+HChSNHjvTx8RH/
2L59+7179yy9XcCOQN3rn3WoewXtp+6F9+/LiekK76+/yqH3Otf9yZNy6H3F
ivTDDyw7dJAT9LVoQRERFBPD8vx5Cg2Vk/lPnaqOy5c7xMXFaf22g7pH3aPu
UfeoexURdV/rACnYbRDq3pKkpKSIqO9dEGPHjk1KSrL0BqpPQkLC8OHDH7+/
np6e4luW3jpgL6Du9W861L2Cou5HjKABA+SMbep64YLV1X1RzZ0zX88bFY9Y
u3ZUrpxc/45j3br0ySfywH1sbNE+0yjQK1fkNIOzZ6vjzz87xMfHa/22Y7d1
73CEODLr/vMolgOms2TWPWd1s4U9WDbcxdJ3GMvV7VlWOmoxmSswMtfyY04T
YcS6rxlCCqLuLUhaWpqHh4epbZcvX378+PHk5GSRCVu2bOnfv7+4UHzX9o7g
+/v7i7s2ZMiQkJCQy39w8OBB0+MwaNAg27u/wDpB3evfaKh7BUNC5INTpUoR
ZpIvpJMnU4kSqPsim54uRxAcOSLX4OMYHk4LFlDp0nJ9+Xr1uNauTZ9/TmXK
qGOzZuXF/3+1fttB3aPuUfeoe9S9ioi6V348UfcWZMWKFeIV5ejoePbs2Xzf
SkxMFJeL74aGhlpk2zTi/v37ffv2FfcrMjIy7+XR0dGmTznOnTtnqW0DdoU9
1/2XX8qWFPGis8uWySXGUPcFGhoqh5Z/9BH3T/rHHTjQ8HW/fbtcAm/uXMrM
NJ5paXJ3e/11uVKAtVm16ue7d+/W+m0HdY+6R92j7lH3KiLq/ovDpGBX1L2F
SEtLMx2g37RpU4FXWLlyZb9+/UQ46LxhmnLlyhVTxT9+NuDMmTN9fX0PHz5s
kQ0D9oY9133p0vIk8BUr9LZ/f7lq+dq1lq9FK/TOHdq4UZNl3G2g7rdtkzMS
jB5Nu3cbz1275Cda3t7k5WV1Tp9eVYf3Lrut+y8PEkfmjs+sLfeJLJnro3Fu
eqwXS+XhzE/VexTLn79nyfxo4r1L5ts2kOXX21gO82VpxLpXnscAdW8pwsPD
TZ1769atAq+Q9gc6b5XW5OTkuLu7i3vt4+Nz9OjR9PR0S28RsFPstu5jYqhs
WerXj3x99bZdO/r+ewoKsnwtWqenT8vTG9SaMC1X8Xe+0et+716ZokOG0KJF
RnXBAmt03brqOkx3g7pH3aPuUfeoexURdV/tCCmIurcUmzdvFi8nV1dXS2+I
3oSFhfXr18/0yYb4x+TJk7ds2RIbGyvC39KbBuwI+6z733+/8+gRLVwojyR6
eupt8+bUti3q/olmZNDdu3T7tspGRRl+Vr3r12nrVjn5fLduUE2HD698+vRp
rd90UPeoe9Q96h51ryKi7quGk4Jd3VD3lmHlypXi5eTn55f3wjNnzgQEBCz+
g0V/sGLFCkttoXacP39+/Pjx+ebM9/Hxsck1AoB1Yq91n/r77yW3bSs5bVpJ
Pz+97dDhGRy7118rXBGvqN67J2e369ePnJyUFFfo1Ilat5ZnicDC6OZW6cSJ
E1q/6dht3dfdRxyZdV/uJEvmQGbmJxvDx5jvVFeW321kOWEIy81NWbZey/LV
G+Zbby/LbzexZE4TYcS6rxJBCqLuLcXatWvFy8nd3T3vhXv37s3XvP369bPU
FmpNamrq4cOHAwICTOfqC5ydnWNiYiy9XcAusNe6z/n997gHD+JSU+Nu39bb
BQte6NEDs+rprQ3UfXa2nJvu+nW6cUPJM2fk2Pzq1alpU1goHR0rHjt2TOs3
HdQ96h51j7pH3auIqPvKkaQg6t5S7Nmzx5S0t2/fzr0wOTn54P/xyy+/2GTd
Z2RkZGZm5r0kJycnPDx80KBB4v4uXrzYUhsG7Ap7rXtLsmpVcayIp782UPeF
NCqKxoyhhg3l6gP626MHde9OXbsaSS+vylFRUVrv+Kh71D3qHnWPulcRUfcV
j5GCXVD3FiJ39viwsLACrxAbG2t7dT9//nxxp4KCgh7/VnBwsPjW4MGD9d8q
YIeg7vUHdW8R7afuFy2SM+8NHSpfY/q7bh2tXk1LlxrJDRswq56GKk9q/VSZ
dc8cP95tMUvl5bqeqpu/+S7oyZJZ9/1ms9xfm2X71SxfSjFf5mdZveex9BjP
0oh1X+E4KYi6tyC+vr7iFTVgwIAC0yAqKsr26t50xsLQoUMfXw5g165d4lvi
MbHIhgF7A3WvP6h7i2g/dT9vnlxScNQoCg3Vw8OHaft26bZt0sBAeebA6NFG
cs6cqjqMhkPdo+5R96h71L2KiLovf4IURN1bkPj4eNPs8SLwQ0JCrl+//rtc
sir7ypUrQUFBpm/ZWN3fuHHDdMaCt7e3CKKsrCxxofjvkSNHXFxcxOWbNm2y
9DYCuwB1rz+oe4toV3Xv7U0zZ9KjR3qYnk7BwbRvn1ywTzhtGhUrRm+/bSQb
NCgXHBys9Y6Pukfdo+5R96h7FRF1rzyyBnVvWY4fP26qWhODBg1ycnLK/VIk
sA5j4nTm8OHDjo6OuXMGuru75y6QN2HChHv37ll6A4FdgLrXH9S9RVSx7pOT
6fhxCguzUocNIzc3mjVLtYdOPGJPMiuLEhJk0S9eTAEB8r9Dh9I//kGVKhnJ
tm3Lh4aGar3j223dK0979VSZdc8c+d5qHUvl04afKifPV7dn2Ws+S+YA8MXd
WDI/W/jstPkqL9D2VJVngH+qI31YGrHuP48iBbsMRt1bmJs3b4o6MM0pZ6J/
//6+vr67du0yHdq2PWJiYiZOnDhgwIDcu+zp6fnzzz8/evTI0psG7AXUvf6g
7i2iinW/bBnVqkUffkgff2yNvvkmNWumZt0/ekSZmZSRUYApKTR3rnz3qF6d
6taVVqhAL79MP/1kJJcvd4iLi9N6x0fdo+5R96h71L2KiLpXfjpQ91ZCdnZ2
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
HObL0oh1/9xDUrAjo+5Nx9m3b9+ee8m2bdvEJUuXLi3w+iLSxXfFX8K5l8TF
xYlLBg4cmPMHbm5u4su8o8CuXLkiLnF0dHz06JHZ2wkAAPlA3esP6t56zMiQ
h6SnT3+Kvr5UubLV1b3Y+HXraMIE8vHRyREjqF07WfeNGlHz5rajszPqHnWP
ukfdo+6NV/f/TCcFza57EeMuLi7iAbl9+3buhampqX369HFycsrKysp3/ezs
bGdnZ/Hdu3fv5r381KlTppwXv2fkyJHDhg3L94OmM/lv3Lhh3nYCAMDjoO71
B3VvJWZl0Y0b8pD0qFE0erSSQ4ZQhQpWV/fCQ4do6VL66af8Tp2qiZMnk6Mj
vfUWtWhBHTrYju7ulU6ePKn1jo+6R92j7lH3qHsVEXX/jwxS0Oy6v3btmng0
3Nzc8l0+ePBgcXlycnK+y5OSksTlY8aMycnJOXv27NatW/fs2XPx4kXlW0lI
SBA/5eTklJ2dbd52AgDA46Du9Qd1byVeu0aLF8sF0US8Dx+u5MCBcoS7FdZ9
WloBIwtu3ZLTACYmqm9CAsXG0sKFtubatQ6FmQyZid3Wff09xJFZ9x/8xvKt
KyzLn2A5fYD5MsfdN9zFcpwnS+ZHE8zPFjhLATJvumsAy/m9WBqx7v+eSQp2
9DSz7mNjY021nu9ycYm4/PG/daOiosTlkydPnjJlSt5J8xYuXJiZmVngTWRl
ZU2aNElcZ86cOeZtJAAAFAjqXn9Q91bi1avyrPtixWjMGLmunIKiESpVssa6
L1CR9r/9RqdPU3S0Ji5aRLNm0cyZtuOqVQ5PmihJRVD3qHvUPeoeda8iou7/
lkUKml33Z8+eFY/G+PHj810+YcIEcfmZM2fyXR4REZE7r/6yZcvEl5s2bXJy
chKXrFu37vHfn52dvWDBAvFdV1dXnJYPAFAX1L3+oO6tRFH3olK7dJEHu5WX
gYuLo4YNDVP3Tk704Yf00kv09tua+Prrtmbt2mX37dun9Y6Pukfdo+5R96h7
FRF1//+yScEn1f358+fPPYErV678/n917+fnl+8HxSXicnG1fJeHhYWZ6n7L
li25F54+fVpc0q9fv9xF8UxkZGTMmjVLfMvZ2Rl/NgMAVAd1rz+oeytR1P3s
2dSrFz18+JRrJiXJup8/X45zj4iwdlu0kOMIatSQM9ubbePGVL26/D3lytm+
rVqVP3z4sNY7vt3WfctfiCOz7r/ayfLF2yxbr2XpPcp8OavpCZlbvqAnS87H
GsIOq1i+esN86+1lyRx3H9SGpRHr/pkcUrBDQXWfnZ3d+8nMnj1bXOfSpUvi
3z4+Pvl+duTIkeLyy5cv57v8xIkTpgP36enpeS8fPny4uDw2Njb3krt3744f
P940qD/v5QAAoBaoe/1B3VuJha/75GS5It7nn5ODA33xhbX79tvk6irPzH/q
Sn8K3rxJmzfLmfT8/W3fJUsc4uLitN7xUfeoe9Q96h51ry5LnkaBP7Vs2bKl
T8B0HpdocPFouLi45OTk5P1B0xT3+SbGF4jeF5f37ds333T6pjP5T506Zfry
2rVrpjXuRfWLf6v1IAAAQF5Q9/qDulfRR4/owgUKDqbDh4vsxo3k7k49ejy9
7lNSyNmZmjWjNm2obVtr9913qWdP+ZicP2+m585RVJSce3/SJJo40fZdvLja
pUuXtN7xUfeoe9Q96h51bxQ8PDzyHaY3Jbynp+fjV3706JFplH3eD4pF6Zvm
2E9MTBRfpqSkDB06VHwpkv/+/fs63AUAgH2Cutcf1L2Kiu4eOFCOMf/wQ/ro
o6JZqpQ8zN2pEz148JRbyc6WJ+eHhhrDSpWoShXq108ewTfPAQOoWzd6/nnx
x54cxW/z+vpWiY6O1nrHt9u6/zSaODLrvtEOlu/Gs+y4kqXXWPMd6cPyu40s
G29n6TeUZat1LKuFmW/lSJZdlrB0msESdZ+XoKAg8YDMmDHDdDhe/Hf69Ol5
Z8l78OBBTExM7ifDixYtMg3Vz50kf8eOHeISLy8v0wkA/v7+pitkZGRY4P4A
AOwG1L3+oO5V9Pp1atWKuneXy9YX9c9+Nzd5OL5r16cfuxemp8vz8w2hvz8N
HkxeXuYH0YgRMvAF335LLVvavi4ulY4dO6b1jo+6R92j7lH3qHujcPfuXTc3
N9PM+aLox40bJ/49ZMiQ3NPyT506ZZr03vTlrVu3TNcfM2bMxo0b586daxqJ
f+LEid//mMfPNK7fyclp0GMkJSVZ7H4CAGwO1L3+oO5V9OpVqlVLzmafmCj/
XSSPHyc/P3kSe2Hq3kAmJND27TRnjvnOnClXCRRUq2b5aQR08IcfKhw5ckTr
HR91j7pH3aPuUfcG4ubNm35+fqLQTWEuMt80o74JU90PHDgw95Lk5GR/f//c
6w8dOjQyMtL0rV27dilM5Wc6dR8AAFQBda8/qHsVFZFeu7acyv7OHbp3r2j+
9pucNa4ws+oZy9RUOXD+wAHascNMt22jdevkWoEuLnLgg807YUKVx9cvVh3U
PeoedY+6R90bjvv378fFxaWkpBTy+nfu3Ll06dLVq1fzzbAHAAD6gLrXH9S9
ioq6r1OHjhyhrCxzfraQc+YbzrQ0unWLYmLM98IF2rOHAgNpzRrbd9u26nmP
yGiE3dZ9rQPEkVn3dYJZvpHEsmYIy2G+5sucVY+53n2bIJbMjecsWC/kTAJZ
ez9L5uPWYyFL1D0AANgAqHv9Qd2rKLPup0+XS7pv3y6PdNuS3t5ywEKzZuYP
RW/Rgpo0oYYN7cKePStGRERoveOj7lH3qHvUPeoeAACApqDu9Qd1byV1n5Qk
x5i/9x4tXWr5w8fq2rYtPfsslS5NH38Mn+5335U/ePCg1js+6h51j7pH3aPu
AQAAaArqXn9Q91ZS9w8f0rFj8hh3z57Up49NWaUKFSsmBx307Quf7ujRWBFP
Q5tsJY7MumeuP17pKMsvD7KcMMR8mePuv97GMnfhe/Nc1oml4yyWnGkiKh5j
yXzYOy1jiboHAAAbAHWvP6h7K6n7R4/oyhW5oF7HjrZm5cr01ltyYTtmGdmJ
s2ZVjYmJ0XrHR92j7lH3qHvUPQAAAE1B3esP6t5K6j4nhzIy6ORJOn3a1ty0
iX76yfLVbBRR96h71D3qHnWPugcAABsAda8/qHsrqXsb9soVCgkhf39yc6PB
g+FT9Pevev78ea13fLut++briSOz7pttYFk1nCVz9DpndTPmEGzm0PUWv7L0
d2P51U6WnIHz5U9YUjd/lqh7AACwAVD3+oO6V1HUfYGKR+PBA4qOps8+o3Ll
4FNs1ar8oUOHtN7xUfeoe9Q96h51DwAAQFNQ9/qDuldRA9W92MKUFLp+nW7c
0MNr1+j4cSpZkqpXpxo1/ucXX8g592Be27UrHxoaqvWOj7pH3aPuUfeoewAA
AJqCutcf1L2KGqjuRdf7+lL//jRwoB66uNAPP8i637GDDh7805AQ+eW8efAv
BgY6xMfHa73j223dM4OFWfdlzrBkDmRmjsLmrIjHDL22gSyZ0x14jGf53UaW
nEUMq4Wx7LyUZZclLFH3AABgA6Du9YdZ9xkZ8H/GxVHt2sao+8hIOcS7e3dy
dtZDJye56v0bb1BwMEVE/GloKK1ZQz4+NGUK/J9Ll1aLjY3VesdH3aPuUfeo
e9Q9AAAATUHd6w+z7q9dkwesockTJ+jLL41R96NG0aBBNG4cLVyoh3PnkocH
PfMMzZjxvwunTZOnOhQrRjVryn9Ak127VggPD9d6x0fdo+5R96h71D0AAABN
Qd3rD6fub92izZtpwwbauBFKly6V46bNrnvxU0lJOunqSu7uMrq3b9fDLVvk
Oefvvy+HA0ya9Kc+PlShgjygX68eNWwI/7Rnz4qRkZFa7/h2W/elY4gjs+6Z
o/4rR7JkRm7PBeY7cArLbotZcrZc6DqVZePtLD+8YL7197DsGsCSOcsE6h4A
AGwA1L3+cOp+504qXZree48++ghKP/hAPhrm1X12NqWm0ooVOtmqFXl50YED
lJmphxkZdPMmjRhBjo7Ur9+fdu0qH7E2bcRfcdSnD/zTUaMqR0dHa73jo+5R
96h71D3qHgAAgKag7vWHU/eBgfLY61dfyVSEwqZN6eOPzaz7+/fp6FF5+vqU
KTR1quY2akSennTokJpn+yublkbLl8t75+//p76+1Lo19e0rZwBwd4d/6u9f
5dy5c1rv+Kh71D3qHnWPugcAAKApqHv94dT9+PHy79VLl/QrRCuXM2f+hQvU
syf94x/UsaM8qK21lSvLptaz7h83O5sSE2nmTPgXV61yuHz5stY7vt3WPTOQ
mXXP7J26+1gyl2bjDMFmjrv/YQXLH5ezZH40USeYJefDKGbdM4ftD5jOEnUP
AAA2AOpef1D3Ksqse/FENG8up5H/9VfNbdeOhg2jXbvo9m2LmZJC8fFyUby8
btsm8pZatJAPhfivHersXOnYsWNa7/ioe9Q96h51j7oHAACgKah7/UHdW0nd
nz8vh6LPnSuHqOuwqSLtxXO3YYN8+qzKmBjZ+MWKSf/zH3u0WrXPd+/erfWO
j7pH3aPuUfeoewAAAJqCutcf1L2KGqjulyyhLl2oVy9urajuiBFyZrnnnpPz
GHTqZI96eFQ6efKk1ju+3dZ9uZPEkfny5qxuJmR+OMDUeZr5zuvNsvValsxP
RWY5smQuRFglwnxrHWDJ/FCl+yKWqHsAALABUPf6g7pXUQPV/aFDclPfeotK
lrQu332XXnuNnn1WPhTr1tmjO3dWv3r1qtY7PuoedY+6R92j7gEAAGgK6l5/
UPcqaqC6v3OHTpygw4cpNNS6FJu0eTM1biyn/uvVyx4dObLy6dOntd7xUfeo
e9Q96h51DwAAQFNQ9/qDuldRA9W91ZqTQ9euyWXy2rcvgu3ayTP5v/uOmjUz
vE5OFTGrnna2/IU4Muu+eijLGodYModRjx5hvhOGsGyylSVzsoXpA1gyn/RG
O8y3ajhLzkwLwj5zWaLuAQDABkDd6w/qXkVR96qYmUlnz1JUVBHcsEG+FEUa
i8Y3uq6umDMfdY+6R92j7lH3AABgeFD3+oO6V1HUvRnevauCoaE0YQK1bk0d
Ohhed3fMqoe6R92j7lH3qHsAADA8qHv9Qd2rKOq+SObkUFIS1a1L9epxrViR
atemGTNo0SLD+8sv1RMSErTe8e227htvJ47Mumfm0heHWTI/HBg+xnxXdWDJ
nK+AaVAblsxnzYJyZloQ9p3DEnUPAAA2AOpef1D3Koq6F2Zn0/37dOMG3bz5
FK9fp5Mn6YMPqGZNqlWLZZkyVLkyTZwoA9/orlrlEB8fr/WOj7pH3aPuUfeo
ewAAAJqCutcf1L2Kou6FKSm0fj25upKb21McOJC6dKH//pe2bqX9+1n6+FDV
qvT66/K3Gd369csGBwdrveOj7lH3qHvUPeoeAACApqDu9Qd1r6Ki7mvVopAQ
unePHj4smidPij9mbKHuk5Jozhzq0YP69HmKvXrJSeTeeIMOHpTL83GcNk1E
saz7t94yvPXqoe41tP4e4sise+ao//InWH61k+XCHuY7aTDLfrNZdlrGcpwn
y89Os6y933z/m8CybSBLpxksUfcAAGADoO71B3WvoomJ9NlntGYN7dxJu3YV
zSVLZOraQN1HRsoz7SdPptmzZeYrOHMmubvT3/5G8+bR8uUsxW+YMoX8/GzB
hQurxcbGar3jo+5R96h71D3qHgAAgKag7vUHda+iycnUqJEMWxHpojeL5Jgx
8mdtoO6PHKFKlWjFCtqyRZ5yr+DmzfKOv/eefCGJBw2aXLKk2qVLl7Te8VH3
qHvUPeoedQ8AAEBTUPf6g7pX0Xv3ZJ43by6PwrduXTSbNKHy5W2h7sPD5fCE
U6coLU3eFwXT0+Xcep6e8ix98SKEJkeNqhIdHa31jm+3dd9hFXFk1n2loyx7
z2NZ6wDLn1wsZo+FLJtuZvnz9yyZdc9Z0o65BiJzooZui1mi7gEAwAZA3esP
6l5FRc9u20ZDhpCHR5EVhVuzprZ1f/++HKIeGkphYRoaEEDVq9OZM3Ly/MI8
YkuWkL+/nO5eT319qXNn6tjRGh0yBOvdo+5R96h71D3qHgAADA/qXn9Q9+qa
mSkj2gyPH5ezzGla99HR1LIllSsnV4fXzjJl6NNPC1v3wvT0Is9AyPTBAzlD
QvPmVK+eNdqtW4WwsDCtd3zUPeoedY+6R90DAADQFNS9/qDurUQdVsQLD5fL
xnl5cQtFWfFyqlSpCHVvMitLLmynz7R14nU7fLj8FGLIEPloWJvTplU5e/as
1js+6h51j7pH3aPuAQAAaArqXn9Q91aiDnV/4AB98IHs7gsXNHTdOqpRo8h1
L+71mDH04ot6WLw4/ec/9Oyz8mW/Y4fVGRJS/erVq1rv+HZb98z52Zh1/+VB
lsxKrRzJclkn850whKWbP8tPo1ly7riQ+ZFO90Xmy5xH8cMLLL1HsUTdAwCA
DYC61x/UvZWoQ92HhNAnn9Dly3IuO+0UfVq9OkVF0d27RRiYcOOGPGz92Wfa
nldg0tubXF1l4/fqRf37W51jx1Y+ffq01js+6h51j7pH3aPuAQAAaArqXn9Q
91aiPnUv8vnOHW3vyJEj5OAgp+9LSpJLBBbS334jNzdq3JhSUjT31i06fZre
eov++19rtEGDcsHBwVrv+Kh71D3qHnWPugcAAKApqHv9Qd1biTZT98ePU8OG
NHBg0apn6FA5oZyo+7Q0FTxyhHbvpp07C3bHDjl8oEULOcegFeriUun48eNa
7/h2W/ft1hBHZt0328Cy/h6WLX9hyflgYcgEll5jWa7syJLT10Lm6PV3482X
OeT/i8Mssd49AAAA1L3+oO6tRJup+3Pn6Icf6L335Bj/wluqFL3+On39tZxe
j6mo+3nzaNw4GjvWkM6bV+3ixYta7/ioe9Q96h51j7oHAACgKah7/UHdW4k2
U/cPHsjz3g8epEOHiuDOnfTjj3JK/+PHWUZG0oIFVKWKnLp/+HBDOn16VR3e
u1D3qHvUPeoedQ8AAEBTUPf6g7q3Em2m7s0zNZU8PaliRdq2jeWmTeTuTq+8
Qt2706hR5ujtLX+DmxsNHmwZJ02qcu7cOa13fLute+ZIZGbdd1rG8pOzLL//
mSWn7plL2jH7mln3zJXdmBvPyXOHIyzLn2DJXH0SdQ8AADYA6l5/UPdWop3X
vbjXixbJM/O7dGHZqRN9+SXVqiUz37wV/VavlvMGlC9PNWtaxk6dKoSFhWm9
46PuUfeoe9Q96h4AAICmoO71B3VvJZrqfs4cevhQhbHnBRocbL11LzZv3Trq
2JG++YZlkybyBADx34MH5Sp7ZhgUJE/sf+89qlTJMrZtW/7w4cNa7/ioe9Q9
6h51j7oHAACgKah7/UHdW4nnzlGPHjRpkpzvPTJSExcupDJlrLTuhffv07Vr
ch09jomJcrZ80ebvvEOlS5uj+NnOnWnaNPr1V8u4a5fD5cuXtd7x7bbuG+wm
jsy6bxPEsvZ+lt9tZDlwivkOnsSy1TqWgW1ZMm/9jSSWnJHvzLpvvp6lx3iW
qHsAALABUPf6ExhY/Mcf5URkIouKqqenHKSMulfF334jZ2f5eK5fT5s3a+LE
iVZd96qYnU1nz1K1anISfvPq/v335Zj9GTPkE2ERUfeoe9Q96h51j7oHAAAb
AHWvPwcOFBc589FHVL9+kRUBNXgw6l4db92Sx21r1ZJnlTPPTn+SNWrIteds
u+6FmZmUkEBxcWYaFCQXna9ZU46+t4g9e1aMiIjQesdH3aPuUfeoe9Q9AAAA
TUHd609kZPGKFenzz2VXFtX33pNTi6PuVfHuXTpwgJo2pRYtZF1qYZ06lqn7
nBxZ3LduGcOtW6lVK3n0/4svLOMPP2BWPQ1lLk/GrPvOS1nWCWbZaAdL16nm
y1yMj/m4eY5j2X8mS+ZnMvS7+XZcyfLbTSzHebJE3QMAgA2AutefrKzi0dF0
7Jg547idnOTy3Kh7tczKonv3NHTnTsvMqidu+tw5GjSIPDwM4ODBcohE//7y
5W0RfX2rREdHa73jo+5R96h71D3qHgAAgKag7i1B0+TkOgkJdeLji+zQoX/D
uHsD+aQV8R49kivBnTihlQcOyNPdBwygoUPh0506teqFCxe03u1R96h71D3q
HnUPAABAU1D3luBOdraZjhtXHHPmG8gn1X1KCrm4ULNm9O23mlizJlWtKrt1
8mT4dJcudYiLi9N6t7fbum+8nTgy657Zie/HsvxmC0vOGGrmonLMBfV6zWfZ
cwFL5nQHpWPMl/mCab+aZVAblqh7AACwAVD3xmL8eNS9kXxS3V+7Jgf7d+pE
XbpQ167q26QJOTjI3+/qCp+un1+Vs2fPar3zou5R96h71D3qHgAAgKag7o0F
6t5YPqnu4+LopZdozRo5oZwWTp5MHTvSf/5Db70Fn269emWDg4O13nlR96h7
1D3qHnUPAABAU1D3xgJ1bywV6r54cTp6lGJjNfHIEVq7Vk5YxyyjwujtTX37
ypMQOnUyqp6elU+dOqX1zmu3df/ZaeLIfH2OGc7ypRSWzMHvnL72HsWSM+Rf
yLz1H5ez/PACyzJnzPeHFSyZ0x0wl0FE3QMAgA2AujcWqHtjqVD3r75K169r
dbs5OXLivhs39DA5mfbsocBAWr3aqG7dWv3KlSta77yoe9Q96h51j7oHAACg
Kah7Y4G6N5aWqnthdjY9eFBY796lU6do1y7asaNobtsmu75zZ7mqncWnvufM
mX/+/Hmtd17UPeoedY+6R90DAADQFNS9sUDdG0sL1n2RfPSItm+Xo/X9/Iqm
r69cd09Qpw59/bVR7dOn4tGjR7Xeee227uvtJY7Muv9nOktmbTFHYfeZa77z
e7Fst4blpMEs3SeyZI67b7jLfJkvGOYkFcyFCFH3AABgA6DujQXq3lgGB9Mr
r9C4cfmXYBs+XF5uJXWflUW//UZffEEDB5KXV9H09KTu3eW7R9Om1LatUR00
qNKJEye03nlR96h71D3qHnUPAABAU1D3xgJ1byxDQuiNN8SfTOTo+Bc7daKX
X7Z83T96RGlp8rT88HB64QVycZFT5BXJ4cPlvStWjNq0kefnG9RhwypHRUVp
vfOi7lH3qHvUPeoeAACApqDujQXq3lgmJdHChTRxIk2a9BeHDbN83WdlUUQE
zZ4tz653daU336SDB+nixSIYE0MXLsgB+z/9RNOmGdgVKxzi4+O13nnttu4r
RxJHZt0zh2APH8OS04lCzghuZl9/vY3lki4s2way/PIgy/InzJf5wUKjHSwn
urNE3QMAgA2AujcWqHtj+eCBXPZu0aL8it63eN1nZMg58QYOpG7dqFUreucd
Skgowo+np1NqKqWkyGnzN2+WH2LMm2dUAwMdEhIStN55Ufeoe9Q96h51DwAA
QFNQ98YCdW8ss7Plee9XruQ3LMzy4+7FZvj50TffyHkABg+m998vWt0HBVHL
llS3rpxPr2JF+vRTKlPGqDZrVv7gwYNa77yoe9Q96h51j7oHAACgKah7Y4G6
tw2tYc782Fjy8JBtvnq1HCwg6v7oUbp6tbCOHk3vvit97z3zLVlSnjPw2msW
tlatsvv27dN657Xbum+2gTgy65752cKA6Szr72HJWVSOueVtglhOc2Y5ejhL
N3+W78abL3OWif/cZTnLkSXqHgAAbADUvbFA3duGVlL33t7UsaNcsO/4cXrx
RWrUiFq0KKzly4sopmPH5H0xW7ENERFy2L6/vyUNCKgWGxur9c6Lukfdo+5R
96h7AAAAmoK6Nxaoe9tQhO0rr8iJ6URZp6ZaxlOn5Hp2nTvL4QNiSz75hBo0
oCZNCmuZMlS7tpxVLyXFfG/elJ8PzJwpJ/ebM8dirlnjcPnyZa13XtQ96h51
j7pH3QMAANAU1L2xQN3bhqLu//UvmjqV5s+3mOPGycn0OnaU25ORISfM37aN
tmwprD/8IE+t9/amMWPMV/x4lSrk4CB/W58+FnP06CrR0dFa77x2W/fMMdTM
umfe+q6GLJm3Pma4+Q7zZek1lqX424Ij83GzW5kvV9Q9AADYAKh7Y4G6tw0v
X5bjzX185Lx2EyZYxqFD5ZR6prrPyaH4eDp5Uh5JL6SDB1OFCnLKfXd383Vx
of/+V54G0Ly5DHxL6eFR+dSpU1rvvKh780Tdo+6hPi9X1D0AANgAqHtjgbq3
De/fp+XLacgQcnOzmD17Ur161KHDn5uUnU1ZWUUwLk4ewZ84Uc7IZ7a+vvTR
R1StmtySr76ymL16VYyIiNB650XdmyfqHnUP9Xm5ou4BAMAGQN0bC9S9bZie
Tvv309y5NGuWxRw9Wk6OZzp2b4a3bsm5+H7+uQBXr6YVK2jZsqe7aBG1bk1t
2sgD6J06WUwPj0onT57UeudF3Zsn6h51D/V5uaLuAQDABkDdGwvUvc346BGl
pVnSM2fIy4u6dDFz+3Ny5BH89PQCfPCAkpLkqf5PVbySIyPlaQyF+ShAOzdu
rJ6YmKj1zmu3de9whDgy677PXJb+biy7BrA8UMt8pw9g2fIXllNdWYZWZ/nD
CpZVw82X+bj5DmP54N8sUfcAAGADoO6NBeoeqmVsLA0bJg+dcya9L3AafJHt
GzfSpk1PV1xt9Wp5fj5naj6+8+ZVi4mJ0XrnRd2j7lH3qHvUPQAAAE1B3RsL
1D1US1H3jo5Urhzt2KGmItgnTJDvJ6+/TiVKGMM6dcru27dP650XdY+6R92j
7lH3AAAANAV1byxQ91Atb9yg8eNF2HLrKZ+ennIQveDbb6llS2Po4lLp2LFj
Wu+8dlv3b14ljswX5OBJLD+NZtl8Pcst35jv8h9ZMsfd/+TCMrgOy4FTWNbe
b749F7Bc35xlRBWWqHsAALABUPfGAnUP1TI9nVaulBPrqTv/fN26VLasfD8Z
M4Y1nb6eBgRUu3TpktY7L+oedY+6R92j7gEAAGgK6t5YoO6hWmZl0alTcop7
dWeoW7KEJk+mxo1p+HCVzwrQzlmzqmLcPeoedY+6R91r/TYIAABAa1D3xgJ1
D63f27dl4A8eTG5uxnDSpCrnzp3Teue127ovdo84Muu+2QaWztNYfruJ5YDp
5sv5ZEA4aDLLWy+znNOXZZsglpwPZEb6sJwykCXzSUfdAwCADYC6NxbGqvsb
N8jVlXr0oO7doR3ZuTM1aiRP0a9Txxh27VohLCxM650XdY+6R92j7lH3AAAA
NAV1byxE3Y8YQefO0cOH1u6DBxQTQ7Vr0xdf2IsODlStGjSeHTpUCA0N1Xrn
Rd2j7lH3qHvUPQAAAE1B3RuLqVOLd+5MPj7yzGcr19+fvLzo7bdp8WK5prnN
u2qVHHVu8QnioBkGBFSLjY3Veue127r/+BxxZNb9j8tZ+g1l6fITy8C25ru2
NcsWv7K89jrLHY1YMge/1wwxX+ZMC8wVGDlLKApR9wAAYAOg7o3F3LnF27en
Xr2of39r19GROnakF16g/fvp6FHbNzycQkLknHLqTlIHdXDjxuoJCQla77yo
e9Q96h51j7oHAACgKah7Y5GaWnz+fPrpJ5o2zdqdOlUuff7vf1NAAK1ZY/tO
miSHnJcoQbVqQYPZuTPG3aPuUfeoe9Q96h4AAAwP6t5olP3ll5LLlxvAZcve
8PenN96g6dNp/nzb19OTmjeX5ypYfBQ5LKoYd6+pzOXJmHVf6ShLZm0xR2Fv
aGa+Z8qwXNKFZb/ZLFNeYsl80of6mS+z7pmfJu2pzxJ1DwAANgDq3mjE37sX
d/euIfw5Pp7c3eU4gp49bd+mTalqVWrZkpycoMH09a1y5swZrXdd1D3qHnWP
ukfdAwAA0BTUPdCM0NTUktOnlxw0qKSLi+3bseOLTZpQt27k4QEN5tSpVS9c
uKD1/oC6R92j7lH3qHsAAACagroHmpGekxN3+3bczZtxN27YvleuuEZF0Zgx
NG4cNJgLFlS7ePGi1vuD+MvZgol96ObvllL8b4Yjs+6nObMc78EypjRLzmJ8
zL4Orc6SOfJ9dwOWq9tbTM4ihkLmRA0+I1mi7gEAwAZQq+6/+eabsWPHrlmz
5jAAdklISO8tW/4xYAA0nuPGfaHPmfmoe9Q96h51j7oHAACgHWrVfcuWLT/4
4IOSJUt+BICd8u6HH5YoWRIaz0aN6gYHB6v1pvokegMAgHWj9dsgAAAArVGr
7ocPH968efPGjRs3BQAAQ+Ho6Hjs2DG13lQBAAAAAACwCGrVfUpKSmxs7HkA
ADAacXFxDx48UOtNFQAAAAAAAIugVt1nZGTcvn37JgAAGA3x3iXewdR6UwUA
AAAAAMAiqFX3AAAAAAAAAAAAsBSoewAAAAAAAAAAwOig7gEAAAAAAAAAAKOD
ugcAAAAAAAAAAIwO6h4AAAAAAAAAADA6qHsAAAAAAAAAAMDooO4BAAAAAAAA
AACjg7oHAAAAAAAAAACMDuoeAAAAAAAAAAAwOqh7AAAAAAAAAADA6KDuAQAA
AAAAAAAAo4O6BwAAAAAAAAAAjA7qHgAAAAAAAAAAMDqoewAAAAAAAAAAwOig
7gEAAAAAAAAAAKODugcAAAAAAAAAAIwO6h4AAAAAAAAAADA6qHsAAAAAAAAA
AMDooO4BAAAAAAAAAACjg7oHAAAAAAAAAACMDuoeAAAAAAAAAAAwOqh7AAAA
AAAAAADA6KDuAQAAAAAAAAAAo4O6BwAAAAAAAAAAjA7qHgAAAAAAAAAAMDqo
ewAAAAAAAAAAwOig7gEAAAAAAAAAAKODugcAAAAAAAAAAIwO6h4AAAAAAAAA
ADA6qHsAAAAAAAAAAMDooO4BAMAi5OTk7N6928nJqWnTprVr1xb/WLJkyc2b
N/W59aSkpBkzZvTu3btWrVrt27efOHHigQMH9LlpAAAAAACgBah7AADQn7Nn
z5YtW5Ye45133omIiND61jds2PDqq68+fuvu7u45OTla3zoAAAAAANAC1D0A
AOjMwYMHX3jhBfGu+8EHH8yZM+fcuXNnzpwZP378Z599Ji587rnn4uLitLv1
jIwM0603bNhw4cKFsbGxJ06c8Pb2FrcrLhw9erR2Nw0AAAAAALQDdQ8AAHpy
586dd955R7zlNm3a9P79+3m/lZSUVKxYMfEtHx8f7TZg586d4iZee+21hw8f
5r185syZ4vJPP/1Uu5sGAAAAAADagboHAAA9cXJyMh21T0tLe/y7o0ePFt+t
Vq2adhuwYsUKcRNly5bNd/n169dLlSolbjojI0O7WwcAAAAAABqBugcAAN14
+PBh8eLFxfvt+vXrC7xCVlZWgdWvIlevXjW953fs2PHWrVua3hYAAAAAANAN
1D0AAOjGmjVrxJvtSy+9lJmZacHNmDFjxjPPPCO2pFixYq6urpoO8wcAAAAA
APqAugcAAN0YNWqUeLNt0aJF7iUpKSk+j3H8+HGttyQwMPD99983vfk/++yz
Xbp0uXz5stY3CgAAAAAAtAN1DwAAutGjRw/xZtu/f//cS7Zs2fL4ynR79uzR
YWOysrJWrVpVrlw5042+9dZbMTExOtwuAAAAAADQAtQ9AADoRqdOncSbrbOz
c+4lFy9eXPF/mKbUe+aZZ1JTU7Xbhuzs7Lxf5uTkBAUFvfbaa6Y18rS7XQAA
AAAAoCmoewAA0A0fHx/TWngFftc0m/0nn3yi0a1fvHjx5ZdffvPNNx//1rJl
y8RN/+tf/7LshAAAAAAAAMBsUPcAAKAbv/76qymiC5zIzsXFRXy3c+fOGt16
Wlra3/72N3ETj5+BHxwcLC4vUaJEviP7AAAAAADAKKDuAQBAN0Q7f/755+L9
9ssvv8w7i92dO3f8/f1fffVV8a0ZM2ZotwGmW3dwcEhOTs69MDExsXz58uLy
fv36aXfTAAAAAABAU1D3AACgJ6GhoSVKlBBvuc8//3yDBg06duxYs2ZN8W/T
+3CpUqXOnTun6a3/4x//MN169erVf/zxx8aNG//zn/8Ul5QtW/bSpUva3TQA
AAAAANAU1D0AAOjMtWvXWrdu/dJLL+W+/Yp/169fPygoKCsrS+tbDwkJ+eab
b0zr3ZsoWbKko6Pjw4cPtb5pAAAAAACgHah7AACwFImJiREREXlPkteNtLS0
CxcuiFu/ffu2/rcOAAAAAABUB3UPAAAAAAAAAAAYHdQ9AAAAAAAAAABgdFD3
AAAAAAAAAACA0UHdAwAAAAAAAAAARgd1DwAAAAAAAAAAGB3UPQAAAAAAAAAA
YHRQ9wAAAAAAAAAAgNFB3QMAAAAAAAAAAEYHdQ8AAAAAAAAAABgd1D0AAAAA
AAAAAGB0UPcAAAAAAAAAAIDRQd0DAAAAAAAAAABGB3UPAAAAAAAAAAAYHdQ9
AAAAAAAAAABgdFD3AAAAAAAAAACA0UHdAwAAAAAAAAAARgd1DwAAAAAAAAAA
GB3UPQAAAAAAAAAAYHRQ9wAAAAAAAAAAgNFB3QMAAAAAAAAAAEYHdQ8AAAAA
AAAAABgd1D0AAAAAAAAAAGB0UPcAAAAAAAAAAIDRQd0DAAAAAAAAAABGB3UP
AABAgdjY2MDAwLt371p6Q6wR8eAsW7Zsw4YN5v0sHljLkpmZuXnz5sjISEtv
CAAAAKAOqHsAALB5MgtBVlbW4z948eLF//f//p/4H0SFChX032zrZ86cOeLB
KVOmTFF/EA+sNdClSxfT3z/r16+39LYAAAAAKoC6BwAA2yY2NpYKwdChQx//
2Y0bN5q+++yzz96/f1//jTeP7OzsHTt2iP9qfUNm130hH9ibN29GRERcvnyZ
t5mgYCpVqmR6Fjw9PRWudurUKfEsqPhyOn36dHx8vFq/DQAAAMgFdQ8AALZN
XFzci38l920/74UTJ058/GczMjJat25dunTpCRMm6L/lZrNixYoPP/ywwLMR
1MXsui/kAztr1izx+wcNGsTYRvBEfv31188//7xOnTqxsbEKV3vttdfEs6Di
GIopU6bUqFFDrd8GAAAA5IK6BwAAe+M///mPeM9fvXq1pTdEEzIzM0uVKhUQ
EKDDbZld94XEx8cHdW9ZsrOzTWMoVKz7+/fvv/LKK+ZN1wAAAAAogLoHAAB7
Q/W6F7USFRWV98tjx46lp6c/6fqpqakRERHJyclqbUBeZs6c+fbbbz969OhJ
V8jKyrp06VJYWNjly5dzcnIK8zvF1RITE8WPnD17Nu8pAfnqPi0t7ejRozdu
3GDehVz69+9vRt0/aWtzMeMREDx48EA8y+KJU/EOaoF44UVGRqr16hJ31vQ3
UmHqXjyY4nbFQ3Tx4kXlB3bUqFGfffaZDoNHAAAA2BWoewAAsDeU6/6NN954
4TE6dOiQ72qnT58uXrx4ly5dhg0b9txzz4lfWLp06Zs3b3p5ef373/8WX775
5pvR0dH5fiooKOjjjz9+5plnTP/fee2118aPH6/iKfT3798vUaLEmDFjCvxu
eHh4586dX3755dz/8RUrVszX1/fxjwJEVot7vXXrVvHv5cuXf/TRR7k/8s47
7/x/9u4Dvqnq///4QWWjiCwBZQgCIkuQIRuVjcgWkaGgTAX1KyjLhYAgqIAo
IPpFEEUQ+YKKgEwpe4+yEbDM0hZZLS20/X/S8/P+YxY3uUnTpq/n4/PgUW5O
bk7uTU7uO7nDaKbTfcWKFeWZPv7441myZNFtSpQo8csvvzjM0+SCFeXLly9W
rFiBAgX0DOVfh3utWbPGh956tQQk+N9999316tWTv8+ePdulS5fMmTPru9x2
221ffvmlbla7dm15aJcLPC4uTh5dbl29erXL1eHBsmXL5I558+Z1vilPnjxy
09q1a40p5cqVkynXrl0LCwtr1KhR9uzZdT9lOWzatMn+vhMnTnReBWL37t0O
jzJt2rRSpUoVKVLEOJJF3jX2d2nSpIl9+9jY2DfeeMN+webMmbNBgwbOLwMt
OjpalvzMmTO9XTIAAHhAugeAjMardK8/IJ5++mmHZtu2bZPpOtdLzNfNJOfq
w/n1f9u3b29/l+eee05Pl9zUpk2bmjVr6n2emzZt6q+n9sknn0gIPX/+vPNN
ei93I33XrVs3X758+r8vv/yyQ+OuXbvKdEnKMkPdJlOmTEWLFpXkaH/EtE73
xnIoVKiQLIE77rhDt581a5b9PE0uWCEh0b7NLdO9yd56tQSOHTumUr6xkWhf
tmxZ3UxWtDwL+WP58uW62WeffSb/LVCggGR5hzl8++23clOxYsV8+IX6119/
lfvKqnS+6fbbb5ebVq5caUwpWLCgTHnnnXdkQckr6uGHHy5evLjucJ48eS5d
umS0dEj3+o0gdu7c6fAoU6ZM0W2Mb2w8p/t27drpZrLAZXU0btxYLyjx4Ycf
unyOr732mrwRvF0yAAB4QLoHgIzGqz3zJYN4SPdCck1CQsLXX3+t/yvtJc0N
HTpU/r7vvvuM9lOnTpUpEs2mT59u7LQcFhamvwqQZOqXp1a7dm0JVi5vWr16
tTzWe++9Z+xYfv369Z49e6qUE9c7nFdN5+VKlSrJv2XKlJE+nzlzJjnlbHjH
jx83mhnpXp6p8Qv1iRMnypUrp1J+N5f27rrqbsHae+qpp5SJPfNN9tarJaDT
fbZs2fS+Fv369Vu7dq3ey0LmaRx2ERsbq086N2PGDIdeNWjQQKZ/8MEHnjvv
kg/pXjz22GOHDh3SE+XlrSd+9tln7h5Fgr+7dG/Yvn27buNhz/zTp0/rNt9+
+60xUd4F3333XatWrdxdE2Hz5s1yF+fdBgAA8BnpHgAyGj+m+9tuu03/UB4R
ESH/LVy4sM59Er70j866cVxcXM6cOWXKqFGjHOYzfvx4mS5J0OqzSk6Wnkh/
JHG7a+Ccta9du6Z/Ip87d679dJ2XRbVq1WJiYtzNUKf7e++9Nyoqyn76unXr
9N09nDnN7+n+lr1N9mYJ6HSvef7u5f3335c25cuXt594+PBhHc/Pnj3rufMu
+ZDuW7Zs6fDsJOwrV7slGPyV7vfu3avbLFiw4BZPzE5SUpK8X2Tpmb8LAACe
ke4BIKPxY7o38ruERPlvhQoV9H8lLulfhPV/t2zZov/rnD11Swlovj+ff6xe
vVpmJbH0li0PHTq0cOHCMWPG9O7dW2fb0aNH2zfQeVkWlOdrpXk4Z36RIkXk
pgkTJri7r9/T/S17a++WS8BI9x7SsaYPIVd2u+uLwYMHK6dDM8zzId3/8MMP
Di31bglt27Z19yj+SveiZs2aKmXXFHnK8+fPj42N9dDYII07dOhgpiUAAGaQ
7gEgo0n9dD99+nT9QZPFifEZZP3cenPmzJF45eFs+cePH+/bt2+hQoWUk3ff
fde+pc7LL7zwgudH9JDuddwbMGCAu/v6Pd3fsrfJ3iwBI92fPHnylrPVz6VZ
s2b6vwkJCQUKFJApK1asuOV9XfJLute9atWqlbtH8WO6l1l169ZNn0dCpZxS
r3Xr1nPnzvX8qpaXR+3atT00AADAK6R7AMhoUj/d64PuRS83+vXrZ/15ffrp
px72AVi9enXevHlVyn4CvXv3Xrhw4b59+6Tb+vBwl+m+Z8+enh/RQ7ovX768
3DR8+HB39/V7ur9lb71aAka6j4iI8Dzb5JTjMiSJZ8qU6cCBA/LfBQsWqJRT
1pu/3J4DP6Z7D0vYj+lek4X20Ucf1a1bV3dSpZyWcN26de7ajxw58uGHH77l
bAEAMIl0DwAZTeqn+7CwMP1Bc+rUKT89CRdmzpyZPXt2d7eWKFFCOtChQwfp
qv30QKT7+Ph4fVnAOXPmuLuvmXTftm1baXPLrz5M9tarJeBVuhfPP/+80dVW
rVopj0cl3NJvv/2mH904fZ8hldP9nj17dJvIyEjz/Y+JiZk8ebLuWO7cuR0W
uGHQoEE1atQwP1sAADwj3QNARpP66f7KlSv6aum3PIjbimXLlslD2F8BzaBP
+iccjky/efNmlSpV/J7uP//8c/1w4eHh7u5rJt3L4lImrhhoprfeLgFv0708
00yZMuXKlevIkSOyrrNlyxYdHW3mji7t3r1bP7rDKeVnzJihp6dauo+KitJt
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
53LnnXfGxcUFuzv+FB8f365du5IlS44dO9YvM5wyZYosqNdffz1YHQiWKlWq
3P0PIwoZU+Rj3Y+PRbpHQBnpft++ffLfq1evbt26tWPHjnpiw4YNg9g30j2A
9CjtpPvExES9z6SZdN+tWzdj4oYNG4xPfNI9ENqWL1+u3+wPPfTQrl279MTY
2NgRI0bkyJEjLCwsuN2z6ObNmwULFsyUKVO5cuXkOf7000/B7lGa9u6773qV
7kPSnXfeKQvh+++/D9D8SfcIKId0b/j444/19P/9738u73jp0qWtW7eeO3fO
5AMdP3587969Dnt+OkhISNi5c6d0Sf83T548ZtL9tWvXZM7SmQsXLnh4dJnz
Lb+wlQ7IcggPD/fqEJtbdkA+WaQDmzdv/uuvv5KSkjzM6urVqzIr+//u2LHj
+vXr5jsDIOh8Tvfmx9WLFy/u2bNHhjXPe0LKoOSuJwad7u+55x77nfNl007v
0+Uu3Zsf1jRpJh12eS4CAEGUmJhYsWJFeadXqFBBhiCHW2+5D6e8/U+dOiVD
wYEDB2RYcNlGhqnt27dLM//02I5sIMmcIyMjPbRZtWqVPLsqVaqMHz9e/ujU
qZOHxrGxsQcPHty2bdstzxEnT1zGahmxjx07ZmYMNLkhqkmz3bt3HzlyxMyc
zTA/Yuv9HAKR7r19GcjKlRXh+QPR/Pryilfp3kw/k1MCl7wAdL6YOHGi53Tv
bcjyGek+JLlL9/Lel3FepleqVMnhLvPnzy9TpoyxD3/+/PnHjBnjMKTPmjXr
rrvuGj58uGwrDh48uGTJkrrxHXfc8dprrzln/PPnz7dt29Y42qt48eLz5s27
9957ndO9jEt33313vXr15G/Z5uzSpUvmzJn1vW677bYvv/zSvrG82WWY0huo
+tFr1qwp7xfn5RAVFdW7d29jVtLyLjtdu3b1rQNbtmzp1q2bbDYb751cuXKN
GjXKfhNXlrz0sHv37kOHDtVLQBaX9GfYsGE5cuSQ/xYqVCg8PNz1+gOQ9viQ
7s2Mq+LKlSuTJk2qWrWq0VL+kGHN/ltBMW3atFKlShUpUsTYw1C2VezHtCZN
mhiNdbpv3bq1sts5v1ixYkWLFpVtD+d0b2ZYEw8++KA8kESDkSNHyqx0Sxni
ZNPaOUEACJYff/xRvz0XLlxopr1sVslbe8mSJfL37NmzS5cubQwF999/v0Pj
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
ctBB3rx5VcoXbvIRuXDhQlnIEt4bNGigSPdA6DKf7r0aV+Pi4jp37qy3CevX
ry+bB7LNcPr0aeP4JueeeJvu9bBfpUoVfZNzujc5rCW73/5ZsGCBSvnZi2t9
AmmBPr2Py7Pq6QHEZbo39nV3ycg1GzdudL5VX4xj0KBB+r/+Svf6Sk/Dhg0z
pujfUl3Knj278wZeQkLC4sWL5V5GFpatLxmHXV7pT7YGP/roo7p16+pOqpTf
kdetW2c08GpDVB8iav8di3mej7s3OWIb/JjuvXoZJN8qNTvP36v15RUr6d7o
59GjR3WvtmzZ4tDSOd17tTFgWLZsmXF2fXkj+/BM7d8UPtwdaZO7dC9vGf2d
mAxceopsRuqWZi5VaT7dyzis7MKsPSvpXp+7SUZaMzfFx8frM/vZk7eny+8A
zad7vQA7dOjgcHgX6R4IbebTvVfj6jfffKNSrqxhnKBJW7NmjbuP5j179uib
PFwP2j7dnz9/vlGjRsYZRZzTvclhLdn99s+YMWNUynGIt3y+AFKBsR++8wXd
fE73iYmJ+iBi59MTSfLS0cm46bffftMdcP7Gz3y6l61W/aP8nDlzjCn63GUf
fvjhNjubNm3S+z5999137vqflJQkzdq2bas79sEHH3h4sjExMZMnT9YjnozP
xtjo1Ybo6NGjZUqRIkV8uMC9h3RvfsQ26GftMkt62wGvXgbJ3qd7g1frywy/
pHt5PesdPJxP0eCc7r3aGNDko1mfgV+fh1xivryVTN7XYB98vL0v0iyX6V7e
Jvq7XGFcZvTKlSt6Z3Uzx5ubT/d6e1XIh4h9y6ioKH21C9/S/e+//+7y00qC
vB7r7K8xp09YMWDAANkAlk1cecoeLpdpsgPGGQYcDkyTAU0f40a6B0KV+XTv
1biqf4dyvqaw3snT5UezDKT6JpcX4dXs070Dh3RvflhLdrP9IyNwsWLFlKtz
VgMICnn/ytaavCsfffRRh5+zfU73onbt2irlzHsO0/WZN+w3O3fv3q2nyB/2
LWfMmKGnm0n3xk+f4eHheor+0sDlgcwtWrSQm1q3bm1McXcuMn1+e4ff3102
Nk6LZ+yF7tWGqHEQgf0Z1w2ezx3nLvx6NWIb5MNIOV2CzTMP6dv8yyDZm3Tv
1frygV/SffI/3644HFMgBg8erP6d7r3aGEhOSWr6d8kGDRrI3/3791cpV2e4
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
j1mzZr3++uv33XffLCddunSRvCl/SP91iG7WrJnMpH79+p6fu1dd1elenr5E
9ccff9w48KFEiRK//PKL8xyioqJ69+6dOXNm43jwu+x07drVaPnXX3/dfffd
9erVk7/Pnj0rT8e4lyzqL7/80n62ly9fllWWO3duY7Y1a9aUBBroVZDs/Vrw
jcl1J+699967nDz77LPOLa9everc0t6BAwcc7jJ//vwyZcpkypTJOLxlzJgx
7r7vSjtI9wAAAEDIGD58uI6cJk8RLzFT2ksi++STT3QokERTtGjR7Nmz16pV
y77le++9pxvkzJnzsccekzb6vw8//PDff/9tNPv111/1EdPOj3X77bfLTStX
rjSm6MhcqFAhHZblD4nP+hQB0g2JirrZBx980KRJk8qVK8tDN3FSunTpfPny
6b/1BdGkve5bnz597PvmwIeuCn2iQndd1eLj4x999FG5KVeuXD169HjhhRdy
5Mih7146hf3ZD44dOybTS5YsKdG+bNmyupnkd0mv8sfy5cuNlhEREcZiL1Wq
VPXq1XVnpLdTp04N6CrwYS24I1F61KhR7m41ue6SndK9vtfTTz/t3DIuLk7i
uUOiN75CkW477CPx3HPPGQu5TZs2NWvW1N9oNW3a1EN/0gLSPQAAABAyOnbs
KBv2zZs3N9lep/tKlSrJv2XKlJk+fbre/1ny6fHjx41mmzZt0gGnc+fO165d
0xPnzZsnQU8mvvTSS0ZL3yLzfffdt3r1aj3xxIkT5cqVUyk7D0g3jMbm9wmX
Huo5iDvvvHPAgAFHjhxxvmPguipd0g99+PBhPSU8PFwCvsx2x44dDo+l073k
dP1jcb9+/dauXat/JpZVYL9rhN5rXdKocXK5mJgYiZwyMXv27MZzDNzzSvbH
nvlr1qyRJ/vaa6+5vNXkunMmM3SX7p0lJia2a9dO2stK2bhxo/1NU6dO1V+Y
yHvB+IosLCzs7rvv1t+DmZl/sJDuAQAAgJBRpUoV2bDv37+/MeXQoUOf2JE0
Z99ep3tRrVo1iYruZtuwYUNpU758eYlF9tM//fRTfXcjxvoQLe+9996oqCj7
luvWrdOzXbRokTHRq1x58eLFLl26GAcRSGpu1arVpk2b7NsErqv6x1/7tSB6
9OghE0eMGOHwWDrdax7Co0R+3eaHH36wnx4bG1u4cGGZLg8a6OeV7Kfj7mUm
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
JUE7IUHFxaV2RUWpBQvUoEHq3XepNFRTplQ7evRooN99GTbdv2OVpXQ/YKKl
uni3pbKY7kcO973W1rNUH71hqXY8YqksptRRQy2VlRfr+P8oK7WlmqWy+E4j
3QNACCDdZyike10StP/80/YzeirXqFGqYUNVsaJ6+20qDdVnn5HuSfeke9I9
6Z50DwDpHuk+QyHd6zp3ToWFqR9+UAsXpmr166cefVRVqaImTKDSUM2cWf34
8eOBfveR7n1Fuifdk+5J9wAAU0j3GQrpXte4ceqxx9R996kmTVK1ypdXrVur
adPUlStUGqrY2Po3b94M9LuPdO8r0j3pnnRPugcAmEK6D7TExMTdu3f/8ccf
69KAIkXuXbEiaOk+Kcm2S/yZM8GvwYNVgwaqXj01cGCqVps2qmNHNXSoWrmS
SkO1aVOt6OjoQA8FpHtfWUr3Fk8uZ/EkaceLW6oFbX2vqb0tlZUT+kn993lL
da6gpXrnXWtlwczuykptqmGpLL7TSPcAEAJI94F27dq11q1bFy5cuGgakDnz
7UFM9wkJ6sQJNXNm8KttW/XKK2rpUnX1aqpWWJjq2lXlyKHuuYdKQ1W7doWV
K1cGeigg3fuKdE+6J92T7gEAppDuA+3SpTVNmlS9777sTZrkCnrlyJEpiOn+
3Dm1fLl6883gH2fdvLl69VW1dm1qL4GDB9Xo0bbdBh5/nEpD1aNH5S1btgR6
KCDd+4p0T7on3ZPuAQCmkO4D7ezZYi1aqKeeUhcvBr+KF1dBTPeLF6tWrdTd
d6sXXwxy1ahhO8Fd6qd7Kq1W/VQYCkj3viLdk+5J96R7AIAppPtAk3TfsqXt
XGqpf3V153rgAdtRxn5J99euqYgI9ddfXtTXX6tnn1WdOqlFi4Jc7drZ9pD/
7DPbvgQUtWFDraioqEAPBaR7X5HuSfeke9I9AMAU0n2gSbp/6ilbnAz2r5O2
KlnSP+k+KUlduKA2blTr13tRH32kevSwHfYe9OXw6qu2E9z16qUGDaIoNWFC
tUOHDgV6KCDd+8pSuq/7h6X68kVL9UUfS/VzS9/rs/6WymJK3fewpbL43cLL
ky2VlRfrVz2UlYrJY6ksvtNI9wAQAkj3gRaS6f76dTVypHr9dfX2215sZj/3
nG0fhrSQ7hcuVKNG2c4AYDE4UKFRU6ZUO3r0aKCHAtK9ryytXNI96Z50bxLp
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
a2ux0OnTtHixcio3J3f2bBo4kO67j+bMoTVroOPcubONA75eMW3db+tCIgrW
/RerhBTMpVejhAyYbLuCndhrhZCCdf/WbiHvLhByeLDt9lwjpN80IbtvFNKI
dc/exdb8StOAnj2t3tDf37/e1/Ts72xJQEAA58epu9/v2rWr3vL09HSrHxdM
mDCBLU9ISLD18QEAgC2g7qHLm52tnMdt82Znd9MmGj9eOe5+7FiaORM6zhUr
WqWmpsoaVLVA3aPuUfeoe9S9RGyu+w0bNrAHO2fOHPXs9uxPdcb7TZs2qVco
KSlJTk5OSUmpe6vhw4ez68TExNS7N3bzoUOHsou2b99eu1Cdf8/T09MBO4YB
AEBdUPfQ5a2upooK/SfNu63FxZSTQyNGkI8PdKjTpjV3wNcrqHvUPeoedY+6
l4ha95b/0lSr7ouKioYNG6bOnM+KfvLkyezvLN5rd8tnCc+WeHt7196kvLxc
nQk/Jyen4R2eOHFCvXTmzJlbtmxZtGiRm5sb++eBAwfs8cABAIAD6h5C57Gq
iubNo8BA0aKBd2RoaAv+OY6lgLpH3aPuUfeoe4nYXPeM3NzcqVOnqg2uZn5G
RkbtpWrdDx06tO712ZLBgwfX2/2+lnPnzgUEBNSeDm/48OEs+SU+WAAAaCSo
ewidyoICys+nvDzoOAsKOjjgrMSoe9Q96h51j7qXCKv7ml9R9a815dS9SnFx
8dWrV/Pz82WtUmFhIbvDgoICWXcIAAB3CuoeQqi7NTV04wZdvUqpqTr488+Y
M9+ObviYRBSs+8GzhXSfJ6RgbU3xt92LTwu5cICQAxYKOWy6kC+dFnLll7Yr
mOd9lwr5j3QhTVj3AADgeqDuIYS6W1JC06bRE0/Qs8/q4PvvNzl06JCsQVUL
1D3qHnWPukfdS0St+6rfaIq6BwCYENQ9hCa3ulr50vz8eYqJ0c3oaPbGkv7y
F3rjDR385ptmDjglMeoedY+6R92j7iXC6t7yX6h7AAD4D1D3EJrcwkKaOpW6
dVPs3l0f33+fXnyR3n6brl3TwezsDuXl5bIGVS1Q96h71D3qHnUvEdQ9AAA0
BHUPocnNyyM3N+rTh/r2pX799PHzz+nll+m11+jiRR28cqV9cXGxrEFVC9Q9
6h51j7pH3UuE1X31r6ny/2mKugcAmBDUPYQmNz2dHn2Uli2jzZt18/vvla/v
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
tzswEKh7M1hdTQUF+p9VXLWwUAnbBx80dd0z8/KUtG/fntq1gzrbq1fTY8eO
yRpUtUDdo+5R96h71L1EWN0faUscfb5G3csBdW8qrW53YCBQ9y7vzZsUHU1v
vEFffUV9+uhv7970+ef0P/9DV6/q/+ToaFUVnT9PJ09C/b1woV1hYaGsQVUL
1D3qHnWPukfdS4TVPX/mCtS9LFD3ptLqdgcGAnXv8ubnK9Ob33MPNW9OLVs6
hS+9RL//vdnrXnerqv5v9n5YWtqxurpa1qCqhWnrflsXElGw7ld+KeQMHyGX
9RZS5JOBH98UMtRDyOpfC7n6cyHdFgi57jPbnTRKyO3vCTl3kJCGeyfP6v5Q
e+KIupcF6t5UWt3uwECg7l3ey5dp+HDy96c9eygqyincsYPuu8/se+br7oED
NGGCsh/F11+b3dGjX75w4YKsQVUL1D3qHnWPukfdS4TV/cEOxHEo6l4SqHtT
aXW7AwOBund5L12iwYMpOFg5wfrFi/qbkEBnztADD6Du/8/qaiotVaYjcLDr
1tGQIfTRR9Sjh9n19X3p/PnzsgZVLVD3qHvUPeoedS8RVvcHOhJH1L0sUPem
0up2BwYCde/yso3CIm7WLGUP5MpK/a2oUA4WwKx6tebmKvszzJvnaN95h775
hpYupTVrzO6OHa1//vlnWYOqFqh71D3qHnWPupcIq/v9nYgj6l4WqHtTaXW7
N8RisVy4cCEsLGzq1KkBAQGTJ09esWLFwYMHOYc65ufnz507NyoqquFFiYmJ
4eHhM2bMYHc1c+ZM9vfY2FjOT9+zZ8+cOXOKi4t5L1wxsrKyIiIi5s+fv3r1
6uPHj5eWlta7QkFBwfbt2xffgv2F/dN+K3NHoO5dXrXuZ89Wslr3lVHFGfHq
evEirVqlZEhQkENt3Zr696eNG5UDJUzuTz+1vX79uqxBVQvUPeoedY+6R91L
hNV91KvEEXUvC9S9qbS63evBOp1F/QBrTJo0KTMzs+FNKioq2EXsCsuWLau7
vKamZtOmTVbvauPGjRaLpeFdnTx5Ur1CXl6eLS/oRhAdHe3u7l53ZQIDA+v2
e0JCgpeXV90rDBkyhC200/rcEah7lxd17+SyrfPqq8oe8gEBDrVpU/Zejnbv
pkOHzO6ZM+3Y/1OyBlUtTFv355uQiIJ1P17Mpy8KKThn/pBZtiv4wYJg3cf9
S8j3tgv5/g9CipwlQXC6/m+9hewaIaQR6z6yM3Ec2hd1LwfUvam0ut3rUlZW
5u/vrybtypUrz549m5WVlZSUtGPHjkGDBrGF7NJ63+Dn5ORMnz5dvUm9uk9M
TFSXL1my5OLFi5mZmWwJu466MDIysu6Va2pqDhw4oP4U+9X99evXPTw82P3P
mTMnNjb26NGjY8eOZf+cOXOmegX26Pz8/NSPMk6ePHnq1KmgoCD2T7awsrLS
Hqt0R6DuXV7UvSxraig9nRITJU9E0L07dexI7u60YIFDff99pe4XLaIVK8zu
Dz+0zsjIkDWoaoG6R92j7lH3qHuJsLrf+zpxRN3LAnVvKq1u97qsWrWKXcT6
t+FX1deuXVO7ODo6unbhvn37PD09a7/jrlf369evV78ZZ+Ved7m6b0BISEjt
Ehbd7J91vy63U93v2LGD3fnQoUMrKirUJTExMWyJu7t7WVkZ++fVq1fVFWCP
V70CexupLrl8+bI9VumOQN27vKh7WVZWKoer+/iQp6dMW7ZU/jxyRDk/nSNd
uZL69aMOHei118xu375NT5w4IWtQ1QJ1j7pH3aPuUfcSYXW/5w3iiLqXBere
VFrd7rWwvFW/Ot+2bZvVV8vq1atZBa9du7Z2iZubG7s+q/WVK1c2rPuFCxeq
35LXu5+4uLhx48bNmDGjduf87du3q58qREVFqbvN21b3SUlJbE2s7vOvcvHi
xY0bNx4+fLh2SVFRUd3PE1JSUtR/1u6rX1paqq5SfHy8DaskF9S9y4u6l2VB
gbJDu5cXDR0q0zZtlD9Pn3b0wzlwQDmTwsCB5OFhdidNas7+E5E1qGqBukfd
o+5R96h7ibC6508f4Y26lwTq3lRa3e61nDhxgv+9edkt6i5hXX/8+HFW07t2
7WpY9wcOHGAL3dzcNmzYYPWA/Vr279/PqjwnJ4f9Xd1DwLa6nzx5MrttWFhY
vb0FtGDlvnz5cnaTsWPHqkvYY/Hx8VEPTCguLmaPNzw8nP1z8ODB2DMfOkDU
vRQtFuWUgq1b08iRkveQf/tt8vPToe7Z66G0VNkWsLS0I2eKV1mg7lH3qHvU
PepeIqzud71NHFH3skDdm0qr270W9Qt0b29vG15IO3fubFj3rJ2nTZtWu7O9
v78/S+kTJ07cvHmTc1ci392np6erRwqsXr2af031WAD1Zw0bNiwpKan2ori4
ODXwPW7B/sLu89ChQzasj3RQ9y4v6l6KrO7Pn6e2bZUd2lmJS/Srr6hnTwoM
pLAwqI9btrSuPXLKfpi27qNbk4iCdS84fXqPtUIKxlrgWNvd1E1IwU9FEp8S
0n2ekC+dFnLiaNv1CBVyzAQhBT+MMmLd73yHOKLuZYG6N5VWt3strIjV3ezr
LoyPjw8LC/v+FktvsWrVqoa3tVr3jMrKyvDwcG9v77rH1A8cOHD79u1aX6+L
1P0vdfZA2LBhA+dq586dq10fX1/fuifpYyFfO7mfip+fnzMcdM9A3bu8qHsp
qnX/2mt08qTke/bxoXbtlKPvO3aE+tinD467t6Ooe9Q96h51bw9Y3e94lzh6
90PdywF1byqtbvdaNm7cqJZs3YVRUVED/hNW3w1vq1X3KhaLJTk5mf1eh4SE
sLRX72fBggVWr3zbuo+LizvOZeTIkeqPYD9R604qKytzcnLYXbHVUK984cKF
X24dua/+Mzw8PO8WGzZsUI8vSExM1Lo3h4G6d3lR91K0X91v26Yc/z5ypGjF
QJsNDW3B/kORNahqgbpH3aPuUfeoe4mw9+Tb3iOOqHtZoO7NY71Ib/hi2Ldv
n3rRjRs3ahdmZWUd/jcRERF3VPcs6ktKSupds6CgoDao1QPt63Hbuh8/fvyA
RnP69Gmt+6ll3LhxA24daM/+rrb8woUL614hLCxsQCP29ncAqHuXF3UvRfvV
PXs2EhJo/36omydOtLXTSVXqgrpH3aPuUfeoe4mwuv/hfeKIupcF6t5UWt3u
tdSe+u348eNWXy1XrlxpfN2ze3Nzc2NXLi4urnflmpoaX19fdv2DBw82vKvb
1v327dtXcFHvnBEcHFxeXl73tjk5ObGxsfn5+XUXqlMCjh49mv19woQJDVfs
7NmzbOGoUaO0VslhoO5dXpes+/x8WryYJk+m6dMdZEgIDRtGTZvS8eOSnw22
XXJyKCXFkCYn09GjFBlpbKOj2+bm5soaVLUwbd0fbkciCtZ9k/NCCq78J+uF
/HKl7W79QMgtHwop8rkEs/tGIT9fLeQ4AT4NJxEFXzCCD9yIdc9/GQ9B3UsC
dW8qrW73ugQFBQ24NT983VnmamFd3Pi6r518PjIyst6V2UVDhw5lF8XExDS8
K8Hj7jMyMtj6s3tgj6W0tLTepbNmzWIXbdq0qe5C9k+2MCQkhP195syZ7O+b
N2+uewUW+2whC3/bVkkiqHuX1yXrnj2oNm3ogQfo6acd5FNP0T//qXjsmP5P
oPNYWko//UQ//GBs9+9vc/36dVmDqhaoe9Q96h51j7qXCKt7/usQdS8L1L2p
tLrd65KamqrGNQvkQ4cOqe+gWIyzZN6wYYN6UeP3zFd3aGds2bKlsLBQXciy
fc6cOQNuTURv9RxzInXPcn706NHs5oGBgQ33Gfjl31/Te3l5sUekLrl69ao6
zf6OHTt+uTX4sL8PGTKEPRXqFW7cuOHv788Wrlu3zoZVkgvq3uV1ybrfvVuZ
an7kSNq61UFu3kzffafMfXfihP5PIMfKSiovd5CFhcpnHew56dvX2I4Z87I6
TYpdQd2j7lH3qHvUvUTYG+yIj4gj6l4WqHtTaXW71+Ps2bOsbWuPW/fx8VHj
V2Xs2LF1p5evxWrdFxUV1T0jnre3t/ptvvoRwdGjR62ugEjdq0f0s5Ws/TCh
HuXl5exSdR1CQkLmzZun/rgJEyaoHzVUVFSonw8MGjTou+++W7x4sfpsDB8+
3OrHBQ4Gde/yumTdb9hAHh7KucwyMhxkWpqyC/crrzh13dfUUG4uZWVRZqYj
TEmhTZvod7+jjz4ytl5eL505c0bWoKoF6h51j7pH3aPuJcLqnj99xJD+qHs5
oO5NpdXt3pDc3Ny1a9fWlriaukFBQXv37q2urrZ6k927d7OrrVixot7yqqqq
8PDwUaNG1d6Vp6dncHCw1T3/VdQPE+rO7Nd4duzYwX4W/7b5+fnz58+vXZ+B
AweuWrWq7j78hYWFLOrd3NxqrzNv3rx6h+rrBere5XXVuvfyUv5kD8oxlpYq
8+l16iR/Vj2J5ufTxx8rU/917uwIX32VWrSgJ55Q5hs0tImJ7YuKimQNqlqg
7lH3qHvUPepeIqzuN3Ynjqh7WaDuTaXV7a6FxWJhSZuWlpaZmcn+LvhKY/mc
kpIi5a74WN3b3+r6XLly5dq1a1VVVVr3c+0WFRUVUldQCNS9y+uqdc8e1ObN
jltndc58VvfHjil/d04zMujhh+nee+kvf3GEDzxA991Hzz+vbFBDW1LSQWvc
lohp616klW4hVPfPxwp5srmQF54TctIo2xU8WcC2LkL++KaQg+YK+f4PQoq8
WKf5kYjb3xNS8DfNiHW/4WPiiLqXBereVFrd7sBAoO5dXtS9FNW6f+45WrNG
OYGdc7prl/Jl+tatynPrABMTlQ3x3/9NXboYWw+PZtgz334KFgfqHnWPukfd
W4XVffgnxNELdS8J1L2ptLrdgYFA3bu8qHspsrqPi1Pqnj2T+/Y5qd9/r9S9
9HP2aVlervyshx+mN980tgMGNDt16pSsQVUL1L2toO5R96h71L0VWN2v+4w4
ou5lgbo3lVa3OzAQqHuXF3UvxZoaystTjjRv10750zlt2ZIef9xx5+xjz0lx
MR04oJzCwNAePtw2JydH1qCqBereVlD3qHvUPereCqzu1/Ygjqh7WaDuTaXV
7Q4MBOre5UXdy7KoiHr10v+LZo7t2tEjj9D+/VRS4iALC5VdGqKjje358+0K
CgpkDapaoO5tBXWPukfdo+6twOp+TU/iiLqXBereVFrd7sBAoO5dXues+wcf
pCtXqLraRsPDdah7dc1Z4zutJ08qH5tMnkw//OA42VYwuvv2tcnOzpY1qGqB
urcVobp/Z6eQH2wVMvEpIcdMsN02R4Vc0UvIpX2FHDhfyCeShBR5sYp8IMPc
8a6Qgr9phnsnz+p+1RfE0esb1L0cUPem0up2BwYCdX9br19XvmW+etWo7t9P
/fo5V92XlCgzrrMXjM0HmLM37X37Kidb1/2xOJUpKdSsGY0YQfPmwTtw3bpW
6enpsgZVLVD3toK6R92j7lH3VmB1v/JL4oi6lwXq3lRa3e7AQKDub+vWrTRj
BgUHG9Xhw+n1152r7isr6e67Ff/8Zxv94x+Vw8zDw/V/LE5laSn5+FDPnvTp
p/AOHDbspXPnzskaVLVA3dsK6h51j7pH3VuB1T3/dYi6lwXq3lRa3e7AQKDu
+RYVKfs5jx9PgYFGdcgQJYSdqu6rqui995Rzx9s8fdxzzyn3sH69/o/FqWSb
eNEi5eU6ejS8A2fPbnHp0iVZg6oWqHtbQd2j7lH3qHsrsLpf/hVxHIy6lwTq
3lRa3e7AQKDuOVZX05kz9MADSiCPGWNUPT2pY0fnqntmQYGQK1bQ4ME6HHfv
/JaVOW5KPZexrKxjdXW1rEFVC33r/kjuL3opPMWZkPteE3JxfyHDPxWSP2MY
379fEzKiq5CLvhFybKCQe18XUiSQBX/0sOlC8ieQv62GeyfP6j6sD3FE3csC
dW8qrW53YCBQ9xxZ3Z88SU8+qewBrvupzG2WhfBnnzld3Quqy5z5uhsbq2zN
776jOXOgTNesaZWamiprUNUCdY+6R92j7lH3EmF1//3XxBF1LwvUvam0ut2B
gUDdc2R1f+IEvfIK/fyz/itjs044Z7645qx79iv2+uv02GP09NNQpl26NDl0
6JCsQVUL1D3qHnWPukfdS4TVPf8Qj8EDUPdyQN2bSqvbHRgI1D1H1L3TKlj3
mZnKWc7ZzbduNZJeXspBFqNGifYOrGdoaIvk5GRZg6oWqHvUPeoedY+6lwir
+yX9iCPqXhaoe1NpdbsDA4G654i6d1oF6/78eZo1i/r0of79jWTLltS2rbJ/
fkIClOmVK+2Li4tlDapaoO5R96h71D3qXiKs7vkvJNS9LFD3ptLqdgcGAnXP
EXXvtArWfWCgMtngxInKuQ4N5FtvKScLWL+eIiKgTCMj22RnZ8saVLVA3etS
97vfEvJgByEFPxyY42m7vVYIueVDIT1ChZw1RMiUR4TkT9TG99TLQrotEHLC
GCEN906e1f3CAcTRE3UvCZPXvY7/geqi1e0ODATqniPq3mllde/lRZs2kcVi
iwMG0Ndf09y5tGyZkfzkE3rhBVq4kJYsgTLdtKl1enq6rEFVC9Q96h51j7pH
3UuE1f0CN+KIupcF6t5UWt3uwECg7jmi7p1WVve9e9OCBcqmsUGW9n5+dPCg
jTfXy4gIGjZM2evAywvKdMqU5vHx8bIGVS1Q96h71D3qHnUvEVb38wcSR9S9
LFD3ptLqdgcGAnXPEXXvtLLO7dGDgoOVg9Bt8IsvlLnpYmL0fyB35LlzynYc
MIDc3KBMAwNfjouLkzWoaoG6R92j7lH3qHuJsLoP9SCOnm6oezmg7k2l1e0O
DATqniPq3mllYf7qq9S0KX34oS0++yx5exuv7ouKKC1N/znoXE/MqmdXm5wn
EQXrftfbQkZ2FnL6MCGDh9vuF6uEXNFLSMG6nzhayB/fFHL7e7Z75VEhh8wS
cuZQIQ33Tp7V/dxBxBF1LwvUvam0ut2BgUDdc0TdO63p6dS1KzVpQu3a2eJj
jyn7Yztt3Wdm0rVrymOEjjEr65WysjJZg6oWqHvUPeoedY+6lwire/4eLKh7
WaDuTaXV7Q4MBOqeI+reaa2qUjZKWppSwTbYty+NHu2kdV9eTh9/TG3aUKtW
0EF+/nnT6OhoWYOqFqh71D3qHnWPupcIq/vvBhPHQah7SaDuTaXV7Q4MBOqe
I+reVfXwoBEjlFn1cnKczvR0pTebNKHmzaGD/PTTF1H3qHvUPeoedW/vYVAu
rO75MzCg7mWBujeVVrc7MBCoe46oe1e1Xz964w1l1n1PT6dzwAD6619p8WLl
tQcdY2xsu8LCQlmDqhaoe9Q96h51j7qXCKv7b72JI+peFqh7U2l1uwMDgbrn
iLp3VX196YMPqGdP5dR4zuYXX9D//i+tXk2JidBBXr36SklJiaxBVQvT1r3n
HBJRsO43fCzk5o+EFPxswTfEdgfOF5I/WdltHbBQyEXfCFn6eyFF5sw/3E7I
EF8hBV+uhnsnz+qe/3kF6l4WqHtTaXW7AwOBuueIundVr12jqChatoyWL3c6
582je+8lPz/l63voGDdtap2eni5rUNUCdY+6R92j7lH3EmF1P92HOA4aiLqX
A+reVFrd7g2xWCwXLlwICwubOnVqQEDA5MmTV6xYcfDgwerqaq2b5Ofnz507
NyoqquFFiYmJ4eHhM2bMYHc1c+ZM9vfY2NiGV7t+/Tr7xV+yZMnChQu3bNmS
lpbWmBewIDdv3ly6dOm6detql5w5c2a3BocOHXLAKvFB3XNE3buqhYUUF0eR
kc7oDz8ox937+FBICHSQYWEtU1JSJI2pmqDuUfeoe9Q96l4i7E0+/wlB3csC
dW8qrW73erBOZ1E/wBqTJk3KzMxseJOKigp2EbvCsmXL6i6vqanZtGmT1bva
uHGjxWKpvebBgwfd3d3rXsHNzW3Hjh0ir+3GMG/ePPazhg8fXrtk1qxZVleY
4e/vb+/1uS2oe46oe1e1pkbZuJWVzmh5OS1apBw7MGgQdJBBQc3j4uJkDapa
oO5R96h71D3qXiKs7qf5EUfUvSxQ96bS6navS1lZGWtYNWZXrlx59uzZrKys
pKQkFtqDBg1SC7feN/g5OTnTp09Xb1Kv7hMTE9XlS5YsuXjxYmZmJlvCrqMu
jIyMVK+WkZGhpv2MGTOOHz9+5syZuXPnqtdh15f1Um/IoUOH1J9St+7ZwvD/
hD0PtY/CfivTSFD3HFH30PHW1NCPP1JoKM2YAR3ksmX47h51j7pH3aPujVf3
/LklPVD3kkDdm0qr270uq1atYhd5eHgkJCTUu+jatWtsObu07qmI9u3b5+np
Wfvtdr26X79+PVsYGBhYU1NTd7m6b0BISIj6T/b7zv7p4+NT+7mBxWIZOXIk
W1h3n3m5ZGdn16553bpvCFsH9VGUl5fbaWUaD+qeI+oeQnPYUdKAysO0dd81
gkQUrHvBud+X9hVy4QDdbHdYyNmDhRw0V8j5A4U821TI1Z/b7r7XhBw/TsiU
R4Q0Yt1PGUEcUfeyQN2bSqvbvZaysjL1C/pt27ZZfbWsXr3a3d197dq1tUvc
3NzY9Vmtq19w16v7hQsXsoVz5sypdz9xcXHjxo2bMWOGunN+eHg462v2Z93r
bNiwgd127ty5jXwlqyQlJbE1qbvPv1Wqq6unTJmifh3Pr3t194OBAwc6YBKn
xoC654i6d4zFxcoEd4GBNHUqhDq4ZEnLK1euyBpUtUDdo+5R96h71L1EWN1P
DiCOqHtZoO5NpdXtXsuJEyfU77Lz8vKsvlrKblF3Cev648ePs5retWtXw7o/
cOCAegQ9S3WrB+xzUL/fj4iIuKNbTZ48md0qLCys3t4C9di6dat6IEBKSgqn
7svLy9VdCNj639Fq2A/UPUfUvWPMyqJOnejXv6a776Z77oHQ0bZp88K+fftk
DapaoO5R96h71D3qXiKs7oNGEkcPd9S9HFD3ptLqdq9l+/btbLm3t7cNL6Sd
O3c2rPvS0tJp06bVnZVu+fLlJ06cuHnzJv/eaj8WuNMvaNLT09X97VevXq11
neTkZHbPQ4YMycvLu3r1Kqfu9+7dyy4dPHgweyB3tBr2A3XPEXXvGNnT+/LL
ykqOHSv6Th5CGwwNbcGGcVmDqhaoe9Q96h51j7qXCKv7SaOII+peFqh7U2l1
u9fCiljdzb7uwvj4+LCwsO9vsfQWq1atanhbq3XPqKysDA8P9/b2rjv5/MCB
A7dv36719frp06fVHf7r7avfSGr3QLD6hXtZWdmoUaPYpceOHWP/5Nf9uHHj
+B8UOB7UPUfUvWNMT6dnnqHkZMrLo/x8CB1tYWEH9j+LrEFVC9PWvdsCElGw
7g90FPJYKyFDPYScOdR2h84UcllvIUUmpmOKPHBm/LNCjppkuwc7CMnfz/y2
XnhOSCPW/YQxxBF1LwvUvam0ut1r2bhxI1vu5+dXd2FUVNSA/8Td3b3hbbXq
XsVisSQnJytnugwJYWmv3s+CBQsaXvPAgQNq2s+ePbuqqsrqvcXFxR3nou5O
z2A/sd5t1Rn7Fy5cqP6TU/dshdU7ycjIsLoauoC65+gadX/pEg0eTNOmKfmc
luaMHj+u1H1KivL5Q1UVz+JiOnKEVq+mlSshlOa2ba0dMCyj7lH3qHvUPepe
Iuw9eeBY4uiOupcE6t481ov0hi+Gffv2qRfduHGjdmFWVtbhfxMREXFHdc+i
vqSkpN41CwoKWNerPygnJ6fuRer9MxYtWsT5amb8+PEDGs3p06drbxgXF6cu
3Lt379FbqAfge3l5sb/HxMTU/SlhYWED6kzs7ySg7jm6Rt2zjTJ0qDJnHXss
Z844o7t309NP09Wrysng+I+F1f2mTRQSQsHBEEpz6VLMqoe6R92j7lH3xqt7
/qEKqHtZoO5NpdXtXktGRoYav8ePH7f6amFvqBpf9+ze3Nzc2JWLi4vrXbmm
psbX15dd/+DBg7VL1OMCGBs3buTPibd9+/YVXNQ7ZwQHB9c9jZ16OL8WgYGB
tdesqKhQj98/deoUZ00cD+qeo2vUfXa2MiN9q1b00UfUrZsz+u679PDDt6/7
ykqKiaEmTcjXlwICIJTmrFktLl26JGtQ1QJ1j7pH3aPuUfcSYXU/bjxxRN3L
AnVvKq1u97oEBQUNuDWPXFJSUsNLY2NjG1/3FovFx8eHLYyMjKx3ZXbR0KFD
2UW1X5ezJB9waxq92t63mYyMDLb+7N7YY6k3G97ly5fX/ifz589n1/Tw8GB/
//HHH2uvqe6xz9bHAUd33hGoe46uUfcFBbRzJ/3rX9SsGb30kjP6wgv00EO3
r/uKCjp2jH71K/Lzo9GjIZTm7NktrP4PJRfUPeoedY+6R91LhNX9mEDiiLqX
BereVFrd7nVJTU1l8a4G/qFDh65fv/7LrRhnybxhwwb1osbvma/u3M7YsmVL
YWGhujAvL2/OnDlsoaenp9rOFy5cUK92+PDh6v/ktmeurwfL+dGjR6tfxDfc
Z6AhWsfdR0dHs+Xsru7opzsA1D1H16h7i4VKS5WZ665dc1JPnqRnn7193ZeX
K0foP/ggpabqPw8bdCUxq55dfXcHiShY9/Pchbz0pJD+U4T0nGO7vVYIGf6p
kN7fCtljrZCCW63TftsV/FRkeLCQm7oJacS6Hz2ROLp7oO7lgLo3lVa3ez3O
nj07ZMiQ2v3VfXx81H3UVcaOHRsbG9vwVlbrvqioqO4Z8by9vdVv89WPCI4e
PapejZW41t7ys2bNuqPXs3pEP1vJ2g8T+GjVvToDwPz58+/opzsA1D1H16h7
5zc9XTnuPiGBioqUI+u1zM2lAwfoH/9gLab/Oruw7KnOzFQ+bDGPGRmvlJWV
yRpUtUDdo+5R96h71L1EWN3zd6VA3csCdW8qrW73huTm5q5du7a2xBmDBg0K
Cgrau3dvdXW11Zvs3r2bXW3FihX1lldVVYWHh6snoVPx9PQMDg6u3a/SYrHU
zqIvXvc7duxgP6vurIB80tLS2E8JCAiot3zRokVs+datW+/opzsA1D1H1L1j
ZHn1pz8pU5dv2sRz3Tpl5v+//hV1b183b6YPPqBHHqHHHzeL77zTRPwYrtuC
ukfdo+5R96h7ibC6HxlEHFH3skDdm0qr210L1t35+fmsfzMzM+90D/mGlJaW
pqSkSLkrPs52pLxcUPccUfeOMS1N+UZ+9mxauJBnaKgyAdpf/mKiumevwOxs
yspyqHPnKnMw/v3v+kc36t413pyg7lH3qHvUvT1gdc//DRqIupcE6t5UWt3u
wECg7vlthbp3gEVFNHMm9etH33zDs29f+vBDeuABs9S9xaIcs/D119Sjh0Nt
25Y6d6Yff1R+nU1iWtor9WZMtQeoe9Q96h51j7qXCKv7EVOJI+peFqh7U2l1
uwMDgbrniLp3jGVlyinvJ026jeOVs9uY6Lv7ykqKj1dCu08fh9q6NbVrR3v3
6h/djqz7kpISWYOqFqat+7d3kYiCdT/HU8hdbwspkufMEF/bfeUnIQXzfMBC
IcdMEDLjb0KK9DX/9Ou3deJoIVMfFtJw7+RZ3fM3B+peFqh7U2l1uwMDgbrn
iLp3mKxkS0puY34+HTxooln1iospMpKaNFFOaOhIe/WiRx+lkSNp8mSzuHhx
y8uXL8saVLVA3aPuUfeoe9S9RFjd+00jjgMHoe7lgLo3lVa3OzAQqHuOqHun
srxcOd/9/feb5Yx46ekUEUEvvkinTzvUiRPprbdoxAjRqjKQoaEtkpOTZQ2q
WqDuUfeoe9Q96l4irO6HTSeOqHtZoO5NpdXtDgwE6p4j6t6pZHV/9Cj96le0
fTvt3+/67tqlTEfQqhVVVTnUtDTlG3zdixt17zJvTlD3qHvUPereHrC695lB
HFH3skDdm0qr2x0YCNQ9R9S9U1lZqXyz/MADyuT5S5e6vuxh+vlRixaOfp4L
CujsWQoLc3a//16amze3vnbtmqxBVQvT1v1zF0hEwbpf95mQOuY5c+WXtiuY
50v6CflQmpAHOwgZ0VXIcQJs60IiCk7Kt3CAkIZ7J8/qfuhM4uiGupcE6t5U
Wt3uwECg7jmi7p3KmhrKyFAmdX/9dWWuOZe3Uydq3pyaNtX/mXdC2YuhvFya
FRUd7X1m1V9Q96h71D3qHnUvFVb3/Jcx6l4WqHtTaXW7AwOBuueIunc2i4po
wwZavtwULlxI/v7UsqX+T7uzef06rVpFo0djz3xjvDlB3aPuUfeoe3vA6t7r
O+KIupcF6t5UWt3uwECg7jmi7qGOFhcrp6Vr107/NXE24+KoSxdlyPrtb+XY
rNnze/bskTWoaoG6R92j7lH3qHuJsLofPJs4unmi7uWAujeVVrc7MBCoe46o
e6ijJSXK3Hr//CctWgT/w8BA5beyf39len8pLlzYEt/do+5R96h71L29h0G5
sLrn/wKi7mWBujeVVrc7MBCoe46oe6ij5eV05Ajdcw916AD/wxYt6Pnn6eBB
KiuTI467t6svxJCIgnU/fZiQH20WUnDlP1tnu/+KE/I7LyHbHxKy5xoh1/YQ
csgs293zhpDdNwop+GGU4d7Js7ofNJc4ou5lgbo3lVa3OzAQqHuOqHuooxYL
5eXR6tXKMeawroGB9PTTNGaMcloBKa5d2yotLU3WoKoF6h51j7pH3aPuJcLq
3n0ecRyAupcE6t5UWt3uwECg7jmi7qG+VlVRcjKdOgX/w5Ur6cUXyc2Nhg2T
Y0hI84sXL8oaVLVA3aPuUfeoe9S9RFjdD5xPHFH3skDdm0qr2x0YCNQ9R9Q9
1NeaGiotVc4UAOuamkrr19OECRQUJMdFi1pevnxZ1qCqBeoedY+6R92j7iXC
6t5tAXFE3ctC1mvDcK8xQYz+eI2+/qYFdc8RdQ+hbdbU2NGyMkpIoNmzpbl6
davU1FRZg6oWqHvUPeoedY+6lwir+28WEkfUvSxQ97Zh9Mdr9PU3Lah7jqh7
CO9Ui0U5l19+vh3Ny1NOeX/1qjQzMl4pLS2VNahqYdq6f/BnElEwkH1mCPnV
ciFHBulmszNCCj5vgnPmTxgj5OaPhJw0ynaX9hWy3xIhhwcLabh38qzu+y8m
jgMGo+7lgLq3DaM/XqOvv2lB3XNE3UN4R9bU0M2bFB9P588bycTE9oWFhbIG
VS1Q96h71D3qHnUvEVb3/CcEdS+LAcCs6P3SA7aAuueIuofwjiwro7176ZFH
6IUXjGTXri8ePXpU1qCqxQDUPeoedY+6R93Lg9V936XEEXUPADAhqHuOqHun
srJS2R/72jXKyIBO6uXLtGwZ/e53ypz2BrJ7d9Q96h51j7pH3Ruv7vuEEcdv
UPcAAPOBuueIuncqExOpd29q0oRatKCWLaEz+vLL9MwzyjYqLDSSN292qKqq
kjWoamHauhecKEyw7oOHC/nGHiFDPYT0m2a7HQ4KKTir3q9qhPw0XMiJo4UM
HGu7K3oJ+f4PQo4fJ6QR6773MuKIugcAmBDUPUfUvVMZE0PvvENdulD37vTx
x9AZ/fBDateOnn1W+SjGQKaktC8uLpY1qGqBukfdo+5R96h7ibC65+88g7oH
AJgQ1D1H1L1TeeSIcog0+5NtFOicHjhAwcF01100ZIiRnDq1eUJCgqxBVQvU
PeoedY+6R91LhNV9rxXE8Rsv1D0AwHSg7jmi7u1taamyX3RWVqP84Qd67jmK
i6OUFOikJiTQunXUujUNG2YkQ0KaX7x4UdagqgXqHnWPukfdo+4lwur+i5XE
EXUPADAhqHuOqHt7e/kyHTum9GBjnDCBnn9embqNbReLBTqjbNNcv05btlBo
qJFcu7ZVWlqarEFVC9Q96h51j7pH3UuE1f3nq4kj6h4AYEJQ9xxR93a1poZm
zKDBgxv7Lr1/f/rXvygzU7mhY9aQ5WppKRUUwDswK4tOn6bISCMZHd02Ly9P
1qCqhWnrfpwoQnU/f6CQTyUKKfjJRo+1tvvRZiEFTxbw4RYhBT9UEYxckRfr
Z+tIxEdShBT8TTNi3fdcQxz7o+4BAOYDdc8RdW9XWTt37EgPPEBffNEo335b
ma7NkXVfVUV5eXT1KnRxMzJeKSsrkzWoaoG6txXUPeoedY+6twKre/5vAeoe
AGBCnKHuWaw5pyzujh9H3dvL6mrq1EnZ2X7TpkY5ebIyq16mA+v+wAGaM0c5
LluwL6CTGxraIjk5WdagqgXq3laENi7qHnWPum8kRqx7/jEaqHvdsVgsFy5c
CAsLmzp1akBAwOTJk1esWHHw4MHq6mq9V81elJWV7dmzZ8mSJex3avz48ewv
u3fvvnnzpt7rBUyEk9S97scLW7WyUjkqHHVvJ1ndv/qqYiOvf+QINWvm0Lqf
NInatKHf/Y4efhi6sm+80eTAgQOyBlUtUPe2grpH3aPuUfdWYHX/yXri2H8I
6l5P8vPzWdQPsMakSZMyMzP1XkH5pKenjx49uuHjDQgIYBfpvXbALOhe91lZ
NH26/l/eWXXsWOVYb1aUGRn6t7DraUPdP/EEjR9PM2c6yPffpy5dqG9f+vZb
6MquXNnq6tWrsgZVLVD3toK6R92j7lH3VmB1//EG4oi615GysjJ/f3+1bVeu
XHn27NmsrKykpKQdO3YMGjSILWSXut43+NOnT2cPbfjw4YcOHUq7xeHDh9Xn
wcfHx/UeL3BOdK/7c+eU787+9Ce65x6n8+676X/+RynKa9f0b2HX807r/tgx
evxxevpp5bx4jvHvf6devWjXLiopga5sWVlHB/yfi7q3FaG6X+AmZPtDQvLT
47aKTJ/++l4hO0cK2faIkF9/L2TQSCFFXqxfriQRH08WUvA3zYh1z/98DHWv
I6tWrWKvKA8Pj4SEhHoXXbt2jS1nl0ZHR+uybnaiuLh44MCB7HGdOnWq7vK4
uDj1Uw4HnHsXAIbudb9tG3XrRsuXK8c4O5v79tGCBdSyJfbMt4t3Wvc3btCe
PRQRQZs3O8guXejDD8ndXdlFH7qwCxe2xHH3qHvUPeoedW/vYVAurO67RhDH
fqh7nSgrK1O/oN+2bZvVK6xevdrd3X3t2rUOXjG7kpGRoVZ8ampqvYvmzp0b
FBR09OhRXVYMmA3d657d6ptvKCFB/9i0mp8nMGe+PZ/eO6p7dv3CQkpNdZys
67t1o+7dqU8f6MqOGvXyhQsXZA2qWqDubQV1j7pH3aPurcDqnn+ACepeL06c
OKF2rtbZZstu4eC1sjc1NTV+fn7sUY8fP/706dPl5eV6rxEwKah7fk6i7u36
9N5R3as3KS93nGfO0IYNygH4330HXdlVq1o1/KRdOqh7W0Hdo+5R96h7K7C6
50/ggLrXi+3bt7OXk7e3t94r4miOHz/u7u6ufrLB/jJjxowdO3ZcuXKFhb/e
qwZMBOqe35Koe7s+vXda9w725k1lXoiICPMaHm4Kd+9u44DJe1H3tiJU94Kh
JxhrgnUv8sHC4NlCvr1LyCbnhXzptJAeoUKKvFgHzSURn40XUvA3zYh1/8FW
4oi614vVq1ezl9PUqVPrLoyPjw8LC/v+FktvsWrVKr3W0H4kJiZOmTKl3pz5
48ePd8lzBADnBHXPz0/UvV2fXiev+5oaqqig4mKTWlBAMTF09qzre/Fi+8LC
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
lbovKhLdw1/VYqENG+j772npUhc3IqL1tWvXZA2qWqDuUfeoe9Q96l4irO5b
HSOOqHsAgAlB3fPzs27ds9gpKaFr1ygz0yymp1NkJN17r73qvlMnatWKEhMN
71tv0Zgxttf91au0eDE1bUqtWwt5//3KJHi5ucrX7lJkv9H790vbz99pjY5u
m5ubK2tQ1cK0dd9jLYkoWPeCs9Z32SZk72VCfv297QquucgHC8y/Zgr5abiQ
Q2YJ2X+x7Qp+KtLkvJA+M4Q0Yt23PE4cUfcAABOCum983RcU0JYtyp7kH39s
Frt1ozffpD/9SXns0p/emhp6+23lo4MnnzS87FH4+9te91VVyucnaWnKxyki
PvOMMv3+wYN05Igc2V1FRdG+fS7usWNt8/LyZA2qWqDuUfeoe9Q96l4irO6b
nySOfYah7gEApgN13/i6v36dliyh5s1Fd582kO+9p3y9br+6792bnn2WnnrK
8ArWvSxbt1am5tuwgSIi4B0YGdkmOztb1qCqBeoedY+6R92j7iXC6v7lU8QR
dQ8AMCGoe4716j4xkdzdKSSEtm41i5s20axZdM89dtkzn8lyODVV2S/d6L77
rtBx97KcPl3Z4+LDD5V5AGDj9fJ66cyZM7IGVS1Q96h71D3qHnUvEVb3L50m
jqh7AIAJQd1zrFf38fHUp48yydj582bx9Glav57+/Gd71b3LKDhnviy3baPh
w2nIEPL2hnfg1Kk4Ix7qHnWPukfdG6/um50hjr1R9wAA84G659iw7vv2pfBw
ZblJLCtTAt9Oc+a7kk5S9xUVVFxMN28qf8LGW1rasbq6WtagqoVp6/7DLSSi
YN0L9s5Xy4UcsFBIkc8leq0QUvBTEfpFyNEThVzgJqTIxxpe3wnZ4oSQghvd
iHX/4jniiLoHAJgQ1D1Hq3W/fr3+K+Yw7XpGPFdSl7q3WJTfuLNnlU9goIjx
8e0LCwtlDapaoO5R96h71D3qXiKs7vk7M6DuAQAmBHXPEXWPum+kutR9WZky
ld8771DnzlDIfv2anjhxQtagqgXqHnWPukfdo+4lwur+hRji2NsXdQ8AMB2o
e46oe9R9I/3gAxo8WHm1XL7sOGNj6auvlLr/4gso5IgRL50/f17WoKoF6h51
j7pH3aPuJcLq/vlY4oi6BwCYENQ9R9Q96r6RduxIrVop09n5+jpONzflZHye
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
VdmUTui+feThoZxr/swZfWTPT//+dPfdyp9Dh5rR4ODm7L2crEFVC9S9raDu
Ufeoe9S9FVjd/5eFOGrVfWJi4kUNMjIyfvl33U+dOrXeDdkStpxdjbNW6nXq
TsfXENQ9AMB+oO4brw1nxCsuVuYoS0nR023bqGVLs9f9xIlK3eu+JlY9eVI5
6OOtt2j1an1ctEiZ2e/JJykoiObMMaNr1rSyepIjuaDubUWo7n1DhPSfIqRg
ZorU/Wv7hJziL+RdhUK++aOQYyYIKfJi7b2MRHw2XkjB3zQj1v2vaohjT2t1
b7FYOOemnzdvHrtOSkoK+/v48ePr3VZ9ltLS0rRWKT8/3+0WdafjawjqHgBg
P1D3jdeGur9wgb79VokmHfX0VE5fjrp32rq/fl3ZK55to/bt9bFNG3rqKRo1
irKzlb30TWhFRUf2fk/WoKoF6t5WUPeoe9Q96t46y26H1VutWLFiuQb79+//
5db569mzMWTIkJqamro39PLyYsvZpVrrExkZya4wY8YM/mqj7gEA9gN133ht
qHv26AIDlYO+ddTNjf71L9S989Z9YSGtWkVffaXbKfnYq/q115Rfw507lefK
hJ4+3S4/P1/WoKoF6t5WUPeoe9Q96t7R+Pv71/uanv2dLQkICODcav78+ew6
u3bt4t856h4AYD9Q943Xhrpv1kw5mx5L7PHjdfP/s3cfYE5U7f//DzwIiAjS
m4gU6UVBAelFsIA8CIiAFBUUAbuAIuCXIqJipUgRlIemgIggKiDSi/Tee4dl
WQQWlt1ld3939vydf0w22clMymZ5v6774mInk5mTSXIyn2TmDOk+jaf7xETH
qA5XrqirV0NT5887Ds7PnVvlz68KFLgVq379Sl4GN/YX0r1VpHvSPemedB9s
s2fPlg0yatQofXV7+XfkyJEyZc6cOXqGa9euHTp0yGVE1r59+8o8O3bs8L5w
0j2AwCHdmy8L6b5CBTV2rFq8WC1fHrKS4Fa1Kuk+7ab7kFdcnNq2zXGQic0Y
Fb41ZsxDspPmr07VE9K9VaR70j3pnnQfbFeuXHn77bf1yPmS6D/88EP5v4R3
47B8ifAy5Y033jDucuPGDX3y/oULF7wvnHQPIHBI9+bLQrq//361erW6fj2U
zWbMfNK9mZJX6S1bN25w3n26Tffdx9mqYe/Zqk/62KoO061XxZ22avD7tqrA
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
K1fWioiICHRfR7q3inRPuifdk+4BAKaQ7s1X+Kb7sCv/jplvvmym+6tX1fjx
6pln1F9/qW3bglGffaZq11aFC6tevSjrNWzYg3v27Al0X0e6t4p0T7on3ZPu
AQCmkO7NF+k+aBWqdH/jhlq3TuXM6Tjc3UI1buw4Wr5tW8dF1qKjg1EnT6rv
v1fvvqs+/piyXpMmVT9y5Eig+zrSvVWke9I96Z50DwAwhXRvvkj3QatQpfu4
OMfAenfdZXGo//z5VZ48jqPlJXcnJgapNm9W33zjuIYgZblmzqxx8uTJQPd1
pHurbKX7Ye/ZqsHv26oP+tuq3Betl810//y3tqrlXFvVeImtGjDUVtl5sdq8
yMLdJ22VzXca6R4A0gHSvfki3QetQpXuJSxfvuw463/xYis1b556/XXHCPbH
jzuuwRecOnJEbd8epBMB0mvt21fnypUrge7rSPdWke5J96R70j0AwBTSvfmS
dP/882rmTBUfb7aqVCHdW6lQpXtdsbGOK+hZqIgINWaM4xD9rVslMFJhU0eO
1ImOjg50X0e6t4p0T7on3ZPuAQCmkO7N165djsHJv/5aLV1qtsqUUatWke59
rtCm+6QkiwfJx8Y6nu7bb3d8q1O1KhU29fTTVdatWxfovo50bxXpnnRPuifd
AwBMId2bL2lkt27qk0/UDz+YrVKlSPdWKuTp3lrFxzsOki9WTFWrph56iAqb
atfuftI96Z50T7on3Qe6GwQABBrp3nxFRqoZM9R//+sYFN1kFSyoVq4k3ftc
YZruk5LH5Tt2zDGUPRVGde5c3ZiYmED3daR7q2yl+y/esFWfv2mrnp1mq5ou
sl51Vtmq3iNs1YMbbZXNjDzhRVtl58Xac4yyU5nibZXNdxrpHgDSAdK9+bpy
xTHe2rPPqi5dzFahQqR7K7VqlSpXTh06FLyx6ahbuS5dqhcbGxvovo50bxXp
nnRPuifdAwBMId2br8RER04/d06dP2+2KlViVD0rtXy546Lzr72m3n6bogJe
I0Y8uG/fvkD3daR7q0j3pHvSPekeAGAK6T6gxRXxrNXmzapOHfXKK44LzFFU
oOujjx7cu3dvoPs60r1VpHvSPemedA8AMIV0H9Ai3VurK1ccB+d/8w1FBaN+
/LHGyZMnA93Xke6tspXuu0y2Vb1G2yqbo+rZGZiu1hpb9XUPW9Vksa2y+dXE
xK62ys6L9dO3lZ26/bqtsvlOI90DQDpAug9oke6t1Y0b6sAB9fvvlB9q3jw1
d6766SfKYy1Z8vC5c+cC3deR7q0i3ZPuSfekewCAKaT7gBbp3nIlJDguH0/Z
r5MnHe+v3bspj3XoUJ2rV68Guq8j3VtFuifdk+5J9wAAU0j3AS3SPRXaio5W
Awao99+3lY/SfY0Z89ChQ4cC3deR7q0i3ZPuSfekewCAKaT7gBbpngphJSY6
LvGQI4cqXlzddx/lsZ54ovKqVasC3deR7q0i3ZPuSfekewCAKaT7gBbpnvJj
xcWp/fvVsGFqxAhT9cknauBAlSePGjxYjRxJeazp02scP3480H0d6d4qW+l+
yEBb1WqOrZrTylbZGW+/8nZb1eNrW2XzYgE1/rJVUzrZKjsv1u7jlJ3Kf95W
2Xynke4BIB0g3Qe0SPeUHys6Ws2fr7JlU/nzm63cuVXBgo5T70Pe+LRd9YPQ
15HurSLdk+5J96R7AIAppPuAFume0hUX57gQgM06e1bNmKHKlDGba95/33Ex
dwn4Y8aomTMpj7Vw4cNnz54NdF9HureKdE+6J92T7gEAppDuA1qke0rq5k11
5ozjB3SbtXGj4zDypk3V+fOm6uxZtXWr47f7Fi1Uu3aUx+rdu+r27dsD3deR
7q0i3ZPuSfekewCAKaT7gBbpnoqPd1xzrW5d9cgjqkkTW1WvnqpWTTVs6DgS
wGRdvaomTXL8dk95qe+/r3HixIlA93Wke6tI96R70j3pHgBgCuk+oEW6pyRi
r12rMmVShQurIkVsVcGCjpKMf/OmD7Vpk5o3T82ZQ3msP/54+Pz584Hu60j3
VtlK953/Z6tGvmqrBv2frcp90Xo1WGarbA47b/O7hWYLbNXbn9oqOy/WgUOU
naq/3FbZfKeR7gEgHSDdB7RI91RMjGMovFq11OLFatUqWzV3rnrvPVW5smPk
fPO1ebNas8bxOqQ81ZYttS9duhTovo50bxXpnnRPuifdAwBMId0HtEj3wayr
V9Xly2muzp5V//ufevJJx4j3Nh/gmTPqu+9U2bKhj8PprCTdR0VFBbqvI91b
Rbon3ZPuSfcAAFNI9wEt0n3QKiFBtW/v+Im8Zs20VQ89pMqVc5wsbz/dX7um
lixRDzzgOIWf8mN16/bApk2bAt3Xke6tIt2T7kn3pHsAgCmk+4AW6T5oJem+
Xj3HBpc0naaqWjVVurR/0v2NG2rdOtWsmXriCcqf1aPHA5s3bw50X0e6t8pW
uu89wlb1/8BWDRhqqwqftl5vfm6rbI5GWGmHrSq3x1a9/qWtsvNitZnubW43
m+800j0ApAOk+4AW6T5oJclXQvS4cWr9+rRVK1ao4cMdEdJ+uk9MdDzMM2co
P1dERN0bN24Euq8j3VtFuifdk+5J9wAAU0j3AS3SvZe6fFldvOi3kox2zz3q
xx/V6dNpqw4fVt98oxo1UkeOqHPnqLRYkZH1SPeke9I96Z50H+huEAAQaKT7
gBbp3lPFxamvv1b9+6t33/VP9e6tcudWy5c7fuBOUxUToxYscFwR78knVatW
VFqsN96oumXLlkD3daR7q0j3pHvSPekeAGAK6T6gRbr3VOfOqYEDVZ8+6p13
/FNvv+1I9ytWhP6huVRcnPrrL8dQeM89p7p2pdJivf9+tV27dgW6ryPdW0W6
J92T7kn3AABTSPcBLdK9p1q40DE6XL9+6rPP/FMff6zy5UuL6T4peUyAxYvV
zz9TabT+/PPhiIiIQPd1pHurbKX7576zVTPb2qpWc2zVQxusV6/RturTt22V
zUsVVNxpq2x+NWHnxTp0gLJTd16xVTbfaaR7AEgHSPcBLdK9p1qwwJHuv/xS
zZ7tn/r+e1WggGOxf/+d5uriRbVmjfrjD0fGp9JgrV1bKzIyMtB9HeneKtI9
6Z50T7oHAJhCug9oke49lcTwDh3U5s2O37X9UpcvO0bVGzXKscHTYK1Y4RgT
gEqbtXFj7aioqED3daR7q0j3pHvSPekeAGAK6T6gRbr3VJLun31W7dzptwXG
x6tHH1W9etkKAtStWWPGPHTo0KFA93Wke6tsPbmke9I96d4k0j0ApAOk+4AW
6d5T+T3dJyaq115Tjzyi6talKN+qc+f7169fH+i+jnRvFemedE+6J90DAEwh
3Qe0KlVyHJIdFaWuXaP+VXPmOI7M92O6l/r9dzVlivr2W4ryrebOrXnq1KlA
93Wke6tspfvB79uqka/aqqd+slXld1uvtz+1VcPftVU2v9YocM5WfdDfVtl5
sU54UdmpUgdtlc13GukeANIB0n1Aq0IFtWyZOnNGRUZS/6rp01X79n5O9xRl
teoHoa8j3VtFuifdk+5J9wAAU0j3Aa0nn1QNGjjOB3/8cepfVbWqatRIbd9u
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
hw8fzpgxo3xA3H///cFvdto3duxY2TjlypXz9Y5s2LSgS5cuev/n559/DnVb
AADwA9I9AKRvR44cUSa888477vedP3++vjVTpkzR0dHBb7w1CQkJixYtkn8D
vSLL6d7kho2MjNy4ceOJEyfsNRMpq1q1qn4W+vXr52W2HTt2yLPgx5fTrl27
jh8/7q+lAQBgIN0DQPp27Nixu/7N6PadJ37yySfu942NjW3dunXJkiU//vjj
4LfcsmnTpt13330pHo3gX5bTvckNO2bMGFn+W2+9ZaON8Gju3LkVK1asX7/+
kSNHvMyWL18+eRb8eA7F559/XqtWLX8tDQAAA+keAG41d955p/T533//fagb
EhBxcXElSpT47rvvgrAuy+nepEGDBpHuQyshIUGfQ+HHdB8dHZ0nTx5rwzUA
AOAF6R4AbjV+T/eSVnbu3On855YtW27cuOFp/suXL2/cuPHcuXP+aoCz0aNH
FylSJD4+3tMMN2/ePHr06Pr160+cOJGYmGhmmTLbqVOn5C579+51PiTAJd3H
xMRs3rz5woULNh+CoVevXhbSvafWGixsAXHt2jV5luWJ8+MDDAR54W3atMlf
ry55sHofyUy6l40p65VNdPjwYe8bdvDgwRUqVAjCySMAgFsK6R4AbjXe033B
ggVzuGnfvr3LbLt27cqZM2eXLl3ee++9rFmzygJLliwZGRnZv3//bNmyyZ+F
ChXavXu3y71mz55dpkyZDBky6M+dfPnyDR8+3I+H0EdHRxcoUGDo0KEp3rph
w4bOnTvnzp3b+ODLnj37sGHD3L8KkFgtj/q3336T/0+dOrV06dLGXYoWLWrM
ptN95cqV5ZE2atQoc+bMep7ixYsvWLDAZZkmN6yoWLFisWLF8ufPrxco/7rc
a/ny5RZa69MWkOB/11131atXT/5/9uzZjh073nbbbfouGTNm/Oabb/RstWvX
llWnuMFjYmJk7XLrsmXLUnw6vFi0aJHcMU+ePO435cqVS25asWKFMaV8+fIy
5dq1a6tXr27SpMntt9+u2ynb4a+//nK+71dffeX+FIjt27e7rGX8+PGlSpUq
UqSIcSaLvGuc7/Loo486z3/9+vXevXs7b9g77rijQYMG7i8D7eLFi7LlJ0+e
7OuWAQDAC9I9ANxqfEr3+gPiv//9r8tsmzZtkuk610vM17NJztWn8+s/27Rp
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
yxs3bjx37pzJFR09enTnzp0uR366iIuL27p1qzRJ/5krVy4z6f7atWuyZGnM
hQsXvKxdlpzqF7bSANkOu3fv9ukUm1QbIJ8s0oD169efOHEiMTHRy6Kio6Nl
Uc5/btmy5caNG+YbAyDkLKd78/3qpUuXduzYId2a9yMhpVPy1BKDTve5c+d2
Pjhfdu30MV2e0r35bk2T2aTBKY5FACCEEhISKleuLO/0SpUqSRfkcmuqx3DK
2//UqVPSFezdu1e6hRTnkW5q8+bNMpt/WuxEdpBkyREREV7mWbp0qTy6qlWr
fvrpp/Kfdu3aeZn5+vXr+/bt27RpU6pjxMkDl75aeuzDhw+b6QNN7ohqMtv2
7dsPHjxoZslmmO+x9XEOgUj3vr4M5MmVJ8L7B6L558snPqV7M+1MSg5c8gLQ
+eKrr77ynu59DVmWke7TJU/pXt770s/L9CpVqrjcZfbs2WXKlDGO4c+XL9/w
4cNduvQpU6bkyJFjwIABsq/Yt2/fkiVL6pkzZcr05ptvumf88+fPt2rVyjjb
69577501a1bBggXd0730S3fddVe9evXk/7LP2bFjx9tuu03fK2PGjN98843z
zPJml25K76DqtdesWVPeL+7bITIysnv37saiZM4cTjp16mStARs2bOjcubPs
NhvvnezZsw8bNsx5F1e2vLSwS5cu7733nt4CsrmkPf3798+WLZv8WahQod27
d6f8/AFIeyykezP9qrh69erIkSOrVatmzCn/kW7N+VtBMX78+FKlShUpUsQ4
wlD2VZz7tEcffdSYWaf7li1bKqeD84sVK3bPPffIvod7ujfTrYn77rtPViTR
YOjQobIoPad0cbJr7Z4gAITKjz/+qN+ec+fONTO/7FbJW/u3336T/0+dOrV0
6dJGV1C0aFGXmf/888/KlSvrI4hE3rx5Zd/G5TeLRYsWyQLz5Mnjvq5cuXLJ
Tc4HRU+aNEmm9OvXb8eOHY0bN86SJYtesnRZ8+fPT7HBL7/8sswg65VdKd1f
SSR0n23ZsmV169Y1Hot0rbIv2qdPH9lBdZlT7t67d2/nPvCOO+5o0KBBikOg
m98RTUre9548eXLZsmWNLSZ9uHTOEsydZ5Pd4xxu5MMlxWWa7LErVqwo2zB/
/vz6BA3512X5y5cvt9aAJHMvA1G+fHlZzrVr11avXt2kSZPbb79dzy+vsb/+
+stlZvPPlwXe071P7RTTp093+RCUj0XlId2b2RmQvCANkOfL5dN50KBBevql
S5dMPlLlxORdkPZ5Svfi22+/1R2Rcw8gO6V6ftl1fOqpp6SP0u/Wxx57zPm+
Y8eOlYlPPPFEnTp19Bu5SpUq0vvp+8qr2nnm/fv3FyhQwOifpQcwzvZSbun+
8OHDKjn/yktaOkA9j3Sb+quAxYsXG3OePHnSeDdJa6tXr66z83/+859x48Y5
LzM2NvbBBx/UPd4LL7zw/PPP61it36rC+aQz8w3QRzdpxYsXl15ItoP+85VX
XjFm27Rpk36/q39+KRP6i3Rjz7xNmzbmn1MAoeVrujfZr0qfU6hQIT2ndKcy
W6VKlaRDkz+ly3IeBGnMmDF6d8s4kTbVdD9q1Cj1z8H569evl/+/+uqrktDV
v9O9yW5N6F5ddrf054jsxugRAITsGnk/jgtA0AwYMEC/nU3+TNypUyeZX3K9
PrpYJQcr2d2SjFOrVi3nOQcPHmz0Vw8//LCxS1ahQoW///7bmO3XX39VycOQ
uq9L92+SDY0pevdSekLducl/jJ1GacaUKVNcliCxSPc8OnaVKFFC/i8BymU2
icA6o0mH1rp1a8lf0mXp327y5MnjcoiUzKAfiDxe2RpNmzbVe4Dio48+cp7T
/I5oUvJP27JAPbN06bJfKg9NbwHZO3X+CtclXOu7/Pe//3XfgOZ7bIn/zkvz
Kd17aUCS6ZdB0j+fGv/3f/8na5cPQZlBf4KIXLlyOX8t7NPzZYH3dG++neLN
N9/UN8lTX61atfz58xvPiHu6N7kzILsW+mfTJk2aGG9beYXrV4v7y9sL5cT8
vZDGeUn3xnmXhw4d0lOkL9Kd0oQJE4yX0+rVq3UIla7euK/ufkWWLFm++uor
fSDKxYsX5X2t34zOK3rkkUdU8nD9xveu58+fl15CLyHFdC/vEf3VVs+ePWVH
Wn+pdfToUedvAps3b67XtWTJEj0lKipK3iAyUfqEgwcPGnPqIUTkvXzgwAE9
Zffu3dK1yiPdsmWLy2Yx34Bly5bJlpFuzThiX27t2rWrSt7XPXLkiJ6o072Q
Dko2lP5SRUiHkJCQ8N5778n/7777bo9PIYA0xkj3sqc36t/kw139O92b71dF
gwYNGjZsKH2L8U2+JHH9o8wLL7zg3pLNmzfrlqR6ZP7SpUtLly6tD87v06eP
Sh4iWO+GOad7k91a0j/7P+Lll1821v7xxx/riV9//bVPmxRAgOihlp544gmT
8+t0X6VKFflXdoSk49InVErX4fwTs2QNHUw6dOhgXD1k1qxZ+oeeF1980ZjT
QrrX+0XSHemJx44d0+fUFy1a1OWbQ9kDlOnSHeneVV8K5Omnn3ZZ0UsvvaSS
f1hx/ln/+PHj3bp1mzx5svOcp0+f1g2YNm2aMVH21mbMmNGiRQuXXGl+R1RI
H6470gEDBhg7k7I/LE9Q06ZNvVz3ROfHFMO1+R7boD8RfDoy30sDzL8Mkpw+
NSQs7N+/X0+UiK0njh492pjT/PNljZl0b6adq1at0r/Cy8YxUr+8VPSntku6
92lnYMOGDfrbjE8//TQp+XgS/W18insCXpDu0yUv6d64Sf8eHRMTo9+Mw4YN
c5lTn8oku53GFN39SgR27pOTko+/0suMjIzUU6Tn0VO+++47l8Xq7wNTTPea
y0vdmbF3PXPmTOfp8vovXLiwy961/q6sV69eznPqbnbgwIEuSzbZAM399ynp
3PTj+uGHH/QUne6l99NHE508eVL+lEbqvl02oEr+EtX7igCkHUb/44nR//jU
ryal1KWIDz74QOYsW7as+03m073sfOpfWBYuXCgxv3jx4nKTHjbf5dg/M91a
0j/7P+6Pq3Hjxu57NQBCpWrVqi67QBJYvnAie3TO8+t0Lx566CHJqp4W27Bh
Q5mnYsWKLrH0yy+/1Hc3fk+xkO4LFixo7EZqEqP0Yl12GiU/KqeLkOp9qmzZ
srlcrlT/HF+9evVUz4vfuXOnXtGcOXO8z+nTjqikYD3zkCFD3Bfl/bAKL+E6
yXSPbfBvujf/Mkj651OjefPmLm3Wvww6H2xg/vmyxky6N9PO+vXryxTJ3S7D
eenBzZw/B33dGRAjRozQUWv37t29e/dWyccb+3rcgvOeiU93RFrmJd0fP35c
36S/Hd2wYYNK/q7PvTPfunWrSv5q1Jiiu99y5cq5zKmjq9ixY4eeol+c0tG5
fy2Z4pj5Rrh2OabIxWeffSbz3HPPPe5doj7bpUyZMsaUNm3ayJRnnnnGeTZ9
FmrPnj1d7m6yAS7ks3Lu3LnDhw/v3r277lQ//PBDfZNO90Z+l15XJQ9uo//U
21Y2u/l1AQgtY6dOdix7/pv+dt3YqfOpX3V29epV2Zv95ptv+vTpU69ePeXh
O0Cf0v3BgwdV8qVS5N8BAwYkeUj3Bi/dWtI/+z8uu7VC2qySD9by1B4AwaTT
vfPejrxtnff5c+XK5Ty/TvcSf1L85deg+4SJEye6TL9x44Y++dGIThbSvfvu
pShSpIjcJLnJmBIfH68PRDcODZUpesRml65J2qB/Yi5ZsuSgQYP27t3r5aHV
rFlTJf/GKnuPs2fPTvEs/iQfd0T1aQ758uXzaVRnzXu6N3jvsQ3+TffmXwZJ
nj819MEGrVq1Mqb49HxZYCbdp9pOed71cly+H0tKacx8CzsDsvxHH31UJZ/U
LFtD3kESKHx9pKT7dMlLujd2UPXpnBMmTNB/ZnZjvDCMg0U9db+XL1/WcxpH
vD/33HPy5yOPPOLeNu/p/vjx414e1/PPPy/zNG3a1P2mn376SSX/Vm50yPo7
tCxZshhfBZ87d04f8TJp0iSXu5tsgHb06NEePXoYp8o6k+5Iz0O6B9IZ8+fd
+9Svaj/88EPLli2NMUi9fzT7lO7l/zVq1NDz652lFNO9mW4tyfP+z8KFC/XM
5of9ARA4Tz/9tLwfmzVrZkyRHcLBySQGKg/pXvayvCzT+Hlo7dq17rfqkYX6
9eun//RXuteh+/XXXzemGMeLSghq+Y/s2bOr5HMhXe4ue5vFixc3erPy5cu/
8847LsPZabIr27lzZ2OMuDvuuEMWKz2zS1/t046o3qopzpwq7+neZI9t8GO6
9+llkOT5U0Mvv0WLFs4TzT9fFlhL9y7tPHbsmG6b+zUl3dO9hZ2BpOQTN3RT
xfDhwy08UufXg4W7I23yku5Hjhypkg/50N866vNBxEseOH/xm2q6l9Cqp3Ts
2FF5OOHLe7o/efKkl8elvzRIsZ+UBark0VeMw1cuXrxYqlQpmZg/f355b77x
xht6DJayZctevXrV5e4mG5CUfNJBnjx5VPIXbvIROXfuXNnIEt4bNGigSPdA
+mU+3fvUr8bExHTo0EHvE9avX192D2Sf4fTp08b5Te4t8TXd626/atWq+ib3
dG+yW0vyvP8zZ84clfyzF9f6BNICPbxPiqPq6Q4kxXRvHOueIiPXrFu3zv1W
fTGOPn366D/9le71lZ769+9vTNG/pabo9ttvd9/Bi4uLmz9/vtzLyMKy9yX9
cIpX+pO9wREjRtStW1c3UiX/jrxq1SpjBp92RPUpos7fsZjn/bx7kz22wY/p
3qeXQVJqqdl9+T49Xz6xk+6Ndh46dEi3asOGDS5zuqd7n3YGDIsWLTJG15c3
soVH6vymsHB3pE2e0r28ZfR3YtJx6SmyG6nnNHOpSvPpXvph5RRmndlJ93rs
JulpzdwUGxurR/ZzJm/PFL8DNJ/u9QZ8+umnXU7vIt0D6Zv5dO9Tv/q///1P
JV9ZwxigSVu+fLmnj+YdO3bom7xcD9o53Z8/f75JkybGiCLu6d5kt5bkef9n
+PDhKvk8xFQfL4AgMI7Dd7+gm+V0n5CQoE8idh+eSJKXjk7GTb///rtugPs3
fubTvey16h/lp0+fbkzRY5d99NFHm5z89ddf+tinGTNmeGp/YmKizNaqVSvd
sA8++MDLg42Kiho1apTu8aR/NvpGn3ZEP/zwQ5lSpEgRCxe495LuzffYBv2o
U8ySvjbAp5dBku/p3uDT82WGX9K9vJ71AR7uQzS4p3ufdgY0+WjWI/Drccgl
5stbyeR9Dc7Bx9f7Is1KMd3L20R/lyuMy4xevXpVH6xu5nxz8+le768K+RBx
njMyMlJf7cJauv/jjz9S/LSSIK/7OudrzOkBK1577TXZAZZdXHnIXi6XabIB
xggDLiemSYemz3Ej3QPplfl071O/qn+Hcr+msD7IM8WPZulI9U0pXoRXc073
LlzSvfluLcnD/o/0wMWKFVMpjVkNICTk/St7a/KufPDBB11+zrac7kXt2rVV
8sh7LtP1yBvOu53bt2/XU+Q/znNOnDhRTzeT7o2fPnfv3q2n6C8NUjyRuVmz
ZnJTy5YtjSmexiLT49u7/P6e4szGsHjGUeg+7YgaJxE4j7hu8D52nKfw61OP
bZAPI+V2CTbvvKRv8y+DJF/SvU/PlwV+SfdJ/3y74nJOgejbt6/6d7r3aWcg
KTmp6d8lGzRoIP/v1auXSr46Q6q/PLpQTny6I9Iyl3QvfeDKlSsff/xxPdG5
60v65zcXlTykp/NXrPv27ZOXtPO4IubTvbxD9XVCq1SpYlyvWXp4fU1SZTXd
y0tdfzNZpEgRY7dW1qWv/CLvIGNYv6R/9rddLszhickGXLhwQc/mfG2Obdu2
6ethKdI9kH75dL178/2q/viuWLGisWMTFxcn9zLOy0uxMXpwZtm7cF648znv
5tO9+W4tyel697/99pueIp3bM888o5IPy3fZjQcQQr/88ot+C8uemLF3JJ3P
W2+9payme4nk+pjhnj17GkOLL1y4UA9q165dO2NO2TPUF6xv1aqVnlP6Cj3u
nOae7mXJL730ktGPSY7Wi3XOy/rA+MaNG7u3TUfLrFmz6i5a/r3vvvsaNmy4
ceNG59kiIiL0Yl9++WVj4rhx43LmzCn9tstgegMGDNCtPXfunJ7i046ozCyZ
VCWfMvDVV18ZA01Lvz148GBphvPY8i48hWufemzD+PHjVfL5X85ni8tnjcuv
/2YakOTLyyDJdGr26fmyxl/pXv96KFtAnlM9JT4+/t1339Xb3+XaMeZ3BoyZ
c+TIoQ8zjomJ0eMY1KpVS1Zh/pEqJ+bvhTTOSPe5c+fW5+Zo8lJ87bXXXF5L
0tvoLzxFoUKFmjdvLm/MqlWr6iNPjJduki/pXnz33Xf6vZ8tW7Y6dero75Cz
ZMmi36TW0n1S8gkv+vR52ZOURjZp0kQvUHzyySfOcxrHD8hGqFu37mPJ5NF1
7txZ5nT5ztN8Axo1aqS3pHTvsktfpkwZ+b88rtKlSyvSPZB++ZTuzfery5Yt
0xNl16JDhw6PPPKI3gPRF5729NGsx21WycPqtk5WsWJF6WyNnQfz6T7JdLeW
5HRFYJV8HL7cUR8lK2TfxveNCiCAJCzoiK33haSX0MdPiscff9x5TpPpPumf
sKOSBzWS3SrZsdE7e/fee69x+XVNX4NYJV/qrkaNGtKlqOSfj/VPzCle714l
D2dXr149WazRMRrDHUuQ1FcJT/GncAng+i76mvXr1q3T4+1L84oXL/7EE0/0
6tVLemndZclynH9ffu655/SjyJ49+0MPPSQ7ij169NC/UItu3bo5r8j8jqg4
ffr0Pffco2+VxyIzS1LTz4LsIuqmetnOKYZr8z22Qfb8de8tbZYELZ810hL5
rEnxUn2pNiDJl5eBydTs0/NlnrzmM/1DN1heJMaUpUuX+trOpOQvZ8qWLauX
VrJkSXkW9Ke2/lnTJd2b3xlYu3atbqTzq2L//v164T6NmaCcmL8X0jjp4pyf
Wel2JN727NnT+WXsYurUqc7DVIoSJUrIq875qwA99qOXdL9z507n6b/88ov+
gUm/m6pXr75lyxb9K4/xu4929OhRPZvx7agX0m907NjRecBJaZLzx4Qme+DS
ySgPpGt1Hu3TfAMiIiL0ZfU0edM99dRTBw4c0KfbGJ2qzu8u6d4Y1Yp0D4Qd
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
emydrPtdu3Y5fN2msrLyn//8J1v++eefy3i/bIag1vVRkObUqVN//etfu3bt
arOju5NjZ4903aenp4vHHmTPYXEPB4ewXxnxAxTSx0DQLKh7AAAAAAAAvInN
mzeLf96//PLLZ8+eFReWlZUNHDjQ7bpnPSh+Wrlv376WU6Tt2LGDXRtb2KVL
F8uahYWF4tnSP/vsM3HN0tJS8bBvdaUlu+bevXvfunVLXMgyVrxaS64uXLjQ
z8+vdevWbLmfHU2bNq1Xr574Nbut1atXizfE7hq7++JbvZmZmaxtxTfZ2W3x
bKqvr6/lkGs7d+4UT5TWsWNH64eLRSv99kSBEjhZ92az+a233mKrPfHEE5YD
yLNQFc+ByJrUMtZKDIGroyB9lxMTE1nasy23SXvnx84eibpn4yWeZe/pp5+W
eJlFZOLEieI2jB071nrnh5SUFHYT4pENNAvqHgAAAAAAAC+DFYrYdwyWUS+9
9NLdd98tftu2bVvrNZ2s+9r/1hPd/ix5mzZtGjRoIPb+U089lZuba72meOo3
un2etTfeeOOuu+5iX7MfEY/n7/Bk64x77rmnZcuW7GrFU6E98sgjNkeZc3LP
/Ly8vC5duliu9r777vv3v/9t+ZZ9zeLX7U0V92xnm9q8eXPLI2C/qUuXLrU8
+C1atGhzmw8//PDLL7+cMmWKzekJnKx7Rmpqqvj5fbYZbAtbtWolNjiDXa0H
hsD5UZDgzJkzDz744Oeff26/e7xLY2eDRN2/8847lit50hFr1661rGwymdq1
ayeu/Nhjj7FRY5vEHjfxMZE4rJ8WQN0DAAAAAADgfRw6dMiSdXT7zdlnn32W
pZzN0fa++uordqm/v78z18kiiLW8JR/++Mc/BgQE2B8m7ubNmyz0LKs9/vjj
Q4YMYSknnidu7969ljXFtPzPf/7DvmAhLK7PMorlVXZ2ts3V7ty587XXXrPf
KvazHTp0sFkYFxfHAlz85LjI3XffPWjQIJsznTm/qeLR1MPCwhYsWCAmtsSm
FhUVWT9QNrAtsT77QFpamrjc/nrsyc3N7dGjh/Uh3J9//nnrWnf1frk0BLUu
joJD2H3v1atXXZ98r3V67Gxgd5Ct6XAbHnzwwbrGQoRtvM2PLFu2TPy8g4V/
/etfLO3x3j0AAAAAAABAFaqqqk6fPn38+HH7BncbFn3x8fHJycnSpwbLycn5
+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
Peoeda/0NAgAAEBpUPeepKSkuFWrlu+807x1a23ZuHG9li1VqPuaGqqoEE5S
L4szZ9Lbb9Orrwpv4kPovH5+r544cULpX3/D1v20gcQjZ93znFSOOXYkl0Hf
c7nuU/ed05fLiaFcXniOS87XFjhPRLish/tuacflQl8ud7biEnUPAABeAOre
kxQUFNx9Nz38MP397/Tkkxry0UepYUMV6l5e16yh118XHl7VH0+oL999t8G+
ffuU/vVH3aPuUfeoe9Q9AAAARUHdexJW9/fcQwkJlJam/t7I1kZHkyp75str
SQldv05Xrqj/eEJ9mZnZory8XOlff9Q96h51j7pH3QMAAFAU1L0nEeueFajZ
rH4LW7tjB6lyzHwItaGPB379Ufeoe9Q96h51DwAAQFFQ954EdQ+hJvXxwK8/
6h51j7pH3aPuAQAAKArq3pOg7qFerKmhzEzKyjKEeXktccx81D3qHnWPuld6
GgQAAKA0qHtPgrqHurC6mjIyqH176tjREA4c2DAxMVHpX3/D1v3SL4lHzrqf
24fLn97ncvR3XMZ1cF/OLed8cYAzM2O6cxkWzuX2Nu7LueWcdc9zLj8m6h4A
ALwA1L0n0XLdDx1KCxZQZSWEVFhIiYnUtCn16EFffun9Dhv2WlJSktK//qh7
1D3qHnWPugcAAKAoqHtPotm6376dBg+mWbOEd2whTE6mxYupRQvasEF45cfr
PXiwWV5entK//qh71D3qHnWPugcAAKAo2qn76urq0tLSm15NWlqaNut+/34a
OZKCg2njRggpJkb4pAar+8OH6fRp7zclpXlhYaHSUxzqHnWPukfdo+4BAAAo
inbqnsXv+fPnd3k1GzZsuPtuLdb9pUv0/ff02GNUvz6E9Mwz9OSTQt0XFAiH
1zOAPmazWekpDnWPukfdo+5R9wAAABRFI3VvMiWePr1x6dKoH36Y4sXOmjX2
j3/UYt1nZNCaNfThh9ShA4T00UfCh+7/8x86f56uXvV+s7JalJeXKz3Loe5R
96h71D3qHgAAgKJopO7Ly32GDydWvq1be7Pvvkt/+IMW6x5Ca/PyaNUqYU4Y
N44iIrzfqKjX09LSlJ7lDFv3nHmurpwn1Bs/nEueuj/UjMttbblUfeB4zH/A
fdU9/yOnqHsAAPACNFL3ZWU+I0fS44/TsmXe7IIFpM337iG0tqxMOGb+e+/R
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
NV+XeXnUqpU7R9W7fFkYlyFDaOhQTTtwIHXuTP/+t3C4fi1YVuZTU1Oj9CyH
ukfdo+5R96h7GWF1n16PJByMupcJ1L2hdDjuQEeg7qGrou55ZHX/xRd0/LjU
Om6fEW/BAiHtR4zgDSKlDQsTXuJ49ln1h+O/+nhglkPdo+5R96h71L2MsLqX
PvUD6l4uUPeG0uG4Ax2BuoeuirrnUdG679yZBg+mKVOEz/VrWbaF/v5Uv776
w/FffTwwyxm27tttIR55X00azeXir7lc8hWX04Pdl/OMeFMHcfnRJi45TwzH
+bDz1P2mj4jHBb25/HIpl7r7S57V/eV/koSoe7lA3RtKh+MOdATqHroq6p5H
J+v+nXcEXd3DnNV9RIRw348e1bQ//0wzZwpH1WOZrwV//PH1y5cvKz3Loe5R
96h71D3qXkZY3f/6L5Jw8Jeoe3lA3RtKh+MOdATqHroq6p5HJ+u+ZUtq3lw4
bZxLsju+dCnl5qp/N6WtrKSdO+l//kcIfC3YokWD+Ph4pWc51D3qHnWPukfd
ywir+9SnSULUvVyg7g2lw3EHOgJ1D10Vdc+jM3VfUUEffUT/+he1a+eaTz8t
XL/2695sFo4cuH07bdmiCffvb5aTk6P0LIe6R92j7lH3qHsZYXX/y79JQtS9
XKDuDaXDcQc6AnUPXRV1b6/JJLwfXVJCpaV3cO5c6t79DnXPrurLL+n55+mZ
Z1zzscfohx90UPfMmhoqKqKcHE2Yn9+ysrJS6VkOdY+6R92j7lH3MsLq/uKz
JGEI6l4mUPeG0uG4Ax2Buoeuirq39/p1Wr2ahg2jcePu4OefC+/LS9e92Syc
Ef7IETp0yDU/+ICWLNFH3dfeDnyJ0wJ60upqH7PZrPQsh7pH3aPuUfeoexlh
dZ9SnyRE3csF6t5QOhx3oCNQ99BVUff2nj9P06bRZ5/RV1/dQR8fatv2DnXv
tt260eLFdO0alZVBF6yowPnuFXTYBOKRs+4X+nIZEcLljAFcRga6b+UfuOTc
8ulBXHK+tsB5Wjqeut/wCfE4py+XswO41N1f8qzuLzxHEqLu5QJ1bygdjjvQ
Eah76Kqoe3vnzxfO4c4ek5kz72CPHvTJJ0rVfefO9O23NHo0TZ4MXXDxYhwz
X0FR96h71D3qXglY3Sc/TxKi7uUCdW8oHY470BGoe+iqqHt7x4yhQYMoMpLW
r7+D/foJb/ErVPf+/tS1K/n6Up8+0AXHjWt0/vx5pWc51D3qHnWPukfdywir
+3MvkoQhX6Hu5QF1bygdjrs9JpPp3LlzUVFRkyZNCgsLCw8Pj46O3r9/v8TO
kPn5+bNnz3Z4lqKLFy/GxsZOmzaNXdX06dPZ10lJSRK3vnPnzsjIyJKSEqkn
rkwUFxcvXrx41apVNsuzs7PXrVs3b9685cuXJyQklJWVeWBjnAF1D10VdW/v
+PE0apTw0fuSkjvozFH13PbSJeGY+bNn05w50AVXrnwjPT1d6VkOdY+6R92j
7lH3MsLqPuklkhB1Lxeoe0PpcNxtYJ3Oor63I8aPH5+VlWX/I5WVlewitsKS
JUusl5vN5rVr1zq8qri4OJPJZH9Vx48fF1e4efOmO09oF5k7dy67rSFDhlgv
PHLkSJ8+fay3dsyYMQUFBR7YnjuCuoeuirq3l9U9e0DWrbvzms6cEc9tCwpo
wwZatQq65rZtTTIzM5We5VD3qHvUPeoedS8jrO7PNiAJUfdygbo3lA7H3Zry
8vLQ0FAxaZctW5aYmJidnX3p0qWtW7cGBASwhexSm3fwc3Nzp06dKv6ITd1f
vHhRXL5o0aKUlJSsrCy2hK0jLty9e7f1ymazed++feKteKbuDxw4IN6Wdd3n
5OT07duXLYyMjExKSjp8+PCoUaPYt9OnT1d6e5wBdQ9dFXVvr0bq3mQSdg8o
LoauWVaGo+opKOoedY+6R90rAav7M/8hCQeh7mUCdW8oHY67NTExMewilrcX
Llywuej69eti9h45csSycM+ePYGBgZb3uG3qfvXq1eIb3zZnLxL3DYiIiLAs
YU3NvrV+u1zpur9x44Zly63rfuvWrWxJcHCw5XzKZ8+eZUv69OlTXl6u6CY5
A+pey7JYYymt+tnAbbx0iQYPRt3/RhXr3mwWzumWlwfd99YtnO9eQUd/Rzxy
1v2PvbgcP5xLztpa1dl98x/gkvPUbJx3nDNyORNbxbqf24dLzldF9Fj3ia+Q
hKh7uUDdG0qH426B1av41vnmzZsdPluWL1/OInflypWWJX5+fmx9VuvLli2z
r/sFCxaIb4LbXE9ycjKbVKdNm2bZOX/Lli3iqwrx8fHiXvHu1f2lS5fYljjc
59+ampqaiRMnijsV2NR9SkpKXFzcwYMHLUuKioo8+WEBaVD3Wra0lPbtE5pR
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
e0PpcNzrwmQysc5l/ZuVlcW+5nymsTpOS0uT5aqkkesddrbBly9fvn79enV1
tSxXKAuoey2LuteLqHud6+OBWQ51j7pH3aPuUfcywup+X0uSMBh1LxOoe0Pp
cNyBjkDda1nUvV70mro3m4XDEpaUGMuyMp+69iKTEcPW/ZhRxCNn3S/5ikvO
E4j/2IvLhb7um/sQl/P8uVT3RZU973DJU/fr2xOPk4dwOWMAl7r7S57V/d63
SELUvVyg7g2lw3EHOgJ1r2VR93rRa+q+sFA4uV63btSrl4EcMeK1c+fOKT3L
oe5R96h71D3qXkZY3ce/TRKi7uUCdW8oHY470BGoey2LuteLYt2vXSu8961r
s7Jo5kxq04a6dDGQISENz5w5o/Qsh7pH3aPuUfeoexlhdS89lMFfo+7lAXVv
KB2OO9ARqHsti7rXi+PG0ciRtHo1FRXp282bafBg+uYbWrHCQG7d2iQzM1Pp
WQ51j7pH3aPuUfcywup+97skIepeLlD3htLhuAMdgbrXsqh7vThpEg0dSnPm
0Llz+nbuXOrThwIDafduA3nkSLO8vDylZznUPeoedY+6R93LCKv7na1IQtS9
XKDuDaXDcQc6AnWvZVH3enH1avrsM3rsMXrhBX375JPUpIkwuGVlBrKiAkfV
U1DUPeoedY+6VwJW9z+9TxIGoe5lAnVvKB2OO9ARctV9Tk5OcnLy6dOnk9wi
IaFRnz5CXKieaZoSda8XDxygsDB6911q21bfNmok1H1gIGVmGsicnBYVFRVy
Tap1Ydi6/z6IeFS37icN5ZLzvvP0df4DXM7343JlFy7HjeCS50yCTJ665zwj
3sz+XK7oyqXu/pJndb+jNUmIupcL1L2hdDjuQEfIVffr16//9ttv27dv39kt
OnT4W4MG9Oyz6meapkTd68WqKiotpYIC3btmDbVvT6+8Qj/+aCDXr29y/fp1
uSbVukDdo+5R96h71L2MsLrf3oYkRN3LBereUDocd6Aj5Kr7GTNm+Pr6fvnl
l75u0avXY40aoe5tRd1DD3vokPC5+2bNKCLCQEZFvZ6WlibTnFonqHvUPeoe
dY+6lxFW91s/IAmDvkHdywPq3lA6HHegI+Sq+7Zt244bNy46OnqNW8TEvNCp
Ez3/vPp1oylR99DDFhdTbCz5+gqNbxzHjWuUnJws16RaF6h71D3qHnWPupcR
Vvdb2pGEqHu5QN0bSofjDnSEXHXfqlWrefPmHThwIMUtEhNfDwzE5+5tRd1D
D1tdTRcuCOfF27TJQO7d2zQnJ0euSbUuUPeoe9Q96h51LyOs7jd/SBKi7uUC
dW8oHY470BFy1X2bNm1Wrlx56dIl934cx8x3KOoeQo/owzP7OQnqHnWPukfd
o+5lhNX9po9IQtS9XKDuDaXDcQc6AnWvZVH36lpWRiUlws7q0LstK8MZ8RR0
xDjikbPueQKZOXIsl5wn1Ivp7r6Zj3HJmZmrO3IZEcLl2s+45Kl76YO83dEf
vuWS80UV3f0lz+J+wyck4QDUvUwYvO6bd0g2lA7HHegI1L2WRd2r682blJ2t
/vnaoNLm5rbEGfGUE3WPukfdo+6VgNX9+vYkIepeLlD3htLhuAMdgbrXsqh7
Fc3KonHjaNgw3riA2nfOnMapqak8E6AzoO5R96h71D3qXkZY3Ut/0gF1Lxeo
e0PpcNyBjkDda1kt1/2oUcLp0SsqvNaEBPr73+lvfxNO1Ai923bt/vPzzz/z
TIDOgLpH3aPuUfeoexlhdS89lAO+Rd3LA+reUDocd6AjUPdaVrN1z9K+Tx+K
iaFVq7zWESPo7beFOjh8GHq5p0+/eevWLZ4J0BlQ96h71D3qHnUvI6zu13Qg
CVH3coG6N5QOxx3oCNS9ltVm3RcU0IQJ9M03NHkyRUR4rV99RR9/TCtWqP+A
Q+X14Zn9nAR1j7pH3aPuUfcywupe+omEupcL1L2hdDjuQEeg7rWsNuu+upqS
kigwkEJDKSzMa/3sM/roI9S9QfThmf2cxLB1HzydeOSs+1n9uJwymMuFvlxK
HzFM2qtPchkZyKX0kczv6IwBXHLeOk/d8wwZc9E3XHKex1B3f8mzuo/tRBL2
R93LBOreUDocd6AjUPdaVpt1zywsFNJ+2DBvtlMnatuWFi9W/3xtUGlLS1tW
V1fzTIDOgLpH3aPuUfeoexlhdb+qM0mIupcL1L2hdDjuQEeg7rWsZuvebKb8
fC/3p5+oXj164QX68EPo5fbt++qpU6d4JkBnQN2j7lH3qHvUvYywul/RhSRE
3csF6t5QOhx3oCNQ91pWs3VvBNnD/sorgu+/D73c3r1fPXHiBM8E6Ayoe9Q9
6h51j7qXEVb3y7uRhP19UffygLo3lA7HHegI1L2WRd2raEUF/fyz8A7+jh3Q
yz14sFlubi7PBOgMqHvUPeoedY+6lxFW99LHlkTdywXq3lA6HHegI1D3WhZ1
r66//krJyXTmDPRyL15sXlRUxDMBOgPqHnWPukfdo+5lhNX9sh4kIepeLlD3
htLhuNtjMpnOnTsXFRU1adKksLCw8PDw6Ojo/fv319TU1PUj+fn5s2fPjo+P
t7/o4sWLsbGx06ZNY1c1ffp09nVSUpL9ajk5OewXf9GiRQsWLNiwYcPVq1ed
ega7xR1vq6SkZOvWrQsXLmQPArvjxcXFym2MS6DutSzqXl1NJqqpgUbQx2w2
80yAzmDYuuc8qRxn3UvvuHtHB0/hkvN8fDydmPUol5ynZvtmEZecoxbXgUue
uue86enBXE4M5VKPdb/0C5KwH+peJlD3htLhuNvAOp1FfW9HjB8/Pisry/5H
Kisr2UVshSVLllgvZ3+ArV271uFVxcXFmUwmy5qsoPv06WO9gp+fH+trrid3
HdzxtljLDxo0yHqF4cOHe2BHUGdA3WtZ1L1xrK6mvDy6cgWqYEZGi7KyMp4J
0BlQ96h71D3qHnUvI6zul3xFEqLu5QJ1bygdjrs15eXloaGhYtIuW7YsMTEx
OzubNSCL34CAALaQXWrzDj7L3qlTp4o/YlP3Fy9eFJcvWrQoJSUlKyuLLWHr
iAt3794trpaRkSHm9rRp0xISEk6dOjV79mxxHba+bM91p2/rhx9+YN9OmDCB
3fELFy6MHj2afRseHi7vlrgH6l7Lou6N482btGULTZwIVXDRotd//fVXngnQ
GVD3qHvUPeoedS8jrO6jepKEqHu5QN0bSofjbk1MTAy7qG/fvqxqbS66fv06
W84uPXLkiGXhnj17AgMDLe9x29T96tWr2cIxY8bY7EUp7hsQEREhfst+39m3
AwcOtLxuYDKZhg0bxhauWrXK5ee0JHe8rZSUFPa1v79/YWGhuAL7QnxBIC0t
Td6NcQPUvZZF3RvEmhpKTaXwcN6Qge45Z07j1NRUngnQGVD3qHvUPeoedS8j
7C/wH3uRhKh7uUDdG0qH426hvLxcfIN+8+bNDp8ty5cvZ53LqtCyxM/Pj63P
an3ZsmX2db9gwQK2MDIy0uZ6kpOT2aQ6bdo0cef82NjYIUOGsH+t11mzZg37
2dmzZzv7VL4Ny1W2Jdb7/Ntwx9tat26d/TbPmTOHLWSrubQxSoC617Koe4NY
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
LCmhVq1owgQFb0IXx8xPTqb9+2njRtns31/YbV7puh88WDisgeqPnq704Zn9
nMSwdf/lUuKRs+4583zJV1wu6M3llnbum/gKlyu7cMl5Rrx5/lzufpdLnrr/
6X3ikecciMyZ/bnUY90HzCYJUfdygbo3lA7H3cKxY8ek38suv43E0+ncuXPs
x/38/CorK9m3+/btE79ds2aN9Qf27dm7dy+r8tzcXPa1uEuAe8UdHh7OfjYq
KkribMhy3ZYqoO5rUfd2ou6ZxcUUFkYhIbxxYe0nn1DPnjLUPRsgVvELFzqQ
Xb+vL23Z4omHqLr6/7N3J3BR14n/xz+2/dra3MzKSjssdTNTO9y88qBzO6zW
yra0UtvKE+/7yPDGNDvQNDM1r3Qxtc37PsgEz9S8AkQQQRQEkduZ+X++fv/N
EjOMw3y+3zmY1/PxfvTQYWCGAb75gmFGnDmjfX4G+o4ebV78u8omoe6pe+qe
uqfuDSTrvttU4WLUvVGo+6Ca04+7nf5D7d69e3v2uZSTkzNixIjiP6zPzc39
+OOP7XeAHzx48LfffhsTE+P6TpUqP09PSkoKDQ2Vr75gwQJ3zs/P7j17dere
6ah7H0526913aw/99+abhq1xY/HGG6p1b7WKlBTtgRFatnSy2rXFv/4l/vtf
b9xE2dkiOlr7lsLXXwf2lixpLA/1KgdAd1D31D11T91T9waSdd/1S+Finah7
g1D3QTWnH3c7WcTy9PDw8OInHj58ePbs2bMu++ay+fPnO75uXl6eHvI9e/bM
yMiwn15YWLh48eLevXsX/z33Ll26rFixorQfrysWt/0eCJGRkVc8M3Xv2atT
905H3ftwycnao//17689d7xRGzVKe4OKdS8/Sw8fFjVriilTxPz5JddZ+91J
L/3sfu9e0by59oxyvXoF9sLDH3V8ZBjDUffUPXVP3VP3BpJ133m6cDHq3ijU
fVDN6cfdbsmSJfL0AQMGFD9x06ZNnf5IFnGJV8zMzBwzZoz+y+xOn6jIYrHE
xsbKr+uJEyfKtNffzvTp051+Tl6xuOVFRLs0dOhQ/SLkJZb2Rty8LH9D3duo
e4dR93JJSaJhQzF5spFv05DHzC8q0j4l7rhDrFqlfeqWWFiY6NHDS3W/ZYuo
WFF79MWuXQN7o0c/yjPiUffUPXVP3Zt9GDSW/Dd5p6+Eq1H3BqHug2clIt3x
k2Hjxo36i86fP28/MTU1Nep3S5cudax7eQb9SfR69ep17Nix4i+SUZ+Tk1Pi
UjIzM2XX6xek//J7CVcs7rCwsE5u27Nnj4vPf+res1en7p2Ouvfh/Lnu9+8X
996rPQj/hQslN22a6NfPS4+qt2OH9jW7dq04ciSwFx/fXH9aFlNR99Q9dU/d
U/cGknX/wQzhYp16UPfGoO6Dak4/7nbJycl6EUdHRzv9bImPjy9R90lJSf36
9et0+Xfq5auXeGudO3eWZ3b8Z5jVau3fv798ra1btzpeyhWLe8WKFXNd0t+4
NGHChPz8/NLejjuX5W+oext17zDq3ub3dV+zpjh1yslLv/1W+7SJjBRZWaZv
wwbRqJH2pIFlfResVn9biMrRz01BW/cv/VeoTLHuFXNpwkClKV66yra1UNqM
D5Q2sb/SRn2oNMXEVqn7XY8KlUW2UZrid5MCse7f/1q4GHVvFOo+qOb0417c
2LFj5Yt69OjhtPsOHjxYvO5PnTql/0L9mDFjMjMzS5zZYrH07dtXvnTDhg2O
L+rTp4980YEDBxwvRbG4k5OT5fWXb0G+L7m5ua7PTN179urUvdNR9z5cgNb9
1q2iSRPtJ/vyypu9evXEAw+Uue4tFu0+BhkZfrSsrJb607KYirqn7ql76p66
N5Cs+3/PFC5G3RuFug+qOf24F3fy5Ek9eGUgb9++PS0tzXY5xmUyR0ZG6i/S
695qtYaHh8u/ysNjdnb2pT/S39rs2bP1n6EvX77c/gRGMqUjIiLkiaGhoYWF
hY7XQaW4Zc4PHz5cvvrIkSPduesmde/Zq1P3Tkfd+3ABWvd79mifzLVriwYN
TJ9M+zp1ylz3mZnaneHlu/DLL/6yY8d4Rjzqnrqn7qn7wKv7d2cJF/uAujcI
dR9Uc/pxL2Hfvn29evWy/95637599eeY040YMeLgwYPybHv27HHx2+6xsbHy
PBcuXCj+jHi9e/fWf5qvf4tgx44dTq+ASnHrv9Evr6Sb//aj7j17dere6ah7
Hy5A6z4/X3tEfcdH2zNjs2eLv/+9zHUvb4SmTbV7F9Sv7y975ZWHSvvfh4Go
e+qeuqfuqXsDybrvOFu4GHVvFOo+qOb04+7o3LlzMv3sJS5179597Nix69ev
t/9c/scff3RR93FxcfrZioqKFi9ePGzYMPuLQkNDJ0yY4KIr9W8mFH9kP/et
XLlSXpb7r6tyWT5B3duoe4dR9zZz6l7m8PDhYupUcfas50tJ0R6svkYN53Uv
d/68OHNGpKaavhUrxCOPaN9McHxwPxcbP167S3+1atoTDvrJXnuNuqfuqXvq
nroPvLrvMEe4GHVvFOo+qOb0414ai8WSkZGRmJiYkpIi/6z4mZabm3vixAlD
3pRrTu/tX25Q9zbq3mHUvc2cul+8WHTrJlq3Fl26eL5OnUSbNuLOO7Vr6PRS
vPZgdJs3i5tvFp99Jr76qgxr1UqMGiWWLfPG4/65uezslkVFRSoHQHdQ99Q9
dU/dU/cGknXv+hk3qHujUPdBNacfdwQQ6t5G3TuMureZU/cyh0ePFh07il69
PF+PHqJdO1d177XJL5mmTbX3aMKEMuzJJ0V4uFi3zvcf4mILUTn6uSlo6/6V
pUJlinW/9BWlfdpbaV+/r7Rv23u+n5soTeWi5T4KU5pi3Uc3UppK3a9+TqhM
8RMmCJ8R7+15wsU+6EndG4O6D6o5/bgjgFD3NureYdS9zZy6LygQ0dFixgzx
9deeb/p0rVnuvtv3dX/2rFi4UISGip49y7DGjcW4cdR9EI26p+6pe+reDLLu
35ovXIy6Nwp1H1Rz+nFHAKHubdS9w6h7mzl1L/fbb2L1aqWtWKH95n716r6v
+wsXxLZt2j3zy7Tnnxf9+olp08Tevf6yI0d4zHzqnrqn7qn7APuXvKz7dguE
i1H3RqHug2pOP+4IINS9jbp3GHVvM63u5edYYaHScnK0z1UXj6rntVmt2vXJ
zS3bhg4VISGiUSPti85P1qnTI7t27VI5ALqDuqfuqXvqnro3kKz7tguFi71P
3RuEug+qOf24I4BQ9zbq3mFeqPvkZO2B099/X4SF+enkjS8LeuJE338alJjr
Z8Tz/61fr90zf8gQ1WozcFOnNtSfdNVU1D11T91T99S9gWTdv7FIuBh1bxTq
Pqjm9OOOAELd26h7h3mh7jMyxF13CT9XqZL2+G8+/zQosUCv+/x87fpHRfnR
9u5t5oWnMaXuqXvqnrqn7g0k6/5fi4WLUfdGoe6Dak4/7gggxVtG5e1Q92as
HNd9bq52p/ewMN//3La09enDz+7Nuv6pqSIx0Y+WktIiLy9P5QDojqCte9dP
WXXFKX4hz3pXaYp1P7Wb0lSe1u23Wkr7rJfSxg5V2vDRStv/kNJU6n7me0Jl
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
AdQ9gKBD3duoe4cZVfcy7c+fFwcPil9+Yf9/kyZpP0b3ft3LSxw+XNSpoz2w
HiuxadMa8Xv31D11T91T92YfBo0l675mrHAx6h5AEKLubdS9w4yqe3l7xseL
devEmjVi7VqmTSZ2u3Y+qPv167VnxLvlFu2XAliJDRnydy886y51T91T99Q9
dW8gWfc14oSLUfcAghB1b6PuHWZU3Z89K956Szz1lNazPi84P9mTT4rnnvNB
3aeni717xejRIiKCldzChY1PnjypcgB0B3VP3VP31D11byBZ9/fGCxd7h7oH
EHyoext17zCj6j45WdSrJ2rW1AJfJi2Ta9hQPP20D+pe7tw57TH9IiNZya1b
1zQlJUXlAOgO6p66p+6pe+reQLLu7zkhXIy6BxCEqHsbde8wA+u+SROxbJlI
TBQpKUzbjBni/fd9U/cWi/YIcvKDy0qMZ8QzdR+pUqr75tuVNq2L0lY9r7Sn
13u+vp8oTeWi5cYPVlpohNJGfag0lU/Wh/YLlfnwmkuBWPd3JwgXo+4BBCG/
qvsHHvDNw5hHR2sxS93bZ1Tdnz4tmjYVP/2kPemYz98pP9miRaJzZ/HDD75P
WmYfdU/dU/fUPXUfiHV/V6JwsXcGUvcAgo7/1P2QIeKuu7Sf9np/a9Zodx2n
7u27SN2btnnztMcimD5dC3zmJ9u0qemZM2dUDoDuoO49Rd1T99Q9de+ErPs7
k4SLUfcAgpCf1H1OTsiwYVrdR0f7YHPniscfp+7/N+revEVGavfMnzhRfPMN
85ctXdokKSlJ5QDoDureU9Q9dU/dU/dOyLq/45RwMeoeQBDyk7ovLAyZPFnU
qqU95pj3V7++NurePurevMXGat9Nat9evPsu85cNH/73Q4cOqRwA3UHde4q6
p+6pe+reCVn31ZKFi1H3AIKQn9T9pUu9liwJeeutkDZtfLBnnnn4kUeo+/+N
ujdvZ8+KrVtFWJgYOZL5y6ZNaxQbG6tyAHQHde8p6p66p+6peydk3d+eIlzs
beoeQPDxk7q32bILCjIvXMjMyvLBtm5d8fTT1P3/Rt2bN4tFFBZqj13P/Gd5
eTyqnonb2VioTLHu3/9aaZ/3VNqMD5TW6SvPV+s3pXWforQlryltzDClPbtG
aSqBrPhkfBGhSvtwlNICse5vSxUuRt0DCEJ+U/e+tHv3Fp4Rr/ioe3+e1eqb
p5Yo1wvxwnGGuqfuqXvqnro3kKz7W88IF6PuAQQh6t5G3TuMuvfbybTPzxfZ
2czI8Yx41D11T91T94FY91XShIu9PYi6BxB0qHsbde8w6t4/J9M+Pl58+KFq
77ASmzq1Ib93T91T99Q9dW/2YdBYsu5vPidcjLoHEISoext17zDq3j9nsYiN
G0WFCuL665mRa9iw3vr1680+zlD31D11T91T9waSdX9TunAx6h5AEKLubdS9
w6h7f1tRkThwQPsUnTZN3HST9qFhBm7GjEZxcXFmH2eoe+qeuqfuqXsDybqv
nCFc7C3qHkDwoe5t1L3DqHt/W16eWLBATJ8u+vYVNWv6/vqUu4V44TgTtHWv
0kqXKdX9obpKGzhBaV2/VNqEgZ7v5R+U9sQmpfX8XGmRbZTW4wulqXyyhmwR
Kpv3ttIUv9ICse5vPC9cjLoHEISoext17zDq3t+2apV4+23RqZNo3566N2Mh
XjjOUPeeou6pe+qeundC1v0NWcLFqHsAQYi6t1H3DqPu/W2DBolq1UTz5qJ1
a3HvvdoHiBk4HjOfuqfuqXvqPhDr/q8XhIu9NZi6BxB0qHsbde8w6t7f1r+/
6NVLzJsn5swRN9wgevdmRi48/NEjR46YfZyh7j1F3VP31D1174Ss+4rZwsXU
6/706dOrVq1asGCBvKykpKQrnj8hIWHNmjULFy5cvXq1/LPjGbKysjZu3Cj/
wbx06dLdu3dbrVbFawgAJVD3NureYXrdjxghsrKUdvSoaNJEREX5e90rvpte
WM+eYvJksXOn2LJFVKkinnuOGbnOnR+R/8oy+zhD3XuKuqfuqXvq3glZ3Ndf
FC6mWPcbNmzo0qVLp9917tx53bp1Ls4fGRkpz1P8/EuWLCl+hv379/fs2bNT
MePGjcvLy1O5kgBQAnVvo+4dlp8vQkLE/feLl19WmuymWrXE9u1+XffynW3b
VvU9NXt16ohx40R0tEhN1R5eb9YsZuSWLWty6tQps48z1L2nqHvqnrqn7p2Q
dX9drnCxdgp1HxsbK/O8W7dumzZtSk5OXrt2rV76J0+edHr+vXv3ypeGhoZG
RUWlpaX99NNP8s/ylD179uhnSE1N7d69uzwlMjJSnuHw4cMffvih/OuCBQs8
vpIA4Ii6t1H3DpMx/vrronZt8dBDSqtXT1Sv7u91n5MjatTQrqriO2vq7rxT
+0WJmBjtexFxcdovOzADt29fs/Pnz5t9nKHuPaVU9zPfU1rbhUpTjLURIz1f
hzlKu+eE0hQvff5bSnt+ldJUPlkVL/rjAUpT/EoLxLq/Nk+4mErdf/nll/IG
WbNmjf2U1atXy1O+/fZbp+efPXu2fOmKFSvsp6xatUqeMnPmTP2vs2bNkn+V
/1S2nyEhIUGe0qdPH+6fD8BA1L2Nune2hARx8KCsHqWtXy8efdSv75lvtYoz
Z8Q994g1a1TfWVPXoYP45BOt7uUVLizUniCPGbiCghCLxWL2cYa69xR1T91T
99S9E7Lu/5wvXMzjupe53atXL3mDFP/Gb1ZWVufOnUNDQ50+CuuUKVPk+bdu
3Wo/JSYmRp7yySefyD/L/8X07NlTvvqFCxeKv9aBAwdiY2M9u5IA4BR1b6Pu
nU0mT2amOHdOaYcO+fvv3ctYTk3V6v6XX1TfWVPXrZv4+GOxdavvHwGgXC47
u2VRUZHZxxnq3lPUPXVP3VP3Tsi6v6ZAuJjHdX/mzBl5a/Tr16/E6f3795en
p6amOr6K/pP90aNH5+TkyL/m5+eHh4fLU5YuXSr/mpKSor/UarUeOXJk1apV
GzdujIuL8+zqAYAL1L2Nui8le+UsFqUlJWmPme//dV+zpnZfBcV31tTJuh8w
QEyYIGbOZMbv+++buPNgyIqoe09R99Q9dU/dOyHr/upC4WLthnhY9/Hx8XqM
lzhdniJPd/pv3YKCgi+++EK+tG/fvp9++qn+fQD5Bz32Dx48qP8cf/LkycUf
VW/mzJmFhYWeXUkAcIq6t1H3ps3/nxHPXveJib6/Mi42dKjo21dLlYkTmfGb
PbvRiRMnzD7OUPeeou6pe+qeundC1v2fLgkX87jujxw5Im+N8ePHlzh9woQJ
8vTDhw87vkp+fr78Z3CnP1q4cKEe77t27bI/kP7cuXPlX3/88Uf9Yfe+//57
z64kADhF3duoe9NG3Ru15GTtCQr79GGmbMIEnu+euqfuqXvqPvDq/iqLcLHS
6v7YsWNHS5GcnGz7ve7Dw8NLvKJ+Z3t5Nse3OW3aNPkieTPKN56TkyP/O3Lk
SHmKPF2+NDo6Wq/7lStX2l/l0KFD8pSuXbvypHgADETd26h700bdG7XMTDF7
toiIYKZs4cLGpT3JkYGoe08p1f2mJ5TWZZrSvntTaYrfW1DZ33cr7Y1FSpvW
RWmKHzWVT1bFZ8Sb3llpil9pgVj3FazCxdo6q3uLxdKpdF9++aU8z4kTJ+Sf
w8LCSryufislJiaWOP3s2bOdO3eWnZ6WlmY/MT09vUePHvL8KSkp+/fv139w
n5+fX/wVhw8fLk+Pj4835hYBABt1r6HuTRp1b+D19PkDy5fj8Zj51D11T91T
9wFX99KcK3H6WnPnzv22FJs3b5ZnuHDhgrw1evXqVeK56nr27ClPL/G499Kv
v/7q9LsBEydOlKfv3r07MTFR/qFLly4lHm9fv6v/gQMHFG8HALCj7m3UvWnz
q7rPyRFbtoht2/4wecqyZeKuu0yv+6IikZvL/HT5+dQ9dU/dU/fUfeDVvXkG
Dx5c4sf0eqEPGTLE8cxJSUlOvxswatQoefqRI0eKior037JPSEiwv1SWvv7g
e6dOnTLvHQEQbKh7G3Vv2vyn7uVH9sgRceON4rbbSq5KFVGpkjh50sRLt1pF
erqIjxdxccwfl5TUQn9YY1NR956i7ql76p6697bIyEh5g0REROg/bZf/1R8S
3/4gePL/GrGxsfojssqX9unTR750xYoV9regP5KejHr91+q/+eYb/Xf57Q+S
v3btWnnKsGHDSnxPAABUUPc26t60+U/dFxWJ/fvFLbeIwYNL/uO/Xz+t8U39
2f3Fi2LgQKVCYaZu6tSG8h9pZh9nqHtPKX1wqXvqnrp3E3Vf3IULF/r166c/
cr4s+nHjxsk/Dxw40H63/AMHDshTevfurf81JiZG/839yZMnL1++fMaMGZ07
d5Z/3bJli36G9PR0/Q2OHj36v//97/Tp0/XfxN+/f79v3kMA5RR1b6PuTZv/
1L28Art3i/vu037LvvhdsmV3nzgh7r3X3Lo/c0b7+pKXUrMm88c9//yD27Zt
M/s4Q917irqn7ql76t4Hzp07Fx4erke6nvn6I+rr9Lrv06eP/RTZ6UOGDLE/
QN/AgQNl8hd/g6mpqZMmTbK/wUGDBu3evdt77w+A4EDd26h70+ZvdV+7tnYP
+aKi/62wUCQliRo1rlz3VqtISBBRUdqv6pdpmzdrv9p/9dUiPFx8/jnzx82f
z2PmU/fUPXVP3VP3Tly8eDEhISEjI8PN82dlZcnzZ2ZmlnYG+aITJ06cPn26
xCPsAYAhqHsbdW/a/LDus7L+cLr7j5kvPze2bhUffyxGjSrbRo4UAwaIP/9Z
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
43sIP/aY9oNd79R9To5o21a0aiVatxavvOKPk1fspZdE5cpi2zYv1X1urjh4
UHzzjfj2W7M2YoRo1077TDtzhvnL0tNb5ufnm32coe49Rd1T99Q9dQ8AcAt1
L+3bt6VlS9GkiQgJEY8/7sv97W/iySe9VPd5eWLgQNGggXj4YfHII/44ecUe
ekhUrOi9urdatXtQ/PSTifvmG9G9u3j7bfHrr8xfFhvbPDs72+zjDHXvKeqe
uqfuqXsAgFuoeykzc8uGDdrPVefN8/HefFP84x9eqnuLRfz2m/aoen67nTvF
xo2iRg3v3TNfv1kyM03c4cPiiy/EHXdod0tgfrLu3R/Zu3ev2ccZ6t5T1D11
T91T9wAAt1D30qVLP587V33vXt+vV69Kzz7rpboPiHn5MfO9sPR0sWSJ9mAC
TZowf1m7dg///PPPZh9nqHtPKdV9n8lK6/SV0ua+ozSVp3X76wWlvbZEaYq3
m+ITEb43U2kqn6z//kaobPG/lKb4lUbdA0A5QN1flm+xJOTn+35jx/b22qPq
BcTKX91fuiQuXvTf5ykIzqWmtuD37ql76p66p+7NPgwCAMxG3fuV8PCPvPaM
eAGx8lf3zC8X4oWvbureU9Q9dU/dU/cAALdQ936Fui8x6p55ZSFe+Oqm7j1F
3VP31D11DwBwC3XvV6j7EpN1X6eOWL5cnD7NmFlLS+Oe+dQ9dU/dU/fUPQAE
POrer1D3JZabK+6+W9SvL5o3Z8ysvfPOw9HR0WZ/dVP3nqLuqXvqnroHALiF
uvcr1H2J5eeLV14RrVuLN95gzKz179/gl19+Mfurm7r3FHVP3VP31D0AwC3U
vV+h7h33228iOlr89BNjZm3fvmYZGRlmf3VT957yZd2/slRp785S2vDRnq/J
z0qrnqC0np8rrd8kpSl+0FU+WZ/YJFT24SilKX6lUfcAUA5Q936FunfcuXMi
Pl4cP86YWUtIaH7x4kWzv7qpe09R99Q9dU/dAwDcQt37FeqeMV8sxAtf3dS9
p6h76p66p+4BAG6h7v0KdW9fYaE4cEBs2sSY6YuOfiw9Pd3sr27q3lPUPXVP
3VP3AAC3UPd+hbq3LydHLFwoPvyQMdMXEdHQC8cu6t5T1D11T91T9wAAt1D3
foW611dYKI4eFR07Kv2rnjE3N3Vqw9jYWLO/uql7Tyl9cKl76p66dxN1DwDl
AHXvV6h7fTk52v2lq1UTI0cyZvqmTWtE3Zu3T3sLlSnW/dihSus4W2mT+yit
/bee77nVSlPM8zaRSvsozJere8jzKdb92/OUpvo8htQ9AAQ+6t6vjBv3UfXq
4vXXRbt2Qb033hD/+Ie47z6RkMCY6UtObpGXl2f2Vzd1T91T99Q9dQ8AMBV1
71cmTdLqvl498dBDQb0HH9TSvk4dcekSY15YiNVqNfurm7qn7ql76p66BwCY
irr3K8ePf7RihViyRHz/fVBv4ULtn+W336799j1jZi8+nue7p+6pe+qeuqfu
ASDgUfd+JS9v/NmzlWJjg30HD1acP1/ccovYto0x07dnT7OMjAyzv7qpe+qe
uqfuqXsAgKmoe79itZ63WBKKioJ9eXmLDh0SDRtqv33PmNnr1OmR3bt3m/3V
Td1T99Q9dU/dAwBMRd3DD1ksPyckVH/11eovvsiY6evW7fm9e/ea/Vkt/+Xs
w8T+6ZzNV1N8li7Fup8wUGmK3xwY9aHSjt3n+cIHKa1hjNIWtlXaDy8rrfsU
pal8sr41X6hsRSulKX6lUfcAUA5Q9/BL+UVFCSkpCadPM2b60tKS8/Pzzf6c
pu49Rd1T99Q9dQ8AcAt1DwBeQN17irqn7ql76h4A4BbqHgC8gLr3FHVP3VP3
1D0AwC1G1f0LL7wwZsyYxYsX7wCAgLJ///7z588bdVAtDXXvKeqeuqfuqXsA
gFuMqvtXXnmlVq1a1atXvw8AAkqrVq22bdtm1EG1NJ0AwL+ZfRgEAJjNqLof
Pnz4P//5z2effbYVAASUbt26eeEx8wEAAABTGVX3GRkZ8fHxxwAg0CQkJOTk
5Bh1UAUAAAB8wqi6LygoOH/+/DkACDTy2CWPYEYdVAEAAACfMKruAQAAAACA
r1D3AAAAAAAEOuoeAAAAAIBAR90DAAAAABDoqHsAAAAAAAIddQ8AAAAAQKCj
7gEAAAAACHTUPQAAAAAAgY66BwAAAAAg0FH3AAAAAAAEOuoeAAAAAIBAR90D
AAAAABDoqHsAAAAAAAIddQ8AAAAAQKCj7gEAAAAACHTUPQAAAAAAgY66BwAA
AAAg0FH3AAAAAAAEOuoeAAAAAIBAR90DAAAAABDoqHsAAAAAAAIddQ8AAAAA
QKCj7gEAAAAACHTUPQAAAAAAgY66BwAAAAAg0FH3AAAAAAAEOuoeAAAAAIBA
R90DAAAAABDoqHsAAAAAAAIddQ8AAAAAQKCj7gHAJ6xW64YNG0JDQ1u1atWy
ZUv5hzlz5pw7d847l56SkhIREdGpU6cWLVq8+eabH3/88bZt27xz0QAAADAD
dQ8A3nfkyJH69esLB3fdddeuXbvMvvQffvjhlltucbz0AQMGWK1Wsy8dAAAA
ZqDuAcDLoqKibrjhBnnUrVWr1rRp044ePXr48OHx48fXrVtXnnjttdcmJCSY
d+kFBQX6pT/99NMzZ86Mj4/fv3//iBEj5OXKE0eNGmXeRQMAAMA81D0AeFNm
ZuZdd90lD7mtWrW6ePFi8RelpKRUrFhRvigsLMy8K7Bu3Tp5EVWqVMnNzS1+
+pQpU+TpDzzwgHkXDQAAAPNQ9wDgTaGhofpP7fPy8hxfOmrUKPnSRo0amXcF
5s+fLy+ifv36JU5PS0urUaOGvOiCggLzLh0AAAAmoe4BwGtyc3MrVaokj7fL
ly93eoZLly45rX4DnT59Wj/mt2vXLj093dTLAgAAgNdQ9wDgNYsXL5YH28qV
KxcWFvrwakRERFSoUEFek4oVK/bu3dvUX/MHAACAd1D3AOA1I0eOlAfb1q1b
20/JyMgIc7Bv3z6zr8l//vOfe++9Vz/4X3311R06dEhMTDT7QgEAAGAe6h4A
vOa9996TB9vu3bvbT1m5cqXjM9Nt3LjRC1fm0qVLCxcufPDBB/ULrVatWmxs
rBcuFwAAAGag7gHAa9555x15sO3Zs6f9lLi4uPm/0x9Sr0KFCllZWeZdB4vF
UvyvVqs1MjKySpUq+nPkmXe5AAAAMBV1DwBeExYWpj8XntOX6o9mf//995t0
6XFxcTfddFPVqlUdXzR37lx50dddd51vHxAAAAAAHqPuAcBrli1bpke00wey
69Wrl3xp+/btTbr0vLy8P/3pT/IiHO+Bv2XLFnn6bbfdVuIn+wAAAAgU1D0A
eI1s53r16snjbbNmzYo/il1mZuakSZNuueUW+aKIiAjzroB+6Y0bN05NTbWf
eOrUqYceekie3rVrV/MuGgAAAKai7gHAm37++efbbrtNHnKvv/76p556ql27
ds2bN5d/1o/DNWrUOHr0qKmXfs011+iX3qRJk7fffvvZZ5/985//LE+pX7/+
iRMnzLtoAAAAmIq6BwAvO3PmzGuvvVa5cmX74Vf++cknn4yMjLx06ZLZl759
+/YXXnhBf757XfXq1bt165abm2v2RQMAAMA81D0A+MqpU6d27dpV/E7yXpOX
l3f8+HF56efPn/f+pQMAAMBw1D0AAAAAAIGOugcAAAAAINBR9wAAAAAABDrq
HgAAAACAQEfdAwAAAAAQ6Kh7AAAAAAACHXUPAAAAAECgo+4BAAAAAAh01D0A
AAAAAIGOugcAAAAAINBR9wAAAAAABDrqHgAAAACAQEfdAwAAAAAQ6Kh7AAAA
AAACHXUPAAAAAECgo+4BAAAAAAh01D0AAAAAAIGOugcAAAAAINBR9wAAAAAA
BDrqHgAAAACAQEfdAwAAAAAQ6Kh7AAAAAAACHXUPAAAAAECgo+4BAAAAAAh0
1D0AwIX4+Pj//Oc/Fy5c8PUV8Ufyxpk7d+4PP/zg2etyw/pWYWHhihUrdu/e
7esrAgCAMah7ACj3Ct1w6dIlx1eMi4u76qqr5P8gHn74Ye9fbf83bdo0eePU
qVOnrK/IDesPOnTooP/7Z/ny5b6+LgAAGIC6B4DyLT4+Xrhh0KBBjq/73//+
V3/p1VdfffHiRe9fec9YLJa1a9fK/5p9QR7XvZs37Llz53bt2pWYmKh2NeFc
gwYN9I/CkCFDXJztwIED8qNg4KfToUOHTp48adRbAwDAjroHgPItISHhxj+y
H/aLn/jxxx87vm5BQcFrr71Ws2bNCRMmeP+ae2z+/Pl/+9vfnN4bwVge172b
N+zUqVPl2+/bt6/CdUSpli1bVq9evZCQkPj4eBdnq1KlivwoGPg7FJMnT37s
sceMemsAANhR9wAQbP7617/KY/53333n6ytiisLCwho1asyePdsLl+Vx3bsp
LCyMuvcti8Wi/w6FgXV/8eLFm2++2bOHawAAwAXqHgCCjeF1L2vl4MGDxf+6
d+/e/Pz80s6flZW1a9eu1NRUo65AcVOmTLnjjjuKiopKO8OlS5dOnDgRHR2d
mJhotVrdeZvybKdOnZKvcuTIkeJ3CShR93l5eXv27Dl79qziu2DXvXt3D+q+
tGtr58EtIOXk5MiPsvzAGfgOmkF+4u3evduozy75zur/RnKn7uWNKS9X3kRx
cXGub9iRI0fWrVvXC788AgAIKtQ9AAQb13V/++233+Cgbdu2Jc526NChSpUq
dejQYejQoddee618gzVr1jx37tywYcP+8pe/yL9WrVr1119/LfFakZGRtWvX
rlChgv7/nSpVqowfP97Au9BfvHjxtttuGz16tNOXxsTEtG/f/qabbrL/j69i
xYpjx451/FaAzGr5Xq9atUr+ed68effdd5/9Ve666y772fS6f/DBB+V7+uST
T15zzTX6ee69994VK1aUeJtu3rBSvXr1qlevfuutt+pvUP63xGtt2bLFg2tb
pltAhv+NN97YsmVL+eeUlJS33377//7v//RXueqqq77++mv9bM2aNZMX7fQG
z8vLk5cuX7p582anHw4X1q5dK1/x5ptvdnxR5cqV5Yu2bt1qP+WBBx6Qp+Tk
5ERFRT3zzDPXXXedfj3l7bBz587ir/v55587fgikX375pcSlfPXVV7Vq1brj
jjvsv8kiv2qKv8qzzz5b/Py5ubn9+/cvfsNef/31jz/+uOOngS49PV3e8nPm
zCnrLQMAgAvUPQAEmzLVvf4/iH/+858lzrZ79255ut71MvP1s8nO1X+dX/9r
mzZtir/KW2+9pZ8uu+mVV15p0qSJfp/n5557zqh37dNPP5UReubMGccX6fdy
t9d3ixYtbrnlFv2voaGhJc78zjvvyNNlKcs3qJ+nQoUKd999tyzH4r8xrde9
/XaoWrWqvAWuvvpq/fxz584t/jbdvGElGYnFz3PFunfz2pbpFoiLixOXv2Mj
0/7+++/XzyY/0PK9kH9Yt26dfrYpU6bIv956662y5Uu8hfnz58sXVa9e3YOf
UK9cuVK+rvxQOr7oT3/6k3zRxo0b7afcdttt8pSPPvpI3lDyM6pu3br33HOP
foUrV66clZVlP2eJute/EKR9+/aVuJSpU6fq57F/x8Z13b/22mv62eQNLj8c
//jHP/QbSgoPD3f6Pvbp00d+IZT1lgEAwAXqHgCCTZnumS8bxEXdS7JrCgsL
Z82apf9Vnl/W3NChQ+Wf77zzTvv5p0+fLk+RaTZjxgz7nZajoqL0bwXIMjXk
XWvWrJkMK6cv2rx5s7yskSNH2u9Ynp+f/95774nLD1xf4nHV9F5+6KGH5H9r
164tr/Pp06dtlx8N78SJE/az2etevqf2n1AnJCQ88MAD4vLPzeX5S7uqpd2w
xb300kvCjXvmu3lty3QL6HV/7bXX6ve16Nat29atW/V7Wci3af+1i9zcXP1B
52bOnFniWj3++OPy9DFjxri+8k55UPdS06ZNjx07pp8oP731E6dMmVLapcjw
L63u7fbs2aOfx8U985OTk/XzzJ8/336i/CpYuHDhyy+/XNpzIkRHR8tXcbzb
AAAAHqPuASDYGFj3V111lf6D8qSkJPnXatWq6d0n40v/obN+5ry8vOuvv16e
Mnbs2BJvZ9KkSfJ0WYKq75XNJq+JvD6yuEs7g2Nr5+Tk6D8iX7RoUfHT9V6W
GjZsmJGRUdob1Ov+9ttvP3fuXPHTt2/frr+6i0dOM7zur3htbWW5BfS617n+
3suoUaPkeerVq1f8xOPHj+t5npKS4vrKO+VB3b/44osl3jsZ+8LZ3RLsjKr7
gwcP6uf5/vvvr/COFWO1WuXXi7z13H8VAABco+4BINgYWPf2fpeRKP9av359
/a8yl/SfCOt/jYmJ0f/q2J76OWWgef7+/G7z5s3yTcksveI5jx07tmzZsvHj
x3fu3Flv23HjxhU/g97L8oZy/VxpLh4z/4477pAv+uSTT0p7XcPr/orXtrgr
3gL2undRxzr9V8hFsbvrSwMHDhQOv5rhPg/qfvHixSXOqd8t4dVXXy3tUoyq
e6lJkybi8l1T5LscGRmZm5vr4sx28syvv/66O+cEAMAd1D0ABBvv1/2MGTP0
/9Fc48D+/yD1x9ZbsGCBzCsXj5Z/4sSJrl27Vq1aVTgICwsrfk69l999913X
l+ii7vXc69mzZ2mva3jdX/Ha2spyC9jr/uTJk1d8s/r78vzzz+t/LSwsvPXW
W+UpGzZsuOLrOmVI3evX6uWXXy7tUgyse/mm2rdvrz+OhLj8kHqtW7detGiR
689q+enRrFkzF2cAAKBMqHsACDber3v9l+6lTqXo1q2b+vv12WefubgPwObN
m2+++WZx+X4CnTt3XrZs2aFDh+TV1n893Gndv/fee64v0UXd16tXT75o+PDh
pb2u4XV/xWtbplvAXvdJSUmu36zt8u9lyBKvUKHCkSNH5F+///57cfkh691/
ur0SDKx7F7ewgXWvkzfaxIkTW7RooV9JcflhCbdv317a+UePHl23bt0rvlkA
ANxE3QNAsPF+3UdFRen/ozl16pRB74QTc+bMue6660p76b333iuvwOuvvy6v
avHTzaj7goIC/WkBFyxYUNrrulP3r776qjzPFb/14ea1LdMtUKa6lzp27Gi/
qi+//LJw+VsJV7R69Wr90u0P32fn5bo/cOCAfp60tDT3r39GRkZERIR+xSpV
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
Id/tVahQoW3btn388ceGdk/10vvvv1+zZk36m9qcHTp0eOutt/i7Xn/99ZUr
V+rOTAc7VVO8gco/vWrVqnS8GH4P0dHRvXv3lhdFc+bUoWPHjuoK4Ofn16lT
J2o2y8dO9uzZp06dqtvEpW+eSti5c+fRo0fzb4C+LirPmDFjsmXLRv/Nly9f
cHCw8e0HAHA8VNi9knqVeP78+cKFCytWrCjPSX9QtaZ7VpBYsWJF0aJF8+fP
L/cwpLaKbp3WsGFDeWZu982aNWM6nfM/++yzggULUtvD0O6VVGvEF198QR9E
ajBlyhRaFJ+TqjhqWhsaBADAXuzYsYMfnrt27VIyPzWr6NDet28f/b1hw4Zi
xYrJVcGnn36qN/ORI0fKlCnDexARefLkobaN3jWLAwcO0AJz585t+Fm5cuWi
l3Q7Ra9evZqmeHl5BQUF1a1bN0uWLHzJVGXt2bPHaIH79OlDM9DnUlOK11ek
hIazHTt2rEaNGvK6UNVKbdHhw4dTA1VvTnr7sGHDdOvAd999t3bt2kaHQFfe
EM3IbHuvXbu2RIkS8jdGdThVziTmurNR8zinAfTjYnSZCmvsUqVK0XeYN29e
foMG/au3/OPHj6srQIay3YAoWbIkLefFixenT5+uX79+1qxZ+fy0j507d05v
ZuXbSwXm7d6ichIbN27U+xGkn0Vmwu6VNAbIF6gAtL30fp0nTpzIpz958kTh
mjIdFL4FOD6m7J74/fffeUWkWwNQo5TPT03H5s2bUx3Fj9bvv/9e973Lli2j
iY0bN65evTo/kMuWLUu1H38v7dW6M9+4ceOjjz6S62eqAeS7vZiB3d++fZtl
+i/t0lQB8nmo2uSnAg4ePCjPGRYWJh9NVNoqVapwd37jjTeWL1+uu8ykpKRK
lSrxGq9bt25du3blWs0PVUL3pjPlBeC9mziFCxemWoi+B/7ffv36ybNduHCB
H+/svytlBD+RLrfMW7VqpXybAgDsi6V2r7BepTonX758fE6qTmm20qVLU4VG
/6UqS3cQpCVLlvDmlnwj7SvtftGiRey/zvnnz5+nv/v370+Gzv7X7hVWawSv
1am5xX9HqBnDRwAgqGlkvh8XAMBmjB07lh/OCi8Td+zYkeYnr+e9i1mmWFFz
ixynWrVqunNOmjRJrq+++eYbuUn21VdfPX36VJ7t77//ZpnDkBp+Fq/fyA3l
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
V/nIQl5eXvy/1rJ7Lt0DBw6Up8j9RUmCmv1H9uzZWea9kHpvp9Zm4cKF5dqs
ZMmSI0eO1BvOjkNN2U6dOsljxL377ru0WKqZ9epqixqi/Fs1OvMrMW/3Cmts
GSvavUW7QYbpXw2+/B9//FF3ovLtpQJ1dq9Xzrt37/KyGT5T0tDuVTQGMjJv
3OBFJaZNm6ZiTXX3BxVvB46JGbtfuHAhy+zywc868vtBiF4m0D3x+0q7J2nl
Uzp06MBM3PBl3u7DwsLMrBc/aWC0nqQFsszRV+TuKzExMUWLFqWJefPmpWNz
0KBBfAyWEiVKPH/+XO/tCguQkXnTQe7cuVnmCTf6idy1axd9ySTvtWvXZrB7
AFwX5XZvUb2amJjYvn173iasVasWNQ+ozRAeHi7f32RYEkvtnlf7FSpU4C8Z
2r3Cai3DdPvHx8eHZV72wrM+AXAE+PA+RkfV4xWIUbuX+7obRfaas2fPGr7K
H8YxfPhw/l9r2T1/0tOYMWPkKfxaqlGyZs1q2MBLTk7es2cPvUt2YWp9UT1s
9El/1BqcNWtWjRo1eCFZ5nXkU6dOyTNY1BDlt4jqnmNRjvn77hXW2DJWtHuL
doOMV1mz4fIt2l4WIWL3cjlv3brFS+Xn56c3p6HdW9QYkDlw4IA8uj4dyCrW
VPegUPF24JiYsns6ZPg5Maq4+BRqRvI5lTyqUrndUz3MdGRWFxG752M3UU2r
5KWkpCQ+sp8udHgaPQeo3O75F9i6dWu927tg9wC4Nsrt3qJ6dd26dSzzyRry
AE2c48ePm/ppDgoK4i+ZeR60rt0/fvy4fv368ogihnavsFrLMN3+mTZtGsu8
D/GV6wsAsAFyP3zDB7qptvu0tDR+E7Hh8ERkXlyd5Jf++ecfXgDDM37K7Z5a
rfyi/MaNG+UpfOyy6dOnX9Dh3LlzvO/Tpk2bTJU/PT2dZmvRogUv2K+//mpm
ZWNjYxctWsRrPKqf5brRoobob7/9RlPy58+v4gH3ZuxeeY0tw9faqEtaWgCL
doMMy+1exqLtpQSr2D3tz7yDh+EQDYZ2b1FjgEM/zXwEfj4OOWk+HUoK3yuj
Kz6Wvhc4LEbtng4Tfi6XkB8z+vz5c95ZXcn95srtnrdXCfoR0Z0zOjqaP+1C
nd0fOnTI6K8ViTyv63SfMccHrBgwYAA1gKmJS6ts5nGZCgsgjzCgd2MaVWj8
HjfYPQCuinK7t6he5dehDJ8pzDt5Gv1ppoqUv2T0IbwcXbvXQ8/ulVdrGSba
P1QDf/bZZ8zYmNUAALtAxy+11uiorFSpkt7lbNV2T3z77bcsc+Q9vel85A3d
Zufly5f5FPpDd85Vq1bx6UrsXr70GRwczKfwkwZGb2Ru0qQJvdSsWTN5iqmx
yPj49nrX343OLA+LJ/dCt6ghKt9EoDviuoz5seNMya9FNbYM/Rgxg0ewmceM
fSvfDTIssXuLtpcKrGL3Gf+dXdG7p4AYMWIE+1+7t6gxkJFpavy6ZO3atelv
T09Plvl0hldeedSD6WDRG4Ejo2f3VAeePHmyUaNGfKJu1Zfx3zUXljmkp+4p
1uvXr9MurTuuiHK7pyOUPye0bNmy8vOaqYbnzyRlau2ednV+ZjJ//vxys5Y+
iz/5hY4geVi/jP/a23oP5jCFwgJERUXx2XSfzXHp0iX+PCwGuwfAdbHoeffK
61X+812qVCm5YZOcnEzvku/LM1oYPjgztS50F657z7tyu1derWXoPO9+3759
fApVbm3btmWZ3fL1mvEAADvy119/8UOYWmJy64gqnyFDhjC1dk9KzvsMe3h4
yEOL79+/nw9q9/PPP8tzUsuQP7C+RYsWfE6qK/i4cxxDu6cl9+rVS67HyKP5
YnV9mXeMr1u3rmHZuFq+8847vIqmf7/44os6der4+/vrzhYZGckX26dPH3ni
8uXL33vvPaq39QbTGzt2LC/to0eP+BSLGqI0Mzkpy7xlYMGCBfJA01RvT5o0
iYqhO7a8Hqbk2qIaW2bFihUs8/4v3bvF6bdG7+q/kgJkWLIbZCi2Zou2lzqs
Zff86iF9A7RN+ZSUlJRRo0bx71/v2THKGwPyzDlz5uTdjBMTE/k4BtWqVaOP
UL6mTAfl7wIOjmz3H3zwAb83h0O74oABA/T2Japt+AlPIl++fE2bNqUDs0KF
CrznibzrZlhi98SaNWv4sZ8tW7bq1avzc8hZsmThB6k6u8/IvOGF3z5PLUkq
ZP369fkCiZkzZ+rOKfcfoC+hRo0a32dCa9epUyeaU++cp/ICfPfdd/ybpOqd
mvTFixenv2m9ihUrxmD3ALguFtm98nr12LFjfCI1Ldq3b1+vXj3eAuEPnjb1
08zHbWaZw+q2zKRUqVJU2cqNB+V2n6G4WsvQeSIwy+yHT2/kvWQJattY/qUC
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
TEyM+benp6c/ePDg/Pnz165dS01NNTpPfHz8xYsXaTbrlFiHly9f0pIjIyON
vrp///7y5csbTl+yZEnz5s11pzRt2pS+gZ9//llvTvpyrNUzPzExkYoaFRVl
/l3JyclXr14NDg6mP5R/1osXL65cuUIebWb5oaGhgYGBVAzli1WC+U2QYclW
UIcW2041dATRVnj06JGNP1c1sHsAAAAAAABchh07dvC2/a5du5TM7+npmTNn
zn379tHfGzZsKFasmO59+nozHzlypEyZMnz4MiJPnjxjxowhH9Sd58CBA7TA
3LlzG35Wrly56KUTJ07IU1avXk1TvLy8goKC6tatmyVLFr7kzz77bM+ePfJs
J0+eXL9+/ZAhQwoUKLDegA4dOpBv0h9Ufi7RjRo1ooXUqlXL/LpbVFRu97T6
pOrfffedfOND4cKF9+7da7iE6Ojo3r17v/XWW/L94Dl16Nixozzn/fv333//
/Zo1a9LfDx8+pNWR30Vf9cqVK3UXGxcXR5vsvffekxdbtWpVMlCtN0GG5VtB
HQq3HfHxxx/nNKBdu3aGc8bHxxvOqcu1a9f03rJ9+/bixYu/9tpr8u0t06ZN
M3W+y3GA3QMAAAAAAOAyjB07liunwiHiSTNpfjKyefPmcSkgoylYsGDWrFmr
VaumO+ekSZP4DO++++4333xD8/D/fvXVV0+fPpVn+/vvv/kd04af9cYbb9BL
R44ckadwZc6XLx+XZfqD9JkPEUDFIFXks/36668NGzYsV64cfXRDA4oVK5Yn
Tx7+N38gGs3Py9anTx/dsumhoqgEH6jQVFE5SUlJlSpVopeyZ8/erVu3rl27
ZsuWjb+9WCa6ox/cvn2bphcpUoTUvkSJEnw28neyV/rj4MGD8pxhYWHy1160
aNEqVarwwlBply9frukmULEVTEEqPXXqVFOvKtx2GQZ2z9/1008/Gc6ZmJhI
eq5n9PIpFCq2Xh+JX375Rf6SmzdvXrVqVX5G6/vvvzdTHkcAdg8AAAAAAIDL
0KZNG2rYN27cWOH83O7Lli1L/xYvXtzb25v3fyY/DQ0NlWc7d+4cF5z27du/
ePGCT9y2bRuJHk3s2bOnPKc6ZS5QoMCxY8f4xLt375YsWZJldh6gYsgzK+8T
TiXkSyBy5MgxYMCAkJAQwzdqV1QqEv/omzdv8inBwcEk+LTYgIAAvc/idk+e
zi8We3h4nDhxgl8mpk2g2zWC91onG5UHl4uNjSXlpIlZs2aV11G79cqwRs/8
48eP08oOHjzY6KsKt50htEBTdm9IWlpay5YtaX7aKGfPntV9afny5fyECR0L
8imy06dPv//++/w8mJLl2wvYPQAAAAAAAC5DhQoVqGHv6ekpT7lx48Y8Hcjm
dOfndk9UrlyZVNHUYuvUqUPzlCpVirRId/r8+fP522WNVaGWH3/8cXR0tO6c
p06d4ovdvXu3PNEir3zy5EmHDh3kmwjImn/88cdz587pzqNdUfnFX92tQHTr
1o0mjhs3Tu+zuN1zzMgjKT+fZ+vWrbrTExISPvnkE5pOH6r1emVY6b57WkiW
LFmGDBli9FUl284Qi+y+f//+XOH17j5ITEzkJ6wMexfMnj2bpteuXVvJ8u0F
7B4AAAAAAACXgdu9h4eHPIVkULfNnytXLt35ud3nyJHjzp07ZhbLez6vWrVK
b/rLly95n/PNmzfzKSrU0uhA9Pnz56eX5s6dK09R4ZU3btygr4L7GoeMUj5B
Yd2izpkzR57SqlUrmtK2bVvd2Zo1a6a3aTiy3ffr18/oWnBo+TRPwYIFDe+5
mDJlCsvseqHFeuluggzrjaq3b98+Evxhw4aZmsH8tjNEud3zYfmJFStW6L3k
5+fHMkczMDzTFRgYSC999NFHr1y+HYHdAwAAAAAA4DK0bt2aGvZNmjSRp1y9
enVSJr179zZl9127djWzzHv37nFf8PX1NXyVD9Hv5eXF/2sttaxatSq9NHDg
QHmKaq988uTJ9OnT8+TJw9diwYIFWhR1wIAB8hQyYppC9ipfEH/06BG/0Xv1
6tV6b5ftnr5nM2tB24jmadCggeFLO3fuZJlD8CUkJFh9vXQ3QYbirZCmgD17
9lAhhw8fbmatTW07QxTa/caNG/lYeYadKAhvb2/+QW8bIFuzI4+tB7sHAAAA
AADAZRg9ejQzMarexYsXTdm90SeYy9y9e5f7gt4dyhxyPXpJdjRrqWXp0qXp
pTFjxshTBK8ak2h/9dVXtMwSJUpYt6ilSpWil3Sf9h4TE1O0aFGamDdvXrLO
QYMGffjhh/yj5We4y8h2b/5h7l26dDFl97t372aZPdjj4+OtuF6GmyBD2Va4
fPkys4SdO3eaWfEMY9vOECV2TyvOPb1bt25GZ+A33RO9TGDY9cKhgN0DAAAA
AADgMsj98A0f06ba7tPS0ngHacO7wlNTU3PkyKH70j///MMLoPekvAxL1DI5
OTl79uz00saNG+WJ4n3CV6xYwTLvtuYdvK1S1KSkJH5vgm5RaWK9evX0HJbE
U3egQhmFdj9jxgyWObT+K1/SbhNkKNsKKSkpNxWwefNmljlcgJn+9jJ6286Q
V9r95cuX+Q0mjRs3phIanef06dP8q3vw4MEri+SAwO4BAAAAAABwGUi3ydSo
bV+pUiW9y8Sq7Z749ttvWebIe3rTV65cyVXi6tWrfIp83Zb+0J1z1apVfLoS
tZQvoQYHB9N/d+zYMXnyZNLAvHnzTjagUaNGxYsXpz+mTJmSmJiYkTkA2vbt
2w3XguahZRYqVMiKRV26dKluUTl8BLYBAwZERkYePnz4xIkTjx8/NvXdKrT7
Q4cOGT1vk5SUVLhwYZreqlUrK66X3ibIsHwrmCcgIOCDDz5o166dXkd3hdvO
EPN2f+/ePT72IO3DvIeDUeiQ4TdQmB8DwWGB3QMAAAAAAOBK/PXXX7x5X7Zs
2aCgID4xISFhyJAhqu2efJDfrezh4SE/Im3//v20NJr4888/y3M+e/aMPy29
RYsWfM4XL17wYd9MqSUtuVevXk+ePOETSWP5YmVd9fb27t27d8OGDWl6bwO+
+eabggUL8r/ps7Zt28Y/iFaNVp9f6o2IiCC35RfZ6bNEitqzZ095yLWDBw/y
B6W1bt1a9+siaWX/+6BAMyi0+/T09Nq1a9Ns+fPnlweQJ1Hlz0AkJ5W3tRab
wNKtYH6VAwMDSe2p5Hpqr3zbGWLG7ml78afsFSlSxMxpFs60adN4GSZPnqzb
+eH69ev0EXxkA4cFdg8AAAAAAICLQYbC/Y4gjSpVqlTWrFn5fxs1aqQ7p0K7
z/jPnljmveTff/996dKlue8XKlQoKipKd07+6DeW+Zy1r7/+OkuWLPQ3vYWP
52/0YevEu+++W7NmTVosfxTaRx99pDfKnMKe+dHR0T///LO82Bw5cnzxxRfy
f+lvkl/VReU926mo1atXl78Bw6KuW7dO/vJr1KjxfSZNmzbt1KnTzJkz9R5P
oNDuiVu3bvH796kYVML69etzBydosTbYBMq3ghkuX76cO3fuVq1aGXaPt2jb
6WHG7r/77jt5IZ8aw8fHR545LS2tSZMmfOZ8+fLRVqMi0ffGvxMzw/o5ArB7
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
RilVin3yCfP2lkb7j4930KxfL51/WLTICbJp09f379/X+niA3asFdg+7h93D
7gEAACgCdg80IjHx7OnTnxUsmL927Xx166pJnToff/GFdIN5SIj9Fd5MkpOl
e+FJtB88sFFu3pSGraO0bSv1fnfMtGgh3X3vFBk4sEJAQIDWRwTsXi1Cdi8o
uX2XCmXBAKFUO6M+ggMO+LQQSrfVQql9TCjjJgtFZGf9YQ8TieBt+4JHGuwe
AABcANg90IgXL44fOsTefZfVr88aNVITstcSJVivXo5u97ZPQgLr3p01aSIZ
dOvWiGiGDKlw6dIlrY8I2L1aYPewe9g97B4AAIAiYPdAI549O/7336xGDcnN
1Y0MHxrKxo93gvvubZ+0NOk72bmTbdnCtm5FRLN//zcPHz7U+oiA3asFdg+7
h93D7gEAACgCdg80gux+717pwv3z5yod9uVLZpsn4jlj4uKYry87dozt3s3+
+INt3Iioz969VSMiIrQ+ImD3aoHdw+5h97B7AAAAioDdA42A3Wua9HTp+4mK
YnPmsMqV2TffIOrzyy/lzp07p/UR4bZ277mYiUTQ7gUzY4RQ2m4RypSx6vNB
jFD2NhHKEg+htNkqlI7rhSIiyIPmMZEs6icUwZNRsHsAAHABYPdAI1zM7smm
791jp09LOXPGUXLwIPP0lIbQb9kSUZ/BgysEBgZqfUTA7mH3sHvYPeweAACA
psDugUa4mN1TYebOZZ99Jj35rmhRR0mhQlKaNmUXLyLqExz87bNnz7Q+ImD3
sHvYPewedg8AAEBTYPdAI1zM7hMT2ahRUh/4unWlweodJN99x0qXZtWrsw0b
EPX56y/cd69hRsxgIhHUc8FHnwveOO+xRCjtNqlPkVtCGT1VKBs6CKWFj1Da
bxSKiN032ctE8ssfQum8ViiwewAAcAFg90AjXMzu4+PZjz+y5culS70hIY6S
8+dZt27s7bdZ7tyI+lSvXvro0aNaHxGwe9g97B52D7sHAACgKbB7oBHWsvtO
ndjx4ywszM65cYPVq8fWrWO3b7OYGA3z+DF79Ig9fKgo16+z336TxoWrXh1R
n44dy50/f17rIwJ2D7uH3cPuYfcAAAA0BXYPNMJadp83L/PwkP6wb6ZNY+XK
Sb24o6O17STw5Imk7RERSvPggTTcX2gooj7h4TUSExO1PiJg97B72D3sHnYP
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
s5Mn2blzFuTECXbkCDt4ELF+fH2rRUdHa11LwO7VAruH3cPuYfcAAAAUAbu3
Ctzu//5buu3a7o75yoSFMTwR75VJTmZXr7LLl9mVK0pz6hRr25atWiV1uTcz
KD3N9tVXUjePdevY+vWI/bNnT9Xw8HCtawnYvVqE7H7SeKHUOCmUKueFIjKq
Xu/lQhk/SSiCo+rVOySUGSOEIrKzVvZjIvH6TSiCRxrsHgAAXADYvVWA3bte
oqJYhw7SQ+tI2BWmRQtWrpxk90lJ5pZ88ybr3p3VqcO++w5xiHTrVs7Pz0/r
WgJ2rxbYPewedg+7BwAAoAjYvVWA3bterl5lbdqw1q1Zz55K06kTq1z51Xb/
4AGbM4f17cs8PGyUdu2ke/YRUxk8uEJgYKDWtQTsXi2we9g97B52DwAAQBGw
e6sAu3e9LFnCevRg06ezPXuUZuNG9sMPr7Z72+fAAbZ5s1Q8xGj27q0aERGh
dS0Bu1eLkN1nfy6UP38SSrtNQpk3SH3GTRbKtFFCWTBAKD29hbK6m1BEdlbB
Le7dUyiCRxrsHgAAXADYvVWA3bteyO779ZPujr9+XWl8fVnLltJ3S3/4+TlK
9uyRbgQYMUJIkVw7S5ZUvnXrlta1BOxeLbB72D3sHnYPAABAEbB7qwC7d72Q
3Q8dyvbvt+AtkZHs55/ZmDHSsPmLFztKevZk2bOzunWl/vmI0QwfXuHy5cta
1xKwe7XA7mH3sHvYPQAAAEXA7q0C7N4REh8vPWzu99+lXuji6dZNunb/zz8W
FOD5c7ZyJRs82P4Xo3XTsiXLlk36d8AAxHimTat07do1rWsJ2L1aYPewe9g9
7B4AAIAiYPdWAXbvCImMZL16sdq1WbNmVkjZstJ99/v2WVCA1FQWEiI98t5m
w+UpyXffsXfekTrn//orYjwrVlS5ffu21rWE29p9Cx8mEkG7r3lCKIKPfa92
RigiD6w/WF8o/RYJpfNaobTZKpQJE8UigOCKC44HOHS2UGD3AADgAsDurQLs
3hGyaRPr31+64L5smRXSti3z9LTs2j0lIUF64J1D5dIl6RaDkSPZuHGI8Sxa
VDkkJETrWgJ2D7uH3cPuYfcAAAA0BXZvFWD3jpB586Re8SRrf/1lhfTuLfXZ
ttTuX5nUVGlE/YQE2+XFC7JXNnYs8/JCjGf+/Mo3btzQupaA3cPuYfewe9g9
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
/hdnladWLenCvRK7T09n8fHqOwnQ9xMVxVavlkbJ8/ZG7Jnt2zGqnobx7slE
Imj3gqPD9VsklJHThbK/ofoIit621kIZMUMos4cKZXU3ofzzvfoInk26WEEo
gseaM9p92uss5U2T8Wpv3O6J6Ojo6dOn81HyuOaHh4fLr3K7Hzx4sDzlyJEj
AwcO5DP36dNn9erVz58/5y8dOnSol2kePHig3TcAAACGwO6tAuzeMGlp7OlT
duSIk2X/fjZ/PitT5tV2n5Agnb5Yt46tXasmq1axQYPYZ5+xZs2k+xcQO2b8
+IrBwcFa1xKwe9g97B52D7u3Iq+2exPX7mXi4+Pv3r0bGxur5ONSUlLCw8Pv
37+fkJBgjeIDAIAmwO6tAuzeaFJSpJvTr11zpgQFsY0bWblyr7jvPi2NPX7M
Fi5k8+axuXPVZNYs1qYNy5aNff8969IFsWfGjKl49epVrWsJ2D3sHnYPu4fd
WxGy+9Q3WPJbJvNKuwcAANcDdm8VYPdmBD852ZlCUn/kiDQY/pMnUuFNJSqK
bdjA8uRhHh7SJXgV6ddPugsgSxbWuTMbPx6xZxYvrhwSEqJ1LeG2di+o5+4c
EUU9UVMoK3sIRXDFp44WyrI+QrlWQn0EV9y/klC2thGKM9p9ypss6W2Tgd0D
ANwQ2L1VgN27TEjwz55lX3zB9u4114F/5042fDjLlYtNny715FeROXMkwf/y
S9anD5s0CbFnli6tfOvWLa1rCdg9Ymlg97B72L0ZyO6T32Ivs5iMmfvuAQDA
VYHdWwXYvcskNVXqn//GG5K5f/CBydCruXNLjwOIipJuwFeXuDg2bRobPZqN
HYvYMwsX4to97N4RA7uH3cPuzUB2n/Q2S3zHZGD3AAA3BHbPSU1NjRQgNPRW
rVo5YfcukLQ0dv++1Ge+Th1J3k2lRg3p3vzKlVlAALt+XWWuXWNTpkh9ABD7
Zs6cyjdu3NC6koHdI5YGdg+7h92bgez+ZRaWkNVkYPcAADcEdk+kp6fHxcX9
KcDmzRsrVXp3717YvSskPV0a7d987txhixezN9+k5pDUwV51eva0/4jxCMbM
h927XgLLCcXu5bdjVnVXH8GPfvSRUA7VE4oz2n3iO+bsfhTsHgDgfsDuiSdP
Qnfv9mrTps24cW0mTFCT0aOblyjx1l9/we7dJQkJ7Nw5adD7cePs3xZFBLNk
Ce67h927WmD3qgO7dxbI7knhX2QzGdg9AMANgd0Td+8eHzxY+gZ+/JG1bKkm
P/3EChVie/bA7t0oL16wHTukx9avXIk4d3x8qoaFhWldz8DuEVsGdq86sHtn
geyeFD7+XZMZ9QvsHgDgdsDuiTt3jg8Zwho0kJ5xtnWrmqxbJz1DDT3z3SrJ
ySw4WLrv/uJFl8rmzWzMGDZwoBtl+vRK165d07qecVu7X9ifiURQl5Z4CGXo
bKGMmyyURf3U51YRoazpIpTRU4UiuM9sbyWUCQLsasZEcriuUAQ/3Rnt/nl2
ZiawewCAGwK7J27dOj5smPSEspcvVYre8+esbl2GUfUQZ096Otu9m/3yi7Q/
u0969Cjv7++vdT0Du4fdw+5h97B7K0J2H5eDmQnsHgDghsDuM2D3iF0THCz1
8F+4kK1YYf8sXy4N9Fe/vv07x9oyuO8edg+7h93D7p3R7p/lZGYyEnYPAHA/
YPcZsHvErtm8mbVvLz1fr3p1h0jBgqxUKWkQCffJsWPfREZGal3PwO5h97B7
2D3s3oqQ3T99j5kJ7B4A4IbA7jNg94hdM2qUdOv3smVs40b7Z8MG1rw5++AD
1qiRG6VPn/IXL17Uup5xW7sXFGRBu581TCiTxgtl0DyhbOigPpvaCWVvE6EM
mSOUyeOEIji43PqO6uPTQigXKwhlzw9CcUa7j32fmQnsHgDghsDuM2D3bpa0
NJaa6kDp04eNHMmOHJEG6LN7Llxg/fuzvHlZmTJulBYtyvr6+mpdz8DuYfew
e9g97N6KkN3HfMDMZGQH2D0AwO2A3WfA7t0sd++ya9eku90dJO3bMy8vSavj
4hwiQUHSwHo+Pm6UQ4e+efTokdb1DOwedg+7h93D7q0I2X10bmYmsHsAgBsC
u8+A3btTaBMfPy5tKcfJTz9Jdk9ObcvvIT3dZBISWGQku3Pn/3L9OjtzRvrS
XDj+/t/GxsZqXc+4rd0Pn8lEImj3gpLbZqtQFnsKZUUv9dnRUij/fC+UbquF
InjfveBgC383Vp95g4RyuYxQBFfcGe0+Kg8zE9g9AMANgd1nwO7dJqmp0iXy
cuVYjRr2v9dbTvHibNAgm9p9UhKLjzcZ2pnj4tjTp/8XUvt69ViBAtJoe66a
+vXLHD9+XOt6BnYPu4fdw+5h91aE7D7yQ2YmsHsAgBsCu8+A3btNUlLYqVOs
UCFWsyZr1sxRUrIkGzzYdnaflsZu3mT//qs0W7ey8uXZ+++zzz5z2TRoALuH
3cPuYfewe+ez+0cfMTMZAbsHALgfsPsM2L3bJDlZevxZmzbs2DEWEeEo6daN
jRtnO7uPjZV8tnhxVqKEohQsKO3b/fszX1+XzaVL3z59+lTregZ2D7uH3cPu
YfdWhOz+4cfMTGD3AAA3BHafAbt3m5Dd79rFOneWxrKze2Hk9O3LRoxgJ0+y
qChb5OZN6WAnu//yS0UpXFjatwcMYOfPu2yCgmD3GmbGCCYSQbsfP0kogsPi
7W8oFBFT29lcKKu6C6XdJqEIDsp3+luhrO2sPoL7W1BpoQieTXJGu4/Ix8wE
dg8AcENg9xmwe7eJY9p9ly6sTh1p5PyePW2RDh3YG2+we/f+/5315kPyW6kS
y5lT6bV+Z0zTpmVOnTqldT0Du4fdw+5h97B7K0J2H/4JM5MRHWH3AAC3A3af
Abt3sNCX+eCBdInZ6vn3X7ZkieTRV6/afzXlTJnCOnWiZpXU+90G6d7dMru/
fJm1bcsqV2b167tsevYsf+HCBa3rGdg97B52D7uH3VsRsvuwAsxMYPcAADcE
dp8Bu3ewXLnCvL3ZkCHWz8CB0uPnfvhB+gi7r6acBw/Y4cNs9Wr2+++2yMKF
0sF+8KDSe9JPn2aHDrH9+105p09Xi46O1rqecVu7t+999xvbC+WnP4WyYIBQ
fu+qPoL33Yt8NEXwifOjpglF8NTElrbq491TKILPu1/eWyjOaPf3P2VmArsH
ALghsPsM2L2D5cgR6fnvQ4cy2ijWzeDB0hj1TZs6lt3TPnP1qqTbNsiBA8zH
h+XNy5YvZ+vWIf+X3burhoeHa13PwO5h97B72D3s3oqQ3d8ryMxkOOweAOB+
wO4zYPcOll9/ZaVKsfnzpavM1s28eaxHD9a8uWPZfXo6S02VxgSwTWJj/x97
7wFXxZnv/3//9+7d7O7dTTa72ZuYspq2iTExsZdoiiXWFBNrYm+IoogdQSJW
FDuiYhcr9tgLGFvsXREVLIBKUbGiQoDzf56cvfy8eM4A8505c+bM5/16v/Jy
h8NhzpnhWd5nZp6h776Tp6PXqQP/badOHx06dEjvcQZ1j7pH3aPuUfcaIur+
SklSEHUPALAgqHsb6t7NDA6W07jt30+HDmnsvn0UGiqvInfldfe//iov+T95
0l0U78OQIdS7t7xOAdoNCakYFxen9ziDukfdo+5R96h7DRF1f7kUKYi6BwBY
ENS9DXXvZg4bJt9M1dtCQUPmzH/4kDZsoMhI6L6uW4cz83WUeQ9uZt0PGcay
yWqW/UJZHqysXubHGlHNWTbawHJ4IMvp3Vj+Ul29zFn1ljdjyfw0yYx1f/EN
UrB/W9Q9AMByoO5tqHs305Pq/tEjOn5c3oSOWShQV8PDKyUkJOg9zqDuUfeo
e9Q96l5DRN0nvEkKou4BABYEdW9D3buZnlT3t2/TsmX0X/8lAx+6rYMGVTh1
6pTe4wzqHnWPukfdo+41RNR9/FukIOoeAGBBUPc21L2bqV/d5+TQ4cNyyr6P
P6Z69VyheCEVK1LVqhQXp8aTJ+Wd8vz9ob5OmlTpwoULeo8zlq37OR2JI7Pu
e01m2Xg9S+acA5wLwJl5vugHlv86z3J1E5Zj+7PkTDjgN4HlvPYsJ/myNGPd
X3ibFETdAwAsCOrehrp3M/Wr+9xcOnuW3n1X3hKuRAlX+OKL0jp15Cn6Krx1
i6Ki5DSDUFenT6+MM/NR96h71D3qXu9hUFtE3Z97hxTsh7oHAFgP1L0Nde9m
6lf3wgcPaOdOedt317hyJQ0cKAM/PLzYhoXJ8CxfXk5xD3U1LAzX3aPuUfeo
e9S9+eo+7l1SEHUPALAgqHsb6l6tubm6KJJWv7q3/TbTnWh813j1Ks2fT88/
T337Fls/P2rThp55hgICoL5OmYIz81H3qHvUPerefHV/tjQpiLoHAFgQ1L0N
da827UW6Jidrr9gWtWrpWPc6fSjh0KwsunSJAgNp5MhiO2wY+fjQ739P3t5Q
X4cPrxgbG6v3OGPZul/SijgaO6te33EsfcJYcgqXOase887p5Y+yZH62MGYA
yzXfqNd3EkvOjxZuasDSjHUf+x4p2K8d6h4AYDlQ9zbUffHNy5Ozwe/eLd2z
R2M7d9a37l1sZiatXk0zZxbbGTPkaQyvvWZ8/Hq8ou7Pnj2r9ziDukfdo+5R
96h7DRF1f/p9UhB1DwCwIKh7G+q++GZlybnc33yTqlSR889ra8mS9PnnnlP3
eXnyFH2xY6gwJUVeua/imn1YLJcurZKYmKj3OIO6R92j7lH3qHsNEXV/6gNS
EHUPALAgqHsb6r74ijcqNFTOCV+9On36qca+/rpH1X1RzMyk9HRKTS1oYiKt
X0+TJ0N9XbSoypUrV/QeZyxb992mE0dm3TPvON9xDssBY1iu+1K9a79mOc2b
5ZfrWIZ3Zxk4nGVMLfX+OJSl8nnmhRraj6UZ6/5kWVKwL+oeAGA9UPc21H3x
ffiQfH3lX87nzsmr77W1f399Z9VzN7Ozad068vKiVq0K2rIlNWlCX34J9dXH
p/yxY8f0HmdQ96h71D3qHnWvIaLuT3xICqLuAQAWBHVvQ90XX1H3PXrQpEl0
7572T67rHfGKbl6evADBBd65QxER1LgxdegAjTEwsMLp06f1HmdQ96h71D3q
HnWvIaLuj31ECqLuAQAWBHVvQ90XXyvUvViB9HR55bvenjkjb35Xs6bcf6Ah
7t5dPT09Xe9xBnWPukfdo+5R9xoi6v5oeVKwb3vUPQDAcqDubaj74muFuj9y
hH76idaulVe+6+rChdSiBX32mfyJunroEO3cKS8zN3wWO3dz6dIqSUlJeo8z
lq175h3AmXXP7Os621n2nshyag/1HqrEMqIrS+9pLDkvXMi83/3umupl/uhf
qrO04P3uj1QgBVH3AAALgrq3oe6LrxXqvlkz+p//oZdfprff1tfXX5fzEzZu
TL/+qq9iqx0+TP/8J5UpA/+P33zz4S+//KL3OIO6R92j7lH3qHsNEXV/uCIp
iLoHAFgQ1L0NdV98rVD39epRxYpUq5ac105XGzaUgSleclKSvsbHy+n7SpXS
/RWZTl/f8sePH9d7nEHdo+5R96h71L2GiLpX3o1R9wAAC4K6t6Hui68V6r5m
Tdq2ja5f1/0HpaXJ6+7feIPGjtXX4GBq144++YQSEuD/MSmpZmZmpt7jDOoe
dY+6R92j7jVE1P2BKqRgH9Q9AMB6oO5tqPvii7rXULHzzJ9PrVtzK6ZQBw6U
t9gTr0vbWQGvXaM9e8jfX94k0aSGhFQ8e/as3uOMZeve2Fn12i5gyax7ZuTO
b6feyDYsx/Vl2WoJy0U/sOw5heXi79XbeiHLXZ+w3FyfpRnrfn9VUhB1DwCw
IKh7G+q++KLuNTQvj06coOnTSeyEuurjI89CF69LbDUNvXWLli+nf/yD/uM/
zOoHH5TZunWr3uMM6h51j7pH3aPuNUTU/b5qpCDqHgBgQVD3NtR98dW17oOD
5XXokZG0eLGRfvABbdniiroXpqbK+e62bdPXdesoNFTOqqftKQFDhtD331Od
OuIvQ+rTx5SOHVsxLi5O73EGdY+6R92j7lH3GiLqXvlShT4dUPcAAMuBureh
7ouvrnUv/iD/29+oUSM5jbyBvvoqbd7sorp3jWL33rdP/qb/+c8a+6c/yUY+
eJASE03p9es1Hz16pPc4Y9m67zOeODLr/vvFRvrDIpbLm6k3qjnLMQNYMt+3
6d1YtolkeeoD9fqPYrmpActp3izNWPd7apCCqHsAgAVB3ds0qvvPPpPHRlNT
5b893vR0eaBWp7o/dUoeuJ8xgyIijPS991x37N415uXJT5927pSXyWuoeMLw
cKpenerWpS+/NKU9epQ7duyY3uMM6h51j7pH3aPuNUTUvfIkh6h7AIAFQd3b
NKr7WrVo6VI6e9b4A5Eu8Nw5Ofv6xIm61H1GBp0+TZs2GexHH7l13efmUk6O
W5iVJRu/XDl6+2165x1T2rhx2T179ug9zqDuUfeoe9Q96l5DRN0rX6rgh7oH
AFgP1L1Ni7rPzKSOHenjj+X5+fXqeb5169Jbb9G4cbrUfXY2PXhAN28abPXq
tHWrm9Z9Xp5csVOn5HR8hnv8OO3aRbNmyYkBZ8wwpVFRVZKTk/UeZ1D3qHvU
Peoeda8hou53fkoKou4BABYEdW/Tou4fPpS3G3vjDXrlFXrtNUv4wgtyijY9
6t5NrFFDXnefnEy//up2ih315Enavl2eXQD57t1b/ebNm3qPM5at+0GjiSOz
7pnz2o0exLLjHJarvlUv56btwom9WbZcynJOR5a9J7LkfKjSL5Tl0fIs1zdm
aca63/EZKYi6BwBYENS9TYu6z8uT9wVLSjL+nHkPODPfTSxTRh6M/ukn3aey
L65bt9LKlfJzpPr16auvoAb6+OC6e9Q96h51j7o3X93H1CIF/Tqi7gEAlgN1
b9Oi7q2mrnPmu4lVq8qTE+bOpUWL3M5p0+Qv7OefU8OGUAO9vcsdPXpU73EG
dY+6R92j7lH3GiLqPro2KYi6BwBYENS9DXVffK1Q99OnU9u21LKlvJm7W9mq
FTVpIn9hhw2jqVOhBi5ZUiUpKUnvccaydW/sdffMS7Dbz2NZO5rlxobqXfcl
ywl+LJstZzm5F8ugYJZ9x6n3x6Est37B8ufPWJqx7rfXIQVR9wAAC4K6t6Hu
i68V6n7dOureXU6W2KmT2/nDD/T88zR6tPHz0XmGmFUPdY+6R92j7s1Y99vq
koKoewCABUHd21D3xdcKdf/gAaWnU1qaO5qYSP7+5C2nOIYaOHRohdjYWL3H
GdQ96h51j7pH3WuIqPst9UjB3qh7AID1QN3bUPfF1wp1b/g7fPs2XbniwMuX
6cIFCgmRm8DwLvYMUfeoe9Q96h51b8a631yfFETdAwAsCOrehrpX1Z6oe11N
SKCff5YJ78zgYFkuQUFQA6dOrZSQkKD3OGPZum+9kDgy6545p5/vJJY9p7Ac
21+9yvcBL9RxfVmWOcNyYAhLZuT+yGDx92SgC9qyNGPdb2pACqLuAQAWBHVv
Q90XX9T90+bmUna2Zq5fT2FhNHgwDR0KdTc8HHWPukfdo+5R9+are+UzWHp3
Qt0DACwH6t6Gui++qPsCirS3X6evlbVr0xtvkJeX8ce1reDUqZXi4+P1HmdQ
96h71D3qHnWvIaLule/xh7oHAFgQ1L0NdV98UfcFPHGCZs2iAQO4JZLvW2/R
Bx/Q4sW0Y4fJXL+eQkOpVy/y9TWNISEV4+Li9B5nLFv3zOJg/ioFB7Fk3jnd
fxTL8X3Ue6gSy+GBLN9MYMmse+Zt3zl1v6IpcZzky3JuB5ZmrHvl6SNQ91rR
FXgiRu9WQC9Q9zbUffFF3Rdw4UJ5tP0//oP+8Q9tfPZZ+vxzun7d+JdWXFNT
KSKC2rWj9u2pQwdzGBhY4cyZM3qPM11R96h71D3qHnWvHSLuf/qKFPRF3WuE
6fYNUCjYph4M6t6Gui++qPsChofLmG3RgsaO1cZ336UyZWjmTFq2zGROmUIt
W4pe1uw0BheI6+5R96h71D3q3nR/7Yu6X/s1KYi61wrT7RugULBNPRjUvQ11
X3xR9wUcPVp2xIoVmj3h55/TCy9Q48bUpInJ/OQTeuklmjGD5swxjatXV01O
TtZ7nEHdo+5R96h71L2GiLpf/Q0piLrXCtPtG6BQsE09GNS9DXVffMUbNXIk
ffklBQTQsGGQGjSg7t21rPupU0nsk+Y6Am63fXt67jn54Y/hV9Pjuns3cdgQ
4sjcITmBLBw8kmXIQJb9QtV7sDLLoT+yfP80S+9pLGNqseTUfURX4sj8cGB5
M5am+2tf1P2qb0lB386oe214ct8w/P9TIEeH2xR4GKh7G+q++GZnywnfSpSg
v/9dHmKGwlattKz71FSKjaV168znmDFy3oC6dal+fdPo5VXuyJEjeo8zqHvU
PeoedY+61xBR9yu/IwVR91qBuvcYHW5T4GGg7m2o++Kblyfzc8cOio6G0q5d
5aF2Des+K0veYu/GDfMZH09RUfJ097lzTeOaNVWvXr2q9ziDukfdo+5R96h7
DRF1r/yGoO61AnXvMTrcpsDDQN3bUPeMAoV2R42SFyksXCgnIrC4N2/S6dO0
YYOZ3LWrenp6ut7jjGXr3ieMODLrfsAYlr0ms2w3n6XfBPXe+hvLwOEsq+1j
2Xccy8m9WHLqfnYn4si8cH5KT5am+2tf1H1UM1KwF+peI1D3HqPDbQo8DNS9
DXWv1rw8+G8jIqh5c6peXU4Xb3HF+9CkifEn2+PMfPcRdY+6R92j7vVA1P2y
FqQg6l4rUPceo8NtCjwM1L0NdQ/ZLl5M331HpUrR++9D8/nNNx/+8ssveo8z
qHvUPeoedY+61xBR90tbkoKoe61A3XuMDrcp8DBQ9zbUPWR75w6dO0d799K+
fdB8njjx8Z07d/QeZ1D3qHvUPeoeda8hou6XtCIFUfdagbr3GB1uU+BhoO5t
qHvINieHMjIoMbF4Xrmii5cvi1yl3bthUT169OOMjAy9xxnL1v3Y/sSRWfff
L2bJvO1793CWnB+d9/+x7DmFJXM6wSHDWEa2Ycmp+5GDiaPyeeaFOmYAS9P9
tS/qfvH3pGCvLqh7bUDde4wOtynwMFD3NtQ91MLcXPr11+J59y7dvi0/FtDW
69dl1LzyCr36KiyStWuX3blzp97jDOoedY+6R92j7jVE1P3C1qQg6l4rUPce
o8NtCjwM1L0NdQ+N8NEjeTL/mTPae+QIdelC//mf9NprsEjWqYO611HUPeoe
dY+61wNR98qbEnWvFah7j9HhNn2a3NzcM2fOzJs3LyQkxN/ff9SoUZGRkbt2
7crJyXH2LRkZGVOnTt2xY8fTXzp//nxUVNT48ePFU02YMEH8+/Tp0wo/fdu2
bWFhYQ8ePFDaKTWi0J/l7AHp6eliCJo9e3ZERMTatWuTkpJ0XtNigLq3oe6h
y83Opl9+kUeNX35Z+yPR4jmfe45KlqRTp2CRvHChxr179/QeZyxb95xW+g1W
3Y/yZ1ljD8vvVrLcXke9ce+yZN5xflxfln3GswwOYsnZWQeNJo7rvmTJ/E0z
Y90vaEsK9kTdawTq3mN0uE0LIDpdRH1XR4wYMSIlJeXpb8nKyhJfEg+YP3/+
k8vz8vJWrVrl8KlWrlyZm5v79FMdPnzY/oBbt26p2VmLQ6E/y9kDdu3a5e3t
/eTL8fLy2rhxo94rXERQ9zbUPXS5Yk/bvl3OsV+rFjVooLH16lHp0vLJ16yB
RTImphrud6+fzOJA3aPuUfeoe4eIup/fjhRE3WsF6t5jdLhNn+TRo0eDBg2y
F+vChQuPHz+empoaHx8v0rVHjx5iofhqgSP4N27cGDdunP1bCtT9+fPn7ctn
z5597ty5lJQUsUQ8xr4wOjr6yQfn5eXt3LnT/lP0rvtCf5bCA65du2ZP+/Hj
xx88ePDYsWNTp061P0y8Ov3Wueig7m2oe+hyMzPlTfSaN6eEBDnfvrampdGw
YbLu33sPFsmvv/5w7969eo8zqHu1oO5R96h71L0DRN3PbU8Kou61AnXvMTrc
pk+yaNEi8aXu3bvHxcUV+NLVq1fFcvHV/fv35y+MiYnx8fHJP4RdoO6XL18u
FgYHB4tYfnK5/dyA0NDQ/CXp6enifz55NFy/ui/0Zyk/QIw8YkmfPn3yP+XI
zc0dPHiwWLhs2TKd1rlYoO5tqHsree+evAPanj0Gu20bDRlCzZpRerr2rzEr
i5YupRYtqGlT+uILWLhdu5Y7cuSI3uMM6l4tqHvUPeoede8A8Tf2nI6kYM+u
qHttQN17jA63aT6PHj2yH61ev369wz1h8eLF3t7eS5cuzV/i5eUlHi9qfeHC
hU/XfUREhFgYFhZW4HliY2PFmDN+/Pj8k/M3bNhg/1Rhx44d9iPj6uo+Pj5e
rInDc/7zKfRnKT8gKipqwIAB4r9PfsuKFSvEw6ZOnapinTUHdW9D3VvGnBw6
eZLeeYdeeklOKW+gL79ML7wgT6FPS9PllYrAv3ePbt2ijRth4e7eXf3GjRt6
jzOoe7Ww6p55A3Hm5HJdI1hu/UK9p99nyazUGV4smTMxKs+jXqicnXWCH3Fk
bjXmb5oZ6352J1IQda8VqHuP0eE2zefQoUPKx80f/caTS0TXHzx4UNT05s2b
n677nTt32q9JF/Hr8IL9fH7++WdR5fY/xuxnCKir+1GjRonvnTdvXoGzBYr1
s1SsjP1shNWrV6tYZ81B3dtQ95YxO5vWrpXHanv1YvUC38GD6dtv6Ztv9Kp7
22+Bf/AgtW9PQUEGv1j3Nzy8UkJCgt7jDOpeLayNi7pH3aPui4gZ635WZ1IQ
da8VqHuP0eE2zcd+zLp3794qdpJNmzY9XfcPHz4cO3Zs/vntgwYNWrBgwaFD
h+7fv6/wVJxj98nJyfYrBRYvXlyUxxf6s4qyMvkfYly6dKnYa6wDqHsb6t4y
iu07eTKJbX3qlDy0baApKTRrFrVqpcuZ+Xbv3xfRKn+vP/6YPvkEKtmu3UcH
Dx7Ue5xB3asFdY+6R92j7h0g6n5mF1IQda8VqHuP0eE2zUcUsf00+ycXnj17
dt68eXN/Y85vLFq06OnvdVj3guzs7KioqN69ez95GXu3bt02bNjg7PA6p+5t
T5yBsGLFikIfzK/7o0eP2i9PKHCuvoGYtO7FrnLy5Mk1a9as1oJp04a3aIG6
93ztdd+/P8XFyUPbBnrnDkVFUYUKNGoUhYXp4rhx8tODzz+nmTNp3jzpjBky
dnx9YUFDQio+PXuM5qDu1cKqe+VDe4XabDnL0YNYTu+m3gtvswztx7JfKEvm
hyrn/8WSs7MODCGOi79nyfxNM2PdK39M5IO61wjUvcfocJvms3LlSrG8f//+
Ty7csWNH1/+LCN6nv9dZ3dvJzc1NSEgQv7OhoaEi7e3PM2PGDIcPLjSoY2Nj
Dypin+NOIH6isycp4s9SfsDOnTvtaT9lypRff/1V+We5DJPWfWZm5qJFi9q1
a9dWC779tl716qh7z9de9wMH0sWLxq/Jtm305z/Tm2/Su+/q4ttv06uvUnDw
/9ur796l3btp/nxY0LVrq169elXvUQt1rxbUPeoedY+6d4D4u135twB1rxWo
e8+wQKQ/vaFjYmLsX7p9+3b+wtTU1L3/y+rVq4tV9yLqRbIVeOSdO3dE19t/
kMNZjwot7qFDh3YtMkePHnX2PEX5WQoPsL8bgpkzZ2ZnZyv8FBdj0rpPSblW
q1bp4cNfnDhRAwMD/9aoEere1R48KGPTlUZHywO1ffrI+9AZ+9rz8ujmTVqx
gpYvl//VQxGtzZqRj4+cP1/8z4ULaeRIqlrV+APlbiiO3esqszhQ96h71D3q
3iGi7qd5k4Koe61A3XuMDrdpPteuXbPnqrPLFS9dulT0uhfP5uXlJR784MGD
Ag/Oy8vr16+fePyuXbuefqpCi3vDhg2RitifXDBmzJjHjx87e56i/CyHDxDr
b7+KQbBy5UqFGfwMwaR1n5x85Y035OnHixbJ+4YznThR3jsMde9Ks7JozRpa
tkyeoO4yxd7Svr2sOcPrXpibS4mJdO6cXh4+TH5+1KULhYbKfXv4cPna//xn
6tABFjQwsMKZM2f0HrVQ92pB3aPuUfeoeweIug/vTgr6eKHutQF17zE63KZP
MnLkSPGlnj17xsfHP/3V06dPF73uc3Nz+/TpIxZGR0cXeLD4kp+fn/jSqVOn
nn4q5nX3165dE+svnkG8locPHyo/WF3dR0ZGdv1tGj2Hn04Yjknr/urVK++9
Rzt30tWrlJrKdf9+eYgTde9KN26kGjWoZUvy8nKdnTvLKea6d3eLuhc+ekSZ
mXp59y4dOSJf7IAB8mIEsYd//TU9+6z8NyzgxImVLly4oPeohbpXC6vumbPD
1Yph2WoJy8311cucWW5BW5YDxrAc5c/SwLnp+o4jjtvqsmT+ppmx7sN8SEHU
vVag7j1Gh9v0SRITE+09KwJ5z5496enptt9iXCTzihUr7F8q+pn58+bNsx/g
Xrt27d27d+0LRSmHhYWJhT4+Pg5PaOfUvcj5wMBA8e3BwcFPnzOg4mc9/YAz
Z87YX9TevXtz/i/ijVKxzppj3rr/4AN57/Jff9UgskTrYc58FztrFpUoQXXr
0vffu86WLeVEdt7e7lL3upqXRxkZcgpBe8D27CnvwSfec2YreaS4I56uMosD
dY+6R92j7h0i6n5KT1IQda8VqHuP0eE2LcDx48d9fX3zr1vv06eP/R5zdoKC
gk6fPv30dzms+3v37j15R7zevXvbj+bbPyLYt2+fwxXg1L39in6xkvkfJiij
ou6Dg4OdXeM/adIkFeusOah7G+reCMeNk0fSN2+mM2dc57FjNGgQ9e1riboX
it+O+Ph/e+4c7dlDI0YYn9JuKOpeV5nFgbpH3aPuUfcOEXU/uRcp2AN1rxGo
e4/R4TZ9mps3by5dujS/xAU9evQYOXLk9u3bc3JyHH7Lli1bxMMiIyMLLP/1
11+joqICAgLyn8rHx2fMmDEOz/y3Y/8w4cmZ/YrOxo0bxc8q+vcW+rMKPCA3
Nzd/zn/Uvbag7otibq40J8cdHTVK/uF9+bJL3xAN58wXL+HOHTkznom8cIEi
IykgABZ0ypRKCv8voxWoe7Wg7lH3qHvUvQNE3U/yJQVR91qBuvcYHW5TZ4iS
zcjISEpKSklJ4Z9z/vDhw8uXL2vyVMq41fT1hoC6t3lu3d+7J5suPd0dFUkV
FGTWus/Lo2vX5KSOffuaST8/eVVCp06woEFBmFVPR5nFwaz7kYNZVjzMUnlC
70KNrq3eyDYs57Vn2WIZS+XTrQv1aHmWnJ3VfxRxZG415m+aGet+Qm9SEHWv
Fah7j9HhNgUeBure5qF1n5Ulj9UeO0ZHj7qjPj4UGGhA3U+dSj16yJvxcT6a
SEuTE9YNGODSKQGhfg4bVjE2NlbvUQt1rxbUPeoedY+6d4Co+/F9SMEe3VD3
2oC69xgdblPgYaDuPbXuz5+nRo3onXeoXDl39OWX5dFkF9d9Vpa87XupUnL2
+C5d1NupE335Jb3+Ok2fDj3BqKgqSUlJeo9aqHu1oO5R96h71L0DRN2P60sK
ou61AnXvMTrcpsDDQN17at2fOEHVq1PJklSxojv6yisG1H12Nq1dS6VLU8OG
9MMP6m3Zkj7/nP72N3lyPvQAlyypkpiYqPeoZdm67zSbODLrfmlLlm0iWTJv
+865c/rMLiwPVGFZ+SDLGV1Z/vQVy2bL1at8GXihzm/HMnA4S9P9tS/qPrQf
KYi61wrUvcfocJsCDwN176l1v3mz+H9qmjdP3vfcDR061IBZ9eyBv24dLVtG
UVHqXbyY/P3pD3+Qd/SDHmCXLuWOHDmi96iFukfdo+5R96h7DRF1P6Y/Kdgd
da8RqHuP0eE2BR4G6t5T637jRjmFmkhRw9fEoaNHG1P3wiNH5L3hdu9W786d
NGsWffwxtWsHPcGAgAoOb96qLah71D3qHnWPutcQUfchA0lB1L1WoO49Rofb
FHgYqHsb6t4IDax7sc9kZ3O9fZsOH5YnSEAPcO/e6jdu3NB71ELdo+5R96h7
1L2GiLofPYgURN1rBereY3S4TYGHgbq3oe6NcMoU6taNVq+mAwdM6a5dtHy5
8dPBQU2MiqqSnJys96hl2bpn9jWz7ud0ZKl8ZLBQl7Ri+eNQ9SrPJV6ose+x
rLuNpU8Yy7Vfs2y7QL1eM1gyPxxY3oyl6f7aF3U/yp8URN1rBereY3S4TYGH
gbq3oe6NcMMGOXf9K6/I/0JorF98UXbXrl16j1qoe9Q96h51j7rXEFH3IwaT
gt29UffagLr3GB1uU+BhoO5tqHsjPH+egoNpyBDun+4Q8g0Pr5SQkKD3qIW6
R92j7lH3qHsNEXU/PJAURN1rBereY3S4TYGHgbq3oe4NMimJLl2C0HivXq35
8OFDvUcty9Y98x7czLr/dCfL1gtZNtrAcmJv9fpOYrmgLctq+1iWO8ZyzACW
nJ21/1jiOLkXS+Zvmun+2hd1P2wIKYi61wrUvcfocJsCDwN1b3O/us/Lo0eP
6NYtunlTvcuWUZcu8r+Gvxxn3r0r56ZzjeLNTEmBunj9OsXFUWAg+fqa1ZCQ
inFxcXqPWqh7taDuUfeoe9S9A0TdBweRgt6oe41A3XuMDrcp8DBQ925Y97m5
MkgvXJCnr6t25kzq0MGt696Viv3EZZ8kWM2MDDpxgl5+mcxLmTJltm7dqveo
hbpXC+oedY+6R907QNT90B9JQdS9VvD3DdPtXSow12s019qCYvHkn7hGr0sx
8Oy6T02lzz+nhg2pSRP69luVVq9OdevSokXGvxzDTUqiyEiqUYPq1YPa+8UX
VLMmvfYajRghP00yo5s2Vb1+/breoxbqXi2oe9Q96h517wBR90FDSUHUvVag
7ouCuV6judYWFAvUvc396j4xkf74R3r7bfroIypfXqVvvkmffEILFxr/cgz3
7FkaOZL+9Cf65z+hLpYoQSVL0pIldPq0KY2Pr3Hv3j29Ry3UvVpYdf/tKpbV
f2FZK4blyMHq7TuO5YqmLGvsYcm547xwWQuWnJ21z3ji2HMKS+Zvmun+2hd1
P2QYKejdHXWvDaj7omCu12iutQXFAnVvc8u6f+45WrWK9u+ngwdVOmkStWlD
S5ca/3IMd+9e+Ue+ry/t2QO1d9cuWrOG3nlHnnDy9demtFev8seOHdN71ELd
qwV1j7pH3aPuHSDqPnA4KYi614quwBMxercCeoG6t7lf3Scl0fPP05Ur8gJ8
1U/i/nPmu8yYGHnrvSlTjF8TTczLk7u9+5idTcnJVKGCPNukdGlT+tVXH+7d
u1fvUasr6l4lqHvUPeoede8AUfcBI0hB1D0AwIKg7m2oe0/Xk+pe7PApKfKk
Drdy715auZJWrDCr27ZVS01N1XvUsmzdMy8AZ9Y9887pzzxm2S+UpfK9vJWd
2YXlBD+WzDwfGMKSedP58X3U2zyKZZgPS+bebsa69x9JCnZD3QMArAfq3oa6
93Q9qe4fPKDDh2VKr1kDNTMmplpaWpreoxbqHnWPukfdo+41RNT9oNGkIOoe
AGBBUPc21L2n60l1f/QoValClSoZf626J4nr7lH3qHvUPerejHWvvCeg7gEA
FgR1b0Pde7qa1/29e3T9Ol29aoDr1snZ6atVoxYtXOdXX1GjRp5s9+7lUPeo
e9Q96h51r/cwqC2i7geMIQVR9wAAC4K6t6HuPV1t6z4nR976rXFjqlXLACtX
pnffpd275dX3LnPFCpo2jcLCPNYlS6okJibqPWpZtu6/XkscmXUfFMySOate
u/ksOWs+pyPLGV4sy5xhObsTS06eCzvNVm/nWSxXfsdybH+WZqz7/mNJwW49
UPcAAMuBurd5bt136EBz58oDzRZ3wwYaNEizuhe7nHiqihXpu+8MUAT+W2/J
WeySk11kXJx8vUOH0sSJHuvChVWuXLmi96iFukfdo+5R96h7DRF1r3zrB9Q9
AMCCoO49uO4bNZLHrI8ds7oREdSjh2Z1//AhBQXJc+OPHDFA8Vr+/ncKDZUH
011j165UqpS0UyePNSioQmxsrN6jFuoedY+6R92j7jVE1L3yHQZR9wAAC4K6
99S6371bnj0u0mzxYqs7eDC1bl143Yt3uyhmZlJgINWsSYmJBrhxI1WvLo+k
jx7tIps3pxdeoBIlyMvLYw0ORt3rKPNKZGbdMy8Ar7mb5Vc/seRcOD/Nm+Wi
H1h+upOl8unWhcp87ZzpDpifZYV3Z9lhLksz1r3fBFLQC3UPALAeqHtPrfvr
16lpUypXjmrUsLply1LVqoXUfU4OZWXRo0eFe/s2BQTQF18U9dMAbb1xQ97B
rXdv8vNzkeKVPvecnMpvyBCPNSysUnx8vN6jFuoedY+6R92j7jVE1H3viaQg
6t5Ybt++vXnz5kmTJv34448BAQFTp05ds2aNC2a5cRnnz5+PiooaP368v7//
hAkTxL9Pnz5t9EoBgLr32LoXETp0qLz0vmtXq9u4sUxU5brft4+io2n79sLd
sIHatKG6dY3ZNx48oEOH5Gtx2YxzffrISQaqVuVGljsbHl4pISFB71ELdY+6
R92j7lH3GiLqvtdkUhB1byA7d+7s3r1716fw9vYWyZ+bm2v0CrLIy8tbtWrV
069OsHLlSrO/OmB2UPc2D617mG9R5sx/6y363e+kzzxTiL//vbR2beNfl8tc
tIhGjDC+wVH3JhV1j7pH3aPu9UDUfc8ppKCXD+reGGJiYuypGxAQsGvXrosX
L6akpBw5ciQ0NNS+XCw0eh1ZnD9/3v5CZs+efe7cOfHqxJL58+fbF0ZHRxu9
gsDSoO5tqHtPt4h13769bIHhwwsxKEhOXO+CY/dib4yPl3ejW7PGYIOD5Sn6
vr4ea0hIxbi4OL1HLcvW/Y9cWHXfeD3LSodYvn+aJefW5z99xTK0H8vgIJZt
IlmOHMySs7My15w5nSDzN82Mde8TRgqi7g3hxo0bPXr0ELtTeHj448ePn/xS
bm7u3LlzxZcCAwNNfYB7+fLl4lUEBwfn5eU9uTwkJEQsDw0NNWrFABCg7m2o
e0+3iHUfHU3Z2YU/28OHMhnq1dN9te/epU2bqEULatcO6mtAQAUXXCuHulcL
6h51j7pH3TtA1H2PqaQg6t4Q1q5dK/alPn363L9//+mvZmRkeHt7DxgwICUl
xfXrphURERHiNYaFhRVYHhsbK36Vxo8fb+rPLoDZQd3bUPeeruZ1L56tRg3d
bzR/6JCcvq9PH+NPXPd4cWY+6h51j7pH3Zux7r3DScGuqHsjCAoKEvvS/Pnz
nT3gzp07rlwfPdi5c6d4jV5eXitWrDD1xxTAI0Hd21D3nq4edV+hAu3Yoa+z
Zsn77onV1uMugYsWyeePiIDS5curJCcn6z1qoe7Vwqp772ksyx9lebQ8S86V
7/6jWK5oyvL7xSw5V74LN9dnydlZmfe7n9KTJfM3zYx13206KYi6dz15eXne
3t5iX4qJiTF6XXTk4cOHY8eOzZ9Jb9CgQQsWLDh06JDD0xUAcDGoexvq3tPV
tu7FLie6uHZt+uEHff3ySypfntavp5QU7RW/O127yh/RogUUv/7lT548qfeo
hbpXC+oedY+6R907QNS91wxSEHXveu7du2cP3tjY2CeXL1myZO7/Muc3CjzA
dGRnZ0dFRfXu3fvJCfO7deu2YcOGAhfjA+BiUPc21L2na6/7SZNkvDuz6HWf
kyNnumvaVAa+rlavLut+40a6d097z56l776jKlXkBALQy6vckSNH9B61UPdq
Qd2j7lH3qHsHiLrvGkFKou5dTlZWlr1zd+/e/eRyPz+/AneO27Rpk1ErqSG5
ubkJCQliVwwNDRVpb39pM2bMMHq9gKVB3dtQ956uyPZBg+Q17CLznfnKK0Wt
e2FaGp06RUeP6uvy5VSnDjVqRJ06aW/jxrLuxXsybx6ktWurXr16Ve9RC3Wv
FtQ96h51j7p3gEiqLjNJwa49UfcGYD+cHRkZ+eTCQ4cO7f1f7Bfmm7ruRdRn
ZmYWWHjnzh3R9fbAv3HjhiErBoAAdW9D3Xu6O3dSYCD17UuRkU596aVi1L1r
PHuWmjWjsmWpWjXtff11atKEQkPluQFw9+7q6enpeo9aqHu1sOq+whGWZc6w
nNWZpe8k9W6pxzJgBMsBY1i2m89yfWOWnJ11YAhxRN0XC1H3nWaTgqh7Q7AX
rkj4nJwchw+YPHmyqev+2rVrXl5e3t7eDx48KPClvLy8fv36iVe3a9cuQ9YN
AAHq3oa693Rv3aJt2+Tl1R06OPW552j7dveqe/v97sWaixXT3FGjqHRpKlVK
Tg8Imzf/cP/+/XqPWqh7taDuUfeoe9S9A0Tdd5xDCqLuDeHUqVP249cRERFP
B35ubq79pvDmrXvxEvr06SNeQnR09NNfsl+DIN4EQ9YNAAHq3qZ13efkUFaW
fCrViqb7619R95qZmSnvLtetG/n4OFW84e5W92Lr371LsbG6uHChvKnfe+/J
S+/h999/hLpH3aPuUfeoe72HQW0Rdd9hLinYBXVvEPbbwQvCw8PPnz+flZUl
Fj548OD48ePBwcEecN39vHnz7K9i7dq1d+/etS+8detWWFiYWOjj45OdnW3s
GgIrg7q3aV33aWlyxTgXXG/cKA8lX76MutfGvDy5ZdPTlXzjDbc7M9++5llZ
unjvHh0/Tvv20f79/0exxIKeOPGxC26/i7pXC6vuy55kyaz7YUNYTu6l3rVf
s+w/luW3q1j2Gc9y3ZcsOTtr4HDiOGYAS+Zvmhnrvv08UhB1bxQPHz6cOnVq
/gR63t7e/fv3f3Ji+aVLlz59WruJuHfv3pN3xOvdu7f9aL79xe7bt8/oFQSW
BnVv07TuxTOcOUMbNrCuAp4/n559FnXvUos+Z77hir1CE1NTKTHx3165Qpcu
ybrfu5f27LGcx459nJGRofeohbpXC+oedY+6R907QNR92/mkIOreWPbv3/9k
AgsGDhwYERFx7do1o1dNA3799deoqKiAgID8V+fj4zNmzJj4+HijVw1YHdS9
TdO6P3RITkheogR9/rl6q1enP/4Rde9SzVL3Yoe/fVsbMzKkt25Jb9wQhUtv
v01/+YsVrVLlg5iYGL1HLdS9WlD3qHvUPereAaLu20SSgl16oe6N59GjRyLn
ExMTTX2wXoGHDx9evnw5JSUlNzfX6HUBQIK6t2la97t3y7oX6+btrd42bei/
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
e9o97R4AYBfaPSlgkb3+8mWRnKyNQWeunDolnntONGkimjYVfn7EdenViyvi
0e5p97R72j3tHgBMj3ZPClJSU7UB8/fvN2W2bxfFiwtvb+HjIypXJq7Liy8+
tW3bNqN2qtbQ7h2l1O4Vi96coUr5+Tml7GjmeNr/oJR6UUqZPFEpX72llFdX
KEXlzfpNb6GSkbOUovhJo90DQAFAuycFKceOiQULtL729NPmS506wsNDO/X+
55+JSxMZ2fTSpUtG7VStod07inZPu6fd0+4BAHah3RPFpKaKGze0A8sTE90f
2dRCQoSXl6hXz3ypW1d4eor167Uv8YkrExXll5ycbNRO1RravaNo97R72j3t
HgBgF9o9Uczx49ow7927i4ED3R9/f+2K8IMHizNnzJfoaNGihXbSfbNmxKXp
1evpyMhIo3aq1tDuHUW7p93T7mn3AAC70O6JYiIjxVdfiQ4dRM+e7k+rVqJl
S/H22yIlxXy5dEl06yaefVY0bqyNrUdclu7dGVWvwLb7cR8p5Z9BSlnZTSnr
/R3PmKlKKXdRKR+OV4riLwfa/j+lqLxZFV/xwDClKH7SaPcAUADQ7oligoK0
L81DQ8Xy5e7Pu++KLl1E8+ZiyxZT5vvvxdq1xNXZsoXr3dPuafe0e9o97R4A
TI92TxQzcaIYMEAbyy4iwv0JCxMjRmhff4eHE2JvVq9ucvbsWaN2qtbQ7h1F
u6fd0+5p9wAAu9DuiWLk/58DA7UvndPS3J/z58WGDdqR7e3bE2JvAgOf2b9/
v1E7VWto945SaveKZ3BvfkEpKvVcJryf45kyQSmVTyvls7eVoni9+4A1SlF5
s6q8ZDK0ewCAIto9UYze7n/4wf1rInP1qti7VwwZoh2iT3Jk1CgxaJA2/iHJ
kTFj6h08eNConao1tHtH0e5p97R72j0AwC60e6KYe6rdExu5eVNERYn580nO
rFzZmCPzafe0e9o97d7Zu0EAgLMZ1e6bN/f5/HOxc6dW8EmhyogRol8/2r0J
EhMjhg4VY8cqdaUCmbCwhidPnjRqp2oN7d5RtHvaPe2edg8AsItR7b5BA5/g
YLF6tdi4kRSu9O4tevSg3Zsg27aJ4sW1i+4NGED+Jx98UP/o0aNG7VStod07
SqndT1LLoTpKWdtRKfMHOp5PRimlyS9KeW+6Upa/ppQ3FyhF5c36Yxuhkmmj
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
cP3KOyYjI2PTpk3yT2cvyOF2b+eGTUpK2rt375kzZ9RWE3mrV6+e/iqMGzfO
xmyHDh2Sr4KBb6cjR4788ccfRj0aAAAWtHsAKNji4uIe+l+W3X72idOmTct9
39TU1C5dulSrVm3q1KmuX3OHLVmy5PHHH8/zaARjOdzu7dywYWFh8vHfeecd
hXWEVWvWrPH19W3ZsuWpU6dszFa2bFn5Khh4DsUnn3zStGlTox4NAAAL2j0A
FDZ///vf5T7/X//6l7tXxCnS0tKqVq369ddfu2BZDrd7O02aNIl2714ZGRn6
ORQGtvsbN26UKVPGseEaAACwgXYPAIWN4e1etpXDhw9n/3H//v23b9+2Nv/V
q1f37t174cIFo1Yguzlz5lSqVOmvv/6yNkN6evrp06cjIyPPnDmTmZlpz2PK
2eLj4+VdoqOjsx8SkKPdp6SkREVF/fnnn4pPwWLo0KEOtHtra2vhwBaQbt68
KV9l+cIZ+ASdQb7x9u3bZ9S7Sz5Z/f9I9rR7uTHlcuUmio2Ntb1hJ0+eXLt2
bRecPAIAKFRo9wBQ2Nhu9xUqVHgwlzfeeCPHbEeOHClVqlSfPn3ef/99T09P
+YDVqlVLSkoaP3588eLF5Y/e3t5Hjx7Nca9Vq1Y98cQTHh4e+r87ZcuWDQkJ
MfAQ+hs3bpQvX37KlCl53rpnz57evXuXLl3a8g9fyZIlg4ODc/8qQNZq+aw3
btwo/7548eIaNWpY7vLoo49aZtPb/VNPPSWfaevWrYsWLarPU6VKlfXr1+d4
TDs3rOTr6+vj41OuXDn9AeWfOe61bds2B9Y2X1tAFv+HHnqoRYsW8u8JCQk9
e/b829/+pt+lSJEiX375pT6bn5+fXHSeGzwlJUUuXd66devWPF8OGzZt2iTv
WKZMmdw3eXl5yZsiIiIsU2rVqiWn3Lx5c+fOnS+88EKxYsX09ZTb4ddff81+
39mzZ+d+CaSDBw/mWMr8+fOrV69eqVIly5ks8lOT/S5t27bNPv+tW7fee++9
7Bu2RIkSrVq1yv020F26dElu+YULF+Z3ywAAYAPtHgAKm3y1e/0fiI4dO+aY
bd++fXK63utlzddnkz1XP51f/7Fr167Z79KjRw99uuxNnTp1atKkiX7M80sv
vWTUU5s1a5YsoRcvXsx9k36Uu6V9N2/e/OGHH9Z/HDZsWI6Ze/XqJafLpiwf
UJ/Hw8Pjsccek80x+xnTeru3bAdvb2+5Be6//359/kWLFmV/TDs3rCRLYvZ5
7tru7VzbfG2B2NhYkfUbG1ntn3zySX02+ULLZyH/snnzZn22OXPmyB/LlSsn
u3yOR1iyZIm8ycfHx4FvqDds2CDvK1/K3Dfdd9998qYtW7ZYppQvX15O+eCD
D+SGku+o2rVrV65cWV9hLy+vq1evWubM0e71D4J04MCBHEsJCwvT57H8xsZ2
u+/SpYs+m9zg8uV48cUX9Q0lffzxx3k+x1GjRskPQn63DAAANtDuAaCwydeR
+bKD2Gj3kuw1aWlpCxYs0H+U88s29/7778u/P/LII5b5582bJ6fIavbFF19Y
DlreuXOn/qsA2UwNeWp+fn6yWOV509atW+WyJk+ebDmw/Pbt2/369RNZA9fn
GFdN78t169aVfz7xxBNync+fP38nazS806dPW2aztHv5TC3fUMfFxdWqVUtk
fW8u57e2qtY2bHavvPKKsOPIfDvXNl9bQG/3np6e+rEWgYGBERER+lEW8jEt
p13cunVLH3QuPDw8x1q1atVKTv/www9tr3yeHGj30rPPPnvixAl9onx76xPn
zJljbSmy+Ftr9xZRUVH6PDaOzD937pw+z5IlSywT5adg2bJlHTp0sHZNhMjI
SHmX3IcNAADgMNo9ABQ2Brb7IkWK6F+Unz17Vv5YsWJFvffJ8qV/6azPnJKS
UqJECTklODg4x+PMmDFDTpdNUPVZ3bkj10Suj2zc1mbI3bVv3rypf0W+fPny
7NP1viw1bNgwOTnZ2gPq7b5ChQpJSUnZp+/YsUO/u42R0wxv93dd2zv52QJ6
u9fZ/t1LUFCQnMfX1zf7xJiYGL2eJyQk2F75PDnQ7tu3b5/j2cmyL/I6LMHC
qHZ/+PBhfZ7Vq1ff5Yllk5mZKT8vcuvZfxcAAGyj3QNAYWNgu7f0d1kS5Y91
6tTRf5R1Sf9GWP9xz549+o+5u6c+pyxojj+f/9i6dat8KFlL7zrniRMn1qxZ
ExISMmjQIL3bfvTRR9ln0Puy3FC2r5VmY8z8SpUqyZtmzpxp7b6Gt/u7rm12
d90ClnZvox3r9FPIRbbD9aUxY8aIXKdm2M+Bdr9ixYocc+qHJXTu3NnaUoxq
91KTJk1E1qEp8imvWrXq1q1bNma2kDN369bNnjkBALAH7R4AChvXt/svvvhC
/4emaC6Wf4PUx9ZbunSprFc2Rss/ffr0kCFDvL29RS6TJk3KPqfel998803b
S7TR7vW6N3z4cGv3Nbzd33Vt7+RnC1ja/R9//HHXh9WfS7t27fQf09LSypUr
J6f89NNPd71vngxp9/padejQwdpSDGz38qF69+6tjyMhsobUCwgIWL58ue13
tXx7+Pn52ZgBAIB8od0DQGHj+navn3QvDbQiMDBQ/Xl9+umnNo4B2Lp1a5ky
ZUTWcQKDBg1as2bNkSNH5Grrp4fn2e779etne4k22r2vr6+8acKECdbua3i7
v+va5msLWNr92bNnbT/snazzMmQT9/DwiI6Olj+uXr1aZA1Zb//l9nIwsN3b
2MIGtnud3GjTp09v3ry5vpIia1jCHTt2WJt/ypQptWvXvuvDAgBgJ9o9ABQ2
rm/3O3fu1P+hiY+PN+hJ5GHhwoXFihWzdmuVKlXkCnTr1k2uavbpzmj3qamp
+mUBly5dau2+9rT7zp07y3nu+qsPO9c2X1sgX+1e6tu3r2VVO3ToIGyelXBX
//73v/WlW4bvs3Bxuz906JA+T2Jiov3rn5ycHBoaqq9YqVKlcmxwi9GjRzdu
3Nj+hwUAwDbaPQAUNq5v99evX9evln7Xk7hVbNq0SS4i+xXQLPRB/6QcZ6an
p6fXq1fP8Hb/+eef64s7evSotfva0+7l5hJ2XDHQnrXN7xbIb7uXz9TDw6Nk
yZK///67fK09PT0vXbpkzx3zdPDgQX3pOYaUDw8P16e7rN0nJSXp8/z66682
VjjPgfHlXfT77t69O8979enTJyAgwMbDAgCQL7R7AChsXN/upZCQEP3fmqCg
oOxfyB4/flwuws5RyGw7ffq0fHzLlemy+/PPP/WlL1y40DLxt99+q1+/vj5d
pd3LVjtgwADLgIGbN2/WL/Nne8A0e9r9/PnzRdaFCXbu3GmZmJaWluO7YHvW
Nr9bIL/t/s5/vrJ/4okn5J9yley8V55k75ZvHpE1Jp4+Er58ylOmTLH8j8Vl
7V6qWLGiyDp/P/v79vLly5a/z5s3r1SpUvIdnuNtPGHCBP3xL1y4kOcjy40/
ZswYG4sGACBfaPcAUNi4pd1nZGT4+/vr/9x4e3u3b9/+9ddfr1evnj4Q2ezZ
s414Zndq1qw5evToPG9q3bq13sRbtWr1xhtv6Jdxf+CBB2rUqKHY7vVjxUuU
KNGsWTO5BeTDiqxz222PR2dPu5dtUa+uchHPPfdc9+7dX3jhBfny5biMmp1r
m68t4EC73717t+V/FLt27bLzXta89dZb+kNVqFChcePGcj1F1mEM+pEGrmz3
M2fO1Gfz8fHpksXX17d48eKWst+3b1/9RS9ZsmTDhg179+49ZMgQPz8//V79
+/fP82ETEhLkvbZt22bvFgEA4G5o9wBQ2JQqVUru87/99lt7ZtYvbSYbTY7p
en/P0e5l88p+a/Z2r1u8eLF+9rdF1apVZbU35Lv7O1knMlsbzC0xMTEgIMCy
XNmRO3XqFBMTM2vWrNzdtk+fPnLi4MGDbS9OvxbAuHHj5s+fX7ZsWf2RixQp
4u/vb+3rWgtrGzaH6Ohoy9frutKlS0+ZMsWBtc3XFtAPhLDxvXOe9EvMW37J
o+LSpUty9SxrW7FiRbnF/vrrr65du4r/PUJD/27dWru3sYUt7f7w4cM21iQj
IyMkJET/9YJOtnL5osTFxVnm+e2331599VV9TSy8vb2Dg4OtDZsv3zNeXl42
LvEAAEB+0e4BAC6WnJwcFRUVGRmZ5znyKmThKlq06Pr1663NkJCQEBERIbuY
rGzGLjozM/PYsWP79u27fv26sY8snTt3bteuXdu3b4+NjVVcc+dtAVlja9Wq
Jf87ERYWZtRjJiYmymdtY/gCl0lNTZVvWrkyBw4csJyFkZv+3t65c+fZs2dt
bGH5bqlZs+b48eOds7IAgEKKdg8AKEiGDBnSsmVLd69FYfTRRx/J/0uUKVMm
zyHmkN26detKlSpl47cEAAA4gHYPAChI4uPjPT099+zZ4+4VKSwyMjLkNp8+
fbp+7PrUqVPdvUYm0LRp0xynQgAAoI52DwAoYEaMGGF7vHoY5ccff/T09NTH
lBNZA8vnOegBstuxY4eXl5fhp6UAAEC7BwAUMBcvXpw/f76716JQkNv5oYce
kgW/Xr16oaGhhp/LXyBFRkZu2rTJ3WsBACiAaPcAAEAF39cDAHAvoN0DAAAA
AGB2tHsAAAAAAMyOdg8AAAAAgNnR7gEAAAAAMDsBAAAAAAAAAAAAAADuAe4+
ggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHf6/9XRUp0=
    
    "], {{0, 3048.}, {677., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{677., 3048.},
  PlotRange->{{0, 677.}, {0, 3048.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[287]=",
 CellID->1606164724]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Annotation and Enrichment", "Section",
 CellID->2035743524],

Cell["\<\
Having carried out the classification and clustering of data base on its \
temporal pattern, we would like to perform annotation of these data for gene \
ontology (GO) and pathways from KEGG: Kyoto Encyclopedia of Genes and Genomes.\
\>", "Text",
 CellID->1722961908],

Cell[CellGroupData[{

Cell["Gene Ontology Analysis", "Subsection",
 CellID->2013711891],

Cell[TextData[{
 "MathIOmica provides a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function using annotations (default is for human data) obtained from the \
Gene Ontology consortium, and by default uses human data annotated with \
UniProt IDs. The ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function performs an over-representation (ORA) analysis, providing a \
\"significance\" cutoff based on a p-value assessed by a hypergeometric \
function. "
}], "Text",
 CellID->1112357573],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["GOAnalysis",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/GOAnalysis"], "[", 
     StyleBox["data", "TI"], "]"}], Cell["\<\
calculates input data over-representation analysis (ORA) for Gene Ontology \
(GO) categories. We note that the function utilizes ontologies obtained from \
the GO Consortium, and by default uses human data annotated with UniProt IDs.\
\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->329777640],

Cell["\<\
Performing an over representation analysis for Gene Ontology (GO) terms, \
using clustered data in MathIOmica.\
\>", "Caption",
 CellID->2064986220],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AdditionalFilter", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
AdditionalFilter provides additional filtering that may be applied to the \
standard output structure to be returned. \
\>", "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BackgroundSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
BackgroundSet provides a list of IDs (e.g. gene accessions) that should be \
considered as the background for the calculation.\
\>", "TableText"]},
   {"FilterSignificant", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "FilterSignificant can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " to filter data based on whether the enrichment analysis is \
statistically significant, or if set to ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " to return all membership computations."
    }], "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. If set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used."
    }], "TableText"]},
   {"GetGeneDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GetGeneDictionary"]], 
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"GOAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GOAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GOAnalysisAssigner"]], 
        "paclet:MathIOmica/ref/GOAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"HypothesisFunction", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Query", "[", "\"\<Results\>\"", "]"}], "[", 
        RowBox[{"BenjaminiHochbergFDR", "[", 
         RowBox[{"#1", ",", " ", 
          RowBox[{"SignificanceLevel", " ", "->", " ", "#2"}]}], "]"}], "]"}],
        " ", "&"}], ")"}], " "}], Cell[TextData[{
     "The HypothesisFunction option allows us to chose a function to \
implement multiple hypothesis testing.  The default is  using the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["BenjaminiHochbergFDR"]], 
        "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function.\nThe user can use any function f with three inputs, of the \
form f[#1,#2,#3] where the inputs refer to:\n#1 is the p-value list, \n#2 is \
a significance cutoff, \n#3 is the number of GO associations overall being \
tested. \nThe function f must output a list of 3 values: {original p-value, \
adjusted p-value, ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " based on whether this value is considered statistically significant or \
not respectively}."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input.\
\>", "TableText"]},
   {"MultipleList", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
MultipleList option specifies whether the input accessions list constituted a \
multi-omics list input that is annotated so. If this is the case, \
MultipleList is set to True and each input list ID should have the form \
{ID,\"Omics Type Label\"}, e.g. {\"NFKB1\",\"Protein\"}, and the different \
omics type are treated as different for each ID. If MultipleList is set to \
False, and labeled IDs are provided, labels corresponding to the same ID are \
treated as equivalent to avoid overcounting.\
\>", "TableText"]},
   {"MultipleListCorrection", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "MultipleListCorrection is an option whether or not to correct for \
multi-omics analysis. The choices are ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     ButtonBox["Automatic",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Automatic"],
     ", or a custom number. This essentially enlarges the population by this \
factor to account for additional IDs being considered as the result of a \
multi-omics cluster analysis. If the value is set to Automatic the number of \
unique ID labels is used to make the correction."
    }], "TableText"]},
   {"OBOGODictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "OBOGODictionaryOptions specifies a list of options to be passed to the \
internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["OBOGODictionary"]], 
        "paclet:MathIOmica/ref/OBOGODictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function that provides the GO annotations."
    }], "TableText"]},
   {"OBODictionaryVariable", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "OBODictionaryVariable can provide a GO annotation variable. If set to ",
     
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["OBOGODictionary"]], 
        "paclet:MathIOmica/ref/OBOGODictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used internally to automatically generate the default GO \
annotation."
    }], "TableText"]},
   {"OntologyLengthFilter", "2", Cell[TextData[{
     "OntologyLengthFilter can be used to set the value for which terms to \
consider in the computation, by excluding GO terms that have fewer items \
compared to the OntologyLengthFilter value. It is used by the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GOAnalysisAssigner"]], 
        "paclet:MathIOmica/ref/GOAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"OutputID", "\"\<UniProt ID\>\"", Cell["\<\
The OutputID option takes a string value that specifies what kind of \
IDs/accessions to convert the input IDs to compute the GO enrichment.\
\>", "TableText"]},
   {"pValueCutoff", "0.05", Cell["\<\
pValueCutoff provides a cutoff p-value for adjusted p-values to assess \
statistical significance.\
\>", "TableText"]},
   {"ReportFilter", "1", Cell["\<\
ReportFilter provides a cutoff for membership in ontologies in selecting \
which terms/categories to return. It is used in conjunction with \
ReportFilterFunction.\
\>", "TableText"]},
   {"ReportFilterFunction", 
    ButtonBox["GreaterEqualThan",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqualThan"], Cell["\<\
ReportFilterFunction specifies what operator form will be used to compare \
against ReportFilter option value in selecting which terms/categories to \
return. The default is to use GreaterEqualThan. \
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"TestFunction", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", " ", "-", 
        RowBox[{"N", "[", " ", 
         RowBox[{"CDF", "[", 
          RowBox[{
           RowBox[{"HypergeometricDistribution", "[", 
            RowBox[{"#1", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
           RowBox[{"#4", " ", "-", " ", "1"}]}], "]"}], "]"}]}], " ", ")"}], 
      "&"}], " "}], Cell[TextData[{
     "The TestFunction option provides a function used to calculate the \
p-values for the enrichment of each term. It can be a function of four \
inputs, f[#1,#2,#3,#4] (e.g. the default is using a hypergeometric \
distribution CDF, 1-N[CDF[",
     ButtonBox["HypergeometricDistribution",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/HypergeometricDistribution"],
     "[#1,#2,#3],#4-1]]]. The four inputs refer to:\n#1 is number of draws \
(members in group being tested),\n#2 is number of successes for category in \
population,\n#3 is total number of members in population,\n#4 is number of \
successes (or more) in current group being tested for specific category.\nThe \
output is a p-value (real positive number \[LessEqual] 1)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->740180373],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1986245587],

Cell[TextData[{
 "The input data for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " be a single list of ",
 Cell[BoxData["n"], "InlineFormula"],
 " genes in the form:\n",
 Cell[BoxData[
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["ID", "1"], ",", 
     RowBox[{
      SubscriptBox["ID", 
       RowBox[{"2", ","}]], "..."}], ",", 
     SubscriptBox["ID", "n"]}], "}"}]}]], "InlineFormula"],
 "\nThe IDs may be provided as ID strings, or as labeled strings in the case \
of multiple omics being considered. Labeled IDs are provided as ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "1"], ",", 
       SubscriptBox["label", "1"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "2"], ",", 
       SubscriptBox["label", "2"]}], "}"}], ",", 
     RowBox[{"...", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "3"], ",", 
        SubscriptBox["label", "2"]}], "}"}]}]}], "}"}], "."}]], 
  "InlineFormula"],
 " The labels are typically a string, e.g. typically \"RNA\" or \"Protein\".\n\
The default output contains each GO:term that was considered and found to be \
statistically significant. For each GO term we schematically have an \
association with keys ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"GO", ":", "Term"}], "\[Rule]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"testing", " ", "outcomes"}], "}"}], ",", 
     RowBox[{"{", "statistics", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"GO", " ", "term"}], "}"}], ",", 
       RowBox[{"{", "Membership", "}"}]}], "}"}]}]}]}]], "InlineFormula"],
 ". The output has the following structures: for a single list input:"
}], "Text",
 CellID->296707676],

Cell[TextData[Cell[BoxData[
 RowBox[{"listOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "1"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "1"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "1"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "1"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "1"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["Term", "1"]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
    ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "2"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "2"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "2"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "2"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "2"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["Term", "2"]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
    ",", " ", "...", ",", 
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "n"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "n"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "n"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "n"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "n"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["term", "n"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], " ", "\[IndentingNewLine]", 
   "|>"}]}]], "InlineFormula"]], "Text",
 CellID->308882198],

Cell[TextData[{
 Cell[BoxData["GOAnalysis"], "InlineFormula"],
 " can also take as input the output of clustering of time series \
classification data, e.g. ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " or ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesSingleClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesSingleClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " association of associations. The groups for each class will then have keys \
labeled ",
 Cell[BoxData["\"\<GroupAssociations\>\""], "InlineFormula"],
 ", that include the labels used in the clustering. The labels must \
correspond to protein or gene accessions/IDs. For each class and group the \
corresponding GOAnalysis enrichment is computed and returned. "
}], "Text",
 CellID->915126987],

Cell[TextData[{
 "We also note that GOAnalysis provides a multiple-hypothesis adjusted \
p-value. By default, it utilizes a Benjamini-Hochberg false discovery rate \
(FDR) using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["BenjaminiHochbergFDR"]], 
    "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->875538647],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["BenjaminiHochbergFDR",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/BenjaminiHochbergFDR"], "[", 
     StyleBox["pValues", "TI"], "]"}], Cell[TextData[{
     "calculates for a list of ",
     Cell[BoxData[
      StyleBox["pValues", "TI"]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["p", 
          RowBox[{"1", ","}]], 
         SubscriptBox["p", "2"]}], ",", 
        RowBox[{"...", 
         SubscriptBox["p", "N"]}]}], "}"}]], "InlineFormula"],
     ", the Benjamini Hochberg approach false discovery rates (FDR). "
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1158915490],

Cell["Calculating a false discovery rate (FDR).", "Caption",
 CellID->215962140],

Cell["\<\
We carry out our GOAnalysis for all the classes and groups/subgroups. We only \
report terms for which there are at least 3 members, and additionally correct \
for multiple omics (2 sets of GO terms, one each for proteomics and \
transcriptomics).  Please note that this is a time consuming computation.\
\>", "MathCaption",
 CellID->54495101],

Cell[BoxData[
 RowBox[{
  RowBox[{"goAnalysisCombined", "=", 
   RowBox[{"GOAnalysis", "[", 
    RowBox[{"combinedClusters", ",", 
     RowBox[{"OntologyLengthFilter", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"ReportFilter", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"MultipleList", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"MultipleListCorrection", "\[Rule]", "2"}]}], " ", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[288]:=",
 CellID->1071128885],

Cell["We see that the classification is maintained:", "MathCaption",
 CellID->618975626],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[289]:=",
 CellID->712560114],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[289]=",
 CellID->1709177902]
}, Open  ]],

Cell["\<\
Let us extract the top 3 results from all the \"SpikeMax\" data:\
\>", "MathCaption",
 CellID->2051853087],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<SpikeMax\>\"", ",", "All", ",", 
    RowBox[{"1", ";;", "3"}]}], "]"}], "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[290]:=",
 CellID->1202429683],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "7.013519380713489`*^-9", ",", "0.000011067333582765886`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "2480", ",", "39544", ",", "41"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"mitochondrion\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PDP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IBA57\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1683\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GK5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPATA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PPARGC1B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GDAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CXorf23\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NSE4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75323\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06576\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SYNJ2BP\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10809\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99798\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P38646\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9H9B4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55084\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NUJ1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P49411\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13804\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P17568\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22033\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16822\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P83111\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95571\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N4H5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O96008\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10515\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96I99\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P42126\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P51970\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22695\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P40939\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75947\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22307\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10606\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FOXO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P28288\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005759\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.568056155078778`*^-7", ",", "0.00012371963063571558`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "728", ",", "39544", ",", "19"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"mitochondrial matrix\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MMAA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PDP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IBA57\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NSE4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06576\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10809\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99798\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P38646\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NUJ1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13804\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22033\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16822\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95571\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10515\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96I99\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P42126\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FOXO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005814\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.00006891724327877277`", ",", "0.03625046996463448`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "282", ",", "39544", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"centriole\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AHI1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1731\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SASS6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SCLT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP128\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP152\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCDC146\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CNTLN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP135\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S4\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S5\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "6.39793691308638`*^-10", ",", "5.745347347951569`*^-7", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"76", ",", "19258", ",", "39544", ",", "63"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"protein binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13612\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8IUZ5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13861\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94979\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14933\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7L2H7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P01732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13439\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q15819\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19784\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14745\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q07812\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q86UP2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N1G4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UEU0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N8A2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13043\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7Z4H3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60826\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UBE0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30520\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54136\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13596\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25098\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P41227\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P61457\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3L3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P85037\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O00487\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54725\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q2TAY7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P52756\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94776\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13148\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06127\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02818\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P07766\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF624\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BLM\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF772\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25788\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P35998\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3D0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43813\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y2V2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13347\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q5JSL3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BRMS1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43402\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99623\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005829\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "2.038192020994288`*^-9", ",", "9.151482174264353`*^-7", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"76", ",", "10070", ",", "39544", ",", "44"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"cytosol\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43252\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13861\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94979\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14933\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7L2H7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13439\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19784\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q07812\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P56192\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UEU0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13043\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60826\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30520\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54136\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13596\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25098\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P41227\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P61457\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3L3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P63220\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O00487\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54725\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BLM\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLEKHA8\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25788\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P35998\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3D0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y2V2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13347\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q5JSL3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43402\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0003723\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.8522421153683706`*^-7", ",", "0.000055443780653359885`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"76", ",", "2774", ",", "39544", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"RNA binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9BSD7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q86UP2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N1G4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P63220\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P52756\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13148\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43818\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}],
    ",", 
   RowBox[{"\<\"G1S6\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0051301\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "6.931887033069759`*^-9", ",", "0.000012311031370731892`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "690", ",", "39544", ",", "17"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"cell division\"\>", 
             ",", "\<\"biological_process\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BUB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDC20\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HMGA2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BIRC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FSD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TPX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FAM64A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"USP44\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"UBE2C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TIPIN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0062023\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "4.733950597024732`*^-7", ",", "0.0004203748130157962`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "720", ",", "39544", ",", "15"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"collagen-containing extracellular matrix\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CXCL12\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FBLN1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SFRP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PXDN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPC4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"COL26A1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"COL4A2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDH2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MFAP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RARRES2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SFRP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"APOE\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MDK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005876\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "7.572169357708226`*^-7", ",", "0.0004482724259763269`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "74", ",", "39544", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"spindle microtubule\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BIRC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NUSAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[290]=",
 CellID->1411736642]
}, Open  ]],

Cell[TextData[{
 "Let us extract the names of the top 10 ontology group results from all the \
\"f1\" Group1 subgroup 1 data (G1S1). These are in the 3rd list, first \
component for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " outputs (see above and documentation:"
}], "MathCaption",
 CellID->430804357],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{
   "\"\<f1\>\"", ",", "\"\<G1S1\>\"", ",", "All", ",", "3", ",", "1"}], "]"}],
   "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[291]:=",
 CellID->1361454062],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"GO:0016020\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"membrane\"\>", ",", "\<\"cellular_component\"\>"}], "}"}]}],
    ",", 
   RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"protein binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0043312\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"neutrophil degranulation\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0070062\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"extracellular exosome\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0010501\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"RNA secondary structure unwinding\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0035196\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"production of miRNAs involved in gene silencing by \
miRNA\"\>", ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0006986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"response to unfolded protein\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0051787\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"misfolded protein binding\"\>", 
      ",", "\<\"molecular_function\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005783\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"endoplasmic reticulum\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005925\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"focal adhesion\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0035198\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"miRNA binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"mitochondrion\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0009986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cell surface\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005524\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"ATP binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[291]=",
 CellID->500244026]
}, Open  ]],

Cell[TextData[{
 "Let us extract the corresponding p-values/test results of the top 10 \
ontology group results from all the \"SpikeMin\" Group1 subgroup 1 data \
(G1S1). These are in the 1st list for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " outputs (see above and documentation:"
}], "MathCaption",
 CellID->170022261],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "\"\<G1S1\>\"", ",", "All", ",", "1"}], "]"}], 
  "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[292]:=",
 CellID->1410890117],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"GO:0016020\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1.2119400579352567`*^-8", ",", "0.000015658265548523517`", ",", 
      "True"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "2.6750076470946446`*^-6", ",", "0.0017280549400231404`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0043312\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "4.344497815751073`*^-6", ",", "0.0018605718870358173`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0070062\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "5.760284479987051`*^-6", ",", "0.0018605718870358173`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0010501\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000012714222794490848`", ",", "0.0032853551700964354`", ",", "True"}],
      "}"}]}], ",", 
   RowBox[{"\<\"GO:0035196\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0000895042174695781`", ",", "0.019273241495115816`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0006986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00020754919749131162`", ",", "0.03683335126456907`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0051787\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0004652266830912129`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005783\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0006061341815932293`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005925\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0006232231925990837`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0035198\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0007083971952717376`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000751938927678804`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0009986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000808237870607684`", ",", "0.04351013870104699`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005524\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0009399209877797305`", ",", "0.04784404807503774`", ",", "True"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[292]=",
 CellID->948909842]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pathway Analysis", "Subsection",
 CellID->113475317],

Cell[CellGroupData[{

Cell["\<\
Enrichment of Genomic KEGG Pathways (KEGG: Kyoto Encyclopedia of Genes and \
Genomes)\
\>", "Subsubsection",
 CellID->794541302],

Cell[TextData[{
 "MathIOmica provides a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGAnalysis"]], "paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function using annotations (default is for human data) obtained from KEGG: \
Kyoto Encyclopedia of Genes and Genomes, and by default uses human data \
annotated with KEGG Gene IDs. The ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGAnalysis"]], "paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function performs an over-representation (ORA) analysis, providing a \
\"significance\" cutoff based on a p-value assessed by a hypergeometric \
function. "
}], "Text",
 CellID->1511547068],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["KEGGAnalysis",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/KEGGAnalysis"], "[", 
     StyleBox["data", "TI"], "]"}], Cell["\<\
calculates input data over-representation analysis for KEGG: Kyoto \
Encyclopedia of Genes and Genomes pathways. We note that the function \
utilizes data obtained from the KEGG databases, and by default uses human \
data annotated by \"KEGG Gene ID\".\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1987511513],

Cell["\<\
Performing an over representation analysis for KEGG:Kyoto Encyclopedia of \
Genes and Genomes pathways, using clustered data in MathIOmica.\
\>", "Caption",
 CellID->2145353553],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AdditionalFilter", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
AdditionalFilter provides additional filtering that may be applied to the \
standard output structure to be returned. \
\>", "TableText"]},
   {"AnalysisType", "\"\<Genomic\>\"", Cell[TextData[{
     "AnalysisType provides a selection for the type of analysis to perform. \
\"Genomic\" analysis (default) uses gene identifier based analysis. \
\"Molecular\" analysis uses molecular analysis. Setting the option to ",
     ButtonBox["All",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/All"],
     " carries out all possible analysis types for the input data."
    }], "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BacgroundSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
BackgroundSet provides a list of IDs (e.g. gene accessions) that should be \
considered as the background for the calculation.\
\>", "TableText"]},
   {"FilterSignificant", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "FilterSignificant can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " to filter data based on whether the enrichment analysis is \
statistically significant, or if set to ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " to return all membership computations."
    }], "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. If set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used."
    }], "TableText"]},
   {"GetGeneDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GetGeneDictionary"]], 
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"HypothesisFunction", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Query", "[", "\"\<Results\>\"", "]"}], "[", 
         RowBox[{"BenjaminiHochbergFDR", "[", 
          RowBox[{"#1", ",", " ", 
           RowBox[{"SignificanceLevel", " ", "->", " ", "#2"}]}], "]"}], 
         "]"}], " ", "&"}], ")"}], " ", "&"}], " "}], Cell[TextData[{
     "The HypothesisFunction option allows us to chose a function to \
implement multiple hypothesis testing.  The default is  using the ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["BenjaminiHochbergFDR"]], 
        "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function.\nThe user can use any function f with three inputs, of the \
form f[#1,#2,#3] where the inputs refer to:\n#1 is the p-value list, \n#2 is \
a significance cutoff, \n#3 is the number of GO associations overall being \
tested. \nThe function f must output a list of 3 values: {original p-value, \
adjusted p-value, ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " based on whether this value is considered statistically significant or \
not respectively}."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input.\
\>", "TableText"]},
   {"KEGGAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The KEGGAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGAnalysisAssigner"]], 
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"KEGGDatabase", "\"\<pathway\>\"", Cell["\<\
KEGGDatabase value indicates which KEGG database to use as the target \
database.\
\>", "TableText"]},
   {"KEGGDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "KEGGDictionaryOptions specifies a list of options to be passed to the \
internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGDictionary"]], "paclet:MathIOmica/ref/KEGGDictionary"},
       
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function that provides the KEGG annotations."
    }], "TableText"]},
   {"KEGGDictionaryVariable", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "KEGGDictionaryVariable can provide a KEGG annotation variable. If set \
to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGDictionary"]], "paclet:MathIOmica/ref/KEGGDictionary"},
       
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used internally to automatically generate the default KEGG \
annotation."
    }], "TableText"]},
   {"KEGGMolecular", "\"\<cpd\>\"", Cell["\<\
KEGGMolecular specifies which database to use for molecular analysis. The \
default is the compound database (\"cpd\").\
\>", "TableText"]},
   {"KEGGOrganism", "\"\<hsa\>\"", Cell["\<\
KEGGOrganism indicates which organism (org) to use for \"Genomic\" type of \
analysis. The default is human analysis org=\"hsa\".\
\>", "TableText"]},
   {"MathIOmicaDataDirectory", 
    ButtonBox["ConstantMathIOmicaDataDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaDataDirectory"], 
    Cell[TextData[StyleBox[
    "MathIOmicaDataDirectory option specifies the directory where the default \
MathIOmica package data are stored. By default the option is set to create \
the standard directory if it does not exist already. ", "ExampleText"]], 
     "TableText"]},
   {"MolecularInputID", 
    RowBox[{"{", "\"\<cpd\>\"", "}"}], Cell["\<\
MolecularInputID is a string list to indicate the kind of ID to use for the \
input molecule entries.\
\>", "TableText"]},
   {"MolecularOutputID", "\"\<cpd\>\"", Cell["\<\
MolecularOutputID is a string to indicate the kind of ID to convert input \
molecule entries. The default is \"cpd\" consistently with use of the \"cpd\" \
database as the default molecular analysis.\
\>", "TableText"]},
   {"MolecularSpecies", "\"\<compound\>\"", Cell[
    "MolecularSpecies specifies the kind of molecular input.", "TableText"]},
   {"MultipleList", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "MultipleList option specifies whether the input accessions list \
constituted a multi-omics list input that is annotated so. Each ID ",
     Cell[BoxData["j"], "InlineFormula"],
     "  input must be a list form, i.e. enclosed as ",
     Cell[BoxData[
      RowBox[{"{", 
       SubscriptBox["ID", "j"]}]], "InlineFormula"],
     "}.  If this is the case, MultipleList is set to True and each input \
list ID should have the form {ID,\"Omics Type Label\"}, e.g. \
{\"NFKB1\",\"Protein\"}, and the different omics type are treated as \
different for each ID. If MultipleList is set to False, and labeled IDs are \
provided, labels corresponding to the same ID are treated as equivalent to \
avoid overcounting."
    }], "TableText"]},
   {"MultipleListCorrection", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "MultipleListCorrection is an option whether or not to correct for \
multi-omics analysis. The choices are ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     ButtonBox["Automatic",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Automatic"],
     ", or a custom number. This essentially enlarges the population by this \
factor to account for additional IDs being considered as the result of a \
multi-omics cluster analysis. If the value is set to Automatic the number of \
unique ID labels is used to make the correction."
    }], "TableText"]},
   {"NonUCSC", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
NonUCSC option set to False assumes UCSC browser was used in determining an \
internal GeneDictionary used in ID translations where the KEGG identifiers \
for genes are number strings (e.g. 4790). 
The NonUCSC option can be set to True if standard KEGG accessions are used in \
a user provided GeneDictionary variable, in the form \
OptionValue[KEGGOrganism] <>\":\"<>\"number string\", e.g. \"hsa:4790\"\
\>", "TableText"]},
   {"OutputID", "\"\<KEGG Gene ID\>\"", Cell["\<\
OutputID is a string to indicate the kind of ID to convert input genomic \
analysis entries. The default is \"KEGG Gene ID\" consistently with use of \
the \"pathway\" database as the default genomic analysis.\
\>", "TableText"]},
   {"PathwayLengthFilter", "2", Cell[TextData[{
     "PathwayLengthFilter can be used to set the value for which terms to \
consider in the computation, by excluding KEGG pathways that have fewer items \
compared to the PathwayLengthFilter value. It is used by the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGAnalysisAssigner"]], 
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"pValueCutoff", "0.05", Cell["\<\
pValueCutoff provides a cutoff p-value for adjusted p-values to assess \
statistical significance.\
\>", "TableText"]},
   {"ReportFilter", "1", Cell["\<\
ReportFilter provides a cutoff for membership in pathways in selecting which \
terms/pathways to return. It is used in conjunction with ReportFilterFunction.\
\>", "TableText"]},
   {"ReportFilterFunction", 
    ButtonBox["GreaterEqualThan",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqualThan"], Cell["\<\
ReportFilterFunction specifies what operator form will be used to compare \
against ReportFilter option value in selecting which terms/pathways to \
return. The default is to use GreaterEqualThan \
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"TestFunction", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", " ", "-", 
          RowBox[{"N", " ", 
           RowBox[{"CDF", "[", 
            RowBox[{
             RowBox[{"HypergeometricDistribution", "[", 
              RowBox[{"#1", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
             RowBox[{"#4", " ", "-", " ", "1"}]}], "]"}]}]}]}], "]"}], " ", 
       ")"}], "&"}], " "}], Cell[TextData[{
     "The TestFunction option calculates the p-values for the enrichment of \
each term. It can be a function of four inputs, f[#1,#2,#3,#4] (e.g. the \
default is using a hypergeometric distribution CDF, 1-N[CDF[",
     ButtonBox["HypergeometricDistribution",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/HypergeometricDistribution"],
     "[#1,#2,#3],#4-1]]]. The four inputs refer to:\n#1 is number of draws \
(members in group being tested),\n#2 is number of successes for category in \
population,\n#3 is total number of members in population,\n#4 is number of \
successes (or more) in current group being tested for specific category.\nThe \
output is a p-value (real positive number \[LessEqual] 1)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->706732141],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGAnalysis"]], "paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->315042230],

Cell[TextData[{
 "The input data can be a single list of ",
 Cell[BoxData["n"], "InlineFormula"],
 " genes in the form:"
}], "Text",
 CellID->1844849291],

Cell[TextData[Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["ID", "1"], ",", 
    RowBox[{
     SubscriptBox["ID", 
      RowBox[{"2", ","}]], "..."}], ",", 
    SubscriptBox["ID", "n"]}], "}"}]}]], "InlineFormula"]], "Text",
 CellID->420108894],

Cell[TextData[{
 "The IDs may be provided as ID strings, ",
 Cell[BoxData[
  SubscriptBox["ID", "j"]], "InlineFormula"],
 " (e.g. \"NFKB1\") as strings enclosed in list brackets ",
 Cell[BoxData[
  RowBox[{"{", 
   SubscriptBox["ID", "j"], "}"}]], "InlineFormula"],
 ", (e.g. {\"NFKB1\"}  or as labeled strings in the case of multiple omics \
being considered. Labeled IDs are typically provided as:"
}], "Text",
 CellID->1991433769],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["ID", "1"], ",", 
      RowBox[{"...", " ", "optional", " ", "label", " ", 
       SubscriptBox["items", "1"]}], ",", 
      SubscriptBox["label", "1"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["ID", "2"], ",", 
      RowBox[{"...", " ", "optional", " ", "label", " ", 
       SubscriptBox["items", "2"]}], ",", "...", ",", 
      SubscriptBox["label", "2"]}], "}"}], ",", 
    RowBox[{"...", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "n"], ",", "...", ",", " ", 
       RowBox[{"optional", " ", "label", " ", 
        SubscriptBox["items", "n"]}], ",", "...", ",", 
       SubscriptBox["label", "n"]}], "}"}]}]}], "}"}], "."}]]]], "Text",
 CellID->446395410],

Cell[TextData[{
 "The ID labels are typically a string, e.g. typically \"RNA\" or \
\"Protein\", (e.g. {\"NFKB1\",\"Protein\"}) or for a molecular ID obtained \
from metabolomics experiments, can also contain other optional label items \
such as mass and retention time ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
   "\"\<cpd:C00449\>\"", ",", "276.133", ",", "11.0041", ",", 
    "\"\<Meta\>\""}], "}"}]], "InlineFormula"],
 ". The main label must always be the last element in the list."
}], "Text",
 CellID->1407276899],

Cell["\<\
The output has the following structures: for a single list input:\
\>", "Text",
 CellID->1865437082],

Cell[TextData[Cell[BoxData[
 RowBox[{"listOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "1"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "1"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "1"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "1"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "1"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "2"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "2"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "2"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "1"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "2"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}], ",", " ", "...", ",", 
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "n"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "n"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "n"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "n"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "n"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], " ", "\[IndentingNewLine]", 
   "|>"}]}]], "InlineFormula"]], "Text",
 CellID->1474295269],

Cell[TextData[{
 "The input data can also be an association of multiple ",
 Cell[BoxData["L"], "InlineFormula"],
 " groups to be tested:"
}], "Text",
 CellID->814266997],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{
     RowBox[{
      SubscriptBox["Group", "1"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "11"], ",", 
        RowBox[{
         SubscriptBox["ID", 
          RowBox[{"12", ","}]], "..."}], ",", 
        SubscriptBox["ID", 
         RowBox[{"1", 
          SubscriptBox["n", "1"]}]]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Group", "2"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "21"], ",", 
        SubscriptBox["ID", "22"], ",", "...", ",", 
        SubscriptBox[
         SubscriptBox["ID", 
          RowBox[{"2", "n"}]], "2"]}], "}"}]}], ",", "...", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Group", "L"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "11"], ",", 
        RowBox[{
         SubscriptBox["ID", 
          RowBox[{"12", ","}]], "..."}], ",", 
        SubscriptBox["ID", 
         RowBox[{"1", 
          SubscriptBox["n", "L"]}]]}], "}"}]}]}], "|>"}], "."}]}]], "Text",
 CellID->1619619895],

Cell[TextData[{
 "In this case the output for each group has the ",
 Cell[BoxData["listOutput"], "InlineFormula"],
 " format described above:"
}], "Text",
 CellID->1596349540],

Cell[BoxData[
 RowBox[{"associationOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     SubscriptBox["Group", "1"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "1"]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Group", "2"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "2"]}], ",", "...", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Group", "L"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "L"]}]}], "|>"}]}]], "Text",
 CellID->1333516809],

Cell[TextData[{
 Cell[BoxData["KEGGAnalysis"], "InlineFormula"],
 " can also take as input the output of clustering of time series \
classification data, e.g. ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " or ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TimeSeriesSingleClusters"]], 
    "paclet:MathIOmica/ref/TimeSeriesSingleClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " association of associations. The groups for each class will then have keys \
labeled ",
 Cell[BoxData["\"\<GroupAssociations\>\""], "InlineFormula"],
 ", that include the labels used in the clustering. The labels must \
correspond to protein or gene accessions/IDs. For each class and group the \
corresponding KEGGAnalysis enrichment is computed and returned. "
}], "Text",
 CellID->1277668771],

Cell[TextData[{
 "There are two types of analyses that are carried out, which can be set by \
the AnalysisType option value. The default \"Genomic\" analysis is based on \
input gene symbols. The \"Molecular\" analysis is based on molecular input \
accessions (e.g. compounds \"cpd\" databases). For multi-omic input the user \
may select to do ",
 ButtonBox["All",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/All"],
 " analyses. In this case an additional outer association is created with \
labels indicating each of \"Genomic\" or \"Molecular\" analysis carried out."
}], "Text",
 CellID->1090047844],

Cell["\<\
The enrichment analysis is an over-representation calculation, using a \
hypergeometric test. For a given a given group (e.g. members of a cluster \
after classification), we try to identify which KEGG pathway terms are \
over-represented by membership of IDs to that cluster. The KEGGAnalysis \
function allows us to select the background, and hence address selection \
bias. Additionally a Benjamini-Hochberg procedure false discovery rate (FDR) \
may be calculated for each representation.\
\>", "Text",
 CellID->251121551],

Cell["\<\
We carry out our KEGGAnalysis for all the classes and groups/subgroups. We \
only report terms for which there are at least 2 members, and additionally \
correct for multiple omics (2 sets of KEGG terms, one each for proteomics and \
transcriptomics).  Please note that this is a time consuming computation.\
\>", "MathCaption",
 CellID->1339044942],

Cell[BoxData[
 RowBox[{
  RowBox[{"keggAnalysisCombined", "=", 
   RowBox[{"KEGGAnalysis", "[", 
    RowBox[{"combinedClusters", ",", 
     RowBox[{"ReportFilter", "\[Rule]", " ", "2"}], ",", 
     RowBox[{"MultipleList", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"MultipleListCorrection", "\[Rule]", "2"}], " ", ",", 
     RowBox[{"AnalysisType", "\[Rule]", " ", "All"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[293]:=",
 CellID->1847203281],

Cell["\<\
We see that both \"Molecular\" and \"Genomic\" analysis is performed:\
\>", "MathCaption",
 CellID->1921942735],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "keggAnalysisCombined"}]], "Input",
 CellLabel->"In[294]:=",
 CellID->1790012618],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Molecular\"\>", ",", "\<\"Genomic\"\>"}], "}"}]], "Output",
 CellLabel->"Out[294]=",
 CellID->921808109]
}, Open  ]],

Cell["We can extract both Genomic and molecular analysis:", "MathCaption",
 CellID->1116859782],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]], "Input",
 CellLabel->"In[295]:=",
 CellID->1866845763],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
               RowBox[{"\[LeftAssociation]", 
                RowBox[{
                 RowBox[{"\<\"path:hsa05016\"\>", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "5.341026271859465`*^-7", ",", "0.00009167154489243451`", 
                    ",", "True"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"66", ",", "386", ",", "15746", ",", "11"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"Huntington disease - Homo sapiens \
(human)\"\>", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\<\"DNAL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                    "}"}], ",", 
                    TemplateBox[{"9"},
                    "OutputSizeLimit`Skeleton"], ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}],
                     "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
                 TemplateBox[{"9"},
                  "OutputSizeLimit`Skeleton"], ",", 
                 RowBox[{"\<\"path:hsa00640\"\>", "\[Rule]", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}],
               ",", 
              TemplateBox[{"12"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}], ",", 
           
           TemplateBox[{"8"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 295, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 295, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 295, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[295], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[295]=",
 CellID->881858505]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keggAnalysisCombined", "[", "\"\<Molecular\>\"", "]"}]], "Input",
 CellLabel->"In[297]:=",
 CellID->1218496248],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S4\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S5\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S6\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S7\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S8\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S9\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S10\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S11\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S12\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S13\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S14\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"path:map01100\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.024813798850886176`", ",", "0.04135633141814362`", ",", 
             "True"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "1654", ",", "5841", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Metabolic pathways\"\>", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C06124\"\>", ",", "379.2488`", ",", 
                  "12.687057`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C20199\"\>", ",", "238.1201`", ",", 
                  "9.702206`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C19614\"\>", ",", "270.2196`", ",", 
                  "12.719786`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C05446\"\>", ",", "436.355`", ",", 
                  "14.301529`", ",", "\<\"Meta\"\>"}], "}"}], "}"}]}], 
              "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"path:map04976\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.0008268610310414034`", ",", "0.004961166186248421`", ",", 
             "True"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "98", ",", "5841", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Bile secretion\"\>", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"cpd:C04555\"\>", ",", "368.1654`", ",", 
                   "12.082582`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"cpd:C04555\"\>", ",", "368.1659`", ",", 
                   "12.371832`", ",", "\<\"Meta\"\>"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C01921\"\>", ",", "465.3086`", ",", 
                  "11.805584`", ",", "\<\"Meta\"\>"}], "}"}], "}"}]}], 
              "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G5S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G5S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[297]=",
 CellID->1408890497]
}, Open  ]],

Cell["\<\
Let us extract the names of the pathways found for the \"SpikeMin\" data:\
\>", "MathCaption",
 CellID->1431426074],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<SpikeMin\>\"", ",", "All", ",", "All", ",", "3", ",", "1"}], 
   "]"}], "@", 
  RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}]], "Input",
 CellLabel->"In[298]:=",
 CellID->1866212024],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa03030\"\>", 
       "\[Rule]", "\<\"DNA replication - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00280\"\>", 
       "\[Rule]", "\<\"Valine, leucine and isoleucine degradation - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03010\"\>", 
       "\[Rule]", "\<\"Ribosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03430\"\>", 
       "\[Rule]", "\<\"Mismatch repair - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01212\"\>", 
       "\[Rule]", "\<\"Fatty acid metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04640\"\>", 
       "\[Rule]", "\<\"Hematopoietic cell lineage - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05340\"\>", 
       "\[Rule]", "\<\"Primary immunodeficiency - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa00471\"\>", 
       "\[Rule]", "\<\"D-Glutamine and D-glutamate metabolism - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa00250\"\>", 
       "\[Rule]", "\<\"Alanine, aspartate and glutamate metabolism - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00533\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - keratan sulfate - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00220\"\>", 
       "\[Rule]", "\<\"Arginine biosynthesis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04964\"\>", 
       "\[Rule]", "\<\"Proximal tubule bicarbonate reclamation - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04142\"\>", 
       "\[Rule]", "\<\"Lysosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05152\"\>", 
       "\[Rule]", "\<\"Tuberculosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04145\"\>", 
       "\[Rule]", "\<\"Phagosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05140\"\>", 
       "\[Rule]", "\<\"Leishmaniasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04210\"\>", 
       "\[Rule]", "\<\"Apoptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05142\"\>", 
       "\[Rule]", "\<\"Chagas disease (American trypanosomiasis) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05134\"\>", 
       "\[Rule]", "\<\"Legionellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05167\"\>", 
       "\[Rule]", "\<\"Kaposi sarcoma-associated herpesvirus infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04380\"\>", 
       "\[Rule]", "\<\"Osteoclast differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05133\"\>", 
       "\[Rule]", "\<\"Pertussis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04722\"\>", 
       "\[Rule]", "\<\"Neurotrophin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04650\"\>", 
       "\[Rule]", "\<\"Natural killer cell mediated cytotoxicity - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05323\"\>", 
       "\[Rule]", "\<\"Rheumatoid arthritis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04620\"\>", 
       "\[Rule]", "\<\"Toll-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05169\"\>", 
       "\[Rule]", "\<\"Epstein-Barr virus infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01200\"\>", 
       "\[Rule]", "\<\"Carbon metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04062\"\>", 
       "\[Rule]", "\<\"Chemokine signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04640\"\>", 
       "\[Rule]", "\<\"Hematopoietic cell lineage - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05164\"\>", 
       "\[Rule]", "\<\"Influenza A - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05150\"\>", 
       "\[Rule]", "\<\"Staphylococcus aureus infection - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04668\"\>", 
       "\[Rule]", "\<\"TNF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04670\"\>", 
       "\[Rule]", "\<\"Leukocyte transendothelial migration - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05120\"\>", 
       "\[Rule]", "\<\"Epithelial cell signaling in Helicobacter pylori \
infection - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04010\"\>", 
       "\[Rule]", "\<\"MAPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00531\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan degradation - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa05166\"\>", 
       "\[Rule]", "\<\"Human T-cell leukemia virus 1 infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05200\"\>", 
       "\[Rule]", "\<\"Pathways in cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa05221\"\>", 
       "\[Rule]", "\<\"Acute myeloid leukemia - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04064\"\>", 
       "\[Rule]", "\<\"NF-kappa B signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04920\"\>", 
       "\[Rule]", "\<\"Adipocytokine signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05110\"\>", 
       "\[Rule]", "\<\"Vibrio cholerae infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05132\"\>", 
       "\[Rule]", "\<\"Salmonella infection - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04931\"\>", 
       "\[Rule]", "\<\"Insulin resistance - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa00051\"\>", 
       "\[Rule]", "\<\"Fructose and mannose metabolism - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04130\"\>", 
       "\[Rule]", "\<\"SNARE interactions in vesicular transport - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00071\"\>", 
       "\[Rule]", "\<\"Fatty acid degradation - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05145\"\>", 
       "\[Rule]", "\<\"Toxoplasmosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04621\"\>", 
       "\[Rule]", "\<\"NOD-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04140\"\>", 
       "\[Rule]", "\<\"Autophagy - animal - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04664\"\>", 
       "\[Rule]", "\<\"Fc epsilon RI signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04625\"\>", 
       "\[Rule]", "\<\"C-type lectin receptor signaling pathway - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05163\"\>", 
       "\[Rule]", "\<\"Human cytomegalovirus infection - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05170\"\>", 
       "\[Rule]", "\<\"Human immunodeficiency virus 1 infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04330\"\>", 
       "\[Rule]", "\<\"Notch signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04662\"\>", 
       "\[Rule]", "\<\"B cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00532\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - chondroitin sulfate / \
dermatan sulfate - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05144\"\>", 
       "\[Rule]", "\<\"Malaria - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05146\"\>", 
       "\[Rule]", "\<\"Amoebiasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04144\"\>", 
       "\[Rule]", "\<\"Endocytosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05135\"\>", 
       "\[Rule]", "\<\"Yersinia infection - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04115\"\>", 
       "\[Rule]", "\<\"p53 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00380\"\>", 
       "\[Rule]", "\<\"Tryptophan metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05235\"\>", 
       "\[Rule]", "\<\"PD-L1 expression and PD-1 checkpoint pathway in cancer \
- Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05321\"\>", 
       "\[Rule]", "\<\"Inflammatory bowel disease (IBD) - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05160\"\>", 
       "\[Rule]", "\<\"Hepatitis C - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00410\"\>", 
       "\[Rule]", "\<\"beta-Alanine metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04926\"\>", 
       "\[Rule]", "\<\"Relaxin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00010\"\>", 
       "\[Rule]", "\<\"Glycolysis / Gluconeogenesis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04071\"\>", 
       "\[Rule]", "\<\"Sphingolipid signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04666\"\>", 
       "\[Rule]", "\<\"Fc gamma R-mediated phagocytosis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04659\"\>", 
       "\[Rule]", "\<\"Th17 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04217\"\>", 
       "\[Rule]", "\<\"Necroptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00450\"\>", 
       "\[Rule]", "\<\"Selenocompound metabolism - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04066\"\>", 
       "\[Rule]", "\<\"HIF-1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa03010\"\>", 
       "\[Rule]", "\<\"Ribosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05235\"\>", 
       "\[Rule]", "\<\"PD-L1 expression and PD-1 checkpoint pathway in cancer \
- Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04660\"\>", 
       "\[Rule]", "\<\"T cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04659\"\>", 
       "\[Rule]", "\<\"Th17 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04152\"\>", 
       "\[Rule]", "\<\"AMPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05170\"\>", 
       "\[Rule]", "\<\"Human immunodeficiency virus 1 infection - Homo \
sapiens (human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04120\"\>", 
       "\[Rule]", "\<\"Ubiquitin mediated proteolysis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05235\"\>", 
       "\[Rule]", "\<\"PD-L1 expression and PD-1 checkpoint pathway in cancer \
- Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04662\"\>", 
       "\[Rule]", "\<\"B cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05163\"\>", 
       "\[Rule]", "\<\"Human cytomegalovirus infection - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04660\"\>", 
       "\[Rule]", "\<\"T cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05220\"\>", 
       "\[Rule]", "\<\"Chronic myeloid leukemia - Homo sapiens (human)\"\>"}],
       ",", 
      RowBox[{"\<\"path:hsa05135\"\>", 
       "\[Rule]", "\<\"Yersinia infection - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04722\"\>", 
       "\[Rule]", "\<\"Neurotrophin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05170\"\>", 
       "\[Rule]", "\<\"Human immunodeficiency virus 1 infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04810\"\>", 
       "\[Rule]", "\<\"Regulation of actin cytoskeleton - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04910\"\>", 
       "\[Rule]", "\<\"Insulin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04625\"\>", 
       "\[Rule]", "\<\"C-type lectin receptor signaling pathway - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04012\"\>", 
       "\[Rule]", "\<\"ErbB signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04062\"\>", 
       "\[Rule]", "\<\"Chemokine signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05205\"\>", 
       "\[Rule]", "\<\"Proteoglycans in cancer - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05167\"\>", 
       "\[Rule]", "\<\"Kaposi sarcoma-associated herpesvirus infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04218\"\>", 
       "\[Rule]", "\<\"Cellular senescence - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04144\"\>", 
       "\[Rule]", "\<\"Endocytosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05166\"\>", 
       "\[Rule]", "\<\"Human T-cell leukemia virus 1 infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01521\"\>", 
       "\[Rule]", "\<\"EGFR tyrosine kinase inhibitor resistance - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05016\"\>", 
       "\[Rule]", "\<\"Huntington disease - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa01522\"\>", 
       "\[Rule]", "\<\"Endocrine resistance - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04380\"\>", 
       "\[Rule]", "\<\"Osteoclast differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01200\"\>", 
       "\[Rule]", "\<\"Carbon metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04919\"\>", 
       "\[Rule]", "\<\"Thyroid hormone signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04650\"\>", 
       "\[Rule]", "\<\"Natural killer cell mediated cytotoxicity - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04010\"\>", 
       "\[Rule]", "\<\"MAPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04620\"\>", 
       "\[Rule]", "\<\"Toll-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04070\"\>", 
       "\[Rule]", "\<\"Phosphatidylinositol signaling system - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04510\"\>", 
       "\[Rule]", "\<\"Focal adhesion - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04210\"\>", 
       "\[Rule]", "\<\"Apoptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04211\"\>", 
       "\[Rule]", "\<\"Longevity regulating pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04071\"\>", 
       "\[Rule]", "\<\"Sphingolipid signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04664\"\>", 
       "\[Rule]", "\<\"Fc epsilon RI signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00562\"\>", 
       "\[Rule]", "\<\"Inositol phosphate metabolism - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa05211\"\>", 
       "\[Rule]", "\<\"Renal cell carcinoma - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05212\"\>", 
       "\[Rule]", "\<\"Pancreatic cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05214\"\>", 
       "\[Rule]", "\<\"Glioma - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04370\"\>", 
       "\[Rule]", "\<\"VEGF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04912\"\>", 
       "\[Rule]", "\<\"GnRH signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04216\"\>", 
       "\[Rule]", "\<\"Ferroptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04666\"\>", 
       "\[Rule]", "\<\"Fc gamma R-mediated phagocytosis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05221\"\>", 
       "\[Rule]", "\<\"Acute myeloid leukemia - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04611\"\>", 
       "\[Rule]", "\<\"Platelet activation - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04064\"\>", 
       "\[Rule]", "\<\"NF-kappa B signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04520\"\>", 
       "\[Rule]", "\<\"Adherens junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04213\"\>", 
       "\[Rule]", "\<\"Longevity regulating pathway - multiple species - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05215\"\>", 
       "\[Rule]", "\<\"Prostate cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04066\"\>", 
       "\[Rule]", "\<\"HIF-1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04150\"\>", 
       "\[Rule]", "\<\"mTOR signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05213\"\>", 
       "\[Rule]", "\<\"Endometrial cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa03040\"\>", 
       "\[Rule]", "\<\"Spliceosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05120\"\>", 
       "\[Rule]", "\<\"Epithelial cell signaling in Helicobacter pylori \
infection - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04371\"\>", 
       "\[Rule]", "\<\"Apelin signaling pathway - Homo sapiens (human)\"\>"}],
       ",", 
      RowBox[{"\<\"path:hsa04962\"\>", 
       "\[Rule]", "\<\"Vasopressin-regulated water reabsorption - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04933\"\>", 
       "\[Rule]", "\<\"AGE-RAGE signaling pathway in diabetic complications - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00630\"\>", 
       "\[Rule]", "\<\"Glyoxylate and dicarboxylate metabolism - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05162\"\>", 
       "\[Rule]", "\<\"Measles - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04068\"\>", 
       "\[Rule]", "\<\"FoxO signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05223\"\>", 
       "\[Rule]", "\<\"Non-small cell lung cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04720\"\>", 
       "\[Rule]", "\<\"Long-term potentiation - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05169\"\>", 
       "\[Rule]", "\<\"Epstein-Barr virus infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04114\"\>", 
       "\[Rule]", "\<\"Oocyte meiosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04140\"\>", 
       "\[Rule]", "\<\"Autophagy - animal - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04072\"\>", 
       "\[Rule]", "\<\"Phospholipase D signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05131\"\>", 
       "\[Rule]", "\<\"Shigellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05200\"\>", 
       "\[Rule]", "\<\"Pathways in cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04142\"\>", 
       "\[Rule]", "\<\"Lysosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04926\"\>", 
       "\[Rule]", "\<\"Relaxin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05230\"\>", 
       "\[Rule]", "\<\"Central carbon metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04110\"\>", 
       "\[Rule]", "\<\"Cell cycle - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04668\"\>", 
       "\[Rule]", "\<\"TNF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04670\"\>", 
       "\[Rule]", "\<\"Leukocyte transendothelial migration - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04917\"\>", 
       "\[Rule]", "\<\"Prolactin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04658\"\>", 
       "\[Rule]", "\<\"Th1 and Th2 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05010\"\>", 
       "\[Rule]", "\<\"Alzheimer disease - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04914\"\>", 
       "\[Rule]", "\<\"Progesterone-mediated oocyte maturation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04725\"\>", 
       "\[Rule]", "\<\"Cholinergic synapse - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04922\"\>", 
       "\[Rule]", "\<\"Glucagon signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04730\"\>", 
       "\[Rule]", "\<\"Long-term depression - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05152\"\>", 
       "\[Rule]", "\<\"Tuberculosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05110\"\>", 
       "\[Rule]", "\<\"Vibrio cholerae infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05231\"\>", 
       "\[Rule]", "\<\"Choline metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04714\"\>", 
       "\[Rule]", "\<\"Thermogenesis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05140\"\>", 
       "\[Rule]", "\<\"Leishmaniasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05225\"\>", 
       "\[Rule]", "\<\"Hepatocellular carcinoma - Homo sapiens (human)\"\>"}],
       ",", 
      RowBox[{"\<\"path:hsa04659\"\>", 
       "\[Rule]", "\<\"Th17 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04623\"\>", 
       "\[Rule]", "\<\"Cytosolic DNA-sensing pathway - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa04540\"\>", 
       "\[Rule]", "\<\"Gap junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05020\"\>", 
       "\[Rule]", "\<\"Prion diseases - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00020\"\>", 
       "\[Rule]", "\<\"Citrate cycle (TCA cycle) - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03020\"\>", 
       "\[Rule]", "\<\"RNA polymerase - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00280\"\>", 
       "\[Rule]", "\<\"Valine, leucine and isoleucine degradation - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04921\"\>", 
       "\[Rule]", "\<\"Oxytocin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05160\"\>", 
       "\[Rule]", "\<\"Hepatitis C - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04750\"\>", 
       "\[Rule]", "\<\"Inflammatory mediator regulation of TRP channels - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05100\"\>", 
       "\[Rule]", "\<\"Bacterial invasion of epithelial cells - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04350\"\>", 
       "\[Rule]", "\<\"TGF-beta signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05165\"\>", 
       "\[Rule]", "\<\"Human papillomavirus infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03060\"\>", 
       "\[Rule]", "\<\"Protein export - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00640\"\>", 
       "\[Rule]", "\<\"Propanoate metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04146\"\>", 
       "\[Rule]", "\<\"Peroxisome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04360\"\>", 
       "\[Rule]", "\<\"Axon guidance - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04915\"\>", 
       "\[Rule]", "\<\"Estrogen signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05164\"\>", 
       "\[Rule]", "\<\"Influenza A - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00030\"\>", 
       "\[Rule]", "\<\"Pentose phosphate pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04015\"\>", 
       "\[Rule]", "\<\"Rap1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05130\"\>", 
       "\[Rule]", "\<\"Pathogenic Escherichia coli infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04960\"\>", 
       "\[Rule]", "\<\"Aldosterone-regulated sodium reabsorption - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00010\"\>", 
       "\[Rule]", "\<\"Glycolysis / Gluconeogenesis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05142\"\>", 
       "\[Rule]", "\<\"Chagas disease (American trypanosomiasis) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04961\"\>", 
       "\[Rule]", "\<\"Endocrine and other factor-regulated calcium \
reabsorption - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05224\"\>", 
       "\[Rule]", "\<\"Breast cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04622\"\>", 
       "\[Rule]", "\<\"RIG-I-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03410\"\>", 
       "\[Rule]", "\<\"Base excision repair - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00620\"\>", 
       "\[Rule]", "\<\"Pyruvate metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04014\"\>", 
       "\[Rule]", "\<\"Ras signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04932\"\>", 
       "\[Rule]", "\<\"Non-alcoholic fatty liver disease (NAFLD) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05012\"\>", 
       "\[Rule]", "\<\"Parkinson disease - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04928\"\>", 
       "\[Rule]", "\<\"Parathyroid hormone synthesis, secretion and action - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00310\"\>", 
       "\[Rule]", "\<\"Lysine degradation - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04931\"\>", 
       "\[Rule]", "\<\"Insulin resistance - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04022\"\>", 
       "\[Rule]", "\<\"cGMP-PKG signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00230\"\>", 
       "\[Rule]", "\<\"Purine metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05418\"\>", 
       "\[Rule]", "\<\"Fluid shear stress and atherosclerosis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00534\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - heparan sulfate / \
heparin - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04217\"\>", 
       "\[Rule]", "\<\"Necroptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01230\"\>", 
       "\[Rule]", "\<\"Biosynthesis of amino acids - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00500\"\>", 
       "\[Rule]", "\<\"Starch and sucrose metabolism - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa03030\"\>", 
       "\[Rule]", "\<\"DNA replication - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04530\"\>", 
       "\[Rule]", "\<\"Tight junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05203\"\>", 
       "\[Rule]", "\<\"Viral carcinogenesis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04920\"\>", 
       "\[Rule]", "\<\"Adipocytokine signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00052\"\>", 
       "\[Rule]", "\<\"Galactose metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa01523\"\>", 
       "\[Rule]", "\<\"Antifolate resistance - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04152\"\>", 
       "\[Rule]", "\<\"AMPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05145\"\>", 
       "\[Rule]", "\<\"Toxoplasmosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04024\"\>", 
       "\[Rule]", "\<\"cAMP signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05218\"\>", 
       "\[Rule]", "\<\"Melanoma - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa02010\"\>", 
       "\[Rule]", "\<\"ABC transporters - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04630\"\>", 
       "\[Rule]", "\<\"JAK-STAT signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04621\"\>", 
       "\[Rule]", "\<\"NOD-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04930\"\>", 
       "\[Rule]", "\<\"Type II diabetes mellitus - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04510\"\>", 
       "\[Rule]", "\<\"Focal adhesion - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04622\"\>", 
       "\[Rule]", "\<\"RIG-I-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05135\"\>", 
       "\[Rule]", "\<\"Yersinia infection - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04110\"\>", 
       "\[Rule]", "\<\"Cell cycle - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05231\"\>", 
       "\[Rule]", "\<\"Choline metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04114\"\>", 
       "\[Rule]", "\<\"Oocyte meiosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04810\"\>", 
       "\[Rule]", "\<\"Regulation of actin cytoskeleton - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04120\"\>", 
       "\[Rule]", "\<\"Ubiquitin mediated proteolysis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05131\"\>", 
       "\[Rule]", "\<\"Shigellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04657\"\>", 
       "\[Rule]", "\<\"IL-17 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00020\"\>", 
       "\[Rule]", "\<\"Citrate cycle (TCA cycle) - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04390\"\>", 
       "\[Rule]", "\<\"Hippo signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04070\"\>", 
       "\[Rule]", "\<\"Phosphatidylinositol signaling system - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[298]=",
 CellID->1982568702]
}, Closed]],

Cell[TextData[{
 "The results from a MathIOmica time series clustering enrichment analysis \
can be exported to spreadsheets using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["EnrichmentReportExport"]], 
    "paclet:MathIOmica/ref/EnrichmentReportExport"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->488726451],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["EnrichmentReportExport",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnrichmentReportExport"], "[", 
     StyleBox["results", "TI"], "]"}], Cell[TextData[{
     "exports results from enrichment analyses to Excel spreadsheets, \
particularly suited for exporting multi-omics ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TimeSeriesClusters"]], 
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " enrichment analysis results (via ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGAnalysis"]], "paclet:MathIOmica/ref/KEGGAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GOAnalysis"]], "paclet:MathIOmica/ref/GOAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "). ",
     "An excel spreadsheet is generated for each Class, named after the Class \
key, with sheets created for and named after each Group in that Class \
containing the enrichment output for that Group."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->2038566199],

Cell["Exporting the enrichment analysis results to spreadsheets.", "Caption",
 CellID->1228002355],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AppendString", "\"\<\>\"", Cell[TextData[{
     "String that will be appended to the file name after the class name. If \
a string is not provided the current ",
     ButtonBox["Date",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Date"],
     " is appended."
    }], "TableText"]},
   {"OutputDirectory", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     Cell[BoxData["OutputDirectory"], "InlineFormula"],
     " specifies the location of a directory to output the Excel spreadsheets \
generated by the function. If it is set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the ",
     Cell[BoxData[
      RowBox[{"NotebookDirectory", "[", "]"}]], "InlineFormula"],
     " will be used as a default output directory."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1076877467],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["EnrichmentReportExport"]], 
    "paclet:MathIOmica/ref/EnrichmentReportExport"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->87410953],

Cell[TextData[{
 "We can export the reports, for example to the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$UserDocumentDirectory"]], 
    "paclet:MathIOmica/ref/$UserDocumentDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1660367008],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnrichmentReportExport", "[", 
   RowBox[{
    RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}], ",", 
    RowBox[{
    "OutputDirectory", " ", "\[Rule]", " ", "$UserDocumentsDirectory"}], ",", 
    
    RowBox[{
    "AppendString", "\[Rule]", " ", "\"\<KEGGAnalysisCombined\>\""}]}], "]"}],
   ";"}]], "Input",
 CellLabel->"In[205]:=",
 CellID->1385794338],

Cell[TextData[{
 "We can export the GO analysis results as well, for example to the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$UserDocumentDirectory"]], 
    "paclet:MathIOmica/ref/$UserDocumentDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1754716454],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnrichmentReportExport", "[", 
   RowBox[{"goAnalysisCombined", ",", 
    RowBox[{
    "OutputDirectory", " ", "\[Rule]", " ", "$UserDocumentsDirectory"}], ",", 
    
    RowBox[{"AppendString", "\[Rule]", " ", "\"\<GOAnalysisCombined\>\""}]}], 
   "]"}], ";"}]], "Input",
 CellLabel->"In[206]:=",
 CellID->126518127]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization of Pathways from KEGG", "Subsubsection",
 CellID->36506248],

Cell[TextData[{
 "MathIOmica allows visualization and coloring of KEGG pathways using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGPathwayVisual"]], 
    "paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1912770077],

Cell[BoxData[GridBox[{
   {
    RowBox[{"KEGGPathwayVisual", "[", 
     StyleBox["pathway", "TI"], "]"}], Cell[TextData[{
     "generates a visual representation for a KEGG: Kyoto Encyclopedia of \
Genes and Genomes ",
     Cell[BoxData[
      StyleBox["pathway", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->672020044],

Cell["Visualizing KEGG pathways.", "Caption",
 CellID->1024379935],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AnalysisType", "\"\<Genomic\>\"", Cell["\<\
AnalysisType provides a selection for the type of analysis to perform. \
\"Genomic\" analysis (default) uses gene identifier based pathway \
visualization. \"Molecular\" analysis uses molecular analysis map \
visualization.\
\>", "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BlendColors", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}]}], "}"}], Cell["\<\
BlendColors provides a list of colors to be used in coloring intensities \
provided and is used by the IntensityFunction as its first argument. The \
colors must be provided as RGBColor[] specification.\
\>", "TableText"]},
   {"ColorSelection", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<RNA\>\"", " ", "\[Rule]", "  ", "\"\<bg\>\""}], ",", " ", 
      RowBox[{"\"\<Protein\>\"", " ", "\[Rule]", "  ", "\"\<fg\>\""}]}], 
     "|>"}], Cell["\<\
ColorSelection assigns foreground and background colors in the KEGG pathway \
through an association. The Keys point to labels for multi-omics data, and \
the values \"bg\" and \"fg\" can point to background and foreground \
representations respectively for each key.\
\>", "TableText"]},
   {"DefaultColors", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<fg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"\"\<bg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "]"}]}]}], "}"}], 
    Cell["\<\
DefaultColors provides a list of rules for setting the colors to be used as \
default values for the foreground \"fg\" and background \"bg\" respectively \
in the generated pathways. The colors must be provided as RGBColor[] \
specification.\
\>", "TableText"]},
   {"ExportMovieOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<VideoEncoding\>\"", "\[Rule]", "\"\<MPEG-4 Video\>\""}], 
      ",", 
      RowBox[{"\"\<FrameRate\>\"", "\[Rule]", "1"}]}], "}"}], Cell[TextData[{
     "ExportMovieOptions provides options for the ",
     ButtonBox["Export",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Export"],
     " function used internally to export the pathway list when Intensities \
have been provided for a time series representation of data."
    }], "TableText"]},
   {"FileExtend", "\"\<.mov\>\"", Cell["\<\
FileExtend provides a string to be appended to the file name if the \
ResultsFormat is set to \"Movie\".\
\>", "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. The gene dictionary is used to convert MemberSet \
identities provided to corresponding KEGG identifiers. If  GeneDictionary is \
set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["ConstantGeneDictionary"]], 
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be created or augmented through the use of ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GetGeneDictionary"]], 
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]},
   {"GetGeneDicitonaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GetGeneDictionary"]], 
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input \
when identifiers are provided through setting the MemberSet values.\
\>", "TableText"]},
   {"Intensities", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "Intensities may be used to provide a set of intensities that will be \
used for coloring components of the pathway. The intensities are provided as \
an association for each ID as single values, or as a list of values in the \
case of series data:\n",
     Cell[BoxData[
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{
          SubscriptBox["ID", "1"], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "1"]}], "}"}]}], ",", 
         RowBox[{
          SubscriptBox["ID", 
           RowBox[{"2", " "}]], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "2"]}], "}"}]}], ",", "...", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          SubscriptBox["ID", "N"], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "N"]}], "}"}]}]}], "|>"}], "."}]], 
      "InlineFormula"],
     "\nIntensities must be scaled from -1 to 1, or selected such that the \
IntensityFunction can convert them to a number between 0 to 1."
    }], "TableText"]},
   {"IntensityFunction", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Blend", "[", 
       RowBox[{"#1", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#2", "+", "1"}], ")"}], "/", "2"}]}], "]"}], "&"}], ")"}], 
    Cell["\<\
IntensityFunction is a function of two arguments that allows customization of \
the coloring for the intensities. The IntensityFunction value can be any \
function which outputs a color, I(#1,#2), (*where#1 is the BlendColors option \
value, and #2 is an intensity vector, that has values typically ranging from \
[-1,1].\
\>", "TableText"]},
   {"KEGGAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The KEGGAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGAnalysisAssigner"]], 
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"KEGGDatabase", "\"\<pathway\>\"", Cell["\<\
KEGGDatabase value indicates which KEGG database to use as the target \
database.\
\>", "TableText"]},
   {"KEGGMolecular", "\"\<cpd\>\"", Cell["\<\
KEGGMolecular specifies which database to use for molecular analysis. The \
default is the compound database (\"cpd\").\
\>", "TableText"]},
   {"KEGGOrganism", "\"\<hsa\>\"", Cell["\<\
KEGGOrganism indicates which organism (org) to use for \"Genomic\" type of \
analysis. The default is human analysis org=\"hsa\".\
\>", "TableText"]},
   {"MathIOmicaDataDirectory", 
    ButtonBox["ConstantMathIOmicaDataDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaDataDirectory"], 
    Cell[TextData[StyleBox[
    "MathIOmicaDataDirectory option specifies the directory where the default \
MathIOmica package data are stored. By default the option is set to create \
the standard directory if it does not exist already. ", "ExampleText"]], 
     "TableText"]},
   {"MemberSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell[TextData[{
     "MemberSet selects which members of the pathway are to be considered. \
The choices are:\nAll: return the pathway only.\n{list of identifiers}: a \
list of identifiers that will be highlighted. If ORA is set to True the list \
must be the output from an over representation analysis, and the identifiers \
will be selected from the last list, second sublist.\nOnly IDs that are found \
to match in the pathway are colored.\nAn internal gene dictionary (see ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["GetGeneDictionary"]], 
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ") is used to convert IDs to KEGG IDs."
    }], "TableText"]},
   {"MissingValueColor", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0.4", ",", " ", "0.4", ",", " ", "0.4"}], "]"}], Cell["\<\
MissingValueColor provides a color to be used when Intensities are provided \
to represent values that are tagged as Missing[]. The color must be provided \
as RGBColor[] specification.\
\>", "TableText"]},
   {"MolecularInputID", 
    RowBox[{"{", "\"\<cpd\>\"", "}"}], Cell["\<\
MolecularInputID is a string list to indicate the kind of ID to use for the \
input molecule entries.\
\>", "TableText"]},
   {"MolecularOutputID", "\"\<cpd\>\"", Cell["\<\
MolecularOutputID is a string to indicate the kind of ID to convert input \
molecule entries. The default is \"cpd\" consistently with use of the \"cpd\" \
database as the default molecular analysis.\
\>", "TableText"]},
   {"MolecularSpecies", "\"\<compound\>\"", Cell[
    "MolecularSpecies specifies the kind of molecular input.", "TableText"]},
   {"MovieFilePath", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
MovieFilePath indicates the path (including file name) where if ResultsFormat \
is set to \"Movie\"  the movie generated will be saved. The default value \
None will generate a file named after the pathway with extension set by the \
FileExtend option in the current directory.\
\>", "TableText"]},
   {"NonUCSC", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
NonUCSC option set to False assumes UCSC browser was used in determining an \
internal GeneDictionary used in ID translations where the KEGG identifiers \
for genes are number strings (e.g. 4790). 
The NonUCSC option can be set to True if standard KEGG accessions are used in \
a user provided GeneDictionary variable, in the form \
OptionValue[KEGGOrganism] <>\":\"<>\"number string\", e.g. \"hsa:4790\"\
\>", "TableText"]},
   {"ORA", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "ORA can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " depending on whether the input is from an over representation analysis \
(e.g. output from ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["KEGGAnalysis"]], "paclet:MathIOmica/ref/KEGGAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "), or not respectively."
    }], "TableText"]},
   {"OutputID", "\"\<KEGG Gene ID\>\"", Cell["\<\
OutputID is a string to indicate the kind of ID to convert input genomic \
analysis entries. The default is \"KEGG Gene ID\" consistently with use of \
the \"pathway\" database as the default genomic analysis.\
\>", "TableText"]},
   {"ResultsFormat", "\"\<URL\>\"", Cell[TextData[Cell[BoxData[Cell["\<\
ResultsFormat provides a choice of output format, the choices are:
\"URL\": returns a URL of the pathway,
\"Figure\": returns figure output(s) for the pathway,
\"Movie\": in the case of series data returns a movie/animation of the series \
pathway snapshots.\
\>", "TableText"]]]], "TableText"]},
   {"SingleColorPlace", "\"\<bg\>\"", Cell["\<\
SingleColorPlace selects in the case of a single identifier input whether to \
place the color to the foreground, (\"fg\") or background (\"bg\" set by \
default).\
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"StandardHighlight", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<fg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"\"\<bg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", " ", "0.7", ",", " ", "1"}], "]"}]}]}], "}"}], 
    Cell["\<\
StandardHighlight provides a list of rules for setting the highlight colors \
for the IDs represented in the pathway (when no intensities are provided). \
The list specifies color rules for foregroung, \"fg\", and background, \
\"bg\", respectively. The colors must be provided as RGBColor[] specification.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->812822320],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGPathwayVisual"]], 
    "paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->961253673],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{"ResultsFormat", " ", "option", " ", "setting"}], "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox[
    "\"Results\" value for returned data",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<URL\>\"", Cell["\<\
Browser URL pointing to pathway on KEGG database, or if a list of Intensities \
was provided a series of URLs corresponding to each time point or sequential \
data in the series.\
\>", "TableText"]},
   {"\"\<Figure\>\"", Cell["\<\
Pathway figure downloaded from the KEGG database, or if a list of Intensities \
was provided a series of figures corresponding to each time point or \
sequential data in the series.\
\>", "TableText"]},
   {"\"\<Movie\>\"", Cell["\<\
Name of the output file that contains the generated movie/animation that is \
based on the list of Intensities provided.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->746904677],

Cell[TextData[{
 Cell[BoxData["ResultsFormat"], "InlineFormula"],
 " option output for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KEGGPathwayVisual"]], 
    "paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"]
}], "Caption",
 CellID->1184989624],

Cell["For example, we can look at the B-cell receptor pathway:", "MathCaption",
 CellID->1676459694],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptor", "=", 
  RowBox[{"KEGGPathwayVisual", "[", "\"\<path:hsa04662\>\"", "]"}]}]], "Input",\

 CellLabel->"In[299]:=",
 CellID->1272628418],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Pathway\"\>", "\[Rule]", "\<\"path:hsa04662\"\>"}], ",", 
   RowBox[{"\<\"Results\"\>", "\[Rule]", 
    RowBox[{
    "{", "\<\"https://www.kegg.jp/kegg-bin/show_pathway?map=hsa04662\"\>", 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[299]=",
 CellID->545314925]
}, Open  ]],

Cell["We can open this in a browser:", "MathCaption",
 CellID->1218512518],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{
   RowBox[{"exampleBCellReceptor", "[", "\"\<Results\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[208]:=",
 CellID->1135832234],

Cell["We can import directly the pathway:", "MathCaption",
 CellID->64193474],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigure", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[300]:=",
 CellID->862926724],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Pathway\"\>", "\[Rule]", "\<\"path:hsa04662\"\>"}], ",", 
   RowBox[{"\<\"Results\"\>", "\[Rule]", 
    RowBox[{"{", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs3U3O48qCJuaC3QMPvQXvwtMeetqGF9AFlxuelIFqA4ZnuadawFmXR+2b
SAhHyWT8Mv75PN/VPZ8kigxGMEKM96OU/9M//1//6f/47/7pn/7pv/4P//i/
//Sf/5//+G//9p//3//1f/zHnf/tX//r//lf/vVf/vf/5V//73/5L//yb//z
P//3/3jw//vHsv/8H/7pn/7xv5/+m5ubm5ubm5ubm5ubm5ubm5vbmNtPn/8C
AAAA0N41iwEAAACgDxkMAAAAwBhyGAAAAIAx5DAAAAAAY8hhAAAAAMaQwwAA
AACMIYcBAAAAGEMOAwAAADCGHAYAAABgDDkMAAAAwBhyGAAAAIAx5DAAAAAA
Y8hhAAAAAMaQwwAAAACMIYcBAAAAGEMOAwAAADCGHAYAAABgDDkMAAAAwBhy
GAAAAIAx5DAAAAAAY8hhAAAAAMaQwwAAAACMIYcBAAAAGEMOAwAAADCGHAYA
AABgDDkMAAAAwBhyGAAAAIAx5DAAAAAAY8hhAAAAAMaQwwAAAACMIYcBAAAA
GEMOAwAAADCGHAYAAABgDDkMAAAAwBhyGAAAAIAx5DAAAAAAY8hhAAAAAMaQ
wwAAAACMIYcBAAAAGEMOAwAAADCGHAYAAABgDDkMAAAAwBhyGAAAAIAxdshh
PmV0c3NzO/EGAAC8xw7zgNlzJDc3N7eeNwAA4D12mAfsUEaAUsY2AAB4nx3m
ATuUEaCUsQ0AAN5nh3nADmUEKGVsAwCA99lhHrBDGQFKGdsAAOB9dpgH7FBG
gFLGNgAAeJ8d5gE7lBGglLENAADeZ4d5wA5lBChlbAMAgPfZYR6QW8bPct+3
p9v8rOP7v6Hb3etS660tU2g9qfK13sfW5chdT43Q/t49V/q6nO1dnytZPlaW
0u3H9ielpD1Kj4naY6Dksdj+xB7rZdR2AACAdewwDygp490crmZ7se2n5tWp
bT6p75w5fc0yLfYx9Hzsda32JyW1vyVlKTnGcjOKnHXFylS7bE3/L8mVQvdz
j4/cZWqPo5L19bDD+AsAALS1wzxgZA5TOw8s2eaMHCbn+af72DJzqJl3x9Rm
UznrKrkm5Pux2v2q3f6T7Ce1fKjuWh0TT3OYkjofOR7uMP4CAABt7TAPWCGH
CS1TM5cemcO0mOvXXn9Q+3jt9mNaX2dyt1xpPbXMYXLW16qf75DDPCmPHAYA
AOhph3lAaQ5zvZVuq3Qbpet4msPkbP9J+WrX0TOHedKm1/XkbDNVvlhZS9ZZ
s82S3G1GDpOzT7FjInRLbS9UhpLyjB4Ldxh/AQCAtnaYB5TmMDmPlbw+tsyM
HCa1nhbXkuSsIzcbaZHD5LwmV262lNrvnNeNzmFi28/dn5zt52Ykse2G1p3z
eOscJvZ4TzuMvwAAQFs7zANWzmF6PF/y2l45UMt9aJnDlG67pFy18/WS6ytK
M4yW22+VP+QcG6mMrlUOk8pjcssT23ZPO4y/AABAWzvMA1bIYUquyUit48k8
sGcO02Ifa7dXUpaa47Xm+pcnOczn8dIcpGaZltvPkdtuscdH5TAl25HDAAAA
I+wwDxiZw9wtXzqHTJXhSRlr8oScMrTYx5DSeXuLrOlu+Zp9flLf1+dqc5ja
tspddsccJvcxOQwAALCaHeYBuWW8+/xB7b6FXh/axnc+8eT5mjKl1pvzmtp9
fFLm0PZK9zlHquwldVuyfyXbzWm70rYo3Z+Up8dTyXI5j9+VoWZ9tfXx1Ixt
AgAAc+0wD9ihjACljG0AAPA+O8wDdigjQCljGwAAvM8O84AdyghQytgGAADv
s8M8YIcyApQytgEAwPvsMA/YoYwApYxtAADwPjvMA3YoI0ApYxsAALzPDvOA
3H/b183NzW3HGwAA8B47zANmz5Hc3Nzcet4AAID3MA8AAAAAGEMOAwAAADCG
HAYAAABgDDkMAAAAwBhyGAAAAIAx5DAAAAAAY8hhAAAAAMaQwwAAAACMIYcB
AAAAGEMOQys/fvz47XbKtgAAAKAVOQytyGEAAAAgTg5DK3IYAAAAiJPD0Ioc
BgAAAOLkMLQihwEAAIA4OQytyGEAAAAgTg5DK3IYAAAAiJPD0IocBgAAAOLk
MLQihwEAAIA4OQytyGEAAAAgTg5DK3IYAAAAiJPD0IocBgAAAOLkMLQihwEA
AIA4OQytyGEAAAAgTg5DK3IYAAAAiJPD0IocBgAAAOLkMLQihwEAAIA4OQyt
yGEAAAAgTg6zrk/bfNqnpp1Sr4m1/3X7qfXLYQAAACBODrOma5v0bKecrKbF
elqSwwAAALAjOcx6YtenjNxe6XblMAAAABAnh1lPTnvkfmbo+zNNoc833T1+
t/x1e3frv3s+td4achgAAAB2JIdZT+n1Kbnf3xLKQGKPX58PLRP7Pba9WnIY
AAAAdiSHWU/PHKbm91Smkvo99VwNOQwAAAA7ksOsJ/X9MLHPFT29dkUOAwAA
AP3IYdZUkmO4HkYOAwAAwB7kMOuKfRdvyff0Xm+h53IfD5Wh5Ht6fT8MAAAA
bySHYUdyGAAAAHYkh6GVkdmIHAYAAIAdyWFoRQ4DAAAAcXIYWpHDAAAAQJwc
hlbkMAAAABAnh6EVOQwAAADEyWEoEfq3sHe4AQAAwGzmqJT4eaz8teGPYxwA
AIAVyGEoIYcBAACAenIYSshhAAAAoJ4chhJyGAAAAKgnh6GEHAYAAADqyWEo
OQZycpi7f6vo7rnUsqXrlsMAAACwOjkMJf/Gc0nuEbofe+7ufsm65TAAAACs
TA7DXQ4TOi7kMAAAAFBPDkMsh7keHzvnMI51AAAAZjM33UdOXtLz9ilDbg4T
+g6Xu/sl3/dS8x0x1yzJMQ8AAMAM5qSM+FxS7vUsuZlKyfauOcx1vwEAAGAU
c1FGfE9vbQ5zd81Lqxzmuv8AAADQmzkoJcdA7xwmN1NpmcPU1AMAAADUMPek
ROn3t6Sei32HTOr1td8Pk7OP+gQAAAA9mHNSIvd6mNV+ao5xfQMAAIDWzDUp
8aYc5nuf9REAAABaMMekROt/C3vkrdW+AwAAQC1zS1r58ePHb7dTtnWlzwAA
AFDLnJJW3pLDfOg7AAAAlDKXpJW35TAf+hAAAAC5zCFp5a05zIe+BAAAQIq5
I628PYf50KcAAAAIMWekxOx/82jmv5dUW1et1rPjDQAAgN+ZL1Hi57Hy14Y/
M4/xp31MnQMAAJxDDkMJmcCzuqsphzoHAAA4hxyGEjKB50r7nDoHAAA4hxyG
EjKBdnL7njoHAAA4hxyGEjKB9lJ9sKTOr9+Te33sbrm7191ts7TtV65zAACA
WeQwlBwDtZnA9zw+9G/rpF6fenz3TCDUDrn7eVdPsQwltvzd6+UwAAAAz8lh
KPn3hp9kAiW5QCgTSGUHJ2QC1zaorfPUcyU5TEld71jnAAAAo8hhCF2fUntt
RmiZVA7T8vETMoHa635yH5fDAAAAjCeHIZbD1Fyb0SqrefL43XI730rzj9D1
SLH1prYphwEAAHhODrOP2VnApwy1GUuPvKUkh9lJaZ2n6iYnV0ltRw4DAADw
nByGnOtgvpctmf+XLlNyHUZJLrDLMX5X73IYAACAc8hhyMlfvpctmf+X5AIl
2cBpmUCs3kuu+SmpbzkMAADAeHIYSo6BFplATS6Q8/uOmUBO3Zfs4933u+Q8
drdMaN1yGAAAgHpyGEqUzsPv5u6hz0Cllok9vlsm0CP7Wu1ntToHAABYgRyG
EjKBZ2r6mzoHAAA4hxyGEjKB+nqrLYM6BwAAOIcchhKxf1tp9dvM+mqxjh1v
AAAA/M58iVZ+/Pjx2+2UbdXYsV/tVl4AAIAd7ThfZE1ymL37085lBwAA2IW5
F628OYc5oR99yr/7fgAAAKzshPkja3hjDnNS//nej1P2CQAAYDUnzSOZ6005
zIn95ro/p+0fAADACk6cT9LP7H9/Z/a/3XN6f5HFAAAA9HX6vJK2fh4rf234
8/QYf0s/udvHN+w3AADAKG+ZX9LG23KYt/WP0L6+qQ4AAAB6ets8k2feksO8
tV/E9vmN9QEAANDaW+eb1Dk9h3l7f0jt+5vrBgAAoIW3zzspc2oOox/8klMH
6gkAAKCe+Sclx0BJDvP9bxV97l8fvy4Tev3387HXlOYwjv/flRwHAAAAlDMP
peTfeM7NPq7L3WUpsdfcvT72eGkO47i/V1In6g8AAKCc+Sih61NC/4ZxaQaT
k7O0fjyUwzje42q+zxgAAIB85qXEcpjr8fEkh6nNVWLrK8lhHOdpNXWkXgEA
APKZn+4jJy/pefuUYdcchjyyGAAAgH7kMIz6XFLrHKbF9/Typ9q6UscAAABp
chhaf09v6++HKb1GRg7zzJO6Us8AAABxchhKjoGSzwGV3K99zOeS2ntaV+oa
AAAgTA5DidLPAn1uocdDy8Tym5zXyWHqtagr9Q0AAHBPDkOJ0s8DrfLjGM/X
qq7UOQAAwJ/kMJSQw5yvZV2pdwAAgN/JYSgx+9/OfnIjT+u6UvcAAAB/M0el
lR8/fvx2O2Vbb9NjPDDGAAAA/CKHoRU5zBl6jQfGGQAAADkM7chhztBzPDDW
AAAAbyeHoRU5zDlkMQAAAH3IYWhFDnOO3mOCMQcAAHgrOQytyGHOMWJMMO4A
AABvJIehFTnMOUaNCS228z2GGc8AAIDVmbfQihzmHCPHhNZZTKt1AgAA9CCH
oRU5zDlGjwlPt3d9vTENAABYlRyGVuQw55gxJuRu8zNmxa5/MaYBAACrksPQ
ihzmHLPGhNrt+lwSAACwCzkMrchhzjFzTKjZtu/pBQAAdmHeQitymHPMHhNK
tz+7vAAAALnkMLQihznL7HGhZPuzywoAAJBLDkMrcpizrDAu5JTh7nt7AQAA
VmX+QitymLOsMi6sUg4AAIAW5DC0Ioc5y0rjwkplAQC4+vd///fbG8AdOQyt
yGHOstq4sFp5AAA+5DBACTkMrchhzrLiuLBimQAA5DBACTkMrchhzrLquLBq
uQCA95LDACXkMLQihznLyuPCymUDAN5HDgOUkMPQihzmLKuPC6uXDwB4DzkM
UEIOQytymLPsMC7sUEYA4HxyGKCEHIZW5DBn2WVc2KWcAMC55DBACTkMrchh
zrPS2PAZq0pvAAC9yWGAEuYqtCKHOY+xAQAgTQ4DlJDD0Ioc5jzGBgCANDkM
UEIOQytymPMYGwAA0uQwQAk5DK3IYc5jbAAASJPDACXkMLQihzlPi7Gh9vt1
V7gBAOSQwwAlzDdoRQ5znlY5zF8b/hgXAYBcchighByGVuQw55HDAACkyWGA
EnIYWpHDnEcOAwCQJocBSshhaEUOcx45DAAAQFtyGFqRw5zp6fgghwEAAPib
HIZW5DBnmpHDXP/doutjoeViz8thAACAFchhaEUOc6bROcx1+WuuEls+9lo5
DADQi++HAUrIYWhFDnOm2TlMbe7y9PNQxkUAIJccBighh6EVOcyZZn0uKfVc
7NqYFt9JY1wEAHLJYYASchhakcOcadb39Ia+1yWVw7T6XmDjIgCQSw4DlJDD
0Ioc5kyz/72k1HfC5GY0chgAoBc5DFBCDkMrcpgz7ZjDtMhijIsAQC45DFBC
DkMrcpgzzf6e3toc5mkWY1wEAHLJYYASchhakcOcaUYO832LPZ96PLYeOQwA
0IocBighh6EVOcyZZn8uadaPcREAyCWHAUrIYWhFDnOuJ2OEHAYAOJ0cBigh
h6EVOcy5nuYwu94AAHLIYYAS5hu0Ioc51ypjhMwEAFiRHAYoYQ5DK3KYc80e
I3KuW5ldRgDgveQwQAk5DK3IYc41a4zIzV6MYwDATHIYoIT5C63IYc41eozI
/d6WuzwGAGA0OQxQQg5DK3KYc80YI0pymO/fjWcAwGhyGKCEHIZW5DDnWu1z
SXflCv0OANCbHAYoIYehFTnMuWaOEbF/FymWvRjXAACAFclhaEUOc64dcpic
+wAAALPJYWhFDnO2Wd8RE9u+HAYAANiNHIZW5DBnm/FvJtUsI4sBAEbz/TBA
CTkMrchhzhYbJ1qPIbnry8lhStYHAFBDDgOUkMPQihzmbKNymJJ1lWQuxjkA
oBc5DFBCDkMrcpizleQw3+NKyRhTOhaVZi7GOgCgBzkMUEIOQytymLOFspa7
2/fzoden1l9TptrHAQCekMMAJeQwtCKHOVvp55JKvi/3yRgkiwEAZpPDACXk
MLQihzlbrxzm6fhTs15jHgDQkhwGKCGHoRU5zNlqcpjU55JajD21+Y5xDwBo
RQ4DlJDD0Ioc5my136EbGmNajTtPrnsx9gEALchhgBJyGFqRw5yt1b9lVLOu
ntsx/gEAT8lhgBJyGFqRw5yvZKwY9T25T695Mf4BAE/JYYASchhakcOcL3es
uP4b1qWvb1km18QAAL3JYYASchhakcOcr8e/L/1Uq+tdjIMAQC05DFBCDkMr
cpjz1Y4VPceYlte7GAsBgBpyGKCEHIZW5DDnqxkreo8vrT93ZDwEAErJYYAS
chhakcOcb9ccprQcxkQAoIQcBighhyHX93ev7najjZb/dnUrchgAYDY5DFDC
PJVcP4+Tvzb8cXy3s2KW0eu7Xxw3AABAD3IYcslhWPH7bntmQ44dAACgNTkM
ueQwtP5O3BZ6X6Pj+AEAAFqSw5BLDsNPsfqcUdcjrnFxDAEAMb4fBighh3m3
kvaXw/BTqD5n1bMcBgCYTQ4DlDg9h2mxb6fXT+6/LVSaw9ytO7Xc537J6+Uw
Y93V58w6HvWdL44jACBEDgOUkMO0ec2uSv6t55oc5PqanPvfj6WWl8OMd63P
2fU7so/P3lcAYE1yGKDEyTnMZ7/8GylhsRzmemy0zmFi18fIYdZ1PSZmG521
rrDPAMBa5DBAibfmMN/7fZ1XXp8LPZ9aJrTt2n2ZefuUYUQOk/v6kjKcfJyP
1vrYfmrGtS2r7DsAsAY5DFDi5Plp6u/2sSzmbj13y4Re1yOL6SHnOpjvZZ9k
IJ9baQ5z99rSMlz3l3qr1eGMHKbF6wGAc8hhgBKrzalayskVUr9/3w/lMHfb
SGVAq8jJX76XrclAQo+VXg/TIoe57jflVqs3OQwAMJscBihx6nw0lbtc7+fk
MJ/fczKW3XKY3GVH5DCh7KVlDlOz/6xZXzM/X7RaXQAAc8hhgBIrzqta6JHD
1F5Tc0r9ts5h7p4vvf80h/net1PaqZdVP2c3M4dptQ760DYAjCKHAUqcOP8M
fU7o+7HQ/dDvofvX5VPr3llpBnL3madQLnP3XOrxljnM9z6mlj+hLUutnCuu
cE3LanXCL9oFgFHkMECJUzKCEWLX07xB7eeCZv/UtFPs82Zv6zM515bNtEIO
03I9tHM3Zp+WjwOwBjkMUMK5aD45zHtymM/+huZxb2n7WB61CjkM30LX4YXy
F+0GQAtyGKDEm+aULbxtHv4tNr9Z/dZrv08W27+V9n2lzxWtVC+Uf08YANSS
wwAl3jCfZIwfP378djtlWx9vymJS+7Xafq9yTUzrdfHMyBxmdtY8K6cG4Bc5
DFDCeRitnJzDvGkek7M/q+3zStfEtF4X9UI5zPfjLXOY2Z/BHPm5TQB+J4cB
Spw4j6SP2X+znfn33rf8TTl3P1bb39VymB7ro41Pu7Tut3IYgHeTwwAlTppD
0tdb5xlvuba/ZB9W298Vc5he6+SZXm3y1vERAIByp8wh6c88I1wvJ9xK93kl
rcrjmpjzyWHGjo8AAPxJDkMu8wx19L2fK1k1h+m1Tur0vH7tLX0fAIDn5DDk
Ms9QR9/7uZLW3/PR2mr1RZ6S98dY37+7/qxl371bZ+62HJsAbfh+GKCEHIZc
tXOHHnOP0u2vXkezf2rqaKVxY/Ucpud66afk83s5eUfsfm2/vbtfsi3HJUAb
chighByGXE/mDTPzCTlMnzpaadzYIYfpvW7aK/k+pRk5TGobOdtyTAK0IYcB
SshhyCWH6VtHM3/kMH3X13u99FHy/dZPc5jrNYPf96+P56y/5DkAnpPDACXk
MORqmcPcfVdCaN7x9GfVHKbkex1S3y/x9LNfOfNNNze3+1tO37973d34eP39
c//6+926Y9tOlQuAZ+QwQAnnYORKzTNSc5DY76G5R4ufkcd3ablDy989HqrD
1Lp61dFK40aPsvTcv5XqjrBU9nJdtrSv3417uflMzTZifd+5AMAzchighHMv
co3MYWq3E5tnxParVf20ymFSdXK3LTnM+uscuX6ey8lfvpct7eup8e9pDpMz
Jlz3yTkBQB05DFDCORe5WuUwdznCrBzmyfFf89mEVL3cPVczf2tZR7H9X8WO
OcyobVCvZHxYLYfJHRtC++fcAKCMHAYo4VyLXD2uh4k93yqPSc0zSo7/1GtG
5zCt6ksOM3a9o7dBf6m+fHfLWea7f19/D60vta2Svu8cASCPHAYo4RyLXLXz
/NQ84frY9fenP6Hr7nNymNzlauuo5m/o18flMHIY5mt9Hd+on5LrfQAIk8MA
JeQw5GqZi8Tu95xnxP7mfPd87zpqkcN87sth9lv3yG3Q1+k5DABxchighByG
XLvnMLEMplU/aJHD3F3rUvq62joq3ddV7J7DjNwOfeSML6venu4vAHIYoIzz
KHK1zEu+z+FbrTNnWz0zmNI6CpUjVUexx5/UUe3+ruCEHGb0tqAV5xEAchig
jPMncs3+m+2KfxO+q6PeuVKPHznM3PXP2ha05HwCeDM5DFDCeRO5TswYUllM
ad84sY5S+7uCk3KYGduDlpxXAG8khwFKOF8i19syhs8+ly6/621E/fQyohyu
iYEyzi+AN5HDACWcJ5FLDvN7f6npOyMzoRFWKdNpOcyM7QEA9eQwQAk5DLne
ksOkrhm59pmS9cth+jgxh5m1TejJMQ0AIIchX20O851jtFiudw5z3efUY6Ny
mBavb22V8owqR2o7PcqxSh1DK08/DwkAsDvnQuR6ko/kZDAly8th1rBKeU7O
YXquF2ZzDgIAvJFzIHLJYf5+bMbnklquo5VVyrLKd+i2/j6hnG3CCZyLALvz
/TBACec+5GqZw9x998r3460ymKc5TKgePv8d+T29LdfRyiplmZnD9Pw+odh2
4UTOSYBdyWGAEs55yNUqh7n7fdXrYUL1MOO1PdbTwgplWfV6mLvHVjh+YHWO
dWA3chighByGXHKYv+thxmt7rKeFFcoyugyh7fXOYVq8HgBoTw4DlJDDkKvH
55Jiz6+Ywzz9dz5al2UFbyxHaQ7T4nNJOduHUzlXAVYnhwFKOLchV4/rYXbL
YZ4afW3OiH1fpX5XuSYmtFzrsXaVeoeRnLMAq5LDACWc05CrNhu5fhfv3WN3
39krh3m+PjnM/O31Ktcq9Q4zPL02EaA1OQxQwnkMuVrlI6nPKLX+Wen47lGW
ku+Njf07Pj22P9Lbcpje64ZdOI8BViCHAUo4fyGXHOa5ETnM9dqi69+NW39f
ySr1O6McOdcj9R5jV6l/mM35DDCTHAYo4byFXK2/s+X6uSQ5TPv1hr43tmWZ
VqnfFXOYUVYpBwC8lRwGKCGHIVfsOovVb6uQw/Qzqxxv339YmX4BjCKHAUqs
Nk9lXz9+/Pjtdsq2Whr9+ZTQYz6X1G+7q5QD+MV5DjCCHAYo4fyEVuQwaSt8
T0joe2J6b7e3mfnHKtdfrdIWsKLZ/RM4mxwGKOG8hFbkMGm9+1rO+nuUYYUx
ZNb3w6yUw3zKBITl9NUV+jL5Zn/2+cQb5eQwQAnjLa3IYdJG9LXUNkbnMN9j
TM/xZuQ4tvr56wplgB2E+uxK/Zl72qgv9VtODgOUMMbSihwmbXYO0+u8Kif7
+V5mdBbUw8o5zE+rlAN2cB2fVuzT/E2bjKW+88hhgBLOMWhFDpM2qq/NyCRK
nj8hh/lsc+U520plgV2s3q/fTFvMo+7T5DBACeMqrchh0t6Qw9zNW07NYT7b
XXW+tlJZYAerf+bw7bTBXOofoB3nFrQih0kb/R0mq2zrxM8lXbe96lxttfJ8
W7G+eLdUDuN4nUfdr0E7ALThvIJW5DBpK2UjI7f1eb7neDN7HFt5nrZ6mVYs
H++Tk8E4VudQ72vRHgDPOa+gFTlM2mrf2zJqOyPKscI4tvJ4ulq55DDsQhYz
nzpfi/a45/thgBLOKWhFDpO2Qg4z4zNBb8lhflqlHHdWLdtK37G8w418s9tK
O7ehPtaiPe7JYYAS3u9pRQ6TNmu++flvr/4eW+eoeUXt+mfPtUbP01Yb72eV
5+d2/9rwZ7X2W5123p+6WI82uSeHAUrIYWhFDpM2K4cZ8XfW2ePIk1xi9pxr
5Dxtdjt9m1mWt7X7W2nn/eXm/D3e32rWOaLtWu/vivu4IzkMUEIOQytymLSR
fW309e6zxxE5TP+6ak0OM7bd30g77y9VF9fne2QxT55v7Xt7M/N4x+if5DBA
CTkMrchh0kb1tR6fZ8nZ5kxymDH1dYq3tvvbaOf9yWHab2+VdZxGDgOUkMPQ
ihwmzfUw/chhxtVZK66HmdPuJ8gdy5628934qZ2fK3kveprD3G0r9t54Xf76
+9392GtDj6X2Lfba0OtS+5oqc27Zcp5/IzkMUEIOQytymLQZfzeTw6RfN2YG
veY8bXa7zVLa7td5+N28/LrOnNfMavfd5Y5rLfr3Xbu26cXvbedQbhFbNvZ8
6Di4y1NiGcvT14WWv3tNLO/I2Y/Ya2rLnFO2VDneTA4DlJDD0IocJm1WX2uV
w4RyndRthF45zN3+hJ4PvTa2fGg+n5qvy2GeqZlLp+bjoWMgtYz5ebnc8UYO
s6a7dgq9X5TkNLH1Ps1hQuWszWFCry957d3rcnKUJ2XLee6t5DBACTkMrchh
0mb2tdG5yGi9cpiceVgqL2m5vh7ztFOPiZjWOcx3rva0bUe1+85y898ROUxp
Pqud87KEnGWvz8fyhdg2YuspyW9Cy5e8vuS1qWXkMGPJYYASJ8/LGEsOkza7
r52cxZTs03W+1mIeFnttyetz522t2/DEYyJm5xzGrez2pL7v6rzkGKjdfsn+
XY/rXV4X65vfr4kte/f89/2730PrK3ld6PfYdnJfX/La1DKlZc7dVuq5t5LD
ACXu3h+hhhwmbZW+tko5Wso5Vw/NB3LmRLVz65y52d0yLedpbu3m56G2at2+
se0Tn/9fl2tR56G2vfZF7Zznbv9C56OpLCDU7p/HYs/HHr87rmKP3a33bjux
16fKGCp3qPyp/Y/tc6xsn+f4nRwGKBEbY6GEHCatV1+bPZ99cmtZB7F6ib0u
Z050vYXmaTlzuLvXl87deh5Lb1Ba37ltGDs+arc5ot13kzuWtKrzu99Dz2nn
tFhOEVq29bZ7rf8t1Nuf5DBACTkMrchh0nrOnZ+e98/46XF+XZrx5OYwscda
5DCp9fSuu2udnK5lDpN7fJift5Pbx1vnMLG2zz02tHPZuaccZk3q7U9yGKCE
HIZW5DBpcpg+c40n19eMzGE+93PndSPqLlQnp3vSZ3Kuhyq5Zqp02+R7Wu+x
a5y+c5frcjXXuGnnez3q4sl7Rqttt152tFXLNZMcBiix8hjPXuQwaXKYdnON
u/PolXKY2DUQqTl6bpl6Ov19oVUOczdPDz1Wu72R7X6aN46Np1m1Lp6+f9Us
u1JdrFSWVchhgBJyGFqRw6TJYZ7NNVJ/w+yRw1z/1h2bc4f+Jp66/iVnHj9j
nnbye8Nb+szbaef9rVoXcph1yrIKOQxQQg5DK3KYtBVymFimEHo+lS3k5Aa1
c42S68d7XQ+z4s+ocfvU9wft/g7aeX8jx7rv95rY/dD1mHfvVbFrN0PruL4+
tp7YOnrWnWMU4Bk5DK3IYdJWyGE+5/ih+6W/391/OtcoyV6ur+tdd6v8jBy3
T3yPiOWNq9/IN7uttPNzI+rimmOEtl26XGr5nPXVlu1uGy05RgGe8X5PK3KY
tJ7nQ6Vz+Nj9ksef5Bh3541P6qjmtbPnWjvM07xHALOMzmFCj+dmMt/3Q2P1
3eOh8b11RtSC9wSA5+QwtCKHSTsth3mSwXxe33IMWmUsi5Vj1zF3xzIDZ+g9
/qTG7LtlcjORz/2S62FytiOHWY/vhwFK7DonYD1ymLSVcpjrrTSHeZrBfK+n
ZT2sIlWWHcfe3coLnGFkDhO7tuXJa1K/l14DI4dZjxwGKLHjXIA1yWHSVsph
ah/7frzF9TCf8reom5XGstyy7DYG71RW4AyjPpuUc01KaPnQZ4pSj4V+Ty1b
s/5WvA/ck8MAJXabA7AuOUzaaTnM0ywmdO12bT2tNJaVlmWnsXiXcgLnmDnu
GPP+pi7C5DBAiZ3O/VmbHCbtxBzmSRYTq4+aTGa1saymPLuMyTuUETjLjHHH
WPc3dREnhwFK7HLOz/rkMGkr5DDf+cb3LbZc6vHYempzmOv+5Sy72lj2pDyr
j80rlw0408hxcfUxeDR1kSaHAUp4n6EVOUzaCjnMSj+1n90p+Qz/TK2+82a1
/fpYtVzA2Yw9Y6nvPHIYoMTK5/jsRQ6TJod5lsNc9/nu+2VW0rI8q47VK5YJ
ON/ddZ20oV7ryGGAEsZYWpHDpMlh2uUw3/u+8vlij3+nYrX9XK08wDuFPnfr
VnajjhwGKGHMpRU5TFrPHGbXW496WEnvNl/FSmUBgNHkMECJ1c7l2ZccJk1f
6+tTvyv9Xa93Gd6ynwCwMjkMUGKVc3j2J4dJ09f6uqvfFTKZEdte4dhaoQwA
MIMcBigxe37COeQwafpaX6n6nTXejdrmCuP57O0DwAxyGKDECuftnEEOk6av
9ZVbv6OvkRnd7rPHdcc5AG8jhwFKzD5f5xxymDR9ra+a+h01Bs66DmfWMedY
B+BN5DBACTkMrchh0vS1vp7Ub+9rZGZfn3Ly57EAYDY5DFBCDkMrcpg0fa2v
VvXbI5NZoe1Hj/cr7DMAjCCHAUrIYWhFDpOmr/XVo35bjpGrtP8u342zSn0B
AEBLchhakcOk6Wt99azfFtfIrNb+q383zmr1BQAALchhaEUOk6av9bX6vw+9
avuPeB9oUV/f5fTeBQDArpzL0oocJk1f62vWvw9d8u9lr6z3+0HOur/r9Hq7
K+PqdQrAO/h+GKCEHIZW5DBp+lpfO/ybRDscA6v8u1F3y95dIwMAs8lhgBJy
GFqRw6Tpa/3NruPUNTKzy1eix/uDHAaAE8lhgBJyGFqRw6Tpa/2tVMd3mcxK
5cs169/wDuUwu9cnAOeRwwAl5DC0IodJ09f6W7WOr99xsqMZWUzodd67AFiJ
HAYo4VyWVuQwafpaf6vXcYt//3qmlmXP+dxR6fMAMIMcBiix83yAtchh0vS1
/nao4xOu6WhV9utnjOQwAOxIDgOU2HkewFrkMGn6Wn+71PFd/rBL2b89Lfc1
k4qta+d6AuBschighHNaWpHDpOlr/e1Sx7F/T2mXffj2pNzf+cqu+w/Au8lh
gBLOeWlFDpOmr/W3Sx3nfP5mx/G5tMx3Gcxu+wwAchighHNeWpHDpOlr/e1U
xyX/fvNuY3XJZ4zkMADsTg4DlHDOSytymDR9rb+d6rimrLuN2bHyymIAOIUc
Zg055xSxx2r+LUeo4XyXVuQwafpafzvV8dPvt91p/K7JYwBgF3KYdeRkKSV5
i3MSenC+SytymDR9rb+d6rhVWXcax0vyGADYhRxmHTl5SuiamNBrnJfQmvNd
WpHDpOlr/e1Wxy3Lu1OGkZvHAPDL97hojFyPHGYduTlM6LG71+hvtGYcpxU5
TJq+1t9uddyrvLtkGak8BoC/XcfMknEy9Z1cK992IIdZR0kO8/176rNKuxyL
7GGn8Y21yWHS9LX+dqvjEeXtNc7PPi8//ZweVjW7/76571/3oWSffi7714Y/
u7SbHGYdrXOYk8YQ1uGYohU5TJq+1t+OdTyqzKXnEanlnNPDO+n7Y9yN2XIY
SCvNYT73c/qX45FW5DC0IodJ09f627GOZ5Q5Z+xPLeOcHt5J358nlcukXju7
Dd7aboyVk5+0WgZqyWFoRQ6Tpq/1t2Mdzyxz6BqZnOtwndPDO+n783x/fqJ0
f7Qbb5DzmcTY47FlfD6JlhxLtCKHSdPX+tu1jlco9/f7Qc73Kjinn6d2DuZz
7r+ovz+VfmZxdj9+c9+/eyxn31Lt9lnP3WOfx0Nz3OtrQutOvXbndvP9MECJ
E88lmEMOk6av9bdrHa9U7tj58nW52fOqmp+V6rpWaSYQ+3vgG6m/P5XUSW3f
v5vTp5aNvf6tff/usZy2y808Uo+V3r8+Fvp993aTw4xx2tjLezmWaUUOk6av
9bdrHa9U7lgO813O3L95lsyhSuZpOa/f+Zw+Jjcr+142tp63UX9/Kq2Tkn4Z
mqun1pOTCZSWYWexTDyn7XIzj5qc5fpczjKntZscZozaHD13eRjF8Ugrcpg0
fa2/net4lbKncphPOUPn0rFz9pJz85x5Ws1cYZV6fiK3jT7Lptb1NurvT6V1
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
MP7QghyGVuQwafpantA8ouTcfVZd516Dcv1bcOi52GtC64g9J4eBMq2uh0nl
H6H1Pvn9WobQdmqzldqyyWE4kRzmPYw/tCCHoRU5TJq+Vu/u7745y4+Wm8Os
9rP6sbl6+ThXTQ6Tm2+MymG+n8u5biW3zK2u56lhTGA1cph3MQbxlByGVuQw
afpavdK6k8PIYaCF0mvvWlwX0uN6mNxypF7Xomwt+rMxgdXIYd7FGMRTchha
kcOk6Wv1dsphdr2tbPXyca7c6+9C/SjV5+6uUYk9llrHXTlS6yy5nypPaTlr
+7YxgdXIYd7HOMQTO5x/swc5TJq+VqfmfP0tdW0/oa83HHt3uc3q23tDu7AX
Ocz7GId4Qg5DK3KYNH2tj92v9Xjq9P376Q37yJrecOzJYeA5Ocw7GYuo9YY5
CmPIYdL0tX7kMGd7wz6ypt2Ovdoxb/R46XNJnEYOA5R4wxyFMeQwafpaP2/N
YD5O38/T94917XDsjb6eZQVv2Ef2IocBSrxpnkJfcpg0fa2vN+cwP52+r6fv
H2va4biTw8B8chigxNvmKfQjh0nT1/p6cwbzcfI+n7xvrGv0cRf694Xunv++
f33s+7+h9cb+HaPQ+lcZX2dvH67kMO9lPKLGCu+lnEEOk6av9SeHOXefT943
1jXjuMvNVe5+v74+5zU1659thTLANznMuxmTKPXWuQrtyWHS9LX+3p7D/HTq
fp+6X6xtVg4Tuh+7/iW0fOz3UIaTm8nMsko54EMO827GJEq9ea5CW3KYNH1t
DOPamcfaifvE+lbKYWquVwllL7XrXKUfrlIO+JDDYFyihPkKrchh0vS1MYxr
v5xWB6ftD3vY9XNJvZ5boR+uUAa4ksNgbKKE+QqtyGHS9LVx1PV5dXDa/rCP
0cde6Dtzvx+7++7c6/N360h9xij22c5V+uAq5YBvchh+Mj6RSw5DK3KYtLf3
tev5/U63Xe1c9quT9oW9zMphVrNKuVYpB3yTw/CT8Ylcu88xWIccJu3tfe3n
/v+14c/u7bZ7+T9O2Q/2I4dZq0wrlQXgyhhFDjkMrchh0t7e1+Qw89gHeGbU
8bfadXgrleWnlcoCcMc4RY7V3l/Zlxwm7e19TQ4zzwn78NMp+8GeHH9zqX9g
F8YrUuQwtCKHSXt7X5PDzHXCfpywD+zLOdM86p3V+X4YvhmzSHFOQStymLS3
9zU5zHy778vu5ecMjsOx1Dc7kMMAJeQwtCKHSXt7X0vlMHf/TlFquc/9u2We
bOPUHOannfdn57JzlpP+XbXVqFd2JIcBSniPoxU5TNrb+1pu5lF6vySHyVmn
HGZdO5ed84X+3Xu3shvsSA4DlPCeRytymLS397WnOUzsGpe7+6XLvyWH+WnX
fdq13ACcTQ7DHecthMhhaEUOk/b2vtYrhwmtQw4Tt+N+7VhmAM4nhyHEuQt3
5DC0IodJe3tfy81hrrfaHCb0mtD635bD/LTbvu1WXgDeQQ5DiHMX7shhaEUO
k/b2vlZzPUzO9S2lOUvueuQw69mtvAC8gxyGGOcvXMlhaEUOk/b2vtYrh8m5
/mXXHGb292Wu9l2bb+9DAKxJDkOM8xeu5DC0IodJe3tfe5rD5GQqJ+YwJWVd
5adnnb29HwGwHjkMKc5f+CaHoRU5TNrb+1rO9+HGvh/mbrnU49fHSr4XZkSm
8LTOVv2RwwDwJnIYUpy/8E0OQytymLS39zWZgjprVScAsBI5DDmcw/Ahh6EV
OUza2/uaTEGdtaoTAFiJHIYczmH4kMPQihwm7e19bfb3xq72nbO5dTY7U5HD
AECcHIZczmP4afYcg3PIYdL0tbFOqO/aHCb2HTsl37/zZPs96wQAViKHIZfz
GH6Sw9CKHCZNXxvrhPquyUHucpfQc6nn5TAAkCaHYYYe13B/r0dW0I+6pRU5
TJq+NtYJ9d0ih8nJVD7PtfoclBwGgDeRwzDL9byoVRbTcn0t13MKOQytyGHS
9LWxTqjvJ9ej1OQwrbKYnu8tJ7QrAEALcpg9yWFoRQ6Tpq+Nt3udP8lErt/v
kpvD3L22Ztuf8rf+vuPd2xQAoNd5UWy9d+dkd+doOTlMal13j6ceuz4e+nxU
7nZan4O2tGq52I8cJk1fG2/3Om91bUppDpOT3eTkMHf70+J9Z/d2BQBo+X0u
qXOsu2wllLekcphUblOy/lR5YutILRMq/wrkMLQih0nT18bbvc5Py2Gu+1b7
HrR7uwJwFt8PQ43WnyGqeSx0rUrJukrznNIcpqSMOdfyrEAOQytymDR9bbzd
67wmB7m+5vv+3fpiz/fMYa77WZLL7N6uAJxFDkOtHtcIP3ns+vjIHObze06W
UprrrEYOQytymDR9bbzd67w2h/m+lTyfem2vHOZuv3OvrQWA2eQw1Hr6OZqa
zKX355JK1xnLTVqvbxVyGFqRw6Tpa+PtXuctPpc046dlvaeuRQWA2eQwPFF6
XXDodanX3z1/d46Vs87Q+dn3Y6HfQ69PrTdnO9/LrEwOQytymDR9bbzd61wO
82d91JynAEBPchhqleQop2uZpaxej29va9qRw6Tpa+PtXuehv0nscOtdL9f6
AYBZ5DCUmnUOtbJWOcwOdfj2tqYdOUyavjaeOj9T7vWxADCCHGYNOblG7mdh
vp8bWda3n8c8qYed6m+nsrI2OUyavjaHej9Pqk2dz8Be9NN76qWtnvUph1lH
TpZSkrf0PG5a5jC9yznbCmVoyTkqrchh0vS1OdT7eUrbVCYDa9M376mXtuQw
75CTp4SuiQm9ZnQWU7ueEa9Zwa7l/ua8lFbkMGn62hzq/UxPzlNK3/u8V0Jf
sc8NvLn/qZe2etanHGYduTlM6LG71/Tua0+zmNpy7jqG7Frub8ZwWpHDpOlr
c6j3M7Vo19xzHp9zgvZS341w7W9v6Xvqpa1R9SmHWUdJDvP9e+qzSqOzmNLX
fv/3br2h3++uEwpdO3T9/br92mVy1h8qd+r+qnYoI3uQw6Tpa3Oo9zP1aNfQ
e/fTv1MBcan5T2iZ06mXtnrWpxxmHa1zmJHv/U9zmOvvqedjr6vJUEqXyVl/
aVnv7q/I+SStyGHS9LU51PuZRv9dKieLyXnNqreRZu+relqvnu5ec30stN7Z
+9qznp7Uy5vqKVfL+rwamcPMbo8V2jJVP6nH79o951iYvQ+x5WP1HNr3VJ3s
8HvquVWN7BOcTQ6Tpq/Nod7PNPJcKPec8uf9vzb8Gd1H1JN6utvXu8dyzq1P
rqcn9fKmesrVsj6vRucws9tldlum6if1WKtlVlC6LyfmMN+PrdhGd+QwtCKH
SdPX5lDvZ1olh7meF8w+z1353Fg9qafS/f/8N7bOt9VTbr28vZ5K6uXz3yfb
ksPMb8tP3eT8zST0eGyZ0Otmk8P8/thq7ROy4rHEnuQwafraHOr9DLlZyOjt
fm/fuXF+nc7eZ/W0fj3lrudt9fTkdbP3eWQ9ldRLC3KY+W35RiV5Uei8pSR/
ir2+ZJnUukvWed3HXchhaEUOk6avzaPu9zcjhyldt3Nj9aSe5DC960kO05Yc
5py2hJ2OMTkMrchh0vS1edT9GWZcD1PizefGJe1QW0937a6e1vtpWU8563pT
PeX+Tfjt9VRbnzNpyz519b387PZe5Vg71W5163igFTlMmr42j7o/w4wMpmRb
n3PjVnnB9fXf64ltI7X9u/W2rqfYOp/MIe72Zac5xKh6yjkOcl+7Uz2lyn13
7IfqKdW3rusNbS+2rln11Op4StXzk+21rKcdjG7L3DbOfe3Itiytq+vzs+a/
o89f3mLXuty13KxHDpOmr82j7s8x+jwmNPe4K8N1jvXk3DWUnaSWST0XWm/P
erpbttX8odVcL3fbu9TTk/qKHUc71FNpPlDTj1psb3Y91fyUHE9ymDIj27Kk
3a79YdUcpjRvmTEHLmnj2vWzDzkMrchh0vS1edT9Od6Qw8TmdCXny7nr7D0f
vG6jZw4Tmvc+nT981rNLPZUeB6XLrFxP3zlHyeOpuijNHFL9eHY91bZtj2VT
69nB0++HGT2GtnifmdWWJe/JqfWMVNLGtetnHyPOYXkHOUyavjaPuj9Lq3OW
0m2lzplyc5BUVpB7npvaRurc+ft8fNTtWk815/Gherrb/9x5dM22V66n3OPg
Wo+lx+CK9XTX9jmPl7wmVc+x1+zY71J19X3M3P13l+Nph1uLMTTn+My9v3pb
Pnl/D62n9+tqz1W+/8v6nrQ3fJPDpOlr86j7szw9X6nZTs650vf56XXZ2Dzm
7nWx89fUNlLPXbfToh5r66l2DhGaD1z3ObT/tdvepZ5yj5Hcet2pnnL6WEkd
5dRH6FiMLTu7nnocT6m6n3U8jdDzepi7ZZ/UZ+q4Tb13zG7L3LpKbW/0sVXS
xjXr/v7v3Xbvnr9u/27ZVLlb7sebqDNakcOk6WvzqPvz9Hj/Cp0X5Z4v5c5r
r+e4oflL6vw3tY3c8+Je88Gcemo5h8ip89rttppDjKqnnDr5rpec42+Xekpl
ATX9KFUnufPV67Zm1lNt2+bU4+d+q23uoEcOE1v2SX3e9fvYcVvy/Ii2zK2r
2ud6KWnjmnXf/X7d9vfzodfcLZvaxi79dCVyGFqRw6Tpa/Oo+zM9adfSc96c
98ucHKYkn0md/66Yw+Qu++Q8PqcOcubfM+YQo+qp9Bg5qZ6e5DAl9ZdaR05O
MbOeats297ncDCtnmztolcPkLtuq/UrfO1bKYWqXnTX/7bnd1PnMXYYSes2T
38knh6EVOUyavjaX+j9Hzd+UnvwNqubcOGdOkvtY7vlyzVx6xnnAkznEXU71
/djdsRHLtmbMIXrXU80xsloO86Sent7/fix3jlrTN2fXU23b1tTVCnP33p7m
MCXensPU1NeTc4DVpXKX6/3vHCZnfals57T6HOXEY5E55DBp+tpc6v8MOX/b
mnXOdZcFXM9BU7fY8qHncl8Ten7H+eCMn93qaVZuNbOe7sofez6276F15T52
9/zO/a6krkL3dzieaq2ew+Qcu6n+/3R82KUtd9Mih8n5PbQN7VpHDkMrcpg0
fW0u9b+/2HvW6MwlVIYn85xZP7vNB9XT2j/qST3tXE+1Vs9hVvjZpS13cnfu
c30sdP/6e+76rtunzuxzVs4hh0nT1+ZS//tLteHsNnZurJ7Uk3pST3vXUy05
zDltyd9i19Xc3SefHIZW5DBp+tpc6n9/O+Qwu97Uk3pST+pp1dsORucwu97Y
y7XNvu9rz2f0CVqRw6Tpa3Op//2l2lAbAzDDyByGd5l9bnPN0eQHbahHWpHD
pOlrc6n//cXes7yfATCLHIbWSq4jcs3RfrQXrchh0vS1udT/Ge7et7yXATCT
HIaWaj7P5TxoL85daUUOk6avzaX+z+Ez5wCsRA5DK7XnN86F9uL8lVbkMGn6
2nza4CzaE4AVyGF46ul3G1+/Q/f7+1xaLRP6PbQfsf38fm3sWufU9mPbLS3n
yGxEDkMrcpg0fW0+bXAW7QnACuQwPNHi35iKfWY7lrnkLBP6/S5PiZUp9trQ
emI5Sc52U+VMbbMXOQytyGHS9LX5tMFZtCcAK5DDUCuWwTzNYUb/XpLDfP8e
u/Yltr7cHOZu+dj1MXIYdiKHSdPX5tMG59GmAMDO3p7DhISufynZbur1oXX0
JoehFTlMmr42nzboo/TcIdUOd38XqV0XAMAO3p7DpD4jFMplaq6Hyd1mL3IY
WpHDpOlr82mDfnKuH009fvfc00wHAGAnpTlM6HM9d5/DCWU9od9Dr8lZf+6+
xbZ3fe3d8qn1pvY9VI6e5DC0IodJ09fm0wb95GYusWtcWuQ2ADCa74ehNec3
fzqpTuQw6ym5Hj+2jpxt5Gy/Zv29yWGopQ366ZnD1GwXAEaRw/CU85m0k+pI
DrOWkddG5WQ1LdbTgxyGWtqgn9IcJvXc92Op7BjYT+w6d7e6G/PIYXhKH447
baw7aV92N3qOIYcZT19bg3booySHCb2X1oyD2hP2cdp59GrU7zxyGJ6o7bOz
+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
2V2+1/qxlebTMTX9YNU8U37Xrg5XadM7OdlITq4Ses3dMnfXy8Db6QdyGKDM
6udY9BW6RuXumEjNVXKubcm9/mV0DsO6Wh6jJcdd7LjNfW63Y7Q0Uwldk7DC
/vTK71b6aV3PK+ZpKSNzmNz1wxvpB3IYoMxO51u0F5vj3v3NLzUnyJk35Dwu
h+Gj5TFactzF1pWb1+x2jJZmXqFyr/C+0jO/S7X397ZCj8XKN/K42Tl3ud4v
yUlyHqvZ1kpyxk63shth6kcOA5Tx3rKHFc49fv63Zk6SO295cj+1TbfzbznH
aMlxF1pX6DWl276uYwW59fz/t3c3uo3qWhhAX72PflUdRTdDsb23MdjAWiM0
KQFjzE/gi2k/07bKmim7Lr3brWffqu1rmbr0tHGpDe6iVf/I9v5MV5qvNE2m
/FlWq8/TaN8ybSKHAXJ8nrxb5pqydX8QuX/I3ttux30P2XsV+/o9jdxHM/tU
bR9sjcv+G51JnT182rp3u6009Ow33/tH5Jw24txZmi97DPFctu+1tPe/tIcc
BshxbfZukXvb72l77iUi9yORe+Dee5btOtnf72XkPprZl6Lvte7He/bRWVp5
xXbaVlkzZdelZ5vVtntmvxidw0SPF57Bdp5H2/+fdpDDADk+Q94ts/177ici
+Up0XO/9Sum+y35/D6P30ej+lM1hevfP0j46QzbzauUAM52Z30W2+2eZR/fD
6H4jd3kv23wu7f8f7SCHAXJctxGVuafYuwcpfTcdmT9zT1O7V9lbJ55jdg7T
mq9nH71S9vNgb/pVPlPOzO+256lalnx2f5hV2ps5bPs12A78ksMAGa7hiOq9
V5j9L/L8hGPgGTL7aCYLLN1zR8cd3UdXlul3sqoR+V0tj2uVfzSH4Z1s+7XY
HshhgAzXcUQ9NYf5Xj/u7en7KOc4O4cpzRN5L7Lf2H/eyXZfi+2BHAbIkMMQ
VXqu6A5Ddh25JzkMPY72o6r1n6rNVxuf3W/sQ+8T2eZ7n2nbz8ajn5ulZR4p
a9T+vF3+mcfJ24/Bt6//LzkMkOG+k1F+fn7+Ge68LMfEPclh6PGU/cZ+9B7Z
7xda40bvSyvtm1ct++3H39vX/5ccBsiQwzDKk3KYX46N+5nd7+qKPluM95Qc
5rMuPN/Rfp5n5yRymPd5+/r/ksMAGe4BiJp9nzrrHtfxAc82+/w0+tzmc/35
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
        "], {{0, 761}, {
        1122, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{1122, 761},
      PlotRange->{{0, 1122}, {0, 761}}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[300]=",
 CellID->810394010]
}, Open  ]],

Cell["We can zoom in:", "MathCaption",
 CellID->1377198042],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"exampleBCellReceptorFigure", "[", "\"\<Results\>\"", "]"}], "[", 
    
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]], "Input",
 CellLabel->"In[301]:=",
 CellID->988744528],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
vazqrftmixwmtIzUNHKYPdRkI6G2rcnvav922UfkMECJNx6rUKf0uKr0GC12
nHfKMd5KZSHPm9qs9P3gTXXDnt50rczTHCY2f2qaU96jd1Syb7fKYXIzFzmM
HAYIe8OxCW3UHuPdPZ+aRg7DKt7SZjXb+Za64RwnZzJPcpjUvKlpTnmP3tHd
9cWxaXPbpXR/kcPIYYAypx6P0N7THCZnmrus5ul7+0r790plIc/pbfbkPeAz
n/cRdnTatTIrXA+Tk+ms/B69o7scJrRPP81hvts3lM9830rXtfs+IocBSpxy
/EF/o3OYkul2ef9eqSzkObnNnm7b9f3j5LrifLtnMk9zmNz33JzPRkrfo936
30r2kZL9JZbLlK4rVoYdyGGAEjsfczDW6Bwm9N5e+v6+0v69UlnIc2Kb1Yz7
d+eo12WcWFe809057Opq36Nzzp9L59n1PXpFqf0wN4P5TJvbLqVtKYeRwwBl
djrGYK6nOcxdxhKa5tRjvJXKQtqJ7dVym+QwvMUOmUzuZyDXaxi+H9dOE3pu
t/foVcXqKCd/+Z62pG1KjrfkMHIYoMzqxxWsozT7uD5O5TCx10PXwe72/r1S
WUg7qb16jPWp62PgRKteK9PyvHfk30p1uKrSHCY2bWnb5Bxz3ZXhjfuIHAYo
sdpxBOt6+v5999la7D079dqO798rlYW0U9qrx3Z8v3d4H+HNVslk5DDnio21
JfuefaQvOQxQYoVjB/bg/fu5lcpC2gntdcI2wC5mXivjPfoMoe8Ttbj20D4C
sA45DLm8fz+3UllI27m9jO0w38hMxnv0GUI5TGqa3GXPbm/7CMAvjtXJ5f37
uZXKQtqu7bVruWFlTzOV3tfKeI8+gxzGPgK8gxyGXN6/n1upLKTt1l7Gc+ir
Zf/KzWRy+3Xot9d2uL1dqm5afi9p19sO/D4MUGKn8Y255DDPrVQW0nZqr53K
Crvq1c9i55wlec3s99rd36NXEGr/6/2VrFimGeQwQIlVx3TWM/uzkBM+R1mp
LKTt0F6r7eNwslHnwzXvaXKYM+xYHzuWuQc5DFDCMTyt/Pjx44/bKetqSV/b
xw5ttUMZYVd3/et6zNS7D5ZkMTk5yPf8d49rp3mSxRjH/rRjfexY5h7kMEAJ
OQytyGHS9LV9rNxWxm3oL5R1pKZpXYbcLCY3A0llJ3fLyc1b5DDvpA1/kcMA
JRzPk2v2d4ue3FaxUlmIW7WtVi0XnGaHHOb7Pa5FDpOTr6SmKc1ijGn704a/
yGGAEqudp7Kums+5VvgbsX/nZj762j5WaytjNfSXk3V898OTcpjY/K2mmfUe
TV/a8Bc5zBg5n7nGno9Ns+JnuJzLvkYuOUy6flpMwxpWaquVygJvETquv97v
uf6S9TzJYVLz5k5zt/xV3qN5bvdrknuTw4xTe71izTTQy9vGSOrlHqddb6nX
QvPHlp87jxyGWqu01SrlgLfZre/NvB7m7r1ZDvMe2vAXOcw4oX0udr1i6vqY
1LKhNTkMuXKOq0L5yZPXUs/lzDOqfj7/zXl/YG2z28rYDHPt0P9yPotIvU/m
5Ce1GUtuedibNvxFDjNOaQ7zfYx+N88br99iPvscuWpzmNrXVs5hYuN4ahr2
MLOt7CfATyXf+2iRw+S+97bMYox3+9OGv8hhxmmdw6SWCz3IYcjVMoepOe7L
OfabncOUTsO6ZrSV8Zhd5eYFK95W1zKH+Z7n7nHtNHKYd9OGv8hhxinJYXI/
I7UfM9ouxyHM1yKHCR27Pc1hYseDchhKzcpgYFctzsdn/O3Q73JzJG3ALNrw
FznMOLk5TMmxuf2Y0eQw5GqRw4Sme5rDxF5rtX/nfBaZm7mztpHtZAzmBDKA
vnKu5dEGpLS8jmz0bQdymHFafx66yz7GWXYa35irZQ6T81ppDhObp0ddXB+H
8pjYfKxpVDvZHzjFXbb+ud2Nz9fXQ9OHpsmZPlWeHTKAkvNSOQwp9pG+5DBj
5ObSoedK8hnoSQ5DrtY5TOj4PDZ9bBmx5fSoi5HzMVbvdjLucprcMbxm/C6Z
pibvX1HpOcTn9dR79Ip/q7bBiewjfclhgBLOB8iVcy1KzmeRNZ+Dfj9fst5e
799ymLP1bCf7ACfKzUdimUltDpP7+i45TCxnkcPwRO1xXO51Z7FpQ8eAJ+0j
chighByGXI7xnlupLIT1yu60P6dqkcN8nktl+qnxvuS1lfpkzhgRez11zrvy
jTFyjuOe5qF3fT13uTscxwG04j2QXHKY51YqC2Gt20m7c7qWOUzu66HxvuS1
Ffpmq+Mw79Gk1OQwqetj7ubP7btyGODN5DDkcoz33EplIaxlO2lz3iB2jhU6
hyuZ5/p6bLwveW1m/2x9/OU9mpTSHCbn2pac3OZuutBz9hFiSsdN19+xMvsk
uRzjPbdSWQhr9dm09uYt5DBlddVjvbnn2N/nydfHtdN8P3e9v9N79Ola5jA5
+0BsnpJjyl32Eb8P019JrnL3umMzVmJ/JJcc5rmVysK9VhkMvEko44jlKTVZ
S+oz9dj92TlM7+Otktyj5HHpPKksbeX36NOV5DCpa15yX8u5puaUfUQO099d
DlOatzj3ZRX2RXLFxr7Vb6tYqSzce9JGq+1vMErss+/QeVUsGymZJzb2p5Y7
qr+OWE+LHCYnGyvJwk46xz5Bbg5Tk9U92e9yy+TmVnJL9QWYLWdfhRw/fvz4
43bKulrS19ZX20baljf7uf+Xnpet8Ne73448xsptg+t0n8ex+VPTfD9fui8Y
O8fJaZu7aUL7TEmb18yz2z7iepj+cvMXOQw7kMPQihwmTV9bX2kbGUNBDnNX
H6PHhSc5TGre1DTXHObEc+wT1LTz9/nt9fH1tdRyc6ffdR+Rw/SXe/2LHIYd
OIegFTlMmr62vpI20p7wixzmdz3MGhdmXg/zeS1nut5tQJh+2pccpr/c7x/V
vgYj2RdpRQ6Tpq+tL6eNjJvwp7ef360wJjzNYe5eK5lmdhuQ9vZ+2pscpr+S
sTZ0ncwu+xPnsz/SihwmTV9bn2tZodxbz+9qjqFyPsutLUvuNpc8zp1mVhuQ
7639dBQ5zHpyr5+BGeyTtCKHSdPX1uc6VigX+87+6rcn25uaJvZc6/Ek5xz7
e7vvHtdO84Zz7BPIYfqSwwAlnFvQihwmTV9bX+rcCfjbm87vSq6Jjz03I4dZ
8c/4Oo59pC85zB522Z84nxyGVuQwafra2nyPGOq84fyudDyQw7RvA56Zfe3Z
6OvWRpPD7GOXfYqz7TS+vUXsfSfnPSk0zfdzsfe50P3YfKHlppZRsl3f5DD0
0PMcCU52zQBC7xN35+B3r+XOX7Kc2gyg5L0p5z3ye9qWYvWz8p+xllPIYfZh
3GEFcpi13GUnOa/lzJO77Nr7pfOlXouRw9DD3b4MpIUylthzd5lJyfyp13KX
F9umJ2NBzmchLclhYC45zF6MPcwmh1lHKlcJZRg517/E5m91Xw6Tpq+tzXgI
dUpzmNj1KbH5P8+Hrn0peRzKAFqNA6PHEjkMzCWH2Y/xh5mcd6wj1Q4l18OE
ji1Dj1vej+U/chh9bVXGQqjXKodJzV8yfWkO03oMmJHD7HqDE8hh9mP8YSbv
getomcOk7t+99n1dS801LqWZTawMKXIYWgnt70C+UMZxvZVkLKNyGMdBQAty
mD0Z/5nF8cc6ctoh95jxOl3o8d39u/KEpo9NFypv7LncepDD0EJutgnEhTKO
0OOVchiAFuQwe/I+wCxymHXkXN/SY/m9l9tjvXIYngiNe9oH6rTKYUqzGjkM
AE95L2AGOcxa7j6fl8P8TQ5DrVgbaB+oU5rDhB7X5jDXeeUwAJTwfsBocpj1
3H2HqNd6Wixjxv4jh6FUal/VNlAvlKnc/TZMaLrvrCQ1X871MDnL0e8B+Mn7
AaPJYWhlZDYih6FE7m8vAXVKv0O0yp9+D7Ti92GAEnIYWpHDpOlrY5WMb9oG
6slhgLeTwwAl5DC0IodJ09fGKa1rbQP15DDA28lhgBJyGFqRw6Tpa2PU1LO2
gXpyGODt5DDn8N7ACHIYWpHDpOlrfT0Zz7QN1JPDAG8nhzmH9wZGkMPQihwm
TV/r52ndapvx7v5NnV1u/Gl2e2hLYDY5zFm8P9Cb4xBakcOk6WvttRrDtM14
K1xDUVMG+8rfVmjL2vYHaEEOcxbvD/Qmh6EVOUyavtZWy/rUNuOtcO4uh2lj
hbasbX+AFuQw5/EeQU9yGFqRw6Tpa220Hre0yxw55+7f3x/JeS00fc7zuVmC
/eVvOfWd81zO94i+5w21Y8l6AFqQw5zJ+wS9OA6hFTlMmr72XI861C5zlOQe
ua+F8prQ45z55TBpuXVa2j7XHKW2XUPTa0ugFTnMmbxP0IvjEFqRw6Tpa/V6
jlXaZY7WOUzOuff1eTlMWEmfC9Vnqr5L2uCurWPXx8hhgJHkMOfyXkEPjkNo
RQ6Tpq/V6V1v2mWOljlMzrl7zutymN/uvucTm7ak/mLfBWuRw+Su5y1tCfQn
hzmX9wp6cBxCK3KYNH2tzKjxSbvMUZLDhM6nQ+fYcpjnQr+5crf9pTlMrL5b
5jCp9bylLYH+5DBn835Ba45DaEUOk6av5RtZV9pljtrrYVLn4zU5TCrPuTt/
d/t9/FCTw5S2WWi+0uflMEAPcpjzec+gJcchtCKHSdPX8oyuJ+0yR8scJnS+
XXtOnyrPrPoa+Z6dm8F8ps3NVuQwwInkMEAJxyG0IodJ09fiZo1H2mWO1jlM
bhbz2c92y2E+dTZyXan85XvanPrOqedUblLyWmp6fR9oRQ4DlHAcQitymDR9
Lewt57b8lpt5XG93r8Weu3s+Zx45TDp/+Z42t75z85Gc53PmS+1bAC3IYYAS
jkNoRQ6Tpq/9bfYYpE3myc09VvtbYX8d0W9K1qEtAXgL7x20MPsciHPIYdL0
tT+tUB8rlOGtnLun6+fuuevvsqxAWwLwFt47aEEOQytymDR97ZeVxp1VyvFG
zt3T9ZN6bpX9V1vyROy3iNzyb8A4+hxPGbvJNfv44oRjk9XKsuutdT0wx8+6
n30evvK5+916rs+tsv9qS3Kt/B69O/U6l9+HeR/9jCeM1eR6epx9nX/UcftK
+/dqZRlR/6u350pt8jb2wfs6ieWP1/fsVfZfbUkO9T2W+h5LDvM++hhPyGHI
JYd5brWyjKj/1dtzpTZ5m9nXVa1yTVasfu7q63p/BbPbY/W2fDt1PY96H0cO
8076GLW8N5LrLkf53ELny6l5Qsu4O1ZOzR9b1ipWK8vsTEUOQw+ntOkp2wH2
5bnU/xhymHfSv6glh3m3kva/O2+PZTDX+znTtnh8t/5VrFaWVN5xl23lPJeb
t8lhaO2k97RTtoN3G7Ufr3aN00pl+WmlspxKDvNe+hc1VnufYKySa7Rrc5i7
c/tUZiOH6S8nh+ndTjV/chhCVjsPg7cb3RdX7PsrlWmlspxIDvNu+helHLO+
W+h7PXf7RE7eUZKNyGHmKs1F5DCsTg4Da5HD/LJKuVYpx6nkMO+mf1HKMese
YnnJiNunDHfnxHffObm7H3v9bhkl5/exZcyuu5Vvb89hWi6LuULjFjDP6H74
fbxyXXfouOZ6P7SM0P3Y8mPTz7BKOU4lh0Efo4Tj1XfLOVf/nrbk3PzufP8u
Byg9f695vIrVypKbe8TaNpTrpOaRw9CSHAbWMqMPhrKT3Dyl52srjEkrlOFk
chighOPVd8vJX76njeUwT86r5TDj5bRdaJoW18PU7jtyGK5yxzBgnFk5zN3j
pzlM6PqZkmWuMiatUo4TyWGAEo5X363k3KXm3Dv3vLr341WsVpaSdkm9Jodh
hliWrH1hnpVymM/90PUyoelj9+/mjS1/lfFolXKcSA4DlHCs+m4l7X93Hn13
Kz2njs1/fT72OLT+lfbv1cpSksN8P5bDsAo5DKxpVg6TykxSOUzJPE+ut5ll
hTKcSg7Dh35GDseq5Ko9b579t9L+vVpZcuoulYXdPVeTl81oz5Xag3pyGFjP
6P53zVBiGcv345xc5brcu/Wklr/KuDR7/SeTw/BNXyNlhfcE9iCHeW61ssxu
m9ntuVJ70IY2hTXs0BdXvF6ltzds4yxyGL7NyqJj5/Y5eXAooy7NmlP3c14v
Xfdudi034zlvf261ssxum9ntuVJ70IY2hTXs0BflMLQkh+FqVH+7W09qfEtl
MTnz5b4WutYwtZzS5e9GDkMu5+3PrVaW2W0zuz1Xag/a0Kawht36Yunx8Ojv
GbVa327tshM5DHd697nYtS8l0+TOK4dpRw5DLuftz61WltltM7M9V2oL2tCm
sI6T++Po62haru/kdplNDsOdlXOYnGW2zGE+9+++Z3S3HDkM/HL9Pt9Ot1Ws
VpZdb622n7NoU1jHyf1RDgOU6Nnv7pZ9PWbumcOEHt+tPzdHCZU7tq4drXae
yr5+/Pjxx+2UdbWkr61DW5xHm8I6Yv3xLle/O76+Hs+XTpNa35Ppcx9fXyv5
vCF3+0oYJ2G80TnMk/Xnjpep8S+07tyxtWTdu5LD0IocJk1fW4e2OI82hXWk
+mPqGo+ca0BKrhOpnfbufmje1LS191uObcZJmKNX3ysZj2rmHeGt45Ichlbk
MGn62jq0xXm0KayjJIfJ/Qw1tY6abCVVxlhGElt/yxwmtL4axsl+/D4MMSOv
iUmNT6Fp7qYdMWa8dVySw9CKHCZNX1uHtjiPNoV1tM5hPs/Fvp+Tk8PkXsMf
W35thtLiepin45xxsh85DCm9s5jU93VypglNO9Jbxik5DK3IYdL0tXVoi/No
U1hHrxwm9Xro3KHkeLc2F7k7v3ly3YscZi9yGFaRyqud/69BO9CKHCZNX1uH
tjiPNoV15OYwoWvnc69Hia0zlaGkynfNRELXuKQ+Y459RyC0jtAynh63Gyf7
kcOwgtg4GHuO8eQwtCKHSdPX1qEtzqI9YS2r5jA5ZRvBtf7nkcOwAjnMPuQw
tCKHSdPX1qAdzqNNYS05OUwsT8nNWmKvxbKX2WOGHOY8chhyteyLd9fJpa6d
y7nOL7Ws0PWAd6/drev6XGj6WFl2zzF2Lz/rkMOk6Wtr0A7n0aawnlTOUvN6
zjxPzi1qtqfUXVlGME72JYehROsspmS5sTEoJ78uvfaw9/J3JYdZT+r4I9Vm
d8cid9li6fOhMvQ63omRw/CEdjiPNoX16Jdr0R59yWEo1TLbvT5OnSuGHvfO
YXLKIYdhhtz97u5xznwl92v6QEn5n5DD8IR2OI82hfXol2vRHn3JYSjVI4fJ
OfeSw6xBDrOO1D4a21fvrj95el8O056+tgbtcB5tCmvSN9egHfqTw1CjRd+s
yWFi8+Sce+Yuq6R8ueegqXxnF3KYdaTawfUwv8lheEI7tPedB99lw9dpYs/d
LS9n/cCa9M+51P8YchhqtM5hPo9Tx1fX+3evXZcVW07uskPLzTk+PCmD+UkO
s46eOUwqvwzlME/ynNj6npLD8IR26OOuXnPGrZppSl8H5nGsOY+6H0cOQ62n
fXR2H69d/+xyz2Z8XkfuZ76pNgtli6FzndwcNLb80fmlHIYntEMfoXqNZbU5
r8eeT70GrENfHUt9jyWH4Ykn/XV2X5fD1JHDrKPm/KPH+krXO2P/kcPwhHbo
I3cM+85qc6/zk8PAGXI+T6Ke+p1HDsMTT7KMmX2+5brfNm4Zq9cSOl8Zsa7S
10una0kOQy1t0E9JDpPz2vdzsbFQm8Kerpms2/Mb88hheEofjjttrDtpW05x
3cdq2icnY4md06T2i9n7jByGWtqgn9IcJpS5tFovAIwih+EpxzNpJ9WRHIZW
RmYjchhqaYN+euYwK+fCACCHoTXHN387qU7kMLQih0nT1+bTBv30ylVWvz4P
AKCl0u/g3H2f4u7x9bXUNHfLz5235LsXsfVd572bPrXc1LaHytGTHIZW5DBp
+tp82qCP0t8qyP3uZM73M7UpAHCCJ7/7FMosRt6PlaGkbLHXS9ebu/zQPL3I
YWhFDpOmr82nDc6jTQGAnaWuN8ldRujxLjnM3XSxaWtzmLvljz6elMPQihwm
TV+bTxucRXsCsAK/D0OtWAbzlhwm9P2h2Hy56w2VM5TJjMpH5DC0IodJ09fm
0wZn0Z4ArEAOwxO9cpi73CH0PZ/YNKH71+lLcpia7wiFro9J5TCxcqbW2Ysc
hlbkMGn62nza4CzaE4AVyGF4qmUOk5uplE6Tymyu2xHbzu95U9enxNYfW29p
OUdmI3IYWpHDpOlrc6n/czw5TgGA1uQwtNLqehjW5viVVuQwafraXOr/DLHP
QABgBjkMLdVkMY6D9uLYlVbkMGn62lzqf3+517kCwEhyGForyWFcH7wf7UUr
cpg0fW0u9b+/VBtqYwBmkMPQy+xjm9jvtFBPPdKKHCZNX5tL/e9v9Rwm9Bt7
O9zUk3pST+pp1dsORuYws9vj9Lbkt2ubfT/Wns/oE7Qih0nT1+ZS//tLteHs
Nv65/n9s+DfjfHD2Nqsn9TT7Tz2tWU+1Rucws9vl5Lbkt1gOc/eYfHIYWpHD
pOlrc6n//cXes1b4vM2xsXpST+pJPe1dT7XkMOe05U7ujn2uz4UeX+/nLu+6
furMPmblHHKYNH1tLvV/hrv3rdgxw8j3uc+x8fd6r8egqVts+tBrufOEXnc+
uOY5xNN6Su0jd/tDbN/ZoZ7uyh97PbbtoWXlPnf3+s79rqSuQo932J9qrZ7D
5Oy7qf7/dHzYpS13k5OPXI+RQs/F7ofWoV3ryGFoRQ6Tpq/Npf7PUZOzPMll
cqcPnYd9P76bJvVcapl3j3OPk2ccBzw5hp+RK8w6h2hV5px9pGbfWbWenj7+
fi5n2tJ17JrDPKmrJ+ve5b179Rwm1X65bbVjW9YcM+ykRQ6Tmje2jtPqc5QT
90XmkMOk6WvzqPszPWnXkuOy3GO30nPcUJ5Qc65Xeix9XedTJct5ehyfUwex
jGvmOcSoeirdR06qp9L9ILa9ufVSm5vOrKfats19LZTP1KxzB09zmBFteUoO
U1pXublCbz3XmzqeCeUwd/M8uU8+OQytyGHS9LV51P15erx/xY5JcvOau2PV
VN5yzV52zmFK66nmOL62PlY4HxxVTzl18l0vq+YwNfX0JIepzRJyzm/v1jWz
nmrbNqceP49brXMHrXKYEWPoXb+P7bclr49oy9y6qn2tl5I2rln23f3rur9f
j+UqOdOE1k8eOQytyGHS9LV51P1ZehzDpNaTc/x0PUdJneOGzhFLzpdDx9M5
x9rf6+9ZV7F6qjmOj50PXLe51bngbvWUu4/k1utO9ZTTx0rqKKc+Ss5nd+x3
NXV1V/ez9qcReuQws8fQkv16ZFvm1lVqfaP3rZI2rln293/v1nv3+nX9d9Om
yt1yO95EndGKHCZNX5tH3Z9l5Ht+7Pjj7ngmdKx6fa3kXDDneDp1fB07nk5t
Y8vbtZ5qjuNj54F329bi/GG3esrdD671WLoPrlhPd22f83zJPKl6js2zY79L
1dX3PnP33132px1uLcbQnP0z9/Hqbfnk/T20nN7z1R6rfP+X9T1pb/gmh0nT
1+ZR9+dodczyZH05x8ZPjl1bHB/nrr9VHZYcW7Y4h4g9Dj33ZL2f5exST6X7
Qek0K9fT53Hp86m6yJ0uNf13OWbWU23b9pg2tZwd9LwepscY2uJ9ZlZblrwn
p5YzUkkb1y6ffYw4huUd5DBp+to86v4crY9batYXO+Zrdeyamy+EHpecg/Y+
H7yb9slxfKtzgpp171JPT+orN3tYtZ7u+krstZp+1GJ9s+up5q9kf3pbDvPU
yLYsabdrf1g9h7mbLraMkXrlL9/LZx9yGFqRw6Tpa/Oo+zP0PH7JXWdq2u9j
1e9b7THr9/x3x8N360it/265resptkw5TP96ytkPcufdqZ5S5b7b90P1lOpb
1+WG1hdb1qx6arU/per5yfpa1tMORrdlbhvnzjuyLUvr6vr6rPPf0ccvb7Fr
Xe5abtYjh0nT1+ZR92cInQes0r4jM4GWfy3PB3vW05Nc4U31NPuvdb6gnsL1
Yn96ZqX3EG3Zp66+p5/d3qvsa6farW7tD7Qih0nT1+ZR9/uLZTC92rfmWG/2
ce7MY2P1pJ5a1pNz0mf18vZ6KqmXFp7+PkwJbQn3dtrH5DC0IodJ09fmUO9n
mJHD5Kz3+tn07OPcHY6N1ZN6yt1+9VRfL2+vp5J6aUEOM78t3+juOCh0bBQ6
bknNmzruud7PmSa17JJlXrdxF3IYWpHDpOlrc6j3M41q19wM5jPt7OPcHY6N
1ZN6yt3+z39jy3xbPeXWy9vrqaRePv99si45zPy2/NRN6rOa2POxaUZ89lMj
J4+4bkfqfs08s+5fn1utfUJW3JfYkxwmTV+bQ72faZUc5jrt7OPcVY+N1ZN6
Sm3r3XOp4+7T6+lJvbypnnK1rM8rOczYtkzVT+q5VtOsQA7z53MrttEdOQyt
yGHS9LU51PuZRnxGWpLB5M6z6m2k2duqntarp7t5rs+Fljt7W3vW05N6eVM9
5WpZn1ejc5hdbyOE1vP9/F275+wLs7chNn2snkPbnqqTHe6nXlvVyD7B2eQw
afraHOr9TD3aNXQMM+tYEt6i5/nxztRLW6fkMMSV5jCf+6H9Y+R7f+26UjlE
6xzmu87u6i93mpzll5b17vGKHE/SihwmTV+bQ72fqUW75h5fyWCgvdRn5tf+
9pa+p17aGlWfcph1tM5hUstt5cmxRk6WFLp/l4E8zVRKp6nJdXIfr2qHMrIH
OUyavjaHej9TbbvWvD97r4S+7j7LDJ0nv4l6aatnfcph1lGSw6Rylli+0VIo
JyyZ//u/pfPtZtdyfzOG04ocJk1fm0O9n6fmOMP7HaxL37ynXtrqWZ9ymHXk
5jB3uVxonp77ztMM5ns5I+ZZwa7l/ua4lFbkMGn62hzq/TypNm1xPAOMo5/e
Uy9tyWHeIfX9otxpUs+3cJfBjMxhVlj2TmVoyTEqrchh0vS18dT5mULHT97T
AJhBDrOGnFwj9lxJPtOrrG8/jnlSDzvV305lZW1ymDR9bbzd6zz2Hr36rXe9
XOsHAGaRw1BKDvO3nOuWapazore3Ne3IYdL0tfF2r/Of5f/Hhn+jPjsCgBXI
Yaglh/mtVQ7zdN4R3t7WtCOHSdPXxtu9zuUw4X9DEQBWIYfhidocpvR6mpzv
aeUuM3R89v1c6H5o/tRyc9bzPc3K5DC0IodJ09fG273Oa3KY6/tmyeupeUfl
MKljid3bFYCzyGGo9TQ/CGUksee+84vY67nLL11OaP7ccj9Z3irkMLQih0nT
18bbvc5rc5jQ41AukzNvzxym9HOg3dsVgLPIYajV4rOrls9dnx+Zw3zu51wD
LYeBX+QwafraeLvX+ZNrUq5ZSmxZodd65jAlucvdvACwCjkMNVoczzzNYULf
AypZVo/rYa7fOcotY06GswI5DK3IYdL0tfF2r/PTcpgn2ct1OQAAO2uVw+Rc
Vzzye0kly0+VJ7aM1DSh8q9ADkMrcpg0fW283ev8SQ7zGd9zMpW77yM9Xfen
/K2yl+86AQDYWa/jothyQ9eV5F7fUrKsu+dTz12fvx5Plq6n9TFoS6uWi/3I
YdL0tbFOqO8n16PkPHf3WqtrcHrV/wntCgDQQo/rP3p8t8fx25/kMLQih0nT
18Y6ob5rMpGa7xjlfHeptAw96wQAVuL3YZhFDrMnOQytyGHS9LWxTqjvFjlM
6lqX2OtPrsfpWScAsBI5DDPk/jZMzTKv92lL3dKKHCZNXxvrhPp+koN833Jf
y3ldDgMAf5LDkMtxDD/JYWhFDpP29r52l9nvcptZZzU5yOw/OQwAbyKHIZfj
GH6afY7BOeQwaW/vazIFddaqTgBgJXIYcjiG4UMOQytymLS39zWZgjprVScA
sBI5DDkcw/Ahh6EVOUza2/taKlMIfScoNl3q+etzNb97Iocp/5PDAPAmchhS
HL/wTQ5DK3KYtLf3tZxMIZS7hF5PPc6dZlam0KLOVvyTwwDwJnIYUhy/8E0O
QytymLS397WnOUxo/lhOc/fcbjnMrrde9QEAq5HDEOP4hSs5DK3IYdLe3td6
5TB306e+17RLDtPbbtu2W3kBeAc5DDGOX7iSw9CKHCbt7X0tN4cJ5SglOUwq
1yn5nZiT2223bdutvAC8gxyGEMcu3JHD0IocJu3tfa3mepgnOUzO95hylntq
u+24XTuWGYDzyWEIcezCHTkMrchh0t7e13rlMKF55DBhu27TruUG4GxyGO44
biFEDkMrcpi0t/e1pzlM6HHpb8C8PYfZeXt2Ljvnm/3b2KfcYEdyGKCE9zxa
kcOkvb2v5eQd11tqulCOkjNvbB1ymDXtXHbOIj/oR72yIzkMUMJ7HK3IYdLe
3tdyMo8V/05qt923Zffycwb74Vjqmx3IYYASchhakcOkvb2vyWHmOmE7TtgG
9uWYaR71zurkMHwzZpHimIJW5DBpb+9rcph5TtiGn07ZDvZk/5tL/QO7MF6R
IoehFTlM2tv7mhxmHtsAz4za/1b7XZSVyvLTSmUBuGOcIsdq76/sSw6T9va+
JoeZY/fyf5yyHexn9L634r6+UplWKgvAlTGKHHIYWpHDpL29r83+t1Cf3Ha1
c9mvTtoW9iKH+WWVcq1SDvjm92H4yfhErt3PMViHHCZNXxtHXZ9XB6dtD/uY
lcPcHaPdZcR390PLCN2PLT82/QyrlAO+yWH4yfhELjkMrchh0vS1MYxrv5xW
B6dtD3uYsd+FspPcPKXnayv0wxXKAFdyGIxNlHC+QitymDR9bQzj2pn72onb
xPpm5TB3j5/mMKHrZ0qWuUo/XKUc8CGHwbhECecrtCKHSdPX+jvld12eOHW7
T90u1rZSDvO5H/uu0d30sfux7z2lljHTKuWADznMuxmTKPXmcxXaksOk6Wv9
vT2HOXmbT9421rXr95JK5nlyvc0sK5QBvslh3s2YRKm3nqvQnhwmTV/r65rB
vLG+T97mk7eNdY3e764ZSixj+X6ck6tclxv6nlJs+auMr7PXD1dymPcyHlFj
hfdSziCHSdPX+rrLYd5U56dv6+nbx5p22O9WvF6ltzdsI3uRwwAl3naeQj9y
mDR9rZ9QBvOWOj99O0/fPta1w74nh4H55DBAiTedp9CXHCZNX+snlsOcXu+n
b99Pb9hG1rTbvlc75o0eL5+ub7d24XxyGKDEG85RGEMOk6av9ZHKYE6v99O3
76c3bCNresO+N/p6mhbre0O7sBc5zDsZi6j1hnMUxpDDpOlrdWrylLfUte2E
vt6w78lh4Dk5zPsYh3hCDkMrcpg0fa1ead3Nquuca3NWva1s9fJxrpx9L9aP
Un3uOt/dskqWcVeO1DJLHqfKU1rO2r5tTGA1cpj3MQ7xxA7H3+xBDpOmr9Xb
KYf5x4Z/q++bq5ePc6X2vdi1Han7JdPW3K8pR2q+FmVr0Z+NCaxGDvMuxiCe
ksPQihwmTV+rF/usNzb9aHKYPlYvH+eK7Xup/KJl/lFz/265sflyMqWWedGT
fm1MYDVymHcxBvGUHIZW5DBp+lqe0Oe5uecaOa/3kpvDXK/ZD70Wmye0jNhr
chgoU5PDXKcJjV+jcpjQsd6TbCWV6cTul4zlIcYEViOHeQ/jDy3IYWhFDpOm
r+VJXVcfmibntd5yM4/Uc6WPr8+F7sthoMyTsaY2jyi9nuR6v2U5rtM8LWds
2hLGBFYjh3kP4w8tyGFoRQ6Tpq/lOTmHCb0ey1lycpvcrEYOA2VaXQ8Tmu96
bUnN/dyyhpZxff1u2txtys2H7tZTwpgAzGDsoRU5DK3IYdL0tbDQOUDsnCG2
rFlWymFKspiV982Vy8b5asaakutkTjFym06sP2APxh9akcPQihwmTV/LE/vs
NWfM2i2H+c6c7p5LzROapiSLWXnfXLlsnK90vFl9jOpFDgOczthDS3IYWpHD
pOlreZ7W0245TM50pY/lMNBOTq4S+w7O3bRP1tdKq/WUXK/Yan2wGr8Pcz5j
Dy3JYWhFDpOmr+V5Yw7zNHeRw0A/9sG1aA9WJIcBSshhaEUOk6avjbFyDhPK
UFrmMCUZjRwG0uyDa9EerEgOA5SQw9CKHCZNXxtj9RzmO3v5TB/7bZhQbpP7
+zG55VnVymXjPeyHa9AOrEoOA5SQw9CKHCZNXxtjhxxmtb+V982Vy8a72Bfn
Uv+sTA5zLmMPPchhaEUOk6avjSGHkcNAD46Z5lH3rE4OcybjDr14X6MVOUya
vjaGHEYOAz3ZJ8dS3+xADnMm4w+9yGFoRQ6Tpq+NIYeRw0Bv13+rmrbUL7uR
w5zH+ENP3uNoRQ6Tpq+NIYc5J4dZtVzw7e63s92e3WA3cpjzGIvoyfsdrchh
0vS1MWbnMLveVrRquQDgmxzmLI4/6G3l42/2IodJ09fGOLGeT9ymHG/dbgD2
Ioc5i+MPepPD0IocJk1fG+O0ej5te0q8eduZJ3ad2A7XkQHjyWHOYWxnBMcR
tCKHSdPXxjitnk/bnhJv3nbmuO5z349D9wHkMOcwvjOCHIZW5DBp+toYp9Xz
adtT4s3bznih/e3zvBwGCJHDnMHYzihyGFqRw6Tpa2OcVM8nbUuNt2//U9fv
z+R+3+atcrZdPQF35DBnMLYzimMJWpHDpOlrY5xUzydtS423b38Lse/Z5M7z
Fqntdj0MECKHAUrIYWhFDpOmr41xUj2ftC013r79Lchh8pVcDwPwTQ4DlHA8
QStymDR9bYyT6vmkbanx9u1voSSHefsxQer3YQAAWnj7MRftyGHS9LUxTqnn
U7aj1tu3v5W7HCb1OzFvFqovAM5lnGc0xxe0IodJ09fGOKWeT9mOWm/f/lZS
18PIYv529/vGqeneXmcAuzJ+M4NjB1qRw6Tpa2OcUs+nbEett29/K7k5jDyh
TiirUY/wLn4fZl/Ga2ZwzEUrcpg0fW2ME+r5hG14Sh20UXM9DGVcUwTIYfZk
rGYWOQytyGHS9LUxTqjnEduw+vUPq5ZrJ3ffr/Fdmj7UMbybHGZPxmhmcYxA
K3KYNH1tjBPqedQ2PFnP3fnmLjdo7U3XGc3uv/o+K5LD7MeYwEzel2hFDpOm
r42xez2PLP/THOYfE/9q17/7/sE6vvelt+UwM/v+kzHjzWZnYKfnZ3KY/eyy
b3GmncY31iaHSdPX+juhjmfkMDXvBbPPxeQwrOCNx1Gz+/6TMePNtFtfcpi9
7LJfca43Hj/QhxwmTV/r74Q67rUNd8u9vgeUrPvumP7788vYa6HpYvOHjs9j
y9/5mB5W5Xx+T9qtLznMmkLXV+2yX3EuOQytyGHS9LX+dq/jnuUP5TC164/l
HLHj6dBzd5lMzvF56LEcBvp4ci1aaU5bMy7E1v9mcpi+5DDruTvPde7LKuyL
tCKHSdPX+tu9jt+Yw+Q8f3dOVpvf7L6P1Nr1NxdWof5+qzmfz81MU1mqHKZe
ztiYyr5KrmXMfe6UdpPDjJE7/same/sYzhrsh7Qih0nT1/rbvY5blz/2GfP3
6zXrH5HDpI7NQ/OmyrC70vdunwn+Sf39rWR7SvtrTs56N23oXL90rDip798p
OS+taavcrDt3LK7Zf3YghxkjNxNP7Te77Fec67TjCOaRw6Tpa/3tXscjr4eJ
5TG5ywsdM+d8rvrkuPx7ntJl7r6P/FRybYbPBP+m/v5WWic1fTU1zd21E7n9
PbccJyo5Ly1tq6fjuBxGDtNa6vOl7+lSy4GZTjqGYC45TJq+1t/Oddy77K2X
n3ssHvt8+8lxeWq5b8thQu/njkX/pv7+Vlonpf0193U5TLmS89KStgrVeWzs
jeXwuftDbHlubiW3VL+BmXL2U8ghh0nT1/rbuY57lz1n+aXHODnH2N+Pc+ep
OV4vWeZbbjnt/j1dzbHtifN9z5tTf2+6fba5RV+865d3830/X7rut/b90K2k
re7q/64eU/PX7A/X6XfgepgxSsap0L4Tew1GsR/SihwmTV/rb+c6XqXsT8/F
ao7LY8f6JcfqOcf6q9TzE7lt9Jk2tay3UX9/K62T0vPomvPx1Hl+6d8pbXX1
dMy+q9/YuJ3zWslYf0q7yWHGyBmjrtOmnoMZ7Iu0IodJ09f627WOVyr3k3Ox
u+nvXkudd+Ucy+fMv/MxfczT49Cc106m/v5WWicl/TJ0vp6Twzw9hz+p74fa
JLftcnOYVPaVk7HIYeQwveSMUU+mh1Hsj7Qih0nT1/rbtY5XKnfLY/oV/1aq
61q1x6Gp595C/f2tpE5q+35JzhrKA3Lym9P7/t1zOW2Xm8OknqvJab6fC93f
vd3kMGOcNvbyXvZlWpHDpOlr/e1axyuU+/v9oNdn4iv8rVDXT9W8d/tM8Df1
97eSbdL354nlMDnzpuonlX2FMvrrPKFlp+bdud3kMECJE48lmEMOk6av9bdj
Hc8sc+xalxafra74t+M+AivR9+e5ZuWl885ug7e2G+OE8r7QNNfnY9OcmsMz
h32JVuQwafpafzvW8Ywy54z9qWkc08M76fvz3J0Xlsw7uw3e2m6MFbpurMc0
UEsOQytymDR9rb8d63hUmUs/x8nJaWYfnzumh/H0/TFCn8dfpylZ3uw2eEO7
MV/sOt7QNKnrY1LLhlJyGFqRw6Tpa/3tVscjyttrnI9933/1G1Bvdv99c9+X
w6zL78OsozSH+dwP5S4njSGswz5FK3KYNH2tv93quFd5dzlmiJVx9bIDjHYd
M0tzmF1vO5DDrKN1DpNaLtTYaXxjbXKYNH2tv93quGV5dzpmTeUvu2wHwCjf
46Ixcj1ymHWU5DCpnCWW0cATxnFakcOk6Wv97VTHrcq60ziem7/ssj0A8JMc
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
kvO32fnZCbfa8+PUPiCH6S/WrtfpWtR5qG2vfVE757nbvtDxaCqjCbX757nY
67Hn7/ar2HN3y71bT2z+VBlD5Q6VP7X9sW2Ole3zGn+SwwAlYmMslJDDpM3u
a6ljuJ2VbFPp+XjsnDt13nW3jpJz+FHnaSfuEzE158o57fZkX8ktg1vZ7Ul9
39V5yT5Qu/6S7bvu17vMF+ub3/PEpr17/fvx3f3Q8krmC92PrSd3/pJ5U9OU
ljl3XanX3koOA5S4e3+EGnKYtJl9LXQ8fIra7co5T4qde6XOte5ee7K872lm
193Oas6PS8/Ba9t2VLvvLPe8v1UOk3oceu5JDnOynBwmZ9rr67l5TyobOjGH
qVm+HKaMHAYocfJ5GWPJYdJm9bXY55JPllPzOWgvvXKYu+3JPd/Kmf5u/pxz
uFb1+tbxv3UOc/c4dxrn5+Vyx5sROUyPv9Pb+a6dQu8XT3OYu2wuNW/sfion
mpXD3JVPDjOWHAYoIYehFTlM2ui+NjIXmT2O9MphVv2TwzxT2u65+VnpPLPa
fXe545ocZk3fOUFJzhJ6PZbD3a0z9vqT+ULT380Ty0pqcpgWZc4pW6ocbyaH
AUrIYWhFDpM2sq/lfl7ccn0zyWHG1VkrM9f/5nY/Qe5Y9rSd78ZP7fxcyXtR
aU5z9zj03N1743X6UEZxXU7O69dpUjlHzvJKtjVV5tyy5bz+RnIYoIQchlbk
MGmj+losg5HD/D3fmDPotc7TZrfXbG9t97fRzvt7msOMXn9vq2Tw9tG/yWGA
EnIYWpHDpLkeph85TP+6as31MGPb/Y208/7kMOH1PXnfa1kOfpHDACXkMLQi
h0mb0dfkMOn5Zp9zjTxPm91O3+Qw49r9rbTz/nK/u9Pj/a1mmSParvX2rriN
O5LDACXkMLQih0mblcN8/turv5d+x72HJ7nErreR9dTLrPI4P38H7bw/dbEe
bXJPDgOUkMPQihwmbeb1yz3LsMJ126uMY6uU486qZVvlOrFdbuSb3VbauQ31
sRbtcU8OA5Twfk8rcpi0FXKYGet5Sw6z8ni6Wrm+y7Na2eCbjGQ+db4W7XFP
DgOUcExBK3KYtJF9baV1fV7vOd7MHsdWPkdbvUwrlo/3cZ3KutT7WrQHwHOO
K2hFDpO2UjYycl3XcaZH2WaOYyufp61Wnm8r1hfvJodZl7pfg3YAaMNxBa3I
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
lRwGKOFchVbkMGfZZVzYpZwAwLnkMEAJOQytyGHOssO4sEMZAYDzyWGAEnIY
WpHDnGX1cWH18gEA7yGHAUrIYWhFDnOWlceFlcsGALyPHAYoIYehFTnMWVYd
F1YtFwDwXnIYoIQchlbkMGdZcVxYsUwAAHIYoIQchlbkMGdZbVxYrTwAAB9y
GKCEHIZW5DBnWWlcWKksAABXchighByGVuQwZ1llXFilHAAAAC3IYWhFDnOW
FcaFnDJ8xrAVygsAAJDi/IVW5DBnmT0ulKx/dlkBAAByyWFoRQ5zjtljQun6
Z5cXAAAglxyGVuQw55g5JtSs+zOP8QwAAFid8xZakcOcY9aYULve6zhmTAMA
AFYlh6EVOcw5ZowJueu8+13e67zGNAAAYFVyGFqRw5xj9JjwdH1yGAAAYBdy
GFqRw5xj5JjQYl2+lwQAAOxCDkMrcphzjBoTWmcwxjMAAGB1zltoRQ5zjhFj
gnEHAAB4IzkMrchhztF7TDDmAAAAbyWHoRU5zDl6jgnGGwDg/2/vDnAc1ZUo
gG69dzZb+xo9RUPng+2yC4PhnJY13cQB4wBS3SEJwJvJYcgih3kGGQwAAMB5
5DBkkcM8w1nXA9cZAAAAOQx55DDPcMb1wDUGAADgP3IYIj7Hy4qNNtlzZe4B
AAD+UaMS8fdY+bPgj2O8XeZcmXcAAIDf5DBEyGGeL2uuzDkAAMD/k8MQEclh
tu8JOlp+1Gfbt/ZcOUyujLky3wAAAPvkMESOgUjuEfm7d5kcJt/oXJlrAACA
Y3IYIp9p25J7tNzb0nr/S2SZHCbHyFyZZwAAgDI5DJHvGBrJYaJZTU9fOcy4
3rkyxwAAAHVymHXc4Xuf75TDRLIYx3i7nrkyvwAAAG3kMLRmMJ++q+YwjvM6
GQwAAMC51KfMel9S7+fD9Czf67fdV/ZF58ZcAgAAxKhLyf6c3r185LPeUn5S
evzz99Hy1hzme5/5LTIn5g8AACBOPUrkGIh+Nu42f9n+u9dKz//OaI6e05rD
9Oz7G0SOAwAAAOLUoUREso87/dSOcefBf1rmwDwBAAD0U38S8dQcZrt/bz4f
WvIqAAAA+r297iTm6TnMdj/feF7UPhsIAACAMW+tN+nzlhxmu79vOj9Kn6MD
AADAuLfVmYx5Ww6z3e83nCdH31UOAABAjrfUl+Q4+q6jFVrm/j/V3vd7AwAA
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
   "], {{0, 0}, {
   1122, 761}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->500,
  PlotRange->{{0, 1122}, {0, 761}}]], "Output",
 CellLabel->"Out[301]=",
 CellID->2006014202]
}, Open  ]],

Cell["We can highlight the components:", "MathCaption",
 CellID->632012813],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigureHighlight", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}], ",", 
    RowBox[{"MemberSet", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"Query", "[", 
       RowBox[{
       "\"\<SpikeMin\>\"", ",", "\"\<G2S2\>\"", ",", 
        "\"\<path:hsa04662\>\""}], "]"}], "@", 
      RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}]}], ",", 
    
    RowBox[{"ORA", "\[Rule]", " ", "True"}]}], "]"}]}]], "Input",
 CellLabel->"In[302]:=",
 CellID->785230029],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Pathway\"\>", "\[Rule]", "\<\"path:hsa04662\"\>"}], ",", 
   RowBox[{"\<\"Results\"\>", "\[Rule]", 
    RowBox[{"{", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
tSNw+YYu+SbYyRr4BF8rjRZIHYrR1/VH8uZ1sUJ7HN5JSoIiKalzu2ZKTXOH
lPSGlHRVJS+3xGwKtEhJ+auBlAR8SUlQJCV1Tkq64WealHRy3atqIJqS1hfb
vSlp/Zj4+3q9pDIQSUnADykJiqSkzh1OSeuJWXRm1X9KWrc/umQz/8ysWLkh
uEHm4N+U3JzXSywoLcF5vV63JiUtbgHwPlISFLlFdi41m8qnpM2LcHI1REqK
zus2S8IuZyaEJ7t225lyckOXtNNl4YxUOFoXqDngl+ADgfyZXlNV9OB3I4C3
kZKgyM2xc5enpGMRKRMljh0/lXkt/5F45vNzKenxZrxZJh99C9SnpJpwlE9J
mdNh3Ty3A3gPKQmK3BY7dywlbVJDu5S06/jZzBtPpqTK+aSU1ElVr1I8L+5M
SfmTImynmwK8gZQERW6InTv5LCm6/FhWSs2misdPqliLlHSsj5OlpEtqaFEV
X6kDeyPz1vc4X78I101VWDz43RpgblISFLkVdq5+tp+aHa1/Xb84k5I2U69o
szPv1nctVSZcvkhJl9bQoiq+jp2DLX7y+9feh1lJSVAkJXXucKIpBo3Ds6nI
h9qrPwCvP6IapaTf+5PgfCnpqkour4ofo6QkYFZSEhRJSZ3rLSVFI9Kxo+hA
Sto8MKopKSVdwlXiWpnz6H5729x0ZIB7SElQ5K7XueXEP9z948LPnM9PtHZ1
LdxKqmvRJZenpM9dYeGSrVzeVBcKfrhrwASkJChyv+tc3YfBzzvWtasS3PkA
WN/mAz3d66qtXN7ae7rPEA6f+EAPpCQocqfrXOdRIhWUag6qzruWanNlyTO6
TUmN6mRc7iAwKCkJitzjOjdilPhUp6R+XNiv8y7cyuUNvmcEGMuukwjogZQE
Re5unVvGT0nfY6zyYDu8oRtISY3qBOBOUhIUSUmdGyslpR7TrA+zYj1SUucp
qV21zMHhAcAEpKTO1aekbyo58G7TZ0mf4NHSrnX3bqup4VJSpraTW3HdIGPv
d1kBoDduZJ3blWsyEalYRkrqZ1tDpKRLamB6bjEADMotrHPTpKRG37g7vMox
I6akVIWb6Bp+N/JYtRByo4He+LskKHLz6tzhlLT546Dvknu+cRf24tPmX284
vMoxE6SkJeazM8m2ayoTc7uBfkhJUOS21bljKWnz4v5nSWEvGhU+uVafG7r/
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
mEs2tix1aWi9MPNWz9+4k5LWcqfenjJMxr4elJT0Bl0NxT2NiU5vvpepJQgs
6yXLKihFc80m/hQjUvT1WClpfYXP3PpvbOZlJutvsTs1QSYsk0lJmzw1bkoK
FS8j+WdJS+wxUGZhtMLMVqSkDuVOvVWB1K/Myo4elJT0Bl0NxVWNydSTmdt8
HUtJNUsqE1P0MVb/MiP/fbdYQ+Vuerbkt/CS7u9w/t6f3SkpH4u+S/ampNEV
v3G3BPEnuvqS/lpdZitSUocyR8snMVWOLmQy9vKgpKQ36GoormrMmXqW61JS
6vt10fLRCi8ZjQul7u/rAqkVb2ngxSbrb7E7Z1JSmIY2L/ampIcGqVZ+MJej
KSn6LOlrb0qKNpJupY60uw5qnpHZ+/RMSnqD3obikvYsf05XlvQnddF1M890
zj85WhJ/shRdcn4orlW8p0eXj3sLmKy/5SnZcsGzpHempPDdYkr6pphM6tks
yf/qWVLnlpj1u6m17mogz+j2lkGelPQGvQ3Fmfak7kHrS1Cx/qUu/lQWq0xJ
qU0cHopGai7m4a2/w45Umqy/5bYdSkmbEBS+WIIv402TkjLv1qSk1LMkKWlK
qXz0fTe1Vvum8aSe7xpkSElv0NtQXNKeTSU1n9etC1yVkr6B6EcqJaXiVW+7
pl5+MjCfefpbF2Q28af4ovgQasSUlJfKL9+DJPotu/Ct9ZL8r1JS/4rJOhqd
xr6kUMFeHpSU9Aa9DcWgKak++6SKRbd7fihgh+og830ZXbj+kZKe/ZGSBrKZ
LZs8v4QdPSgp6Q06HIrzTQpT0nfJ3pT0/cA2ujB8N1o+lZJSlUhJPGNPkGn6
IyVJSe+0uSl8urxHcy0paVBS0ht0OBSXN+l7r6mpOR9wzv/U19/hrqHSqHc9
KekiUtIPKem8Ia8k7DHq/eL1pKSX6G00GqWk+sJSEmdEH1yOsTelpIuEj5sf
9OA4SEmXeHYn0trj5ynHSEkv0eFoXNukXbU9NpWJuXAQuN96D46xN5+PR6sf
xiclXWKMqwdHud0PSkp6iQ5H48ImPZU4OhzV1tZDLe59/vyq58uHgneSkq7i
0jExt4ZBSUkv0eFodNikvSbowgGppycvHI1Nl184AiAlXcUFZGJS0qCkpJfo
czT6bFW90dt/TD4lved5yre/myXwKlLShVxDZvWS2+J8pKSX6HM0+mxVvdHb
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
wG2kpA65GfVGShqUlNStfEpaq09JYbGwnhFT0qeP3d1DGwDuJCV1yM2oN1LS
oKSkblU+S8o8J6pJQ/m1pKTh2gBwJympT+5HXZGSBiUldet8Sso8P+onJUX/
MPwp5/tyyZgAjEJK6pP7UVcumWNwPympW8vOlJSJP6nynaSkX3/79PBzSTdH
P+oAdpGSuuV+1A8paVBSUrdS+SV8AhJ9N7Vk/Wu0BinpZHfOVwIwCimpW+5H
/ZCSBiUldavmKc89P1LSru6crwRgFFJSz9ySOiElDUpK6paUJCUBdE5K6plb
UiekpEFJSd3K/SsDt2vazcfzkZQEcIyU1Dl3pR60nkrRiJT0Kh2OSX1KWqe2
/MLMcikJ4EJSUufclXogJQ1KSnqVDsekMsVsklG4MLVcSgJoR0qa1cmvlHzX
EhA+BmFYUtKrdDgmB1JSJv78LDz2LT4pCWAvKWli6zvasaB0eN3Da/VJShqU
lPQqHY7Jrmc9lSnpWFC65CLW4QgDwAFS0lWkpEFJSW/T27DsijPrvzPKp6RN
4fpnSWe+YPDpb3gB4PwdLVrD5na5uXVmUlJqxc2S1K+f4GZdX9uZW/xhUtKg
pKS36W1Yjj30qUlJex8qFS/j9T26bngA4ALHHgZlPjnchKAwE6VSUipJFetJ
bSu6SuqtsD03kJIGJSW9TW/D0nNKWjey/hLX2wgDtOPvkkZxLCXt+nVzr9yb
koovPumUVNx0qjH3kJIGJSW9TW/DUplilj7+jbvMp2rrMpeOEEC/pKSBnPxq
xK5fPy1T0if4il3NpjcJ605S0qCkpLfpbVjqU9JXcXmq8PmUtGl59LrX2wgD
tCMlDSQaNyrLZ36NPt+Jvsg049izpPPr3kNKGpSU9Da9DcuuINP05/DIbOJS
byMM0I6UNJaab0SEJVPlN8s3t8LM6uF98/tr+CIsn6ohU9v3rdIINSElDUpK
epvehmWClLTuS+XdB2AOUtJAiqlnFIeDj5TELlLS2/Q2LOHHTQ+6qkef2Adf
APORkobQ7pb3iOVQSnqwy6MP+GtJSW9jWFrbjPAE9yOAFCmpRiahRH8N7yOX
N2D0u9KuXjze38cbwDFS0gsZmaZSwzvNvYk3m+/ona9H9S7pu5RUKRN8ipno
kj11OCVdtfXzlTy+icPc+gclJb2QkWmqZnjFJQY130E7X4/qSUl3ymSf8HFS
WKxFUKpf68JiN+inJV/u+IOSkl7IyLS26+5Tc/F0gaUTm7ncd/427vE5X4/q
XdJ3KalSPiWFv26KXXVA7g1K9Vvv55TppyVfL7mkzEdKeiEj09qBEc7ftg58
+gcXWmI+f976xzo45+tRvWv7LiVVKqakTyKSXH5Ank9J4TGzqTD66+bFplOV
b2XqCVuSen2/BzfNGVLSCxmZ1k6OcHgxD+cz8IjU/C18axTz9ajeJX2XkiqF
QxqNA2HJFhf/+grDRqaWR0tWRp6atzL11DQg7MKd3LsHJSW9kJFp7aoRXtIq
i93vko7r3SMqG5z6Nazh4f786ZIeDde7vOVo39cuT0kPD+WfTvZl06/UkuXP
kV/SO6J1k6JloqMRNj7VnQdfpBbe7/LDiXtISS9kZFq7/EaWv33/9fr353cP
Py0OrWWi/+9wtHeP77Vd+y6cKWUmIUPsu109Gq53eYf7vtYiJT0+pCcHNtWv
1K/H3rpBTcM6T0nfX6UkDpCSXsjItHZPSlrfER6fY0tJh3v3+F47s+++04/o
6iPuu3yPRu/dVX1fk5IqOxW9eq/fWi+JvhWWbE1KuoqUNCgp6YWMTAv5INOi
5m/9y+Az7WL3H58sXT5lWvfu8b12PiVl3n18r+3dd7tKPt6va4/MY/VISbMq
ZrTwTpQqnLpzrV9k3kpVUlx93dR2A1UjbBJDkJLeyeBcLnoBPz/ONZUsg8+0
i717fLLUbso0+r7LrzXivttV8vF+XXtkHqtHSqJ/j+9KKWlQUtI7GZwWWqSk
yu0+Psc+PNMujlL9lGkz8j1MmWp69/heO7nvMisON93Nfxw9eu/q+97U9ANb
+dHWDbcJM/MfPQyCfTEoKemdDE4LjSJSscKfmfZm0/Vz42/571rRqlL1b2o4
07vo6rumTOvCl8+1GvVub5ap38u7Doam++5bJhzS7/IlEK4Y1hOtM7piu97V
Hz9hB8MCt03mn9JiYPNDnS98+cDWdHC9PFXsvGJLptdPx/tpCbtISe9kcBpp
cVcKJ1ebTSyrILOe9NZMjDcz6tRbqYVhDZf0blPg2Hxp14qNpkw1vTvw0Kdm
L0f3WtOUlN93P+/mc0H0dWaf1tf5+JFZeXweO2gP9O5Blw9scSSXP1N264HN
dzDsb2rhecWhrq/n8ra9TaNdTGtS0jsZnEbO34+KdYabWA6lpLBAavXK+o91
Od+1z0Up6afCza+7ar5wpr3pXeuUVF9t0323/D2tFJek9mn+3VSZ5dKUdPjI
zHRhV4ELJ/NX2ft3SdcObHgUFS8FrQc238FUnS12YnGo6+u5vG1vc2DY6YGU
9E4Gp51jt6GaClO3uSWbYn4Kb7LMZmHlVDy6cP1r5qZ8zGf/lOkrNc1esrPu
ysov7N1VKemnzs1e3lVti95lZrOpJcVimVgRFvuu3rR3u6b0mxfrDq5b++CR
+aADp3xmv+dfPzWwu67z4VpXlay/AX3MGU7bNeb0Q0p6J4PTzt57UGVtmRvc
EvvToWjAWRLRKZxXh1VlEtZ3yYFe1/TuzCx0M9s5MAVdV9KidwdSUnTXZCJt
ZbVN991m10T31LqezcLiHk/Ngb+ba9q7A7PuaAeXxJz/8iPzQpc8S9oUuPCU
Lx4hlw9svoOpOlvsxOJQV1YSNu9b1RKEsmiBVEsOt2o4L+nmfKSkdzI4TZ28
HoZ3tPw9bsnOkL8rho8bTj4/is7ez3Q21buTU6bUwl01XzLTzuy7XXEmujvW
O/qRlJTfd0tdSkotTO2sJTsHXlfYtHeXHJ/HDsvDk/mrnExJ0QK7+v6VORKK
yy8c2HwH6xeeVxzqyko2L9aVf1Y5KCyfeSusf26NdjGtSUnvZHBa2zXCNdOG
zDV2Saek8EU4ne4hJeULHJiFRmeky+lv3LXo3SUpKb/Hm6akfIHU7ojuhege
ye+vJT033rxu2rsDx2emzTccmRc6lpLyBY6NZ/FY2ju2xwa2poObmNBoD15S
c+retPwZecJiu15Mr91epikp6bWMTyPLn2qK1dSZfzc1bd68lfo1H4gqJ96N
7gK7pkw/NkvWb60dmOK26N3hlFSfixulpJre1eSX/KQ3U6Cmqm8lTXt3Zlaf
afaDR2a9B/+vstHxzA9gJwNbeZt43JJIRp9YSsqsG3YztdasOt/RpEhJr2V8
WthcCde/trstfiPPj01siYqWCRfmi4XLWxxUu2Y1TX8a9W5vlonumtTu7iQl
fdsTZoHv8rDx0RXzv26Wr+tp17v64yffwfD145P5Gk+lpMzBsHkrtUrnA9uD
ZX9KyrwIq3rPCP8ceE+3gt2kpNcyPpeLXga/9+Wm2937PKLRTw9z0blTkn3X
1b57vF/telfvwWdJcw/s4zY3r/Wv4evPn3fAzLrr+m/ry+OkpEFJSa9lfC6X
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
FZbMNDJ/LmQurd8CZ4bo8XwkJZEhJZ3kzHqD4n2EPl0eaqSk0S2xMA4tRKPN
Iz/F47zmXFiCD76iy/cO0eP5SEqKiqbjpzw4DlLSSc/uPu7x+HnKMVISoSUx
2YNrLeOkpG+D699dpKSp2TU/pKQznFYvISUNSkoiFA6dE5wWbvmUvdauNqfe
iv5aX3m0zszc+Mfmdf1bA03FO3RgDKUkeKdddxn6ISURqpwEwknjzjMrb3kH
UtiuIVq/m3qdf2uUqXiHxj16ryUl7XLswxlGZ3cPSkoilBk6ZzoXGn2eecPp
cCAlhatk3hplKt6h0Y/eq0hJX8ULwqaA++l72NeDkpIIFYfO2HKJOeaZTW9/
e1NStHz+rcy7/UzFOzTH0XuelPSVf05Uv5D52NGDkpII1X+V6IbGMLGZ5pmN
zohdKSlVOPXW+hmTlLRX5Wh/58zr1+uFqRryZfrZNVLSV7h/lz+fHKXWuquB
PMaUaVBSEqH6oTPInDFTSvr26NqTYldK+rXzWdKy55t4TvaNzKBt3gp3U3HY
K4v1sGukpK9oSvpeE6SkN5OSOpc5ee93W5fv2dB8dg3dnfuUySyJj9w3M8Bw
eU2x6MUnM4+9tl8XVrUrJe1KQ5lVepuKdygzaJmDrWaoD6QkhpA6kG4+dLlf
5gCgB8t0n9nWdPmeDc3nwNAZbQ5Ygkl7eKVKLcxPLKMRYP0iLHx51y6pM3/p
Xuqm4sViS8WfJjnHNzLDtRnPzJinjszM3uxt13iW9JVPRtFrgsnzS9jRnZOS
2OVYUDLm7BKdzIfzw2Kx/GSyMlI16uDJmvNT8fWkeh39Kt/aTMulpF2KKSl1
SGd2QbRY8fb97K6Rkr5S+WhTIPUrE7OvOyclscvh0TPs1Js+JX27eeaEevyi
3cNUvEOHU1J4BIZRKP+rXdOnmjO9mKSYkt3duRfeah2QZ5wZPSNPpdRUcDO3
zBcrziQfT0nfzh7Yygsv3aOoSUm/sn+jlCpTf2zbNTAEKalzL7zVOiDPODl6
LgjUOJySvmpmkp2kpG+XU9uKLl960nhsBrPUpaQwNKXKZ4pltiUlQf9cQjuX
usZ+b3+pScj33U3JcMVUJddez+tXd0Ceccno2QXkpaaCSzol7Z1/9paSvh0P
l0Rvo38t+f353cOP03mj/q6auW+mCoS34G5Tkr9LgiIpqXOZy2xxChGdq4Rl
UtOVa2cjUtI9rho9VwYyKiPPsZSUunD1kJI+ib/jlpIGUgwvt/1ISdA5c6HO
nUlJNfOT1CpNU9L3qEvNLs5s6OWuHT37gqjwk5Yw2qyXh2XCtzJlUtt6cJ4Z
NnvTEimpW1LSDylpLXM6R38Nz/f72sqNotNU+pG5nkffCucqx1JSuPDYcZKa
S6wPPFebC10+ei4RhMwzv+OQmVk9no+kpKjoXekpD46DlLSxpKcimbdSS5jD
4+cpecv+lPR1OCVtVr9kNnLm+kO9RqNnp7CWuS69JyXl572LlDSvOYZUStrI
ZJ/NVDk6aZnjqGBDSurcgZQUvrs3JaWKnexI6lcp6VrtgpJdw4+qT8nv0uEg
fLIp6Vts87r+LSnpWXMMqZS0Ee7WZZWSwl83xeY4Kth49i5D0TLj3yV9fOOu
paYDaO/Ap5QTP6VnSet3U6/zb0lJD5pjSKWkjWJK+iQCUWoywwSkpM7Vp6Ql
+B835BfenJLCfn386w1ttB5AFw069+Dxuc5Ke1NSuErmLSnpQXMMqZS0cSYl
rT8hYSZ2a+cyEWYjtTAsH60nX6xRStr7FjXuGUC7iW71cHDuTUnR8qm31ims
GKB6GI3JzDGkUtJGTUr61P2NEtOQkjqXSkn3/0hJo7htAO0p+hSd0lx4s6v5
3HhXSkoVzr9V+YzJeXpS+PFjytMt3UdK2sjknWNvMYERT+1XmTIl5e8pDsiT
7hxAFxD6kZq4ro/Sy4NSZqPtniVJSc+aY0ilpLVM5o0uib41aF4mww7tXP5e
fLPbunzPhmZ1/wDaZXRlqf7g98wm8pfKpfHfJS1S0nPmGFIpCYrunP1yoV8r
fVZ4mAPypEcG0JWEfjyYktYF9qakMPVk3qqMSFJSC3MMqZQEReY2g5KSSHlw
AO07ehCmpGX1lZirNpF/2p6JMN/ym9f1b702JXXSl06acZKUBEVSUudSn1g+
4rYu37OhiT04hnceKlBjufRfb6i8PC4n/u3uyuxTX/J8rzvRSV86acZJUhIU
mdJ0rvWtdtdN+bYu37OhiT0+ho83AL7OH43RNJT/+EhKaiEc/88T05g5hlRK
giIpqXNSEgf0MIauLXTi8HFYzEGZmnNP5W93rPv9SHVq3bv6bt437hVaDVkF
KQmKHj9PyVukJPbrZwz7aQnvtHc6etUMdpnxf+LwuE1flj8fLdVX8vj99Oa7
KnCMlNS5F17PHZDndTWGLjL07/LP9qWkFqQk4E4mMJ174fXcAXleh2PYYZN4
uaZffJKSWghT0neJlARcTkrqXM31/Huj/736Xw1upMqvF3ZyPXdAntfnGJ7/
CtPy0B9rM5N2yWizlcfz0XwpaSN6QSjuXCnph79LgiLzjc7VhJdN/Immnujy
5c//E0cn13MH5HndjuHJC86xj46h6WOj1BYfz0cvSUnhwvzu3vvZY+bdmltn
D3fVKCkJiqSkzuWvwOG7qZT0e/WYKZWwOrmeOyDP63wMDzdv84nxRc1hWjcn
o82mM7Hlx+Z1/Vvhr1LSemFoU6AywtR/PiklwZSkpM7tTUn1AWrxjbupdT6M
lVeezSRHSqIoNTe+vxn55FJ8XVmsGJRmPVNSezmakjaXESnpIyVBhcdvJeS1
SEnFd6WkCQwxjHsbmUpM0EMyWjuQksJVUm/tTUl8fQ6lpGX1GeOS/VaGlAQz
+V436FP+8pt5N3xr8SzpTUYZxl2XoO8kZ5Te0dRm9tuVZWdKipZPvbWsvpL3
5m/cRaXC0brArpSUSkZrUhJMqc/7C197U9ImCoVvpT4Bk5ImM9YwVrZ2rE7R
SLfJaG1XSkoVTr0Vhiwp6SuTj74FdqWkdVBK3TGPBSUpCTrX/73m5WrCS03q
iaYnKWliww1jzbVouE5xlfy8t0O7UtKxZ0lSUlTxIJGSfkhJUDTQTeedaq69
4UP/JVBZvofruQPyEoMOY6bZY02SucS4O31vSsqnoeXc3yU9PRh9OZaSKj+H
lJJgJoPegN7j2LW3xY+UNJZxh9FF6eWGe2wUdSAl1achKemMA589rl9EdX5X
jZKSoGj0O9H0pCSOGX0YR28/u8yRjNYy4eXb083rA28VI5KUFHrhXTVKSoKi
me5KU0p9cvWI27p8z4bmNsEwTtAF8m6+ttxpqcgvh392VT7l8J6xSEn/SkqC
olnvUNP7tdJnhcc4Gi80wWC6QM3n/g9eHiEldUtK+iElQdH0t6pZSUkUTTOY
03Tkzd6QjNaufIp/2tOD0Zen98YfHhwHKQmKHj9PyXv2Ar6Rb+QlnT1fCV8z
jedVxxh3qrl6AI+QkqDI/atzS8ffDajMULs6e74SvuYbz/l6NCXJCPonJUGR
e1nn+kxJu540VXbTcbhx5GlfM08Pxr/rrT38OHm0nD/YKld0/MAPKQmK3DI6
t3SWki6fSDsCU5aWf/2990/Fnx2HzqNcfQtv8FTfT1YSfd3I/aPEfBxF8AaP
3Fipt4yTkoaY1A1kkZIG8bY9dfn5e/MB5njmPEcRvIGZaud6S0nfVsk7rb1t
7j2ul+yppmf6ptrvhlIvvuUz16Jw3ei24ABHEbyB+e2ziuOfT0nfWcHP6/WS
9VubVVI11KekdeOlpGNqdv3js24pqcbEe+rOEzyVZaKpJ1UsfCtaT5se8CIT
HEX+LgmKzG+fVQwamfyyfmuddMIcFC0WvrU3JW160XKcJlSz64tT4rXNwgO/
PpuSKo+i4rjd37DiAA6Xku4c3nDTxRefdCZKvbXujosV501wFElJUGR++6wl
ZlOgGJE2SzJvVb7em5I4oGbX18yKw9fhi+LCflJSfn6+eeuey1exYXOkpOLg
3+PylJSvB46Z4CiSkqDo8Xviy0WnyuudUp+SagKUlNSPml1/MiVFS+aL9ZOS
wktT9GJ1wxWspmH1Ixku+RH+Gt3u5Xsq2qObLemwE31R/LWywtvEz/PXuHm0
7zFBv6QkKJr4InaDG24uS08pidt8Lk1JYbGayntISd/R+KSnJa2bV9Owwykp
tROPBdvKoQi78KxUezJj/tnznbp8Pe10NcgPmnIcJuiOlARF8127xlK8fS8t
U9Im+9Q8S3LAXKVm19fMur9SU/Hw3ZqaU1t5yiebkh5vWH1ECgsvpRBUWX8x
Ja3bTGvGOTTTmEzQFykJitw0nxXOuMICe6NQ5q1UvEptJfWNO8fMeTW7/vyz
idRUvH7iXf+E4toBCYcl1YzWzatp2PmUlKnkTErKH2O0YLQzphmcCXohJUHR
NJesQRXHP5NfUtlnCZ4W1T9pqkxJNS0nr2bXt0tJFz6huHZA8rExlQIeb1h9
SgpH/qfavXs5v6ckowcZ9rw5xmeCXkhJUORO2rl8hPnOhTJ/PZQpHxaoT0nf
5t0/Ji/ROiXVT7/vTEm7ytxz+bokz37TUJiJlkufJbmkP8vg1zBKPZCSoMgt
tXP1Kab1T+o4cQg1Upwbp6bc34XhtDz/67MpqdLmQ4Cnm/MvDuTZaFZN1bM3
JT09Hu9l8OsZq8dJSVDkrtq5/lPSt523jclL1M+NW//YuXlXpaRUINqVkj5O
xucY+XrG6nFSEhRJSZ1belLT1HuG5Q0WKWkQxT31PYPCXzNvpZbU7Cm77BGZ
Yd9cHtcX1b1X2rDaXSseOzbW9V9ydI1+iI7e/o+UBBXMbAf1a6WrCh1OV5GS
RtHnnrLXblbzOVLq1zM77radfm3lox+fo7f/IyVBBSlpUN2mpI+D6iLhJ8wP
enowurZ0mZI+U0zkBlIc7c2plHp9ZrtN9/i1lY9+cI7e/o+UBBVMgTp382Q4
b2/LG40JdOXp8/IP0bY9MixvUxzn5c+/Glti6SZVybrAks7C0dXXx8Z69ejB
s6ktrDysKlyl8qgb+sgcuvE/pCQocg/t3NLrx9SVjXd0weOchjeoTEmfIC59
SuEimkei60Zjcn7rYf7KFNi7St7Qh+XQjf8hJUGReWznhk5J3y5cOybAXk7D
1k6mpHwlmTv1Znn4a7RAfQiqLFnTi3zLxzJ0439ISVAkJXVugpT0cZiRFv0k
fP1r/qNy6hm9pupT0if7N0rrAuFTm+J2o8VSYSeT1OrDUabOvKEPyKEbD1Qy
8ejcHCnp25dLxoTJFD9Uz88nqWf02tmVkj47j+pNcqms9pNONNFcFi1w4FlS
paGPxqEbD1SSkp5VHP+ZUlJNf3mhAynJo6XDDFojxSt55tlNzY1gXTisNlXJ
Zvn61/zraOVR0VUqBmzsQ3HoxgOVzDSetbnFRAvkk8uPn9frJeu3ouXXC29L
Setew49lf0pK/UoNg9bCWKOaOaduq3OsEdsYuvE//F0SFElJz1pinwpuCmRi
yyb+RFNPdPl64f0p6ePAY2XzufR3Yb7AZ4qJylMM3eXGGlIp6aShG/9DSoIi
k9VnRQd/vVNSESZcnkpJxSWPpKRM93mb1FlQLOD4OcPoXau38SyeINFPHi7Z
aGWdvY3Y20hJUPSSmcbyp9Ty0A0lM6397ElJlZmoq5SUGQTeI3UW5AsU36LI
6F2ok8GsPHF60HnzpiclQdH0c9TOO7hpW9ja6VNSdBx4FSnpQQbwKp2MpJRE
JSkJijoPEWcM0bXvA6PMc6XLU1L+10dS0mf//io+s7tTu2GZXnQM1wuLBTjJ
MF6i9TBuzohw+Sc4L77lozVsakvV0+5cG/rAG7rxP6QkKJp1pjFKp4rjv1z9
d0n5dx9MSd/+hkuim65s9g0/oxxskOIYPu+GMcwnoLAZ66STKlZZz+V9aVft
PYZu/A8pCYqmTEkz9SiTBVLZZ0k/Koomqa5S0if7SWnlyEhJsNeU94I73ZOS
wtfR50dhmeiL8Eqbj0vXGvp4G7rxP6QkKHJn7Fw+C3zva+GS4lupGjrJAt+b
+ObeXTkyUhIc4GA+7JGUVPkMKAxH9atLSVFDN/6HlARFUlLn3pwFwsRnZKA1
x/Mx96Sk1MOgypR0YGGjfo1+mI3e/o+UBBWkpM69OQucSUnrZ2Th47OaYj2P
DDTlkD6m9bhtngR9F66vkJsX4SrRQBTW07pHox9jo7f/IyVBhclS0kx9+REm
hQf10PF1gWJ4Kb7OvyUl8VqO6gNaD9r9O6XdFkc/wEZv/0dKggr3z36bmqkv
eb9W+qzwjJqwdiwlLX9/bCQlQZ4De6/JUlLTzY14dPXw+eGFpCQoGvocD83U
l7y5U9KalARPcWzv1fThy23369YbGvS4ijZ70L58pCSoICUN6j0paeN7xNYk
mkwmChcei0hSEnNzeO9lxPKGHp9N44fui5QERVLSoF6bkr4Op6QvKQlqOMJ3
meyueq3RR0ZKgleZ7Ho+U1/ypKQDKWmzSuZreFISrDnI9zJioTnGZN2LoXsk
JUGRlMSgKkNN5s+Ozv9F0ttSUvg3Yq/y9PA/zAjs5fj5ZP/P4IP6dmSaHgEp
M127Pn1ftdZ3iu9/87fRJXi4n9lf0XfvGZBHjqJlZ0r6jk/qVykpZbJJzmHG
YW/f42nzIY3GZNDRuM3To369RUqC15jsOtZtX5Y/n9GnLrOpYuFb+fqjNTR1
/8gvL/7/7d5p7t4d8+Yx2dX3vwr//vzu4efNu4zLTTZxAlImO9n77Esm1FTm
nczr/OakJCnpsMkuDtd68+Ck+h69mj2ej6QkLjfH6e/vkqBojpP9q8++ZFr1
VErafB0i+usnlubWbxUfYKUKX0JKam3Wfl3l5eOTv3Z9lzyej6QkWpjgiJKS
oGiylNSn3lLSJvvkw040MUXTU/hrdBNXWXpyee8eN2WnLjfrKFX2a1MsXGuR
krjFgxf/Z50ZNCkJis6faBRlRjh8a0lnnJprY7jKrjJLIuZEX4QLoy10gA3H
Lqs35VjVdyp/pi+xlPS9RPy8Dpd/3/q+Lv4aXSIlTe+SsDC0MyMgJUHRy68w
98hEoV0pKVy3mEfuT0nFzdG/a3fZ8qfNwgO/1jT4tivblIf35hz/nt3FK1L4
VphWNrkmujyzMPo69a6UNDH7dO3AaEhJUDRZSuq2L6kskwks4a/RJeFbu3JW
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
        "], {{0, 761}, {1122, 0}}, {
        0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{1122, 761},
      PlotRange->{{0, 1122}, {0, 761}}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[302]=",
 CellID->475821867]
}, Open  ]],

Cell["We can zoom in:", "MathCaption",
 CellID->983872788],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
    "exampleBCellReceptorFigureHighlight", "[", "\"\<Results\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]], "Input",
 CellLabel->"In[303]:=",
 CellID->325866016],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzs3U+u7DyDH2Yh8SDDbCG7yNTDTG14AW64Y2TSAdoBDM/umr4s4K7Lo/Lb
fdzVuuJfSaRESs+Dixd1VBRFUaLEX6nOef+Pv/t//93//b8sy/Jf/re//vPv
/uN//bf/+I//8b/9+//9rx/+wz/8l//nP//D3/+n/+sf/r+//89//4//59/9
r38t/O9/lf27f7Ms//QaAACAjQ8AAAD/TEoCAABYk5IAAADWDqek6FoCFwAA
MLtjKSmziqAEAABM7XxK2tQQ1rb5GxGpHzd/TSJ8sVm3+JcoigtTzQgbuWsv
Mm1O7UJ+FQAA4EoHZuNLLBNFF+ZXia6+eVEskCoZbVh0ySaeRFu4q82prWcW
1jceAADorVVKShXYLAkTSv5FTVXhE5/MFmvqvDElbVolJQEAwPWuTEmZLJBJ
SfkCm5KZmottDhNWtOWZdHYmJW0aIB8BAMBdWqWkfHRKbSUaK9bBpFggVTLa
sOKSMKTkU1KmkeG2whUPNB4AAOjtZEr61lBMSdHlnyAyRFNJ5uFOuHr0rUz7
o/VEt5tparEZ0RUzrQ17FQAAuMaxqXhmlXwwOT/tv6CGERoJAADc5eKUlF/3
5KZb1SAlAQDAmx3+WtfeL7OlvoG2d6PhiruqKm794u+5yVMAADAav/wCAACw
JiUBAACsHf69pNSKmW/Wpb56l/oe3aZwuNbmrdQm9u4dAADwZgdyRP5PMSyH
/sesm3ryq+ffOvmLSwAAwMs1SUlLTFgmU0NxE9GSqcdJ+QoBAAAyWqWkA0tS
P6YKH0tJmS/1AQAAhFp9427zIvy9odRvEkWXRAuHv3+Ub1LmNQAAQErD30ta
PzOqyUqpOlOFM0+gpCQAAKCVhinps/OBUf6tXUukJAAAoJV+KSl8N7Nu5Z9c
KH7RrvKbeAAAACnH/qxB5u8h5HPTJ3jelG9ANPVE10o9wypuAgAAYE2CAAAA
WJOSAAAA1qQkAACANSkJAABgTUoCAABYk5IAAADWpCQAAIA1KWlSv1bubgsA
ADyKlDQpKQkAADqRkibVPCWJXQAA8ENKmpSUBAAAnUhJk5KSAACgEylpUlIS
AAB0IiVNSkoCAIBOpKRJSUkAANCJlDQpKQkAADqRkiYlJQEAQCdS0qSkJAAA
6ERKmpSUBAAAnUhJk5KSAACgEylpUlISAAB0IiVNSkoCAIBOpKRJSUkAANCJ
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
/pGS4FWkpEm9JyWlfj2kGGoy4Sj61uGg9J6zjrdxbu/Vr8eu/O2e3hua9LyK
NnvSfflISVBBSprUs1NSmIykJLiYE3uv3j128RERlDbyt6TpSElQNPUYDz1p
X37k88LFRtjxdYEDKSmMQpm3pCRey1l9QO9Ou/6g9Nvi7CfY7O3/SElQ4frZ
L7scm7f3+HfLDToT0/I9811l8zqMRaliI/cMdOWUPuaalBR+XrS+Qm5ehKuE
L6L19N6j2c+x2dv/kZKggpQ0OCnpWEp6ds9AP87nYy7otzDs5LNPk4Wd9mv2
02z29n+kJKggJQ2u/onJZknxrVQNg2SBzceh4dalJGjOyXzYNSlp83pvSlpf
VytX9zgpaurG/5CSoOiRKelJe5TJAsuJ37vJlL89C2zOydQpKiVBQ4+8F1zp
lpT0Cf72XU1K+sQSUKoeKSlq6sb/kJKg6Kl3xll2qtj/qSwQLo8moJpMNFRK
ij4zkpKgK+fwedekpFTMSaWkYrFdz6Tamvqsm7rxP6QkKHpqSvpMsmvr7z/s
ygKVz5iiS/I/3pUF9h6vZST9uuXxon24XlgswEm6sYne3bgZEeHyTzAuliAB
hWMqWm1xALbao+Z1Xmbqxv+QkqDo8TONwXcwOvfbLGmekn6N9427kY8RvUWP
/mYeuGtd6unAVgbpycqBM4LBm/d4UhIUDR4iWln+lFoeuqBkprWfF6Skl5yB
ZKRGQb5A8S2K9F5Dg3Rm5cAZweDNezwpCYrMUe+VSUnf13uj0EQpybnH52hK
cu06Se+1NVp/FgdI+MFdq41W1jlaj72NlARFZhr3ij6E2hSoeWb0s2I09USX
rxfekpKceHylnrTmC3zMsk7Qdc3N1aU9HjntrXOuHtuYuvE/pCQoMlm91xL7
bdxNgXxy+cac7383UuVvfJbklGMtOrnKJKbUulTSaT3M1atS0klTN/6HlARF
UtK9iv1fGWEu+NfkPHG+ETqQkqKPlqih0zopXslTT0trTuZN4bDaVCWb5esf
86+jlUdFV6nosLlPxakbD1Qy0xjc8qCU5EwjKjV1zBfgAL3XT7FvNwV2ndXf
DLKr2k9sQKWqShWof7H37Jr6bJy68UAlKWlwz0hJTjNSws+l1wtTBThA73W1
KyVtTuZoZglHRM12U0kqGm0yH1AcSEn5dhZbPpepGw9UMvEY3ANSkhMMbmcY
9lafksInL9FHqJt1j6WkcMVdISgVr/J7VHmyTX1OTt34H34vCYqkpMFNnZKc
XTACw/ACJ1NS5mnpd3nm3dTq9Ylms5VdT46kpBlJSVBkHju4ZSR7W96pT2Ao
d4/LP0Tbdku3vE2xn5d0lIgujFYeHtBoPZsC37XWq0dPnk1tYeVhVeEqlWfd
1Gfm1I3/ISVBkXvopH6tjFahk6qJAzPkfu7ujKEtoz7wdeCuVOztzVBKvT6z
3a5HvG3ls5+cs7f/IyVBBVOgSQ2bkpxOrQw792ZjzCPlqF2sJiWlfjxz4KSk
W8ze/o+UBBWkpMF1fDywX01Tr+mWN1iGnHsTKh6p7wgKf8y8lVpSc6Qcsltk
un1zeVxfVPdeacNqd6147NxY19/k7Jr9FJ29/R8pCSqY2Q7ur6Pz+/N7hH/5
88RZ1JyUNIuaI7Ups8lBqWKZhZkj5XjdRc/X01e3k5KgSEoa3PgpySnUyd4n
FJnnFKlHFZXPKYY6voc/de+nVUpK1bMrJQ3SJ++k8+vpq9tJSVDkrjq4fEr6
zhXDJeFbYfmwwN6U5OTp58Dcu2Zh8cnFXSmp5lq0KXPN5au4lfpujMbSb6Td
dZTzm+jdJ6To/Bp6aQRSEhS5pd6rZgKWiS3F18Ufo0tqUpIz56Qmc+8zKWnX
3PuyDsnM86PLLzgPaxpW2Y3Rng9z05mUtGlz154hSrfnPaN/HrAXUhIUuZPe
q2YCVoxImyX5HBStsCYoLX9+hn9hJz1Tk7n34ZRUP/G+KyWF3ZJqxsUpKdqw
+pQUFi4ekQMpKdr4rr3El97OeEznPGAvpCQoeswla1I1E7DKlFT5tGhJfAev
GJSW4H9KyBlN5t7rdVOT6vDd+ll3uJW7fLIp6faGnU9JmTRUWX8xz67bTG/6
OfSkPnnAvkhJUOSmecY1E7B+KSn1OlUtl/nsf5a0pCfbYbGayivn3heMpm+B
1Iq3N6y+JysPYvSAFjdU2RXhLtwr1Z5Mn3+C/09Q5lTJ19PPUJ18o0f2wwN2
R0qCouddu+ZSMwEbJyXd21cPU3PoW6WkY1PuEVJSWCC61u0NO5ySvhWGP0a3
2/xIRffoYkss+2ReFH+srPAy8XH+Ghf39jUesF9SEhQ9+CI2heI9Zen5e0mp
11LSBWoO/cmUlH+3Pihdc+hrZlabt665fBUbVtmNF/w70xuDTGuXupS0BF/C
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
LpWSNsLDuiTC0RKbtDzjrGDj3rsMRcv+lPR1OCVtVpeSJtKp9xwU1jLXpYv/
DZiSvu8e/o5c238Gb3PP6FIpaSOfkoqTlmecFWxISYM7kJKaPEtqlZJSs4jN
dGKzyvl+e63mvecSQUhK+vZDNCJ9pKSBpeLtLW7sBylpYznxWe69h5J+bh+n
5C1P/L2k71kXPf2ckGe07T3Hgqjlzw9hfoQf1HyXh2XCtzJlUtu6MSUVZ7yL
lDSqzF31VRlfSlrLDOfoj+F4v66tXCg6TWUcmet59K0l9ggpnGlsZh351Zun
pFYlCbXqPVcGMvKXlMrrSfGt4iXulnlmzZTpIyUNTEr6ISVBkbnQ4FLX8/wH
ret3NyXDFVOVtL2eS0nXaNJ7DgF5+VwTjTn1KSm//N6UFE1DUtJc6u+qmftm
qkB4C5aSYF5S0uBe+KmXE/KM82FW/1N0ICVtZpLFNDRaSsoMjejy1LT5Fp37
ZjLLzv8LYfFszBTLbOv2lAQUuYQOLn+NlZLYONN7ep5KqangUkpJu2aSmXnp
ldelY3fJF166Z1GZkn6Oe/FszJ/MUhJMTUoa3AtvtU7IMw73nm6nXnQqGE4p
i8XyM8nbU9KZ++MLL92zqElJmYdEmSSVOucdmsHVjHTPZ9/J4R7cC2+1Tsgz
jn3orc/Z5fEp6fygyE/Fv7Pr9ev6t9bz83CibiqedzglZQ5BtFjx9n3vofF7
SV/FBLRZ7qb5Ho714KQk6h2LSD1awrOFUSWafSoDUVhb5kVYuPmuNamzmFyK
r2uKhbP00abiAyqmpPDEq1kYTUyD3FWjpKSvJWbzbnSVa5vJDRzowUUH710u
2+VrNvQ8u7ruymPKwyyxD8+jKWlJT/tTxaIXn0yOaLtfDavam5KinZNPT/mt
jDAVH1Cm0zInW01XH0hJTCF1Il186nK9zAnAyH6tjFnhYU7Iw+q7TidzxvK4
Z9zNb4X5LlqCuXS0fOqtRUo6IdNpSzrUp16fTEk39oNnSV/5fCQlvZmUNCkp
iVBN1xnynPeklNRpROxKSanCqbfWKWnwqfiAKnv7O0/+FXvok6khX2acQyMl
faXy0ffd1FpXNZDbmDJNSkoiVOw6fUsTz0hJXW9/u1LSr53PktZTeilpr2ec
vedJSV+pfLR+t2Yhz+NAT0pKIpTpOiOdhmafZ14wHPampGjeybw1y1R8QLOf
va1ISV/FC0L4dMmwegnHelJSEiFfDOAa884zK295mQ+Wm3RRNCWFaSjz1ixT
8QHNe/a2JSXtkn/exFM53JOSkgj5VgDXWEayq82pt6I/1lcerTMzN/6xeV3/
1kRT8QEd6EMpCd5p112GcUhJhFKTPWjrr1Pr9+f3CP8qT/J8sYtT0qum4gNy
aH5ISWcYVi8hJU1KSmJj3W/GNV1NlJJqxoKU9Cq7nlT2dmM/SEkn3Xv4uMbt
43Qu0Stb5nIXvvX9MXq1DF9ES4Y1pFYptvBLSprd0mJqBzWWVUoKr06bFLNZ
mC9fXKs+JRUveplL67fAmS66PR9JSWRISScZWW9QvI/wtfwZdjILM8XyldS/
qCmZWhglJc1uc2JAP2EUiv64iTnF8qmF+XWjzds1EDbXzO9QkpJ4MCnpPIPr
8aSkSqkEFEaS9WeS3+VSUj0n5DHGMpepSUnR5z6pWPS9bJ5MScdGQY+BIyUx
OCmpCePr2cysKqV6qfgsKbyJh68Pv4jmLynphQxkrnQsJeUfHp18lnRmCHRK
SeNovnc8gJTUhPH1bC6hlVK9tJRSUurFJ8g7mxf5GooFUptIkZImFZ4z0NuS
+OWjH8UolHnrQEpyF4MDpKRWXH8ezP2lUqaX8rfp9bvh608pGW3KRN8N2xD9
Mb8XUtKMookYegujSs3X6ro+SwJ2kZJacRV6MCmpUthLx/rtfG9n4tiZaqWk
uYQjV79xmWMpqSZASUnAdFyInkpKqrf53F5K6sQJWRTtIv3GZWpSUvi6PiWt
C0tJwPhcix5JStpl85W587Uda8DJ7UZJSVNInQA6jSuF8ecrmneW1d9zSJXM
fysvU//dnQHgLvxMUtKkmocaKWl8mZ7RaVyp5itz1/xz5sMxfi8JiqSkSUlJ
r1IcpzqNK0lJMDspCYqkpElJSe9R0yE6jStJSTA7KQmKpKRJSUkvUdkbOo0r
SUkwOympExelJ5GSJiUlPd6usanTuJKUBLOTkjpxUXoSKWlSUtKz7e0EnRa1
jOTuzmjp7r78w92dAVOSkvpxXXoMd5lJSUlPdWxIvrzTUv7qll9/+3T9V7mJ
hx2gCzq2vv/v7gyYkpTUj+vSY0hJk5KSHunwvr+50zKkpE6kJJidlNSVS9Mz
SEmTkpIe5sxIfGeP1chM5r/f18osDMtkluSDw8OOUaZPMj9mvjW3iZyZAmFt
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
tedJSZOSkt5MF/Wjb4E3kJKmczgl5eNPzVupGLVuVbS1n1WESa0VvojWXLP1
5qFGSpqUlPRa+qeTXXcfgKlJSZM6kJI4zHxgUlLSa+mfHqIfYd3YHoCupKR5
VQYld7HzTAYmJSW9lv5pLv9tAYDnkZKmVkxJvhfRhD6clJT0WvqnuVSX6mrg
qaSkB+h9k1pHrXfmhXfu9QNISa+lf5q7KyUtI7F39s7eXa/53tVrnpLu7ss/
NOmil1v+/BZ6uPANnE6TkpJeS/80l+rS3l39V/2/P79H+NdjT/+q89ffPiP8
67R3tx81x87endEjJd3epSN07GNEU9LnZZMQKWlSUtJr6Z/mopfBCz6TNNOe
d8rk2E197G7fr357V09KeqrNzWv9Y/j68+cdMLPuuv7L9uV2UtKkpKTX0j89
bK6E0dtE86vlz0z7W/N63psSLRMuzBcLl/c4qZZHT5mWnSkpdWhSh3uQlPRt
z/fHcHnY+OiK+R83y9f19Nu7+vMnv4Ph6ykm83elpMzJsHkrtcrgHTuCJZ1r
ltWtLfwx+iKs6j09/HPi3d0KdpOSXkv/dLKZCNUUq6kz/+53orue9K6X5H9M
rb55vWRn3Z3uArumNJspUDhrWpsxJRUPTeXBuv5Z0t7X3x8zBWqqWoZJSbt2
cFfl917Mb3yWFO3PfAcO0rGVt4nbLftTUqpwtKqR972twQ80KVLSO+mc3nb1
cPGOmb+Z1kyVl+yjospklJ94H7sLFNfaO6vJTDg3k9K9s9xOe3c4JVXGpX4p
adexqzkK0SOSP16V8+Tbz8zKXViC3HTvZL7G3pTUsGMrj37xELTt2JodzCeI
VprUnLo3LUFK2hTb9eLx+h1lupKS3knndHXyehi93UTvU993KzPR90V0Fr3c
l5Lye3dgFhqdL20W7qr5zEy75tidTElh+N1bc+9jt+xJSeHC1MFa0vPkTYVd
967J+XnstDw8mW/lWEpqOOS/MmdCcXnDjs3vYP3C84pdXVnJ5sW68s8qJYXl
M2+F9T9bp0NMb1LSO+mcfk7eklK1Ze53y2pi/BWdUW9K5ufYmyWphevaDux1
zd6dnIWup1KHJ6JNZtqZY7crzkQPTT5DXZCS8sduqUtJ6yNVExzCAx0tcPuZ
WbmDSzYStp3Mt3IyJZ3s2OiJlOrqvX17rGPzO5iqs8dBLHZ1ZSVh875VbXZt
SUSkVEsOt2o6L9nN55GS3knn9NP8sh+9v2zuTfmHQUtF0kk9sEhNvJcgKG0q
b+LT4oPlpWJ+vrfyhnt3ICWlXi9ByD0WvhruXZhWikuKxTKT3rDYd/Wue3d4
Sv9T22Y3vwvvOjNvdGDIZ457/vVdHbvrOh+u1apk/Q3oY85w2q4+ZxxS0jvp
nE6O3YZ21RluYtn/7bhogdTqlfUf2+XiTXw5/XtJ4bTzu4m9U9wee9cqJRWP
b7Harsdu2ZOS8skidcQzs+Xbz8zKKfqBOo/tXUNNniUd7tjwLCpeCnp3bH4H
U3X2OIjFrq6vp3nb3uZAtzMCKemddE4nZ+5ElXVGb7sHUlLmSUR9SgpraLJ3
mwLHZqG7Vuw0ZarZu94pqXITvY/dz7thl6YO2RILR0uQiSrrvP3MrDw/j520
B/buRs07ttiT63Np7/Wk+Q6G+5taeF6xq+vrad62t+l0iOlNSnonndNDk/tR
vtpUgd/BN6bqp9zf8stqXh1Wlap/U8OZvYuuvjwoJaWO3a6IVH+Ud50MXY/d
t0zYpd/lSyBcMawnWmd0xX57V3/+hDsYFrjmzLxRj47Nd3W+cPOOrdnBpZSb
mii25PHG2fFxWsIuUtI76ZwewlnQNf287H8e0enfgf0t9lL9rCY/BT3/r9Pe
3X7UzqekTIHmR6HrsVvvUcMzc5C9q9/3rh7fsTXdeM1twsz8xwid4FhMSkp6
J53TXDQine/nyhvu7XPswzPtmh64fbLUcC4a7t3tR+3MsXvedHdXydv3q+2Z
eayeG/+vsrN0LLe7/VBKSZOSkl5Iz/TQKSVlav7WP/tMu7j7t0+W+k2ZZj92
UtII/6SkwTt2Upu7WHhTC+9EqcKpO9f6ReatVCXF1ddN7ddRNcImMQUp6YX0
TG9tezh6a9jcO26fY0tJh/fu9qN2PiWlJgAzHrv8Hs2+d632fU1Kqtyp6NX7
k0gf0bfCkr1lssa6VakXlcX6vVj/eO/MR0qalJT0Qnqmt2tS0rrA7XNsKenw
3t1+1HYdu3D6kZqZfCY5drv2aLq9yzu872tSUv1+pX489tYFpKRWpKRJSUkv
pGd6a9XDqXwUndsMosmO27tbVDY49WNYw83786cmezTd3uUtR/d9rUdKGsfJ
fdnsV2rJ8mfPL+kD0btJ0TLR3ggbn9qdG1+kFl6v+enENaSkF9IzvZ3s4fCW
1O/GDbtk5myTnpnP26N6Tfa9eUp6qpqUtMSeevS4+NdXmEoZZ1LSdzc3+5t/
K1NPTQPCXbiSe/ekpKQX0jO9Hejh/H1QROJeS8znz1v/XCfn8/aoXtt9l5Iq
hV2amt5vSjY/IXfdUFJN2pwzmwqjP25ebHaq8q1MPWFLUq+vd+OmOUNKeiE9
01t9D1det11gGcT6PIzOrqfzvD2q12TfpaRKYa9u4kCYDqLvnm/GWk35yq2P
M2TGacnXSy4pzyMlvZCe6arybuKayYyed9I+b4/qNdl3KalSPiVtEmtYrMnB
2huRou05WewC47Tkyx1/UlLSC+mZrlLde+DeBKN53tn7vD2qJyVdKZp9im+l
lhxrQNeUdEElt2/iMLf+SUlJb6Nbegvvdy6PwFNJSTUyCSX6YzE3nW/A7Hel
XXtx+/7e3gCOkZLeZrRuiV6679Jqjz7CEfAOUtIU+t3ybrGkn8RVrnWx2Tv8
taSktxmtW5YH/Q8En3H3AagnJU3k5Slpb+GGZu/w15KS3ma0bnlAStrccUbr
YYB+pKS51KekmmdPm+WbW2Fm9fC++f0xfBGWT9WQqe37VqmHupCSJiUlvc1o
3VKZktZX2uLyVOG2KSl14xithwH6kZImsjcvhNEm+uM3j0SX5+upWSssn2/J
rnWvISVNSkp6m9G6pT4lha/DxJQp3CQlrfNXpkzTHgIYl5Q0kQMfBh7+8dMz
JX2Ch0c1m5aS2EtKepvRumXX45518ImuGC5skpKKyWhTuF33AAxNSprFgXvT
3pS0uVde8Czp+2Nx05lIdQEpaVJS0tuM1i0jp6Rd4Wi9VrvuAYAGjqWkzDco
wqgSXR5uOv9s6FhKqq8tbM8FpKRJSUlvM1q37EpJP9eZTPxZgt9O2lX5p+47
dfndad1DAHDK+TtatIbwCU7+OVFxxc2S1I+f4GZdX9uZW/xhUtKkpKRXGbBP
6oPMkvgtpOjCXflonarO706TbgGAe518/pJJSXu3PjspaVJS0qsM2CeVcSYs
lklJByJS9Bt3x3bnfCUAs/B7SQ8mJbUiJU1KSnqVAfvkQEpKPTCKLt/1rKrJ
7pyvBGAWUtJTLX86tvpHQPhnOmFSUtKrDNgnu1LMV35hZrmUBNCQlDQ4d6UR
SEmTkpKGtYyk624e+HZcj39NdrNrXwGMRkoanLvSCHpPpehEShrWX+3//fk9
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
SUkvMXJvjNy2oqkbT1R4TH+WSEkQkpJ6cJF5GClpUlLSSwzbG8M2rNLs7d9r
/X2z/HfSbmpgA5nGP2DvoC0pqQcXmYdx45iUlPQSw/bGsA2rNHv7D4h+Gy1f
bC6plnuWBCEpCYqkpElJSS8xbG8M27BKs7f/gNempI87HQSkJChy75iUlPQS
w/bGsA2rNHv7DyimpNlvB6nfSwKAA2a/Lb6WlPQSY/bGmK2qN3v7j9mkpNRv
J13erpbCfbyxMcB7uNo8kvvIpKSklxizN8ZsVb3Z239M6lnS84LS+u9UpN6d
fTeBcbiePJWbxaSkpJcYszfGbFW92dt/TD4lvSc7hAHqDXsNG34vqSHXkKd6
yW3xeaSklxiwNwZs0l4P2IUDKp8lvcHDHp/BAVJSKy4gDyYlTUpKeokBe6Nh
k+56fjFgr/a2+R6aL57pCl5OSmrFpePB3BomJSW9xIC90bZJu2pbRtKwE7je
Mt3TtL8aOc4/5iclNTHH1YOj3O4nJSW9xGi90bw9uyr8q/Dvz+9+/+rrH+24
UOl74GZMSXdHo//5b/aUdPXnKVk39oOU1MS9B5Hebh+nHCMlvcGAXdG8Scvq
i081haUkTpr1rrfcn48ek5J+/e0zwj8paXZTXknYY9b7xetJSW8wYFecb9Km
hvUlqFj5JsV8P4+NLgzfjZZPBaVUJVIS95CSGpGSfkhJe4XPAd0IHk9KmpSU
9AajdUWT9oQpqb7+aFopPhL6+XETl2oeJ60Tk5TEzapT0vdldOH63/pdKUlK
urEx49vMlk2eX8KBnpSU9AajdcWkKSmzZPOoqD5PjXZo6oUfhz7bc/a3LshE
s0/mhZS0ziw/1ksyb62X5H+UksaXvz5E353+kkIFR3lSUtIbjNYVZ9qzxHz+
vAQV66+JP5UpKfMgaYk9iho/JdVczDdlpr7+P2x/y22rCDJhmZ8l+ZT0CR48
zZ6SijPeTGxJ/RiulSkcLS8ljSy8N23eTa3Vv2ncaeS7BhlS0huM1hVN2hOd
tVZeiKLx56tTSprlG3f5u/zncR+HPmx/i7tzLCVtolAqLj0yJWVmvDUp6Wdd
Kekllpj1u6m1rmog9xj2lkGelPQGQ3VFq8acqSefX5bsrxHVRKRUDTOmpPDa
/rAb/cP2t7g7Z1JSKhy9JCWFM95iSvp5sSS+fRd+7y6sM7OVcF3GlzrTrjqp
uUfm6DMyKekNhuqKVo3J1FNzq2qVksIlxWdMqWdYU8j0/PfdYg2Vh+nekt/C
S3p/p/Mv+3P2WdKmZBiaKlPS7I6lpHD1JRadPEuaUeZs+SSmytGFPIyjPCkp
6Q2G6oprGlO8VR1LSWHJaJlizdM9S1pf4VNtHnBfajxsf4u7cywlpdaKhqZn
P0taX0byKWlJPDZKLYxWmNmKlDSg3NBbFUj9yFM50JOSkt5gnK64rCXFeW/m
gc5mYeo7dUvil4/y5SdNSWGB6FoXNrOZh+1vcXcqg8wm+2RSUuVDqPFTUthd
+c5csilpSfwuUnStRUp6itzQ21OGh3GsJyUlvcE4XXFZS4rTm/qvyXX9N86h
+aq/y6d+nMvD9re8O8ueFPMv+Si61iY9rcvPmJI+wQUq35nL6b9xl3odfeSU
39yFnbQlJa2NfHHgRk6MSUlJbzBOV1zQku+1KDPDkZIyKi/mNeFiCg/b33Lz
qlNM73+zpKRM4coHSd8lSyCTkjKFpSSYy+A3DlKkpDcYpCu6NiOcvmbmtFIS
7yUlpS2rD1hqChe/C3fNP5eR8YWZN3xrvST6VuqOxvgcuElJSW8wSFd0akbm
4pN6S0rivaSktM2MtFj49nwkJU1kc5iisWjXW0xESpqUlPQGg3RF22bUfKqW
SU+35yMpiXtISX92RioZSUm0Ff1WQ/hW6rlSqhKmICVNSkp6gxG6omEbzl9t
wi8/3KhVt0CV++PR6t9g1uOxODYXKemf+b2kSuFh+i7ZvNiUdL94AIdvUlLS
G4zQFefbcO9tIrrpEToWaGU9zGtS0jj6902SlFQpPExLdUpK1cAsbh+nHCMl
vcEIXXG4DbdPA6Jbv71VQFvfEW1o7yIlVSqmpFQaikYn5uKqMikp6Q1u74pj
Dbj9qpLPR7f3KsDtpKRK+ZS0fldKeh5zhklJSW9we1fsasAIGaSYj25vIcAI
pKRKqe/R5d9KLWEu5gyTkpLe4PauqGzACJeRynw0QlMBbicl1cjcPqI/FnMT
czFnmJSU9Aa3d0W+AYOEjlQbRCSAFCkJikwbJiUlvcG9XZHa+jhxo6YZUhJA
SEqCItOGSUlJbzBaShrncrGrJVISwIaUBEWmDZOSkt5gkJQ0VL7Y25Jl9SeC
81/Ma9ZEgOFJSVBkejApKekNbuyKdbi4qw0bxxqzyXr5MgAvISVB0VCzIOpJ
SW9wV1eM9njlcGM2a0lJAD+kJCgaai5EPSnpDa7viu8FYZyjcLglu35x6eNi
CLyJlARFJgaTkpLe4LKu2Dw8GuQQnLk65VcMnzGNtu8AXUlJUCQlTUpKeoPe
XZH6Zt3th+Dkdam4buabeLfvO8AFpCQokpImJSU9Xtd+yA/8e/9qxPmtS0kA
eVISFElJk5KSHq9HP9T8WYZ7/2REk3rym9j4+MYd8D5SEhRJSZOSkh6vbT/U
j/Tr+7/hVejAPkazEgDwciYGk5KSHq/Vg5W9Y/zK/m97/amvyjkGAORJSZOS
kh7vZD8cHtrX9H/zK8+wSRAAmJGUNCkp6fEOZ5wzg/qCzu9xzXHOAOzi95Kg
SEqalJT0eHsfjjQZy107v9/VxjkDsIuUBEVS0qSkpMer/0MEt/xqz95q+x1W
JwzAXlISFElJk5KSHi/fD60eHtVv8XCdvZ9P9asc4KmkJCiSkiYlJT1eqh9m
+d7aBdcWpwrAMVISFElJk5KSHm/TDz0eHuW3OEhVN24C4KmkJCiSkiYlJT3e
svpfnU4UOuZqLcA7SUlQJCVNSkrK1zCOk3txsit2be58DZc1+MqeAXgeKQmK
Lp6J0YqUlK/h198+I/w7sC9NEtYBrwp0QFH3j5CGdHevX0dKgqK3XRYeQ0rK
13B7PjqQkjaD8cqBeXhb119AXK+gk9fmhbX39ICUBEVvuBQ8kpSUr+H2fFSf
klJ35MFT0i2XDhcr6MTgCj27T6QkKJKSJiUl5WsohpeN6LupJdG1DqSk/Ogb
NiXdddFwpYIemo/oJ80rHrMjISkJip50NXsVKSlfQ01+qf9xs6T+WVV0Xyq/
zjFgSrr3cuFKBT10GlmPGbCP2ZENKQmKpKRJSUn5GvqlpF1f51vvS2U4atgP
DTd0+4XCZQp66DqyHjNsH7Mja1ISFN0++eEYKSlfQ6eUtCsifVPSsVE2SEoa
4RJxewPgkRqOrOiFYrNkXWbzqVHmx/BFqkBlPYd38PC6Y5KSoGiEKRAHSEn5
Gmryy1o+Q33L74pI37Xu6oeTGxrk4jBCG+CRWg2udSrZLAyX5IulXhQLFLd1
cmefdyGSkqBokIkQe0lJ+Rp2PUuqTEnHniUdHmLXDMzoVsa5LAzSDHik5ikp
XFiZkr6vi+EoU5uUtIuUBEXjTIfYRUrK19ApJe0NStEvfrTth2UkR47W6R4A
Dmg4vsKqlrrk8lmloU0lmyXhdSbzovjuAS5H8EI95jZcQErK13AsJdW82BWU
opOHykFX2Q9/Ffv9+T3Cv7elpFbRsom7O6O7uzv4D3d3RhsNd2Q5EViW7Bfq
MuvWb3RT1WGPOfRApSdd819FSsrXUPlFuB+p5d93NyXDFetT0rqR+dFX2Q/L
Q1PS+NelmhPgmn/j99V5eru55gN2nUfC15srXngBDAt8/pyihOWja0VXabKz
jzn0QKX8PI1hSUn5Gm6fStVPqFJx6WRKCicnmeWbMj9LNuWjP3ZKSVNclOY6
zWant5u7fkd2bbFYeJOnLvCYQ//D7yVBkZQ0KSkpX8PtU6kDE6roR6k1a2Ue
7kR/jC5PFc687pSSZrki7TrNlsSDyPDHN8/bMyYd1COTkvZ6zKH/ISVBkZQ0
KSkpX8PtU6kzE6pNXCoWPpmSolEo9Vyp9zfuJrocHUtJYRTKvPW2eXvG3p7Z
xM/vkl9/frF2vfxtvX1yR3Zdpo5VfqZAD4859D+kJCiSkiYlJeVruD0fnZ9Q
redy+WJtU9ISPFoKl0hJnz2n2Xc2nk9Jm2Jvm7fnT/Vj3ZLq5OJBeUBv11w6
zlTepJ65PGxPpSQokpImJSXlaxhHk07I1LZkU9Ja/ltzSzYlZbbSMCWdr+FK
y9GU9Ct4nCElfYJhG757OCWFnfyG3l5if9wgLHCm8vP1zOVheyolQdGZiRw3
kpKm2MphqeaFc558Siq+Tj0wCssXg1ImKj7VmZSUmsDXVzvdvD0v2sPrd5uk
pHVEfXZvL7FPWjIF1sU2Pb8Ef24uUzI8gtEfNzVsaouWT206bEnYnlT7o82O
bjTVY/OSkqAoeilgfFLSmfrHP+2LzVvf01ulpGL5zLZOPksa/HBELXUT7KXu
QUbqdeUm3uBAnAnXXRKHoL7+YjvXZ8i9JaMn7bdYtMBm+bJKIusX4brFkuGL
aG358sXCqbdqmpGvMLVwXlISFG2uq8xCSjpc+RTnfH0Ll6bPko6tezIljX84
opaRUtLdndFAfua/t0/y3Rv+WF//LL2dSUmZAp9SjohWFV1rzJRUWY+UBHyk
pGlJScdqPpCSMpO3cC7XsKn1JWu+/xYuzz9I+i7ZlI+ufiYlzXv9WU6kpDAK
Zd56zLw9Lz+m9vbJyS59QG9vei+8RqV2ZEnEmXUlYZn8i/XWlyCehEtSzSgW
3pQMG1xZT6rCcOG8pCQoCq+cTEFK2ltnavZ1uMImDTtffzSw3PJPSorOqH+E
zyyWxOOMTbEnzdvz8iP0QMxZpKTsLT6zPDwKm/hQn5LyASSfkqIBpzIlHWhG
ZqOprUxNSoIiKWlSUtKuCqWkMVPSON14rPJWE++XzNvz8gNzb29vxvsLe7t4
oatJT5vX4Y+bi+q6TBg91mtlln8q0kpm3WKDU83IbzSzfFJSEhQVL6SMSUqq
ry3qfLVNmne+/mXalDT7lWeRki6kt5uryQJndvbKrHGgzmtWGZmUBEVS0qSk
pF0VSkmjpaRrLjtdt2LefiW93dwjU9KuK+fhrTyDlARFUtKkpKQD1UpJg6Sk
y645UtJj6O3mojvS6jpZuXrDzjzT5oubOggpCYqkpElJSceqbZKS8rOLMzXn
N5EqOY7me3dev20t5u0X0tvNPWZHrvG87pKSoGjX3IZxSEln6jy5idTqDVt+
zai8Zexfv9FOW7w0f5b02MGh3N3Bf7i7M5p50r709ry+kpKg6GHX/PeQkm6s
M1Vbw61cMCpvGftXbvG7LZe4d3pqtGlIt9R7Xl9JSVDk9jEpKWnACpfgz9s2
30Qrt0wd79qcS9wbvOTpT1t6pp6+ghdyB5mUlDRghevRdHKjXUflLbPHW64z
rm+vIiUdoHNq6CV4J3eQSUlJt9S2qXMzB1tva9iUdMvs0UWGC4hIx+iiPP0D
r+UmMikp6Zba8nWOn5LumkC6yHANEekAHZXx4M7xe0lQ9OArwLNJSYerOj99
yqSk6HOlhps4Wectc0hXGHpbgse7bm176a7Qs/tESoIit5JJSUlnquoRYb5D
qcmYaj4qoxHpgrHv8kJX4WksIh2m6368pB+kJCh6w6XgkaSkM/UM+KDnmk1c
nJJcW+gkcwK7qZ2X+lDlJe7u/otISVD0qmvCk0hJZypZTjz0uWa89NvKZfMB
FxZ6cM+CJqQkKHLHmZSUtKuS8Mfvkr2be0BKungr0IS7FTQkJUGR+87g2n2J
oIHLdrl5DUs6NO3d3DX90G8rs7efd3JGQVtSEhRdOfvlgL+Ozu/P7wP/vtHm
5/WxSjYVXrbLzWuQkrpWe8tWADhMSoIiKWlwxwLOeq1vVnpJStokoOgTsfVp
LyV9mv5NJ9cTmnBvgq6kJChyJxqclNRk9TA6fY6e/POmpHydIhKDcFeCC0hJ
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
7cvshQAAANzCdyIJJQAAgEf8LwkAAIBPH+V+yKo=
   "], {{0, 0}, {1122, 761}}, {0, 
   255},
   ColorFunction->RGBColor],
  ImageSize->500,
  PlotRange->{{0, 1122}, {0, 761}}]], "Output",
 CellLabel->"Out[303]=",
 CellID->2019329860]
}, Open  ]],

Cell["We can also create snapshots and an animation of this data.", "Text",
 CellID->973016157],

Cell["\<\
First, let's extract the members of the pathway in the analysis:\
\>", "MathCaption",
 CellID->499168171],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"membersBCellReceptor", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
      "\"\<SpikeMin\>\"", ",", "\"\<G2S2\>\"", ",", "\"\<path:hsa04662\>\"", 
       ",", "3", ",", "2"}], "]"}], "@", 
     RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}], ")"}], 
   "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[306]:=",
 CellID->1448324815],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"PTPN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IKBKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPPL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NFATC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q08209\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JUN\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PPP3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CARD11\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"VAV1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAPK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AKT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPP5D\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RELA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IFITM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P29350\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NFATC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKCB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CHUK\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SOS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RAC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PPP3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAP2K1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CD\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SOS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MALT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BTK\"\>", ",", "\<\"RNA\"\>"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[306]=",
 CellID->863400676]
}, Open  ]],

Cell["\<\
First, let's extract the members of the pathway in the analysis:\
\>", "MathCaption",
 CellID->401232237],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"intensitiesRNABCellReceptor", "=", 
   RowBox[{"DeleteMissing", "[", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", "membersBCellReceptor"}],
       "]"}], "@", "rnaFinalTimeSeries"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intensitiesproteinBCellReceptor", "=", 
   RowBox[{"DeleteMissing", "[", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", "membersBCellReceptor"}],
       "]"}], "@", "proteinFinalTimeSeries"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"intensitiesAll", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
   "intensitiesRNABCellReceptor", ",", "intensitiesproteinBCellReceptor"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[307]:=",
 CellID->411555679],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PTPN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.038778745126709355`", ",", "0.`", ",", "0.3308909839321027`", ",", 
      "0.2206704394223557`", ",", "0.2874901450208439`", ",", 
      RowBox[{"-", "0.04372751379598624`"}], ",", 
      RowBox[{"-", "0.0980776066271067`"}], ",", "0.12251107438865769`", ",", 
      
      RowBox[{"-", "0.3241506774095029`"}], ",", 
      RowBox[{"-", "0.33317776309605013`"}], ",", 
      RowBox[{"-", "0.37502722437199104`"}], ",", 
      RowBox[{"-", "0.21910186659265724`"}], ",", "0.39717063159367816`", ",",
       "0.04620549589280256`", ",", 
      RowBox[{"-", "0.40805572502422266`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"IKBKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.41824938578802684`", ",", "0.`", ",", "0.4346283454510505`", ",", 
      RowBox[{"-", "0.09710561003766262`"}], ",", "0.15912542561628146`", ",", 
      RowBox[{"-", "0.1626590038855592`"}], ",", 
      RowBox[{"-", "0.19573472345395784`"}], ",", "0.10553716044254315`", ",", 
      RowBox[{"-", "0.2071194529277627`"}], ",", 
      RowBox[{"-", "0.28202825579531565`"}], ",", 
      RowBox[{"-", "0.10536321562270572`"}], ",", 
      RowBox[{"-", "0.17518129203252875`"}], ",", "0.12695507826666746`", ",", 
      RowBox[{"-", "0.25526064190720155`"}], ",", 
      RowBox[{"-", "0.5291533255664163`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"INPPL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.10615989393495232`", ",", "0.`", ",", "0.18840596303037413`", ",", 
      "0.048047135096177244`", ",", "0.16619626570031684`", ",", 
      RowBox[{"-", "0.21175531708410275`"}], ",", 
      RowBox[{"-", "0.12432399739780184`"}], ",", "0.03841171024699074`", ",", 
      RowBox[{"-", "0.5024806637593322`"}], ",", 
      RowBox[{"-", "0.16603574538014687`"}], ",", 
      RowBox[{"-", "0.19614635461512267`"}], ",", 
      RowBox[{"-", "0.307538378078446`"}], ",", 
      RowBox[{"-", "0.017124915407234483`"}], ",", 
      RowBox[{"-", "0.3080918215676708`"}], ",", 
      RowBox[{"-", "0.5943143512516815`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NFATC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.05041220188957137`", ",", "0.`", ",", 
      RowBox[{"-", "0.15159602607738404`"}], ",", 
      RowBox[{"-", "0.3418182940818629`"}], ",", 
      RowBox[{"-", "0.10165562085013555`"}], ",", 
      RowBox[{"-", "0.13035895850832396`"}], ",", "0.26759080168486116`", ",", 
      RowBox[{"-", "0.0967033158357252`"}], ",", "0.7683894970650806`", ",", 
      "0.0553952007923425`", ",", "0.1603313546397198`", ",", 
      "0.15817945741016387`", ",", "0.0784527804797115`", ",", 
      "0.20758000806705793`", ",", "0.23641401575061569`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"JUN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.47668369234111063`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.21499367785632137`"}], ",", "0.17941260040124263`", ",",
       "0.21054955024730262`", ",", 
      RowBox[{"-", "0.043220651159810164`"}], ",", 
      RowBox[{"-", "0.272109969536928`"}], ",", 
      RowBox[{"-", "0.19091017669392285`"}], ",", "0.2568869926746049`", ",", 
      
      RowBox[{"-", "0.08590868949633254`"}], ",", "0.20594997280838284`", ",", 
      RowBox[{"-", "0.3944573995520664`"}], ",", 
      RowBox[{"-", "0.30324047113994684`"}], ",", 
      RowBox[{"-", "0.2250957883007071`"}], ",", 
      RowBox[{"-", "0.35166129631647564`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PPP3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.016629257206749837`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.46936479241186474`"}], ",", 
      RowBox[{"-", "0.1347145588576748`"}], ",", 
      RowBox[{"-", "0.26808358766824847`"}], ",", "0.04078121233113895`", ",",
       "0.2734643155740791`", ",", 
      RowBox[{"-", "0.14573410310223814`"}], ",", 
      RowBox[{"-", "0.1347145588576748`"}], ",", "0.26356252374763406`", ",", 
      
      RowBox[{"-", "0.48081353732225546`"}], ",", 
      RowBox[{"-", "0.08746382927257018`"}], ",", 
      RowBox[{"-", "0.5055941746797294`"}], ",", "0.03411635754083646`", ",", 
      "0.09211339971620953`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CARD11\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.11121721141851255`"}], ",", "0.`", ",", 
      "0.21626391246224105`", ",", 
      RowBox[{"-", "0.38169948822881583`"}], ",", "0.12294951236820212`", ",", 
      RowBox[{"-", "0.11267241876505982`"}], ",", 
      RowBox[{"-", "0.24187539695241472`"}], ",", "0.09026581699905412`", ",", 
      RowBox[{"-", "0.6816227833021119`"}], ",", 
      RowBox[{"-", "0.19950063694707412`"}], ",", 
      RowBox[{"-", "0.005313630005752559`"}], ",", 
      RowBox[{"-", "0.07275149486016533`"}], ",", 
      RowBox[{"-", "0.026962565586229257`"}], ",", 
      RowBox[{"-", "0.24773153848263935`"}], ",", 
      RowBox[{"-", "0.3589900252045054`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"VAV1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.16786761644547143`"}], ",", "0.`", ",", 
      "0.08511549101992526`", ",", 
      RowBox[{"-", "0.09588517585046787`"}], ",", "0.05464155304336848`", ",", 
      RowBox[{"-", "0.07928233004292208`"}], ",", 
      RowBox[{"-", "0.19251986600408416`"}], ",", 
      RowBox[{"-", "0.009326149016929316`"}], ",", 
      RowBox[{"-", "0.6419092268717677`"}], ",", 
      RowBox[{"-", "0.20359394490186375`"}], ",", 
      RowBox[{"-", "0.20013072508875882`"}], ",", 
      RowBox[{"-", "0.30835064547338437`"}], ",", 
      RowBox[{"-", "0.07671201247995124`"}], ",", 
      RowBox[{"-", "0.3658060131969946`"}], ",", 
      RowBox[{"-", "0.42500639615153174`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MAPK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18138248999321507`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.08977285477189995`"}], ",", 
      RowBox[{"-", "0.169229556455112`"}], ",", 
      RowBox[{"-", "0.08681793038600419`"}], ",", 
      RowBox[{"-", "0.1816373745988602`"}], ",", 
      RowBox[{"-", "0.21979066981068787`"}], ",", 
      RowBox[{"-", "0.16471189634013272`"}], ",", 
      RowBox[{"-", "0.6859762549997955`"}], ",", 
      RowBox[{"-", "0.11192443485740455`"}], ",", 
      RowBox[{"-", "0.053510227687117516`"}], ",", 
      RowBox[{"-", "0.32349878752971556`"}], ",", 
      RowBox[{"-", "0.18604523095988545`"}], ",", 
      RowBox[{"-", "0.3282300261180281`"}], ",", 
      RowBox[{"-", "0.28545062326456044`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"AKT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18166493911072917`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.030819659285723028`"}], ",", 
      RowBox[{"-", "0.2729441269266965`"}], ",", 
      RowBox[{"-", "0.11342959819258822`"}], ",", 
      RowBox[{"-", "0.19522720479585642`"}], ",", 
      RowBox[{"-", "0.2887644913340973`"}], ",", 
      RowBox[{"-", "0.0677041487423092`"}], ",", 
      RowBox[{"-", "0.52735465330263`"}], ",", 
      RowBox[{"-", "0.1568865238867638`"}], ",", 
      RowBox[{"-", "0.0753421617956879`"}], ",", 
      RowBox[{"-", "0.26016912239448475`"}], ",", 
      RowBox[{"-", "0.20377938610793608`"}], ",", 
      RowBox[{"-", "0.4247794469533678`"}], ",", 
      RowBox[{"-", "0.39313667030617344`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"INPP5D\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.0946381024990129`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.049984151316888624`"}], ",", 
      RowBox[{"-", "0.2095209987368932`"}], ",", 
      RowBox[{"-", "0.0834030741831631`"}], ",", 
      RowBox[{"-", "0.2060534090399563`"}], ",", 
      RowBox[{"-", "0.19423460952173655`"}], ",", 
      RowBox[{"-", "0.13857663323255798`"}], ",", 
      RowBox[{"-", "0.4455559038634096`"}], ",", 
      RowBox[{"-", "0.18885978233256123`"}], ",", 
      RowBox[{"-", "0.19184147400734922`"}], ",", 
      RowBox[{"-", "0.2648788290396264`"}], ",", 
      RowBox[{"-", "0.21162241201560938`"}], ",", 
      RowBox[{"-", "0.44345153067800686`"}], ",", 
      RowBox[{"-", "0.50568388038928`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"RELA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18218411686836491`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.10283215314268605`"}], ",", 
      RowBox[{"-", "0.1920873392381627`"}], ",", 
      RowBox[{"-", "0.10709101837664896`"}], ",", 
      RowBox[{"-", "0.10788619319749143`"}], ",", 
      RowBox[{"-", "0.20980765573945362`"}], ",", 
      RowBox[{"-", "0.16111518044662473`"}], ",", 
      RowBox[{"-", "0.7322285320440992`"}], ",", 
      RowBox[{"-", "0.12830505287795277`"}], ",", 
      RowBox[{"-", "0.17930374405806218`"}], ",", 
      RowBox[{"-", "0.09545359444054347`"}], ",", 
      RowBox[{"-", "0.1867661108641838`"}], ",", 
      RowBox[{"-", "0.32184454851160965`"}], ",", 
      RowBox[{"-", "0.3064378479173295`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"IFITM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.07629081318852289`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.07629081318852289`"}], ",", 
      RowBox[{"-", "0.32878631152146626`"}], ",", 
      RowBox[{"-", "0.10386155158442957`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}], ",", 
      RowBox[{"-", "0.4365214579425223`"}], ",", 
      RowBox[{"-", "0.03143304260487128`"}], ",", 
      RowBox[{"-", "0.5947599533539297`"}], ",", 
      RowBox[{"-", "0.3587043950845741`"}], ",", 
      RowBox[{"-", "0.16703826387813744`"}], ",", 
      RowBox[{"-", "0.15371768783658935`"}], ",", 
      RowBox[{"-", "0.29091194672606924`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NFATC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.20739212171844623`"}], ",", "0.`", ",", 
      "0.024329303972880016`", ",", 
      RowBox[{"-", "0.20679162695780465`"}], ",", 
      RowBox[{"-", "0.04541867681895519`"}], ",", 
      RowBox[{"-", "0.21049641191594368`"}], ",", 
      RowBox[{"-", "0.16460612265663285`"}], ",", "0.029870991732781956`", 
      ",", 
      RowBox[{"-", "0.7339397004527469`"}], ",", 
      RowBox[{"-", "0.23686986404231467`"}], ",", 
      RowBox[{"-", "0.02764694400425035`"}], ",", 
      RowBox[{"-", "0.13681417005109897`"}], ",", 
      RowBox[{"-", "0.22953820969994437`"}], ",", 
      RowBox[{"-", "0.21280867785729338`"}], ",", 
      RowBox[{"-", "0.35642973827330393`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"KRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.295758816890077`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.27052189163675444`"}], ",", 
      RowBox[{"-", "0.1974399735658353`"}], ",", 
      RowBox[{"-", "0.19504468595725166`"}], ",", 
      RowBox[{"-", "0.027428112771337044`"}], ",", "0.06476880377705634`", 
      ",", 
      RowBox[{"-", "0.15653009856345715`"}], ",", 
      RowBox[{"-", "0.337895550763809`"}], ",", "0.06968633132184608`", ",", 
      RowBox[{"-", "0.41527764850834437`"}], ",", 
      RowBox[{"-", "0.37286394963599834`"}], ",", 
      RowBox[{"-", "0.3713356020907587`"}], ",", 
      RowBox[{"-", "0.31580056712389853`"}], ",", 
      RowBox[{"-", "0.25443647294027055`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PRKCB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13479893500866622`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.20256396195516896`"}], ",", 
      RowBox[{"-", "0.3610197671146908`"}], ",", 
      RowBox[{"-", "0.19426929181946417`"}], ",", 
      RowBox[{"-", "0.36800638206399594`"}], ",", 
      RowBox[{"-", "0.23440823093535876`"}], ",", 
      RowBox[{"-", "0.27803373202732246`"}], ",", "0.012962179524894387`", 
      ",", 
      RowBox[{"-", "0.22718003626881278`"}], ",", 
      RowBox[{"-", "0.30994005350769777`"}], ",", 
      RowBox[{"-", "0.3360468790676116`"}], ",", 
      RowBox[{"-", "0.40015637638006324`"}], ",", 
      RowBox[{"-", "0.13208386643695547`"}], ",", 
      RowBox[{"-", "0.25826766023589887`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CHUK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.221425773380745`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.243571757903387`"}], ",", 
      RowBox[{"-", "0.11039225752290059`"}], ",", 
      RowBox[{"-", "0.16365139325744832`"}], ",", 
      RowBox[{"-", "0.016607048325296567`"}], ",", 
      RowBox[{"-", "0.026500877616898285`"}], ",", 
      RowBox[{"-", "0.14315269682400197`"}], ",", 
      RowBox[{"-", "0.0850637578773461`"}], ",", "0.0363063162929521`", ",", 
      RowBox[{"-", "0.4105726758454418`"}], ",", 
      RowBox[{"-", "0.4435978247897623`"}], ",", 
      RowBox[{"-", "0.35068581293552653`"}], ",", 
      RowBox[{"-", "0.48387468310257825`"}], ",", 
      RowBox[{"-", "0.31652206757825097`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SOS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.10961168351076114`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.21094976529594717`"}], ",", 
      RowBox[{"-", "0.1809635103255571`"}], ",", 
      RowBox[{"-", "0.21846939773037327`"}], ",", 
      RowBox[{"-", "0.22268432131751967`"}], ",", 
      RowBox[{"-", "0.13436623870338474`"}], ",", 
      RowBox[{"-", "0.21481163653785168`"}], ",", 
      RowBox[{"-", "0.14265099815527352`"}], ",", 
      RowBox[{"-", "0.1196553373738772`"}], ",", 
      RowBox[{"-", "0.334893616086209`"}], ",", 
      RowBox[{"-", "0.511375697391697`"}], ",", 
      RowBox[{"-", "0.3366464866173687`"}], ",", 
      RowBox[{"-", "0.3632234465426997`"}], ",", 
      RowBox[{"-", "0.3092482808431163`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.295624122684205`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.3275732750314186`"}], ",", 
      RowBox[{"-", "0.2460544962162692`"}], ",", 
      RowBox[{"-", "0.2669404747070069`"}], ",", "0.006903975694237867`", ",",
       "0.07898322273499543`", ",", 
      RowBox[{"-", "0.28317273365747764`"}], ",", 
      RowBox[{"-", "0.20431057830799113`"}], ",", "0.13048602424656103`", ",", 
      RowBox[{"-", "0.27170966624312526`"}], ",", 
      RowBox[{"-", "0.3712295648446653`"}], ",", 
      RowBox[{"-", "0.3389559939504886`"}], ",", 
      RowBox[{"-", "0.3547789024245206`"}], ",", 
      RowBox[{"-", "0.275432570820624`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"RAC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.2705696810595979`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.20025780756710837`"}], ",", 
      RowBox[{"-", "0.2534677964673615`"}], ",", 
      RowBox[{"-", "0.2068992066988645`"}], ",", 
      RowBox[{"-", "0.20025780756710837`"}], ",", 
      RowBox[{"-", "0.18838552003780887`"}], ",", 
      RowBox[{"-", "0.24035913476428952`"}], ",", 
      RowBox[{"-", "0.4929615140796191`"}], ",", 
      RowBox[{"-", "0.1548251192956156`"}], ",", 
      RowBox[{"-", "0.19438304192338338`"}], ",", 
      RowBox[{"-", "0.2705696810595979`"}], ",", 
      RowBox[{"-", "0.24035913476428952`"}], ",", 
      RowBox[{"-", "0.29196024516290325`"}], ",", 
      RowBox[{"-", "0.35395332412631997`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1341251261847756`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.22184935747682982`"}], ",", 
      RowBox[{"-", "0.399220401629133`"}], ",", 
      RowBox[{"-", "0.20673779815922316`"}], ",", 
      RowBox[{"-", "0.1426194015624961`"}], ",", 
      RowBox[{"-", "0.09852130467542528`"}], ",", 
      RowBox[{"-", "0.19422939570954087`"}], ",", 
      RowBox[{"-", "0.35359264817812963`"}], ",", 
      RowBox[{"-", "0.0867094984306964`"}], ",", 
      RowBox[{"-", "0.31664425672943974`"}], ",", 
      RowBox[{"-", "0.2814255432205854`"}], ",", 
      RowBox[{"-", "0.38325435746914155`"}], ",", 
      RowBox[{"-", "0.3156410477634368`"}], ",", 
      RowBox[{"-", "0.32307998127545584`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PPP3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13430780661217814`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.32419203478149977`"}], ",", 
      RowBox[{"-", "0.23668378749500305`"}], ",", 
      RowBox[{"-", "0.22721176999258677`"}], ",", 
      RowBox[{"-", "0.03923614817812529`"}], ",", "0.0005982652764247334`", 
      ",", 
      RowBox[{"-", "0.25444684932444966`"}], ",", 
      RowBox[{"-", "0.3890983856520298`"}], ",", "0.07045515766801566`", ",", 
      
      RowBox[{"-", "0.23298106167244387`"}], ",", 
      RowBox[{"-", "0.28937072607727043`"}], ",", 
      RowBox[{"-", "0.2964728885394952`"}], ",", 
      RowBox[{"-", "0.4343597132050111`"}], ",", 
      RowBox[{"-", "0.36330688452428045`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MAP2K1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.29060174811021067`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.26341817204080253`"}], ",", 
      RowBox[{"-", "0.09721299602844978`"}], ",", 
      RowBox[{"-", "0.16207559355446263`"}], ",", "0.011300368006674008`", 
      ",", "0.05844643404406884`", ",", 
      RowBox[{"-", "0.16383822112003374`"}], ",", 
      RowBox[{"-", "0.5516878912619715`"}], ",", "0.09898848695764009`", ",", 
      
      RowBox[{"-", "0.21599395317462206`"}], ",", 
      RowBox[{"-", "0.3371591747633452`"}], ",", 
      RowBox[{"-", "0.3238673959517276`"}], ",", 
      RowBox[{"-", "0.34842378244085476`"}], ",", 
      RowBox[{"-", "0.2815649306296724`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.05780273280375747`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.3187547588750017`"}], ",", 
      RowBox[{"-", "0.10176932897826184`"}], ",", 
      RowBox[{"-", "0.14223545799051943`"}], ",", 
      RowBox[{"-", "0.028628367984999917`"}], ",", 
      RowBox[{"-", "0.08888635849585656`"}], ",", 
      RowBox[{"-", "0.24565143729098476`"}], ",", 
      RowBox[{"-", "0.3377629421284371`"}], ",", 
      RowBox[{"-", "0.014764011480735292`"}], ",", 
      RowBox[{"-", "0.49459800646072816`"}], ",", 
      RowBox[{"-", "0.24891046199384032`"}], ",", 
      RowBox[{"-", "0.524683600432957`"}], ",", 
      RowBox[{"-", "0.13215080026032225`"}], ",", 
      RowBox[{"-", "0.28593570492914033`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CD\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.042558634300996406`", ",", "0.`", ",", "0.08198978697165296`", ",", 
      RowBox[{"-", "0.24595210487045965`"}], ",", "0.054631747891002745`", 
      ",", 
      RowBox[{"-", "0.12223621407006559`"}], ",", 
      RowBox[{"-", "0.02075468445961393`"}], ",", "0.10630718071476095`", ",", 
      RowBox[{"-", "0.5044872256907823`"}], ",", 
      RowBox[{"-", "0.27312245331401525`"}], ",", 
      RowBox[{"-", "0.293283851979613`"}], ",", 
      RowBox[{"-", "0.12097875547569602`"}], ",", 
      RowBox[{"-", "0.16025169453032473`"}], ",", 
      RowBox[{"-", "0.3127861494923794`"}], ",", 
      RowBox[{"-", "0.589953737737302`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SOS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.08439118564169859`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.14065722814083692`"}], ",", 
      RowBox[{"-", "0.19975840111640467`"}], ",", 
      RowBox[{"-", "0.1550361905508878`"}], ",", 
      RowBox[{"-", "0.22514123129829777`"}], ",", 
      RowBox[{"-", "0.11811067040877182`"}], ",", 
      RowBox[{"-", "0.17988904253126553`"}], ",", 
      RowBox[{"-", "0.38704904435955473`"}], ",", 
      RowBox[{"-", "0.11278738394610092`"}], ",", 
      RowBox[{"-", "0.2943193759037332`"}], ",", 
      RowBox[{"-", "0.3831074318615434`"}], ",", 
      RowBox[{"-", "0.38532091442119687`"}], ",", 
      RowBox[{"-", "0.33817412019803783`"}], ",", 
      RowBox[{"-", "0.39166077399173954`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1093931281135468`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.16150511710402168`"}], ",", 
      RowBox[{"-", "0.217788835823636`"}], ",", 
      RowBox[{"-", "0.14151209402131568`"}], ",", 
      RowBox[{"-", "0.02187515159569934`"}], ",", 
      RowBox[{"-", "0.005107192548820926`"}], ",", 
      RowBox[{"-", "0.11509486383751792`"}], ",", 
      RowBox[{"-", "0.34416740603812057`"}], ",", 
      RowBox[{"-", "0.06847667951758128`"}], ",", 
      RowBox[{"-", "0.3673865412674147`"}], ",", 
      RowBox[{"-", "0.26329300004781453`"}], ",", 
      RowBox[{"-", "0.3704355806623292`"}], ",", 
      RowBox[{"-", "0.40242068482847`"}], ",", 
      RowBox[{"-", "0.5041219068423514`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MALT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.17655612267617768`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.11521393610234593`"}], ",", 
      RowBox[{"-", "0.27020814693938333`"}], ",", 
      RowBox[{"-", "0.1534255449761702`"}], ",", 
      RowBox[{"-", "0.15262993678398293`"}], ",", 
      RowBox[{"-", "0.14313180484622515`"}], ",", 
      RowBox[{"-", "0.13596341915181728`"}], ",", 
      RowBox[{"-", "0.436426134637418`"}], ",", 
      RowBox[{"-", "0.03370529303435752`"}], ",", 
      RowBox[{"-", "0.23597089951911646`"}], ",", 
      RowBox[{"-", "0.37278194555901395`"}], ",", 
      RowBox[{"-", "0.40824824711322666`"}], ",", 
      RowBox[{"-", "0.3316737833629997`"}], ",", 
      RowBox[{"-", "0.3657958303097142`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13768718576799685`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.0350415471099589`"}], ",", 
      RowBox[{"-", "0.23329032760889032`"}], ",", 
      RowBox[{"-", "0.30507233309062876`"}], ",", 
      RowBox[{"-", "0.061472837011514486`"}], ",", "0.0061646627801911725`", 
      ",", "0.088498660325098`", ",", 
      RowBox[{"-", "0.701171314093717`"}], ",", 
      RowBox[{"-", "0.10976830408444116`"}], ",", 
      RowBox[{"-", "0.22873495834860416`"}], ",", 
      RowBox[{"-", "0.4042465754624842`"}], ",", 
      RowBox[{"-", "0.30008380000288404`"}], ",", "0.10574589498282079`", ",", 
      RowBox[{"-", "0.003761552628280958`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"BTK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.0774534869145951`", ",", "0.`", ",", 
      RowBox[{"-", "0.1576362287901149`"}], ",", 
      RowBox[{"-", "0.06526105131879513`"}], ",", 
      RowBox[{"-", "0.1309914632199784`"}], ",", 
      RowBox[{"-", "0.16306774666450977`"}], ",", 
      RowBox[{"-", "0.12646989712224893`"}], ",", 
      RowBox[{"-", "0.25672840278318193`"}], ",", 
      RowBox[{"-", "0.35420591012501973`"}], ",", 
      RowBox[{"-", "0.16918919314037137`"}], ",", 
      RowBox[{"-", "0.4403921634493964`"}], ",", 
      RowBox[{"-", "0.4247697049765375`"}], ",", 
      RowBox[{"-", "0.3772944648027281`"}], ",", 
      RowBox[{"-", "0.26321964735090364`"}], ",", 
      RowBox[{"-", "0.3148678217079514`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Q08209\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.02168638832940146`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.266154607197602`"}], ",", "0.06610177744422054`", ",", 
      RowBox[{"-", "0.05373241640194315`"}], ",", 
      RowBox[{"-", "0.18256867810695832`"}], ",", 
      RowBox[{"-", "0.8257260055841014`"}], ",", 
      RowBox[{"-", "0.03140438984890247`"}], ",", 
      RowBox[{"-", "0.42971666907446715`"}], ",", 
      RowBox[{"-", "0.09984301541494858`"}], ",", "0.0013423131090658262`", 
      ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"-", "0.06591568501104547`"}], ",", "0.0159995291855583`", ",", 
      
      RowBox[{"-", "0.07788521151629395`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"P29350\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.10114460966671077`", ",", "0.`", ",", 
      RowBox[{"-", "0.046451459039807026`"}], ",", 
      RowBox[{"-", "0.021365981724342998`"}], ",", "0.021192705232220825`", 
      ",", 
      RowBox[{"-", "0.08577537228510858`"}], ",", 
      RowBox[{"-", "0.33997196450847056`"}], ",", 
      RowBox[{"-", "0.1535604201471789`"}], ",", 
      RowBox[{"-", "0.8763840010256423`"}], ",", 
      RowBox[{"-", "0.1077819799473775`"}], ",", 
      RowBox[{"-", "0.1663252205448133`"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"-", "0.16293749015093129`"}], ",", 
      RowBox[{"-", "0.0754141410705864`"}], ",", 
      RowBox[{"-", "0.02492730161271568`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[309]=",
 CellID->778663946]
}, Closed]],

Cell["We can now extract and plot the sequence of figures:", "MathCaption",
 CellID->1111199700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigureTimeSet", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}], ",", 
    RowBox[{"MemberSet", "\[Rule]", " ", "membersBCellReceptor"}], ",", 
    RowBox[{"Intensities", "\[Rule]", " ", "intensitiesAll"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[310]:=",
 CellID->1553382050],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd4FcXax4OoV++1gKhXvddyRa/1IqJXUQRRrogiSBMRVIp0qaF3QiCV
NNJI7xDST3rvPZH0TgiQkJBGGunlfH/O6H7Hk5PDSSHZE97fM895ZmdnZ2d3
57zvf3ZnZ/+1Zvui9fcpKSntegg/i1bv+0xZefWBxeOw8N22XZs2bFu39qtt
u9dtWKc8dc1YJG5BtrOI3I4LCYIgCIIgCOJeoqmp6fr16yNdC4IgCIIgCILo
H5qamk899dRI14IgCIIgCIIg+gfpWIIgCIIgCEIRIR1LEARBEARBKCKkYwmC
IAiCIAhFhHQsQRAEQRAEoYiQjiUIgiAIgiAUEdKxBEEQBEEQhCJCOpYgCIIg
CILgMw0NDVLTSccSBEEQBEEQvCUvL2/t2rVSV5GOJQiCIAiCIHjLwYMHn3zy
Samr+K9jPT097e3tr1y5MtIVIX7nLl0RutAEQRAEQUjQ09PzwgsvfPnll1LX
3lHHdnZ2dojR1dV1d6rZJ3//+9+VlJQuXLgwzPsl+uIuXRG60ARBEARBSBAZ
GQl54OjoKHXtHXXst99+qyTGmDFjnn766SlTppw6daqqqmqQdaupqUlJSbl2
7ZqMPCRvhpMRvCI8udBZWVl79+6dMWPGW2+9tWrVKgcHB3m2ysnJ2SgiNTW1
rzz4J27fvn369Omvv/76kiVL1NTUqqurB5PT399///79n376KbLNmzdPQ0Oj
paVFzsMkCIIgCIVgzZo1jzzySHNzs9S1curYxx577GUREyZMgJRlmhYbDvIp
sLGxMcpRVlaWkYcn8uYeYQSvCB8uNJQh/ixKf2b16tUdHR0ytmpoaHjttddY
Zmdn594ZsDm0MffH4XjyyScFAsEActbX1y9atEipF88//3xxcfFQnQ2CIAiC
GFlaWlogQX/++ee+MsipY3/99VfxMh0cHMaNG4f0GTNmDKZ6x48fJx3LK0bw
ioz4hS4qKho7dizqMG/evLS0tOvXrxsZGd1///1IOXDgQF9b9fT0LFy4kFOS
UnXs1q1b2dp169ZFRERcunQJohT/nQceeCAkJGQAOd955x3kwRnT09PLzs4u
KyvDX5KdwGnTpg3hOSEIgiCIEQReFa4tODi4rwwD0LEM+E2kw722t7dLrOrq
6iopKUlKSrp27Rq8vIzCUWx/VVNbW1tqauqNGzdkbNIv5K8tP0G1MzMzOzs7
ZeThwxW5deuWqanprl27cnNzh6pYdKny8/ORrbGxUfbeQV1dHU4UBCpqIjXD
li1bUIHp06eL3321trZG4vjx4/vaSl1dHRleeOGFKVOmSNWxxcXF+JtglaWl
pXg6LkRhYeHAckLizpkzB0pbPDE8PJxpYNnDQgiCIAhCUZg7d+5zzz3X3d3d
V4YB61j4XOY0MzIyuMTk5OSff/75iSee4G5PPfLII6dOnZJQWW+//faLL774
9NNPP/jgg8iD38f+TGRkJJeZyRuBQBAbG/vFF188/PDDrOR///vfiYmJLI+L
iwu2+te//sVt1dDQgELE6wZBgjyffvppv2o7bdo0bKWqqtr7zLS2tj7//PNY
C1Eh4wQOOa+++ip2Wltbi1pBPrGaP/TQQ8uWLes9S/BIXZHe7N27l2VDe5P6
mL5fxeKcQ3ByBzVmzJiXXnppz549lZWVEjmbmprOnDnz3nvvcQ/rEZk6dWpW
VpZ4tubm5r/97W9Y6+7uLp6OE/XMM88g3cLConedQ0JCxo4de9999+H8fPjh
h1J1LM4/0j/66KO+zswAcvYFrhRK8Pf3H3AJBEEQBMET4NPvv//+3bt3y8gz
YB2bkpLCVEF5eTlLYY+kGZCUkBlPPvkkW9yyZYv4tpBVTB2xtfKopqVLlyIb
BMNbb70FxcI2HD9+PFNu6enpLOXy5ctsKysrKyz+85//5MpZu3YtUjZs2NCv
2hoZGSEFAg+qVeIMODo6YhXkn4xugmzy8vIgKfu7FTsh7CTg+r777ru4gqzm
b775pvjt8RG8Ir1hj8IZMTExfR2XPMVCnDOVi8NZvHgxBDxOAruTOWHCBPEb
pxUVFc8++ywrBDIV8vU///kPGzzw17/+Vfy+ZU5ODkvsrbHZPert27dLpF+9
epWdz5MnT2IRdZCqY3Hmke7l5SX1tAwsp1Tq6upw3lBCWlrawEogCIIgCP6g
r6+v9Of7pb0ZsI5duXIl0p955hkuJSIiYty4cSoqKty71W1tbb/88guTW5zC
FGfevHlK8j3FZvepCgoKWOL58+dZInSmUPTcnL2eg3SWYdWqVSwD99oL01E2
Njb9qm1LSwtTiRKPesHMmTM5DTMwIA4feuihnTt39msr7oRs3LiRe56O68gS
TUxMuJwjeEV6s23bNpYBVZL6Wr38xa5fvx4pkyZNEi8HqhJdFVtbW4licZk+
++wznApuyrikpCR2g3rNmjVctuDgYKS88sorQlFzOnLkyPLly7Ozs7GopaWF
VRDM4sXiTP73v/9F+oIFC9hQDak6trOzk8nmK1euQGdCo6JfuWnTJgMDA4kX
suTP2RdsENHjjz8+4I4VQRAEQfCH9957D75edh45deyKFSsKRCQmJsJdzp49
m6kLXV1d8cy9x8o2Nzezu3xS33+RXzV98803EoVD7YjfV5w1axYWOU04ceLE
559/HinW1tasGkwkiA/OlLO2J06cQMrbb78tnrOwsFBJNDy4oqJCRuXvSGBg
4F/+8hfZZ0ACdkJ638hlZwBqSjxxBK+IBLW1terq6pCakJGDLBaSEikffPBB
75vkvel9BgB6Hyjh9ddf51LYONhPPvkEcT8/P9a80fixaG9vj/jUqVPFS1i3
bh0rgetKSNWxly5dYu3Ezc1twoQJSmLguuPfN4CcUoH0ZYNM9uzZc8dzQhAE
QRA8hz0n1dLSkp2tv/PHcsDhyriRCMXr6ekJ3bJhwwammtTU1Hpnk1819X6N
nd1XXLRoEVs8fPgwFj/++GPEy8vLEUfKmDFjVq1ahZSYmBh2q0rqW06yawsB
xm72ir8ux0Z7LlmyREbN5cTf3x9CRfbwD3H6OiEWFhZKohnSpG41/Fekv8hf
LHQme4CO3srx48fz8vLkKb+pqQnNAGcJSm/GjBlKouET3FpTU1OkfP7550LR
FWGNHKIai6gS4pMnT+YyW1paIuXRRx8V37VUHRsaGsr9ZV555ZXTp0/Hx8ej
ITEpjvYZFhbW35xSWbp0KTshNIUsQRAEMQrYv38/fH1ZWZnsbHLq2GeffXa6
iFmzZkEZqqqqSp05tqSkZNOmTdyIRHGgN3rnH4xqgopG+vz589kiu4f20EMP
dXR0MOEREhICPcBe/tLR0UHK//73v4HVlu3rq6++YovYxdNPP40UaA8ZNWd0
y4G3tzf6BXLeSevrhAQGBrLK19XVDeAYGUN4RfpLv4oVCARsNCnjzTff3Ldv
Hw5WasnQlgsWLEDb6H0SxAvE4n/+8x/hH+MKVq5cycYVGBoaYtXcuXNZzpSU
FPQ7kGJmZlYpBurAJXJjdJOSktiOvv766/r6evFasVONivU3Z2/QCWKNPy4u
rq88BEEQBKFATJo06bXXXrtjtgGPj+1NREQEex4KQbJhwwZPT0/IgObmZjaO
9C6pJvbkVyi6a8peSP/tt9+2bNmCOOTc8uXLlUTTEC1btkxJdId2YLUtLS2F
zkSZ7P6bu7u7kug9+jvO05WRkdFbO8nAw8NDdoEyTgir1dixY9va2gZwjIwh
vCL9pb/FojcB/f/LL79wKv3+++9fv369+KeTW1tbWRtAn+7TTz/V09OLjY29
fv06zoyEjkWzURLNpdC7YuxWP0pmi309oRBnzpw5LDOaJUvpPTOYm5ub0h8j
cvuVUwL0WNl1l/ikAkEQBEEoLkzL9XWHimMIdSy7P/bdd99JfDtMhmpi3yTa
vHmzjGLllzevv/46UszNzadMmcKGs5qYmCiJHvW+8cYbiPj4+Ay4tuzFMVbV
+fPnI66joyOj2ozOzs5COWBvM61YsUKeN3T6OiFsItNXX311wMcoHOor0hsZ
89wOuFj0JhITE7nvW4m/eWdnZ6ckGk8iceecfaxZXMdWV1ezflB6erpE+R98
8IGS2DCM3bt3fyQNNm0Xzj/i4kNu2BdDxCd8YAQEBCiJpsIYQE6Offv2KYlG
HfR+wY0gCIIgFJfU1FQlOd6mHyodW1payoSBxFvwXV1dbH54qaqJzTzP3byS
ivzyZs2aNUiB4GT35ZCSmZnJKs++ylRVVTXg2ubk5EAtPPLII0VFRQ888MBD
Dz1UW1sr+5zIycWLF5944okffvhB/EaiDKSekPb29hdffJGpVpbChysiTkJC
wqRJkyAppe63X8X29UkCVBs5Z8+ezaWwsbU4txI5PTw8JHQst7nEe2qsCd13
331Sp3cQp695t9izgN6jAg4dOiRxquXPKRRdR9bg0bYdHR1l140jPz//008/
nTBhwtKlS6W+AUcQBEEQPOGtt9564403ZOcZKh1bXV3NhIH4faH09PT33nuP
pUtVL2ZmZkwkxMbGcokdHR3i9w/llzfsRScmWe3s7ISiO3Xjx49nc42KfyVh
YLVlt2Ffe+01/P7000+yT4icpKWlQcRCVMgpYoVi88dy093jdH3//ffs4TI3
zRofrog47OyxSkodti1nsY2Nja+++upnn32WkpIing2dFFxrJdF0ZFwim/r1
7bff5qQvjuXEiRPscw8SOpbd9kT1OFlYXl7OLvfChQulHpQ4felY1vHBqtOn
T3MDUaKioth4XVNT0wHkbGlpYSNAsKpfwwnQbpX+QJ7R3QRBEAQxUmhra8Nb
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
2JOCk7vMb3+W0SDK4IDdgd0Wu3eZ7bLKtIJDgTeBZzG9YDo0Ry6iubnZ29sb
h9OXKxGKeRMg7nSqq6vDw8PvZatybxIREeHh4YEmPdIVGTFGSseS5WFxsjz3
JmR5SMcSUhlAwwgICDh58iRsqaamppeXl5GRkYuLi5WV1ZEjR8zMzBA5f/68
uE9pa2sLCgry+zPI88ADD4wbN+7wocMW5yx8m3zhTeKEcfqR+jtMdmw7s838
onlMR4xRnNGaE2vMfzOHo4E3Ce0KPap/1Nfbt7CwcEgOH95QXV39+vXrMvKI
e5P6+np/f39u1Y0bN+ANh6QmhKJAb1uMlI4ly8OtIstzD0KWh3QsIZX+Noz2
9nZTU1NXV1c3NzcDAwNzc3M4FES0tbWtra3t7e1tbW2xCF8ju5yOjg4fHx/2
gM8twM2/1R/+IlmYrO6nflJwUsVNRT9K3yzFTCtI65jLMeNE46ieKGQIE4bZ
+drhjxwXF4f9shsUbCLxARx7d3d3cHCwg4OD7Gzi3qSnpwfe5ObNm9zazMzM
jIyMAexdfmpqanCkLS0tvd8EIYYf8iYjomPJ8pDlucchy0M6lpBKfxtGV1fX
9evXGxsby8rKEKkUkZuba2JiAvNeX19/48aNioqKtrY2+ct09XE1ijSyTrI2
jDDU9NJUPa9qFmt2JuSMrr+uQbCBYaihjp+OTqCOVZKVWYKZpbMl26qpqQl2
PiIi4uuvvzYyMurXUQhFriQ2NvbatWtwarK/kBITE1NSUsItFhQUSMx+gzpw
7mbIaW1thftWV1fX1dWF45O4gdPW2lZZUXmj/MYdQ2V5ZVPjvftAaghBq6Ov
nA9/IWR5yPLc45DlIR1LSGWoGsbNmzdh9wa27cW0ixY2FubW5st/Wq5ySsXG
wcbK1srKzsrazhq/CJo6mkuXLzUxM7G0sYyOiRbf1sXFRUlJaezYsR4eHreX
u+UK3V23XQlzAZ6enrLvNiAbDAi32NnZiU3EB6chzmYsH9jh3xF4kOLiYjhr
a2truD/xVZ6+npoCTeNwY5MoE+MIY6MwI/FgEmliFP77r0GogZFdv30u0ZvE
xMSgoKB7+Q4Vf97zEpLlIctzz0CWh3QsIRU+NAwnTyebQhu3CjePKg+3G26u
Fa4IWET4PX5DtKrC7VzpOZNzJuLbZmVlwbY7OTnt2LFDw1zjrMdZUw9TU88+
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
vxJr4WvY1cGV6us1EDQV8Ue3cN/t7e3cHQy0rsF/u5Oe7pGOlcpotTyQiDt2
7NjyB1tF9I6zxZ9//jk1NVXGvuRn3759mzdvRrG//vrrzp07EV+0aNGaNWu2
/BnsdOXKlfhXDmZfZHkUAv4YDWKkQK//scceO3LkiHgifxrG3fYm6Mm++eab
SkpKdnZ24ukwTVVVVd7e3jL6ueLeJD093SzNLLw7PKQnJKQ7JFQYihAuDA8T
hoX2hCIRv0gJ7gqO6I7Q8dZpqm/itk1ISJB4YVkcVCAtLa2vtZ2dbStWaC5e
7PXddx5LlrjNm2czf77NokXnEZ8/3xbxhQudsOq779yXLhX8738GiYkDn3gH
nis2Nrap6XbNf/jB9P33kz7++HaYNi1l8mSnSZPMP/ooZtq0i1jEL7fq7bfd
g4IkPwd/R9hc6OyS4drB/uNy6+npwfUXFRXBd6MmgYGBFy9edHNzi4mJgbMw
NTVNSkrChYCDjo+PLy0txalLSUnJyclRU1MrLi5G5Pr169jQ1tY2JCQEW2Et
Dqq6uhqLAz4tDHrbgnSsVEar5YEeU1ZWPiHi+PHje/fuhcKEH1FRUdkn4tCh
Q2ztyZMnoTnx3+yrqDsibnn2799/7NgxVrKqqipKXrdu3dGjR3FFsIhfbqeQ
smFhYf3dF1kehYM/RoMYKc6fP//cc89JjJXiT8MYhrsi2Tk5H0+bZmJqyqW0
d3QEBAYKvL3tHRwQqe3j9VjOmzQ3N/v4+FhnWScIEzT9Nffb7rfPtz9gfyCi
M+KE+wmHQofDToePOh89HXL6TMyZeGG8gZ/BzeqbHX8Aj4AO9c2bN2HZOnqB
tSi/dzqjpaVpxQr1xYvdvvvOZfHi8++9t+HDD7d99JHy55+f/OCDrYjPmnXq
+++hY12WLnWfPVvf1dW9aKDAdI8fP/6FF17Q0Di1cKHO1KkJ06bFIkyfnvzG
G5oTJ+565x3Ld9+1e/9997ffPjNtGjRt7CefxL/zjqu19TlWQl1dXW1tLYuX
lJTg0GDk2SJ7OsbicBbwDhcuXPD19XV1dXVxcUH7RIcL3gqOCU7K0NBQX1/f
yckJHsTGxgauE27L2dnZysrK0tIS/kVLSwvpKAeb29vjMjqgBE1NzZ07d0ZE
RCAnvJKBgQG2wo7gHwc/xI68CelYqciyPNnZ06ZNMxWzPPhHoymiIaHRBgQE
9B4Zy+CD5cHh4990XAT+mPPnz1+8ePF33333yy+/LBIBeQlhibX4w0Jt4l85
eMujrq6+ffv243+A/+/y5cvnzp27fv36TZs2oT4rV65kq7BT6FicRrI8ox7+
GA1ipMA/8ZtvvpFI5E/DuKveJD0t7ZydnYezs6Gu7poff3S2t78dHBwuODi4
ODm5Ojm5nz/v4uiIxfN2dgm9BkrB3GVkZPgDP387OzvrbOtEYaJepN42w20a
/hpwKynClGMux/ZY7dEO1t5ltksvQo99zvLUhVPnHc97igHDiGOB3fPsJ25u
LvPmHRDdcXWBXp0x48iHH26fOnXnpEk/fvaZ6pQpvyxc6PDdd66cjrWwsEoY
KMHBwejyfPTRRzY2lvPmaYrr2Lfe0n/xxY3Qsf/850/PP79y0qSzH38czXTs
5MluenqmrITy8vLS0lIWT01NhZdMTk5mizdu3Lh69SqL43LDyOOUwpXj7KKr
BV9QUFAQHh6enp4OzxsTEwNvgpyOjo5wKHAZcBBwNG4iYmNj4ejhL+Ch8Its
AoEAJYSEhMDXxMfHZ2Zmwn2cPXvW3d0d8cbGRvImg4d0rFSkWp60tDQ0XbRb
SBpILycR50Q4i4CCQrPHIrKhxUpszgfLg8pDsrKbsdCrP//885IlS6Bjv/ji
C6RDWx46dIiTlNCx+OsN3vJALqIocR2L/c6aNQs6dvr06TNmzMCuoTnZTrdt
2wbZSZZn1MMfo0GMFLA2P/zwg0QifxrGXfUmFkZG+xctgilUX71abfXqEz/+
qPrTT8dXrEBQ+SOOtQiHv/vu9IkTbCvYwJycnKCgIFjR0NBQ9PSFolsrdnl2
qcJUdT91VU9VFXeV3Ra7HXIcdpnv0o/UV/VS3W+7H6suXLmQJEwyCjJqaZKs
TFVV1QBGc/X0dP7wg8aCBe6LF7suWeIxZ47Jxx8ffO+9rdOmQdDu+eSTo0hc
tMhVtNbz88/1kpIGNUqN+zzQ99+bTJmS+OGHCQhTpya//rrRpEkX3njD9JVX
1CZOVH37bbupUxNFq5LefNM1ODi6vzvCxSosLGQDyeA+JEYJYq2Pj8+1a///
VXpUrL29nS22tbVxYw5zc3PhRGpra2V8q537MP1gIG9COlYqUi0PJBCkl7Ky
8m4RO3bs2Llz5zYR27dvZ3FlEZs3b1ZXV2db8cry4PygnseOHWOiEdVesWLF
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
WawhiZbk5O00JxEhLS/tpV/1r6yarCCgRN3d3Y8ePWpra+vt7e1eUeAqr8jf
ptwGV0c5nwOc6ry8PLI9GGFLGv39/Tt37oSU8PDwLDmTNQHFPExQzENmUMyz
IsxDYV2D8rFLxuJq8njmsXuSe/79/Lz7eYU/FhY9LCp4UFAyXVL8sLhoqggh
fzKfmGKdkLMh1bXVi+8Op2KhoXnIgDt37pSXl1dUVJxZUTQ0NODarfhQziuO
1VQTOqOrPVINDUlnRxqNjY1vv/02pOS7774bHh5eWiZrBYp5mKCYh8ygmGdF
mIfCugblY18JrD8RvFRNAnICTtFP1TypCWwIdCt0iz4fbZNqk3wl2aPEw73I
PfdWLhKzbmQ10BuSrybXNbz83QeOYnW+g3pVEGPVcenVHs5zQUHBjRs3uJH5
SqG2thZav2pq8vjx4yWMxclVzCcNlPBXv/pVcHAw57/eUMyzECjmYQuKeSjm
WRHmobCuQflYzgFCA2f29vaeO3cOuS3e+w2hJo30xsizkbFdsW75bicrTmr7
antXejvlOOkF6oV1hGVcyzhZfrKZ3pw0kMSJmmB35HwqcunSJWIckLa2tpSU
FKKzSqLXPhR4oU4d5wyBh/OJTdh+LwedWpE+ALmHrq4unIHp6elV2+O9e/f6
+/tXbXcvBVvSeFV5pZiHLSjmWQgU81DMsyLMQ2Fdg/KxnKOurs7Z2TkmJiY0
NJToLgbZLtTig5oE5gY20ZsSexPDT4e75Lt4lXtpemsGNwdbJVk55zp7lHhA
VuK646AmKYMpnKhJTU3N9evXl3kU3AAKBqkluqm8du1abW1teXl5ZmZmXl5e
QUEBzhJUGNOMjIyKioqZmZnW1lYsLS4uzsrKCgwMxCKkVFVVpaamIp6YmNje
3p6cnNzY2EjkPzU1VVhYSObG9d27dyGOK9i7+0uB+pybm0ueHh2pcWnZgmIe
roJiHop5yEMaFNYKlI99Jdy+fRuFCQoKAnPSGfqyUP9pj2cfO8c6pw2npQ+l
O+U7OeQ6BDQFuBa7+tX7GUYYWiZbetd464Xo+Z7yzRrO8qn3eelXanTGM4fe
3t7lH8WKA/IBmRsdHYVY9PT0pKSknDhxwtHRMTY2FrIbEhISFhbmwwCu5qVL
l6AU4eHhnp6eSMGl8fLycnBwsLCwwJp+fn5Yx93d3cPDg1U6s7Ozyawmq/x2
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
57/xRtUbb3S9+eZTLH3tNfoHH6RlZiayZotrTeRjbGyMqwxpgBIRizo7O4eG
hoh4Xl7e2NjYb37zm9dff/3YsWOjo/96MA4NKi4uvn79OqZQ5IaGBriOurq6
1NTU7OzsysrKlXqmR/lYtqCY51WZZ8+ePai0enp6hAdzcnJSVVX94Ycf4Mr2
7dt3kAFbW1vC8hFL4+Pjucc8Pj4+cHrwq/Cohw8flpOTg1+Fj4XTExISgs3W
ZABGDvcm/DbzDp3DPDgofX19pllFyZEbssKGmMI0wvESxhKL4I3Dw8OXwzw4
J8xziELKy8tjF1gTZw+HoKysDO/KPMMqKirMHP49mYfCxgN5Kgb51QR37vzf
e7kHkIaJiQkoAkxy9uzZgoICHBqmaPj39PSAlIgXYa5xrsZRxu7F7sqOyjLm
Mpi65LucrDwZUB9gFG7kf8pfN1C39GFp/vV8VTfV8rJy1l2UlZU1Nj7vYn14
+OqWLUnbt3dv3352x47uv/414OOPo//2t6A//tH8/fc1//IXN6QzXO7Zbdu6
v/kmZnLyX78wo80OvsI1QryoqijnXk4DvaGeXt9Ib8y6kWUYZuhf728SZaJo
p2iZaNlEb8IihDp6XWReJGthRkZGQHrEQampxX/wgedHH7lj1x995PHhh9Yo
zJ/+ZIn4p58mInz8ccjHH4d/9JHXe++ZZGZWsuZz6tQp4nHB/ft3BAS8xMSK
xcTyEcTFC//xD41vvrHdulXr668tP/lEio8vGImMRcUHDviMjCw4Zj0rcMYg
McyhaogrQmf8KPHaa+def53+xhsIj3/2s8if/Szttddyf/azCKS89lr5a691
MBbR/9//o3/ySemzZz/5xhg6SDxz6+/v9/f3h2FYaGzQmZmZlJSUOT3VQ4BC
QkKCg4NbWlrc3d2NjIwCAgIiYM3DwuLi4pB5UFDQSv1VTflYtqCYZwnMg13A
tcJ9wWi5urrCd8FowYkJCAjs3btXQkLC8QWwDvwYayf83GAe7EVcXFxSUhK7
xhTWFIWBiUWcGBNNUVERzhC1l5eXd85XxEzmQSG1tbWJgyJKDtOLfGCPYZLh
3nEgxFJMsSbrR7CLYBHmYZ5D2GOUGaWFZ8bucEqJ70BQjYlPdg0MDOZ0hvDv
xjwUNh7IUzHIrya4i2k0GjdyZouoqCjoF9HDXldX1507d5jfKTHx5NETa39r
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
xuLYMD52lZkHp/r48ePW1tYmJiY6Ojr6+vrGxsb6L4AUyxcwNzfHOqzbUsyz
gqCYZwnYMMxDYeNhrSoGCN/IyAg1GWxAK6fFX443DDF0K3CreVoDTal7Wmeb
ZosQcyHGKtnKJtXGLsPOLM4s6WpSQlHC4jkjz8VbrGVlVZKSThoaEXx8xw8d
0v3uO2kxMYs9exR5eJQRvv9eVlLSTlMzUl09TFU11MDAec7mIKhVUxNIybvv
vvvLX/6yubl5dfa4mlio006gs7PTx8cnLS3Nzc0NzfnS0lI09kGM3t7e7u7u
aMtjFhwIely8MyJuqMka/m0Bd7HIT+uTk5P37t2jM76lJEQWkenpaWguSos4
IsTrPCg1sfLExAQiDx48QGT+k5aFsK597BoyT0VFha6uroODg6SkpJycnICA
AGytiIiIqKiomJiYoKCgtra2o6Ojvb29ra0t3OyczSnmWSlQzPOq2EjMQ2Hj
YRUqBlr0IPCSnwLMsIkBRQXFqNSo7PHsYy7HPEs8nXOdXQtcDQIN9AL1dP11
4y/G+1T7IHhXeiPFvdTdOdS5ZFHY2Njk5uYusoKzs7u0tCucqqysm7Cw8d69
SjCx/PzaIiImAgJ6iCsp+WhohC/kY6FWxD27CgAV8PHxffDBB6umX6uJjo6O
7u5utouGh4f9/PxwHaEpYWFhYG9oSi4DeXl50BpoPXgVgrJI/uDMsrKyFS/2
GqrJlStXVn+n87FefCzZmMfV1dXAwABO1dDQUElJ6TADMjIyysrKsLWIm5mZ
weUu5GMp5lkpUMzzqthIzENh42EVKsbTp0/RHLv3U1y9elVCQiIkJOTmzZsZ
RRkpwykmkSZZI1nOec7eVd4nYk9YJ1s70hwD6gOePxLJtHPIcnDOcXbKdwrP
Cr+3KJKSktDWXmSFjAyalJSrllYUP78uP7/ODz8oHD1qv2+fKi/vMUzl5Ny1
tWPgchHU1CIMDFzmHA5IbE5n6St6rh4/ejTNDI8fQ4hLtbTUWROZi9BKZpsJ
0Qs3MXrR4njy5NH8nNmGx485bTJzDqLjwTl/vxI4d+4c8aPEzAtAWFnXREO+
pqZm8f9QiPFlVrzYa6Umg4ODtbW1q/mF5EJYLz6WbMyTlZWlr6/v5OQky4CI
iIiOjo64uPiRI0cwNTIycnFxcWQAZsnKymrO4XCVeZ48eTLLAvACnJiGhsbs
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
j69i//6ar7+ObG/vWPEDfPBg0sEh0No6zNo69GUB6/jduXObk2xX4W8LVPvK
ykqy/WTBBPl9LMU8ZAbxfSzMqlWKVVRnlH+9/8mqk751vuYJ5ojnjua6FLhE
nI1wznOOvRDrV+v3SsyDSwCPSozta25ubmFhYWNjY2ZmRkSQQoz86+Dg4OTk
pKWlheqx4gcIq+nJgMfLgHVcXV1v36aYhyNQPpYCW5CqYoCU2A7dAqZyc3Pj
8OZaBTW5e/duRUXF5ORkWVlZe3v7OnozxYoHk/f5hXQFxT2FJNz5DzsLiLkJ
iLkIiLliFvEDQo6CR9wPiboKirsdEnX7bq9WT88//7aApkBHCgoK+vv7cSqm
pqaCg4PnXDj4WFFRXz6+yv37Cz/7zGDzZtN//MN2+3a3zz832rrV7quvvHl5
83h5cw8cKD14sOKbb8I7Otj8Lb5MjI3d2LfPiZ8/m58/nZ8/gxHSX4S0FxEk
ph06lL17t8vw8CAn2TY2NhYWFq4s1V+/fp3ZuVBqampkZCTxNpycIL+PfVVQ
zLOamJiYkFWU1THS0TbWVtdT1zTQ1DDQwFTLSAtTNW01bSPt57OGWpr6muJS
4sz+CjhhHlwCAwMD2FS4VmFhYVFRUdQ0BQUFERERKSkpFRUVtFmIscngZuFj
2fZTsUzcvHlTVVWV2BETxEBpxJSZgnVQJOZ/fIuDYh5SkQYF8oAMFQO0PDw8
dPXqAO7soqKCoaHBOeHUqToTE2P4KDgN0Nfiua2CmqD5XFpaSsRBAkVFRcR4
i+sLk5N3RQ+fFBRIOSySJS6WJ3AoDlPRwzQiLno4m/9g9MGDkSIiGaKiOfv5
/Jg+lsCDBw/q6upw7GzH63zhYysOHCiDff3yS4fPPzcRFGzasuUE4rCvhLnl
56/kno8dHx8VEPAQFy/au9dr717vnTvNdu48sW2b7r59fpKSpfv2+X75pRbi
YmJ5YmL5fHyeqGb9HABsHx4e3tXVxcnKHAJy/MYbb+zZsycgICA3N/fp06ch
ISFz/lEiDzaMjwXzwEIMDIB5LOEQhuYBNdzExKSnpwdxinlWCvfv39fT07O0
eD4QraOD4wnTE5ja29k7OTohbmdnZ2xkbGRkZGNt42D/fBjcOf1uLc48TB8L
wL7KyMjAynp6eoqJiUlLS8O+wtwi7uTkxD0fi4uCnF1cXI4fP66hoXGUgcOH
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
MiNFf/sw6/e/y/vzB7Q//W/+h//r//v/Pr2MvoNu3brl7e2N6+7p6Zmamsrs
J3zs5ph1hHVYXVhwXXBIfUhESwQiQbVBIQ0h4c3hwaeCMUsErGMdbc2h6N+9
e3dsbIy0XdOsAjaMj6WYZ32BE+aZmZlRPqZ8XOs4go6Rjo6hjqaeprah9j8j
Btoqx1TUtdXVNNUwPXL0yHL63aKYZ5VBBtKgQEKQoWJkFGXkT+RDMkomSjxK
PCziLYwjjK2TrcM7wt2L3b0rvX1rfTNHMrFC2eOy6JzoxXNbHTUBn5SXl3O+
/tWrV4uLi1mfJDx+/PjatWtBQUHMQTDXBaampi5fvgwlzc3Nraio6O7uZtsV
zOTjx7Tt2x++86u7v/lt97vvXnz319d+/ZsuRmT417/peffX/b/+zcivfzP5
m99O/ea3Le+8c+HcueWUCuKFaWBgYHt7e0JCgouLS39//9joGESkhd7SSG8s
fVgaUB9AxL2rvCPPRdbT6xvoDZgiID2iLaL/ymKva5nAIUM6STt04ypgw/hY
ink2HvPgEhgZGjk7OTs4OJgw/iSzsrIyNjImIqYmpubm5tZW1k5OTi7OLjo6
OoT7XTIo5llNkIE0KJAQZKgYhJrg1g5oCEgbTCu9U+pW4FY2XeZW5GadYu1b
4wseSL6SfIp+ijxq8ujRo7y8vFd60EGMJtna2kpsdfHiRcShJllZWSRvYqPA
Q0NDLS0tOGQajQbGHh8fX/zY4WMzduy4/+67N957z++Xvwx+++3It98u/dWv
EI97552cX/3K95e/jH/nnTvvvXf3vffq33030M+veBkoLS1NT08/duwYJP7w
4cObNm36wx/+EB4aHtEYAbGoodcUTRTZptnGnIuBRdHy0TIINqCN0uBPsAgB
64Q2hXKoJrW1tVBS6u0eGTJZJijm2XjMwxzPy9bWVkRERFRUVEJCAsyAOKqc
kpKSsLCwlJQUMZaWlpZWQEAAxTzrBWQgDQokBBkqRkZxRvHD4iZ6U8Zwhv8p
/5jOGJtUm6DGoJOVJ20zbD3LPL3KvWK7Y5vpzVX0qpjcmMVzWx01oTM6clzC
CzuISFFREfF45NatWz4+PsxuqMkGyF9vby+4GnpXUVHR1dXF+YklfOy9d9+9
9d57Ge+8k/TOO4G//OXMf/83DC3ig7/9bfzbbye8884twsf+6lf1tbUTywNK
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
xtTUVEtLy+DgYHNzMzIdEsrLy+3t7SHv/f397e3tbW1tY2NjyrcZHBlsK7Ll
ZHNskmyMwo3u+t91SnOyjrM2jza3irWyibcx45uZCc3cst2cMp1cA1yZtYaG
hqDzSUlJO3bssLW1XdBRiCVWkpaW1tjYCFNT/IaU1NTU+vp66WxVVdWs0W+w
D1K7UTmjo6OwbwMDA3NzcxjfrC9wxkbHOto62lvbn5g6WjuGBp/eH6RUCHod
veVc/Y2Q8pDyPOWQ8lAcS8hFVR2jt7cXure4dfML8l3cXZw5zvsP7NfR03H3
dnfzcHPzdON4cjBFMjIz2rN/j72Tvau7a0pqiuy6QUFBa9as+e53v8vlch/P
TyuVpqceWwljAWFhYYq/bUA1CIh0dnJyEqvI3pyGPDNi+eIO/4nAQWpra2HW
HA4H9ie7KCwqzIhnZJdoZ59sb5dkZ5tgK5vsRfa2id9MreKtbD0X7LnEXLKy
smJiYp7mb6jY85yXmJSHlOepgZSH4lhCLmzoGL5hvu7V7iFtIdxObkh7SHBb
MBJmkb7Jt0sWtYX4NfnZ+9nLrltSUgJt9/X1PX/+vKGzoSPX0YHr4BA2T+I+
Tqijb6//4MEDpgXYkOJvRSDmiYmJsiUZGRl1dXWyJWNjY5GRkcs6IoqLiwtz
b9709LT0aWWugBv56PGDKsGtwbETsRnijHRxOpNSxalhXWGJ4kRMk8XJqOMc
5rx8u/f0wLw/FJ/CSu/IisGqOHYpkPIoAykPSyDlYYNoECyEDR0jiB8UNRSV
Ik6B6MVPxl/lXE2YSkAeiSmUprjpOE44R24jDQ8bHLIdvhk2RxyfIE6In3k8
xSpJ4iRkkLAICXUs4y2bG5vHJIhEosrKyrH5gXHgKli2pL29ncfjwTukJcjD
dKKiohS0s0Q6OjpwJY5MV1fXyy+/fOjQoYz0jNDoUF4/L7wr/JT5KV2urmBQ
ENUfFdIawh/g83p4+pH6BlEGZnFmNmk2cBOnUCc1f7KrkvT09OjoaPpWhA2N
LBFSHmUg5WEJpDxsEA2ChbChY8BNIgYiIHeQfST9CH3TONMv7355hXPFPNGc
eV6YSTGTMW5hbmLJNwNjMjfCTUxMZGVk2WfYp4pTUd+Qb+hW5GYsNLZMtjxj
dUY7QNs23RZ5pilMTfgmHu4eYRLMzc2trKzC5sfV1VVXV3dWoY6OjoeHh2wJ
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
l196esas1dmgPCEhQXv2nJd8GYtI1WXnznNbthx+882jr766G6Hs2rX7Dh+2
wiJpHOvi4rp05XF3d33vPQPZOPYPfzD7r/86+qc/Of3Hf3z6q18d+OMfEVEn
MnHsn/4UYGHhQMqz6mGPaBCsgj0dY1ndxNLSff16sx07nHbudHn3Xeft2+3f
fttx2zZbpO3b7Zg8lr79ttOmTda3blkxa0EDy8rKYmJicE0dHx+PK32x5JY2
zwrPPHGeAd/gbthdnVCdyy6Xvcu8LzlfshRZ3g2/e83jGhYFPgzMFmfbxtiO
DM3emc7OTpFowb+/T05P3zp61P74cfsTJxxPndL99NPTO3Yc3LTpzM6dx7Zt
O7tz5+MQ98SJx0tPn7750Uc52Yv/dU8sOedM5tAh861bo99+m4+0Y4fwz3/W
X7/e+S9/MXrxxRsvvHD19ddtEOVKFglee801Lm7Bv+7hw6qurmZuJIN9zLpL
EEsjIyMbG//6Vnrs2Pj4ODM7NjYmveewvLwcJtLT06PgXe3SF9MvBXITimPl
Ild5bG2dP/746y++0Dly5N6RI3cPHbr9+ed3Dh7UQjp0SJvJYynS3r3XdXVN
mLVYpTwzM5OHD2sfOeJ89KjT8eMue/fqbd9+ZsOGz99++9zWrSd27DiPQixi
lu7erZ2dvaRXiUmVZ98+21deSX3jjcdp3bqM//s/q5de8nv+edvf/vbuf//3
nRdecFu7Nk2yKP33v/ePjV3wnfmkPBoHe0SDYBXs6RjL6ib29r7vvOO2d2/g
nj3+f/rTl+vWXXnzzbsvvvjZq6+eeeWV4xs2XN+4UWvv3uBPPgl87z2vO3fs
ampqmKELcUWPK+7k5GRmmEex5AsWnWAd93x3PZ7edY/rprGmN7xu3PC+cdv/
tlWKlVmCmX64vonQ5C73rke+x23X28ODcgbtqa+vhygt7PxMT9/++mut48dv
SZLWiROYXjty5PrRo0jMrHTR+YMHi4qKFtT+PMxcvWr2yScm+/Y9Tnv3Gu/f
b75/v5lkavHppxbIM4v27TP94IPb6emLvylXLPns5HpBWlpacHCwq6url5fX
rVu3UI3L5QYEBEi/KrGyskpKSjIzM3Nzc8NSGBD6UlVV1ax2Wltbl/7q+aGh
IcQVyoxltFqhOFYucpXH2dnj8GG98+etzp612LTpo127jn3yyYV1697bvv3g
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
9aqB4li5kPKwnJFHQ7kVydlV36ZqmfzfzmZViSoeFCxaeQYHBy5dMj171k6S
bM+ds2cSMystkeRRYtzVRcqjFOwRDYJVsKdjrA43mZmZCQ8Plzs0Sm1tLfNQ
Rnl5+Y0bN/z9/WcmZ+763g3vCA/vCw/tCo3oj+B2cZEEI4Kw7rCgtiCkkI6Q
sJ6wsPYw43jj/Px85fcZ6jo5+c27znFCKisrFy2AOKienh7pLPRtEbfPSVso
LO/5TuGv13T/w+PU+/drOn/4eNqD2X98nMH0cfoHJq2NPSNWbhzx1tZWHKON
jQ1OLGO73T09Jw8d0rt69caZM7cvXvz6xInLJ06cO3LkxtmzmL1z8eK5w4eR
tM6fR50TBw8qGDReFvRDnNtl+sUtNzcXJpKVlYVehCAEvSU4OBjm5ejoyJ7f
+CiOlQspDwNrlaexoebnD/7puwNrkP5uaM33+7/zd4Nrvju45nsDjzOYIjFL
kT7N2yVWboCrucrT19e1caPR1q2CjRv9t2zhrlvngfT6604bNwZgdsuWsNdf
d0TavDnkrbcEb7xhUl8vZ0i0uZDysEc0CFbBno6xOtwEZGZmKhBb7JtIJFoj
wcneyTnJOaI7Qi9Cz6PcwyzeTCQWcTu4RgIjz0rPNHFahjiDP8hHefxYvEeZ
B67HR5TG2Nj4pZdeMjMzq6+vt7a2joqKsrS07OvrY5aOjY1BnaSVkUfJfItG
R0fXrVv33nvvwQ1xeW5ra+vr6wu5U35nwK5du956663Q0JDsgpa/b/5/a8Rr
kL438KOfZrz2i+i318x85wc9P/1J1l9+nPvyD+v+i1mKtCH92EiPUu3DwTs6
OnCMSUlJv/3tb8+fP4/zfP74cVNtbUSz+z/4YM+uXfvef/+9bdtOff458jfP
ndv9zju7tm1DxlhL6+zRo83Nzcp8vvgUYmJiVDv6DYz+5MmTMA58QIgZfHx8
4uPjmXdZotvj0IaGhtgzpCfFsXIh5WFgqfKEhFZXl/6s60eMsPxw+B9+V/af
r2T/7jsz3/nnwR/+b/mvflv5zL+1/kyqPHtLd430KdX+XOVJSUncvt383Xfj
33jD7KWXrr344uU//vHq88+feuMNC+S3bvX9wx/OPf/8SWR27ozdssWqpaVJ
mc+XlIc9okGwCvZ0jFXjJp2dnbN+4BNLjg4uU1FRgWNBU9evX7969eq1K9eM
uEa8Xt4p81O3g25r+WslTCbc490Lbgh2K3JLnkq2TLTkFHGc8pyc8529qrws
LCzClGb//v0wrD/+8Y8uLi5+fn7YB0y5XC6zFFfc3d3d0srY54yMDCaPDGal
i1ANlX/+85//3d/93dGjR0NCQiorK2ExOATldwY899xz2J8Pd38QwE37Ycuv
GLNA4Pq9wX/+QffPfiHc9pOcP/9rxLv/ytv1950/l7rJS4L94YERSm4iNDTU
39/f0NAQG/qXf/mXK1eunP7yS8Sxl0+e/Pjdd995882TBw++tWHDmS+/3Pj6
64hmr3311ZnDhxHEGt26dXDPHg6HE6UERkZGWlpa2JYylZUkICCACTD27t17
9+5dRNRubm5Kfj+sfiiOlUsYKY8EdirP7g92x8RE/kvPTxlh+Z+K//zHkb//
0cAPX879n/+p+NVrGc+/nv77H/f9k1R53snYFBHMU3ITs5Tn6tXLW7YYIY7d
tMn1hRcu/u53x15/3ey3vz24bp3Ns8/uQTS7ZYvn+vU2u3bFvvtuzKuv3uRw
3Eh5lIE9okGwCvZ0DDa7SX19PRRV+foQ7Vkl0GR9fX1EStC6wMBA5pp6anzK
PtY+vCf8vP356P7oW763QttDtfy0IroiXAtdnbKcLrtcNo01hb9wW7meFZ6l
paXK70Nubm5iYiKzIVxlu7q6ent7K7/6LHDBzjxF0t7ebmVlZWtrW1ZWtqAW
eDxecfHj18eX1Qx8v/GX33wrUv+f/1/+H39U8vy/cT/4ldOxnyWv/3ns1r/v
+IXUTTZnnRRPLmxX29ra0Ad6enoGBgfPHztmfufO6c8/P/rpp8cPHDi0Zw9K
vti79+ShQ3vefffUoUOH9+1DoGuipfXV4cM4vUNKEBMTg08Q50GZykrS1NR0
6NAhLy+vrq4uS0tLuImzs7MGuQkCjA0bNvzsZz/bs2ePku8bIuVRBlIeFSpP
a+vDn3Z8E6n+S/tPn6359/+q+7e1qX94J+r1PxT95k95v/1J7z9LlefT8g/E
C/w5Xao8jx71b9tm+e67ojfesHz1VcPXXjN++eU7GzY4vvKKLgLaF164/Prr
Fn/5i/6uXfGSWNe8rKyElEcZVKI8xOqD3EQZIFAJCQnK10dl6YMVUjo6OsbG
xuzt7ZnfxVAy2DdoEGTgVuKmG6Eb0h5y3un8rcBbNlk22sHafg1+IS0hmDVL
Mjttc5pTyrFItVjQXWqzUOFjpzMzMxDApKQkKHZ/f/9CVy8o615T/Mya/u89
TgPf/U7Ff6xp/6c1TT/5XsFza6p/+c2dsczSvu+9EXdKvNgPs7Oz8/N9+84d
PfrVl18ifZM5fJiZlaYzR45g0YE9exoaGpRplhlJfpmetgAwEXi3u7t7VVXV
Mm1iicwVjQMHDqz5lvj4+MU1slKQ8jwlytPwsOandT9c82jN4zS85qeN//SD
3r/7x87v/+uDH/+46YfMbbHfLB1as+/+u+KxRe5nd3fHli1XN22y2bjRHGnz
Zmsm820yYzKbNllu3myzbt3VxkZSHqVQifIQqw9yE2WAfs79okMB9fX1aWlp
c8txwejm5ia9wQmHHB0XHRUXFZ0UHREbIUgWIBOVEOXg6eDk6cSL5QVyAzEr
TBFGxUeFRobOeguPkjQ2NoaEhPj6+sbFxcHjpI9gLAU0kpiY6O3tfePGDcUv
xJxLT+94UHpxUE4BkwLz8oJy84Ny7wfez32cz8n/66Ksgvi8eiWfGp7L9PT0
w4cPa5UDH5mSZ0YkEqGPLfdo5Nh5Ho+nkg9L5cwVjYsXL0rdRFtbe3GNrBSk
PE+J8gwPDqaWxiRXCpmUVC0QVQpFVYLE6uikqsd56SJRhaC4OnspytPQ8LCu
7oEy6eHDOlIeJVGJ8hCrD3ITZcC/9oLcBCIQHh6+6Mc8y0rLqipVdkXc0dER
GxvL4XBgKLjcVv52u1nAUgsLC+EgxcXF+LBMTEyqq6ubmprY8xSAeujq6mpt
bVWDzuNsM7+o/v/sfQdUFMna9p7/2/2+c3fv5qTeq7uurq4BA0nJQaIkQTCT
BEwoIklylsyQc855YIAZcs7BgBJVkKAiICCwSBLnf52+zmVhQAQGW7af856i
uqqpru6pfp63uruq0Ia5pAH9BWlpaURNVFRUllbIhwLGPFRgzINmYMyzIsyD
Ye0BU5PF4H3VhExZspy67OP7or+/PzMzc2n/OxdA+LGxsT4+PlBsTU1Namrq
kmuVkZExMjJSUVEBmoKeyVhWGc3Nzbdu3UKG9NIb9JtmZzmYjzQkJSVBTeBW
XU4hqw+MeajAmAfNwJhnRZgHw9oDpiaLwRLU5EHLg3t37y3tcC9evCCRSEv7
37kAFYCrCgQIZ9HU1LRkjQMdIRKJd+/ehVBDQ+PZs2crVcOPC6vzdg/BvXv3
3muIzeqAJmmA8P3f//0fqElRUdGSC/kgwJiHCox50AyMeVaEeTCsPWBqshgs
rCavX78m5ZASSYkzLRIfaeVsNSsRLJYQ+87xRCurJisIUKKGhobJycnq6urm
5uaGFQX8yh/FgFO6rnI+C3CpCQQC2h6MzCWN1tbWAwcOgJTw8/MvuZAPBYx5
qMCYB83AmGdFmAfD2gOmJovBwmoyNT5lF2mX+iKV8IKQ/mc68SUxbSQtYyyD
9JJEHCWCpQ6nIiHs433bO78wf+HDwaWYb2keNKC/vz87OzsnJ+fWiqK0tBR+
u6ampg99fu/AaqoJAK4MqpaGJM8hjbKysq+++gqkhJOTs7Ozc2mFfEBgzEMF
xjxoBsY8K8I8GNYeMDWZDzMHEbxTTdyT3YvJxQWvCjxKPWzTbYPuBpnEmEQ9
jLLPsLcj2qX0pUBi4tPEUnJp1KOootJ3v/6As1id76DeF9BPBy6l06s9uM5p
aWlPnz6lR+ErhcLCQtD6VVOTqampJazFSVfMIg2o3jfffOPl5fVe424w5pkP
GPPQBMY8GPOsCPNgWHvA1IQmgNCAM5ubm+/cuQOlLTz7DaImZeSygNsBIfUh
tqm2TjlO6i7qzrnOVslWGh4avrW+8V3xTtlOFeSKyLbIxagJHA6dT0Xu379f
WVkJkerq6ujoaGSySmTiPqjwfJM69vb2ztyE6wn/QvN7OdAplE8DWF9fD1dg
bGxs1Y44ODjY2rqoFdhXB3NJYwnaijEPTWDMMx8w5sGYZ0WYB8PaA6YmNFFU
VGRtbR0cHOzj44NMFwPFztfpAzXxSPEoJ5dHNEf43fS7kXrDMdvxovNFrwov
o0gj6xRr+wx7kJXQhlBQk+j26MWoSUFBwZMnT5Z5FvQAVAykFpmmsqurq7Cw
MDs7OyEhgUAgpKWlwVUCFYYwPj4+JydnfHy8qqoKckkkUmJiooeHB2RBSl5e
XkxMDMQjIiJqamqioqLKysqQ8kdHR9PT09Hcvx4YGABxXMHZ3d8JaM8pKSno
mdERW5eWJjDmoSsw5sGYBz2kgQFVQE/DQJWakCnrOUJlPD09gTnJFH0ZGRmh
uefUxJR1iHVsZ2xcR5xVqpVFioV7ubsNyca1xPWa/zXDKEPnAmcNbw2XYpfE
zkRcCe6dX6mRKc8cmpubl38WKw6QD5C57u5uEIumpqbo6Gg9PT1LS8uQkBCQ
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
iUtKxlHTJSUT+fisHj1aLvM4cHEliYvHi4mBJYiLJ1LicbApLp4kIZHwNivp
8GFrCYnhv7bSvxvzYFh7QE/DQL+aNDc3w01Nj5LnAujLxMTkk08+gc7s3Fwg
CikpKegFhwaHWvhbXPO55pzrXPCqoIRckjue61bsZhhu6FPlo+ml6ZTjpO2v
bYW38iz1vIi7mJmVOTYDFy9e5OLiioiIqKu7deBAMAdHJQdHKRdX9Y4ddlu2
6OzbF3LwYBYbGziQSZCOGDt7FReXd3d3J7UQoEFWVtaTJ08CR6VkpiT1JRWS
CwvIBaBfMe0xUDePMo9icnHR6yJLvCUuDweVhFwQFK8EL2oh0KmHf1+3bt31
69fv32+6dClk0yaoQAATU9Rvv13dts3ojz8sINy922XnTjtKegwTU/S2bSa/
/GIcEZFKLQeYX1dXl42NDUiyublJXt7o0iW/ixe9KebDx3eGn19RRcX5xAnT
o0evq6v7Ilnq6n4nThjA/mN/BTSkiooKaHgzE4HhgfNHR0eRzVOnTgkICAAh
V1ZWwpU5fDhLVJR0+HAmHx8oshfo786dF1lZbQ8csAeNhnTIFRHJkpR0Ghjo
mVmsgoICPz8/Ho+H6xAeHh4UFFReXj4xMQH3BaJl1D2Hh4dZWFjguKA4M9cP
hVot+Z1jW1tbfT3tJ2ZzgfmxNIExzxKY586dWwICbpKSJAmJVCmpDFZW4z17
LnJzu4qKgheWJCAQBOlvjSQq6vD0KR2Zp6Wl2cgIx8Z2QkbG4PhxCw6O43x8
SgICqhCKi2uKiFyC9BMnLMH4+ZW5uBRjY5NoMk9LS6OUlL2sbLKsbALFEpmZ
L7KwXJaSChMScuHnt5WTS0Ky5OSSRUTsWlqWyzwugoIpR48mycgkHz3qJyrq
fOhQtJSUyt69FlxcltzckJJMyU2RlrY9erR3YODvzDwY1h7Q0zDQryaNjY21
tbX0KJkm+vv7GRkZZz6HQb6ch2q4urqC0GzYsCEmKgYXj7vsftk42tg4yvgG
4cYJvROO2Y6h90Jt020vu142TzDXD9E3ijRK6U05a33W0soyeQY4OTmhHD4+
3oiIUHb2MKofu2eP78aNyvv3h//yy/nNm69u3qzBzl7EwVFGcWWrWVldYH9q
IfHx8V988cX//M//nFM7FxARkNyfjKgJhKkDqWq2avYkexA1qN4l50v5U/mQ
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
dHTMycmBCNAyMgYTNmNiYvLz87Oysvz9/SFSXV2dmJiIkDYa1AQB1ARqCJ1i
ZMbvjxqgJn5FfiAWV72uGoQb+FT5xD+Mt8RbhtSHlJHLysnlVslWbkVujlmO
DpkOQXVBaalpc2cOX+BrvYmJl2NjQ4ux8fERNEyyvUh0dHSsjprAXdDV1UXv
oywB6PdjMeZBM+jNPOPjYy9fjizO/sSYZy7WNvNgWHuga8O4SUFTU1NUVFR8
fDyJREJWpo6LiyMQCA4ODiArsBkaGurm5obD4UxNTZ2dnQMDA1NTUyMiIiAL
eYGFHjUhUx6PBAQEgNLR7xCrA1AT/2J/hxwHUBANTw2PMo+kjiQQDp9qn6A7
QYE1gU7ZTm6FbvYZ9k45TmENYYkJielp6bW1tVQiffr0KfxSQK319fWzrvnU
1Li8/I3Dhz3FxNzFxDxomftb8xQQML9376OZDGF13u49efIE1ISuh1gy0O/H
YsyDZtCVeSYnxy9cMJSXN1dQMFNUNAf7a8RMQcEUIkiirOxVjHlmYc0zD4a1
B7o2jOnp6crKStACIBxgoYmJibq6unv37jU2NhYXF6ekpEBueXl5c3MziAuo
gJGRUUhICOyDPE4pKipCOsuoUhPAgwcPkpKSsrOz+/r66HogumKgb8Ap1dE5
x8E4xjDonr97qYtzvqNrMc4g4rp7qSuhJ9km3Trgjt+NNMvQhmC3IpcH9x+A
uMOvAz8cXAEyZX0Za2vr2NhYV1fXR48ezSx8YuJPcFa5uMp4eAo5OIhgXFy5
7OzpHBwkJMLLW8LDA1bMy1vGxBRaU1O74icIhG9t7WJp6W5p6fYuczc3d+rv
f76YYldhtAU0+9zcXLQNsqAC/X4sxjxoBjCPc5oDLs/eNE4/uN7PowyHK7R3
L3U2itT1KMel9eJtSZaBd31s0i3CGwPdi3HvxTzj46Pgo549G3r2bNCZM55g
Skr+p097IJEzZzxUVEJVVEJUVILV1MKOHLGkD/MMm5t7GBn5GRn5vMv8jI1d
MeZZJDA/FgNNoKphACnRXJYamMrW1naRN9cqqMnAwEBOTs7w8HBWVlZNTc1H
9GZqJoaHh44cPX9c3uy4oqnsKcNj8sZyZ4zAjiuayJ0xlj6hf1zBFCLHFEyO
nTEREDlLHTUMmgI6kpaW1traCpdidHTUy8tr1g8HfqyEhDvFTc3evl17xw79
3bst9+1z+uMPPQYGK0ZGNx4eEjc3kY8vn5+/iIUluLZ25aeI7OnpPnJER0HB
R0HBa4Z5Qigv74lEFBS8KXEfCQndzs72xRRbVlaWnp6+slT/5MkT6pKjMTEx
AQEByNtwdAL9fuz7AmOe1cTIyCCvwHWuQ/7cQj7sfB6ch7w5D3lyHvLiFoKI
90FuNy5BXw5+by4Bbw4+n33Meu/FPODHKimBHxusrOzHyanIw6MiIKAuKqrN
xaUsKKguLn5dUdFbUdFLRSVQTS1EWtqCPszzlI/PWlg4WVg4QVg48a0lUCz+
bQRS4kVEkrm4bDDmWSRQRRoY0AM0NAyg5c7OjkeP2gwNDYjEtI6O9llWXFyk
o6NNWauxHehr4dJWQU2eP3+emZmJxIEEiEQist7ix4WhocHTpy1On/ZRUgpU
ORt66qQbhMrKwSoqYRBXVgo6cRx3/JizooL/2bMhMjJWs2a/GRkZKSoqgnOn
uV7nWz+2iI+vANzXPXtswJUVEqrdudOQgeEGJP7xh86OHQaHDhXTz4/t7X12
4oTRhQuh0tJGMjLGgoIXwXh4lGRlzdTVI44eNeXiUoD4+fOB584FycoaQTNr
XQSA7f38/Orr6xez8yIBcvzZZ5/x8vK6u7unpKRMT097e3vPGqOEHqwZPxaY
p6vrUXv7Q2NjfRIptaurbZaVlhbo6V1raWmA3QYHMeZZGYyM9PPz+7Mw57Ed
LOFgr2JhJkHIzlaGxNnYSpmZUpmYUg4eLGI7WMHIGPlezEP1Y1VUgkREtIWE
NLi5z6qrx/LwqAoKXoFExLlVUwulnx/b29stKuogLZ3Jw+PMy4tjZdVnZb2+
f78GH5+7rGw2H5/bvn3qEB45knbkSLqAgCPGPIsEGkgDAwqBhoYRGBguLX3l
1Knrx49rnzihe+aMgby8IYRnzuhDePq0/smTenJyWhCB0MbGeeHSVkFN/vzz
T+gXU0c9Dw4OIo9H6HrQFQf4sfLyVtzcary8548cMd+/X/L0aXde3nMqKsHs
7PKnTrlxcZ09ePCUlJQZP/8lWVlrmrM4Dg0N5VDQ398/M31iYkRc3Iubq5yH
q2Db7/p/bDfdvct+DwPuj23GDLscGXY77vzDcttWPS7OHD7eCmamcLr6sceO
WXNwnOThUZaU1GNllZGQ0OXjUxUWvszGdpyXVxn82PPng2VkDJKSEsoWgZCQ
ECD//Pz8xey8SNy4ceO77747duxYRESEq6treXm5p6fnMmc3oh/WjB/r5RW3
dWvg7t3R27dH7NwZwcAQy8AQRwljIIT0Xbsit28P3b075vffwwwM/BcuDWOe
RQL8WAGBwC1bzLZvN9+3L3TjRuUDB0jbtplzcpZv2aLNykr8/Xej337T3Ls3
ePv2G8zMs/1YBPMxD8WPtVA5G66sFMjFcZaX+5yggKaIsA4Pl5qQ4DUwft5L
nOxKSgq+51QjpI9Y09OPzTh0yHvPnnOMjFc5OW137pSHkIlJ68ABYwYGVUZG
zSNHUsGP5ee3x5hnkUADaWBAIdDQMAIDI5SU7K9c8VJSsrp82fPsWZszZ0wh
rqpqr6xsfeEC7uJF1wsXnM+evXHunIutrdvcEmb2H1dBTZCjzBo32tDQAJqy
OpP7rQgofqylhIQpB4ciB4eCkNA1aWlLBgaRY8cchIQ0VVVDjx93kpAwOXs2
WFDw6tGjs5/HzkRXVxeRSCwoKIBr8vTpU+jmv56ekjyqwy/uwC9uy3vYDIxP
3JpH1ASJvAnFIDTnF7cRkHA4wHOttnblv1IDP/bkSZNLlyJlZExERK5ycSlC
KCp69dQph/37xcTEtMGzFRS8qKLie+FC2LFjpk+fLmqI7jgo5ejoylYVHBLq
F49wMSsrK1d5FfX3wprxY11dk375pWbXruZt23J37WrYvr1461bitm1527eX
bduWv2PHzZ077+zcWbt9e+Hmzfd0dCLnloAxzxJA8WMDdu8O3rpVb8sW3Z07
nffvj/jXv04xMyfu3OnEyVnJzIzfsyeQg6Nsxw4nZuaI92Ke6empEwoX5RSv
yynqSJ/WAJNV0Dpy6jJEjipovQnltWTOXIXc48rXhaSU6cM84Mc6ycjk8PK6
sLGZ7dt3+eBBU4gICQVt23aMnd16//6rrKz6kpJJ4OsKCblgzLNIoIE0MKAQ
aGgY4McqKtpcueLJy3tcXd1NVFSVn/+ksLCyjMxVYWGlY8d0xcTUFBUtBAXl
FRSs7ezcZ/4v9Bzz8vKgowpsBn1zuAdTUlJW4U7E4/Fzp4Lp6elJT09vbPw4
Zu0eGho4edKcj+/qoUOaQkLanJyqHBwqhw8bQXjwoAI/v4aAwDXIOn3ah539
rJSUeWPjO9albW9vz8zMPHr0KD8//8iLEbd0XN5ERvZEej45CyxvOiP/dSYS
yXudCenZE0QIYR//2143b638U5G+vh4JiYtycpaHD2uKimocOWIgLKwuJqZ1
9KiJuLgOH99ZXl5lSJeVNZOVtRARudDR8WgxxSJf6K3saIvp6WloURkZGZ2d
nXfu3GlpaQHnpLu7G1RmBY+yUlgzfqybW9Kvv5YzMNRv2GCya1fdpk0u//qX
xcaNjps3h/773/ZbtsRu2uS2bVvWv/9t8+uvJXp6f/FjMeZZMkZGnvPw+G/Z
4vz7787bt7tv3my2ebPpjh0BEP7yy/Xff3fctg23bZszM3P+r7+a7NkT9t7M
k+aSM5aZOU7Ke52TN52d8yordzr7P5FXWZD+xsZIsI/vLW/6MM8zPj5dfn4v
dnZzNjZTHh6HgwcNOTgs+fhcODmtmZg0mZiusrGZ8PO78fN7cHDoYsyzSKCB
NDCgEGhoGIgfq6HhJSZ2TkPDG3wPHh45OTmdU6cMpaSuKCtbS0pe0tT0ExJS
kpe3muvHQmc8Ojo6PDw8ODi4qakJZGUV1ASUq7e3d2460EJ1dXVWVtbw8DC9
67BMvHw5euWKiZqa+blzFufPW6qqmoLBJhJRUTE+d85cTc0MciFRSUkXxOKd
Zba1tf3www+ffvrpEYkjXplepeTSnMkc6xRrW6Kt/01/+0x7O6KdX60fLh9X
Ti4vJhcXkgtLyCUhDSH0UBNoG6Ds9+7dq3+DBvh7//79iopK8D0g0tJyv6Gh
kZL+BsDei5yYkR6jhl+/fh0VFTUwMJCQkIDD4WJjY5ubmyMiIggEwgoeZaWw
5vzYxk2b3BkYmn791Xf9esMtW6K3bk359deA7dtzIYWB4cHGjfa//FI014/F
mGdpGBv7U1nZ7uhRd1lZD1lZz6NHXcBkZd2RiIyMEyXuCrmwj7S09cfIPE1N
wDx3gV4Q5gG2ecs8D5qbgXmaMOZZAtBAGhhQCDQ0DD+/0FOnrC5ccOXlPSki
osrBISsgoCQldVVQUPnw4QunT5sLCCieOmUkJHT29Gkra2vc3BKmpqbi4uKS
k5PHx8dX56lIRUUFMgMMTTx79oxEIs2aEAaVABqbev361dtwZuTVjJQp0Eky
Zdof6LkD8QL90uTekpKS/Px86Nc72DpYx1iDmhSQC6yTrS2TLPXD9HOHciG0
xFuSBkk2aTYh9SGgJm+W76kPpoeazAXUPDs729vbq7a2lrrW5/uCTmoCGtfV
1QVqAlLi4+NTXl7u7+/v7u7+9OnTFTzQimDN+LHOzvHr1pX//vu9n3+2WL/e
4/vvTX76yflf/4r4+WfX9ev9fv015+efnTZvTqNsll27Fja3BIx5lgrgk8nF
2ZuHz2uAeXJy/sM8nZ0Y8ywRaCANDCgEGhpGBilbR8vquq6NtJTSORUdAz27
6zo3DK/b6+vaQBzs8iUjSbEzsI+ejk1UZBzNQkpLS1+8eEFera/UysrKWhdc
WGd6ehpop6ioCLVjP98XcEbQSXd0dASuCwwMvHXr1tx9oEf/448/bty40UDP
wCfHp4xcBnphFmdmnmBuHGWc1JGEqAnhGcEgzMCjzAN2AMUJbQxdpprMWml0
Pjx+/LimpiYiIqKtre3580XN2TgX9FATkGZwP0CIe3t7oXxoyS0tLSB5dXV1
i3kYtcpYM35sWmremZOBimdC2FgNJMWdlOTDFOWDlBTCFeWDIa4kHyor7cnK
pAP7nDkVEhycQrMQjHnoDYx5EGDMgwbSwIBCoKFhFJYW+uF9Agn+12yuOoTY
BaUGIBb41lyicBrWV3zxPgEEv9TM1IVLWx01ASmBfus7dwMqSEtLQyEhLA2v
Xr0CosvOzgY1efbsGTUdqLWhoSE3N9fCwuLrr7+G8OXIqE28Q3xPasTjBCO8
pQnBGlfhZUywNkm94VzuaZnhoB9nFtIWHduTHN9DcCh2XY6ajI6O4vH4yspK
4GEgYeqkmhDpftrd1dFFtaePn969czc2Krb7SfeTriezshYpSYWFhdDG6Dob
OcqxZvzYwtKCgBTP4HQfHfsrTuE3Qoi+s8w9xvGazaUAAuzjnZb1jjetGPPQ
D4tnntGRl3ZxdslPk2I7os0STC3x5u6lrhZ4M8tkc7cSV9v0G8bRRhEPwhOf
xuOfJuIKnDDm+YiABtLAgEKgoWHEpMYkv0jOI+cVk4vzyflgEM+eyi4gF0AE
rIhcBFkQIU2R/BL9Fi5tddQEeq9ZWVmL2XNiYqKIgkWSFfqRkZGBvHLq6Oio
qKjAU1BdXQ2JwLF3796FrNFXrxzZDpDW/5i6cX3Wlk1ZWzaSNv8bQiSS+dvG
5J9/SN+0nrBxXfrG9Z4/fX9zGXMH9fX1OTs7w+/u4OAQExNDnSe851mPsb+x
b5GvV5GXd4m3f6U/RDwLPb1Lvf0q/LyKvWATMdjHOMh4kaI/MDDQ09OD2qlp
VgFrxo/FmOfjwmKYZ2Ji7MSpS0dPXJc7qXdKyeSUkvEJecNTisZI5KSi8ZGj
2nKn9GVP6B07pS8oenY5825hzLPKQANpYEAh0NAw4onxqUOpIBkZQxn2GfYG
YQba/trGUcZ+tX52JDvnXGeXQpeExwmwQ9ZUVlBy0MKlrY6aAJ9kZ2cvfv9H
jx6RSKSZTxKmpqa6uro8PT2pi2B+FBgdHX3w4AEoaUpKSk5OTkNDA82pYIZe
vUphZJz6/Ivhr79p+fIrsO6vvm768qv7X3719KuvH3z5VcdXXz/76uuXX38z
8fU3tZ9/ce/OneXUanx8HEIPD4+amprw8PAbN260trb2dPeAiFSSK8vIZZkv
M91L3JG4c55zwJ2AEnJJKbkUQjBI96/2b3240OtaKuCUQTpRu3TjKmDN+LEY
86w95hkfH1VRMbtwPvjCeX/5Mw7y8g4qZz3OnLGXl3eEiIK8o7KSi4qK58WL
geqXQo4fs6iru7ucWmHMs5pAA2lgQCHQ0DAQNYFb273UPbY9NrM/0zbNNmss
y5Zoaxxt7FLgAjwQ9TCqmFyMHjWZnJwkEAjv9aADWU2yqqoK+a/GxkaIg5ok
JiaivIsNFe7o6KisrIRTxuPxwNi9vb0Lnzv4sYlMTH/+85+9337r/vnnPl98
EfzFF9lffunxxRfhX3yR+uWXbp9/HvHPfw59++3wt99WQLqrK2kZyMzMjIuL
U1VVBYk/cuTIJ598snHjRj8fP/8yfxCLAnIBcYhoGmsafCcYXJRLuEuaXpr4
bjz4J5AFBvv4lPssUk0KCwtBSbG3e2goZJnAmGftMQ/4sWfPmpw756+m5s3D
I8/PrywgoCYtfZ2HR0FI6IKEhBYkCgtfvHjR/+LFADk5Mzc3d4x5PhaggTQw
oBBoaBjxpHjSS1I5uTy+M96t2C24LtgkxsSzzNMp18k03tQhy8Ex2zGkIaSC
XJFHzgtOCV64tNVREzJlIsclvLADESESicjjkb6+PhwOR52GGm0A+Wtubgau
Br3Lycmpr69f/IWl+rGD336b9M9/xvzzn95ffPHqu+98v/gC4l3ffBPxxRdR
lFzwY8v/+c+SwsKh5QFqOzY2BhG4pBoaGrdu3Wpva/cs8PyPmgwTrVOsTxue
hrak5atlFm/mU+2DZL2vmtBjtMXHhbXjx2LMg0osh3mofuz5875iYhoiIpf4
+JQ0NMLAoYW4ioobeLPgx1644EfxY02Lioox5vlYgAbSwIBCoKFhxBHivMu9
w+rCAmsDbVNsPQo9HImOZlFm/lX+brlubnlujiRHx0zHsDthgbcC/WLe8ZUa
kPyqqcnSnmYAEUHn/d69e6Ojo52dnSteseUACBmqVFRUlJSUlJaWVlVV1dvb
u4TTfPHqVQIDw/hnn/X94x/e//M/gZ9+mvLZZ3GffRbw6aeEzz6DTYv/9/8y
P/ts5PPPRz//vOLTT29WV6/4uTzteupe4F5KLi0iF6UNpznlO0W3R3tVeVkk
W0A8fTgd0gvJhWCwj3eF98MHDxdTLKYma8aPxZgHPVgp5gE/VkHBUEXFT1nZ
g5NTnodHWVj4iqDgRR4eJRERDdhkYjoiJqatpuYHvq60tHFNzcqv54UxD52A
BtLAgEKgoWHcuXMnKDgoICjgxKkTltaWwaHBIeEhYZFhbyJhIWAOzg7HThzz
9vWG3crKyshv5vB/CZ30uUU9f/4ciHp1PvoqLS3u63v27v3mwc2bN9EzN87g
4GBNTQ2RSASJzMnJ6erqWuYLx/Hpab/z5+NFRWPExKIoFismFvE2EnD4sJ2o
aAIlHicm5iMqer+lZaXOhYrBgUH7AHvvZG/PZE+vFC8/op9Pqo9vum9QVhDE
IQXSEYN9bP1tn3Uv6tfERg2vGT/2I2WesrKivr7uJf/72maeqalJQ0Obq1et
r1610tCwBIP4lSsWSOTSJWNl5avXrr3ZQVPzxoULBi0t91fqXKjAmIdOQANp
YEAh0NAwopKjAusDY9tjEx4nJHUnJT5NTHqWlPAkIbYjNv5xfFxXXGJ3Ylxn
HOwQ2RaJC8LZ29lv2bKFkZHx8ePHT2YA9CUxMbG/v3/Fa1hTc1NPD2dk5GVk
5Gls7E0xLzU106tX7SER4pCC5BoYePr701iHfS7Gx8ehtqamphkZGdDRXsw7
PlDJ4uKSrKzsxVhmZhYyreUCFejs7CwtLU1KSgIdAU3v6elBsurq6mJiYmYN
oxgaGqIOMQAuBdF5Z4Wn5jEQqtczNuk4mnqaPD05Pcsedz5+NflqVuLiK9HU
1FRbW4uM7/h7Ys34sehnnurqm1pa7tev+1HMHzElJSt1dRx1k5Llq6vr6+sb
tZgyl8Y8hYVlRGL+Yiw9PfeDM8+HB8Y8dAAaSAMDCvGhGsbk5CTwGNK1TMhI
SP8zvYxchu/Be5R5BNwOwOXjwprC8l7lgb6kDqT61fohy6/kkfN8Yn2srax/
/fXXXbt2FRUVFc8AcODclceXg7KyMoSQ8XgiD4+LlFS0pGSkkJCXsLC3qKi/
uHiQiIjP4cMBEIcUcfEQyBUVDT9/3m7hYkdGRpDI06dP7927B2cBrE5z7C2C
ly9fIs95gMEUFNTU1HTU1LTBzp/XoYS6YBcu6IFdvHgdQiRRRkae5iuzgYEB
IEOQDwKBkJ+f397ePnd9nJs3b8K5Z2Zm4vH4qKgoHx8f+LE8PDzc3NxKSkqC
g4PhH9G5cOFikJCQsJyZiJ4/f97d3Y3yATJ0xUftx35czJOQQNq/P4iPL52X
N5WNLZydPYKDI4abO56DI5KTM46TMxZSuLmTeHnT2NkJSkrOCxe7ZOaZmnrJ
w3Nj585kBobE3bsTGBjwEGFgSN6zByyFYqkQMjBAVvKWLc4Y89AExjzLBObH
YqCJVWgYcN+1tbU9/CuA0L766isQBVcX1wh8BKhJxkiGHdEu9G6oebw5sha2
W5GbeYK5Q6aDRaJFdGs0qEn2VLZLmMuTJ09AOIATgIS7ZqCjo6O1tfXhCqG5
uXnTpk3r16+3sDAPDY0VFfU5fjzh+PFEJibVgwevMDOf4+Ex5uTUPXhQg5VV
nYNDR0Ym/NixeGnpmMuXnSYXxIkTJ2RkZICrocLAz7GxsXAuoIPz7R8UFMTO
zg5k3tXVqaGhZ2DgYGBgb2TkcOWKkb6+LcWb1VJQuCgvf0FOTlFRUR2yjIwc
VVU1b926jfwEUAhcGRDcxMTE1NTU27dv01yinYqGhgZktU0XFxc7Ozv4R1AQ
qHBgYCCyoLy+vj6kLPwWFQ5RUVGRvaIAjZs5g9DSsLRhMlRgb/c+Fj92DTBP
SAg4q9A7zhIVzd6168qePXoQsrDYMDKa7d17fc8e7f37TQQFk0VEMvn5SefO
udGJeZ4+fSQm5nfwYA0HRwUHRxULSzo7exkjY/z+/dEMDP4MDL47djju2RMA
WZycNXv3RmHMQxMY8ywTmB+LgSZWoWEAlVVVVZX/FRkZGT///DOQZEREREh8
CHGUmP4iHUQk80Wmb42vW7FbWFOYR4mHTZpNeGO4opki4TmhiFyU9zrP0MnQ
2tI6JSUFBAXIqpxugO4/8g7R19c3KCgS8WNPnkw+cOAyJ6ceL6+ZpKQ/P78l
F9d1BoaTsrJRJ04kHTsWJysbLyenm7wgtm/f/sknn4iKivr7+9dQ5v83NTUF
iptvfzU1Ndh/8+bNAQEBV69e19e3A/fV0NBBSEjq7FkNFZWrAgLi585pXbqk
Lyoqc+GCLiXXHvzYsrLyu3fvkkgkAoFQVFQEgkJzafK5aKBgbGwMuQ7IsFz4
90ePHo2MjIBMAKtDzRdQk+rqaiKRCIrc+1f0zMCslFm5c3cA3L9/H0RtMesZ
LYCkpKTlqAk22uJj8WPXAPMEBEQhfuzhw3l79ugyMpqzstrz8cUcOODMxGSx
bZuykFCqqGiOiEiGoGCWlJQhnZgnONhXQsLvwIEqcF85OCp/+01r796wffvC
N2++un9/DDMzfutWfXBr2dnLwZXdty8SYx6awJhnmcD8WAw08QEbxsOH/xmk
GU2IjumOyRzNDKgLsEq18qr20vTXtM+2j+mMMYwx9K71Dm0JzZvKA8XBD+ED
kgImxt+sUwNde3rX8MGDBwjtEAiZIiK+J07gwVhYLsrKRvPwmIBxcxuzs2tx
cOiys2vLyESAKysjE6+h4bJwsdHR0QgfvnjxwtXV1c/PL3vBic1Bi4EAYWeo
jLq6tr6+vYGBvaammYCA2OHDRxUV1Q8dEr982cDIyEFK6gTFy7UDL1dZWePy
5csgCoODgyt4TRYDoH3wFqhaA9V+9erVxMTErDdiIG0zWX2uNr2mYG75ubm5
XV1dS67eMr9jxNTkY/Fj58NHxDzJyVns7FHgxIIxMGgJCaWzsNixsNgyM9/Y
t8+IkdF03z4TQcEUUdHcQ4eyLlzwXLjYJTMP3Kyiot4HDlRzcFSwsmZt3qyx
ZYvBnj2Bv/6qwcxM4OSs3rbNElxcih9bzcAQrq5+BWOeucCYZ5nA/FgMNIGG
hlFdWxUUFxgcH3RB97yDj314clhkakR4SnhoUmgEISIMH+oa5HJWQ9k/2i84
ITivMBf5L2Q6RGSZQnoDj0/n5DQUEXEUFnYQFLwhLGwvJGQjKGgtIGAlLGwn
JGQLiUJCdiIiDgICdhcuWC6+ZKBT6kdr78TLly+VlC6oqxtduWJ88uR5aWl5
KalThw/LycoqiorKqqpqCQtLnz+vq65uCDucOKGWmJi44l/uLQbAtwjbt7a2
pqWlkUikuLg4Hx+fgoICZAdQlvHxcY//z957AMdx3em+9Pp6361bdbd2377a
ete1q7frtW957b2S5VVgpsWcJVmyGCSTlESKBJhBihkgARI55zzIGZgAYDCD
nDOInEEARCKInIgc5n2ctsYjYDBEGAx6gP8Pp7pOnz59OszB9/17pvu0vT2X
y2VkeXR0tLW1FeWYZUwHPsLj8aqrq5lHPHAUsmc9UJi/jPfYpqSk0Lciy0HT
41gZUB7vcDfvcHftO+cs3Iz9BV6B0T4BkV5+fM/AaG9/AcfOy/Ls9dMewc4+
XPfE1FVQnogI4bvvPtm2zXnrVsfNm222bnXYssV282brTZsst26137LFDoVb
tthj6caNDmfPGi285UUpz/j40I4d5r/9bfzbb8f96lfu//Zvlv/6r6ZvvaX/
i1/Y/su/PPrtb8P/+Z8f/Od/Ct5+W/zOO/G/+pVLWFhESUkxKc8sSHmWCRtE
g2AhbOgY4eHci9rf61y7f/LE2QvndW5cf3BDRxdTHWSk04vaN08c++balbtX
Lt12dfWQrTgwMBAfH5+Tk7PSt75jQ9Lfu8qlqeKH6VxeV2hublLS1PDw8ODg
4MTEBOSor69vUVIPDQwJCfP29vXy8vXx8ff1Dfghvc57e/v5+QViKZM8PDi4
/G9sbBSJRGqWvujoaMYie3t7nZycXFxcnj59qqenV1paijMJE4G/4Dx4enpK
b717AWtwdHT09/fncDjm5ubW1tao4Orqij339fVlbuRzd3cPCwtj2kcj2MSS
dw/h/XLcJCMjA2EMuQkbGlkmwUFRnxy1/eJz5+3bHh0+ZPXFn1yO/ckVU1nm
4yO227boff5Hx08/cbCz9ZOtqF7lKX+T8pSvvPJM+fvzHR0jHB3DnZy4zs58
aRIwUyenCGYqXRrh4BDY09NLyjMXUp5lwgbRIFjIanUMXP+WlZUxYxh6evpo
ad2/c8fszh3Ta9f0b9x4cuWKno7O49u3Ta5de4TyW7dM7t2zuH3b9OpVfROT
2c/kqvPrkeUTEhLijSjT1xcZBwcHPp9fWFi4otIE7U1MTFSn+uHjwEaRaWho
wGHCBeAOmHZ3d+fl5eGoo6KiYDc2NjYRERF1dXXp6ekohGs8efIkMjLSzs7O
2NgY7mP6A1ZWVgYGBjBspv3R0VEul7vk3VvmU8M4kzi65bSg6Wh0HCuvPA4O
Ie+/L9i5M2XXrqTt26N27BBv3crbsSNm507MRu7cmbxzZ+Lu3anIbNwovnfP
fVZTpDzKIeWZBSnPMqE4llCIqjoG8+vM2NgYFKNVCjKYbf0B5Lu6umSLnj9/
7uHhAZHB5a2Tk+vFiw9u3TI+ceK7Tz75ct++Tw8c+Pz48XOnT1/69NOvTp68
8Kc/fS2NY02uXn1kZmY1d+v4746Li8vJyVH/L1mLRSwWw01SU1OfPn0KCU1O
TsZFenFx8YpuVM2GInOT4eHhjo6OmZmZ3t5efOjM0qmpKVgJPqn29vbm5mbk
CwoKMEXH8PHxgft0dnYODg5iipLGxsampib0FhcXFzgvc9PayMgIj8db8u7B
0ZYzXj1WT0hIUDJa0ZqHVXHskpVHKIyytPTdtIm3a1fcf/2Xxdtv6/7Hf1z7
zW9u/P73Zh984Pj22w/fe8/q3XcN9+5N2b07fssW4YMHHnO3TsqjHFIeeUh5
lgnFsYRClt8xIA75+fm4mIUwQjRKSkqSpSCD2eQf6OvrKyoqYvJlZWVVVVWu
rq6Q1tDQUCsr28uX9a5c0UO8qqtr/e2317/++pq29t0zZ64gj+nx42eVx7EM
uGqWfT3C/LM/b2yM5HKj+fw3pigeL1v6vp6Vxt/fH/II/fTz84N4SqSvZVfD
kyOMoTAiv9LI3EQh6AkwU5yEmpqajIyMoKAgxBUNDQ2FhYXoD+ge6BtPpSAj
W6u/v1/20s9luklbW9ty3AQ7LxAI6Ne9VW9kmcoTFhZiZOS2ebNgx46Id981
2r8/Y9Mm940bXbduDfzgA+eNG90//NAZMa3yOJZhrvI0Nj7nciN5vOiFpMzM
7GWeioVAykPKo+lQHEsoZPkdA1e7kPHF/nuOj48XFxczD7R6eflqaz+4fdv0
q6+0jh8/d/Lk+QMHPj9x4jtkduw4cObM1SNHTjx4YH3njtnVq/qmpsrG+sbV
dFJSUnR09McffzwMzQkLu37w4OMvvzQ4cUJfmh6fPInE5FFocPIkkx7+6U+6
V64s60QsDKgijh16CKvF4eO89fT0qOd1ljg5ODPPnz9f6Q1hK9jWfEs7Ozst
LCy8vb3v379vZWUVGxtrZ2fH4XAw1dXVhbl8//33uLqxtraurVX8ykg0juhl
ybu3nF8GJfS0BWvi2OUrj6Nj6AcfCHbuTPqv/7J9912Ld9+1/vWvv8f03Xdt
fvGL795/3+03v7m/d2/mrl3JmzaJ792bN46V/Fh5RkaGw8L4+/ffPH7c6Ngx
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
0dXVDQ0NdXV1hY9wuVzkOzs7AwICvLy8YCLFxcUuLi65ubl+fn6tra2WlpbN
zc2rdRQEQaiNlYhjSXkIglAOxbGEQmZ1jJ6eHhgEMu3t7S0tLfn5+YWFhYmJ
iTk5OZWVlRLpgIptbW2YZmZmNjU1DQwM1NTUwGV6e3v7+/tlP/C9ePHijZse
HR1dgQMiCGJlWYk4lpSHIAjlUBxLKGRWxygqKqqtra2oqEhKSoJHlJWVeXh4
JCQkwGXgF/X19SMjIyjPy8uDxcBunj9/3tzc3NHRMTU1VVpaKhAI0Ag8xd3d
He309fU1NDSgWmNjI+rweDwYEBqB1xQXF8OSOqSgwiodPUEQi2Yl4lhSHoIg
lENxLKGQuXep5eTkhIWFVVVVZWRkQOcNDQ3HxsZiY2MNDAxsbGysra11dHRQ
zcLCIjAw0MjICIX6+vowl/b2drhMV1fX3bt3Hzx4EBoaamdnFxUVhamDg8Oj
R49cXV19fHywrr29vbe3971797Ai2omIiFitwycIYrGs0P2xpDwEQSiB4lhC
IbM6RrqUuLi4zMzMZ8+eFRUVCQSC8PDwlJQUExMTJycnT09PmEh8fDx8AT5i
bGzM5XIDAgJ4PF5tba2bmxvMwtHREfYBHxGJRJgGBQWhQVtb2+DgYLFYjAow
GsaPYFKwFWxrtQ6fIIjFshJxLCkPQRDKoTiWUMjJkydnlQwODmLa1dW1GrtD
EATbmSsaKmmElIcgCCWoRHmItcdbb711TI7jx4+jqyCDKfLHCIIgfgxEg5SH
IAg1oxLlIQiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAhibfB3f/d3+/fvP0YQ
BLEw3nrrLVIegiDUjEqUh1h7wEpWexcIgtAkTp48ufxGSHkIglgUKlEeYu1x
4sSJ1d4FgiA0iWPHji2/EVIegiAWhUqUh1h7UMcgCGJRqEQ0SHkIglgUJBqE
QqhjEASxKCiOJQhC/ZBoEAqhjkEQxKKgOJYgCPVDokEohDoGQRCLguJYgiDU
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
0+NYNShPUVG9tvaT69dNkK5eNbt27a/p6lXz69dNr10zZZZeuvTEzU2gluMm
CM2G4lhCIavYMS5fvvz1119nZWUVFxd7lnhmSjJ57TxTkekdrzuX7S4bcA1s
UmzsM+0fhj60SrIyFBimzKTAUKyF1lXlVW3z09HR0dLSEh8f7+nl5W1llbFx
Y/5776Vt2yY4ejR2717+xx9HHjkSfehQ2Oefxxw4gNmsTZtyP/gg++23M8zN
V+tUEIQGoelx7Eorj5cXx8aGc/26+c2b5jduWFy/bqWjY4kpk65ds2amWIQK
V68ae3hErdapIAgNguJYQiHq6RiwDO4cfve7323YsGHjxo2enp6+lb45khyb
NJvQltDk0WQzsVniVKKx0Fg4KDSPNY8fj0dJ8kxyhiTDlGcayY9Mmp+UlJS0
tLSwsLA79+490dHJ3rIl7/33cz78MG7PHoSv3E8/RUI+4o9/zNy8WXjwIMWx
BLEoNCiOXRXluXfvzs2b+jdvWiFMRWKCWASuSMgzESxKKI4liEVBcSyhkFXs
GB4eHvCUsbGxiooKTjknV5Ir7BOax5u7FLjoBusaRRs55zvrhujeD7h/x+fO
Y/7jTElmtiTbIcFheHBYSbN9fX2Mp/QPDDQVFjL3FaRv3Bi5f3/szp3iXbvi
PvpIuG9f/M6dT99+O2r//owPPmDuK8ig+woIYgFoUByrkBVXnv7+kpJGbW1c
Rptev2525YrF1avmPyREsBY6OiYoxCJUuHzZ0M0tUm3HThCaC8WxhELY0DFq
amoeej50EDkYhhoa+BtYRVqZRZg99n1sG2NrHGJsHGys76t/2/U2Zh3FjgYu
Bq8GFb8d8uXLlyKRKDY2tr29nSmpLykRffNN0tmzSefOYZqMjDTFnT4d89VX
yefPJ0sXJZ47F3/6dKavrxoPmiA0FU2PY2WsnPKUlDQ8fOhmaMiZlR49cn3w
wNHIyEuuxC0kJEmNB00QmgobRINgISzpGBMjE6/6XxnoGmSmZo4NjY29Ghsf
HmcySBUlFfdv3+9u7x4dGp0anzP8jZyPICNfPjMzMy6RzE21z59b2Nl1Dw5O
yhVO0fA3BLEA1kwcK1lJ5ZmcnJ6bnj1rsLKy6e3tn56WyAqnpmjMP4J4MywR
DYJtsKFjdHR0cII5/jz/i3cumruY+wv8ZyV7b/sLNy94hXkFCAICIwInxidk
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
EjkQCbmD7CMZRRpZxFt88/ibW5xbVklWzPPCTIqdjPXkeUqk3wyMyd0INzEx
kZOV45TllC5JR30ToYlniaeZ2Mwm1eay7WW9YD2HTAfkmaYwNReae3t586RY
WVnZ2try5sfDw8PAwGBWob6+vre3t3wJ/MXJyYl5klpJa0sG7TOZwMDAv/3b
v/3pT3+qfUHbzc8taiAqdjT2st3lu76vBwu6aH1Ry1JL21LbMsHSp9rHNs02
tCXUtcAVHvrA5kFqcqr8oyLEEkhLS6O71FjSyDIh5VkIpDwsgZSHDaJBsBA2
dAy4SdRgFPMLVOJ04k2Pm3d97t72un3D7cb9gPupM6/LmRQ3Fecv9O/u7j57
9mxBQcHg4GBpaWlcXFxERATHg+Oa68q4iXOec0hziGhIBCvhvuTquOogeVd4
M0OaY2qfaN/T1cNsvaSkRPlYOi9fvpS/S42hrq6usLBwbuWKioqVfnEkrNPH
x4f5dZIr5kYORQp6Bdddr5vGmT4WPP7O7Dvk9UL1bnJumohNzOLNLlhe8Cjz
wOl147m1trRGRkbm5OTMzKj4PZvrB3pqeC3FsaQ8C4eUZ3Uh5WGDaBAshA0d
IzgyOLApMKo3KrI3ktfJc8lzueZ0TctCyzXP1b3QXdAjQDmT+N38W0a3fvmL
X27YsEFLSys+Ph5eALVHI40NjR6FHtmS7DxJnlWilbHQ2KfS5xbnVuxYLCwJ
s96V3lgKK8HUMdWxo/0v7/SprKxU6AsyWltbZ92lJpF+LcPlcudqMkqgNlhF
dadHGeIEsVmQmS3X1iLIwirUyl5gbxFsYRliaR1ubRlqaeYvXRRsYRNuY8O1
4QT95YfRnp6ejo6OqKgoJWOwE/NBbrJm4lhSniVDyqN+SHnYIBoEC2FDx/AJ
8XkU8chMZGYqMjUTm9ml2T0MeXjX965tii18wVRsinImwRROXzptbW2tra1t
amo6NTXV0NAwPj4+NDRU/6xe11vXLdvNMd3RmG98z+ueSaSJfoi+Zbwlpg7p
DvYp9i7ZLs7ZzqjzwP1Bd2c3s/WBgQH5AcbnotBNQHZ2tuyRDXlgNGKxWG0/
ok2OTU6MTkyMTbyeMpmxORnpIomc9WEn4SnJyckQxjcOuUnIg5PG4/HITdjQ
yDIh5VkOpDxqhpSHDaJBsBA2dIywmDDRqIh51vX1w62FbsjkSfK8K71jhmKQ
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
Zpd8WhjoaQuKYxWyVpVnYmL8/HndixddLl1yvnjR8ZtvzJAuXLBF/ttvzZE/
f94ai5CuXHE9flw3Jyd3vqbeiLzyfP21zb59EBYR0pEjsTt2OG/dannwYOTR
owmYxVS2aOtWDinPeoA9okGwCvZ0DDV8K1JRUb5ly2ZnZydZCSRaLBZFRgr8
/HyR6e2dfX8ag8xNhoeHo6KiOGWcbEm2aYzpHe87vtW+d33vJk8mG0QY+NX6
PQh4oBesZxFvYZdulyXJshXa9nb1TvwArtBxQd3b2wtlm5gDlqL9ueUMr4aH
72hrW16/bqmjY3bt2hd79nx54MCpw4evnDiBzJcHD149edLm+++x1PrmzVun
T4eHhdUtFUj3P/zDP7z11lsmJobHjxvt3x9z6FA00pEjce+///A//1Nryxbr
7dsddu7kbNxozCw6fDhm2zZPL68ApoW+vr6enh4m39jYiEODyDOzzK9jTB5m
AXcICQmJjo4OCwsLDQ2Fube2turp6SUmJhoYGNjb29vY2AQEBMBBvLy89PX1
nzx5Ehwc7Onp6eHhAX8xMzNDOdrB6r6+vn5+fmjB1NT0+vXrycnJqAlXsrW1
xVrYEPxx+bfYkZtQHKsQ5cqzdeuPlGdycjw2VhQVBeXxkSpPt8IV2aA8w8Ov
zp9/oK3tePGig5aW7Ucfndyz5/T+/d989tkNZJA+//z7K1cQ4jpcvux04oRu
WFi4ipTH8MAB4eHDUUhHj8a+/77e//k/Wlu3Qnnsd+3ibNpkxCw6ckS4fbsH
Kc96gD2iQbAK9nSMFXWTwsJiL6/gwEC+hYXjyZNnvb1DkXx8kML8/ML9/CIC
Ani+vuGY9fIKyczMnrU65K6kpCQGCGN8fHw45ZwcSY51ivUV+ysmMSawlXxJ
/sPQh997fm8eZ37D9YZ1sjXzOkvDEMMg/yCeHBBGHAt0j7dIoJbaX31lfeMG
IlXEq+c///yrgwf/fPjw4W3bLh8//sddu4yvXMEiWRzr4e6evVTi4uJ+/vOf
b9q0icPx+PxzgwMHRLI49sMPn/z616fhJr/85Z9++ctjmzdbHDwYxcSx27dz
bGycmBZevHjR0tLC5AsKCuCSeXl5zOzLly+bmpqYPD5uiDxOqUgkwtkNCgqC
F9TU1CQlJRUXF8N509PT4Sao6e/vD0PBSYBBwGjCpWRkZMDo4RdwKExRTSAQ
oIX4+Hh4TVZWVmlpKezDxcUlIiIC+cHBQXKT5UNxrELmUx4OJyQgQGBujhjv
nJdXGJO8vaE2Eb6+XH9/PjKY5XBCMzJYqjwnTlyRfhmLSNX56NHLe/d+vW/f
N5s2ffLZZzo7dhw7f94Ki2RxrLu7h0qU509/Mjh4MEYWx3744eNf//rUtm2v
ledXv/piyxbzQ4cimTh2xw5PUp71AHtEg2AV7OkYK+omtraee/YYffKJ3Wef
OXz+ucPHH1t/8ontkSOWR48ivc4jg6VI+/aZ6elZM2tBAysqKmJjY3FNnZCQ
gCt9ifSWNp8qnwJJgbHQ+DHvsX6E/k33m34Vfjfcbtik2DzmP77jfQeLQp6H
5EpyHWIdRoZm70xnZ2dKyqJ/BZuanr6jpWV57Zrl9evWOjr3v/nm7CefnNi7
9/ynn545fPjCH/9ogxD3+vXXS2/cuPnVV3m5S/91TyI950zm1Cmr3btF+/fH
IB04EPv++8bbtrl/8IHZO+/cf/vtO5s32+/fL5IuEm/c6Bkfn7rYDeHDqq2t
ZW4kg33MuksQS6Oiopqb//pWeuzY+Pg4Mzs2Nia757CyshIm0tPTo+Rd7bIX
0y8HchOKYxWiUHlsbLy2bbM6cMDt0CGPw4fd9+1z3r/fde9eR6R9+5yYPJbu
3+/2hz/YP3hgy6zFKuWZnp767rsHFy44amsjWHX+6iuEl9o7d546fPjSvn3n
jhy5jBBXS8sBS5H54ov7ubnLepWYTHlOn7baswfCIkQ6eFD8/vtG27e7ffih
6e9+d++dd25DeRDlSheJNm3yIOVZD7BHNAhWwZ6OsaJu4uzs98c/Op0+7fvn
P3t/+OGpnTuvHzyo9957J7Zt09q8+dvdu2/u3Xv7zBn/U6d8v/jCzcDAvq6u
jhm6EFf0uOJOTU1lhnkERUVF+mH6XoVehgLDu953LeIs7vneu+d372HQQ9s0
W8tESyO+kbnY/DH3sXeh90OPh8ODCgbtaWxshCgt7vxMT+vevn3n4kUm3ZVO
b164cEtLC+nupUt/XXTp0qWvvy4pKVlU+/Mwc+uW5RdfWBw/bs6kEyesT5yw
OnkSyQYJ+R/KLT799GFm5tJvypVIPzuFXpCRkREWFubh4eHr6/vgwQNU43K5
wcHBsq9KbG1tk5OTLS0tPT09sRQGhL5UU1Mzq50XL14s/9Xz0me3+xYyltFa
heJYhShUHiengIMHOceOhf7pT8G///23W7fe3rXryTvv/Hnjxivvv39h+/Z7
f/iD7rFj4V98EXr0qN+jR44sVB7Esd9///D8eYSyf0nnz98/d+7Od9/dRZIV
Imlp6Z46dU1VynP7tuWxYxCW1+n4cTOp5lhKp9ZffmmNPLOIlGf9wB7RIFgF
ezrGysexjqdO+Zw+7Y/A9YMPvvr8c9u9e+9+9ZUnZhHWfvttMJYiffml9969
x0JCgtra2mSrQ4Jks7h+ryivKC8vr6quqqmtqayqhGqFhoUmJibCIIyNjQMC
A0pLS7HPFRUVz+qeSeYhNze3trZ2IUckY3pmZmJy8q9pampyampCluQWTapy
bBYI59hC0syMsjcTLYT09PSmpqa55QKBAOaIMwYHgbP7+fnx+XwzMzN3d3dM
HRwcTE1N8bk7OjrCbrAoICDAysoKmVntZGdnz7WYxYIumpKSMt+dkOsBimMV
Mn8c6/nFFyEIVhG4vvvu10eOuPzhD3qffx6AWYS1J08KsBTps8+Cd+06ERIS
yELlmZmZllcaJWl6elnjX/2YhSvPvF+ELhBSHo2APaJBsAr2dIyVjmM/+8zp
9Gm/U6d833//q48+uvrJJ6bbt2sfO+aAOBazhw49OnPGHxW++MLdwMC+uLgI
191isZh5FQtUTt5c5tLd3Y2rciYPo4mOjn79pYSyIRtfA1FS1ate1gaDg4Nh
YWEDAwOzytE3+vr64AX4FJhnUrq6ulANXQJnvqenB/mhoaGOjg5mETrAy5cv
Z42Qg6U44csf7x12RqPfsKQRlbDSceyhQ17HjoUhUkUQu3Xr9wcO2GzceOXj
jz2kcez3u3cbHz8egQpHj/o/euRIyrMqkPJoBOwRDYJVsKdjrPD9sR67dukf
PWp55Ij5rl33du26e/SoxZ49uocOGe/dq3fgwJM9ex5I75VFoaGenhWzFvQn
Pj4enmJnZ/f8+XMlG52YmID7yH7xmZycLC4uxp7gcJS8P310dDQxMZG5+Y1g
aG9vhxdHRERA+VN/IC0tDbMohK0jj2lGRka6lIwfkBXKT2Ut4LOIi4tTyUuL
6C41imMVMs/9sZwtW0z37XPYu9du2zb9rVsfIb9jx5Pdu6127DDcudN8+/bH
0qUO27db6uraMGuR8qgfUh72wx7RIFgFezrGirpJdXWNQBATGSlCioqKRWIy
kZFi6ayYKUESCETFxaXy6+JC29/fn8PhiESi2tra+W5Pgi/MGkAbnlJSUiIQ
CJSM3AgriYmJWc+vaFEI3LmlpaX5x7S2tjYvFRW+zJHchOJYhcynPHw+VEWM
FBkZh/RDJlY2ZZaS8rABUh42wx7RIFgFezqGGkZxXDK4rMbVek9PT2ZmZnh4
eF5eXldX16w69fX1WVlZc9eFp2D1qKgo2XO4s4BIQqDW8937mkVycjL6GLkJ
GxpRCaQ8qt1nYoUg5WGPaBCsgj0dg81uIv+0BfazoqIC7oBL47KyMtlTrsxI
4/N9vzEwMJCSkoJVYDpzlxYXF8u/T6e3t5e5U0v5W9GJVaGxsbGqqkrJj7Zr
HopjFULKQ6wopDzsEQ2CVbCnY2iKm8jA/uTm5mJzst/1xGLxfG/fZoBHpKam
KvQUZlxuifSJA2tra0dHRxsbm/Dw8LmPHhCrC3oCDEXJWJFrHopjFULKQ6wo
pDzsEQ2CVbCnY7DZTWpra3Pnea3A9PR0S0sLfEQgEPj5+RUUFLyxNRhEeno6
PKW7+0cvo4yNjWVKcBKqq6u9vLx8fHxevnypkkMgVEVycjKXy2VeAb8+oThW
IaQ8xIpCysMe0SBYBXs6BpvdpKmpKTX1De+LGRsbg5U8ePAgMTERV81vbBOe
EhMTk5CQILvhbXx8PCMjw97evqysTPL6SWeb+W5sI1YRetqC4liFkPIQKwop
D3tEg2AV7OkYbHaT58+fL/AlOGKxuKamBtaDC+esrKw3/jbX2toqFArhKd3d
3TMzM48ePdqwYYOpqSkWNTc30yMYLGRF3WR0dLSjowMdGMEJ+gPz+h62dQOK
YxVCykOsKKQ87BENglWwp2OsDTfJy8tj3pUzPj5eXV0dJQUlym9q6ursSkpM
SklJcXdz3wQ2blLNfq8z0IV6enpW+n03CBUEAsEKuUlubi6Hw0FPCAkJwdTD
w6O3txd5Vo2PRHGsQkh51i2kPOqBPaJBsAr2dIy14SbMAObyJf39/enp6Vwu
Fy20t7czhcx17vTUdEJKgihRFJscG5cS5+7jfkfvDsefc1b7LKYxCTGyJEoQ
RYmjICyqPa5VYejVcFp1XmptzptTTU5xfdUbX07EMDAwgH5iYmISERHBeDdK
dHUNdHUNdXWNMNXTM5ImY2ZWWmIsnX1d4e7dh7IX2SsHgo+PeHhYwcvrl09N
TQ1ij4aGBh8fH29vbzc3t7a2Nh0dHRW9s141UByrEFIeltM/MBZbWBZbWvLG
JC4pyaloWLLyDA4O3LhhceWK4w/JCenqVecfZh2Ql846SGfNurpIeRYEe0SD
YBXs6Rhrw01mZmb4fL7CoVHq6+uZhzIqKyvv3bsXFBQ0MznzOOAxv4PP7+NH
dEVE9kdyu7hIohERr5sX2h6KFN4Rzuvh8V7yzBLMCgsLF77PUNfJyb+86xwn
pLq6eskCiIPq6emRzULflnD7nKyFZ03N//PZ/7Nh8Kev09Df/E3/f9sw+DfI
/2Tgv2EW09cZZunATz95ekKysGFmXrx4gWO0t7fHiWVst6en+6uvLunomF24
8PDy5Sdnz9799tu7p0/f1NJ6PXv5siHyp07duHjxsY6O+cmTl5QMGi8P+iHO
7Qr94pafnw8TycnJQS9CEILeEhYWBvNycXFhz298FMcqhJSHgbXKU1778mcV
/7yh929fp/6fbej576+nfZj9v15nMH2d/pZJu1PPShb2Dq65ytPX17Vjh+nu
3eIdO4J37uRt3eqzdav3pk1uO3aEYHbnTv6mTa5IH30UsWePePNmi8ZGBUOi
zYWUhz2iQbAK9nSMteEmIDs7W4nYYt9SUlI2SHF1cnVLdovsjjSMNPSu9LZM
sEyRpHA7uKYiU59qnwxJRpYkSzgoRHnCWIJ3hTeux0cWjJmZ2e9//3tLS8vG
xkY7O7vo6GgbG5u+vj5m6djYGNRJVhl5lMy3aHR0dNu2bR9//DHcEJfnDg4O
AQEBkLuF7ww4evTo3r17I8Ijymtr/67r/94g2YD034f/x79V/sdv897/ycxP
/sfg//zXql//fzX/+x/b/19mKdLHFcdG+v5/9t4DLI4jXRf23bN7zt27Z/ds
sNdeX9t3/9/nXB97LdsKCJFzzjlIZBAiiZxzHHLOOWeGPOScBZJAgABJIJJA
gAABQiAkNPdj2p4dw4BGwKAW7vf5np7qqprqVP2+X3V3VdFUPij43NwcHGND
Q8NXX31lYmIC51lb29zWNuTyZSNxcRUREWUxscu8vNJXrlyHsL6+i4CAPC+v
lL6+s7V1sIaG2fT0NC3XF65CVVXV8Y5+A0Kvp6cHwgEXCHyG9PT02tpaZC5L
qPZwaGtra+gZ0hPzY6kCYx4EKGWegvyb/eP/a+ZjhFj+de3fP+k5/0U9FzDP
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
ZmahoaGxIJDR0cnJyVB4eHj4cfWqxvxYqsCY5xDMA5vQ1r7u6OgHrqyTk7+8
vLqKiq6CgoaAgDg7O5+kpBLEI+bo6Kura/r06T8H4acH83i6u8tJSSnIyIAp
yspKiompXr4sLiICYT0dnWva2uDTaqqqKsnJ8fPw7PqKmMw8T58uioj4SUsT
pKVLwGRkyn744Rozs9PZs/qXLtn9938r8vFFQCQpiSAgEDg9fVTmUVe3AA8W
3FRLS2jjy4MPLiWlyc8vZ2sbIi+vq6Zmamu7k2plFXztmvXm5gZlsb805sFw
+oCeioF+NYG7GI/H06NkqoiPjwf9QkbYGxgYWFxcJH+nRMarrVcOIQ7uee4h
jSF2yXa2yba4ElxAdYBjumNYU5hbnltoYyjER3VEeRZ4GocbtwCXU8PY2Cgr
qyUPTwgPTyAYF5cfLLm5A7i4/Lm4fEmRQUgS5OHjs1xaWqBaTjGh2LfaN/ZG
bMyNGFgG1QV5FnoG1QbBntil2DllOsV0xUASWNSNqIDEgP2O/fp1L2ZmMx4e
J15eZ3Z2MzY2E1ZWYzY2Ux4eRzY2My4uO05Oaz4+V4g/d047P7+EaiHz8/NS
UtcUFR0UFOxIZiskpCMgoCUkdFVERBdMXNxQUdEekpSUHMTErk5M0PTQYL9e
w3fu3LEFZ5WTM5STM5CDw+7iRS8WFoixv3gxjJPT+dIlD2ZmCIRwcoZDqojI
2sYG1fKJpG8UKV/bvREg6OB7tLe3wz6Aw1NDAtSZ+vr6jIyMuLi4xsZGCNNe
4MHA/FiqwJjnEMwDTpGs7BUdHWMtLSNwaDU1DSCgpWUIAQ0NfSSSFGMEeZSV
NfYbt+G4mMfO1hZcVk01NW11dWV5eUU5OQVZWfBaNcB3lZdXu3JFRVlZR0MD
4sWEhQv3Gdd3YWGOj8+Cjy+Ij88fMWhxQxucmdmShcUajJ3dgZ8/AOL5+YM4
OCyOzjySkqoaGubq6qaqqsZSUmqKitckJdWkpNQ1NMxkZbUUFHTV1c0gVV3d
XEXl2vPn+3qVvwTmwXD6gJ6KgX412djY2I+46AFozPb19eXl5R38adz09DSc
n/v37o+SQA7fu3fvn+GRnfDog9H92sXAXaS/3qPFHj4c26trCFZXVmFb94Z3
bGR4BLaO7MPO1klAkhCjfDO1C7OzM8ihgI1SgLT64Cf8mLTfWDewk7Cr92Hz
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
uF/+hIQEZmZmIPPp6QlNTTctrWRt7UQdnSRl5UAtrXg5OXBoPcTE7MTEbPn5
r4uL20PS1asp0tJut27dRi4BFAJnBgQ3Pz+/pKTk9u3bVKdoJ2NwcBCZbTMo
KMjb2xv+CAoCOxwfH49MKG9jYwMxB79FhU10dHRUHytA4yhHEDocDtdNhgzs
7d774se+/8zjmp6eAS6rvb2XgwNOSEhCQkJO6P+x995RcVzpurfOmjXnz7PO
WXetc+6ddT+fe+yxx/aMLTmOo6It27KilVDOOaEsIQEi5xyb0OQcmgaanHMS
OQgQIJIQOQmR6e9Rl93TA00b1NBUo/fHXrV27dq1K7D7ed7qrtr10/Z9+47t
2nVw27a9W7bs2rXrwM2bmqhw65a2mprGIilPa+uTPXvMt2yJ2rYtYvt2wQ8/
eGzdyt+wwXH9ertvvzX+5hujv/9dffVqUyzavj1q3TpbUh6pkPLICcWxhFQU
0DEgZbm5uVn/THR09H/9139BJL28vNwC3QRDgsi+SJhITF+MY76jVZqVR5WH
TbqNfoS+Z6XnEc0j/C5+qjA1cSpRzVRNV1s3LCwMhgKxylo0cPnP/Ibo6Ojo
6urNxLGHDwd+9dW5tWuvfffdvV9+sdu4UWPt2uurVu3dt8/90CG/Awe89+3z
2bv3Ok8mf/nLX1asWPHTTz85OTnli55v0tDQgMTNVv/UqVOo/z//8z8uLk4n
TugcP85F+HrypNtXXx3YsUPzl18efPGFyq5duioqxt9+e2TPHoMTJ1wRyiKO
zczMKi0tjYqK4vP5qampMBSpryafSYWI4eFh5jwwj+Vi9YaGhsHBQdgEVB17
LsNN8vLyBAIBHLnjn2mXYFrJtKUzK4CamhqY2lzeZySDkJAQedyEnrZQljh2
GSiPu7sHE8dqaBht3bpn9+5DBw6cvHLl7uHDZ/bsObRu3cbbt7XV1Q3V1PTu
3tU7ceLMIimPqytHRcV88+ZIhK/btkV+8MGZtWst1661/tvfTq5fb//9964r
V17csIGzdWs4lq5bZ0PKIxVSHjmhOJaQyhJ2jMePf31I05fv69fmFzMU41zi
rBOuY5dnp+qkahRn5Nfkp+anZl9g717tnjieCMcJ7Q91DnEeHXn5nhpc2i/2
HtbW1jKyw+fHbN5sfeiQ/6FDAV9+eXrfPo8NG9TWr7+7fv3tb7+9vHr1VdH3
sVxU2LvXR1XVTHazvr6+jB729fVZWlpyOJw4mQObw4shgKg8NTVx9Kjm8eNu
J09iW9Z///teBK5bt95HRkXF9PRp93XrziCIFcWx7tu3a168eBGm0Nvbu4Dn
ZC5A9hEtiL0G53BiYmJ0dHTaL2KwNklVn+lNUyJmtp+QkNDc3PzKuyfnfYzk
JsoSx86GEilPZKTg3LmbiFQRx27evPPOHZ39+0/s3398375jv/yyb9eugzt3
7r958wEq3Lmjq66uJbvZV1YeoXB81y6TzZsF27ZF/PST79/+dmLVqourV5v+
9a8nNm5027496pNPbiDERRy7fbtg9WqrCxdIeaRAyiMnFMcSUmFDx8gryHUP
4XiEOF24e9LMSd8nnOsncPeN4HqHufhFunnzXW3cTU9dO+waYO8Z6pSY+utN
/sxwiMxrCheb0NDINWtubd5s8PPP+j/9pPXzz3qbNun8+OODH3/U/PlnXeRR
uGmT7ubN+j/+qHv+/IO5tww5Fd+09rsMDw/t2XNj924rFRWrH3+8s27dpTVr
zn/99ckNG1S/+urEjh36X355dOdO4z17LFDhhx9uBQcHL/ide3MBesuofV1d
XURERFRUVEBAgIODQ3JyMlMBzjIyMmJjYxMaGsrI8vDwcEtLC8oxy5gOfITH
4z169Ih5xANHIX7WA4X5cozTlZKSQt+KyIOyx7FioDzcQBduoOvZW2eMHY08
eR7e4V5eYR4eoW7e4Z4ePHdLV4vjV445+XLcglwTUxKYtRSpPHx++J49R06d
unzy5KVjx86dOHHx+PHzR4+eO3LkjCh/QVR4QbT0wo0bt+fe8ryUZ2Tk+aZN
D9as8V2/3vfzz40/+khj5Uq1v/3t+scfa/31r9e+/dbp/fcvr1nDXb/eW1TB
IDg4hJRnJqQ8csIG0SBYCBs6hq9v5MbvnDdv8vj0E+P16xw3/+y55WcvTMWZ
779z/uQjw00/uv3wPdfC3Fe8Yn9/f3x8fE5OzmLf+o4NiX7vKhclGbys0NTU
KKOpoaGhgYGBsbExyFFvb++8pB4a6O8f4uLi6+Li4+rqx+UG/Jb8MXV19XVz
C/xtqS+H44HL/4aGhujoaAVLX2RkJGORPT099vb2jo6ODx8+1NDQKC0txZmE
icBfcB5cXV2RRzwAa7Czs/P29uZyuSYmJhYWFqjA4XCw556ensyNfM7OzkFB
QUz7aASbeOXdQ3gvj5tkZGQgjCE3YUMjchIczDt7+u7li5p7dp89deLWlUsP
rlx+gOnlS8xU88zpO7t3nr54Xv38ufuOjv94n5fClWdOyB4SVj7lmfD15Tk6
BnA4AU5OQU5OwU5OIc7OIchgyuEEiqYBTLK39+7u7iHlmQkpj5ywQTQIFrJU
HQPXv2VlZcwYhlZWwW++mb5yZdlHHxV/8EHmBx/k/fWvqR98kLNyZfHf/pax
cmXpypVFH39cvnJlydtv59+86T6tKUV+PSI/AQEB7u7uEElkbG1tw8LCCgsL
F1WaoL2JiYmKVD/8O7BRZOrr63GYcAG4A6ZdXV15eXk46oiICNiNpaVlSEhI
bW1teno6CuEaurq64eHh1tbWBgYGcB+j3zA3N9fW1oZTM+0PDw+Hhoa+8u7J
+dQwziSOTp4WlB2ljmMllcfFxfP4cZ2rV62Qzp0zvHjR5MwZvQsXjK9csTx3
zkBV1erKFYtr12xUVS3PnDHS17eY1hQpj2xIeaZByiMnFMcSUlmojsH8OjMy
MgLFaBGBDGZbfgP5zs5O8aInT564uLhAZASCCGNjn7/8JfXjjwveftvpf/7H
6I031P77vzXeftvh3Xe933zT5J13XP78Z+tPPin7+OOH776bffu2x8yt49Md
FxeXk5Oj+F+y5ktMTAzcJDU19eHDh5DQ5ORkXKQXFxcv6kYVbChiNxkaGmpv
b5+amurp6cE/nVk6MTEBK8F/qq2trampCfmCggJM0TE8PDzgPh0dHQMDA5ii
pKGhobGxEb3F0dERzsvctPbixQsej/fKuwdHk2e8eqyekJAgY7SiZQ+r4thX
Vp7IyAg7O6eTJ3WuXDHftevCzz8f3bBh9/ffq+zceX7fvmubNx/bvfvS9u2n
r19HHGtx9qyhoaHlzK2T8siGlEcSUh45oTiWkIr8HQPikJ+fj4tZCCNEo6Sk
JFkEMphN/o3e3t6ioiImX1ZWVlVVxeFwIK1BQQE6Oq7vvpu+cmXSn/9s89ln
j957L/C99/w/+CD6vfd83n8/8N13fRHTfvJJqYw4lgFXzeKvR5gP+5OGBj6P
FxEWNpeULd+zqHPE29sb8gj99PLygngKRa9lV8CTI4yhMCK/2IjdRCroCTBT
nITq6uqMjAw/Pz/EFfX19YWFhegP6B7oGw9FICNeq6+vT/zSTzndpLW1VR43
wc7z+Xz6dW/JG5FTeQIDA83MrE+f1jtzRhfx6q1b9ocO3T548ObJk5r7999A
HlPEtLLjWIaZytPQ8CQ0NDwsLFIkLZG/pQiJzK8J+pSVlS3nqZgLpDykPMoO
xbGEVOTvGLjahYzP9+M5OjpaXFzMPNBqbR3y1lsZq1YVv/2221tvOb31Fvf/
/l+tt95yReZ//2/Vd94JeOMNg08+ebRqVanovoJZ41iAq+mkpKTIyMht27a9
1Jzg4PO//HLv+HG1Y8eYhPw/zf6W7hw8qHb1qlwnYm5AFXHs2DdYLQ4f5627
u1sxr7PEycGZefLkyWJvCFvBtmZb2tHRYWpq6u7ufu/ePXNz89jYWGtray6X
i6m6ujrM5ebNm4gxLCwsamqkvzISjSN6eeXdk+eXQSE9bcGaOFZ+5eFyvU6c
0FFVtdyz5/Ivv1zYtevSd9+p7Np1EZmvv96COPbHHw/fvGmvqmp19qyRgcH0
+wok+WflGQoK4v38s+rBg9r792vt3/8A6cABbSQmj8IDB35Ne/ZoXLmiLteJ
mBukPKQ8yg7FsYRU5OwYIyMjuLyVcx/c3EK//tpm/XqXVasMvvjCcN06x9Wr
TdautVm71n71atO1a22/+spk1SqjtWs533zjYGDgJru14eHhdevWrVixQk1N
LUYguH/ihNXNm9rnzu3/6aeDmzZd2LPn/smTBzZtQlI/dcryxg3z69eRTC5f
1lVTk/NA2M/k5GRGRkZDQ8OibiUvL282IxCKvhUxNjbOzc2F6QQEBCQmJgYH
B2OK6AIrwmtcXV0fPnzo6+s7m8lWVVW92lPDOPy6ujobGxt5Bs8hN2FDHLsg
yuPr63/48JVTp27v3HlSReXsyZM3Dx26eOzYtRMnrh86dOn48esHDiC4PYXy
Y8euW1nZyW5NQnnuRkbGHDyoc/my44kTht9/f2TjxqM7dqgePqz9/fdHkQ4f
1rl0yeHiRTukM2es79wxkPNA2A8pDymP/FAcS0hFzo6BS3t5nt9kmJqaHB0d
QNLWvpeZmTwx8WJ0dHBsbHBkpH9kZADT8vKHamrXu7pakR8fH5Xd2uDgYGpq
qqam5rlz58yMjTVPn7ZAmKqqenjz5lM7duzcsAHR7NmdOzE1unwZEazZtWtI
xpcuvQ5xrFA0qsxiGwr+BaGhobN9MdLV1fW7b0gvLS2dbXVEC7CeVxuaEsGP
o6MjVvf29n6F1RmSk5NxdHMfs2j5wYY4doGUZ2p4eOjFiyFNTY20tNSxsRHk
h4dfDA09Z1JJSfHt27fa258h/7sj+Usqj5GR+ZEj+hcv2p8/b/3DDyc2bz63
Zs1eRLPbtl3auPHYmTMWiGAvXLBFOn3a6nWIY4WkPKQ8ckNxLCEVOTsGPtTR
0dHzWqW/v7+srAxqVlhYiCnz89bQ0NCjR49ycnIaGxsrKytHR0clh4zGJxeL
prUzl1+pQgID7584YXHjhtWtW2d27jyyZcu+H39EOrply/Ht261v3WK+jF3Y
72MfP34cExMj+8U68yUuLm4B9R/nPDMzc1qDj6ofPSx8OKf08CHz8ncZNDU1
RUREhISE5OfnF/4zxcXF5eXlhTKBm6DazPKoqKiwsDB5hhPPy8vDf0fy/rf5
0tLSMvf3Ey1L2BDHslx5AgJCDh7UuXTJ/vJlztatF3/88eSGDYe+++4QMps2
nblyhcN8Gbuw38eS8ghJeZY1FMcSUpGzY0BVZL8RZhq4pIX7pKamuru7+/n5
QdOys7MDAgJwmRwcHNze3o5r4YSEBHzemetWWE9JSUl9fX1bWxtcprm5+dmz
Z5AaZHx9fWtra6FamJ1NXhDHXty1S+PkSaR7x47dOHDgyt69qioq1/bvVzt2
DIXqJ04wSe3w4XsLcX9sbGxsWloadnLon5mYmGBeWQ6jZKZgfHz8xYsXWIrT
ggyu2ZHBLFMoSWtrK67lcd7k30PxT2ZZWVk4+cjA3CfHJnVddN0r3D0eeXjV
eHk+8vSs/kdC4T/ylR5GcUaJKYm/uyHm6WAECXMfAPN36ejokP1gODpMl0yw
P6qqquhpsqsxSH1mBGEMGmEGbno9YUMcy3LlQRy7Zcv1Q4f0kPbv19q9W23H
jpu//HJr1667mEXhwYO6TFJR0bpyRUOeU8FAyiOGlGe5QnEsIRU5OwYUQ8Z9
9TOB++BiGWtBwaBm8ILk5GQoMGZ1dHSQh2vguhVXzczt9AKBAFfW8B14jbGx
sYmJiYeHh6mpKY/Hc3FxuXDhAq6Rzc3Nu34bWWUasBs/b+9AX9+Xyc8vCO34
+wch+flh9tdyUQrw9U1O/H2FlA0ultPT02eWQ8Bzc3MrRaAODhY7Bot8+PAh
83QzTgvOydOnT2X/aAVDkef2KqHoYWqcMZze/Px8OBRUEYbycnTusUlbvm2a
MM0u206Xr+td660XrqcfqW+TYWMUY+Ra4mqWYMZ5yDGOMU4eTw5oCUhOT5Zn
NxaDzs7OSBGxMkHwExoaKruOGKZBtCy5IfRSdD+6S21pG2G/8nh5+fv4BCH5
+iIF+/mhtWBkMMuU/5YCExOT5TkVQlKeJYWUR2FQHEtIRc6OgcvGlJSUudef
nJwsLCzEJ7SgoMDZ2TkhIQH24ePjgwve4uJimEtRUZGZmRnqeHt7Q4RLS0uh
z/AUrIIS6IC/vz9sBbrq6urq6+sLleZyubJfZKMwoqOjpX4/gwNxcHDw8vLi
cDiQcT6fD39ECZScGdTa09MTzlJdXY2ji4qKSktLk9o+85uXPHsIM9LV1YV9
wJcDAgJQgo3a2tpOTUzZR9q7Vblxy7hmcWaGUYawD6eHTqcMToW0hiQMJTwI
enDF9sod9zv8dr5fox/b3AQhTWBg4LwCm7m3jBMl+fUIPW3BhjiWlEcSUp6l
gpRHkVAcS0hF/rvUoH4LtTMQ2LKyspnljY2NVlZWzEuuBwcH4T4LtcWFBWY3
MjIidZGTkxP8gnFP+C+kz9zcvKenB2JeVVVlY2Pj6OhYWVl57949WGfWLCPZ
wqpiYmLk3Mmurq6hoSFTU1PYNONl2O3JsUm4SVBrkF22nYHAwDbL1jzJXM1L
7RrnmmOeY1RnlKHA8JzZOf1wfd4zXmBrINvcJCkpqba2FufzmQiUjI2NSb74
hvm/jI+Pz/Y2HFRg3to5rRw+0tLSIn4/u5DchB1xLCmPJKQ8SwUpjyKhOJaQ
itSOMTpn2tvbw8LC5l5fxr09ExMTuFQvKCiYuejx48e4lmf/55fH4zGWJ5S4
GUwo+i7I398fBxgXFwdDiY6Ojo2NTU1NRf2nT5+Wl5ejHHoVERGBanw+v6Sk
RGr7fX19C+LdHR0dISEh4v3EzkyOT+q66vrW+upF6mkGa1qlW932uG0UY6Qv
0Mesdqi2VpDWUe2j93zveVd7mySZJKQkyL8bCwUOITIyknmMApGGkZER9B8R
CGylXQQyjx49wumFX9fX1zM/oaIcGfy/EJ/ASnJzc728vJqbm+EpiYmJ+L+g
HM7r7OwME5d8pIhGI1+8OJaU59Ug5VkSSHkUDMWxhFQkOwbkLjs7e15PswYF
Bbm6us69Pi7A8cFvbW2duSfYOi7VHz58OHMR3ERPT4/9n1+xm+BYoGCjogcr
xLYCjSorK5vtaxMcXUVFhXhYmEkRTGZChHDh3GQaTOMlpSWZOZm5Bbl5D/Oy
8VeYl1OQg9nchy8TCjOzM5HJyslCRp7ndhccnOHw8PDa2lqc3szMTFtbW5iy
m5ubo6Mjh8PB1MXFxd3d3dzcHIZibW2NboazHRAQAN9xcnK6d++ejY2Nn5+f
nZ0d6hsaGmIVNKKlpYV27O3t0T7MV/x/RBeF9Ytf8fMasuBxLCmPnJDyLAmk
PAqG4lhCKuKOAdXCtV5paeliD+uBS1F4Sl1d3bTy5eEm4+PjuO6GFkGsfH19
jY2NcVAQH6hWQkICJA4ZlMOFkYHjWFpaxsXFuYnAFT1WhNsij3IulwsZRCFm
E0XPoPX39wsEgqU+StYBnQ8LC+vq6goMDITbZmRkoIN5enpaWVnBIFJTU81E
4LTDFAwMDHDmnzx5gpqwGNgHqsHEYRwmJiamIrAuauK/CffBPwIdD3mxmwwO
DsLWZ/uV8HVgYeNYUh75IeVZEkh5FAzFsYRUxB2jpqYmNzdXchEu6ktKStra
2mauhUv7lpaWuW+FeROieBbGIfnxFBcuAzfBURQUFOByG0agrq4Oa4BY4UIb
eUyhV1gEgdLQ0MD1+/DwMJZ6eXnh6FCOyrg8h8R5e3ujPDs7+8aNG2lpacgz
Y1+3t7fDkpb6KFkHOhLzwkecT2ZsHPGPyPCXxsZG/FPQY5m3cDIV0NvLy8vF
LQwNDcEgxkWgJnOHG/N91IsXL5j2xd0V/xG4DPt74+KxsHEsKY/8kPIsCaQ8
CobiWEIq4o4RGxsr+ZMNPju4Woeg4YNTVlYG76ioqGhtbUWmqKgIF5W4Wm9o
aKirq8MHk7kdCB9bfEKbmppwUSkUjUfd3NyMtXAtHxwcjGtVye2Gh4dP+31k
GbgJTld9fT2UHycKh+/q6oqL7srKSsyinBn9pqqqCifK2dkZloGTCWeBjsGy
cTJRDVPkn4uAmtXW1qJN+A7Tfn5+Ps7n0h4jC2F+fZtWiP4WFhYG5ff39xcI
BMjgVKOT4xxiNi8vz9HRERlfX190Tua+QRnj6kv+ukdPWyxsHEvKIz+kPEsC
KY+CoTiWkIq4Y+CSXHLwEEhZUFCQUPSpxEcJV+76+voWFhZcLhdX7vicQvlv
3brFXNHb2tpeu3bNycnJ2NgYEoo6uK40MDDA5TxKzMzMoJzT3CQ1NXXaa3GW
gZtgD3HSxG+cwbX5bO8QxPU7czizjT8pRjzuSmdnZ3JysvhpDkIMdJ7P5097
kCchIQGWjd5oYmIC8UfwgyBHR0fH3NwcJuLi4hIaGoql8Bp0bHTjO3fuoL7U
96rjcyH5oyq5ycLGsaQ88kPKsySQ8igYimMJqYg7Bj4v094hAg3HJw6X4fCO
xMREfOIw6+HhYW1tnZ6ebmdnx4zt7OfnFxgYiA9mTk4OXANyis8arAEfcFyH
4qrT3d0dH+SkpCTJxuEmjY2NkiXLwE2Eoh/gcCZxoQ3lTxORIg1mEU4CzqTU
CpI1MeXxeDExMWQls5Gfn19ZWSlZEh0djZ6JwsLCwry8vJaWlrKysqqqqqdP
n2ZnZ6NXZ2ZmoouiE2ZlZZWUlCCaqq2tldo4GkH74llyk4WNY0l5FgRSniWB
lEeRUBxLSEWGm0ilvr7eysqKeUl0a2srLupnewx2JtgE84CqcPm6CQOOBSen
eeEgH5HN5OQkHLy0tLSpqYm52ayoqEjyDUQzv+6AraDytPLxf6azs7O4uBh2
I/lsBcwd8ZUS9cYFZ7HjWKmQ8swFUh4FQ8qjSCiOJaQy2697g4ODgYGBKGS+
EvH398eFOdQeV5q43vTx8QkICLCwsGAGtIFNYBZ1IHqxsbG4ZvT29kYh8/Rl
VFQUZuPj483MzBwcHBi/wKXl8vt1j1ha0HmSkpKYcZbQddEPZQzExOfzZVdg
vomS/D6Eoaenp729XRwXvYYs6n0FpDyE0kHKoxgojiWkIvm0heQdU7hmxGUm
vAAfOmtr6ytXrkDPYQEcDsfc3FxbW/vevXseHh74xN2/fx9+YW9vb2xsXFdX
Bw/CZePdu3dv375tZGSERtDyhQsX0Ajc59q1a8wrY/A5nTYSILkJQSgFC/6c
FykPQRC/C8WxhFRkjH7z5MmT3t7eR48eDQwMZGdnww6Y0RcLCgqqq6vLy8vr
6+uRQQVkUBl51MQFI1wJeVTr7Oxsbm5GI2VlZbW1tYWFhajJDFHCDFciCbkJ
QSgFiz3uFikPQRAzoTiWkMq00cgh+5LDLUrS0dEx26J5Aa9JSUlhXkUtCbkJ
QSgFi/EeBFIegiBkQ3EsIZVpb4fMy8tj7kybecdOeHg47Eb2XT2/C1oWCATt
7e0z94TchCCUgsV4Ly0pD0EQsqE4lpCK1I4xPj4+ujjIuEed3IQglIIFj2PF
kPIQBDEbFMcSUmFPxyA3IQilYPHi2CWBlIcglAL2iAbBKtjTMchNCEIpoDiW
IAjFwx7RIFgFezoGuQlBKAUUxxIEoXjYIxoEq2BPxyA3IQilgOJYgiAUD3tE
g2AV7OkYcBMTExOpblJTU6OpqTk4OKj4vSIIYhrLL44l5SEI9sMe0SBYBXs6
BtzE3Ny8sLBw5qLe3t6srKyxsTHF7xVBENNYfnEsKQ9BsB/2iAbBKljVMXp6
ekZGRpZ6LwiCkMUyi2OFpDwEoQywSjQI9kAdgyCIebH84liCINgPiQYhlWkd
o6SkJCQkZGRkJD4+vqmpKSMjo6urKz09PSkpKSUlBRUaGhpKS0vz8/P9/f0r
KioKCwujo6NbWloCAwMxXaKDIAhCcSxGHEvKQxCEbCiOJaQyrWOEh4enpqbC
SvT19TU0NIKDg83Nzfl8/vDwMBZ1d3fr6ellZmaGhYXBRzCNiYnBUpTAXLDW
Uh0FQRAKYzHiWFIegiBkQ3EsIZVpHUMgEMAjXFxc4Cbq6uqBgYEcDgc+Ehoa
inxHR4ePj4+bmxtMpLi42NHRMTc318vLq6WlxczMrKmpaamOgiAIhbEYcSwp
D0EQsqE4lpDKtI7R3d0Ng0Cmra2tubk5Pz+/sLAwMTExJyensrJSKBpQsbW1
FdPMzMzGxsb+/v7q6mq4TE9PT19fn/gHvqdPn/7upoeHhxfhgAiCWFwWI44l
5SEIQjYUxxJSmdYxioqKampqKioqkpKS4BFlZWUuLi4JCQlwGfhFXV3dixcv
UJ6XlweLgd08efKkqampvb19YmKitLSUz+ejEXiKs7Mz2unt7a2vr0e1hoYG
1OHxeDAgNAKvKS4uhiW1i0CFJTp6giDmzWLEsaQ8BEHIhuJYQioz71LLyckJ
CgqqqqrKyMiAzuvp6Y2MjMTGxmpra1taWlpYWFy7dg3VTE1NfX199fX1Uail
pQVzaWtrg8t0dnbevXv3/v37gYGB1tbWERERmNra2j548IDD4Xh4eGBdGxsb
d3d3NTU1rIh2QkJClurwCYKYL4t0fywpD0EQMqA4lpDKtI6RLiIuLi4zM/Px
48dFRUV8Pj84ODglJcXQ0NDe3t7V1RUmEh8fD1+AjxgYGISGhvr4+PB4vJqa
GicnJ5iFnZ0d7AM+Eh0djamfnx8atLKy8vf3j4mJQQUYDeNHMCnYCra1VIdP
EMR8WYw4lpSHIAjZUBxLSGX//v3TSgYGBjDt7Oxcit0hCILtzBSNBWmElIcg
CBksiPIQy4833nhjrwQqKiroKshgivxegiCIfwaiQcpDEISCWRDlIQiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAhiefBv//ZvP/74416CIIi58cYbb5DyEASh
YBZEeYjlB6xkqXeBIAhlYv/+/fI3QspDEMS8WBDlIZYf+/btW+pdIAhCmdi7
d6/8jZDyEAQxLxZEeYjlB3UMgiDmxYKIBikPQRDzgkSDkAp1DIIg5gXFsQRB
KB4SDUIq1DEIgpgXFMcSBKF4SDQIqVDHIAhiXlAcSxCE4iHRIKRCHYMgiHlB
cSxBEIqHRIOQCnUMgiDmBcWxBEEoHhINQirUMQiCmBcUxxIEoXhINAipUMcg
CGJeUBxLEITiIdEgpEIdgyCIeUFxLEEQiodEg5AKdQyCIOYFxbEEQSgeEg1C
KtQxCIKYFxTHEgSheEg0CKnMsWOkpaWFEnOAz+e3tLQs9n+NIJYQRcaxpDxz
hJSHWPZQHEtIZS4dY2xsbNOmTRwOx4n4Pc6dO2dnZ6eAfxxBLBUKi2NJeeYO
KQ+x7KE4lpDKXDrG8PDwmTNnFLAzy4DY2Fh7e/ul3guCWEQUFseS8swdUh5i
2UNxLCGVObrJqVOnJicnkc/Ly4uLixsaGmIWTU1NFRYWpqSkJCcnJyQkpIhA
eWlp6aNHj8QtZGVlYa2nT5+mpqbGx8c/fvy4ubkZ9TMyMiC/WBdLY2Ji2tra
oqOjQ0NDW1tba2pqkpKSOjo6BAJBTk7O2NgY01RXVxdWLC8vR1PPnz9/+PAh
MpWVlVjlxYsXWAU1kW9vb8dGUb+urg7towLyWIpyTLEW01p/fz+fz8duTExM
YJcaGhqwdexJYmLi4OAgVoyIiEALqI8DxxENDAxg08hgkfgkSBIeHk5uQixv
FBnHkvKQ8hAEA8WxhFTm6yZQV2tra0aoQUVFRa4Id3d3DodTUlLi7e2N8szM
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
gZSHUApIedgjGgSrYE/HULybVFRUSG4ObmKfap8pzIRZxDyPsUi2sMmwMUsw
8671Noo2UvNS86nxSROmIaEOJ4dDbvJ6Qk9bUBwrJ6Q8xCtAysMe0SBYBXs6
huLdpKmpSfLd5XATLT8t/3p/33pfx0LH6y7XvWq84Cb2efYGUQamiab3/O55
P/b2qfdBHe1gbXKT1xNyE4pj5YSUh3gFSHnYIxoEq2BPx1C8mwwPD0u+WGd0
dDQ9Mz01IzUlIyUtMy0pPemu+t3/88b/eePNN+5q3M3Ky8rMy8QiJNRJTU99
8eLFwu4PoRSQm1AcKyekPMQrQMrDHtEgWAV7Oobi3QR2IOPFOuZm5v/yL//y
6aefuji7GBkaNTU1LezWCSUFbkJ3qbGkkQWBlIdQCkh52CMaBKtgT8dQvJuM
jIyEhYXN9vjn06dPP/zwQ2tr68TExOjo6NjY2Lo6+jmPEA4MDPT09Mh+H9Py
huJYOSHlIV4BUh72iAbBKtjTMRTvJkAgELx48QLG0d3dPTo6OjY2xpT39/en
pKR0dnaOj4+Hh4fX1NSki0C1Bd8HQrkoKipKS0t7nX/bpThWfkh5iPlCysMe
0SBYBXs6xpK4SXR0NKzEwMDAxsbGxMQkKCgIW8Flb2JionhzERERg4OD8B2U
IA9/WfDdIJSI1NRUeqsOSxpZEEh5CKWAlIc9okGwCvZ0jCVxk8jISFzeVlRU
NDc3u7q6+vr6NjU1JScnS24L6tHW1paZmYk6yGCWDOV1hp62oDhWfkh5iPlC
ysMe0SBYBXs6xpK4SU5ODnPv2eTkpJWVVU1NzTQrEYrcBBbDfDGC2crKytzc
3AXfE0JZIDehOFZ+SHmI+ULKwx7RIFgFWzrGhHB8ZNxQzzA/J39qfGpaqqmq
eaDxYLBvEPmF3WxZWVlxcTEyU1NTzc3N0dHRQ0ND0+rATRobG5GJiorq6+sT
iu5TKi8vX9g9IZQFxBs8Ho/chA2NLACkPISSQMrDFtEgWAYbOkZ0QrRFgIVt
qO0N8xsGHgZ2PLtpycTH5Lrpdetga+sQa3+e/wJuuqSkpLS0VChyk4yMDBjK
zDpiN6murs7JyWEK4+Li2tvbF3BPCGWhrq6uoqJidHR0qXdkyVg2cSwpD6FE
kPKwQTQIFrIgHWO2AWRkMD4+LlZj/wh//iA/RZiSLkxPEibFjcelCdOQSZhK
EM9iUbIwOXYq1jnEWf4dFgObyMzMZKzkyZMnUuuI3WRsbIzP5zNPFmMaExPT
39+/gDtDKAVtbW3oKq/znYrsiWNJeYjXB1IeimMJqbxCx6ivr8/Ly4MCw0SG
h4eZRxXGRAilOQtqDg4ODvwz+Dy+/fbb27Zti4+Ph5tEDETATTKEGbp83etO
L1/LaJVqddfj7g3nG9c5111LXWEocBM4i0OAw8IcuYihoaHw8HAczmxWIpRw
EyBpOp2dnUlJSa+zqryeJCcnh4aGoksv9Y4sGUsVx5LyMHlSntcTUh6KYwmp
vELHiI6O1tXVhZYaGRmFhYXZ2toGBga6urqqq6tzOBxk/Pz8JD1lZGQkNjZW
8M+gzh//+Md///d/v3/vvrOvc+RgJNwkU5hpmWKpaq962fqyU6FT+li6babt
ce3jTg+dYDRwk4SJBA1LjcjwyJqamgU5fLihgYFBa2urjDqSbtLX1xcVFSVe
9OzZM7jhguwJoSzQ0xZLFceS8ogXkfK8hpDyUBxLSGW+HWN0dNTBwSEoKCg4
ONjKysrJyQmGgoyJiQmXy/X09HR3d8csvEZ2O2NjYxEREcwPfMHRwVHDUfCL
PGGegcBAl6+rFaxlmWrJyecYxxprBmra5dilTqWiQqIw0SPSAx/kzMxMbJf5
goIZSPwVjn1ycjIuLs7Ly0t2NUk3mZqagpv09PSIl5aWlpaUlLzC1udOV1cX
jvTFixcznwQhFA+5yZLEsaQ8pDyvOaQ8FMcSUplvx5iYmGhtbR0YGGhpaUGm
XURlZaW9vT3kva+v79mzZ21tbSMjI3NvMygiyDbFlpvLtUm2MQoz0vHT4WRw
rOOtzaPMreKsbBJszARmZjFmrrmunGyOi78Ls9bg4CB0Pjk5edOmTba2tvM6
CqHISjIyMpqammBqst+Qkp6e3tDQIJ6trq6eNvoN9kFsNwvO8PAw7NvAwMDc
3BzGN+0LnJHhkfa29mdPn/1uan/aPjjw+v4gtYCg19FbzhXfCCkPKc9rDikP
xbGEVBaqY/T09ED3Xm3dwqJCZzdnJ67T/kP7tfS03LzcXN1dXT1cuR5cTJGM
zIz27N9jz7F3cXNJS0+TXDcwMHDFihV/+MMfQkNDX85PzilNTry0EsYCeDye
7G8bUA0CIp4dHx/HKpI3pyHPjFj+aof/u8BB6urqYNZcLhf2J7mIF8kz4hvZ
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
OX+mzp/X/fnnl81u3mz0yy/mmzYZffzx1e++e/Dbtn5NW7eafPfdvaSkNHk2
FhUV1d/f397enpycjOm0pfAa5r+D/9Rsj4Ggq0j+dAv7Hh0dFX+Dgd4l/7s7
6dc9imOlslyVZ2Ji/MoV1fPnLzHpwoXLTJqWZ2YPHTpSUFAgY1tzZvL0acP1
662//976u++sNm1yWL/e6r337n79tRFKJNPGjTbffKNNyvM6wB7RIFgFezrG
YrsJrmTff//9FStWeHh4SJZDmjo6OsLDw2Vc50q6SXFxMaeIkzSZFD8VHz8Z
nyBMQEoSJiUKExOmElCIKUriJuKSJ5PNws0G+wbF62ZnZ097YFkS7EBRUdHs
S4dVVMw2b47eulWwZUvEDz/4IG3aFCrK+4nywVu3RmHptm0xq1c75uS8+sA7
4+PjGRkZg4Mv9/z4ccSukdu2vUzbt0etW2e7ejUCV96OHTGYxVS8aM0a57i4
lPluixkLnfmX4X8H/ce/28LCAtZfW1sL78aexMTEFBYWBgcHp6enwywcHBxy
c3Pxj4BBZ2VlNTc349Tl5+dXVFTo6+vX1dUh09raihXd3d3j4+OxFpbioDo7
OzH7yqeFgZ62oDhWKstVecbGRq9eva6pqYukrq5z48YdJDU1TQ0NnZs37964
cffOHXVmqZaW/rlzl/DZnK2p30VSeQ4etP3mm7R161KR1q/P+Pxzt08/tVu7
NmHDhizMYvrbovSPP/aLjSXlWf6wRzQIVsGejqGAb0UqKsq//vorBwd7cQkk
OiYmOjyc7+XliUxPz/T70xjEbjI0NBQREcEt42YLs42ijO643/F85HnX827y
eLJ2iLZXjdd9n/sa/hqm8abW6dZZwiwrgVVPZ8/Yb+AKHRfUPT09ULaxGWAp
2p9ZzjA8PKCiYrJ5c8TWrfwtW0JXrrz48cfXPv301jffvPyC9JNPrn37rcm2
bQIsRVS5dq19UFBI7asC6f6P//iPN954w9BQb/9+3c2bw7dtC0PasSPqiy/u
f/jhmTVrTNets9y40fnrr3WZRdu3h69bx3Fz82Fa6O3t7e7uZvINDQ04NIg8
M8v8OsbkYRZwh4CAgMjIyKCgoMDAQJh7S0uLhoZGYmKitra2jY2NpaWlj48P
HMTNzU1LS0tXV9ff39/V1dXFxQX+YmxsjHK0g9U9PT29vLzQgpGR0dWrV5OT
k1ETrmRlZYW1sCH4o/y32JGbUBwrFRnKU1lZ9s03Xzk62olLxsdHY2OjIyKg
PB6xsVE9PV1SV2SD8gwNPVdVvaauro10796DzZu37dixa+fOvceOndq+fRfy
x4+ffvBAD0sRyiKOxadyQZRn1y7jNWtS1q9PRPruu/SVK/XeeefKp586fP65
81df+X70kdn69QlYtGFD8mef+XC5pDzLH/aIBsEq2NMxFtVNCguL3dz8fX3D
TE3tDhw46e4e6OHxa/LyCvbyCvHx4SGDWTe3gMzM7GmrQ+5KSkqigCDKw8OD
W87NEeZYpFhctrlsGGUIW8kX5msGat50vWkSZ3Kdc90i2YJ5naVegJ6ftx9P
AggjjgW6x5snISEBmzapb936MlLdvl3w5Zfan3xyA3Hs++8f+eYbww8+OPvz
z4Fbt4aL41hnZ9fsVyUuLu5Pf/rTl19+yeW67NnzYMsWcRwr+OorrfffP7Rm
jdk77+x8553d335rtHUrj4lj1693srS0Z1p4+vRpc3Mzky8oKIBL5uXlMbPP
nj1rbGxk8vh3Q+RxSqOjo3F2/fz84AXV1dVJSUnFxcVw3vT0dLgJanp7e8NQ
YBkwCBhNsIiMjAwYPfwCDoUpqvH5fLQQHx8Pr8nKyiotLYV9ODo6hoSEID8w
MEBuIj8Ux0pFqvI8fFji5BTi6RlpYOC0Z885F5dQFxcek7hcvpsb38MjAhlX
Vx6qpafnTFudDcqDD93x4ydFX8ZqI149ePDIL7/sRhy7YcPGY8dO/vTT5jt3
1Jkol4lj8dGTX3nc3Fy2b9eXjGM/+sjkrbdOfvaZw3//9/7/9/8OfvKJ9bp1
8Uwc+/nnvhYWpDzLH/aIBsEq2NMxFtVNrKxcN27U27HDatcu2927bbZvN9+x
w3LrVtNt25Be5pHBUqQffzTS0LBg1oIGVlRUxMbG4po6ISEBV/pC0S1tHlUe
BcICA4GBDk9HK0TrhvMNrwqv607XLVMsdcJ07rjfwaKAJwG5wlzbWNsXg9N3
pqOjIyVl3r+CCYVje/aY/vST4OefIzZvFqxb5/LZZ5offnj18891Pv5Y7fPP
dbdsicIi0dKor7+2y82V6y418euBjh41/fHH8M2bXyZE0V98obt2rcOXXxp8
/PHtjz66+e23llu2YIvhW7ZEfvONY3x86nw3hH9WTU0NcyMZ7GPaXYJYGhER
0dT0j7fSY8dGR0eZ2ZGREfE9h5WVlTCR7u5uGe9qF7+YXh7ITSiOlYpU5TEx
8Xr7bZ+PPgr/9NPIzz8PX7Uq9KOPwlauDFq5MnjVqhBRPvijj/hIf/lL4K1b
jsxarFKeycmJK1eu3b+vjaShoXvp0lUVlYNbt/5y4MDh3btVDhw4gvBVvPT0
6fP5+fnz3YQkYuXZv9/myy9T1qxJRlq7Nv3DD80/+8xr5Uqr997TevddjY8/
dl6zJlW0KHXVKp+4OFKe5Q97RINgFezpGIvqJg4OXjt32h096nH4sNsXXxze
sOHqpk3qn36qsnr12a++Ov799zc2brx17JjXkSMee/dytLVtamtrmaELcUWP
K+7U1FRmmEdQVFSkFaTlVuimx9e7637XNM5UzVNNzUtN00/TKs3KLNFMP0zf
JMZEJ1THvdBd00VzaEDKoD0NDQ0QpXmdn6mp8cuXDfbtM9m/35hJ+/YZqajo
qajoq6gY7N//j3Lkf/nlfklJ6bzan22zt2+bqqgY7d//azp40PTAAVNMDx40
R0KeKT9wwHjnTvXMzOlfKM0L/O+kekFGRkZQUJCLi4unp+f9+/dRLTQ01N/f
X/xViZWVVXJyspmZmaurK5bCgNCXqqurp7Xz9OlT+V89Pzg4iLhiLmMZLVco
jpXKLFfQAR9/HLVmTfq33yb/+c9X//Y3w48+cnjzzfPvvqv+zju3PvjA5MMP
LdasyVi9Ou2zz+Lv3nWpra1hm/IgjlVTU1NVvc6kq1cxvXbp0pXLl1UvX76K
WVEJs+jG6dNnS0pK5tX+LEzduGGxY4flrl0WTNq922b3bmvR1Hb3bjvkf1uE
S2mdjAxSnuUPe0SDYBXs6RiLH8faHjnifvSo19dfH//73w/u3m35ww93Dh1y
QRyLsPbkST8sRTp40G3jxr0BAX6tra3i1SFB4llcv1eUV5SXl1c9qqquqa6s
qoRqBQYFJiYmwiAMDAx8fH1KS0uxzxUVFY9rHwtnITc3t6amZi5HJMHE5OTI
5OTob9NpSVw4MjU16zcD82dS2rakbF3+jaanpzc2Ns4s5/P5MEecMTgInN3L
yyssLMzY2NjZ2RlTW1tbIyMj/N/t7OxgN1jk4+Njbm6OzLR2srOzZ1rMfEEX
TUlJme1OyNcBimOlMnscK0CYumZN5jvv3P7zn6988UXIhx9afvttAmYR1q5b
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
NGUVUxOqgCuJkg44mB9LFRjz0BUY82DMgx7SwIAqoKdioFZNSOTOF3//299b
Wlp2tntNTc2bjgoyMzOzixPr7CKqq6vv3btHNQkUxM/PLy0tzdXVNSwsDOQD
VjMzM+G2Ojs7x8XFeXl5JSUlBQcHb//hElMTqpibmyspKdnjg1IF5sdSBcY8
dAXGPBjzoIc0MKAK6KkYaFCTZ8+e3bhxo3MTum50Xbp0CfnYRwFsSeMP8HBq
RUVFb8Q/U1NTZWVlOzsLugI5capJoDL+/v5wpqGhoTExMYWFhVFRUUC8xcXF
RCKxp6fHxcXl+vXr8fHx2+S/uzNj0gMNDQ1wau+kn2xtbe1WUr6XwPxYqsCY
h67AmAdjHvSQBgZUAT0VAw1qMnp31D7VPulmUmJvYspASkJ3QkJPQnJ/Mixh
Nf5mPCUetrFPsR8bGaMx59nZ2Tdq0j5+/Bi2R+HLgYWFBRAIqp+Zuru78/Ly
SOTvoYAXZKw/hZWVFeDD7UeA7Ojo6O3t3fVi7yLgCsDdeScz3cBxQazf+SQ7
mB9LFRjz0BUY82DMgx7SwIAqoKdioEFNRoZHIpsj20htuIe4yI7IyueVxXPF
0deii+eLS5+W1pPqkfiypbJWUmtEUwSoD+2ZDwwMtLW10b49DodDz4An6wEn
ApzW0tIyOjo6uQ4gE+Pj45Pb4sGDB48ePaKa1NPTU1FRsYM/+vYYV69eramp
2fUvyDQCDcM5Yn4sVWDMQ29gzIMxz7suAgY0Aj0VAyVqEt4QDkoR1hp2Meii
S76Lf7V/aGNozPUYq2Sr5P5kUBaI96vyW9umPuyN1IS01uRvR4bvpgWoVRPA
/Pz8rVu36uvry3cPHR0d78XcgnV1dQQC4V2Nv726unr9+vV3cmgKMD+WKlDO
PA8f0jpZFcY86ATGPOghDQyoAnoqBnrUpIXUEncj7krcFaMwI48ij6qlquyR
bH0/fYsEi9jOWLMYs+KZ4iZS0/ZqcvfuXTy+mEAgrjeIsbFx3BAJ1tJC5W0J
Ho9HSS9RDOvxrnpbUFBdXT02RutnZXoA82OpAj3Mg8MB1ZTi8SUUgxgrK6f1
MWD5+SUtLe2bc8CYB53AmAc9pIEBVUBPxUCDmtwduhtQFVD3rC6kNcQixSKg
PiD8arhLoUtQU5B3hbd7sbttlm1oW2j1i+qqZ1X+lf6gPltllZGRKyBgJS/v
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
lHE4HDD25OTk9ucOfqySko+kZJGUFO7o0YvHjxsxMV3h4vKBMDOzJTu769Gj
hszM1jIyRWC8vKFBQcHEt0BpaWlWVta5c+dA4mVlZRkYGP75z39GRURFN0WD
WNSQaorniu0z7eM748FF0ffXNwozwo3jwD+BJDDYJqI5gkY1qa2tBSXFvu6h
IZO3BMY8+495wI+119KKPXcuUltbk5v7LC/veQEBKxkZCOsJCZlKSp7m5tYX
EorV1Y3T1XVUVAwOCsKY530BGkgDAwqBhoqRTcwmPiU2k5qzR7OD6oPiu+Lt
MuxCm0J9K33ts+29y7x9yn0SehJaSC1VpKp4fPz2ue2NmpDIAznu4IMdiEhx
8f/P3ntHxXHlaf/Yc3b/+Z13dvd9z9kdz4zlsT0er2WPZxzGcracxpJlW5aT
khWtHFEOCBCInHOmocm5aaBpcs45RwESUeQkMqh/j7rsnja0WkBDU42+H+6p
c+vWrVuB28/zrSxgTo90d3dbWFhIXkPNNmB/NTU10Gr4XXx8fEVFxfx3rCSO
/eqriDff1Fm37torr6h/+23Cq6+eQX7TpsA33rjyxhsamCqOY21TU9MGFQNr
OzY2hgx26alTp4qKim413rJLtvvZTYYEeuF6O6/uRF8663RWO0jbMc+RmbRQ
N1mOpy1Ui9UTx5LysBJFlEcSx7ocPKi+ceOJzz7bt369z4kT+z/8EHnbffuO
/fOfSK6HDiGO1f7227TUVFIeVYENokGwEDZ0jEB+oEOWA7eU61bgZhhuaJti
ayow1fbVdsl1sU6wtk60No02NY0x5ZZw3YrcnP0fcpcaRF5pbrK4sxkQIhy8
l5eXj4yMNDc3L/mKKQIEGauUmpoaGhoaGRmZm5vb1dW1iM1EHPv118YbNkRt
2BD64osnX3757OuvX3/11Wsvv3zm9dd1MPrcc7vXrTP8/PPIzz+Peucdm/z8
pf+qTntLu02yTYYoI1WUGjkUaZZk5nfLzz7XXoeng3zUUBTKU0QpSKjjkO1w
s/7mfJolN1k1cSwpD3tYKuVBHKuxa5frvn32e/bsfued/e+/f/qf/zz+8cf7
33tP/bPPMLrl1VfPf/65608/IdbV3Ly5YBm+6kvKs0ywQTQIFsKGjlFSUuLO
cXd1d922Y5uuni7Hk+Ph5cH14d7PcD2QTMxNftj2g4OTA6plZmaK7r9JexQH
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
2f+q/1WHAgfPWs/EqUQ4TthgmGuo68T4/e/U4NB+udewvr6ekZ2oqKiTJ88g
UkUc+9VXX1+7pr1r194ff9zz44+7v/8eu3A7hleuXEMFTc3rWlrX5Tfr5+fH
6OHAwICVlZWzs3Oc3Bebw4shgOLrjJOffeb02mtF69blv/pqwlNPqT/99LUX
X/RYs0b973+PWreu6M9/1lu3LlccxxatXet7/PhJmEJ/f/8S7pP5ANlHtCDx
GuzD6enpiYmJWVfEYG3Sqj7Xm+6Jmdt+QkJCS0vLoldPwfsYyU1UJY59ECqk
PBERwm+/NUUQe/Cg17vv7t+712XDhvMbNpz77LNzH3107OOPT3z00fHdux0P
HODu3s05e9ZEfrOLVp5796YPHbpy6pTt6dO2hw8bvf/+lk8+2b5167n33tvy
00+6Z87Yb9iwRxzlIo6127794okTJ0h55kLKoyAUxxIyYUPHyC3IdQ90dw9y
P3LhiLGjMZfH9eZ7e/G8PEM9keGGcS3dLfed2u/s58wJ5iSkJDBzMa9DZD5T
uNzw+fzt2388cuT44cPHDhw4dPjw0YMHD//006H9+w8cOoT8ERQeOnTkyJFj
yJ8/f3H+LUNOJTetPZSJieH33jN//vnktWuTnnmGs2aN1ZNPmv3hD3pPPWX3
+9/rPv98+BNPaP/v/wrWrk148cXkZ55xDQ4OLS0tWdo79+YD9JZR+4aGhsjI
yOjo6MDAQEdHx+Tk5F82ZGJ8fNzW1jYsLIyR5bGxsdbWVpRjlDEd+AiPx6up
qWEe8cBWSJ71QGG+Am/LSUlJobMiiqDqcayE3II8tyCOWzDn8MWjRk4mnuFe
XhE+3HBvjzAuMp48LwuO1d7TPzn5u7iHeCSkJDJzKVN5eLzITz5R/+YbnS1b
rn/11bWvv9bevFnzq680vvzy6i95FGpt2aLz5ZfaJ05ozb/lBSnP2NjIzp2n
9u3T37/fYMuW059/fvCzz/Z//PGPmzYd/uijnTt3Xlu/ftvu3dr79un99JPB
11+fDAkJWfJ7hucDKc/qhg2iQbAQNnQMHPKfOXX60vkLe3ftPnX8xOULl65c
uHT5frrIDM+cPL17548Xzp4/p37WxdlFMuPg4GB8fHxOTs5y3/qOBVXOG/kv
ZhwZGRkaGpqcnIQc9ff3L0jqZ2amvb35dnah9vahDg48Bwf+LykcQ3v7MAeH
CExikq2tf29vX1NTk1AoVLL0RUVFMRbZ19fn4ODg5ORUWFiopaVVVlaGPQkT
gb9gP7i7u4tv+m2HNdjb2/v4+HA4HFNTU0tLS1RwdnbGmnt5eTE38rm6IiwP
ZtpHI1jEolcPJquIm2RkZCCMITdhQyMKwgsOvrb/wI0jx45v+fbqnn16R4/r
HTuO4Q1xBsNr+386tnmLzuEj1w8e4jg6SmZUuvJUiJMc7ldobr4tpynFlGcm
ICCEw8Ev1MfDw9fT0/+X5Mfl+qOQGTLJ1dWjt7eXlGcupDwKwgbRIFjISnUM
HP+Wl5cz7zDkeHicP3NGV1sb6eqlS5pXr146f/7alSs6WlpXLl5EITJ6OjrI
YNTU2HhWU8o8PaI4gYGBnp6eEElk7OzswsPDi4qKllWaoL2JiYnKVD/8O7BQ
ZBobG7GZcAG4A4Y9PT15eXnY6sjISNiNlZUVDmHq6+vT09NRCNfQ09OLiIiw
sbExNDSE+xj/goWFha6uLtyaaX9sbCwsLGzRq6fgU8PYk9g6RVpQdVQ6jpVW
Hm8XF5OdO52OHkWy/Oknm4MHzfbutT5wwPHIEYv9+1HocOSIy/HjyFihXE9v
VlOkPPIh5ZkFKY+CUBxLyGSpOgZzdWZ8fByK0SoGGYy2/gLy3d3dkkm3bt1y
c3ODyODw1snR8cLZs9c1Nfft3v3Dd999uWnT5q++2rNr1+GDB7f98MP+vXt/
3LFDX0eHCWvNTE3nLh2/7ri4uJycHOVfyVooMTExcJPU1NTCwkJIaHJyMg7S
S0pKlnWhSjYUiZuMjIx0dnbeu3evr68P/3Rm6vT0NKwE/6mOjo7m5mbkCwoK
METH4HK5cJ+urq6hoSEMUdLU1HT79m30FicnJzgvc9Pa6Ogoj8db9OrB0RR5
Xz1mT0hIkPO2olUPq+LYRStPZFSUq52dya5d9kePqm/efOCf/9zxwQe7Pvzw
9FdfXfruu0OffXb266+Pb9rkcuKEA6LcfftsDAzmLp2URz6kPNKQ8igIxbGE
TBTvGBCH/Px8HMxCGCEapaWlyWKQwWjyL/T39xcXFzP58vLy6upqZ2dnSGtQ
UBCOji+dP4+EeNVIX//40aPHDh8+q65+5NAh5DFETKsnN45lwFGz5PQI82Nv
aroVEhIVGho9n5SZmaPgrpgPPj4+kEfop7e3N8RTJP4suxKeHGEMhRH55Ubi
JjJBT4CZYifU1tZmZGT4+/sjrmhsbCwqKkJ/QPdA3ygUg4xkroGBAclHPxV0
k7a2NkXcBCvP5/Pp6t6KN6K48tiZmZnt2WO6b9/xL77gnDp1betWjR9+MNi9
+8r33yOPIWJa+XEsg0zlQfDD50fMI/EVfAp+npDykPKoOhTHEjJRvGPgaBcy
vtCf58TERElJCfNAq6en54UzZxCmHti3b++uXfv27Nn85Zf7du/ev2fPpx9/
fPTQoe+++cZQT4+568DURN4zuTiaTkpKioqK2rx58+joSEBAxCuvmKxf7/7B
B25MWr+eIz0qSW+/7XLgwAN9agmBKmLboYewWmw+9ltvb69yPmeJnYM9c+vW
reVeEJaCZT1oaldXF8IH/NM1NDQsLCxiY2NtbGw4HA6GmpqaMJcLFy4gxrC0
tKyrk/2xWjSO6GXRq6fIlUERPW3BmjhWceXxcXMz2bnT8ejR81u2qH/55dmv
vtq1fj2GZzdv3rJu3dXvvtv/ySeIb52OHrXet89aX19Os79WntHQ0LCdO/ee
OHHm+HF1JiH/69GfM0eOnFjQk6GLhpSHlEfVoTiWkImCHWN8fByHtwquAwTk
8KFDp0+e3LVzJ4LYkydOHDxw4Bj0/dixQwcOHD969MD+/bt+/BHlx44etbWx
kd/a2NjYhx9+qKampqFxhc+PX7/e4+uvBRs2eL/66pnXXjv3zjsGn3zi+uqr
Z5H/9FO3zZsFmzdHIm3cyD958iEtrwJmZmYyMjKampqWdSl5eXkPMgKR+KyI
iYlJbm4uTCcwMDAxMTEkJARDRBeYEV7j7u5eWFjo5+f3IJOtrq5e3FPD2PyG
hgbxe90X//IcchM2xLFLojyBPj7nduzQ2LfvyObNJ7777sreverbt1/YtevS
nj1nduy4uHv36a1bj27ejPJLu3Y5WFrKb02iPFevXo2OFp48efb6df1z5y5/
/fW3W7Z8t2fPTyhBBunUqXOYpKV1A+nqVe2HvqlvFUDKQ8qjOBTHEjJRsGPg
0F6R5zcZIBqjo6MjIyNaWlr4qTInDUbHxvCDRSGGpaWlly5d6uzsRP6h79Me
Hh5OTU3V1tY+duyogYHVxx9zEaZ++WXY669ffPNNrZdfPoII9q23dF977fym
TcFffRXx1Vd8pA0beCdPWiu4ISoB9vZyGwr+BWFhYQ86MdLT0/PQL6SXlZU9
aHZEC7Cexb2aEsGPk5MTZvfx8VnE7AzJycnYuvm/s2j1wYY4dkmUZ+bevRHo
zOioprZ2anr6+OQkRkfHx4chO6OjGJaUlV28fPlOVxfykw+7A1aiPEePHjU1
NVVXv4AwVUPj+rffbt2+fdfGjV9s2fL9zp17MLxyBVJ3Q1NTF0mcX/1xrIiU
h5RHYSiOJWSiYMfAj1ooFC5olsHBwfLycqhZUVERhszlLcSrNTU1OTk5t2/f
rqqqQigr/cpo/HIxaVY787lK5ecXvn49B3Hsli3Ct97Sef31S6+8oo70j39c
XrdO4+uvheI49n7asCF8qeLYmzdvxsTEyP+wzkKJi4tbQv3HPs/MzJzVYE1t
TWFR4bxSYSHz8Xc5NDc3R0ZGhoaG5ufnF/2akpKSioqKIrnATVBtbnl0dHR4
eLgirxPPy8vDf0f6/reF0traOv/vE61K2BDHslx5goODT548q62tp6NjgNj1
u++2bd78DdL332/bunUHCpmTsUt7PpaUR0TKs6qhOJaQiYIdA6oi/4sws8Ah
LdwnNTXV09PT398fmpadnR0YGIjD5JCQkM7OThwLJyQk4PfOHLfCekpLSxsb
Gzs6OuAyLS0td+7cgdQg4+fnV19fD9XC6IPkBXHsq6+af/ghF+mDD9zfecfu
zTct3nrL6u23bT/4wA2F69d7MunttzkHDhgqsisYYmNj09LSsJIjv2Z6epr5
ZDmMkhmCqakp5kQ0dgsyOGZHBqNMoTRtbW04lsd+U3wNJZfMsrKysPORgbnP
TM7ouel5Vnpya7jedd5eNV5etf9KKPxXvoprHGec+Ms74eXAPB2MIGH+r959
KF1dXfIfDEeH6ZEL1kddXR09TX41BpnPjCCMQSPMi5seTdgQx7JceRDH7tq1
//Tp86dOnTtxQv3gwWP79h3cv//wgQNHjx9XR6EkHTt2+sKFS4rsCgZSHgmk
PKsVimMJmSjYMaAYcu6rnwvcBwfLmAsKBjWDFyQnJ0OBMXrjxg3k4Ro4bsVR
M3M7vUAgwJE1fAdeY2JiYmpqyuVyzczMeDyem5vb8ePHcYxsYWHR88ubVWZR
V3fT0zPEy4vn5RUmHoZ7e/ORkPml8OfE5YYlJKQositE4o/IpKenzy2HgOfm
5laJQR1sLHwQFllYWMg83Yzdgn3S3t4u/6IVDEWR26tE4oepscewe/Pz8+FQ
UEUYyv23c0/O2PHt0kRp9tn2enw9n3of/Qh9gygD2wxb4xhj91J38wRz50Jn
kxiT5KnkwNbA5PRkRVZjOeju7o4SEysXBD9hYWHy60hgGkTL0gtCL0X3o7vU
VrYRlisPfuC+vn4BPxMoJohJGA2Qwt8/ICkpSZFdISLlWVFIeZQGxbGETBTs
GDhsTElZQPg3MzNTVFSEX2hBQYGrq2tCQgLsw9fXFwe8JSUlMJfi4mJzc3PU
8fHxgQiXlZVBn+EpmAUl0AEoP2wFuuru7u7n5weV5nA48j+hpTSEQqHM8zPY
EEdHR29vb2dnZ8g4n8+HP6IESs681NrLywvOUltbi62Ljo5OS0uT2T5zzUuR
NYQZ6enpwT7gy3BWlGChdnZ296bvOUQ5eFR7cMo55nHmRtFGsA+XQpeDhgdD
20ITRhKuB18/bXf6sudlfiff/7Y/29wEIU1QUNCCApv5t4wdJX16hJ62YEMc
S8ojDSnPSkHKo0wojiVkovhdalC/pVoZCGx5efnc8tu3b1tbWzMfuR4eHob7
LNUSlxaY3fj4uMxJLi4u8AvGPeG/kD4LC4u+vj6IeXV1ta2trZOTU1VVlYaG
BqzzQe+ThFXFxMQouJI9PT0jIyNmZmawacbLsNozkzNwk+C2YPtse0OBoV2W
nUWSxVXvq2edzzrlOUV3RxsJjI6aHzWIMODd4QW1BbHNTZKSkurr67E/74hB
yeTkpPSHb5j/y9TU1IO+hoMKzFc7Z5XDR1pbWyXfZxeRm7AjjiXlkYaUZ6Ug
5VEmFMcSMpHZMSbmTWdnZ3h4+Pzry7m3Z3p6GofqBQUFcyfdvHkTx/Ls//3y
eDzG8kRSN4OJfv46eQA2MC4uDoYiFApjY2NTU1NRv729vaKiAuXQq8jISFTj
8/mlpaUy2x8YGFgS7+7q6goNDZWsJ1ZmZmpGz13Pr95PP0pfO0TbOt36EveS
cYyxgcAAo7phujrBOnt192r4afjU+pgmmSakJCi+GksFNiEqKop5jAKRhrGx
MfQfEQhspVMMMjU1Ndi98OvGxkbmEirKkcH/C/EJrCQ3N9fb27ulpQWekpiY
iP8LyuG8rq6uMHHpR4robeTLF8eS8iwOUp4VgZRHyVAcS8hEumNA7rKzsxf0
NGtwcLC7u/v86+MAHD/8tra2uWuCpeNQvbCwcO4kuIm+vj77f78SN8G2QMEm
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
SiDlIQjiQVAcS8iEPR2D3IQgVILli2NXBFIeglAJ2CMaBKtgT8cgNyEIlYDi
WIIglA97RINgFezpGOQmBKESUBxLEITyYY9oEKyCPR2D3IQgVAKKYwmCUD7s
EQ2CVbCnY8BNTE1NZbpJXV2dtrb28PCw8teKIIhZrL44lpSHINgPe0SDYBXs
6RhwEwsLi6KiormT+vv7s7KyJicnlb9WBEHMYvXFsaQ8BMF+2CMaBKtgVcfo
6+sbHx9f6bUgCEIeqyyOFZHyEIQqwCrRINgDdQyCIBbE6otjCYJgPyQahExm
dYzS0tLQ0NDx8fH4+Pjm5uaMjIyenp709PSkpKSUlBRUaGpqKisry8/PDwgI
qKysLCoqEgqFra2tQUFBGK7QRhAEoTyWI44l5SEIQj4UxxIymdUxIiIiUlNT
YSUGBgZaWlohISEWFhZ8Pn9sbAyTent79fX1MzMzw8PD4SMYxsTEYCpKYC6Y
a6W2giAIpbEccSwpD0EQ8qE4lpDJrI4hEAjgEW5ubnATTU3NoKAgZ2dn+EhY
WBjyXV1dvr6+Hh4eMJGSkhInJ6fc3Fxvb+/W1lZzc/Pm5uaV2gqCIJTGcsSx
pDwEQciH4lhCJrM6Rm9vLwwCmY6OjpaWlvz8/KKiosTExJycnKqqKpH4hYpt
bW0YZmZm3r59e3BwsLa2Fi7T19c3MDAgucDX3t7+0EWPjY0twwYRBLG8LEcc
S8pDEIR8KI4lZDKrYxQXF9fV1VVWViYlJcEjysvL3dzcEhIS4DLwi4aGhtHR
UZTn5eXBYmA3t27dam5u7uzsnJ6eLisr4/P5aASe4urqinb6+/sbGxtRramp
CXV4PB4MCI3Aa0pKSmBJnWJQYYW2niCIBbMccSwpD0EQ8qE4lpDJ3LvUcnJy
goODq6urMzIyoPP6+vrj4+OxsbG6urpWVlaWlpZnz55FNTMzMz8/PwMDAxTq
6OjAXDo6OuAy3d3dV65cuXbtWlBQkI2NTWRkJIZ2dnbXr193dnbmcrmY19bW
1tPT8+rVq5gR7YSGhq7U5hMEsVCW6f5YUh6CIORAcSwhk1kdI11MXFxcZmbm
zZs3i4uL+Xx+SEhISkqKkZGRg4ODu7s7TCQ+Ph6+AB8xNDQMCwvz9fXl8Xh1
dXUuLi4wC3t7e9gHfEQoFGLo7++PBq2trQMCAmJiYlABRsP4EUwKtoJlrdTm
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
iDsxPsHMODMzU1ZWBk/Jz88nTyEI5aDqcawEUh6CUCHYIBoEC2FJx5iZmBkb
HruhdSM7LXtqdGpWqiqtunbpWn9X/+TopGh6zry/eEpeXt4sT7l3TzQ9LZqa
mleid+oQxHxYNXGsaNmUB9ojuj/DfNKUuDJBEA+BJaJBsA02dIy6urrrbtft
BHbaXtqmYaa20bZ2QjskW4Et8kjm4eZaXC3rSGt7gb2es97dYRlPDd+7dw+e
Eh4enpubOzHx82mTqKjp996788knHUifftqO9MknP6dPP237JX9/6vr17Zcu
jSp3uwlCJVk1cezyKU9hYeuPP2bt3Zu/Z0/+7t0FTNqzR5LJl6Tt23Pd3EqV
u90EoZKwQTQIFrKCHWNy8uev5MAFOBWcLFFWtig7bjIubioudiI2ciAyTZQW
PxWfKEpEYaooNV2Ujjq2cbaDvYNymq2srIyIiMjPz5+amgoJEf3xj2Vr15a8
8ELp00/XPv10zbPPVv35z1XPPFPz1FN1zz9f/txzFS+8UIIKzzxTtHt3r1K2
myBUG1WPY5WgPFlZ7c88U/jcc5V/+UvF3/+e+/e/5/31rwV//Wvh3/6W/+qr
2ZCjF18sxiToz5NPVmhqFilluwlCtaE4lpDJCnaMkydP7tu3Lysrq6SkxL3U
PVOUyevgGQuNL3tcPmlzUjdM1yrFyjbTVjtI2yLJQp+vn3IvBYZiKbCsrqhu
ezCdnZ0tLS3x8fFeXq4nT6b8+c81L79c+r//W/3kk83PPnsTwzVrbj/11K3f
/77tT39qwuiLL1b89a9lf/lLyb59fSu1KwhChVD1OHa5lcfT093Q0P+ll0pf
eKHqlVeKPvgg5c03s9evT0bmvffSPvkk/p13MjAKXYL4PPts+fXrxSu1KwhC
haA4lpCJcjoGLCNsDn//+9/V1NTefPNNd3d3ryqvHFGOVZpVUEtQ8liySYxJ
4nSiocBQMCQwjTWNn4hHSfK95AxRhjHPOCI8IunBpKSkpKWlBQcHa2pe2LLF
5/nn6xGmvvRSOYJYBK5/+EMr0jPPNCCOhYmghOJYglgQKhTHrojyXL166fhx
k5dfLoe2QHnWrct59930jz5KREJA+/HHCYhgUUJxLEEsCIpjCZmsYMdwc3OD
p4yPj1dWVnIqOLmiXEG/wDTe1KnASTNA0yDKwDHfUTNQU8NX4zL38o3wG5mi
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
KCVdlJ4kSoqbiksTpSGTcC9BMopJyaLk2HuxrqGuiq+wBNhEZmYmYyW3bt2S
WUfiJpOTk3w+n3myGMOYmJjBwcElXBlCJejo6EBXeZTvVGRPHEvKQzw6kPJQ
HEvIZBEdo7GxMS8vDwoMExkbG2MeVZgUI5LlLKg5PDw89Gvwe3zuuec2b94c
Hx8PN4kcioSbZIgy9Ph651zuf5bROtX6CvfKedfz55zPuZe5w1DgJnAWx0DH
pdlyMSMjIxEREdicB1mJSMpNgLTpdHd3JyUlPcqq8miSnJwcFhaGLr3SK7Ji
rFQcS8rD5El5Hk1IeSiOJWSyiI4hFAr19PSgpcbGxuHh4XZ2dkFBQe7u7pqa
ms7Ozsj4+/tLe8r4+HhsbKzg16DOv/3bv/3nf/7nNY1rrn6uUcNRcJNMUaZV
ipW6g/opm1MuRS7pk+l2mXb7dfe7FLrAaOAmCdMJWlZaURFRdXV1S7L5cEND
Q8O2tjY5daTdZGBgIDo6WjLpzp07cMMlWRNCVaCnLVYqjiXlkUwi5XkEIeWh
OJaQyUI7xsTEhKOjY3BwcEhIiLW1tYuLCwwFGVNTUw6H4+Xl5enpiVF4jfx2
JicnIyMjmQt8IcKQ6LFo+EWeKM9QYKjH19MJ0bFKtXLOdzaJNdEO0rbPsU+9
l4oKiaJEbhQXP+TMzEwslzlBwbxIfBHbPjMzExcX5+3tLb+atJvcu3cPbtLX
1yeZWlZWVlpauoilz5+enh5s6ejo6NwnQQjlQ26yInEsKQ8pzyMOKQ/FsYRM
Ftoxpqen29rahoaGWltbkekUU1VV5eDgAHkfGBi4c+dOR0fH+Pj4/NsMjgy2
S7Hj5HJsk22Nw41v+N9wznC2ibexiLawjrO2TbA1F5ibx5i757o7Zzu7Bbgx
cw0PD0Pnk5OTP//8czs7uwVthUhsJRkZGc3NzTA1+V9ISU9Pb2pqkozW1tbO
evsN1kFiN0vO2NgY7NvQ0NDCwgLGN+sEzvjYeGdH5532Ow9Nne2dw0OP7gWp
JQS9jr5yrvxGSHlIeR5xSHkojiVkslQdo6+vD7q3uHmLiotcPVxdOC47du3Q
0dfx8PZw93R357pzuBwMkYzNjX/Y8YODs4Obh1taepr0vEFBQWpqar/5zW/C
wsLuj8/MK81M37cSxgJ4PJ78sw2oBgGRjE5NTWEW6ZvTkGfeWL64zX8ocJCG
hgaYNYfDgf1JT+JF8Yz5xvZJ9g6pDvbJ9naJdtLJIcXBLunnoXWCtR13wZ5L
zCUnJyc2NvZRPkPFnue8RKQ8pDyPDKQ8FMcSMmFDx/Dl+XrUeYR0hIR1hYXc
CQnuCEbCKNLP+TviSR0hfi1+Dn4O0vOWl5dD2319fdXV1Y1cjJzCnBzDHB15
D0hh9xPqGDgY3Lx5k2kBNiT/rAjEPCkpSbokKyursbFRumR8fDwyMnJZ34ji
6urK3Js3MzMjeVo5TBgWeff+gyrB7cFxk3FZoqxMUSaT0kXpvG5ekigJw1RR
Kuq48FyWb/UeHZjvh+K/sNIrsmKwKo5VBFKe+UDKwxJIedggGgQLYUPHCBIE
RQ1HpYnSIHoJUwmXOJcSpxORR2IKJSl+Jp4TzpHZyO1btx1zHX9+bY4oIVGU
mHDv/hCzJIuSkUHCJCTUsUqwam1uHReTkpJSU1Mz/mBgHDgKli65c+cOn8+H
d0hKkIfpREVFyWlHQTo7O3Ekjkx3d/frr7++Z8+erMys0OhQ/gA/vDv8mMUx
3TBd4ZAwaiAqpD1EMCjg9/INIg0MowzN481tM2zhJs6hzkr+z65KMjMzo6Oj
6awIGxpREFKe+UDKwxJIedggGgQLYUPHgJtEDEZA7iD7SAYRBmbxZvtv7L/I
uWiRZME8L8yk2KlYd567SHxmYFzqRrjJycmcrByHLId0UTrqGwmM3EvdTWJM
rFKtTlqf1ArQssu0Q55pCkNTgamnhydPjIWFhbW1Ne/BuLm56erqzirU0dHx
9PSULoG/ODg4ME9Sy2lt0aB9JuPn5/fv//7vv/nNb44dOebi7RI5GBk7FnvS
5uQVr/svCzpuefyo+dFj5sfME8y5NVzrNOugliDnAmd46DWra6nJqdKPihCL
IC0tje5SY0kjCkLKMx9IeVgCKQ8bRINgIWzoGHCTyKFI5gpU4kziebfzV7hX
LnlcOudyTsNXI/Xe/XImxU3H+Qh8enp6Dhw4UFBQMDQ0VFZWFhcXFxoaynHj
OOc6M27imOcY2BwoHBbCSsLuhJ11PovkWenJvNIcQ9tE297uXmbppaWl8t+l
c+fOHem71Bjq6+uLiormVq6srFzuD0fCOrlcLnN1MiwmLGI4gt/HP+N8xjjO
+Ab/xiGTQ8hrBWmd55w3ijEyiTc5Yn7ErdwNu9eF59La0hoREZGTk3Pv3hJ/
Z/PRgZ4aXk1xLCnP/CHlWVlIedggGgQLYUPHCIgI8LvtF9kXGdEXweviOeU5
qTuoHzU76pzn7Frkyu/lo5xJ4T3hFw0u/vmZP6upqR09ejQ+Ph5eALVHI02N
TW5Fbtmi7DxRnkWihaHAkFvFvci5GDseC0vCqGeVJ6bCSjC0T7Xv7Pj5mz5V
VVUyfUFCa2vrrLvUROLTMmFhYXM1GSVQG8yydLtHHjEJMSb+JtZh1mb+ZhZB
FrZ8W7MAM/NAc8sQS/MgcxMf8aQAM6sQK6swK47/zxdGe3t7Ozs7IyMj5byD
nXgQ5CarJo4l5Vk0pDzKh5SHDaJBsBA2dAxuIPd66HUToYmx0NgkxsQmzUY7
UPuK1xXrFGv4gnGMMcqZBFPYc2KPpaXlsWPHjI2Np6enGxsbJyYmhoeHG242
aHpqumS72KfbG4YbXvW4ahRhpBOoYx5vjqFdup1tiq1TtpNjtiPqXHO91tPV
wyx9cHBQ+gXjc5HpJiA7O1vyyIY0MJqYmBilXUSbGp+aHJucHJ+8P2Qy43My
4kkiKevDSsJTkpOTIYwPfeUmIQ12Go/HIzdhQyMKQsqjCKQ8SoaUhw2iQbAQ
NnSM4Ohg4ZiQedb1/sOtRS7I5InyPKs8o4ejkc8QZTApSZTkLfjXy8ODgoK0
tLRsbW3d3NwqKiqaGpvgKQ72DtVV1Tjevz/a0ODk4FRfX9/Y0Nh4sxFTmdR8
u1lyQmPWh3Lm8iA3gV8IhUKR+A3ts7Slv78/MTFx0a8DUibYfPhpXl5ecXEx
831PQj5dXV3oEo/yV0FXTRxLyrOCkPIsFFIeNogGwULY0DGkn7ZInEm8xLkU
0Bhw0f3iSeuTprGmMp+2YIBoV1ZWpqSkODo6VlVVMYV8Pn9y4l+qWCFGztKh
pQKBQM5dWy0tLTgQljkJbgJt8fHxsbe353A44eHhQ0NDzKQHeRA7gacUFRWF
hYVhf670urCdurq6kpKS8YW8b3+VsWriWFKeFYeUZ/6Q8rBBNAgWwoaOMeup
YZ1QHQ0fjX06++5fzosyZB6RkOkmDIGBgTk5OZJRHo8n/VZGHL1GRUUxJTLf
sggfwSxyxKGvry8mJkbmJAhLXl5eQUFBWlqar6+vh4eH9PW+2tpaTJ3fPmAF
2FdNTU2dnZ3FxcUqcUpnRUD0Qlf3WNKIgpDysARSnvlAysMG0SBYCBs6RqAg
UDAmgGtkijJhGTfCb1zzv3bA8MBhs8NBt4OYF2szwwRRghvPbdbsw8PD0pel
ZrmJSPxZHKh9T0+Ps7NzVlaWUCic9S5x+W4CQkNDZZYzz1wweVdXVzQ+6yXV
GRkZDQ0ND9sB7AKeW1paGhISkpqaKjnJQ0igpy1WTRxLysMqSHnkQ8rDBtEg
WAgbOgZPwDMNM7UV2Gp7aZuEmjjFOZ02OP31rq+1XLQcYxxtBDbm4eZaXC3r
KGvLSEtOgOy3kf+rtTluIhJfhqurqzM3N4+NjbW0tJzlDnAE+R/EkVjGXEpK
Smpra+FoFRUVcxuBuSQlJbW3t8tfZ3YCF4YFY7voxY/SkJusmjiWlIedkPLI
hJSHDaJBsBA2dIzp6em7Q3cH+wZ1tXXTktPuDt4dGxmbGJ8YvTuKPFJpUanG
ZY3O9k7kpyYfcpe7TDdpbW3NyMgYGRnp7Ow0NTWtrq6WnpqQkNDV1SUSX4+T
+eKaB7nJ1NSUp6fns88+e/369QetD4wmPj5edcUHO0QgEEA/Ozo6ampqsK+W
e4n19fVw//AlBas96wPxiyYlJQUNqu4/VHFWTRxLysNmSHlmQcrDBtEgWAh7
OsbMzIyZmZnMFyo2NDTo6+vP83t8Mt0EJCUl3blzh7GVWZMKCgqys7Orqqos
LCx8fHx6e3tnVZDjJpqammpqaurq6nJWiXnBzny+i83ae/j7+vpgtdu3b/+3
f/u3B92ztySg8fT0dPyn7i4pLS0tcXFxmZmZiq9hWVlZVlbWo3wX36qJYxlI
eUSkPKQ8qgB7RINgFezpGNPT03CTwsLCuZNu3rwJN7k7v+PQB7nJwMAA87Ka
ueTm5sLFYDSOjo58Pn/u7HKu7oErl66cVT8rf61giDAs+d+ygWJ7eno2NTU9
qMLo6MDdu53zS13Yn/JXaZ6Mjg6hwZGR7lu3qj755O3nnvv9f//3/1dXV/yA
hSr0ThgY1pII/oOIj4/v6OhQsBF0pJ6enqXavarIKotjSXkeqjx37w4NDvag
4z80DQ72LtVPY2RkeGCgd2ior6Gh9sMP33v66TX/9//+R1VVOQp/nbDQPgXf
RkXKoxKwRzQIVsGejrHcbgIEAsGRI0fgF7PKKyoqSktLZ2ZmOByOzDcZSrvJ
rVu3rLnWbmFurmGu9xPP1SXM5ZLppZ9HpRLquPi6SF7FU1VVJf8h4vHx8djY
2Aff0jb+2WfOf/xj/C8pUZwS5uSZ5J2XJ+9TQfNm6ocf7i/0ySfj/vjH2Gee
SX7iiTg1Ne//9//4KPl1wkL94uMV8oLo6OjBwcHOzs7k5GQMZ02F1zD/Hfyn
HvQYCLqK9KVb2PfExITkDAZ6l+Lf7qSrexTHymS1Ks/MzOTevTobN5pv2mS6
aZPZF1+Yi5OZOP2cl0z66KMr+fky9uTCuXfypO7XX+t9+63eN9/c2LbN+Ouv
b6xbd3zjRg2U/Drpb9x4MSkpTZGFkfKoBOwRDYJVsKdjLLeb4Eh27dq1ampq
XC5XuhzS1NXVFRERIec4V9pNSkpKnIudk2aS4u/Fx8/EJ4gSkJJESYmixIR7
CSjEECVx03HJM8nmEebDA8OSebOzs2c9sCwNVqC4uPjBW3b3r38VqqmJfkkD
4jQtzg+J8xNSUxsyMwse3NRDmJqaysjIGB6+v+br1/OlmkWqevzx7F+WOyu1
REXNvnL6UJh3oTP/MvzvoP/4d1taWsL66+vr4d1Yk5iYmKKiopCQkPT0dJiF
o6Njbm4u/hEw6KysrJaWFuy6/Pz8yspKAwODhoYGZNra2jCjp6dnfHw85sJU
bFR3dzdGF71bGOhpC4pjZbJalWd6emzrVosNG2K/+EK4aZPg00/9kTZsCBfn
A8T5sC++iMHUL7+Me/dd5+zsxb/yS1p5Dh0y/u67oG3b7qft20MRSH/6qd4P
P/ju2BGG0R07eL9MCvnsM5u4uOSFLouUR+Vgj2gQrII9HUMJZ0Wqqsrfffct
Jyd7ScnU1HhsbHRkZLiPDxeZ/v4emTNK3GRkZCQyMpJTzskWZRtHG1/2vOxV
43XF60ryVLJuqK53nfc132taAVpm8WY26TZZoixrgXVfd9/kL+AIHQfUfX33
r4JNzgFT0f7c8l/o/9vfIn+JGCfV1FzV1HzV1ILU1LLU1LzF+RypkLI2IIBX
v1gg3f/1X/+1Zs0aE5Mbb76JlkWPPz4jTshEPP643eOP5z7+eOHjjzc99lji
449PM5PU1JpcXAKZFvr7+3t7e5l8U1MTNg0iz4wyV8eYPMwC7hAYGBgVFRUc
HBwUFARzb21t1dLSSkxM1NXVtbW1tbKy8vX1hYN4eHjo6Ojo6ekFBAS4u7u7
ubnBX0xMTFCOdjC7l5eXt7c3WjA2Nj5z5kxycjJqwpWsra0xFxYEf1T8Fjty
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
4ZLXhqbaR5dS4pveZ0yst9Df319dXV5RUcKOVVWVvXzJluDGxsZCHeP2aORQ
eAqFwpGbxXEMJo0rV64w1OTmzZsjy+RjgWCe/wjztHd0heUkheYnYhZcGBdS
kBBSEB9cFBdcGI+GE/5JyktIKcz7EOapqqooLy8tL380rMEGpZWV5QTzsAmO
MA+BsQdCTdgBPNrvpSZAAmQyecTdPPPz8ouLONYibmxsjIyMdHBwAEGB5jb7
v9sNAEhqVlYWKEhOTg7cLF1d3ZKSkpqaGvz0AhgdNDc319XVjQLPw9XGvqji
DYNJo7Kyct++fZianD17dmSZfCwQzMMAwTx4BsE8HGEeAmMPhJqwg/dVEzo6
ZTlj2sf3RUtLS3h4+Mj2HQwgfC8vL0tLS8g2IyMjMDBwxKUKCwvr7OxMSUkB
TcHPYCyjjKKiogcPHmBderkN7g2z8yEYijR2794NagKP6odkMvogmIcBgnnw
DIJ5OMI8BMYeCDVhByNQk9Li0tyc3JEdrq2tLTQ0dGT7DgaoAFxVIEA4i8LC
whFrHOhISEhITk4OLGVlZRsaGjhVwk8Lo/N1D0Nubu57dbEZHbAkDRA+Hh4e
UJO4uLgRZ/JRQDAPAwTz4BkE83CEeQiMPRBqwg6GV5NXr16FUkP9Qv2YzY3k
pq6vPiASzIviVVX1jnFKOasmHAQoUX5+fm9vb3p6elFRUT5HAXf5k+hwytVZ
zgcALjWFQsHbi5HBpFFWVrZ69WqQEn5+/hFn8rFAMA8DBPPgGQTzcIR5CIw9
EGrCDoZXk5c9L7XctALbAiltlOBnwSHPQ4I6g8K6w0Kfh4Z0hYAFdgRiS9jG
4qFFTGzM8IeDSzHU1Dx4QEtLS2RkJJVKfcBRJCYmwr0rLCz82Of3DoymmgDg
yuBqakj6INJISkqaOnUqSMn69eurq9ka0X1wJh8RBPMwQDAPnkEwD0eYh8DY
A6EmQ4G5E8E71cQkwCSeHk/ro5kmmmoGa9rn2Kt6qro/ctcO09YK0SI3kyHS
r84vkZ7oXuEel/juzx9wFqPzH9T7AtrpwKVc+rQH1zkoKKiuro4bmXMKsbGx
oPWjpiYvX74cwVycXMUA0oDiff311+bm5u/V74ZgnqFAMA9LEMxDMA9HmIfA
2AOhJiwBhAacWVRUlJWVBbkNP/oNpiZJ9CTbh7aOeY6agZp6VD1pQ2n9KH31
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
4bigOMzzh0KpRvzNsby8PC+P9RuzwSD8WJYgmGcEzPMwK0vh+HEzOTljWVnz
y5cldu06yM9//fBhbfBdpaVvnz4N8ZiZXbp0/cSJ2sePucc8RcXFBkpKh9es
Udq3T+3gQbG//z7FxyexZQssLwsLS2/bBvHqYmJgZzZvPrV+vb+XF0vmKS4u
PHz4lri449mzdqjZb9hwauPGs8ePm4qIqO3erSIu7oAlwTYHDqjC9h/IPIcO
KcvIWElJmUtLW544oSEmpnTunOGGDaJ79lzau1cOYqSlLSBVSgo8ccWWlub/
MvMQGHvAT8XAv5oUFBRkZmZyI2eWaGlpWbZsGfN7GOzPeSiGkZERCM2cOXM8
3T0NfAxkTGRUPFRU3FXuUu4ekj+kG6nrlOukGawpYyRz2/e2gqOCspsyuYl8
RuOMmrpaABPWr18P+WzezOfm5vR//xfA8GPnz/eYPl3qxx/J3313eeZMRbBf
fsldsqQQUn/55dFvv9m4uTkyMvHx8Zk0adLnn39+TuKcrattQEsApiawDHwa
KKEpoR2qDaIGxZPSl4p5GQNJWKqqqSpzYeAWQ2FmzJhhYqK9e3cQgkQiiB2C
OCJIGIK4oX4sFUGsUbczBzXY5jlscOmSJiOT4OBg0FnIB/jWw8N+zpzEt9+7
Qm7u6I6QoTqC1DOSJkxIsLW1DBiEkJAQMpnMHKOpqQlC7+Xlha0uXboUDick
JOTs7Oy6Zg3mx6bw8en//rv4/PlR69fL/PSTzv/9n8kff7itXJmIpW7cqLVh
g4ePD3O2cK+xfK5evQp3GaRBWVkZS8rOzq6qqsLCFAqlsbHx22+/HT9+vLi4
eH39vy/GQYNCQ0MfP34My+Li4sTERPA64uLiPD09/f39o6KiOPVOj/BjWYJg
nvdlHr7Nm51dXJRPn2b4sXKiottWrVI4enTn33/v37hx38aNhjIymB9rLicn
KyYG23OPefQNDHTl5WUEBY9v2nRq0ybZHTvO8vODHysnLHxswwYHScmbBw6A
yWzbZnrmzPF161QVFVkyj6ur87Fjagw/9tw5p40bT4NHLCgou2mT+PLle48e
NcRcWQkJp337lGxsrD6QeY4du4X5sRcv2uzaJbN69a7z543XrRPZuVN6377L
R45AqiWkyshYHzwo6+Xl+V9mHgJjD/ipGPhXE3hyo6OjuZEzSwBpXLt2DSgC
mOThw4dBQUFwarCEhn9hYeHt27exD2H3nO5dtbuqFap1Wu30EYUjsLwbeFcv
Ss8kweSK9RXjeOOLphfDn4cHPg48q3k2MiKS+RARERFJSa+HWK+pqVi0yH/J
kkpwZX/9tXLePJsffvCYN89u5syb06fLzpljsGRJCerlli5eXLl8uXtn579f
96DNDnwF9wjCIdEhAa0BifTEBHpCEj3Jr87vstVl4wTja3bXTt46qeSqlExP
hiSwOHqcLcWWuTC1tbVAethJ7dkDvisZQfwQxBdB/BHEAXVrbdBwJoI8QJAY
BIlHtzF3d39rtIf4+HjsdcGzZ03ffhv/th8LOUSg7jG4snfQN7r/JE2cmF5X
xxbZwhUDiWFMVYPdETraUcJ5+fK0TZuSN21K2LhRYeFCtSVLtH/77cbChel8
fEa//26/bFkaH1/Sxo1p69dbbN/e9fb/saCD2Du3srIyY2NjcBiGmhu0p6fH
w8NjwEj1IEAWFhbm5uapqalaWlpXrlwxMTGxAYG0snJycoLMzczMONWrmvBj
WYJgnhEwT2VV1Y1jxyyvXAFX1urq1Qu7d8sdOCC5d68oH5/QmjWnduyAeMws
L19WOHWqlem7NjeYx0BR8Rwf3/mtW89t2QLLExs3XhISAicWwir79yuDUygs
fG3XLkkBgQMrVoS+PeQpg3na2p6Kid2UkHABVxbs3DnndeuOb9t2ef36k1u3
Xly2bM+BA3fPnXudCtuIit6qra1m574MwzyHDqnIytqCKystbbF587Ft28SF
hCT5+I5eumS3Z4/swYNKWKqMjM3ZsyovXrz1R9N/jXkIjD3gp2LgX03gKSaR
SNzImSXs7OxAv7AR9vLy8lpaWhj/KTHQ19unYqyi7qtuHGus5KSk6KSoGaip
H6mv6qZqGmeq5qtmEmsC8ZYplnf9714yu5QAXM4KFRWPFi/WXbSItGiRz6JF
vosWeaIBbwgsXOgO4cWLfdEYn4ULScuXa7W1NbHMhxJK0YnUsUm3sU63hqVh
tOHdgLuGUYZQEiVnpZseN63TrCEJzDLdUt9Bf4hTfyUq6sDD48vDE8nDE8XD
483D48HD48rD48nDE87D48XDE8zDE8DDQ+PhcefhsXR3j2CZS0tL/dy59jw8
6W8s7U0+XmjmYEGM1G++ca6pefeEMvShew3n5OTcXrrUfvVq29WrLVetUlu6
1GD58jtLl6r/8Yfd6tWaf/6pt2wZBGxWrbJfufKWoGAnq6F1MPT29r5k1Qts
KICgg++RnJwMZQCHh4oC6kxMTIy7u7utrW1sbCyE2c9weBB+LEsQzDMC5gGn
6Ozu3QrHj8sfPQp27fBhWF4/cgQCV9AwwxSOHTsnKjrUuA0cYh76nStXzgsI
XN2z59revRe2bz+3bZuEoOB58EF3776wbdulnTtlhITk9+2D+KPr11P8/Vlm
0tzctHu3tIjIbRGRm5gJCFwA11hQUGrbNmkwISE5EZFbaNJtcDirqthqQQ/D
PEJC4keOKB86pHjw4A0hoXP79oH3LSEsfO7wYaXdu6X27pWFAKQeOqR05IjM
8+dDepX/BeYhMPaAn4qBfzXp7u4OeJ8ByT8Q0JjNzs729fUd/te42tpauD6l
JaVlKBjhkpKSf8PFr8Nlj8qGahcDd5WVlT56VDzISlB7K7KysnywrmHoaO+A
Y5UUvbbiomI4OlaG10dHgSVhxvxlagAaGurgVKBIsAca+Ofk0BhsiSW9Rmcn
68EToJCVlZBe9MaKmfJ59Caff1LLy0vZJPCh1OTFixclTJfsEXpBscMUv1kt
fnM1K6uqRjDIz2Dk5uZeunQJe0WTmJhYVFQ0YANQmYSEBDaHtWEThB/LEgTz
jIx54NEoKS3FbDBKmKyiooLbzANJj7BzecSgnX/ODotnThpqlC0oZEVFOXPZ
32YeNP9/kx59OPMwXapSLH/seBDzT5nfHA585v848xAYe8BPxcC/mkAJg4KC
uJT5YHR2duro6MDpDEXdBD4KYmNj4aZ89NmOoFY4ODjMmTPn5MmTWExqampk
ZKSzszMsaTSam5tbdHQ0lDYkJIREIkHVBVkJDw+Hagzld3V1ZfyAB+Hk5GRY
BaGE3TMyMjw9PSkUCuzL8tCEH8sSBPMQ4CoI5sEPaRDAFfBTMeDp0NTUxH74
GQCcqAkAnrgPn/+FGXDWMTEx8NRDmbu6urCvZnl5efDgQ0xFRUVWVhYHD0fg
wwH3qKGhARtg5yOit7f36tWrX375pYyMDBYDtQgkQFtbG/vJDXwzbMBGc3Nz
XV1d8Exg6e/v39HRAfKBDecIj5WPj4+NjY2BgQEojouLC+yopqYGqaqqqt5M
wwoxY4z5sQTzEMzzSYBgHvyQBgFcgasVA6gS1AHYkvHdBBgSmwQkJycHAvX1
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
7+RJo82bIwUFI5csubh0qfJvv8n9+eftv/5SW73a+M8/b0Hkb79dWbvWYvt2
2tq1zh4e/h/CPOnpyUJCt1atUv/zT9l167Q2bNDbvt3zzz8vCQo6//yzyM6d
5IULRTdtMlm5UmXPnrCFC/fm57O4Nf9BEMyDK9IggB/gp2L09fXp6elB629w
0keZVSczMxM0pbOzc0A8aA035mrBgPmx4Kbu3737qJjY0YMHwZW9e/Pm4QMH
9DQ0zhw7dujAgbPHj2vduXNZWlpPVzdqCJBIJD8/PyC9wUmgI7y8vPv27QsP
D/7xRxUEeYogXQjijSDqqB8bjb6GtUEQJ9SnzUSQa+DZjh9/p7Awk0tn/Wkh
Li4OxHo0v+4lJSVxY7r2EWOM+bEE8zD82O3bY/7v/67/9dcdsF9/ldu2jfrH
H6rCwskrVuj8+afqypW6O3bE/v23i5aW4YcwT1hY6IYNpwUE3HbtCly+XP6X
X46BH7t2rQZ4sH/8IQMOLfi3Gzca/vTTPgEBp19/PZqXR7SgX4NgHvyQBgFc
AT8VA29qAqitrQXhYEyxjaGjo4N7A5IrXL+urqwMjutuISE1ZeVjYmJHREVP
HD587vTp08eOgTe7R0hISlxcW03tkqQkLYbF1713ory8HOt82t//bN5cDwSJ
R5AYBLFDECr66hV8Vx90NRJB/BFED0GSEMRr3GfKhYVDjrvyn8Io97aor68f
MFXQRwfhx7LEp8w8fcePG/HxxQgIxPzyi9yWLRF//KGxdOntP//UXLnSZNky
XQj/8svl1auttm1LWLXKlUqNH8ExGMzT29stKKCyauW9Navv/v5/MqtW3lm+
TOn3/7v415/y2OqyvxR+WXx67RrtP/+4vmjhQeJ9LAaCefBDGgRwBfxUDByq
CR0dFjslJYX59Qg2IDmXJgdUUlSUlZSUlZI6f/bsRUnJC+Li0ufPnztzBos5
ffz4IVFROWlpsLMnT0Lz/EOO1fWsZelyg9nzXWfN95r1z9J51nz7WfNtZs13
mzU/AF3azZrvM3u+88zvNQoLCzh1mp80RlNNoPrBsT7iTJQsQfixLPEpM0+/
tLTWtm1GQkKGgoLqQkL627bd275dBw0bCApqbNmivHHjJWFhIzB+/ts0WsKH
HKyjo01oz2X+HcpbdqrwCylu3anKL6TAt/36pu1X+YWUBHer8Qsr8W2/tnXn
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
pqaO8izq74Ux48dCC3rmzNyffqr84YfEn34q++GHtHnzoiA8f37mDz8k//hj
/o8/Fv34Y+4PP6TOnv3oyhWPwTkQzDMCgB8rJXX95MmL27fv37Zt38GDZ86e
vbx69cYLF26Iip5WUtKVklI8eVIG3NoDB06Jiw98H8uMwczT19cvfvaEtNQp
KcmT4hJHwC5cOHFW/LC4xFEIwOr5C8clzh2VlDwpI3360KE9mfc5zzzgx4qK
3jl71mfXLrWtW6/+/fcZWAoIXBUVNVy6dPe2bTfWr5fYvFn2+HH7M2c89+9X
q6tja3AAgnnwQBoEcAg8VAxt7RAEaUdfi1miLqs/Oi+qF4LEIYgHgmSgzkYp
+uqsRVLyLT8WWo7R0dHQUAU2g7Y5PINkMnkUnkQSiTR4KJjGxsbg4OBhWBdX
6Opq+umn0M8+C/jiC/8vvwwaP95u/HibL7+MGT/e9vPPTb/4wveLL14n8fI2
fv659cSJiQUF7+jYW1lZGR4eLiIiws/P39nWaRRkSO2OCO8Oje6nRvVTqS8j
ovoiGQGIxwy2sbpvcf8BN97H1n33ndO4cVnjxoWPGxc6blzKuHHkzz6L+uyz
h+PG0caNcxk3DlJD0A2yJk92q65ma0Qj7A89zva26O/vhxoVFhZWXV2dlZVV
XFwMzkl9fT2oDAePwimMGT/WyChg1qwHCxeWzZih9tNPxbNmmX333d1Zs4z+
9z+PmTMN5s0LmD3bcv782JkzdWfNyrh69S0/lmCeEQNq9fnzV/btOykicurg
wbNCQgeFhESPHpWEpaDgvv37Tx44cBqSLl9W2779wKlTsix/XWbGIOYxinge
GdYdTu2PovZFRb6kUvuoWAAsrDsMkkKfh8E2lvetuME8zc0NO3bI7N2rKSh4
TUDgirDwzS1bLm3bJr97N5yRwoYN5zZskNi69cqePRp79twTEJCuqqpgJ1uC
efBAGgRwCDxUjDd+LB1BKOgyDEFMESQdQfIQJAp9exaOxrsjSPNgPxYa4x4e
Hi4uLg4ODoWFhSAro6AmoFxNTU2D44EW0tPTIyIiOjo6uF2GD0RPT6eoqNmm
TR58fB6bN3vx8bmg5v4m4IiG3SAVAvz8ppWVFe/Ms7y8fPr06ePHj9+7a695
uHkiPZHaS9Uga2iGaNrct9EO19YK0bLOtDaIMUimJ8fT42PpsQn0BMd8R26o
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
OuFwXghyb0giGgjZIEPHqK2tvU6/ThVQrwVdc+Q4eiZ4UoVUSJ4CT8hDcuY5
W7As3OPcvQRe1jTr26M6nhqenZ0FT+HxeDk5OVNTv/xskpPT9e67Jf/6VwWk
99+v/HWqUpdXEnMPHiynUmuMu98IYpKYTRy7espTVFRx6lTI6dNsSD/8wPnh
hxitxFEXxhBzT56MDAoSGXe/EcQkIYNoICRkDTuGQvHLW3LABZjlzExVZpYq
K1GRmDidKJ4Sxw3FSVXSpOmkFFUKFEpUkgxVBtTxTPQc7h/W02xFRUVsbGxe
Xt709LRE0vuHP9Q8+OCthx5qeuKJiieeqFy/vvrxx6s3bKh68smyRx6pf/TR
OpgFFf77v5vOnq02yn4jiGlj6nGsEZQnJ6dy+3b2jh3iN99M2LMnAtLu3dG7
drH37Incuzf0rbdid+7kwawdO4SvvppgZxdnlP1GENMG41hEJ2vYMb777rvP
P/88MzOzuLiYUcKQq+TcTq690P5CwIXvPL6z4li5pbt5yj2vRV1zSXW5yb+Z
PpsOhuIqcK0qr2pfmO7u7tbW1qSkpMBAhpUV+7HHGh599NaTT9a8+GL+c8+V
wXTLloJNm4r++tfsF14oho8bNtQ/9ljTAw80nj+PcSyC3BtTj2NXW3kCApiO
jt67dvF27RLv28d57z3/gwdD/vlPGmTefTfgX/+ivvtu4D//6bd3b9zu3cI3
3hA4Osav1aFAEBMC41hEJ8bpGGAZnHls2rSJQqFs27aNwWAEVQZlq7LdpG5R
rVFpE2kOIoeUmRRbga1gROAodkyaSoKStNk0mUpmz7WP5cWmLkx6erpUKo2O
jr58+fxXX7muX98EYerjjzdCEAvh60sv5UKC/Msv56xf3wChLMaxCLIkTCiO
XRPluXTp4vffX1KHqaLduxMOHgyF8PX9930gQf5f//KGWVCCcSyCLAmMYxGd
rGHHoNPp4CmTk5MVFRXMcmaOKkcwKHBMcvTN970acdUm3sYnz+dq5NXLoZcv
sC7c4N2Qq+RZqixqMnVsZExPs4ODg4SnDA8PSqV96vsKmh97rPb55wuffrrs
mWdKn3qq7Lnnip55pvyBB1qee67w0Ufr8L4CBFk8JhTH6mT1lWcoL6/q9dfv
3Fewaxfv4EH6vn0h+/cH7dsX+vbbAfv3h+3YkfT224ydO/lvvil67bUEe3u8
rwBB7g3GsYhOyNAxampqrjGuUYXUm1E3rUKsXGJdHGIcbgTdcE9wt420tY2w
tQyyPE87Dx+9RF5Wvla3R3S/HbKrq0soFIrF4s7OTqIkK6tz797it9+uOHDg
V2n37pK33io4eLAS8jAX0q5dZa6uGMciyL0x9ThWw+opT0FB+ZdfBp08GQ3p
xAlIbPU0+ssvwz//PPjUKfjIVs+NOn48nMlMMOJOI4ipQgbRQEgISTqGYlxx
e+i21VUruUQ+OTo5eXtyamyKyECqKKm4fP5yX2ffxOjEzNS84W+0fAQy2uWz
s7NK5fT81NhY7+bmPDTUr1LN3C1UKJU4+g2C3BuziWNVq6g8ypmZSaVybmps
rHF1dRgc7JmdnbpbOAH6Y6zdRRAThiSigZANMnSM7u5uZgQzhBty6sIpR1/H
EH7InOQZ6PnN2W8CogNC+aFhMWGKKYVm2c7OzoSEhPk+op+hocHYWH5GhpR4
rQ+CIIvHbOLYtVCeIT4flCcDlQdBlgoZRAMhIWToGCUlJe5yd9GY6M64N9Ni
kUIESTglFE7eSZAXK8QpsymCMYHotsiOYzc8cGf0m46ODpEaMKOlrlGpVPJ4
vImJiZSUlIGBgVXYJwQxW8wmjkXlQRATggyigZCQNewYISEhQqFwenq6urqa
XkyXqWTJk8kuqS6WMZZXI65aRFoE1wR753hDxjnF2SfHhxjIkZpIra2qTUxM
BB/p6elZ3qpnZmZiYmIgMz4+joaCIEvC1ONYVB4EMUUwjkV0YpyOUVZWJpnH
yy+/TKFQXn31VbAVVgUrW5Xtle0FDsJuYluyLfn9fJtYm4hbEdejryeOJt7g
3EhVpoLj2LJtOdGcZfwSoo1SqeTz+cTLd9BQEGRJmFAci8qDIGYDxrGITozT
MXp6eprn8emnnx4+fBiUPFOeGVgemKPKCaoK8s72Dq0JtYi0YJYxnZKcIpoj
qHKqh9TDJs4GrIR4q87o0KjhmyQWizU/qqChIMjiMaE4FpUHQcwGjGMRnaxh
x5icnCQyZWVl1rHWYXVh4Y3hVlwrl3QXmJ5lnPXO9aYV0WiFtPOB5y1jLEPq
QqDOddb1of4hw9cObtLb26v5iIaCIIvEhOJYnaDyIIgpgnEsohMydIzbt29n
yDOkcukPZ34IDg/OzM3Mzs/OKczJzMmUZ8shceO435/5PjktWZYly83LXZEB
sua4iQoNBUEWh6nHsRpQeRDEhCCDaCAkhFQdw9XVtbS0dH55S3OLna2dQqGY
P2vZlJWVFRcXzynUaShgXtPTOMAjgvyC2cSxGlB5EIT8kEo0EPJAno4xMzPj
5ORUUFAwf1Z9ff3Nmzdv39b9Mp3lUVdXl5WVNb+cMJT+/n7Nx/LycrA5qVS6
gmtHENPFzOJYVB4EMQnIIxoIqSBPxzCym9TU1OTk5Oicpf3bSGlpKVTz8PCI
j49fwbUjiOmCcawhoPIgyPIgj2ggpII8HcPIbtLX1ycWixeaq/3bCKzdx8dn
ZdeOIKYLxrGGgMqDIMuDPKKBkArydAwju4lCoeBwOHoqgKGkpqaCoUBmznMZ
yP1MTU1NYWGh5pn3+xCMYw0BlQdZHqg85BENhFSQp2MY2U2mpqa4XK7+OhMT
ExKJZGRkZAXXi5g66enp0HPu51/JMI41BFQeZHmg8pBHNBBSQZ6OYfxfRXg8
nv6BdMBNSktLGQwGTOvq6sbGxlZwAxATRSqVxsbGopuQoZEVAZUHMQlQecgj
GgipIE/HMLKbAEKhcGhI38DmU5NTxUXFBXkFkIoKiyYn7t8LOogGdBOMYw0E
lQdZBqg85BENhFSQp2OsiZsMDg5qPo6NjUVwI6IEUZGCSCJFJ0TzkniaBB+J
cqgTygkdHhpe2e1BTIL09HQej4duQoZGVgRUHsQkQOUhj2ggpII8HWNN3ER7
4PH21nb7OPuEkYTYkdi40biEiQQiCcYFwikhTCEPsyBBHcdEx/q6+pXdHsQk
KCkpkclkExMTa70hawbGsQaCyoMsA1Qe8ogGQirI0zGM7yYlajQfO9o6qOlU
mUomUUkSRhNu8m/axts6pzi7S93P+p/1K/SzibdJU6alq9Khjk+WT0N9w8pu
D2ISDA8P9/f3Q3dd6w1ZMzCONRBUHmQZoPKQRzQQUkGejmF8N6mqqsrLy9N8
vOMmadQMVQa4SWxv7M3Ym9GN0ZdDLjslOVnzrM8xzgmHhGAlaao0qOOTiW5y
nyKRSPh8Pl7dI0MjKwIqD2ISoPKQRzQQUkGejmF8N6moqNBeHbiJt8RbrpKD
WYhui1zTXD1lns7JziF1IfZC+0vBl0JrQ6UqKSSoQ8umoZvcn+DTFhjHGggq
D7IMUHnIIxoIqSBPxzC+m7S0tGi/uxzcxDLcMqIxIqwxzLfQ9yf6T8G1weAm
3rnetgm2TilOl8Mvh9SHhDaGQh0rthW6yf0JugnGsQaCyoMsA1Qe8ogGQirI
0zGM7yYTExPaL9aZmprKkGdIZJJ0WbpULk3NSL149eKf1v1p3fp1Fy0uZuZm
ynPlMAsS1JFkSMbHx1d2exCTAN0E41gDQeVBlgEqD3lEAyEV5OkYxncTsAM9
L9ZxcXb5zW9+s3XrVro/3d7OvqWlZWXXjpgo4CZ4lxpJGlkRUHkQkwCVhzyi
gZAK8nQM47vJ5OQkj8db6PHPjo6Ov/zlLx4eHikpKUKhUCwWNzTg5TxENTIy
MjAwoP99TOYNxrEGgsqDLANUHvKIBkIqyNMxjO8mgEAgGB8fB+Po7++fmppS
KBRE+fDwcHp6em9v7/T0dGxsbG1tbYYaqLbi24CYFkVFRVKp9H6+totxrOGg
8iBLBZWHPKKBkArydIw1cROhUAhWYmtr6+np6ejoGB0dDWuB096UlBTN6uLi
4kZHR8F3oATy4C8rvhmICSGRSPCtOiRpZEVA5UFMAlQe8ogGQirI0zHWxE3i
4+Ph9LaioqK1tZXBYISFhbW0tKSlpWmvC9Sjs7NTLpdDHcjARzSU+xl82gLj
WMNB5UGWCioPeUQDIRXk6Rhr4ibZ2dnEvWdKpdLd3b22tnaOlajUbgIWQ/ww
Ah8rKytzcnJWfEsQUwHdBONYw0HlQZYKKg95RAMhFWTpGDOq6clpu5t2edl5
s9Ozc1JtVe11i+ujQ6OQX9nVlpWVFRcXQ2Z2dra1tVUoFI6Njc2pA27S3NwM
mYSEhKGhIZX6PqXy8vKV3RLEVIB4g8vlopuQoZEVAJUHMRFQecgiGgjJIEPH
ECYLXSNdqRzqWZeztixbL67XnOQY6viT008ebA+PGI8IbsQKrrqkpKS0tFSl
dhOZTAaGMr+Oxk1qamqys7OJwsTExO7u7hXcEsRUaGhoqKiomJqaWusNWTPM
Jo5F5UFMCFQeMogGQkJWpGMsNICMHqanpzVqHBEXwR/lp6vSM1QZqarUxOlE
qUoKmeTZZM1HmJWmShPPiv1j/A3fYA1gE3K5nLCSW7du6ayjcROFQsHn84kn
i2EqEomGh4dXcGMQk6CzsxO6yv18pyJ54lhUHuT+AZUH41hEJ8voGI2Njbm5
uaDAYCITExPEowoKNSpdzgI1R0dHR34NfB83btx48ODBpKQkcJO4kThwE5lK
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
eOfjdyz8LHxEPh4CD2eeswXLwj3e3TXOlRmhezTyf7c2z01U6stwtbW1zs7O
YrHY1dV1jjuAI+h/IY7GMuZTXFxcU1MDjlZeXj6/ETCX1NTUjo4O/dtMTsCF
wYJhv3DgR23QTcwmjkXlISeoPDpB5SGDaCAkhAwdY2Zm5vbI7eGBYatrVtI0
6e3h2xNjE1OTU+O3xyEPqaSw5PKFy90d3ZCfVtzjLnedbtLW1iaTycbGxrq7
ux0dHauqqrTnJicn9/T0qNTX43QOXLOQm0xPTwcGBm7YsOH69esLbQ8YTVJS
kumKDxwQgUAA+tnZ2VldXQ3HarXXWFdXB+7PW1Fgs+e8IH7ZpKenQ4Om+w81
HLOJY1F5yAwqzxxQecggGggJIU/HUCqVTk5OOgdUbGhouHnz5iLfx6fTTYDU
1NSuri7CVubMys/Pz8rKqqysdHFxCQkJ6e/vn1NBj5tcvXqVQqGcPn1azyYR
A+ws5r3YpL2Hf2BgAKz2yJEjv/vd7xa6Z29FgMYzMjLgP3V7RWltbU1MTJTL
5YZvYWlpaWZm5v18F5/ZxLEEqDwqVB5UHlOAPKKBkArydIyZmRlwk4KCgvmz
6uvrwU1uL+48dCE3GRoaIgarmU9OTg64GBiNj48Pn8+fv7ieq3vAxfMXz5w+
o3+rwBDBsPS/ywYUOzAwsKmpaaEKt2+PDA/3DQ3dOw0P98Px1L9Ji2RsbBRW
OjIy0NBQ88Ybr61fv+5//uf3VVVlOldq4JgwYFgrIvgLkZSU1NnZaWAj0JH6
+vpW6vCaImYWx6Ly3FN5xsaGR0Z6F5dW7KuhVp7e0dH+xsbqf/zj1Q0bHgHl
qa4uhcI5CVaKynM/QB7RQEgFeTrGarsJIBAIvvnmG/CLOeXl5eUlJSVKpZLJ
ZOocyVDbTW7duuXOcqdz6P4c/zuJ6+/H8TvveP6Xj1oJ6viF+mmG4qmsrNT/
EPHk5KRYLF7oljalUvHZZ5Z79jjv2+e4b5/T/v3O6uSkTr/kNbP+8Y+LeXk6
juTSUZ48eXPvXocDBxz277d/7z3XvXvtN2/+cccOSyj5dXLaseNyaqrUkJUl
JCQMDw93d3enpaXBdM5c8BrivwP/qYUeA4Guon3pFux7ampK8wsG9C7D392J
V/cwjtWJuSoPfIcOHbLfti3g73+n//3vjL//nalOjF/n6erE3LrVbqWU58sv
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
8/GVQxIYD0/dsmWejY1VjGOe0lJgDA82tqfz5/vw8xM4OR9ycT2bO1d/7txn
vLz28+aZzZ/vzc9PBJs7V5udXdvFhUCTeV6+LBAXd122rEhIKJdsedzcKvPm
aSxdmrxwYSA/v4ewcMHnpCJwLEtLC0fMPDicb2pqGidn1Ny5jXPn1s6d28DJ
mcHBEcHF9ZKVVW3mTJ+ZM305OdMhHlI5OZtWrvTs6Gj8LzMPhvEH9FQM9KtJ
YWFhVlYWI3KmidbWVlFRUer3MMif81AMIyMjEBouLi5Pd08DH4OrJlcVPRQV
3RU18BpHFY7qRug65TlpEjSvGl196vv0geODx26PA5sDz6ifUVVTDaDCunXr
IB8pqU1ubk48PNEUP3bGDMKUKXfY2OKmTHk0bZr61KlqHBx1HBzNkDprVgcP
j6e7uyMlEx8fnylTpkyYMOHC+Qu2rrYBrQGImsAyqC3ovOZ5baI2iBoU77L+
5Zj+GEhCUpVMlagLA7cYCjNr1ixDQ73Lly2FhdWWLbspJHRbTExNWFhhxYqH
4uLPBAWvS0tHS0pagomKqmzbFrh48U0FhaeUTAgEAugs5AN86+LifOHCA4of
e++e8Y4dR6Wlf9u79+yuXcclJXdeuqR6544BOcno999vWFtbBwxCSEhIYGAg
dYympiYIvZeXF7IqLCwMh5OWlv70yWzLFsSPjdi9W23VqhOLFgXs2nV+6VKV
Vau0JCSsN21CUsNlZJ5u3erh7U2dLdxrJJ87d+7AXQZpePz4MZKUk5NTVVWF
hPF4fFNTEzs7+88//3zu3LmGhn9eT4EGEYnEuro6WJaUlCQlJYHXER8f7+np
6efnFxUVNVrv9DA/liYw5hkZ8yxcSKT4sXPm4KZPv87FFTZjxj02NmU2NiU+
vpd8fJWQystbLyDg5ObGQOYxMtKVl3edPduGi0uNi0uDh8cK/FVubj1wYufM
eSoo+GrBggAwHh7zxYv/nDlT/c4dNZrMA/S4Zo0HxY8VFi7m5labN0+Lj89s
3jzN2bOvLlkSLySUT04tXrLExdbW6luYx8nJmZs7DvFjublbZs70ZGFR4OIq
Z2V9ys7uNnOm3+zZCUjqnDktixfb+fi4/ZeZB8P4A3oqBvrVBJ7c6OhoRuRM
E0Aad+/eBYoAJnnx4kVwcDCcGiyh4V9UVPT06VPkQ9gzp2d37O5oEbVOq54+
/uA4LDWCNPSi9EwSTW5b3zZOML5mei3sr7CguqCzmmcjwiOoDxEeHp6c/GmI
9ZqaCk7OyJkzu8mu7BsWFq/p0wmsrD5Tp2ozMz+YNs0W4mfNaoclO/ubhQuD
37z551dSaLMDX8E9gnBIdEhAe0ASKSmRlJhMSsbV425Z3TJONL5rd1f+ifwj
10cppBRIAosnxdvibakLU1tbC6SHnNS1azZLlyouX/54+fJHK1YoLlt2S0xM
Y+nS6xCWkDCTkDAVE9NatUpXRER5/vyLOFw4dT4JCQnI64L29rYzZ+4qKJiC
KwsGfuzWrYf277+wbdvhPXvOSEjsOH36gYKCCSTBNqdO3aVz6nC4YiAxlKlq
kDtCIneUsNiwIXL37jBZ2RAZGXDBH4qKPhETuyEkFC0n92z1atP166PIqZEy
Mgb79vX8+/9Y0EHknVtZWZmxsTE4DEPNDdrb2+vh4TFgpHoQIAsLC3Nz87S0
NC0trdu3b5uYmNjY2FhZWTk5OUHmZmZmo9WrGvNjaQJjnpExDy8vgZe3iY8P
XFloKTtxcuI4OFzY2NSnT78zc6YZL28NOal23rxmISHf7u5/Bk9gBPOcPu05
c6bJ3LlGc+cawHLOHPA/bTk5n0J4/nzc/Pm+PDwOvLwu3NwmLCyPvb3/dVMo
zNPV9VpU1HXZsldCQuDKFgkLl3JxKfPxgVf8lIfHlIPjioAAASLJqa+WLfOq
qxtylmFqDMM8HByxXFytXFzNXFz106frz5hhw8bmzMqqN3duBzu7z6xZEXPn
tnFxNc2e3SYm5vvhw7+GEfivMQ+G8Qf0VAz0qwk8xf7+/ozImSbs7OxAv5AR
9vLz81tbWyn/KVHw/t17RWNFNV814zjjR06PHjo91AzS1I/QV3JTMo03VfVV
NYkzgXjLVEsNP40bZjcSgctpoaLiFTe3+ezZ0Zyc4WQLIS9DITB7djA5HIEk
cXDELFli0tHRTDMfPBGvE6Fjk2FjnWENS8NoQ40ADcMoQyjJI+dHyh7K1unW
kARmmWGp76A/1LlfvqwjIvJ47VqttWu1xcUfi4k9XLnyvpjYIwmJZ7C6Zo3a
6tVPJSV1IX7p0qs+PgSamTQ3Nx8+fPbUqXsnT94h2205Ofndu0/s2XNq794z
YAcPXpCXvwtJsM3+/adAtem5L0P1Gs7NzX2wapWplJSxlJTBxo0PV6/WkJR8
uGrVo9WrTaSknkhIqElKQsB40ybTTZseycp2v3071CHevXtH/dnuiwBBB98j
JSUFygAOTyQZUGdiYmLc3d1tbW3j4uIgTH+GwwPzY2kCY56RMc/8+Ua8vCF8
fHgwXl5/8jIQAry8OHJkEJLEw0MUFtZjNPOcPm3CzW0kIGAvIODw668G8+fr
zZ+vM3++Pj+/7a+/wtJywQJTAQFniOfkVPbyItLMpLW1UVT02ZIlvkuWeC5Z
4gXLBQt0FizQ4ufX4+c3ABMQMFu61Juc6isoqFldXUHPfRmGeebMseDmDuPm
Dpk7N4iT04qLy4OT05KT05qbO3TOHAcuLjcIQOqcOeGrVxv29Q05qMJ/gXkw
jD+gp2KgX03evn0b8DUDkn8joDGbk5Pj6+s7/K9xtbW1cH1elr4sI4MSLi0t
/Sdc8ilc9qpsqHYxcFd5OWxZQo9VVpYN1jUEXZ1dcKzS4k9WUlwCR0fK8Ono
ZCBJiFF/mRqAhoZ65FTAIFBW9s/JkZevPoc/YaixbqCQ5XBWcPi/7WXZP3j1
d3afU2GVTgIfSk36+vrgKlMMDoCcNhhllZJaWVU1gkF+BiMvL+/GjRvIK5qk
pKTi4uIBG4DKJCYm0jmsDZ3A/FiawJhnxMzz6lUJPVZZWT42zAMPK9leUdHF
S8oSnmAktrt7SOapqCijLjlVPoj9c8rl5a++nXnIHIMcqISqtK/IMf8cDlKr
qytHg3h+YObBMP6AnoqBfjWBEgYHBzMo88Ho7u7W0dGB0xmKujF8F8TFxcFN
+e6zHUGtcHBw4OLikpeXR2LS0tIiIiKcnZ1hGRsb6+bmFh0dDaUNCQnx9/eH
qguyEhYWBtUYyu/q6kr5AQ/CKSkpsApCCbtnZmZ6enri8XjYl+ahMT+WJjDm
wcBQYMyDHtLAgCqgp2LA06GpqYn88DMAKFETADxx3z7/CzXgrGNiYuCphzL3
9PQgo53n5+fDgw8xFRUV2dnZo3g4DN8OuEeNjY3IADvfEe/evbtz587EiROv
Xr2KxEAtAgnQ1tZGfnID3wwZsNHc3FxXVxc8E1j6+fl1dXWBfCDDOcJj5ePj
Y2NjY2BgAIrj4uICO6qqqkKqkpKSt7c3zUOPMz8WYx6MeX4IYMyDHtLAgCow
tGIAVYI6AFtSvpsAQyKTgOTm5kKgoaHh+fPnJPIQdiAWUVFRg2cPIaFJTQgE
wrfP2EKNjx8/2tvbl5eXR0ZGxsfHu7u7V1ZWQhMVh8OVlJQ0NTWN4s9FqMXr
169fjiqqq6sZ9yoJ6TxOc+LIMUZzc3NsbCxUGxK5IhUXF8PT9OeffxYUFEAk
hOEpA4ckIyMDahGEIaaoqAi2BBelpqYGah1sDGETExPQx5ycHNgYYpKTk1+8
eAFP4lCfX9Hvx2LM80VgzEPCmGek+KGZB8P4A0MrBtRMqJbQwE9NTU1PTyeR
e1aGhYWlpaUFBQVFRETExcWBTEAlT0hIgHZZfn4+bAaVecCAcuhRExDHwT8C
fSM8PT07OzuhPQtSoq+vTyQS8/Ly4CrB1YMG+Fj2Ux57gBdBJCN1VAEcGxgY
OKBf7WgBJV/3wBmDc6T8ZAvqMNRLDATwxCEB0FmoVyAWyBRRLS0tyCRE9AP9
fizGPPQAYx6MeUaAH515MIw/MLRigDQAMUIzH3jSx8cH5ANIEgjT0NDQ1tbW
2NgYFERTUxOeTWQyO2TuD11dXWigUeeDHjUBmUNe44wW3r9/D2ri7+8PVwme
d2i6gpjCdQOChXY3cMVY9lMeYwAfwikzaK52yBxqQnMz7d7N3wKGznL+VcWg
HpWxo6ODQCC4urqCxIDDY2pqGh4eDo8Y1C4oLVwKPT09NzLgSYRnzdnZ2cPD
Axmm0szMjM4xxxCg34/FmOeLwJgHY54RF+OHZh4M4w8MrRjwRMfHxxcUFABJ
JiUldXd3AxVDfY6JiUFmr4PKD3U+IyMDlpGRkVD5oWUXHR09oG6jR01AHF+8
eMGgzAcD1MTPz2/MDjfGgMY43HoQTQcHBxJ5Enm4vHDroZ7AHYcakpmZCRUj
Nja2qKgI2aW9vX3AZzvIoayM9vgJoFOw76gXGw1q8vr166ioKOqY+vp6Gxsb
c3NzkBI4cRMTE/DN4IHC4/H29vbgzoFkwMN19+5dqFFI34r79+9DqpOTEwgN
eHr0Hx39fizGPN8IjHkw5qGJccA8GMYfUFUxdHV1aXYuQI+aAJuFhYUxKHOa
AI7t7OwcyyOOGcCdAN4DIVBRUQGKhlsMuuDo6BgaGgqaYmBgALdSW1s7KysL
3JLm5mZozkMS7GVraws+SWFhIawCqUIYh8OBcIDHAhpEyR9UCThz1IuNhq97
HR0dA8bqgToP4gvyARUmPT0dtKO1tbW6uhokGyptU1MTBNra2mAJ1xwKD+qD
jAQEkRUVFcgg8HQC/X7s1wJjnsHAmAdjnsEYB8yDYfwBRRXjA0lXS/d5Fo1v
Z+WvytVU1N72DDluPDUYqiY9PT0EAu1R9xmE6OhoBn3/+u5A1KS3txca5sB+
rq6uiYmJ0LS3tLQEcYHIrq4uTU3N+Ph4uOzPnz9XV1eHBv7Tp0+hXa+vr6+j
owPtegsLC1NTUz0yVFVVB7wrYMQ7pYKCgoyMjLdDz2LAaICMlpSUDIgE7YiM
jNTS0gJJ9fX1hWvV19eHjIED3gjIMWgrpYcIKBEoTlVVFVxhUBZI/apO0OPN
j8WYhxYw5sGYZwDGB/NgGH9AQ8WITYi18LGw9rO+qX5Ty07Lxt9mgOm76F9T
vQbbWPlZBRIDh8/ti2ry558vbt82AB4imyXZKIFPpqBgjti9e+ZmZk7U+yJq
Mioj2NMJ4FWaPanHARA1gUsKItLY2Ih8As7JycnPz09OTi4uLgb2A9KDmFev
XlVWVmaQYWhoaG1tDaqRmZkJFyckJCQ4OBhuSkpKCgiKu7s7dX9eRvzjB7zd
1NT0vUa/geMGBgZS5qakIC0tDdQBlBcuAsgHXFXYEi4UDoeDJ8LOzs7c3Fxb
WxvkGLTGmAy4OLa2tkFBQbCZlZUV/T7YuPFjx5x5sq9eNbt1y45s9mSjBMAc
bt60Rez6dTtjY1cS6R+ewZhnFIExzwgwbpgHw/gDGiqGR5CHf7t/1MeoOFJc
DCkm8mMkGKzCMpoUDQFYxpPiIRD6PtTa13r43L6oJoGBoWvWmO3aFbB1q+uG
DVabNtlt2eIKS8Q2brTeuRO3Y8cn27wZd+qUNrWagI5A/qM1W/QXAYcDOoXn
HQ1jrYw6QE1qa2tpJkGzHUj7HRkgK9HR0aAaEO7o6MjKygLORMIAal4tLy8v
LCyk/mONEWryfb/ugWrQ7LcOAhcaGgpKASJLJBJBoEFNXF1dfXx8EDXx8/Mz
NTWFgI6Ojrq6urOzs7e3t4aGBggxSAyIC3XfjeExbvzYMWaegIBwAQFPcfFE
ERGikJC3sLC/iEgILBETEvIVE4tDTFg4/sgR409vij8DY55RBMY8I8C4YR4M
4w/fq2IA4d++fRtqMrCBf4S/80vnWxa3NIM1Yz/EgqbEf4hX9lIGc8hzeOz+
WMlT6YnPk/tO990q3FxCXIbPGfIcvsUaGhqzaZP13r1B4uIKEhJPhIUvbtyo
JyJyXVT0Jtjy5Zc2bzbdty94z55AaenACxcMqP1YEpmgxkxNQEpmzJgxbdq0
1NTUsTniWGKoQTsBOTk5BgYGXl5empqa0JwPCwuDxj4Qo76+vpaWFrTlYRU4
EOhx+MGIGKEm37G3BXgXw3Ra7+rqam9vJ5H/pUREFgJv374FzYXSQhgCyOc8
UGpk487OTgh0d3dDYPCblqHwQ/ux35F5iERwUH3XrUtZvFhNUFBvwYLby5fb
Cgg8XLhQceFCJX7+u6KiruvXp65bl7hqVdLJkxbUfiwJY57RA8Y8X4vxxDwY
xh/GoGJAiz4yMjL03wBmYCJD/qS8naedX7PfOY1zOqE66oHqz4Kf3TS9ed30
+jXja86FzgYxBmD6UfoQoxWmpW6pHjoslJSUAgMDh9lAVVV7yxa7vXuDt2+3
W7dOQ1T0Bjixa9Yorlv3DNxaCEtLu+3dix/KjwW1Qp7ZMQBQwbZt27i5ucdM
v8YSWVlZBQUFNJOqq6uNjIzgPoKmWFlZAXuDpgSSgcfjQWuePn0KvAqCMkz+
wJnh4eGjXuzvqCavXr0a+4MOxo/ix6KNeVRUdEVE/MFTFRf3ExIyXbjwsYDA
I0FBbWFhc0FB/YULH61ZQ1y3LnkoPxZjntECxjxfi/HEPBjGH8agYnz48AGa
Y+3/RkVFxaFDhywsLBobG31CfDyqPe7a3sXV4tTx6vrR+gqOCoruiqr+qiaJ
Jp9eifg+UcGpqAeoqwWpWeOs24eFm5sbtLWH2cDLK0BKyn7fvpA1a5TXrFES
Ebm2ebP5ypV3Vq68u3Ll7e3b7ffvDwMvd+9egowM4cIFwwF+LJDYgMHSRxEf
P/Z/+NDz/v3f9uHDX9HRxKtXz1NHUpIGFIwCZBRuZPai4dHf39/X19v3ZfTS
k9vXAhl4cEDvVwTZ2dlIR4nezwBhpd4SGvKxsbHD90NB5pcZ9WJ/LzWprKyM
i4sbyz8kh8KP4seijXk8PfHLlwesX5++dKne0qW6AgIPRUXdFy58smiRCizF
xf03bMhaty4VbNWqtJMnLQf4sQxmnndAMhT7+BGYJ+Tq1XPUkZ9tFJjn/ft+
Mqt8wWAboKhRPlWMeb4S44x5MIw/oKFieAR4aIVqqfiq2P1ppx2kfdf67kWt
ixc1L1okWih7KoM99X76xPvJQ6eHupG6Fu4Ww+cGDefhe3QSCBGrVytt2WK8
aZO2lJSelJQuLDdt0kFMUvLZ5s0G27YZb95suGGD4ZkzqgNI+8WLF3l5eaNw
2jTw4fp1k23b7HbutN250w4xGRnHtWsNqWOQsJSUfkICjU9+6enpCgoKDg4O
5ubmyExGQwH48ObNW7dv3711686tW7c/251By9u3b9+5cOGP8vLyUT9huJJE
IhFoH5wKasVvaWlpbm5uJ3+QogZlAwg3NTUhn6gGo7S0FIiXQRPEJyYmggiO
sZq8f/8+ICCAEa2JEeBH8WO/iDFmnuDgyMWLdcXEnERELEVFbUVFbchmjdiy
ZdCatl+1ymnlSoflyx1+/11rgB/LUOa5etVMSspx2zaHbdscEduxw2X1ahPK
6mdz2rDBKCEhbXAW9DNPT8+by5cVLl1S+uMPxT/+ePzZFActH8M28vLXMeZB
gDEPGkgDAwqBhorR+rq1iIx7d+/5+/sXFRaVkAExJaUlYFFRUeBL5eTkFBcV
DzXzMgVf7G0BDeoiOMYno+CfcFhYqJGRYVJSYmkpFKCwurp6wO7AUbm5ud96
zrTRv3+/zcKFBcuW5S5dmrp0abqgYJag4PNly9IhZsmSFHL8p7CQUAEvL9Bw
7OAskBHgkXlVaM4sWVNTAzxMIvuxV65ce/hQ6eFDRWVlFTBFxScPHjx+/PjJ
o0dKT56owRJiIF5FRf38+T8Y8YaBRP4GBzlDUYlUQL7DEofFMBukpKQwQvsQ
wHXr7Oxk3CzqNAGC+7VzODIO48aPHXPm6Sou/sQ8xZBdceG/DWEeA2Cely9L
IGaMmUdOzp6P7+XChSX8/H/y82cLCOQKCOQvXPhi4cLiBQuyYMnPD+GShQtf
zZkTHRISNzgL+pmnp6f71Kn7f/xhAHb1qinYlSvGFy/qXb5sBDHXrpldumQA
YYi/ccPyyJF7GPMgwJgHDaSBAYVAVcUwMDAYMC8kgsrKSk1NTTp7zn77KI7A
FaBfQ/3Gz6B/n8joP3TIZunSnBUrsrm5H/Hx6cybpzx/vuGvvxovXOg8f74B
RPLwPFm0yEtUtJCfP8Td3b+BFkAs8Hi8rq4uXLfBqUpKSjNnzjx37lxaWtrZ
s+d/++2knNzeU6fOnj17QUHhIYRv3borKblOSenJunUbLl68dPTocVVVDQkJ
SYa9C/rBkJmZCdrHuJFCaaJ9rH6MpAfjxo+lAGOe/fvt+fmLli4tmjNHiZtb
n4tLZd48Ux4ei/nzPebNM4FILi61X3/1ExR8xcsb6eYW8C3Mk56e9ttv1/fs
ubJly/EDB24ePnznwgXtrVt/O3NGfeXKrVevGomJbT927L6s7PmbNy1ERTdj
zIMAYx5UkQYG9AA9FeP9+/d6enrQ+huc9F1m1cnKygJN6e7uHhAPWsOIuVrI
+NuPFREp4OFRBfd1/nyjefOURERy+fj0xMRe8fPbQoCf305UtEhAgKipaRQ1
BPz9/XE4HJDe4CTQkcmTJ+/bt49IJMrJ7bl7V0FZWeXgwcNSUlvAjz1x4pSS
0lNZWbk9e/aCT3v+/B/gwYJnC6m5uTSE/j+I+Ph4EOux/LqXnJzMiOnaR4xx
5sdizEPxYwUFX3JxPZs3zxxszpyngoJF3NxGQkI1vLyO8+YZ8/I6L1tWxscX
9eyZ8bcwT2gocefOQ2fPPrt2zWTnztNr1siCH7tv39WrV403bz66devvW7b8
dvToPRGRzWfOqElIyGDMgwBjHvSQBgZUAT0VA21qAqitrQXhoEyxjaCrq4th
A5L3Hzhgu3hxobBwAReXspDQC15eMx4eIz4+qwUL3ObPt4MwF9cTAQGfFSte
8vGFRkQkjuAY5eXlSOfT3t7eU6fOnPhd/sTvp2Rl5H47fuLQwSO7ZeT27zsk
K7P7+LETBw8c3rpl2yn5M/v2Hli/biP2VgTBGPe2aGhoGDBV0HcH5sfSxA/N
PHv3Osyf/2rx4lccHKqLFhXMnWvNxWXOzQ2c483N7czFZTZ7thovb8CSJVVz
58aEhyeN4BgU5unr6z1y+MoeuWt791yT2nRUbvelXTvPbpY6tmP7KalNR2B1
544zayX27N93c/s2eXHxHXl5DPqb4gcDxjzoIQ0MqAJ6KgYK1YRE7tGfmppK
/XoEGZCcMZMDfjh/3mDtWvv16+3WrjVcv95GUtJk3TqLtWsN1q+3XbvWaM0a
DXHxBxs2OGzYYC8urhcTMxI1oaCzs/PEmZMnz5+Sv3j6xHl5+T9O/37u5PEz
vx09dRxWz145D0tYPfXHGQjsPiBXWFg4Wuf5Q2Ms1QSqHxzrO85ESROYH0sT
PzTznD1rtGqVs4SE4+rVJhISDqtXm69ZY7N6tTE5bCouriUq+njtWue1a11E
RY2+kXm6OjuO/H7u4O+XDp28fPD3Pw6fvHLgt4v7jp3be/QMrB47fQOWsHpE
/ipss132EMY8CDDmQQ9pYEAVUFUxNDU1MzMzB8d/RzVBUFdXFx4eXlVVhaz6
+/szaJqb3t6enp42srXTWoJ1kMOtEP7GCQrbWtr08LpRb6PC+8JD3oSE/hUa
3hsOYQgQugjBncGhb0OJb4hhvWERPREmCSaFBZiafEJsbCxUgMGffRkBqPOD
JzT/7hhnfiwJY56/macVIZbPFNRGFW7/668OygajwDxBwDyREX1hxDeEsLdE
CICF/UUkdAcTuoLCgHl6QsJ7QyN7wk0TMeb5GxjzoIo0MKAHDK0Y7969S0pK
QqbOoY7v6uoa3O8SGpupqam1tbWDteC7qwmJPA0Q0AgUEk4qLCwMyj/qhxhj
tDa3WsZaWqZZPgt+FtoT6pDnoEXUAnMuck4kJSaQEhxyHQgdBP1ofVwNziHH
obQELb1Wvy+qq6tLS0vHYCAacCwY1/f5W4B+PxZjHjQDY56RAWMezI/FQBMM
rRjp6ekFBQXZ2dlxcXFAxRADTTxge11d3cjISAgALSN9MGHV09MzJiYmPDzc
xsYGAhkZGTgcDiFtNKgJAigJlBAaxciI3z80QE2s461BLG6Y33jo8tAy3dLn
lY+qv6pjvmMyKTmFlKIWoGYcb6wbrqsTpmOfYx8cFDx45PBh/tZ7966nr6+9
r6/jSwbbdKJhkG06UVVVNTZqAk9BTU0No48yAqDfj8WYB81gNPP09/e8e9dO
n2HMQwPjm3kwjD8wtGL8SUZRUZG7u7uPjw+RSERmpvb29sbj8To6OiArsOrk
5GRsbGxgYKCsrKyvr29nZxcUFOTq6gpJyAcs9KgJifx6xNbWFpSOcYcYG4Ca
2CTY6ETqgIJcN7tummzqV+UHwmGZYWmfbW+XaacXoWccZ6wdqq0Xqedc4Izz
xRGCCVlZWRQira+vhzsF1Jqfnz/gmr9//3bvXhMREb+VK31WrvSlZT6fDbdi
hVleHqMmKhp1jM3Xvbq6OlAThh5ixEC/H4sxD5rBYOb5S07OXFAwSFg4QFg4
kJYFfDa8oKAVxjwDMO6ZB8P4A0MrxocPH9LS0kALgHCAhfr6+nJycvLy8goL
CxMSEgIDAyE1JSWluLgYxAVU4PHjx46OjrAN8jolPj4eaSyjSk0AL1++9PPz
i4iIaGlpYeiBGIq2ljb9YB2DKG1lr4cO+damyQYGsdomifqP3O6ZphgEN/tr
hqja5Vg+I6i4FNqbJBi8LH0J4g53B24cXAESeX4ZdXV1Ly8vIyOjiooK6sz7
+zvBWWVl7WZnf83GVg7Gzt7AxvaKja2CHChjZ28nWxs7excLS3JGBo1eNt+I
7u4uFRUTRUUrRUXLLxlsY9Ta+pqebMegtwVU+6ioKLR1sqAA/X4sxjxoBjCP
AUHbKEbric99xwIrs1R9o3gt02RdRfe75qn6hBacdqiKQ56FZshT1yJb00T9
r2Ke9+87wFn93/8+MDP3TJ7cQLaOyZPrJk9uJAfqmZn7mJl7mZnfMjP3T5yY
xRjm6dbQMFBVNVZVNRre1NSMVVR0MeahE5gfi4EmUFUxgJRoTt0CTKWpqUnn
wzUGatLW1hYZGdnV1RUeHp6ZmfkDfZmiRnd3+5YddzbvNNsiY7Jpu4HUTmOp
nYZSO422yEDAeP1WvS3SJpt2GG2WNpbaYSwmcbuo6O/eFqApoCPBwcFlZWVw
KXp6eszNzQfcuP7+rlWrvMFN5eCoYWHRZ2ExnT7dccYMXxYWo+nTnWbMwHNw
VHBwlM2e3Th7Nji68ZmZz0f9BJua6rdsUZWWxklLe8nIeEtLg3l9Nk8kQI73
lJHBbdyoXl1dSU+2ycnJBAJhdKm+rq6OMqyZp6enra0t8jUcnUC/H/u1wJhn
LPHmTfuqtSpLVvgtE/NessJ9qYjXUhEPsGViEPBaKOQiuBLiPQVXei1Z7v3r
IvWvYp737ztFRf0nT+5lYXk9ebLJ5MnWzMzuzMxBkydbMDN7TJkSNm1a47Rp
9SwsnSwsPczMaYxhnoZ9++6cOmV+6pTJqVOmn+1TWF7ehBz4O3z6tLmc3B2M
eegEqkgDA3qAhooBtAwPckVF2ePHD0NCgiE8wBIT4+7du02eq7Gyvb1t+NzG
QE1ev34dFhaGhIEEQkJCkPkWfyx0d7fu3GG+bl2I1KbILZvj1q/zh+Vmqegt
m+MhLCUVJbnWR3Kt96ZN4ZulYiUk7Chq8nn37vj4eDh3mvN1fvZjW2fPbpox
w2f6dFdWVpM5c96xsppDGCLBuWVlNePkbGWcH9vc3CAjo3XwIEFKSmfzZr01
axTWrLm3cuXVrVuNjhwJ3bLFQFT00tathgcOBB44gN++XTshIb6MDgDbW1tb
5+fn07MxnQA5/t///rdp0yYTE5PAwMAPHz5YWFgM6KOEHowbPxZjnu+CN29e
i4j4zuEs4ZlXzstTxz33BSx55lUhYZ55lXO5MuZypfPMe8Uzr5abO6Ko6F+e
6vDM89mPfcvC0sXMjGdm9pk82YqVlTR5si0zsze4r5Mnm06ebMPC8pZxfmxz
c+OxY48uX3bYv//RgQOPt2//Y/v2i5s2yR86pHztmvOhQ0obN56A8KVLNpcu
2R469BBjHjqBBtLAgEKgoWLY2LhJSSlLS2tt366+c6eGjIyOjIwueakNS4jf
tUtz2zY1aWntLVtUVVRMhs9tDNTkzZs30C6m9Hpub29HXo8w9KCjDvBjd+2y
XLLkkaDg49WrrefPP7Fhg7+g4KOtW2MWL76xYYPf0qUKixZdXbXKSkjoiaSk
/QA/FkFnZ2ckGa2trdTx/f2dYmJ+01nfzGRrnsJsNpXZZtpUL5ap/lOZraZN
9WGZ6jN1iuMUZmN2trqZ7G+ms6Yy1I/dvt10+fJzK1de27hRXVDwd1iKi99c
u/aRsPAZMbHrBw4EgB+7daumn59vMh1wdHQE8o+JiaFnYzqhoaHBxsZ2+PBh
V1dXIyOjlJQUMzOzbxzdiHEYN34sMM+WLYqyss927lSVllbbvVtTTk5r924w
TfLymYyM+o4dT2F127anqqoY84wOwI9dudJvxgzjWbNMuLiI06ff4OF5MWuW
MR9fFTu7+rx5z2fO1GNje8rFRZg1y5KHJ3yAH4tgKOZ5/75jxYqg//1MYp7c
/b+fbSb+7DTpfwGTJoZM/Nlh0v/wYBP/5/6/ny2ZJ7dNmfxx0sTnDPVjjx5V
lZQ8KiUlv2fP3VWr9sJyy5azu3ZdkZQ8IiV1muzH2h08+ABjHjqBBtLAgEKg
oWJYWXns2uV06JC/jIzVoUO43bvtdu40gbCcnIOsrPX+/e4HDnju2+cmK2u7
e7fn06eWg3Ogbj+OgZogRxnQb7SgoAA0ZWwG9xsVkP1Yi5UrLRcvvrV48c0V
KzTXrLHj5T0sKekO4a1b4yQlPVetMt+yJXr5co21awe+j6VGTU1NSEhIbGws
XJP6+npo5pM+vpPaobJ0pYuguMNScTMwQXHbpWIm5IDNUjHyUtxCUNx+2SqX
BcvUMzNH/y818GNlZXUOHQrbvFlfUlJJVPTy2rVKENi1y3bRokPr16uAZ7tm
jcLevT7g6+7cqV9fT1cX3V7yUJujW1RwSCh/PMLFTEtLG+NZ1L8K48aPBebZ
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
6btsWffixbGLF0c/80zm4sURixfHPf10BMS0y5bdnSSOJVCoPAEBwsDA8Kmk
xMRUJQ/FVEDlQeVRdzCORRSifMeA0S7I+HS/ngMDA9nZ2cQNrQ4Oge+9x92+
PXrtWhsNDQtNTetXX72kqUmBzIsvHlu3jv7GG9d27Ur88MOYjRuF1649MI4F
YDQdExMTGhq6b9++3t4ef3/+6tUWW7a4aWkxtbQYkLZscZd9ZMgSU57Wr3f9
4QcTpQ7E1ABVhH0HPQSrhd2H43b37l3VvM4SDg4cmTt37sz1imAtsK4HzW1u
bra0tHR3d79+/TqFQgkPD7ezs2MymTDV0dEBc/n1118DAwOtra1LShS/MhIa
h+hlxpunzJlBKd5tQZo4VnnloVBC/vrXysWLW598MvTxx9mLFvH/+79tFy3i
LVoU8l//pffEE7H/8z/0pUvvPfPM3f/6r4YzZx4Yx0onKI+vr2DpUu9VqyJW
rRL+kcJlSf5RRKTly4WHDtkqdSCmBioPKo+6g3EsohAlO0Z/fz8Mb5XcBg8P
1s6dpnv32m7apL1tm+7evVYffWSwe7fZnj0WH310c/du8w8/NNi0SXfPHsqu
XZbm5pPFsVLZecYPPvjgscceu379Ko8XtXWrx6efCnfu9NHQuKCpeWnjRtPt
2xkaGpcgbd/O/OQT4SefCCDt2hVy6pS9kjtCfkZGRhITEysrK+d0LWlpaQ8y
AqnsVxFzc/PU1FQwnYCAgOjoaBaLBVOILmBB8BoGg5GZmenr6/sgky0sLJzZ
XcOw++Xl5fb29so8PAfdhAxx7KwoD4PBe/NNzzVrglaupL3+Om3NGl8NDSdN
TQ9NTW/ZcwA833qL/sILThoa/m+95Xvz5kOepzdWeTicmJdeilyzJu+tt2Ke
e87w+eeNX3rJ9Y03BM8/bwTpjTfCNDVzNTSyIb3++q2jRxlK7gj5QeVB5VEe
jGMRhSjZMWBor8z9mwSjoyMDA939/d36+tqJibHDw72QHxi419fXRaS8vKyr
Vy+1tNRDfmjoIc/T7u7uFovFenp6J04cNza22bbNC8LUPXu4a9ZcXrdO7803
j0MEu379TU3NXz/+OHjv3tC9e0Mg7dzJO3XqIW91XBiARM+1ocCfgM1mP+iH
kdbW1oe+IT03N/dBi0O0ANYzs0dTQvDj5OQEi3t7e89gcYLY2FjYu6k/s2jh
QYY4draUZ2ioc3Cw8+bNa0lJMSMj9wYHQWG6BgY6BgY6YZqfn3H9+oW7d2sH
BtqHhwcmb22s8ty8af/qq9GamtmrV6e/8IL5iy/aL19+FaLZVascYfrOO8ka
GllEev31zKNHHzI2Xxig8qDyKAnGsYhClOwY8KUWCoXTWqSzszMvLw/ULCsr
C6bE6a2enp6ioqKUlJSqqqqCgoKBgYGxj4yGby7MGtfOVM5S+fpyt251hzh2
375wiF3XrLm6evV5SGvXXn33Xe1PPw2XxbH3086d/NmKY8vKykQi0eQv1pku
ERERs6j/cMwlEsm4BouKizKzMqeUMjOJl79PQnV1dUhISHBwcHp6etafyc7O
vn37dtakgJtAtYnlYWFhXC5XmceJp6WlwV9n7PVv06W2tnbq7ydakJAhjiW5
8nh5hbz0UoSGRo6mZj7Eri+8YPHccwaQXnjBcuVKayjU0LhFpNdfz5qtOBaV
R4rKs6DBOBZRiJIdA1Rl8jfCjAOGtOA+YrHY3d3dz88PNC05OTkgIACGySwW
q6mpCcbCUVFR8H0nxq1gPTk5ORUVFQ0NDeAyNTU1jY2NIDWQ8fX1LS0tBdWC
jw+SF4hjNTSst271gqSl5bZhA23dOpv33rPdsMFBS4sJhVu2eBJp/Xr3H34w
VeZQEISHh8fHx8NG9vyZ4eFh4pXlYJTEFBgaGurt7YW5cFggA2N2yMBHonAs
dXV1MJaH46b8FspPmSUlJcHBhwyY+8jgiKGroXu+u0eRh1eJl2eRp2fxvxIU
/itf4GEWYRYdF/3QFRF3B0OQoOiJlzOkubl58hvDocO0Tgpsz7lz56CnTV6N
QOE9IxDGQCPEg5seTcgQx5Jceby8+M8+679qVcyqVdEvvhj+wguc557ze/75
gOefD37xRREUrloVRaTlyyMPHZqFETQqjxxUnoUKxrGIQpTsGKAYk1xXPxFw
Hxgsw1KgYKBm4AWxsbGgwPDx5s2bkAfXgHErjJqJy+kFAgGMrMF3wGvMzc0t
LCw8PDwsLS05HI6rq+vJkydhjEyhUFr/eLLKOEpKytzdWR4eHEienpC4np48
WYIMhyj/I7GjopTVahgsJyQkTCwHAU9NTS2QAXVgZ8EHwSIzMzOJu5vhsMAx
qa+vn/ykFRiKMpdXSWU3U8MRg8Obnp4ODgWqCIZy/+ncgyNUHjVeGu+Q7GDI
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
daG8vDw/P39gYGC+N2TeWDBxLCoPokag8pBBNBASMisd40EPkJmEoaEhuRr7
h/jzunlx0rgEaUKMNCZiKCJeGg+ZqNEo+UeYFSuNDR8Ndwl2UX6D5YBNSCQS
wkru3LmjsI7cTQYHB3k8HnFnMUxFIlFnZ+csbgyiFjQ0NEBXeZSvVCRPHIvK
gzw6oPJgHIsoZAYdo6KiIi0tDRQYTKSvr4+4VWFQhlSRs0DN7u7urj8D38eX
Xnpp3759kZGR4CYhXSHgJonSREOe4UXn+69ltBXbXvW4esnl0kX6RUYuAwwF
3AScxTHAcXb2XEZPTw+fz4fdeZCVSMe4CTDWdFpaWmJiYh5lVXk0iY2NZbPZ
0KXne0PmjfmKY1F5iDwqz6MJKg/GsYhCZtAxhEKhoaEhaKmZmRmXy6VSqYGB
gQwGQ0dHh06nQ8bPz2+sp/T394eHhwv+DNT5j//4jyeeeEL7uraLr0todyi4
iUQqsYmzOUc7d8bujHOWc8JgAlVCPWpw1DnTGYwG3CRqOErXRjeUH1pSUjIr
uw9uaGJiUldXN0mdsW7S0dERFhYmn9XY2AhuOCtbgqgLeLfFfMWxqDzyWag8
jyCoPBjHIgqZbscYGBhwdHQMCgpisVi2trbOzs5gKJCxsLBgMpmenp7u7u7w
Ebxm8nYGBwdDQkKIE3wsISusLwz8Ik2aZiIwMeQZ6rP0bcQ29HS6ebi5XqCe
Q4qDeFQMFaKl0R6hHvBFlkgksF7iBwriQeIz2PeRkZGIiAgvL6/Jq411k9HR
UXCTtrY2+dzc3NycnJwZrH3qtLa2wp729vZOvBMEUT3oJvMSx6LyoPI84qDy
YByLKGS6HWN4eLiurq6rq6u2thYyTTIKCgpoNBrIe0dHR2NjY0NDQ39//9Tb
DAoJosZRmalM+1h7M67ZTb+b9ES6XaQdJYxiG2FrH2VvJbCyElkxUhn0ZLqr
vyuxVHd3N+h8bGzs7t27qVTqtPZCKrOSxMTE6upqMLXJ35CSkJBQWVkp/1hc
XDzu6TewDXK7mXX6+vrAvk1MTCgUChjfuB9w+vv6mxqaGusbH5qa6pu6ux7d
E1KzCPQ6fMu56htB5UHlecRB5cE4FlHIbHWMtrY20L2ZLZt1K8vFzcWZ6Xzo
u0P6RvpuXm4MdwbDg8H0YMIUkpmV2VeHvqLRaa5urvEJ8WOXDQwMfOyxx/7y
l7+w2ez7n0emlEaG71sJYQEcDmfyXxugGgiI/OPQ0BAsMvbiNMgTTyyf2e4/
FHCQ8vJyMGsmkwn2N3YWJ5RjxjNziHGgiWkOsQ7UaOrYRIujUWN+n9pG2VI9
pu25yERSUlLCw8Mf5V+oyHOflxSVB5XnkQGVB+NYRCFk6Bg+HB+3EjdWA4vd
zGY1soIagiDBR0i/5xtlsxpYvjW+NF/a2GXz8vJA2318fM6dO2fqbOrEdnJk
OzpyHpDY9xPUMaYZl5WVES2ADU3+qwiIeUxMzNiSpKSkioqKsSX9/f0hISFz
+kQUFxcX4tq8kZER+d3KbCE75N79G1WC6oMiBiOSpEkSqYRICdIETgsnRhoD
U7FUDHWcOc5zt3mPDsT7Q+GvMN8bMm+QKo5VBlSeqYDKQxJQecggGggJIUPH
CBQEhnaHxkvjQfSihqIuMy9HD0dDHhJRKE+RI5FMLlNhI1V3qhxTHX9/bI40
KloaHTV6fwqLxEpjIQMJZkGCOjZRNrXVtf0y4uLiioqK+h8MGAeMgseWNDY2
8ng88A55CeTBdEJDQydpR0mamppgJA6ZlpaWtWvXHj58OEmSFBwWzOvgcVu4
JygnDNgGwi5haEcoq54l6BTw7vKMQ4xNQk2sIq3sE+3BTejBdBX/ZRckEokk
LCwMfxUhQyNKgsozFVB5SAIqDxlEAyEhZOgY4Cb8Tj7IHcg+JGO+sWWk5dGb
R39j/kaJoRD3CxMpfCicwWFIZb8M9I+5EG5wcDAlKYWWREuQJkB9U4EpI4dh
LjK3Eductj2t669LlVAhTzQFUwuBhbubO0cGhUKxtbXlPBhXV1cDA4Nxhfr6
+u7u7mNLwF9oNBpxJ/Ukrc0YaJ/I+Pr6/ud//udf/vKXE7+ccPZyDukMCe8L
P213+qrn/YcFnbQ+edzq+AmrE1ZRVh5FHrbxtoE1gfQMOnioto22OFY89lYR
ZAbEx8fjVWokaURJUHmmAioPSUDlIYNoICSEDB0D3CSkK4Q4AxU9En3J9dJV
j6uX3S5fdL543ee6ePR+OZEihiO8Bd6tra0//vhjRkZGV1dXbm5uREREcHAw
05VJT6UTbuKY5hhQHSDsFoKVsBvZF+gXILnnuxOPNIepfbT93Za7xNpzcnIm
f5ZOY2Pj2KvUCEpLS7OysiZWzs/Pn+sXR4J1enh4EGcn2SI2v5vPa+Odp583
izC7ybv5k/lPkNcN1L3EvGQqMjWPNP/F6hfXPFc4vM4c59qaWj6fn5KSMjo6
y+/ZfHTAu4YXUhyLyjN1UHnmF1QeMogGQkLI0DH8+f6+Vb4hbSH8Nj6nmeOU
5nSOdu645XF6Gt0ly4V3lwflROK2cn8z/m3VylWPPfbY8ePHIyMjwQtA7aGR
yopK1yzXZGlymjSNEk0xEZh4FHj8xvwtvD8cLAk+uhe4w1ywEpg6iB2aGn5/
p09BQYFCX5BTW1s77io1qexnGTabPVGToQTUBhaZvcMzGaIokbmfuS3b1tLP
khJIsefZW/pbWgVYWbOsrQKtzL1ls/wtbVg2Nmwbpt/vJ0bv3r3b1NQUEhIy
yTPYkQeBbrJg4lhUnhmDyqN6UHnIIBoICSFDx/AI8LgRfMNcaG4mNDMXmdvF
2+kF6F31vGobZwu+YCYyg3IigSkcPnXY2tr6xIkTZmZmw8PDFRUVAwMD3d3d
5WXlOu46zsnODgkOJlyTa27XTPmm+gH6VpFWMKUmUO3j7J2SnRyTHaGOtot2
a3MrsfbOzs6xDxifiEI3AZKTk+W3bIwFjEYkEqnsJNpQ/9Bg3+Dg/8/edYBF
cfRvv3/yfV9MUQFBUaqoICgo2BAQW9REY2K+NNOMJVETe+8FUHrv7eDo5SgH
3FGO4+hd6V06ioB0kSbc/+dtvFzgwBM4WMm8z+/ZZ3Zmd3Z2d/Z9f7O7M9PT
93KJBXqGBVhJTA7pg0KCpjAYDCDG1w65icAJuGhBQUFITfCQyTiBmGc8QMwz
yUDMgwfSQMAh8FAx/Kn+4d3hWF/Xl51bHzhAIJ2Z7lroSu2kQjiRmYhZDDPG
nfLX4OF+fn43b960tLR0cnLKz8+vrKgETbGxtikqLIL2/svV8nI7G7uysrKK
8oqKhxWQillNdQ37hcaQiXKGYyQ1Ab0IDw9nskZoH8Itra2tdDp9zMMBTSbg
9EFP09PTs7KysPk9EUZHY2MjVIl/8qyg08aPRcwzhUDM86ZAzIMH0kDAIfBQ
MTh7W9AH6JcIl3wqfC46XzxhfsIw0pBrbwsMQNoFBQWxsbG2traFhYVYJJlM
7uv9ixXzWRjl6MClFApllL+2amtroSHMNQnUBLjFw8PD2tqaQCAEBwd3dHRg
SSNpED4BmvLgwYPAwEC4nlNdFryjtLQ0Ozu7503G259mmDZ+LGKeKQdiHt6B
mAcPpIGAQ+ChYgzpNXwn4M41j2sH7hx4+TkvTBfrIsFVTTD4+vqmpqayV4OC
gjhHZYTWa1hYGBbDdZRF0BHYZRRyaGlpiYiI4JoExJKenp6ZmRkfH+/p6eni
4sL5va+kpARSebsGuABcq8rKyoaGhqysrLfilc6UALwX9HUPJ5mME4h5cALE
PLwAMQ8eSAMBh8BDxfCl+FK6KaAaScwkkAztYO3r3tcP6x4+YnTEr9oPG1gb
W0Yzo52CnIbs3tnZyflZaoiaMFnT4gDbP3361N7ePjk5OTw8fMhY4qOrCSAg
IIBrPNbnAgs7OjpC5kMGqU5MTCwvL3/dBcAXQHNzcnJIJFJcXBz7JQ8CG6i3
xbTxYxHz4AqIeUYHYh48kAYCDoGHihFECTIMNLSkWN5yu2UQYGAXZXfq3qkv
fvripsNN2whbC4qFcbDxTeJN8zBz01BTgg/30cj/ym2YmjBZn+FKS0uNjY0j
IyNNTU2HqAMowugT4rAlYziys7NLSkpA0fLz84dnAuISExPz+PHj0cuMT4AK
gwTDeaGBHzmB1GTa+LGIefAJxDxcgZgHD6SBgEPgoWK8ePHiWcez9pZ2rVta
8Yz4Z+3Puru6e3t6nz97DmGwnAc51y5fa3jcAOH+vtf85c5VTerq6hITE7u6
uhoaGgwNDYuKijhTo6OjGxsbmazvcVwHrhlJTfr7+11dXWVkZG7fvj1SeUBo
aDTa20s+cEEoFArwZ319fXFxMVwrfh+xrKwM1D94QgHFHjJB/JgRGxsLGb69
N3T8mDZ+LGIePAMxzxAg5sEDaSDgEPipGAMDA0ZGRlwHVCwvL7979y6P8/Fx
VRNATEzMkydPMFkZkpSZmZmSklJYWGhiYuLh4dHc3Dxkg1HU5MaNGzNmzDh9
+vQoRcIG2OFlXmzc/sPf0tICUrtv375///vfI/2zNyGAzBMSEuBOPZtQ1NbW
RkVFJSUljb+Eubm5ycnJ/+S/+KaNH4sBMQ8TMQ9inrcB+CENBFwBPxXjxYsX
oCb3798fnvTw4UNQk2e8tUNHUpO2tjZssJrhSEtLAxUDobG1tSWTycN3H+Xr
HuDKpStnT58dvVQgiCBYo89lA4zt6upaWVk50gadnZ2trc28WFtbC1zP0YvE
I7q6Otvbn3Z0NFdUFG/Zor5okbiQ0KyiolyIHGbN4xwTBgRrQgh/JNBotPr6
+nFmAhXp6dOnE3V530ZMMz8WMc9rmaerq72jo5EX6+ycsEfj+fPOjo6mzs4/
mUdGRnzu3I+Ki4F5moZYR8dTxDz/BOCHNBBwBfxUDH6rCYBCoRw9ehT0Ykh8
fn5+Tk7OwMAAgUDgOpIhp5pUVVWZE82dAp0cAx1fWpCjQ6DDJcNLf65yGGzj
4OnAHoqnsLBw9E7EPT09kZGRI/3S9uJF/++/X9y//zJmv/xyhWWXWfZnGEs6
cODK//53LCMjc5Rj8YyB337T27LF4uOPLbZtM//0U9stW8yXLbuipqYPMZy2
fbulurpWTEz8eA5GpVLb29sbGhoYDAYsh6SC1mB3B+7USN1AoKpwfroF+e7t
7WW/wYDaNf65O9HXPeTHcsV0ZR54hr780kRJyWfVKi8wZWUfsFWrvFmrnOGX
q8uXm6Wnc7mSb44Xhw4ZbdjgqKHhoK5uv2WLy4YNDtLSWioq5hDDaRs3Oq5Z
Y0CnJ4znYIh53grghzQQcAX8VAx+qwm0ZOXl5WfMmEEkEjnjgZoaGxtDQkJG
aedyqkl2drZ9ln3MQAxtkEYboEUzo8FimDF0Jj16MBoiYQkxUS+iGAMM4xDj
zrZO9r4pKSlDOixzAgqQlZU1UmpfX++RI9ePH7c9ccLm+HGrQ4f0wY4dM4Pw
4cMGhw/rHz1qAkknTlifOmW3b9/11NS0kbJ6Lfr7+xMTEzs7X5b8xx+t1NXj
N2+OA9uyJXHtWpfVq603bYreujUZVmH5KilBWdk7MjL2TY+FjYWO3TK4d8D/
cLtNTU1B+svKykC7oSQREREPHjwgkUgJCQkgFra2tmlpaXAjQKCTk5Nra2vh
0mVkZBQUFNy7d6+8vBwCjx49gh1dXV1pNBrsBalwUk1NTbA65suCAfW2QH4s
V0xX5hkc7Nq0yUNMrF5KqlZSskpcPAtMQqJUUrJaXDyHFS6WkqqDVCmpehER
RnJyxkhZvRaczPPNNw6KijmrV2exLEdBwU9e3kVFJW3NmnxYZS1fJq1Zk7N0
aVhERNybHgsxz1sH/JAGAq6An4oxCW9FCgvzNDRU7eysOQ7aExVFDQsL9vBw
jYyktrZynyeRrSZdXV2hoaGEPEIKM0Wfqn/Z9bJbsdsVtyuMfoZWgJZ7qft1
z+s3fW4a0YwsEiySmcnmFPOWppa+V4AWOjSoW1pagNn6hgFSIf/h8Ri6up4d
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
9YpuiK5xlPENjxuWcZZa/loWsRYQb5tiezfg7imrUwnA5dxQWflw0SJTKakw
KSkyywKkpIKlpIJYAX9WGIsnS0pSFBWN2toaueZDppINogwc0h3s0+1haUo3
vRt01zTaFEpylXj1ptdN+zR7SAKzTbc1JhiPdO4HD5pLShrLyjrIyjotXmwk
I2MgI6MnI2O4dKk9rC5dar1kiYWcnAvEL1gAasK9j0BTU8O2bee3bTPbts2Y
ZUaqqufXrz+7YcNFNbXLamqXNDRufPyxCSR9/LGZpub56mqeXhqM1Gs4Nzd3
6VLdFSu8V6zwWLHCVVZWX17eRlZWT1bWQFHRU07OdNkyKwhA6vLl3ps36/T0
jDgOZF9fH+dnu9cCBB18j+TkZCgDODw0FqDOxMTEeHp6Ojo6xsbGQpj3DEcH
8mO5AjHPGJinouKhvLyugoKfgoIXmLy8OyvgAQF5eSIr7P0qyW/Nmrv8Zp4D
ByzBiZWRAW4hSkmZSUqaSEoaSUmZLlrkzFraszxtd4gXEbnt40Plmklzc72y
8j05OdKyZT6YAXctWgQMBlRmCrZkifWyZX6sJJK8vB4487zcl1GYR0XlmoaG
rYaGtZqa+erV19ev11NRub569Q0NDZu1a7XWrbsHAQ0NKzU1208/vd7d/Y9m
HoTpB/xUDPyrSXd3d9CbDEg+TkBjNicnx9/ff/Rf4+rq6uD6lJWWlbPADpeW
lv4VLnkZLn9YPlK7GLiroqLs4cMSXqyqqmK4rmHoaO+AY5UWv7SS4hI4OlaG
l0dnAUvCjPPL1BDU1z+GUykvL2PZn/u+ivlz+fBhKRY70lg3UMjKygrYjG0c
+Tz881qVsZMe8kjgI6lJb28vKyvsKpVylBaOU4Ktsq8h+MxvPsYPF+Tl5Z06
dQp7RZOYmFhcXDxkA1CZhIQEHoe14RHIj+UKxDxjYx7O54LzCXpl+GWezs5R
mKecs+R/Z56/UQF48hPEPH9RGZz6K+b5c5WdymKeCaCet5d5EKYf8FMx8K8m
UMLQ0FA+ZT4cnZ2dBgYGcDojUTfClCA2NhZuypTPdgS1gkAgLFiwYP/+/VhM
ampqVFQUkUiEJYPB8PDwoNPpUFoKhRIYGAhVF2QlIiICqjGU393dnf0DHoST
k5NhFYQSds/IyPD29iaTybAv10MjP5YrEPMg8BWIefBDGgi4An4qBjwdurq6
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
dnbKcDKKMjKPNdcP1zeiGRELiCR/UlhoWGZmJptIHz9+DHcKqDU/P3/INX/x
ovvrr41VVT3U1Ijq6u5gampunAGIf2Xu69YZ5eXxa6KiCcfkfN179OgRqAlf
DzFm4N+PRcyDZ/CZeZ7v2mW7dGm4nBxFTo7KzSivLFxW1hkxzxBMe+ZBmH7g
a8UYGBhITU0FLQDCARbq7e3NycnJy8srLCyMj48PDg6G1OTk5OLiYhAXUIFr
1665uLjANtjrlLi4OKyxjCs1AZSVlQUEBERFRTU1NfH1QHxFS1OLSZi+WYzu
Lb9LroW21ilGZnF6lkmG173OW6cYhz0l6YffIeTZ6FFvuRc7WiYYl5WWgbjD
3YEbB1eAyZpfRkdHx8fHx8zMrLKykjPz/v52dXU3SclaGZmHUlLZYIsWFUtJ
PWAFiqSksmRkqmRkKmVkKmRkahYuDM/I4NLLZpzo7Oy4fdvy2jW7a9dsR7fr
1+2uXzdrbn7KS7aT0NsCqn10dPT/s/cecE1d//+/34/9fPrvEqwKah11b2vV
j7bu0e2qtlardfTzqbWtrbZq6wZBkB1GWAHC3oGQACFhEyDsvYcgGxkyZQUw
/7e5H/OjEBEEwgXfT87jPs4999xzByev9+skd5DtJgsJ5PexqDxk5ony+Gjr
B2squ121yTQ3jtLTD9OkRurecLpsDMpT46npp0JPM9Xg3HbItqJGUAalPF1d
DeBRJ0wQiVOjOAknTKh/mml4uohIWXFxw688jx41Xb9u8ccfDn/8Yfe85HD5
sjkqzwBBH4tIhVQdA0RJ6kujQKk0NDQG+OGSQTSpq6sLDAxsamry9/ePj48f
Q79M9eTRo7q1G9QXLvdZstprwXLGwhXMhSs9Fq7wWLyaCfl5S1wXr4Jyz0Wr
PBcs95ozX1Ny1zDEFIgjPj4+BQUFcCpaWlpMTEx6/eM6O5u2b7ebP//+okWZ
iopq06drz5xpPGuW7fTpGjNnms6e7bxoUerChcmLF+cuXlwwZ45vQkLSsB9g
VVXFrl13PvuM+dln7p99xhAn96fJ7WkGCt0+/5y5bZt6SUnRQJoVCAS+vr7D
K/Xl5eWSx5q5uLhYWloSv4aTE/L72MGCyiNLHj2q37Tt5vsfOK3fbL9mo/X7
H9q9/4ENpHWbIWO7er3luk3272+0XbvJds1Gu6WrlAalPF1djStX+oBHfeWV
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
P3bM8ttv/7Nx448ffngJjOu2bWc+/PDyrl1nN206/N571z7+2O677+y/+071
888TRuDdmhWlFUahRpGiSL6I79Pkoxui61zkbBJrouKlAnnfJl8oDxOFQYI6
ptGm9/LvDaRZjCbjxsei8pCH4VIeobDp008NN26M2rgxeN68qwsW3Fq6VG/x
Yo0FC24uXUqB2XfeObt8ufGHH0Zu2iRYudImPv7Fr8x/Fqg8IwQZRAMhIWTo
GCkpKXRruiXd8uixo6pqqta21jb2NnaOdk8ydjaQtPW0vzn6jam5KVQTCASw
CsQLGKT3baq2thaEWjYXfUVFhdXWvvgT9hITE8nzbJz6+vr4+HgOhwMhMjAw
sLS0dIg/OAo7OzWuXdM8d07j11/Vz51TF2fUfvmFyCifPXvx1Cmt336DvOav
v944cyYvN3e4jkVCfV29lqWWqZepsZexCcuExqGZeZuZ+5rT/emQhxIoJxLU
0bDQeFD54PmN4l3D48jHjlHliY4Offiw/IVXH9/K09XV8ccf+idOmJ48aXzi
BPXECaOTJ01OnDCEPGSOH9f55psbp06ZQf7kSdNvv9XIzc0brmORgMozQpBB
NBASQoaO4eTlZJVh5VrkyihjeFZ6elR4eD7wZJQzXItd3cvc3UrdPCo93Erc
oIJjoSOFTtHS1FqwYMHatWvLysrKewDxxcPD4+HDh8O+h7GxSWfP0s+dczp3
zvHcOZdz55whff21/qlTFkRenJ4s/flnJ2Nj94G02d7eDnurpKTE5XJhoD2Q
3/ggSvL5kX5+wQNJHE4g8VjLfnagpKQkMjLS09MT4gjE9KqqKmJRamqqi4tL
r9soGhsbJbcYgJZC0Hn+DotT38KeS0c28HeLuoXdvVJZSVmXsKtXoWjAv9Nm
Z2cnJCQQ93e8nIwbHzsmlOfMGduffnKB9PPPbuLkeuiQ4Xff0SEjTm7E0h9/
dKFSGQP5PL2Q8nSHhkZ5e/N9fJ6fvL1D6utHWXmefPKlp8d/Xzpi8oPKMwKQ
QTQQEjJaHUMoFIKOEUNLBpfh+8hXIBIwq5hUAdUy2ZISQrHLtgvuCob44l3n
TUugEa9fCRYFm7maqd1Re/fdd1esWMHn88N7ABrY983jQ0EgEBBW0NU14I03
whUVCxQV86dNi542LWbatMTp01MUFGIVFGCaBCUKChnTp+fLy987eJDevzw2
NzcTmYqKivT0dDgKUHWp994StLa2Et/zCIVtn312c/Nm661bLSFt20bfutVq
2zZrSNu324iTHUzFi6zXrFGW+pNZXV0diCGEDzabHRISUlRU1Pf9OImJiXDs
PB6PyWQ6OTmZmZnBP4tKpRoaGkZERFhbW8OK5Hxx4UBgMBhDeRJRbW1tZWUl
yW+QGVHGtI8dW8rj4hIwcWKcnFy5nFzpW28lvfVWyqRJmfLyOZMmpU6alD1p
Upa45J6cXNmrr5bt328n6tcVvbDydHc/WrmS9s9/Zr72WrI4pb32Wsprr6W/
9lrGa69BYebrr2eLM7Ao/ZVXGHFxUh5mhcqDyjNE0MciUpFBx4DPXWFh4b2/
A4I2adIkCAoG+gYOTAeIJtxmriZH0zbN9rb7beJd2IZ8w9uM29o8bRUPFecC
Z4gmAZ0B+nb65eXlEDhAE0CES3tQXFxcUFBwb5jIycmZM2fOjBkzVFRuW1l5
KCrGzJtXNH9+yZQpagoKBlOnqk+fbq+oaKGgYDhtmq6Cgvm772bMm3d/5sz7
R47YCYUdwmdz9OjRQ4cOgVbDDoM+u7q6wrFAHHxWfTqdvmnTJhDz8vKiw4f1
9+zh7dvH2b+f+/HHDnv3+uzcabFjh9nmzbqbN2tv2KC0ZYseLNq/n7d9u2lS
UjLxL4BG4MxAwPXw8PD29k5OTpb6inYJmZmZxNs29fX1NTU1YUWIILDDVlZW
xAvlr169CiX9/4oKm4iOjg4YViDG9XyC0IvxYrfJSMBf98aKjx0HymNp6Skn
lzJjxoOZM6vl5LTk5U3k5LTfftt18mQbeXlTeXnDyZOtp0+/N2NG5eTJlV9/
7SgUto+E8lRWFm7YwJSTa5kypX7q1MbJk7OnTKmVl4+Xl4+Wk+PJyfm99Zaz
nFzAlCmNU6Y0T5oUlZiYQvwLUHl6gsozRNDHIlKRQccAKYuNjY36O1wuV1FR
EUTSwcHBxt2G08LxbfCFIMJr4JnHmxuGG9pl21EjqHd97tpn2Z9SPsWuZfNF
/ODHwdd1r6upqrFYLAgoIFZRIwYM/4nfEM2f4PbUx5ZPm0ZRVLScMcN5zpy4
mTMZiopWkyf/9e67OWBx580rnD27ZMcObS8vptezWbJkyYQJEz7//HMLC4t4
8f1NSkpKIHHPqn/mzBmoP2/ePDqdduSIwRdf+IF93bfPb+XKn7dtM9q2jbpi
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
3R0ZGXn//v0R3UpcXNyzAoFI/K2ItrZ2bGwsBB03N7fg4GAPDw+YgruAFSHW
0On0xMREZ2fnZwXZ7OzsF7trGA6/oKCASqUO5eE5GE3I4GOHRXncHR3/OnJE
6dSpc/v2nT906MbJkxePHLly/Pj17767dPTo1e++++Pw4V/37bt54sS1Y8fM
9PX7b02iPDduXPP0DFNQiF2woHTu3HgFBYqCgv7Mma5z5oRDBtKcORELFpTM
n38f0syZ90+ccBjigZAfVB5UnqGDPhaRyhA7Bgzth3L/JsHjx90dHU2QVFVv
CAShXV2tHR3NQmFze3tje3sTTDMyEq9fv1RbWw75zs6O/ltrbm7m8/nKyso/
//yzlpbe6dPqv/1mcu6c4Wef/Wffvp+2b/8GHOyBA7+Cp/3pJwo42F9/pUI6
e9bgZfCxIvFTZUY6oMC/gMlkPuuLkdra2ue+IT0tLe1Zq4NbgNDzYo+mBPNj
bm4Oqzs6Or7A6gShoaFwdAN/ZtH4gww+dliUp/vx45a2tkdtbbeUlfkREe1C
Icy2tLc3t7Q8am2FaUpa2l9Xr1ZWV0Ne+LwrYCXK88svP6mqmsycGQ82dd68
PEVF6vTp9KlTVcDBzphhr6BgMG9e5vz5BUSaObPgxAn7IR7ImACVB5VniKCP
RaQyxI4BH2oulzuoVRobG9PT00HNkpKSYEr8vNXS0pKTkxMTE1NcXJyVldXR
0dHzkdHwyYVFvdoZyK9Ubm6eJ06onj9vcuGCOXjXzz//70cfnYAEmT17fvz9
d3Piy9jh/T723r17PB6vn7fqvAABAQHDqP9wzgUCQa8Gc3JzEpMSB5QSE4mX
v/dDSUmJj4+Pp6dnfHx80t9JSUnJyMhI6heIJlCtb7mfnx+LxRrK48Tj4uLg
v9Pz+rfBUlZWNvD3E41LyOBjSa489vYcRcWY+fOLFiwomzHDTlHRZNo0XUiK
iqaKihZQOH9+IZFmziwcLh+LyiNC5RnXoI9FpDLEjgGq0v8bYXoBQ1qIPnw+
39bW1sXFBTQtOjrazc0NhskeHh5VVVUwFg4KCoLPOzFuhdCTmppaWFhYWVkJ
Uaa0tPTBgwcgNZBxdnbOz88H1YLZZ8kL+Nj9+y+ePKkG6fhxlW++uXbo0OWv
vvrz8OGrx4/fhsITJ+4Q6ejR2xcu3BrKqSDw9/cPDw+HnWz5O11dXcQryyFQ
ElOgs7OztbUVlsJpgQyM2SEDs0RhT8rLy2EsD+dt6Hso+cksKioKTj5kILh3
C7vVrNRsM23tcuwc8hzsc+ztc/9fgsL/l8+y0wrQCn76TPh+IO4OBpOQOXxU
V1f3f2M4dJjafoH9+f3336Gn9V+NQOo9I2BjoBHiwU0vJ2TwsSRXHnt739df
91NQSFRQSJg2LXrKlKC33/Z9+22/KVMCpk2LgkIFhXgiTZoUf/iw+VBOBQEq
jwRUnvEK+lhEKkPsGKAY/VxX3xeIPjBYhrVAwUDNIBaEhoaCAsPsnTt3IA9R
A8atMGomLqfncDgwsoa4A7FGW1tbR0fHzs5OV1fXy8vLysrq3LlzMEamUCi1
T5+s0gsINw4Ors7ODCcnd5g6O3tAS5AgQxQ6OTGeJvfg4NChnAqR+CUyERER
fctBwGNjY7PEQB04WNgxCJGJiYnE3c1wWuCcVFRU9P+jFQSUoVxeJRLfTA1n
DE5vfHw8RChQRQgoT57OLew2ZhuHi8JNok3U2GqO+Y7q3up3fe9SI6laPC16
Kl0vSI+WSNPmaYd2hrqVuYVGhA5lN0aCmpoaXzH+/QLmh8lk9l9HAtEgtNxz
Q9BLofvhVWqj2wjJlScv756FBdvKylecOFZWflZWXHHyE8/6SpKlpW9AgBTR
GBSoPKMIKo/MQB+LSGWIHQOGjWFhYQOv393dnZSUBJ/QhIQES0vLoKAgCB9O
Tk4w4E1JSYHgkpycrKenB3UcHR1BhNPS0kCfIabAKlACOuDq6gphBXSVTqc7
OzuDSltbW8OKQzmK4YLL5Ur9fgYOxMzMzMHBgUajgYyz2WyIj1ACSk481Nre
3h4iS25uLhydn59feHi41PaJ37yGsocQjNTU1CB8QFx2c3ODEtiosbHx467H
pr6mNtk21unWegF6mn6aED4sEi3OaJzxLPcMagm6zbh9wfjCVdur7Cq2S7EL
2aIJWBp3d/dBGZuBtwwnqufXI3i3BRl8LCpPT1B5RgtUHlmCPhaRytCvUgP1
G66dAYFNT0/vW15cXGxoaEi85Lq5uRmiz3BtcXiBYNfe3i51kYWFBcQLInpC
/AXpo1AodXV1IObZ2dlUKtXc3DwrK+vGjRsQOqOioqQ2AqGKx+MNcSdra2tb
Wlp0dXUhTBOxDHa7W9gN0YRRzjCJNtHgaBhHGVNCKNcdrl+kXTSPM/er8dPk
aP6s9/Nd77teD7zcy93JFk1CQkLy8/PhfD4QAyVCobDni2+I/0tnZ+ez3oYD
FYi3dvYqhzhSVlYmeT+7CKMJOXwsKk9PUHlGC1QeWYI+FpGK1I7RMWCqqqpY
LNbA6/dzbU9XVxcM1RMSEvouunfvHozlyf/59fLyIkKeqMfFYCLxd0Gurq5w
gAEBARBQuFyuv78/n8+H+hUVFRkZGVAOeuXj4wPV2Gx2amqq1PYbGhqGJXZX
V1d7enpK9hN2pruzW42u5pzvrO6rruyhbBhheMXuihZP6y7nLsyqMlVVGCqn
VU/fcL7hmOuoE6ITFBY09N0YLuAQfH19idsowGloaWmB/oMDgbBSJQYyOTk5
cHohXhcWFhI/oUI5ZOD/Bf4EQklsbKyDg0NpaSnElODgYPi/QDlEXktLSwji
PW8pwqeRj5yPReV5MVB5RgVUHhmDPhaRSs+OAXIXHR09qLtZGQwGnU4feH0Y
gMMHv7y8vO+ewNZhqJ6YmNh3EUQTdXV18n9+JdEEjgUUrEN8Y4UkrIBGpaen
P+trEzi6zMxMyWNhusUQmS4xouGLJr0gGk9NSxXECGITYuMS46LhLykuJiEG
ZmMTnyQoFEQLIBMVEwWZody3O+zAGfb29s7Pz4fTKxAIjI2NISjb2NiYm5vT
aDSYWllZ2draUigUCChGRkbQzeBsu7m5QdyxsLC4ceMGlUp1cXExMTGB+pqa
mrAKNKKiogLtmJqaQvsQfCX/R+iiEPolr/h5CRl2H4vKM0RQeUYFVB4Zgz4W
kYqkY4BqwVgvLS1tpB/rAUNRiCkFBQW9ysdHNOns7IRxN2gRiJWzs7O2tjYc
FIgPqFZQUBBIHGSgHKIwZCDiGBgYBAQE2IiBET2sCNEW8lBubW0NMgiFMAuR
SCT+pYnD4Yz2UZIO0HkWi1VbW+vu7g7RNjIyEjqYvb29oaEhBAg+n68nBk47
BAUNDQ0480VFRVATQgyED6gGQRwCh46Ojq4YWBdqwn8Tog/8I6DjQV4STZqb
myGsP+tXwpeB4fWxqDxDB5VnVEDlkTHoYxGpSDpGXl5ebOzfXvMNg/rU1NTK
ysq+a8HQvqysbOBbId6EKJmFwNHz4ykpHAfRBI4iISEBhtsQCG7dugWhAcQK
BtqQhynoFSwCgVJSUoLxe1tbGyx1cHCAo4NyqAzDc5A4R0dHKI+Ojr58+XJ4
eDjkiWdfV1VVQUga7aMkHdCRiBc+wvkkno0j+REZ4ktxcTH8U6DHEm/hJCpA
b8/IyJC00NLSAgGiUwzUJK5wI76Pam1tJdqXdFf4j0CUIX9vHDmG18ei8gwd
VJ5RAZVHxqCPRaQi6Rj+/v49f7KBzw6M1kHQ4IOTnp4OsSMzM7O8vBwyycnJ
MKiE0fr9+/cLCgrgg0lcDgQfW/iElpSUwKBSJH4edWlpKawFY3kPDw8Yq/bc
rre3d6/fR8ZBNIHTVVhYCMoPJwoOn06nw6A7KysLZqGcePpNdnY2nChLS0sI
GXAyIbKAjkHIhpMJ1WAK+UdiQM3y8/OhTYg7RPvx8fFwPkf3GEkI8etbr0Lo
bywWC5Tf1dWVw+FABk41dHI4hzAbFxdnbm4OGWdnZ+icxHWD/TxXv+eve3i3
xfD6WFSeoYPKMyqg8sgY9LGIVCQdA4bkPR8eAlLGYDBE4k8lfJRg5H737l19
fX1ra2sYucPnFJT/r7/+Ikb0xsbGFy9etLCw0NbWBgmFOjCu1NDQgOE8lOjp
6YFy9oomfD6/12txxkE0gT2EkyZ54wyMzZ/1DkEYvxOH86znT0qQPHelpqYm
NDRUcjcHIgF0ns1m97qRJygoCEI29EYdHR0QfzA/YHLu3LlDoVAgiFhZWTGZ
TFgKsQY6NnTjq1evQn2p71WHz0XPH1Uxmgyvj0XlGTqoPKMCKo+MQR+LSEXS
MeDz0usdIqDh8ImDYTjEjuDgYPjEwaydnZ2RkVFERISJiQnxbGcXFxd3d3f4
YMbExEDUADmFzxqEBviAwzgURp22trbwQQ4JCenZOEST4uLiniXjIJqIxD/A
wZmEgTYof7iYMGkQi+AkwJmUWqFnTZh6eXnxeDwMJc8iPj4+KyurZwmXy4We
CYVJSUlxcXFlZWXp6enZ2dkVFRXR0dHQqwUCAXRR6IRRUVGpqangpvLz86U2
Do1A+5JZjCbD62NReYYFVJ5RAZVHlqCPRaTSTzSRSmFhoaGhIfGS6PLychjU
P+s22L7AJogbVEXjN5oQwLHAySkdPjCO9E93dzdE8LS0tJKSEuJis+Tk5J5v
IOr7dQeEFajcq7zz79TU1KSkpEC46XlvBQR38FdjqDcOOyPtY6WCyjMQUHlk
DCqPLEEfi0jlWb/uNTc3u7u7QyHxlYirqysMzEHtYaQJ400nJyc3Nzd9fX3i
gTYQJmAW6oDo+fv7w5jR0dERCom7L/38/GA2MDBQT0/PzMyMiBcwtBx/v+4h
owt0npCQEOI5S9B1oR/28yAmNpvdfwXim6ie34cQ1NXVVVVVSXzRS8iIXleA
yoOMOVB5ZAP6WEQqPe+26HnFFIwZYZgJsQA+dEZGRhcuXAA9hxBAo9EoFIqq
quqNGzfs7OzgE3fz5k2IF6amptra2gUFBRCDYNh47dq1K1euaGlpQSPQ8rlz
56ARiD4XL14kXhkDn9NeTwLEaIIgY4Jhv88LlQdBkOeCPhaRSj9PvykqKqqv
r8/JyWlqaoqOjoZwQDx9MSEhITc3NyMjo7CwEDJQATJQGfJQEwaMEJUgD9Vq
ampKS0uhkfT09Pz8/KSkJKhJPKKEeFxJTzCaIMiYYKSfu4XKgyBIX9DHIlLp
9TRykP2ej1vsSXV19bMWDQqINWFhYcSrqHuC0QRBxgQj8R4EVB4EQfoHfSwi
lV5vh4yLiyOuTOt7xY63tzeEm/6v6nku0DKHw6mqquq7JxhNEGRMMBLvpUXl
QRCkf9DHIlKR2jE6Ozs7RoZ+rlHHaIIgY4Jh97ESUHkQBHkW6GMRqZCnY2A0
QZAxwcj52FEBlQdBxgTkEQ2EVJCnY2A0QZAxAfpYBEFkD3lEAyEV5OkYGE0Q
ZEyAPhZBENlDHtFASAV5OgZGEwQZE6CPRRBE9pBHNBBSQZ6OAdFER0dHajTJ
y8tTVlZubm6W/V4hCNKL8edjUXkQhPyQRzQQUkGejgHRhEKhJCUl9V1UX18f
FRUlFAplv1cIgvRi/PlYVB4EIT/kEQ2EVJCqY9TV1bW3t4/2XiAI0h/jzMeK
UHkQZCxAKtFAyAN2DARBBsX487EIgpAfFA1EKr06RmpqqqenZ3t7e2BgYElJ
SWRkZG1tbUREREhISFhYGFS4f/9+WlpafHy8q6trZmZmUlISl8stKytzd3eH
6SgdBIIgsmMkfCwqD4Ig/YM+FpFKr47h7e3N5/MhlNy9e1dJScnDw4NCobDZ
7La2Nlj08OFDdXV1gUDAYrEgjsCUx+PBUiiB4AJrjdZRIAgiM0bCx6LyIAjS
P+hjEan06hgcDgdihJWVFUSTW7duubu702g0iCNMJhPy1dXVTk5ONjY2EERS
UlLMzc1jY2MdHBzKysr09PRKSkpG6ygQBJEZI+FjUXkQBOkf9LGIVHp1jIcP
H0KAgExlZWVpaWl8fHxSUlJwcHBMTExWVpZI/EDF8vJymAoEguLi4sbGxtzc
XIgydXV1DQ0Nkh/4Kioqnrvptra2ETggBEFGlpHwsag8CIL0D/pYRCq9OkZy
cnJeXl5mZmZISAjEiPT0dCsrq6CgIIgyEC8KCgpaW1uhPC4uDkIMhJuioqKS
kpKqqqqurq60tDQ2mw2NQEyxtLSEdurr6wsLC6Ha/fv3oY6XlxcEIGgEYk1K
SgqEpCoxUGGUjh5BkEEzEj4WlQdBkP5BH4tIpe9VajExMQwGIzs7OzIyEnRe
XV29vb3d399fVVXVwMBAX1//4sWLUE1XV9fZ2fnu3btQqKKiAsGlsrISokxN
Tc21a9du3rzp7u5uZGTk4+MDU2Nj49u3b9NoNDs7O1iXSqXa2tpev34dVoR2
PD09R+vwEQQZLCN0fSwqD4Ig/YA+FpFKr44RISYgIEAgENy7dy85OZnNZnt4
eISFhWlqapqamtLpdAgigYGBEBcgjmhoaDCZTCcnJy8vr7y8PAsLCwgWJiYm
ED4gjnC5XJi6uLhAg4aGhq6urjweDypAoCHiEQQpCCuwrdE6fARBBstI+FhU
HgRB+gd9LCKVY8eO9SppamqCaU1NzWjsDoIgZKevaAxLI6g8CIL0w7AoDzL+
mDNnzpEeHD16FLoKZGAK+SMIgiB/B0QDlQdBEBkzLMqDIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIMj4YNKkSZ999tkRBEGQgTFnzpzR1i0EQRAEeQKY2NHe
BQRBxhLHjh0b7V1AEARBkCd8++23o70LCIKMJY4cOTLau4AgCIIgT8CQhCDI
oEDRQBAEQUgChiQEQQYFigaCIAhCEjAkIQgyKFA0EARBEJKAIQlBkEGBooEg
CIKQBAxJCIIMChQNBEEQhCRgSEIQZFCgaCAIgiAkAUMSgiCDAkUDQRAEIQkY
khAEGRQoGgiCIAhJwJCEIMigQNFAEARBSAKGJARBBgWKBoIgCEISMCQhCDIo
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
OyGOq57ZZrpobNy4MT8/X5kSlPHY7u7up59++r///e9cqohAIBCI5QHyWGVQ
3mOxoRMUU+B2LBaLmUwmlNDU1IQlYm/YxkbHeIm8GH5MnDAuPjHex8/nys0r
5ADyiVMnYMrlceUhhhcTFRsFSqPa7VoS+vq+FxVnJpZlPDIIS9Nz7pU+clg0
jJ6eHjhPrK2tw8PDsaeG3t7uU6fc//lP2r/+RfvnP/3/9a+Ah8EfZuUpsjjt
xAm3trZWZVYEqgmHuL+/fz47YSbKysrgqaeqqsrPz49KpXp7ezc0NJw7d25i
eDjcMNNF4+9///snn3yiTAnKeCxW4MqVK1UyegUCgUAgfpEgj1UG5T12fHyc
xWJN2ylTZWUl9jlYcXHxtWvXgoKCxkfGzenmrBYWq4sV3hYe2R3JbGNCiPk+
JqI9IrQpFAKjhRHRERHRHGHLs83Ozla+zuB1IyMjWBx2SGlp6ZzVCzZKsVN6
MKs5NNyVl1Bec//5inVqPSsmQu+vnuj+tVrvk2o9T6p1T8xOTLtX/JDb8+T7
mf+QKtfBVWNjI2yjq6sr7FhM+Lu7m42MaJqatRoaWZqaRRs3Jm/cKN6wIUFD
4y7MamoWQ3zDhnhNzXxNzRpt7eCaGqU2Cs5D2LcL9L/+zMxM0Ne0tDQ4i+Dx
B86WsLAw8D0vLy/8tC6Y6aIBBm5sbPzZZ5/BiTp7u1YlPTYyMhIWgz0w97oi
EAgE4hcN8lhlUN5jgdTU1Fk0D+qWmJioJoPoQfQWeke2R96JvEMtpjrwHBKl
icwWpk2MjV+pX7I0WSKVcHo5kM4b5FGLqOnp6d8rja2t7b59+xwcHKqrq11c
XKKjo52cnLq6urDcwcFB8CL5whCHlJmyBgYGjhw58sEHH4CH5+Xlubm50el0
EC3lKwP8+c9/fuedd8IZ4QVlFS+0rlGTqkH4Tf+zuoU7tqYdfGL8iWd7X9Ap
2q5VsnV140YsF8L7BZ9836VU+fDs0NLSAtsoFAq3bNly5swZsZhvbBxsaFiv
pRW2caPzhg32GzY4rV9/W1s7HOL6+mnq6lbr1t2CiKFh3ZYt4Y2NdcocXzgK
cXFxqu13Cx4xTp48CcIGBwgkMCAggMfjYe8h4bSHTevr68PPF0+zXDTgQBgY
GMC5PXvHHUp6bG9vLyz2z3/+c44VRSAQCMQvHeSxyvBYHtva2jr1Bg1bB35b
UlIC2wJFXb169fLly1cuXbFh2rA72acIp26F3jIJMuGP8C3YFmG1Yb55vqJR
kZPAiZxHJmYRvbO9/cv8HR0dI5Tms88+AwfYu3evj49PYGAg1AGmTCYTyxWL
xe3t7fKFoc4SiQSLQwRm5VmwGCy8bt26X/3qV19++SWDwSgtLQW5hU1QvjKA
kZER1OcvH/0lMjZ+dccGTFO1i7eByj7b8+KW9APaJVt3JL+6M/nV57tWyj32
aMqf2GGRSq4iPDw8KCjI2toaVqSurn7lyvnt22lGRvW6uvwNG2zXrbsOQrtm
zVlt7cjVq7/S0mLo6YkhvnlzrZFRja6uG4VCilYCGxsbExMTWJcyCytJcHAw
9mjzySefmJub19fX+/r6zjKc8dIy00UDTpX33nvvwIED4OGzv/xX0mNB7GEx
Mpk897oiEAgE4hcN8lhlqK6ufqzvpkEXJ6XALd7S0hLuyGBZISEh2Nu80aFR
j3gPVgfrjMcZbjf3Bv1GeHO4SaBJZFskKZdETCNe8LlgH28PZstsZPqV+BUW
Fipfh8zMTIFAgK0IvIJEItFoNOV/PgkwCuz7tebmZmdnZzc3t6Kioscqgc1m
Yx8BVTc0Pd+8GtPU1U0bNMqNNlTp7Uo6cijqPf1c482Z+5/vXCX32A+LPpM+
5r/Tm5qa4Bzo6Ojo7+/ctSvE0LBFUzNCQ4OuoRG8cSNJWzt20yaKpiZDXd1B
UzN80yb/zZsbDA3rDQ1Di4vz+5QgLi4OjiDsB2UWVhLwuuPHj/v7+7e1tTk5
OYHHent7/+w89sMPP3zjjTeUGelMSY+FAp977rnl3FUvAoFAIGYHeawygBrx
+Xzll4eF5Z90yWlpaRkcHPTw8MD+Iw8pvV29VqFWvgW+ZpFmjGbGGeKZGyE3
XNNcb4bdDKwNZDQwYNZB6PA/1/+RC8mOYsfHah87CRV+8D4+Pg5qIRQKwRW7
u7sf9+fl1XXPVq5W61ObCP1qz9Wu+VXHUytan32pYuMz91dNNJSFgOX2qb2X
9al0rl/5dHQ0GRvbGhqywVEhGBlFyCJh2KyhYcjDdIahIWvrVvv792uUKRYb
w2KBvvMCQF/hqYFCoZSVlS3QKubJtBeNrq6uX/3qV0r+20IZj4Wz66mnnvri
iy/mWEsEAoFALAOQxyoDmNvUV6yzUF1dnZycPDV9aGjI19dX3rQSNpmbwI1O
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
p735pmdv74/fu42Pj4MpwTGCOIfPieiKSJYmi6XiFGkKo5Fx1uuss9j5AunC
8VvHr9GuSaQSyIIgkop82D6Klamvrwfdwjbqq6+o2tpWRkaWRkZ3jIys9PSu
b93qrKd3BeI7d/rt3Endts1t+3ZPIyMbdfWzYWE/Gd40KSkJe1HZ29t+6BDp
wIH8gwezDh68e+hQjq7ulS1bnHV1rxkZ2WtofLl7d9ihQ7my3PyXX/ZraJhx
lGFFYI+B3MoHycKOiFT2iZaODmfz5rrNm6s2b65QV7fauNFl0ybv9evvbNlS
r6Hhr60duWXLRK6Bwf1XXw0YG/vJ+QwGjr3tr6ysdHZ2hkeVmUYlHhwcDAwM
nDRGBqivh4eHu7t7WlqatbX1uXPnXFxcvL29vby8qFQqFO7m5qaq/hzwc9FA
IBAIxDIHP7ck/Hss+AOTyVyIkqeFRCKBOWN9exYWFnZ0dMhbSMoZHR694XzD
PMzcOdH5GvXaVepVq0grh3gHkwATV5GrWZiZS6ILpHumet4Jv/Od23disMjp
qKqq3L//5sGDvgcPekM4cMDz4EHiwYNeEDlwwB1LfJjl+/rrJl1dbdOWw+ay
beNtvTO8iRlEmDryHe9E3HHkOUJNrvlduxl4k5hOhCwInhmeDmSHmbb9yy8J
mzdbGhu7Ghu779hxZ/t2823bTLdvt9i92xlmd+0iyEzbE9L19C6GhEz/dVJ7
e/PBg6Z79gTs3UuVBQqUICsHCrSGsHMnYe9eP1lWwJ49ZnV11cocl5n6K8jP
z9fVdTQ0ZBkahhsahujoOOvrU3R0nHR0XAwNmbq6nnp6JIhArr4++7XXbIeG
ZuyBdnh4WLHBwCOBRwl46pFIJFAHeNRKkAHnjEAgoNPpPj4+iYmJEFe+wNnB
z0UDgUAgEMsc/NyS8O+xAwMDjzUUwjyhUql5eXlhYWGzN8qtr6+H/VNRXlEp
Qx4vLy//MV42Ea+8VznTGzmwpsrKinv3yu7dK39UKKuurppq1Bi9Pb2wrvLS
iVBWWgZrx+owsXYZWBYWFP8nPommpkZsUyBApLLyx42TzVY8jE8wUy9bUMnq
6krZRv0Q5OU8DBXyrKqqe0qq40weOzQ0hO2fh+v6oZ6yqpZNWl1dXc3j9y42
DQUFBd999x32cjg5Obm0tHTSAuC3YrFYyQ61lAQ/Fw0EAoFALHPwc0vCv8dC
DaOiohao8Kn09fXZ2trC5swkjYglITExEQ7Kko+zBmcFmUzetGnT8ePHsZS0
tLT4+Hg/Pz+YCoXCgIAAPp8PteVwOEwmE05dENrY2Fg4jaH+NBpN3vQX4hKJ
BGZB0eHnmZmZQUFBbDYbfjvtqvFz0UAgEAjEMgc/tyS4L1tZWWFNDSeBE48F
4F4//5GnFIGtFggE4BtQ5/7+fmychcLCQlAOSKmurs7NzVXh6hDzB45Rc3Mz
1rXXEjI8PHz+/Pmnnnrq9OnTWAqcRSCfNjY2WPNaeCrEuop1d3e3s7ODZyKY
hoeH9/b2grhiHcnCn1VoaKi3tzeBQADX9ff3hx+amZlBromJSUhIyLSrxs9F
A4FAIBDLnAW9JYGkgZeCp8n/Ywtuhg0/lJ+fD5Gmpqbs7GyprPNM0FQejzd1
3CIpnjw2Ojp6/mNFKTI+Pu7r61tVVZWQkCASieh0ek1NjUQiYTAYZWVlLS0t
KmzWiFva29srVEpdXd3CvcTGuq2YdsjaRaa1tVUoFMJpI5WdSKWlpfDXdPfu
3aKiIkiEOPyVwaNQRkYGnEUQh5SSkhJYEh6O7t+/D2cdLAxxFxcXMPO8vDxY
GFJSUlJycnLgL3Gmhh/IYxEIBAKBExb0lgT3RLghisXi1NTU9PR0qeyb7tjY
2LS0tMjIyPj4+MTERBBUuL0mJSURCITCwkJYDG6jk7qyxI/HgpZPbYI4T4KC
gnp6ethsNkisg4MDl8stKCiAvQR7r6OjYzF7SFh84PmFKyNVpYDdsVisSV/0
qwqctCuAx0DYRvkADeClM70+xYC/OCwChg/nFWgqNjhdW1sbNvyZ8iCPRSAQ
CAROWNBbEkgpKFlNTQ0YWmhoKIgr6BmomqOjo4+Pj7OzM7irlZUVWAE2jCY2
6pCdnV1eXp5iOfjxWBBs7AWyqhgdHQWPZTKZsJfANPLz80HjYb+B2g0ODoKl
LGYPCYsMmBhsckNDwwIVDmdCa2vroxd9TGb6zmuRgWoo9gfb3d0dHR1No9FA
buFRy9XVNS4uDv7E4OyC2sKusLe3D5ABf4nwt+bn5xcYGIh1kOvm5qY48O4j
QR6LQCAQCJywoLckcAmRSFRUVAR6lpyc3NfXBxIId1KBQICNmwm3XbjbZmRk
wDQhIQFuuyEhIXw+f9JdFT8eC1qek5OzQIVPBTw2PDx80Va3yJSXl8OhB10n
k8kwi72IhkMP5wkccThDMjMz4cQQCoUlJSXYT7q6uiY1GIASKisrp21FAIYM
v1V5tfHgse3t7TweTzGlsbHR29vb3d0dJBY23MXFBZ4K4Q+KzWb7+vrCgyTI
KvxxXbhwAc4o7Kuuy5cvQy6VSgXFhWdM5deOPBaBQCAQOAFXtyQ7O7tpP2vC
j8eCR8XGxi5Q4dMCdtfT07OYa1w04EEGjAsU1NTUFOQQDjEYKYVCiYmJAZsl
EAhwKG1sbLKysuCBqLW1NTQ0FLLgVz4+PvA0VFxcDLOgcxBnMBigrPCsBPYr
Lx98GGxN5dXGQ7uC7u7uSb2EwTkP2g/iCidMeno6WGtHR0ddXR08LMBJ29LS
ApHOzk6Ywj6HyoP3Yn2QQWJ1dTU2/ISS4OqigUAgEIjlDI5uSWNSO2u77Kxp
/mtfda/K3NR8oH9AmWIW1GP7+/ujo6MXqPBp4fP5C/Sf9yUH89jBwUEqlQre
RaPRxGKxt7e3p6cnaC0k9vb2WllZiUQi2O3Z2dkWFha+vr63b98ODw93cHCw
tbW9fPmyh4eHq6urvQwzM7NJbykX4m12UVFRRkbGwIBSZ+NCAAJfVlY2KRGs
NSEhwdraGmQ+LCwM9tXQ0BDW+xY8B8GDAFi9/Ns0cGBw3draWtjD4LSQ+1jd
L+DoooFAIBCI5Q0ebknCJKFHqAcxnHjG4ow1ydqb6T0pOPg7fGP2DSzjFe7F
4rJmL+2RHpuVlff55/TPP2d+/jnr88/ZsiCPYCFCljsRbGzCpNIfO6zHPHZc
JV3YKwcY3bR9OPwCwDwWdinoa3NzM9b4JC8vr7CwMCUlpbS0FLwLdAtS7t27
V1NTkyHD0dGRSCSCr2ZmZsLO4XA4UVFRcFAkEgmoLJ1OV+xJYCFaF4MxtrS0
LFW/W7BeFoslHxVXTlpaGngpOD/sBBBX2KuwJOwoBoMBfxEkEsnd3d3GxgYe
BMBynWXAzvHx8YmMjITFvLy8lH/6w8NFA4FAIBAIKT5uSYGRgcwuJm+clyhN
FEgFCeMJEGAWpnwpHyIwFUlFEIkZjSGGEWcv7ZEeGxbGV1OrUVMbV1PrUVOr
VVNrUlPrlk2xUCfL+iEcOQIe++M/cMFgoXxVjVP/SGB1IHJgGnjo5UnlgMfW
19dPmzUyMgK6OCwDhJbP54OvQry7uzsrKwtsDYsDikZXVVVVXFys2FZ2ITx2
adsVgK9O22MGqHVMTAw4Kug9l8uFRwPwWBqNFhoainlseHi4q6srRGxtbS0s
LPz8/EJCQu7cuQOPACC3oLWKX43NDh4uGggEAoFASJfulgSqee7cObiHgocw
45l+FX5nPc5aRVkJx4Rgs6Ix0c3gmxDIBeTr9OsmQSa3Qm9dpl4OqA7w5/jP
XjKUOfu7ssjIZJmsjqmpMdTUOGpq7mpqmWpqFDU1fzU1mpqal5pakZqaFAu/
+12EosdKZWq0aB4LErtq1aoXXnghNTV1cda4mMzUXTCQl5dHIBCCg4OtrKzc
3d1jY2Pt7e1ByRwcHKytrX18fGAW7AvEbPZu0BbCY5fwOy94rpmlu4ze3t6u
ri6prBU3pvcQGRgYANuH2kIcIlhDAnhGwBbu6emBSF9fH0SmvuOdCeSxCAQC
gcAJi3BLGhwcTEhIiPkp4CRqMo5/cZwURApvDT9x54RtjK0Fy8IyyvKM65lv
Xb/9xvkbv2I/goAAwYHnACnWsdYWnhYxs2JiYsJisWZdwFFNrUGmqdVqaolq
alSZxEarqSWpqcXKZjtm8VjwZMwWFgGQkN/97neampqLZs6LSVZWVlFR0bRZ
dXV1Tk5OcBzBZr28vMAbwWZZMthsNlju7du3wehAZWcpH2wtLi5O5dVeQo+9
d+/e4q90KshjEQgEAoETFuGWNDY21t3d3fVTqqurP/74Yw8Pj+bm5lBOaGBd
4AWfC4x6hgXbwoHvcIly6Qb9hhnTzEXsMvEyNuyWKcPUIsLCPNKcyCB2zUpA
QEBjY+MsC9BoHFn7AansZSxXJrGlampBamrBamqBamr1comF8Pbb7EkeC/o0
aZgGle6rkdHR7+VhbGyAx+P+739fKiY+DAOKDXcVwfr/x8ZNm53x8cGxsQfK
BdV/1oR1eTrpu3uM3Nxc7BOtwYeA0isu2dfXJxQKZ/8CDhvZSuXVXiqPramp
SUxMXMy22TOBPBaBQCAQOAEPt6TAiEDrGGvTMFPSXZJNpM0F4oWvrL/6yuor
D7HHzaCbEG6H3L4Vcusq9apdgp0H3WP20lgs1uzfkrNYghUruCtW3F2xImXF
ivQVK9JkU8mKFakwVVNLfvLJrKeeypEtcPfdd0lS6U9aKeTk5BQUFKhgs6dh
7OxZx/fec/vgAwjuWPjLXzyPHbN6mPLD9MMP3d991zIpaZrGBunp6ZcuXSKT
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
6WybaB/rJLC+FXqZUuTlJnFwFFm7ptjfoF9wS3WIbgu3jjH1LfCw4tymlfi4
ih0qyivgsQKODhw42ANS2chWFhYWwcHBTk5O1dXVioUPD/eBrG7bVrZzZ8G2
bakQduzI3rYt5WFEsmtXMYSdO4t27iwzMGBlZqq+U68HD3qvXSOeO+d/7hz1
UcH/4kXPjo52ZYpdhO+84LTn8Xh4+7xLDvJYBAKBQOAEXN2SQIdAX6emgyNZ
WVkpeVtfBI/t7OxMSEjo7e2Ni4vLzMz8Gf1PXJEHD7oOvnJ7x76w3QeCtu+l
7Xw5aMfL9B376DC7Y1/g1t1+u/YH79gbuGt/4I69wQZbzeT9FYDNgsFGRUVV
VlbCrujv73d3d5904MBj336bBJq6e3eWpuZNbW0LXV2CgQFRS8tUV9fJ0JCy
a1farl2pxsa5xsaFmzeHZ2Vlq3wD29oadu702rIlZ+vWjK1bs7ZuzZSFDFlI
fxjJksVzNm8m3b9frUyxKSkp0dHRqpXMhoYG+WDHQUFBPj4+WDscfIKriwYC
gUAgljN4uCWBENbV1VRXV16/fpXDiYL4pJCUlHjx4vnS0mKId3V1zl7aInhs
e3t7bGwsFgf94HA42EivPy8ePGh/eV+opkaxrs49Pd06ba27err3dXWqYaqt
la2rU6mlma6lmaqjU66rU6utHVtS8hNT7evrE4lEsO3TjhT80GMLjY3z9PWJ
+vquWlrmL79co619R0/PBRK1tG6B3O7ZU7RwHtve3vjb35L37i3ZsoW+dWuQ
vr6Dnp6djo7ptm2h+/eXb90aoq19E+L79uXv3Vuwe7efWJxYqQTgmUQisbCw
UJmFlQQeBH79618fPXrUxcWFxWKNjY15eHhM+joSP+DhooFAIBAIhBQftyRv
b9o771z94APzP/3p1vvv3/7wQ4uPPrrz4YcQLGAK6X/+s+kf/2gCs+++a2Jm
5jR7aYvgsQ8ePIiOjpb3t9DV1YW9mF3Qlaoc8Nj9+xlr1jitX++kocFZtepb
Xd27ENfXr1671lxHJ2v9etu1a29pakatX++uozPZYzF6enoSZHR0dCimDw/3
vnWMsn1b+c4deRobLTQ1bHW0PXR1SJqbrHW1vXS0vbQ0CZs2mu7Yfnf3rgoj
g8gF9djt21laWlfAYI2MyJs2fbN5s6+urqW+vrOm5kUdHfN9+/LAY3fupDKZ
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
QRAEQRAEsT38L4hCT9c=
    "], {{0, 1078.}, {460., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{460., 1078.},
  PlotRange->{{0, 460.}, {0, 1078.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[310]=",
 CellID->2059266444]
}, Open  ]],

Cell["\<\
We can use ListAnimate to generate a movie/animation of the results\
\>", "MathCaption",
 CellID->1695062567],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{
   RowBox[{"exampleBCellReceptorFigureTimeSet", "[", "\"\<Results\>\"", "]"}],
    ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[311]:=",
 CellID->398502467],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i58$$ = 9, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i58$$ = 1}, 
     "\"max\"" :> {$CellContext`i58$$ = 15}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i58$$], 1, ""}, 1, 15, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i58$1096135$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i58$$], {1, 15, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->0.,
                  AnimationRunning->False,
                  AnimationTimeIndex->2.9568090438842773`,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
NMV8NibZdk3lwVxuoB9SEhS5bHVuX0pavbj+WVK4FY0KH1yqzxVd/yzpEySp
g5VDigMGeiAlQZGU1DkpqelSfa6oxSrCOs9KSTvKA3AvKQmKpKTOHfzGXXT6
xSlp+bWuyvK7V7RvwTespSYl7fjGXaZ+KHIBgrtISVDkItW5g8+SekhJOzb5
9GVPbPygKalYZ/jrpHPrhxSXIbielARFLk+dqw818yOb8O20sC8iSUktqrp4
LTUpqV39kLf1oTNwhJQERa5KnduXa1JfvTvyN0RKSi2++tHNkecmUlLrSng5
VyW4gJQERa5HnZOSjiw+xXx+Pey3rm7clJSp9sSP8Z1POIVrEzQlJUGRK1Hn
dgec1Tfu3pOSojWspqyS1MHKW7g4JY24FgB2k5KgSErqXPRpyF0u2+TTa5ik
pPY1X78W3sMRBeeSkqDoyrtfTvTbQp8V7nbKAZmJRZ8Xf+Pucywh7lsLnMLV
Ck4kJUGR686gpKQjlUyv/Ncb5pqveT7oxEILrllwCikJilxxBiUlHann4Cou
GDKNVnHxtyidW2gkcwC7qB1X+O71093d/ReRkqDoVeeEJ5GSjlR1cBXRxeeh
dMqYOn1U3nU/4PRCU+Fh/LZ73RPpuq+X9IOUBEVvOBU8kpS0u6rjV8BM+Jpn
tQhiB931qakzDK0tx90LHwqcQneFnt0nUhIUuZQMSkq6pbZ8ncvpHaakz+Xf
uFuu95oV8XJ3HeFD01EZD+4cKQmKHnwGeDYp6ZbaVnWu7sT6T0mfmz5sd5Lh
AtGnpY69Il2Up3/gtVxEBiUldVhhKjGduIpT3HIDect5xvntVVIpyTGQoXNq
6CV4J1eQQUlJHVY4dfyvN4T1Xz/271qdU9wbZCKSAyBFz9TTV/BCriCDkpJu
rDOfkpqu4kS3jP1bnl45xb2ToFSkW+o9r6/8LgmKXD4GJSUdqfPgKp6Rki5b
y+0rbbTG/MOLi7XYwK7c3cG/uLszTvOkbWnteX0lJUHRw8757yEl7av2lPuc
6OLn3kHV13PdrWGF07fuuHbr+lnzH/3Rv+3h78r+vMvPbfyDP/h/evh7TG8/
ZkOu8bzukpKgaNO9Df2QknZUu+N+PlPbKa06Xv/Pkj8+P3r46zAlNV2RlHQl
Kel00Q056zxZufiJnXmkzRc3tRNSEhRJSYOSkjZVuPupR6bOU9p2vP4RU9Km
DTxCSnoMKel0qQ1ZTj8YlDZNP2Kus+lnNY/Z9V9SEhRJSYOSkuprk5I6TEmb
trFPUtKVpKTTPTIl9bZIz6QkKJKSBiUlbapQSuowJW3azH08SxpIfmBuTUmr
8f7ClFQ80W1NSasKoyfVZZnli9XraOHwbaqR0cJhyVSDU83IrzQzfVBSEhQV
T6T0SUraWmd4QT9Y4SkNO17/NHJK2rSlvZkqUtJ8vK1ef9/WFHtbSsrc8e6I
M9HX70lJn+wlPjM93AvTr9ln9TbzIlMgLLMqFs0smVZFi9U3I7PS1FqGJiVB
kZQ0KClpX807UtJU7dym1pdMZZalcHpYOFpmVT66uJSUjzDF1/lZ70xJqzE1
SUkbrXovPEelNmRK5IhlJWGZ/Ivl2qcgnoRTUs0oFl6VDBtcWU+qwnDiuKQk
KArPnAxBStpd+RDHfH0Lo4Flji3F16mJm5Y9kpI2bWxXjqSk6fePjaSkWTQl
Le9yz0pJ3zpXb+vrH6W3M8EhU+CTSArRlFETNPIBpF1KSjWjsh4pCfhIScOS
ko7U3/9hX2ze8h7yrJRULJ9Z15GUVLO9HeoqJb3BjpQULju//r5Yvd1abdTy
CLm3ZPSgnYtFC3zq4kO4bLFk+CJaW758sXBqVk0z8hWmJo5LSoKi1XmVUUhJ
Q6xlt8wNTHgvdOKzpCkWiFazMqt7m/oUk49LqWKeJS3n7n6WtFp2rnzfN/FG
6e0pCBfhlOhSYc9Pvw8a4fTolNUejL5d1bCqLVo+teqwJWF7Uu2PNju60lSP
jUtKgqLoqYD+SUn5GvpxSidkapuyKWmp8ht3U5CJVou3eJYU3erOTcdS0kxK
+soPnOmklDQlniU9NSXlTx0HKz9ez1getqVSEhQduZHjRlJSvoZ/8xd/0cPf
wfuQmqiVT0mZHLQpJVU+S9q9scvNOV7JNXanpNWCU/preC9MSZm5u1NSNDFN
B75xd2W37FZz6jhS+Sn1jOVhWyolQZGUNCgpKV/D7fnoSEqqCUfLwuempPDh
UX5BKak+KOVT0r6I9JiUlLc1Jc2DaDXlD4LfK62KPSYlFR3ckE2nqX2VHynQ
wmN2/ZeUBEVS0qCkpHwNt+ejHSlpdddxWUqKPiqKpqR8UDrrTDLKGWlfSpr3
cuqtlBS1NSW1+3tMb3eeMoqFt54qj3vMrv+SkqBIShqUlJSv4fZ8VJ+SUh/J
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
9aznkwM3cmAMSkp6g3664t6UNK99lZJWZVYTo9FmnhUtkCk/XEoKz+2pO8YO
t6XGw7a3uDmVKSaMP8ViqTA1SkoKuyvfmVM2tkx1aWg5MTOr52/cSUlLmaG3
qQwPY18PSkp6g6664prGRG9v5tPUFASW5ZRpEZSiuWYVf4oRKfp6rJS0PMNn
Lv0XNvM0D9ve4ubUBJmwTCYlrfLUuCkpVDyN5J8lTbHHQJmJ0Qoza5GSOpQZ
essCqbc8lR09KCnpDbrqirMak6knc28z25eSaqZUJqboY6z+ZXp+nlusoXI3
3VtyLjylt3c4n70pKR+L5ilbU9Ld/XFU8Rt3UxB/ootP6a/VZdYiJXUoc7R8
ErfK0Yk8jL08KCnpDbrqirMac6Se6byUlPp+XbR8tMJTeuNEqev7skBqwUsa
eLKHbW9xc46kpDANrV684VnScu6+lBR9ljTbmpKijaRbqSPtqoOae2T2Pj2T
kt6gt644pT3TtH4u8Kk+EU3ZZzrHnxxNiZ8sRacc74pzFa/p0enjXgIetr3F
zTnlWdI7U1I4t5iS5hSTST2rKfm3niV1LkhFvxw5qT3V58mEE3V7ySBPSnqD
3rriSHtS16DlKahY/1QXfyqLVaak1Cp2d0UjNSfz8NLf4YZUetj2Ftt25HdJ
mWdJ4ZfxHpOSMnNrUlLqWZKU9EjFZJ1aqn3TuFPPVw0ypKQ36K0rTmnPqpKa
z+uWBc5KSXMg+kqlpFS86m3X1MvfDDzPY7Z3379xV3xRfAg1YkrKS+WX+SCJ
fssunLWckn8rJfWvmKyj0WnoUwo17OVBSUlv0FtXDJqS6rNPqlh0vce7Aurt
+/8lhROXf1LSvX9S0kBWd8tunl/Cjh6UlPQGHXbF8SaFKWmesjUlzR/YRieG
c6PlUykpVYmUxC02BZmmf1KSlPROq4vCp8trNOeSkgYlJb1Bh11xepPma01N
zfmAc/yvvv4Odw2VBr3qSUlnkZK+pKTjRjyTsMmg1wukpJforTcapaT6wlIS
R0QfXA6xN6Wks4SPm290Yz9ISae4dyfS2u3jlH2kpJfosDfObdKm2m67lYk5
sRO43nIPDrE3oz8suuvv7s7gBFLSKYY4e7Cby/2gpKSX6LA3TmzSXYmjw15t
bdnV4t7n1696vrwreCcp6SxOHQ/m0jAoKeklOuyNDpu01QM2YYfU05MX9sZq
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
847e521RvVO2XUqqlAk+xUx0yp7anZLOWvvxSm5fxW4u/YOSkl5IzzRV073i
EoN63kH7vC2qJyVdKZN9wsdJYbEWQal+qROLXaCflsxc8QclJb2Qnmlt09Wn
5uTpBEsnVvdy8/3buMfn87ao3inbLiVVyqek8O2q2FkH5NagVL/2foZMPy2Z
veSU8jxS0gvpmdZ29HD+srXj0z840RTz+fXSP9bB+bwtqnfutktJlYop6ZOI
JKcfkMdTUnjMrCqMvl29WG1U5axMPWFLUq+vd+OqOUJKeiE909rBHg5P5uH9
DNwidf8WzhrF87ao3inbLiVVCrs0GgfCki1O/vUVho1MTY+WrIw8NbMy9dQ0
INyEK7l2D0pKeiE909pZPTylVRa73ikbbutuUdng1Nuwhpu351enbNFwW5c3
7d32pdNT0s1d+auD27LartSU6deen9I7onWTomWivRE2PrU5N75ITbze6YcT
15CSXkjPtHb6hSx/+f75+sfnRw9/LQ6tn3X+g3/w//Xw12jrbt9rm/ZdeKeU
uQn5OeUf/sP/t4e/zNZt2qJVyd/97q97+Nt9ZO7e9qUWKenv/b1/38Nf00hS
GYWapqSimoZ1npLmt1ISO0hJL6RnWrsmJS2vCLffY0tJu7fu9r12ZN/Ntx/R
xYdISZu2aFXy9nx0MCXt3vYlKalyo6Jn7+Ws5ZTorLBka1LSWaSkQUlJL6Rn
WsgHmRY1z/VPg99pFzf/9nwkJWXan597ez7al5IqS96ej1qkpK2kpKcqZrTw
SpQqnLpyLV9kZqUqKS6+bGq7jqoRNokhSEnvpHNOFz2BH+/nmkqmwe+0i1t3
ez6SkjLtz8+9PR9JSfX21SMl0b/bd6WUNCgp6Z10TgstUlLlem+/x959p13s
pfqUtOr5HlJSzdbdvtcO7rvMgsOlpPzH0WHh2/PRiSnpslNWTcfeno+OpKTK
j7YuuEy4M//qoRPsi0FJSe+kc1poFJGKFX7vtFerrr83nsvPS0WrStW/quHI
1kUXn7bknWXhTQs2TUn5rduaZer38qaDodHWzSHlKwwv8/QpEC4Y1hOtM7pg
i63bmmVWogVufJZ0jZqO3ZplwilL+cKNUlJ+A5fTU8WOK7bk8frZ8H5awiZS
0jvpnEZaXJXCm6vVKqZFkFne9NbcGK/uqFOzUhPDGk7ZulWBx6Sk6NbteOhT
s5eje61pSopu3SoQRVNSNPJMi4CTykT1dTbauh1xJvo6P/HZKSnasQdT0mri
/Pq7rotT0moDw+1NTTyu2NX19ZzetrdptItpTUp6J53TyPHrUbHOcBXTrpQU
FkgtXln/vk3Ob9rnpJT0rXD1dlPNJ6ak1da1Tkn11bbYujCtFKdEnw0V5xYf
LbXYuiMpaV+BDlPS1t8l1XTs1ogULjLFUtItz5JWG5iqs8VOLHZ1fT2nt+1t
dnQ7PZCS3knntLPvMlRTYeoyN2VTzLfwKsusJlbeikcnLt9mLsr7fLanpFkY
l74vVm/3VX7i1p2Vkr51rvbypmpbbN2+lJQvti8ltdi63Slp+eL7evXfTZWf
vnU3+nSWkhptY/15PlzqrJL1F6CPe4bDNvU5/ZCS3knntLP1GlRZW+YCN8V+
OhQNOFMiOoX31WFVmYQ1T9mx1TVbt+NZ0mqpuebwudKI37iL7ppMpK2stsXW
pRLQlAhEs/zX6u56lrQqsCMlzVYTl+lpa807tu5EpzxLWhXY8XW7Kfj90SyV
nu76xl1qqR3rOtKS+krC5s1VTUEoixZItWR3q4bzks18HinpnXROUwfPh+EV
LX+Nm7J3yPOC4eOGg8+PonfvRzY2tXUHU1Jq4qaaT0lJmX23Kc5Ed8dyR9+S
kqIFtqakc58lLStssXXHnyWFr/dVu3XrTnQwJUUL7HvcU5OGtla+o0PyG1g/
8bhiV1dWsnqxrPyzyEFh+cyssP5na7SLaU1Keied09qmHq65bcicY6d0Sgpf
hLfTPaSkfIEdKSkajqbD37hrsXWnpKT8Hm+akvIF9qWkVNLZlJJWr1ts3e6U
lJo4veZZUr7A1gdJ9d+sq6/8YEqqL9Du/vmUmlPXpunXyBMW2/Ti8drtZZqS
kl5L/zQy/aqmWE2d+bmp2+bVrNTbfCCqvPFudBWYtv//ksIHRlPMBd+4q9m6
3SmpPhc3Skk1W1eTX/KRJ1Ogpqq5khZbdzAlTUEmmmIPmx6WkoqmwVNS5TZu
ugTcZUoko08sJWWWDTcztdRTdb6jSZGSXkv/tLA6Ey7ftrsszpHnaxVboqJl
won5YuH0FgfV1OD/D7vvr9HWbc0y0V2T2t2dpKS5PWGEmaeHjY8umH+7mr6s
p8XWbY1IK8uJ0ddSUs137cK3q1mpRW5MSaOYtqekzIuwqvf08PfAu7sVbCYl
vZb+OV30NDhfl5uud+vziEZ/je5Fb89H/aSk4fZd9MdE1//1kJLa/b0zJV3w
9/Kr5OritXwbvv78egXMLLus/7JtuZ2UNCgp6bX0z+lSXdq6qx9/p317PpKS
dm/d7flISmpNSiIv+gTq87KbEClpUFLSa+mf092Ykvph62ydrbve6VtXr0VK
6scpXfRyUywZva1vHU6DkpJeS/+cLtWluhp4qtNTEtdrfZFaps535oV3bvUD
SEmvpX9OFz0NOjcCDyYlDa341MxjtVPow0FJSa+lf1pYnQmdGIFnk5LGVfnd
Qlex49wMDEpKei3904ivtQPvISUNqv465UJ2nPuBQUlJb6aL2tG3wBtIScMJ
/o2K2pS0/G3Rvlnhi7BV0dbOhaNf2EjVH625Zu2nhxopaVBS0pvponb0LfAG
UtJYwohUn5I+2aSTnxW+WGWf6OqihcOloukmU3Nq7alqj5OSBiUlvZkuakff
Am8gJQ0kGpG2pqQWL4opKWz/JxY9wnpqGr+qp75n6klJg5KS3kwXNaV7AejK
6CkptUWpplY2fllPi2u3lDQoKenNdFHNxSLVS6tPtOoXBIAbjZ6SVkstX9TU
nK8nH8r2kZIGJSW9mS76BJ2QOT+nJm6NVwBwu5qUtPo8cPV6OTE1a1VPvnD0
EhzWk2p/uN5UDanGh2s5xekVcg0p6c100acUi+YTaf0i+YkAT+J3SUN72HWq
282RkjZZJdnKRTJVZeqvrOcsUtJAdNHnpJRUWTPAw0hJw3nwtanbTZOS6p3+
UC8ToHYsdZCUNBBd9KlLSamJ89vUhxVnNhTuM73b3d3fNSlpOE89pHsesN02
rDdhLx3vt1QN+Zob7S8paSx6KT8ko3dKlaNY3zK6nu86rqQfMqSksdQfxq0P
+92VjzgSnUAqZXopc0DO05cvVnXOU1ZllnWu6llNT9WwiZQ0Fr2UiTyrWanp
0SmpiTAKB3BIn4SkpLFsOoZbH/CbIlvTlrQmJVWqee6Tv+MKI0x0yifIR8UX
0Tq3kpLGopdSUWj3rJrp0DMX9AydsyIlDWTroSslncV5o9IpKanyRSr+pF6k
Jm4iJY3l5b00BcJZ0berZTP1t2s8NOK4zdM/S1LSKHYct8VL3vJT+tRH9/ml
8pWENWSuy6tqu5K/VWAW9lK4T6PH1Y4XYZ35F6mJm0hJY9FLTelehuOgraGX
ZlLSKI6kpMzNYepONXNzm1+wuN78LW6fQUlKqldMJdGelJK2ckDW0EtN6V7G
4oitp6++pKQh7DtcK1NSZfn6W9OatdSvtwdS0iar50SZiatZyzKbpoSrSE3P
t6RIShqLXmpK9zIWR2w9ffUlJQ3hYEr6pO/zpaQaUtKgTg81UtJY9FJTupex
RG9Ootf36PRMseOfy+2+zWt042R0f0lJ/dt9rNaMnegQOyslHaynH1LSoKSk
l9NLTeleBpI6XDMpqaaG/M1MZr1naVS/0f0lJXXuSESq+TRjziz1H4PkPzwJ
K1y+DctEV9RbKumtPVSSktBR7ehbBpJJSZ9YrlmVj06MLhh90Y6U1JSU9AaZ
jzUMhBpS0qCkJHRUU7qXUVyfkvKjI/XJ8BQI1xJtbfgiXNemAWt0f6Skd5CS
DpKSBiUloaOa0r2MIp+SPkG0Sd0shdPDAFK8Z0g9dYpOX87KPK6qX6SS0f2R
kl4j+jHCjs8W3kkvDUpKQkc1pXsZxfGUlLqPStWZGR2peupDUGXJzBYVGd0f
Kaljpxyfy9GUiUipYd4uHYw1+qSkQUlJ6KimdC+jOJKSMskok5IyK53nZp4E
VTavPlhlWpJq3tZFnkdK6tNZEWn5OjWuo8Nn94cPle0Zi5Q0KCkJHdWU7mUU
xZRU+To/a2uBVAhKldyRknYPUqObbh0/ODcFn5opx4074qSkQUlJ6KimdC+j
qPnOzOrhy5wyVmVSs1J1biqTf72cmBdd5HiPwe1OOTIzlRTrz4/x1PgNK8+f
BIqVb9repnacXrhS5VXjGpdt8mUr6se+9p/eJ8x0L6MY4lidfr2DurfOIXqM
FzrlyFxVsrzNqKl/SqSeZW2r16v6wxrCqvKV9zNCd9+hcY2fe+fH50cPf5cd
J1eu6M///H/q4U9K6pDuZRRDHKtSUm/8Lqk3LcbFasopKSkzcZV3dqSk+nZe
Q0rqnJTUdEW356MjKenT05nkkXQvQ+jhQK25lzjy6PzcOnvosdtJSb25JSVV
Ft6Uko48S0q16i5SUuekpKYruj0fSUk9070M4cYDtcUTogsM1NR2pKSunP7p
QeptccxKSUtSUuekpKYruj0fSUk9070MQUraaqCmtiMl9aPFATktpGZlliq+
DV+HLzLTayo/vU926KclRElJTVeUiS2z5dvV3NTrZWEpaThTzN2NgqQWx2fq
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
0wJRUtIpjK9nc2dVr5g+UkmqWF5KWnJA7hPGdmikJiVtSjrHnyWtmrdpIEQ/
1Dp4cZSS6JyUdJzB9XhS0ibhc6LUxNSs1SV4KZy7qiRaOL9IsYUzKWl0U3Ui
hoNWsWWl+JAoU764VFgy08j8WMicWucCR7ro9nwkJZEhJR1kZL1B8TpCn04P
NVLS6KZYGIcWotHmlr/icV4zFqbgg6/o9K1ddHs+kpKioun4Ljf2g5R00L27
j2vcPk7ZR0oiNCVu9uBc0zgpaW5w/dxJSnq0nx3yu9/9dQ9/UtK4DKuXkJIG
JSURCrvOAKeFSz5lr7WpzalZ0bf1lUfrzMSWr9Xr+llS0hGTlPS3pCQo2nSV
oR9SEqHKm0A46OcR9Yd/+H/08Lf12K685O1IYWEN+eRSfJ2fJSXtJiV9SUmb
7PtwhtHZ3YOSkghlus5I50TjpqS5/a2Hw46UFC6SmSUl7SYlfUlJs+IJYVXA
9fQ97OtBSUmEil2nbznF6Clp3op2I2JrSoqWz8/KzJWSMqSkLylpln9OVD+R
57GjByUlEar/KtEFjeHBnpGS5m1pMSI2paRU4dSs6dcfK0lJm6RS0rczV2+/
U6ZApoZ8GSmpQ+H+nX59cpRa6qoGchu3TIOSkgjVd51O5ognpaR5i84dFJtS
0tZnSdOWb+IZ7CuZ/LKatQpNqWI1i0hJPYumpPmcICW9mZTUuczgvd5lm3zN
ip5nU9dduU95mGmRkubzQ5hfwuk1xaInn1QN5x7DJ9Y2tfxdUmYRKaloymac
aXsyOpKSGELqQLr40OV6mQOAHvzcO3/xF/+mh7/LjhMH5G47uk5vs8MURJUp
EX/CidHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeYYpEnNXG1
rGdJA8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNVow08WHMm
ucy3YavX9bP+0eIXScuJUlKNYkoK49LquU8+GYUlpaTOpfLRqkDqLQ9mX3dO
SmKT3b2n26n3+JQ0b+aRAVX8Ltw1f4b2yu6UFH2WtKot/7arlMSsZqQXkxSP
ZHd3TkpikyO9p+epFI0/YQ7KF+s/Jc0bu2MtUlK3alJSmICiS0lJ8GxSUuek
JDY52HtOCNTYnZJmA6WkeZNT64pOn3rSuG8GMx3+N+5WEzPFMuuSkqB/TqGd
mxIpab78RScu565KhgumKjk3JdUv7oA84pTeswvIm7anpNQio6SkecPDKdHL
6M8pPz4/evgznFdSyWXeldFv2a1mpQqsZCLS7SnJ75KgSErqXColhekmnLhM
RpkyqcQULnVwQ04vSeis3nNmIKMy8uxLSdGQ1UlK+iR+xy0lDaQYXi77k5Kg
c+6FOnckJWXyTnGRpilpPupSdxdHVvRy5/aefUHUKuN8hRlnnh6WCWdlyqTW
dUtKmnsgtCpwez6SkqKkpC8paSkznKNvw/F+XVu5UPQ2lX5Me1PSlH0qtCNt
7TtOUvcSywPP2eZEp/eeUwShKfEduev/7j0483dWt+cjKSkqelW6y439ICWt
TOlbkcys1BSe4fZxSt60PSXNdqek1eItvnG36fxDvUa9Z6ewNElJ6Zvtee7t
+UhKauQZXSolrWSyz+pWOXrT8oyjghUpqXM7UtIpz5KafuPuIyW11C4o2TV8
VX1KfpUOO+GTTUlzsdXr+llS0r2e0aVS0kq4W6dFSgrfroo946hg5d6rDEXT
E3+X9PGNu5aadqC9A59STvyUniUt56Ze52dJSTd6RpdKSSvFlPRJBKLUzQwP
ICV1rj4lTb//d78rJ16cksLt+vjXG9po3YFOGnTuxuNzmZW2pqRwkcwsKelG
z+hSKWnlSEpafkLCk9itnctEmJXUxLB8tJ58sUYpaessalzTgXYT3erh4Nya
kqLlU7OWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIOtKfo
U/SW5sSLXc3nxptSUqpwflblMybj9KDw48eUu1u6jZS0ksk7+2bxACMO7Vd5
ZErKX1MckAdd2YFOIPQjdeO6PEpPD0qZlbZ7liQl3esZXSolLWUyb3RKdNag
eZkMO7Rz+WvxxS7b5GtW9FTXd6BdRlem6g9+j6wif6qcGv8uaZKS7vOMLpWS
oOjKu19O9NtCnxXu5oA86JYOdCahHzempGWBrSkpTD2ZWZURSUpq4RldKiVB
kXubQUlJpNzYgfYdPQhT0rT4SsxZq8g/bc9EmLn86nX9rNempE62pZNmHCQl
QZGU1LnUJ5a3uGyTr1nRg93Yh1ceKlBjOvVfb6g8PU4H/u3uyuxTX/L4Vnei
k23ppBkHSUlQ5Jamc60vtZsuypdt8jUrerDb+/D2BsDs+NEYTUP5j4+kpBbC
/v/ccRvzjC6VkqBISuqclMQOPfShcwud2H0cFnNQpubcU/nL7dv8fqQ2arl1
9Zt5Xb9XaNVlFaQkKLp9nJI3SUls108f9tMS3mnr7ehZd7A/F/93f//v9/D3
pDG42pbp10dL9ZXcfj29+KoK7CMlde6F53MH5HFd9aGTDP07/bN9KakFKQm4
khuYzr3wfO6APK7DPuywSbxc0y8+SUkthClpniIlAaeTkjpXcz6fL/Q/Fv+r
wZVU+eXETs7nDsjj+uzD419hmm76sTZP0i4ZrdZyez56XkpaiZ4QijtXSvry
uyQocr/RuZrwsoo/0dQTnT79+n/i6OR87oA8rts+PHjC2ffRMTR9bJRa4+35
6CUpKZyY391bP3vMzK25dPZwVY2SkqBISupc/gwczk2lpB+Lx0yphNXJ+dwB
eVznfbi7eatPjE9qDo91cTJarToTW75Wr+tnhW+lpOXE0KpAZYSp/3xSSoJH
kpI6tzUl1QeoyTfuHq3zbqw886xucqQkilL3xtc3I59ciq8rixWD0lNHSmov
R1PS6jQiJX2kJKhw+6WEvBYpqThXSnqAIbpxayNTiQl6SEZLO1JSuEhq1taU
xOyzKyVNi88Yp+y3MqQkeJL5vEGf8qffzNxw1uRZ0puM0o2bTkHzTc4oW0dT
q7vfrkwbU1K0fGrWtPhK3pu/cReVCkfLAptSUioZLUlJ8Eh9Xl+YbU1JqygU
zkp9AiYlPcxY3VjZ2rE2ika6TUZLm1JSqnBqVhiypKRZJh/NBTalpGVQSl0x
9wUlKQk61/+15uVqwktN6ommJynpwYbrxppz0XAbxVny970d2pSS9j1LkpKi
igeJlPQlJUHRQBedd6o594YP/adAZfkezucOyFMM2o2ZZo91k8wpxt3pW1NS
Pg1Nx36XdHdn9GVfSqr8HFJKgicZ9AL0HvvOvS3+pKSxjNuNTkovN9xjo6gd
Kak+DUlJR+z47HH5Iqrzq2qUlARFo1+JHk9KYp/Ru3H09rPJM5LRUia8zFu6
er1jVjEiSUmhF15Vo6QkKHrSVemRUp9c3eKyTb5mRc/2gG58wCaQd/G55UpT
RX7Z/bep8kd27xGTlPS3pCQoeuoV6vF+W+izwn0cjSd6QGc6QT3P9R+83EJK
6paU9CUlQdHjL1VPJSVR9JjOfMyGvNkbktHSmU/xD7u7M/py9974xY39ICVB
0e3jlLx7T+Ar+UaesrHHK2H2pP486xjjSjVnD+AWUhIUuX51bur4uwGVGWrT
xh6vhNnz+vN5W/RIkhH0T0qCIteyzvWZkjY9aarcTMfhyp6nfc3c3Rl/p7f2
8HXwaDl+sFUu6PiBLykJilwyOjd1lpJOv5F2BKb87JY/+ZP/pYe/e3dQ/1Gu
voUXuGvbD1YSfd3I9b3E8ziK4A1uubBSbxonJQ1xUzeQSUoaxM/++d3v/rqH
v2v21Onj9+IDzPHMcY4ieAN3qp3rLSXNrZJ3WpOSRvGSlNR0pK+qnVeUejGX
z5yLwmWj64IdHEXwBu5v71Xs/3xKmu8Kvq+XU5azVoukaqhPScvGS0n71Oz6
2/ORlFTjwSnpygGeyjLR1JMqFs6K1tNmC3iRBxxFfpcERe5v71UMGpn8spy1
TDphDooWC2dtTUmrrWjZTw9Us+uL4WVpNXHH23tTUuVRVOy36xs2PS4lXdm9
4aqLLz7pTJSatdwcJyuOe8BRJCVBkfvbe00xqwLFiLSakplV+XprSmKHml1f
85QnfB2+KE7sJyXl789Xs645fRUb9oyUVOz8a5yekvL1wD4POIqkJCi6/Zr4
ctFb5eVOqU9JNQFKSupHza4/mJKiJfPF+klJ4akperK64AxW07D6FBNO+Qrf
Rtd7ekqKbtHFpnTYib4ovq2s8DLxcf4aF/f2NR6wXVISFD34JHaBCy4uU08p
ict8Tk1JYbGayntISXNvfNK3Ja2bV9Ow3SlpNTH6OnxxMCWFm3CvVHsyff7Z
8p26fD3tdNXJN3pkPzxgc6QkKHreuWssxcv31DIlrbJPzbMkB8xZanZ9TX6Z
pb5HF86tqTm1lrt8sinp9obVR6Sw8FQKQZX1F1PSss20pp9DT+qTB2yLlARF
Lpr3Cu+4wgJbo1BmVipepdaS+sadY+a4ml2/6VlS5cRpqGdJqwKpBW9v2PGU
lKnkSErKH2O0oLczHtM5D9gKKQmKHnPKGlSx/zP5JZV9puBpUf2TpsqUVNNy
8mp2fbuUtCko3ZKSUgVqJl7fsE1ft1uV/1Zbs2B9SpKMbqTb857RPw/YCikJ
ilxJO5ePMPO9UObXQ5nyYYH6lDQ37/o+eYnWKak+KF2ZkjaVueb0VZNnKyPM
rN2zJKf0e+n8GnqpB1ISFLmkdq4+xbT+Sx0nDqFGihFmviVOTVzelkcXidZw
V0qqtPoQ4O7m/I2aFBNNRvlnTLtT0t398V46v56+up2UBEWuqp3rPyXN7bys
T16i8kHPBX92bt5ZKSkViDalpI/BeB89X09f3U5KgiIpqXNTT2qaek23vMEk
JQ1iqvgHur/Ct5lZqSnFlPRxC3qTTLevTo/Lk+rWM21Y7aYF9x0by/pPObpG
P0RHb/9HSoIK7mwH9dtCVxU6nM4iJY2iMsJc8Le6D7+xT16o5nOk1NsjO+6y
nX5u5aMfn6O3/yMlQQUpaVDdpqSPg+ok4SfMN7q7M7o2dZmSPo+4kRtIsbdX
Qyn1+sh6m+7xcysf/eAcvf0fKQkquAXq3MU3w3lbW96oT6Ard4/LX0Tbdku3
vE2xn6dffzU2xdJNqpJlgSmdhaOLL4+N5eLRg2dVW1h5WFW4SOVRN/SROXTj
v6QkKHIN7dzPvfNP/sn/3sPfjuPE0QU9MAwvUJmSPkFc+pTCRTSPRJeNxuT8
2sP8lSmwdZG8oQ/LoRv/JSVBkfvYzg2dkuZNOLdPgK0Mw9YOpqR8JZkr9Wp6
+DZaoD4EVZas2Yp8y8cydOO/pCQokpI694CU9HGYkRb9JHz5Nv9ROfX0XlP1
KemT/Y3SskD41Ka43mixVNjJJLX6cJSpM2/oA3LoxgOV3Hh07hkpad6WU/qE
hyl+qJ6/n6Se3mtnU0r6bDyqV8mlstpPOtFEc1m0wI5nSZWGPhqHbjxQSUq6
V7H/n5SSaraXF9qRkjxa2k2nNVI8k2ee3dRcCJaFw2pTlaymL9/mX0crj4ou
UtFhYx+KQzceqORO416rS0y0QD65fH1fL6csZ0XLLydelpKWWw1f0/aUlHpL
DZ3Wwli9mhlTl9U5Vo+tDN34L79LgiIp6V5T7FPBVYFMbFnFn2jqiU5fTrw+
JX0ceCysPpeeJ+YLfB5xo3IXXXe6sbpUSjpo6MZ/SUlQ5Gb1XtHOX+6UVIQJ
p6dSUnHKLSkps/m8TWoUFAs4fo7Qe+fqrT+LAyT6ycMpK62ss7ceexspCYpe
cqcx/So1PXRByUxrP1tSUmUm6iolZTqB90iNgnyB4iyK9N6JOunMyoHTg86b
93hSEhQ9/h618w1ctS1s7eNTUrQfeBUp6UY68Cyd9KSURCUpCYo6DxFHDLFp
8wOjzHOl01NS/u0tKemzfX8Vn9ldqV23PF60D5cTiwU4SDeeonU3rkZEOP0T
jIu5fLSGVW2petqNtaEPvKEb/yUlQdFT7zRG2ahi/09n/y4pP/fGlDRvbzgl
uuqfE//oj/5tD3+jHGyQ4hg+7oI+zCegsBnLpJMqVlnP6dvSrtprDN34LykJ
ih6Zkp60RZkIk8o+U/pRUTRJdZWSPtlPSlfFbs9HUhKP8chrwZWuSUnh6+jz
o7BM9EV4ps3HpXMNfbwN3fgvKQmKXBk7l48w83UtnFKclarh9pQ0b/jn16/V
hQVuz0dSEg/jYN7tlpRU+QwoDEf1i0tJUUM3/ktKgiIpqXM1+eWav+uPkzDx
rebeno+kJJ7H8bzPNSkp9TCoMiXtmNhou0Y/zEZv/0dKggpSUuekpH0paV5k
9fr7tqaYlMRrOaT3ad1vqydB88TlGXL1IlwkGojCelpv0ejH2Ojt/0hJUOFh
KelJ2/IVJoUb9bDhywLF8FJ8nZ8lJfFajuodWnfa9Tul3RpHP8BGb/9HSoIK
19/9NvWkbcn7baHPCo+oCWv7UtL0+8dGUhLkObC3elhKarq6EY+uHj4/PJGU
BEVDj/HQk7Yl79kpaUlKgrs4trdq+vDlsut16xUNelxFmz3otnykJKggJQ3q
PSlpZT5iaxJNJhOFE/dFJCmJZ3N4b6XH8obun1Xjh94WKQmKpKRBvTYlzXan
pJmUBDUc4Zs87Kp6rtF7RkqCV3nY+fxJ25InJe1ISatFMl/Dk5JgyUG+lR4L
PaNPllsx9BZJSVAkJTGoylCT+dnR8V8kvS0lhb8Re5W7u/9memArx88n+38G
H9S8IY/ZIiDlSeeuT99nreWVYv5v/jI6BQ/3M/srOveaDrnlKJo2pqS5f1Jv
paSUh93k7KYftm57PG3epFGfDNobl7m71883SUnwGg87j3W7LdOvz+hTp9lU
sXBWvv5oDU1d3/PTgVxz7l+3R90pnr11+7y5TzZt+8/CPz4/evh78y7jdA+7
cQJSHjbY+9yWTKipzDuZ1/nVSUlS0m4POzmc682dk9r26Nns9nwkJXG6Zwx/
v0uComcM9lmf25Jp1V0pafV1iOjbTyzNLWcVH2ClCp9CSmrtqdt1lpf3T/7c
NU+5PR9JSbTwgCNKSoKih6WkPvWWklbZJx92ookpmp7Ct9FVnGXqyelbd7tH
btTpntpLldu1KhYuNUlJXOLGk/+9jnSalARFxwcaRZkeDmdN6YxTc24MF9lU
ZkrEnOiLcGK0hQ6w4dhl9R7ZV/UblR/pUywlzaeI7+tw+jxrfl18G50iJT3e
KWFhaEd6QEqCopefYa6RiUKbUlK4bDGPXJ+Siqujf+fusulXq4k73tY0+LIz
2yMP79UYn0d38YwUzgrTyirXRKdnJkZfp+ZKSQ9mny7t6A0pCYoelpK63ZZU
lskElvBtdEo4a1POSpXPv0jNLU5nCKfvr8pjrDixpv7MxBbH4ZOO7Snmkxjy
qwWjs1aBJROaUtEmM1dKeq2H3becZWu3SElQ9LCzTc/bsrzrWE0JZ4Xl83sq
Wk+02mhtmQWjLz7BjVPqhiqcSOda7KnVwZZZUTi32J4pfYtenHLcIw/s8FyU
mrWcHu3wfEqqyVCZpaZfY9S3Db5x93j2ZsqmnpGSoOhht69P2pZu6eRnuzEl
hcVqGpNPSauofvrWPXI47EhJ0Vn5lDTvkeh38PKpp+YLe1LSI9mVefX9IyVB
kZQ0qN8WLq7wPZ38To1SUhhSwlvx1dzKlqRiV5ieGh26zxsRmV1zYkqq/KJd
zRMoKekl7Mcalb0kJUGRlDSou1JSow/k6UfrZ0mVEzc9S4oeltEp9W2u9/jh
sHoqly+2mnI8JdV86U5Kegn7sYaUBGd52B3vk7Yl78ZnSTxbVykpLLYKRJkc
5FnSWbY+1FtOyceiaA7KT5SS3sx+rCElwVmkpEFJSTTSW0rKN6mYklJ1nujx
p50TU9L8e6KvzMTM20zhTJhq0DFcajW6V5+WLOWX3bSifTXUr+j42SncZCkJ
ziIlDUpKopHTB1H01mU5Mby9yb9N1Ryt87M4yzU63T37tJO58wxLhlMyPyk6
8a+4omfvo5fIZ4HjcaO4xhaKq9gx9KQkOIuUNCgpiUbeM4jOose+pCSakpLq
y9QsJSVBkZQ0KCmJRt4ziM6ix1KmntzdGRw1bUlJy50efb0qlnqRmRs2bzVr
WWZ1EKaaEX0dnVVsTLwTF6QkKDpy+ai+Or3dubvsS0qikcojdt+BvRwRjYZG
dF2tV3TBWuDlVgMt9TZ6kpmC/JIqE30RXTYc+MtZyzL1zahvVbSSVOdESUlQ
tONGounN/yO16DEpiUYuCC+X1S8lwWPUp6TUxMys/Ivi3HyZ1aemxWpTIa5Y
SWZKSEqCoq137+4Hjjix96QkGpGSjqwRaGTolJRq+Y5nSZlKMlOAHepTkudH
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
                   
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 2->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
hJSklB6mS52SuF94x+FzKrzS2qywGRPyZmQo+jZDc9coPfvX9j+fPxb+GTk0
OMe/Lar/OgMM/Ft+j/gklxFSEsbRpKSP7neU4A4pyanwSmuzwmZMyJuRoRjU
DOHiU3qKlIRj/ZCSykqJqVR4XhAScRlxQcg7bU/BEVKSU+GV1maFzZiQNyND
MbQZ6UdLwrcUSEk41g8pqez+vpPmxCQlQe9KpE+FW7JPab5BAZs4cE6FV1qb
FTZjQt7sDMWEltzXotIt6UNKEumXiEIOdWSz/lab90NKKksvFMJgllLS91XR
j98t6VI5LJZWUipsKiXxe0lAlfEbB0pISSewMxTTWpJdY4TPLs9HxlOSHAfS
8TTYEaXN+lvtjj4l/XMR/l8flwpky++UkkqDKceW0o+ax+GP6YPs7iYOUoyU
FLJ8ccBCTAynwiutzQqbMSFvdoZibUq69x6lpKhMtDEbbe6nsgWE8u5SUnpt
L60YDfZFY7P+VrujTDE/SfypFiuFKS8pKR0ueTAvMbZcujQUbhSekq2diqSk
kHDqPSqDzXCsnQqvtDYrbMaEvJkaijmNyS5v7svUlQSWcMsVBKVsroniTzUi
ZR/7SknhFV649U9sZjeb9bfanR9FkEnLlF719yp9i5SUql5GhNjyU/gYSNiY
rVDYS1hm4SiRkkLCqRcWKP2IXXGgneoearpX2IwJeTM1FL0aI9QjrG1ubSlJ
s0WZmLIfY9knjPz9bLUG5WFaW/IufJX7686nNSXJsejeoqn812udE2JLKf5k
X36Vv1Yn7CUso7hkjkJKCgmz5VNYKmc3YjMcZae6h5ruFTZjQt5MDUWvxryp
5+qXkkrfr8uWz1bYZTQ6Kt3fwwKlF05pYGeb9bfaHU2QKZVJ01D0QFO598+S
wmeF2BI+uBSfJd1KVQn7giOlmTZrUmMN4ejDsu6hpnuFzZiQN2tD0aU91+/l
ylV+py77WuEznfefHF2FX1nKbnk/FH1V7+nZ7X5vAZv1t9odTZARyvxzcX5e
SkqfFZJLlGKE1BNtkX8s7W7J+HzxWVLoygmfLb1qVgOxhtlbBmThldZmhc2Y
kDdrQ/GmPaV7UHgJqtZ/6eKPspgyJZV20TwUg2gu5umt32BHlDbrb7VtPy9+
L+mn/FlS+mW8bVKS8KwQW0o/kpL2VspH97OlV41vGlayfNeAILzS2qywGRPy
Zm0ourQnqkTzfl1YoFdKugPRVyklleKVtUOjJy8G9rNNf3+a/sZd9UH1QyiP
KUlWyi/3JEmTTvapcIv8IynJPvn6UIpOri8p0OAoO0VKOoG1oXCakvTZp1Qs
u9/3QwHo6YPMPxfhuY2/VumkpKVISY5Eq2UWz4fgQDsVXmltVtiMCXkzOBTv
m5SmpHvL05R0v2Gb3Zg+my1fSkmlSkhJWOLnSZAZ+m/5PeIlUtIXKemp6Kbw
MXmPRl+kJKfCK63NCpsxIW8Gh6J7k+57jaZmOeC8/6ev3+ChgZLTu94PKakT
UtIXKek9j1cSPOL0foHwSmuzwmZMyJC10RiUkvSFSUl4I/vBpYuj+UNK6iT9
uHmhheNASupi7UHEaMvPU7QhJR3C4Gj0bdKj2pYtZXI6DgLmC4+gi6M56OOM
NqsHAx2QkrpwcfVAM273TnW/Ydm5AzIhQwZHo2OTViUOg6M6WjjUxL3P7696
Hj4UOBMpqRcuHRvj1uAUKekQBkfDYJOe2qALDUqfnhw4GlGXDxwBgJTUCxeQ
jZGSnCIlHcLmaNhslZ739reRU9I5n6fc/Y22AEchJXXENWRXh9wW90NKOoTN
0bDZKj3v7W+j/CzJ++BE3y0sPeu9mwDs4HqyK24WTpGSDmFzNGy2Ss97+9tE
ySgbFryPTNrHhY0BcA6uNlviPuIUKekQZkfDbMOUvLe/QfU7Zt5vB9lPjpa0
BACwAe+3xWORkg5hdjTMNkzJe/sbKH8Tx+/IyJ3y2y9gBH4vCaji3uEUKekQ
ZkfDbMOUvLe/wbEp6d7ut2tAd6QkoIqU5BQp6RBmR8Nsw5S8t/+p6G8aZH8j
yfvtoPpZkuveAX2RkkbgIrMZbhxOkZIOYXk0LLetynXjkVX6vSQ+SwJSpKQR
uMhshpTkFCnpEJZHw3Lbqlw3HiXZbxWSkoAUKWkQrjM7ISU5RUo6hOXRsNy2
KteNh0D+PiHHHfgiJQ3CRWYn3DWcIiUdwvhoGG+ewG/LAeA9UtI43F+2QUpy
ipR0iKGjcVkyrpulvk/eIwDYQUoah/vLNpasT/AeKekQQ0fjr8r/fP5Y+EdK
wkyL3gmwYvXwwwRS0lCcaHvgmukUKekQQ0fjOjglfZhp5yEmfDEO+JCSBuP8
2gOXSqdISYcgJQ3t/vydYhUOd4oxORkpaTTOrw2QkpwiJR2ClDS0+/N3ivm4
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
lX9+f8egrTu9RwgAgFfe39GyNUS3y+jWKaSk0gujLaUfP8nNWl/bm1t8M1KS
U91DTfcKmzEhs6wNS9uHPj+KlFTaIlSbtq3hymZthAEAaLg3Xb+VKkwjSelB
+qMcbUrlNbsuPZW2ZwJSklPdQ033CpsxIbOsDYvllBQ2Un+JszbCADAOv5fk
RVtKevRjdK98mpKqDz7llFTddakxc5CSnOoearpX2IwJmWVtWJQp5rLxN+6E
d9XCMl1HCADsIiU58vT29DQllV7ePSV9kq/YaXYdJayZSElOdQ813StsxoTM
sjYs+pR0q24vFX6fkqKWZ6971kYYAMYhJTmSjRvK8sKP2c93sg+EZjxKSXJL
Hr12DlKSU6Sk01gblkdBZqjmkYnikrURBoBxSEm+aL4RkZYslY+2R7dC4eXp
ffP+MX2Qli/VINR2P1UboSFISU6Fq0SbFTZjQmZZG5YNUlLYF+XdBwD2QEpy
pJp6vGgOPqQkPBKuEm1W2IwJmWVtWNK3mxbq1aNP7o0vANgPKcmFcbe8Ja6m
lLSwy94H/FikpNMwLKNFI7zB/QgASkhJGkJCyf6Y3ke6N8D7XelRL5b3d3kD
0IaUdCBGZqjS8G5zb8LJ9pu9+/VIr0vfSUlKQvCpZqIuR6o5JfXa+/tKlu+i
Gbd+p0hJB2JkhtIML3EJTu03affrkR4paSYh+6QfJ6XFRgQl/as6FpvATktu
3PGdIiUdiJEZ7dHdR3Px5AILI6K13L1+8zs/9+uRXpe+k5KU5JSU/hgV6zUh
nwYl/d7tnDJ2WnI75JKyH1LSgRiZ0RpGWL5tNbz7B3R05Xx+3/p9Tc79eqTX
t++kJKVqSvoUIkn3Cfk+JaVzJqow+2P0IOqU8imhnrQlpcfzLdw13iAlHYiR
Ge3lCKcX83Q9AyxRWr+lT3mxX4/0uvSdlKSUDmk2DqQlR1z89RWmjSxtz5ZU
Rh7NU0I9mgakXZiJe7dTpKQDMTKj9Rrhq0xZbL4uHad3SygbXPoxrWFxf37r
0iN3vZNdrX0PdU9Ji4fyt5d9ifpV2nL9HvmrfCBGNylbJjsaaeNL3Vn4oLRx
vu7TCXOQkg7EyIzW/UYm377/evzn88fCvxFT69ro/zuc7d3yo/bo2KUrJWER
4uLYPeqRu97JmvseGpGSVo/o34ZGEmUUGpqSqjQNM56S7h9JSWgQXhBsVtiM
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
L/cP1OmKsA==
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 3->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/v9UxjJ3QLKCjZl0C9bwBp06TbSKkWsdtss48Iq0SrICWRsunuCpCg
Q0uBREUDdSTouIrlJfA66KkOV3L0OL48f/1n7Bn789FPt86xx+Px2GP7e3zO
df+nv/uv/9l/9R9M0/SX//HP//yzf/XXf/gXf/Gv/uY//09+vvkv/vwv//Rf
//mf/Jd/9Od/9Sf/+k/+4j/73X/4c+L/97Ps7/6jafq71wAAAKx8Pp/vfwEA
AF5uGZQAAAAQkQAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJ
AABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUp
CQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAl
KQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACA
JSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAA
gCUpCQAAYElKAgAAWJKSAAAAlqQkAACApRtT0gSM4JbzAwDAjW68C7r3xg+o
dMv5AQDgRjfeBbkBg84ZpADAO0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALyT
lASkGKQAwDtJSUCKQQoAvJOUBKQYpADAO3Wbknb/H1uWi8z/Da1KpmqoX124
VGq9R5p6ZC35pWo2NtrmVI9lSmbqXE4slomuqKb+aNuKm5xqQ75jp8TBlqq2
+DazaZle2ufc2gAARnHjXVBx1atbyso6o/WH95b5ajf1Sary+lk7mhpOj5bc
17aUVJuLKyruynz0KLZwU/2ZttXUn39buV/ys+r3WnHZg6QkAOCdnpSS6u9C
i9U2SkmZ6VubujtWVN6Zb21D/Z18dL9Ha65vYX39m8JXvnmZpm6dUpmSit1y
+liWkgCAd3p2SgpnVd54n56Sdtzw1z9fqJ+yr0k1Zep3Vk0COpiSMsvuO9pv
TEmb1iUlAQCcovOUtFRTYU1VNYtsTUmZ+jett36RU1LSpu5dLpWpNrXeaAOK
i1dWGy1WnFivJnPV7KBQqs5wFcV17du0vE3HBgDAY9x4F1RcdX2yKBZI3SSf
lZJSS21db36RfKjZkZKKjck0MrNFqZZnSrZISdH6823L1J+PNtGaM40sNnVT
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
PK9GD/7V883dB/Nq8XyFdjq8k98lQZGU1Ln6m6WDN1dSUk2Dz+2B01d0yjfB
DtbAJ/haabRA6lCMvq4/klevixXa4/BOUhIUSUmd23Sn1DR3SElvSElnVfJy
U8yqQIuUlD8bSEnATEqCIimpc1LSBX+PSUkHlz2rBqIpaXmy3ZqSlo+J59fL
KZWBSEoCvqQkKJKSOrc7JS1vzKJ3Vv2npGX7o1NW95+ZBStXBBfIHPyrkqtx
PcWC0hSM6+WyNSlpcgmA95GSoMglsnOpu6l8Slq9CG+uhkhJ0fu61ZRwkzM3
hAc37bKRcnBFp7TTaeGIVDhaFqg54KfgA4H8SK+pKnrwuxDA20hJUOTi2LnT
U9K+iJSJEvuOn8q8lv9IPPP5uZR0ezPeLJOP5gL1KakmHOVTUmY4LJvncgDv
ISVBkcti5/alpFVqaJeSNh0/q/vGgymp8n5SSuqkqlcpjosrU1J+UITtdFGA
N5CSoMgFsXMHnyVFp+/LSqm7qeLxkyrWIiXt28aHpaRTamhRFbPUgb2SmTUf
58sX4bKpCosHv0sDPJuUBEUuhZ2rv9tP3R0t3y5fHElJq1uvaLMzc+s3LVUm
nD5JSafW0KIqZvvGYIu//P619+GppCQokpI6tzvRFIPG7rupyIfaix+A1x9R
jVLSj+1J8Hkp6axKTq+Kr1FSEvBUUhIUSUmd6y0lRSPSvqNoR0paPTCqKSkl
ncJZ4lyZcXS9rW1u2jPANaQkKHLV69x04B/u/jrxM+fjN1qbNi1cS2rTolNO
T0mfq8LCKWs5valOFHy5asADSElQ5HrXuboPg++3b9POSnDHA2B9m3ds6VZn
reX01l6z+Qxh98AHeiAlQZErXec6jxKpoFRzUHW+aak2V5Y8otuU1KhOxuUK
AoOSkqDINa5zI0aJT3VK6seJ23XciWs5vcHX9ABj2TSIgB5ISVDk6ta5afyU
NB9jlQfb7hVdQEpqVCcAV5KSoEhK6txYKSn1mGZ5mBXrkZI6T0ntquUZHB4A
PICU1Ln6lDSnkh1zmz5L+gSPljYtu3VdTQ2XkjK1HVyL8wYZW7/LCgC9cSHr
3KZck4lIxTJSUj/rGiIlnVIDj+cSA8CgXMI695iU1Ogbd7sX2WfElJSqcBVd
w+9G7qsWQi400Bu/S4IiF6/O7U5Jqx8HzVOu+cZduBWfNv96w+5F9nlASppi
PhuTbLum8mAuN9APKQmKXLY6ty8lrV5c/ywp3IpGhQ8u1eeKrn+W9AmS1MHK
IcUBAz2QkqBISuqclNR0qT5X1GIVYZ1npaQd5QG4l5QERVJS5w5+4y46/eKU
tPxaV2X53Svat+Ab1lKTknZ84y5TPxS5AMFdpCQocpHq3MFnST2kpB2bfPqy
JzZ+0JRUrDP8ddK59UOKyxBcT0qCIpenztWHmvmRTfh2WtgXkaSkFlVdvJaa
lNSufsjb+tAZOEJKgiJXpc7tyzWpr94d+RsiJaUWX/3o5shzEympdSW8nKsS
XEBKgiLXo85JSUcWn2I+vx72W1c3bkrKVHvix/jOJ5zCtQmakpKgyJWoc7sD
zuobd+9JSdEaVlNWSepg5S1cnJJGXAsAu0lJUCQldS76NOQul23y6TVMUlL7
mq9fC+/hiIJzSUlQdOXdLyf6baHPCnc75YDMxKLPi79x9zmWEPetBU7hagUn
kpKgyHVnUFLSkUqmV/7rDXPN1zwfdGKhBdcsOIWUBEWuOIOSko7Uc3AVFwyZ
Rqu4+FuUzi00kjmAXdSOK3z3+unu7v6LSElQ9KpzwpNISUeqOriK6OLzUDpl
TJ0+Ku+6H3B6oanwMH7bve6JdN3XS/pBSoKiN5wKHklK2l3V8StgJnzNs1oE
sYPu+tTUGYbWluPuhQ8FTqG7Qs/uEykJilxKBiUl3VJbvs7l9A5T0ufyb9wt
13vNini5u47woemojAd3jpQERQ8+AzyblHRLbas6V3di/aekz00ftjvJcIHo
01LHXpEuytM/8FouIoOSkjqsMJWYTlzFKW65gbzlPOP89iqplOQYyNA5NfQS
vJMryKCkpA4rnDr+1xvC+q8f+3etzinuDTIRyQGQomfq6St4IVeQQUlJN9aZ
T0lNV3GiW8b+LU+vnOLeSVAq0i31ntdXfpcERS4fg5KSjtR5cBXPSEmXreX2
lTZaY/7hxcVabGBX7u7gX9zdGad50ra09ry+kpKg6GHn/PeQkvZVe8p9TnTx
c++g6uu57tawwulbd1y7df2s+d/92Z/18Hdlf97l5zb+8R//bQ9/j+ntx2zI
NZ7XXVISFG26t6EfUtKOanfcz2dqO6VVx+v/WfLH50cPfx2mpKYrkpKuJCWd
LrohZ50nKxc/sTOPtPnipnZCSoIiKWlQUtKmCnc/9cjUeUrbjtc/YkratIFH
SEmPISWdLrUhy+kHg9Km6UfMdTb9rOYxu/5LSoIiKWlQUlJ9bVJShylp0zb2
SUq6kpR0ukempN4W6ZmUBEVS0qCkpE0VSkkdpqRNm7mPZ0kDyQ/MrSlpNd5f
mJKKJ7qtKWlVYfSkuiyzfLF6HS0cvk01Mlo4LJlqcKoZ+ZVmpg9KSoKi4omU
PklJW+sML+gHKzylYcfrn0ZOSZu2tDdTRUqaj7fV6+/bmmJvS0mZO94dcSb6
+j0p6ZO9xGemh3th+jX7rN5mXmQKhGVWxaKZJdOqaLH6ZmRWmlrL0KQkKJKS
BiUl7at5R0qaqp3b1PqSqcyyFE4PC0fLrMpHF5eS8hGm+Do/650paTWmJilp
o1Xvheeo1IZMiRyxrCQsk3+xXPsUxJNwSqoZxcKrkmGDK+tJVRhOHJeUBEXh
mZMhSEm7Kx/imK9vYTSwzLGl+Do1cdOyR1LSpo3typGUNP3+sZGUNIumpOVd
7lkp6Vvn6m19/aP0diY4ZAp8EkkhmjJqgkY+gLRLSalmVNYjJQEfKWlYUtKR
+vs/7IvNW95DnpWSiuUz6zqSkmq2t0NdpaQ32JGSwmXn198Xq7dbq41aHiH3
lowetHOxaIFPXXwIly2WDF9Ea8uXLxZOzappRr7C1MRxSUlQtDqvMgopaYi1
7Ja5gQnvhU58ljTFAtFqVmZ1b1OfYvJxKVXMs6Tl3N3PklbLzpXv+ybeKL09
BeEinBJdKuz56fdBI5wenbLag9G3qxpWtUXLp1YdtiRsT6r90WZHV5rqsXFJ
SVAUPRXQPykpX0M/TumETG1TNiUtVX7jbgoy0WrxFs+SolvduelYSppJSV/5
gTOdlJKmxLOkp6ak/KnjYOXH6xnLw7ZUSoKiIzdy3EhKytfwL/7F/9bD38H7
kJqolU9JmRy0KSVVPkvavbHLzTleyTV2p6TVglP6a3gvTEmZubtTUjQxTQe+
cXdlt+xWc+o4Uvkp9YzlYVsqJUGRlDQoKSlfw+356EhKqglHy8LnpqTw4VF+
QSmpPijlU9K+iPSYlJS3NSXNg2g15Y+D3yutij0mJRUd3JBNp6l9lR8p0MJj
dv2XlARFUtKgpKR8Dbfnox0paXXXcVlKij4qiqakfFA660wyyhlpX0qa93Lq
rZQUtTUltft7TG93njKKhbeeKo97zK7/kpKgSEoalJSUr+H2fFSfklIfyR5M
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
nxy4kQNjUFLSG/TTFfempHntq5S0KrOaGI0286xogUz54VJSeG5P3TF2uC01
Hra9xc2pTDFh/CkWS4WpUVJS2F35zpyysWWqS0PLiZlZPX/jTkpaygy9TWV4
GPt6UFLSG3TVFdc0Jnp7M5+mpiCwLKdMi6AUzTWr+FOMSNHXY6Wk5Rk+c+m/
sJmnedj2FjenJsiEZTIpaZWnxk1JoeJpJP8saYo9BspMjFaYWYuU1KHM0FsW
SL3lqezoQUlJb9BVV5zVmEw9mXub2b6UVDOlMjFFH2P1L9Pz89xiDZW76d6S
c+Epvb3D+exNSflYNE/ZmpLu7o+jit+4m4L4E118Sn+tLrMWKalDmaPlk7hV
jk7kYezlQUlJb9BVV5zVmCP1TOelpNT366LloxWe0hsnSl3flwVSC17SwJM9
bHuLm3MkJYVpaPXiDc+SlnP3paTos6TZ1pQUbSTdSh1pVx3U3COz9+mZlPQG
vXXFKe2ZpvVzgU/1iWjKPtM5/uRoSvxkKTrleFecq3hNj04f9xLwsO0tbs4p
z5LemZLCucWUNKeYTOpZTcm/9Sypc0Eq+uXISe2pPk8mnKjbSwZ5UtIb9NYV
R9qTugYtT0HF+qe6+FNZrDIlpVaxuysaqTmZh5f+Djek0sO2t9i2I79LyjxL
Cr+M95iUlJlbk5JSz5KkpEcqJuvUUu2bxp16vmqQISW9QW9dcUp7VpXUfF63
LHBWSpoD0VcqJaXiVW+7pl7+ZuB5HrO9+/6Nu+KL4kOoEVNSXiq/zAdJ9Ft2
4azllPxbKal/xWQdjU5Dn1KoYS8PSkp6g966YtCUVJ99UsWi6z3eFVBv3/8v
KZy4/JOS7v2Tkgayult28/wSdvSgpKQ36LArjjcpTEnzlK0paf7ANjoxnBst
n0pJqUqkJG6xKcg0/ZOSpKR3Wl0UPl1eozmXlDQoKekNOuyK05s0X2tqas4H
nON/9fV3uGuoNOhVT0o6i5T0JSUdN+KZhE0GvV4gJb1Eb73RKCXVF5aSOCL6
4HKIvSklnSV83HyjG/tBSjrFvTuR1m4fp+wjJb1Eh71xbpM21XbbrUzMiZ3A
9ZZ7cIi9Gf1h0V1/d3cGJ5CSTjHE2YPdXO4HJSW9RIe9cWKT7kocHfZqa8uu
Fvc+v37V8+VdwTtJSWdx6ngwl4ZBSUkv0WFvdNikrR6wCTuknp68sDdWm/zC
HgAp6SxOIA8mJQ1KSnqJPnujz1bVG739++RT0nuep8zbu5oCryIlncg55Kle
cll8HinpJfrsjT5bVW/09u9T+Sxp9M5ZfbcwNXf0zQT64XzyVC4Wg5KSXqLP
3uizVfVGb/8+q2QUDQuj90y4jTc2BngPZ5tHch0ZlJT0Et32RrcNqzR6+3co
fsds9MtB9MnRLS0B4AFGvyy+lpT0Et32RrcNqzR6+3eo/CXOuD2T36hxtwta
8LskKHLtGJSU9BLd9ka3Das0evt3eG1KmqePu2lwOikJiqSkQUlJL9Ftb3Tb
sEqjt3+r1b9pEP1F0uiXg+KzpKG3Ds4lJbXgJPMwLhyDkpJeoufe6LltRUM3
nqjU75I8S4KQlNSCk8zDSEmDkpJeoufe6LltRUM3npTotwqlJAhJSY04zzyJ
lDQoKekleu6NnttWNHTjych/n9B+hy8pqREnmSdx1RiUlPQSnfdG583LGLfl
AMdJSe24vjyGlDQoKeklmvbG1JN2m5na9ovXCNAPKakd15fHuOX+hOOkpJdo
2hs/K//x+dHDn5TElW76JKAXd3c/XZCSmjLQnsE5c1BS0ks07Y3pxSnp40h7
HzHhSz/wkZIaM76ewalyUFLSS0hJTTf/+pVyF7s7pE/eTEpqzfh6AClpUFLS
S0hJTTf/+pVyPZe5DJ3zWlJSa0bWAzhDDkpKegkpqenmX79SrmdH5+mfd5KS
LmBwjU5KGpSU9BI3pqT5xwvf16uJ86z89FU9UhIXs5dr6KUXkpKgSEoalJT0
EnelpDABpWblX6cKSElcwC6up6/eRkqCIilpUFLSoLZu3S0pKZy+OyXlq5WS
aMourqev3kZKgiIpaVBS0qAGTUlHEpOUxF1Su3j+FmiqTObKeO5hs6+2ZfPO
ao/h8DZS0mUMrnFJSYOSkga13Lrlfdo1t2Rh5TUpafXDouLvj8JZUhLXqxlT
dw29405vXufbC+MyuMYlJQ1KShrLFPOp+Ey4h5SUek4UpqT6t1ISrVUOKCmp
UYXAzPgalJQ0KClpUKutW32sXSx/emOuSUn5iHRXSvo8/WB7ua0DanU1XH58
EX6skX+Rb0DqQ5Lopyj55mXWvqoz3U9VnQMcYXANSkoalJQ0qCFSUn3kyUSh
MEzlV9duM/M9cMt6ucCmARVGm1Tkyb/IZJata1nO2rr2aIEiw+FV/C7pYsbX
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
Pm+L6p2y7VJSpUzwKWaiU/bU7pR01tqPV3L7KnZz6R+UlPRCeqapmu4VlxjU
8w7a521RPSnpSpnsEz5OCou1CEr1S51Y7AL9tGTmij8oKemF9Exrm64+NSdP
J1g6sbqXm+/fxj0+n7dF9U7ZdimpUj4lhW9Xxc46ILcGpfq19zNk+mnJ7CWn
lOeRkl5Iz7S2o4fzl60dn/7BiaaYz6+X/rEOzudtUb1zt11KqlRMSZ9EJDn9
gDyeksJjZlVh9O3qxWqjKmdl6glbknp9vRtXzRFS0gvpmdYO9nB4Mg/vZ+AW
qfu3cNYonrdF9U7ZdimpUtil0TgQlmxx8q+vMGxkanq0ZGXkqZmVqaemAeEm
XMm1e1BS0gvpmdbO6uEprbLY9U7ZcFt3i8oGp96GNdy8Pb86ZYuG27q8ae+2
L52ekm7uyl8d3JbVdqWmTL/2/JTeEa2bFC0T7Y2w8anNufFFauL1Tj+cuIaU
9EJ6prXTL2T5y/fP1z8+P3r4a3Fo/azzn/yT/7uHv0Zbd/te27TvwjulzE3I
zyl/8Af/voe/zNZt2qJVyT/90/+ph7/dR+bubV9qkZL+6I/+jx7+mkaSyijU
NCUV1TSs85Q0v5WS2EFKeiE909o1KWl5Rbj9HltK2r11t++1I/tuvv2ILj5E
Stq0RauSt+ejgylp97YvSUmVGxU9ey9nLadEZ4UlW5OSziIlDUpKeiE900I+
yLSoea5/GvxOu7j5t+cjKSnT/vzc2/PRvpRUWfL2fNQiJW0lJT1VMaOFV6JU
4dSVa/kiMytVSXHxZVPbdVSNsEkMQUp6J51zuugJ/Hg/11QyDX6nXdy62/OR
lJRpf37u7flISqq3rx4pif7dviulpEFJSe+kc1pokZIq13v7PfbuO+1iL9Wn
pFXP95CSarbu9r12cN9lFhwuJeU/jg4L356PTkxJl52yajr29nx0JCVVfrR1
wWXCnflXD51gXwxKSnonndNCo4hUrPB7p71adf298Vx+XipaVar+VQ1Hti66
+LQl7ywLb1qwaUrKb93WLFO/lzcdDI22bg4pX2F4madPgXDBsJ5ondEFW2zd
1iyzEi1w47Oka9R07NYsE05ZyhdulJLyG7icnip2XLElj9fPhvfTEjaRkt5J
5zTS4qoU3lytVjEtgszyprfmxnh1R52alZoY1nDK1q0KPCYlRbdux0Ofmr0c
3WtNU1J061aBKJqSopFnWgScVCaqr7PR1u2IM9HX+YnPTknRjj2YklYT59ff
dV2cklYbGG5vauJxxa6ur+f0tr1No11Ma1LSO+mcRo5fj4p1hquYdqWksEBq
8cr6921yftM+J6Wkb4Wrt5tqPjElrbaudUqqr7bF1oVppTgl+myoOLf4aKnF
1h1JSfsKdJiStv4uqaZjt0akcJEplpJueZa02sBUnS12YrGr6+s5vW1vs6Pb
6YGU9E46p519l6GaClOXuSmbYr6FV1lmNbHyVjw6cfk2c1He57M9Jc3CuPR9
sXq7r/ITt+6slPStc7WXN1XbYuv2paR8sX0pqcXW7U5Jyxff16v/bqr89K27
0aezlNRoG+vP8+FSZ5WsvwB93DMctqnP6YeU9E46p52t16DK2jIXuCn206Fo
wJkS0Sm8rw6ryiSsecqOra7Zuh3PklZLzTWHz5VG/MZddNdkIm1ltS22LpWA
pkQgmuW/VnfXs6RVgR0pabaauExPW2vesXUnOuVZ0qrAjq/bTcHvj2ap9HTX
N+5SS+1Y15GW1FcSNm+uagpCWbRAqiW7WzWcl2zm80hJ76Rzmjp4PgyvaPlr
3JS9Q54XDB83HHx+FL17P7Kxqa07mJJSEzfVfEpKyuy7TXEmujuWO/qWlBQt
sDUlnfssaVlhi607/iwpfL2v2q1bd6KDKSlaYN/jnpo0tLXyHR2S38D6iccV
u7qyktWLZeWfRQ4Ky2dmhfU/W6NdTGtS0jvpnNY29XDNbUPmHDulU1L4Iryd
7iEl5QvsSEnRcDQd/sZdi607JSXl93jTlJQvsC8lpZLOppS0et1i63anpNTE
6TXPkvIFtj5Iqv9mXX3lB1NSfYF298+n1Jy6Nk2/Rp6w2KYXj9duL9OUlPRa
+qeR6Vc1xWrqzM9N3TavZqXe5gNR5Y13o6vAtP3/lxQ+MJpiLvjGXc3W7U5J
9bm4UUqq2bqa/JKPPJkCNVXNlbTYuoMpaQoy0RR72PSwlFQ0DZ6SKrdx0yXg
LlMiGX1iKSmzbLiZqaWeqvMdTYqU9Fr6p4XVmXD5tt1lcY48X6vYEhUtE07M
Fwuntziopgb/f9h9f422bmuWie6a1O7uJCXN7QkjzDw9bHx0wfzb1fRlPS22
bmtEWllOjL6Wkmq+axe+Xc1KLXJjShrFtD0lZV6EVb2nh78H3t2tYDMp6bX0
z+mip8H5utx0vVufRzT6a3Qvens+6iclDbfvoj8muv6vh5TU7u+dKemCv5df
JVcXr+Xb8PXn1ytgZtll/Zdty+2kpEFJSa+lf06X6tLWXf34O+3b85GUtHvr
bs9HUlJrUhJ50SdQn5fdhEhJg5KSXkv/nO7GlNQPW2frbN31Tt+6ei1SUj9O
6aKXm2LJ6G1963AalJT0WvrndKku1dXAU52ekrhe64vUMnW+My+8c6sfQEp6
Lf1zuuhp0LkReDApaWjFp2Yeq51CHw5KSnot/dPC6kzoxAg8m5Q0rsrvFrqK
HedmYFBS0mvpn0Z8rR14DylpUPXXKRey49wPDEpKejNd1I6+Bd5AShpO8G9U
1Kak5W+L9s0KX4StirZ2Lhz9wkaq/mjNNWs/PdRISYOSkt5MF7Wjb4E3kJLG
Ekak+pT0ySad/KzwxSr7RFcXLRwuFU03mZpTa09Ve5yUNCgp6c10UTv6FngD
KWkg0Yi0NSW1eFFMSWH7P7HoEdZT0/hVPfU9U09KGpSU9Ga6qCndC0BXRk9J
qS1KNbWy8ct6Wly7paRBSUlvpotqLhapXlp9olW/IADcaPSUtFpq+aKm5nw9
+VC2j5Q0KCnpzXTRJ+iEzPk5NXFrvAKA29WkpNXngavXy4mpWat68oWjl+Cw
nlT7w/Wmakg1PlzLKU6vkGtISW+miz6lWDSfSOsXyU8EeBK/Sxraw65T3W6O
lLTJKslWLpKpKlN/ZT1nkZIGoos+J6WkypoBHkZKGs6Dr03dbpqUVO/0h3qZ
ALVjqYOkpIHook9dSkpNnN+mPqw4s6Fwn+nd7u7+rklJw3nqId3zgO22Yb0J
e+l4v6VqyNfcaH9JSWPRS/khGb1TqhzF+pbR9XzXcSX9kCEljaX+MG592O+u
fMSR6ARSKdNLmQNynr58sapznrIqs6xzVc9qeqqGTaSkseilTORZzUpNj05J
TYRROIBD+iQkJY1l0zHc+oDfFNmatqQ1KalSzXOf/B1XGGGiUz5BPiq+iNa5
lZQ0Fr2UikK7Z9VMh565oGfonBUpaSBbD10p6SzOG5VOSUmVL1LxJ/UiNXET
KWksL++lKRDOir5dLZupv13joRHHbZ7+WZKSRrHjuC1e8paf0qc+us8vla8k
rCFzXV5V25X8rQKzsJfCfRo9rna8COvMv0hN3ERKGoteakr3MhwHbQ29NJOS
RnEkJWVuDlN3qpmb2/yCxfXmb3H7DEpSUr1iKon2pJS0lQOyhl5qSvcyFkds
PX31JSUNYd/hWpmSKsvX35rWrKV+vT2QkjZZPSfKTFzNWpbZNCVcRWp6viVF
UtJY9FJTupexOGLr6asvKWkIB1PSJ32fLyXVkJIGdXqokZLGopea0r2MJXpz
Er2+R6dnih3/XG73bV6jGyej+0tK6t/uY7Vm7ESH2Fkp6WA9/ZCSBiUlvZxe
akr3MpDU4ZpJSTU15G9mMus9S6P6je4vKalzRyJSzacZc2ap/xgk/+FJWOHy
bVgmuqLeUklv7aGSlISOakffMpBMSvrEcs2qfHRidMHoi3akpKakpDfIfKxh
INSQkgYlJaGjmtK9jOL6lJQfHalPhqdAuJZoa8MX4bo2DVij+yMlvYOUdJCU
NCgpCR3VlO5lFPmU9AmiTepmKZweBpDiPUPqqVN0+nJW5nFV/SKVjO6PlPQa
0Y8Rdny28E56aVBSEjqqKd3LKI6npNR9VKrOzOhI1VMfgipLZraoyOj+SEkd
O+X4XI6mTERKDfN26WCs0SclDUpKQkc1pXsZxZGUlElGmZSUWek8N/MkqLJ5
9cEq05JU87Yu8jxSUp/OikjL16lxHR0+uz98qGzPWKSkQUlJ6KimdC+jKKak
ytf5WVsLpEJQquSOlLR7kBrddOv4wbkp+NRMOW7cESclDUpKQkc1pXsZRc13
ZlYPX+aUsSqTmpWqc1OZ/OvlxLzoIsd7DG53ypGZqaRYf36Mp8ZvWHn+JFCs
fNP2NrXj9MKVKq8a17hsky9bUT/2tf/0PmGmexnFEMfq9Osd1L11DtFjvNAp
R+aqkuVtRk39UyL1LGtbvV7VH9YQVpWvvJ8RuvsOjWv83Ds/Pj96+LvsOLly
RX/5l/9DD39SUod0L6MY4liVknrjd0m9aTEuVlNOSUmZiau8syMl1bfzGlJS
56Skpiu6PR8dSUmfns4kj6R7GUIPB2rNvcSRR+fn1tlDj91OSurNLSmpsvCm
lHTkWVKqVXeRkjonJTVd0e35SErqme5lCDceqC2eEF1goKa2IyV15fRPD1Jv
i2NWSlqSkjonJTVd0e35SErqme5lCFLSVgM1tR0pqR8tDshpITUrs1Txbfg6
fJGZXlP56X2yQz8tIUpKarqiTGyZLd+u5qZeLwtLScOZYu5uFCS1OD5Ttyup
u5q5Gau5n9LdVLRA6xFnRH+kpJ44ILvlBuBexf6fFikpvHOriTbR8ssp0ddh
/ZcdJ1euKJVZwterwtEymddS0ijCUeYkSecaHZ+rIPP5NQGFq14mnVSxynpO
35YVI/ojJXXD0dgzNwD3Kt6JhVEl+joflM56fVmfXLaiYkpKTZSSnkpKYjjt
UlL4ejUiUmWiL8JIlY9L7RjRHykJKrgBuFfxfiyTkuq/KSclpVaUiS1S0muJ
SIzlspSUDzWZcFS/uJR0GSkJitwD3CvxufUvn7BFI8+U+Prc6ltzUlJ+Rfnk
soo8K6lkFBaQkoYjJTGQdikpzDurNeZT0o6JFww3I/pLSoIi9wBHZDLOKT6x
lDSL5qbo9NUixTQUXaTdZt6oJr/sfpYkJY1rdZzc3RwoaHGUTul/vWGeuHoR
LhK+iNbTbitCRvSXlHQ7h2L/3APcK3rrviqQf5ZUXyBVMvN6tfhlfXLZikZP
SR+n2WZEJAbSLiVdSUq6kpR0L8fhENwG3Kv4kXUm2mSmRFOPlBSuKJ+MpKQ3
k5IYyANS0vMuMZ2Tku7lOByC24B7Ffu/PiVNwa+Qjv8W6bUpabaaEr5NvZaS
HqDb02OfreJe5x4VV35KcOVAM3ZmUtKNHIej6PY2gK9Vflk9J0o9PJqnhItM
v0qVjy542SZftqIdz31a/ElJ3eqze/tsFbdzYOTpnyUp6S6Ow4FISZ0LM1H+
b0o/FTr4JyVJScMJU/+Nzt2u1TZ+Lv9Avh/XbPIQdEiGnlmRku7iUByIk2rn
Jimp5Ypuz0dSUlM/O+eP//hve/g7ZTelMsLyNH7N8fBzLf/nP/2nPfw5/kP6
JKRPQlLSLRyKY5GSOnfqZ65HXbbJl62oH0e24sQ+eZjpWSlpuV2pt9ccD5OU
1LezTi9D0wN5UtItHI1jcQIZ1G8LfVa42zMOyMtG1jO6qxEpqREpaSynf6oz
hLt7HdYclsNxMhmUlDSEC7blSd11uuk1KWmecs3xMElJAFs4WY1IShqUlDSK
1kPsYd11rqempHAzP6ceacWqpCSATZysRiQlDUpKGougdItMSlp9OWc1Mfp2
NSVT7JaUdG6F+W8uLVPSXOz7ejk9TDRzydSUTMloRHLwwz5+lwRFrjKDkpKG
026sPbXHjisml/B1dGJ01iorheUfk5LCQ3fOLGHkKeaaaNIpTswkqXO3HV5C
SoIiV5lBSUmDarF1z+6xI46kpExEWk65PSW1CAvRlLRcyxQ8OVplmWKB1ZQw
XuWneJYEB0lJUOQqMygpaVwtPvk/t8LH2J2SUpkoVcn3RJpf12N80impJtdI
SdADKekyTlPjcpUZlJQ0tHPH3Rt6bJ+pOrmEX6XblJLu/cbd6VLhaFmgJiWF
ZTK5aVVnmJKitY3VsdAPKekazlFDc5UZlJT0AGdt6Xt6bKtiSso8G5KSovlo
LlBMSbNTUlKqtrE6FvohJV3ACWp0rjKDkpKe4ZQB+Koe22R3SgrnpnLTg1NS
vkDl1+dST4XqU1K+trE6FvohJV3ACWp0rjKDkpKe5OAmv7DHKh1JSfmgFA1T
j0lJRVu/F5dKSavHQztqe1jHwmWkpNacnR7AVWZQUtLDHBmJ7+yxGvnY8pWZ
GJbJTCkmsrs740xhVFmGmtTbKS1MRqkCYW13dwYMSUpqzdnpAVxlBiUlPZKg
dK58cjnlr3IVD9tBU/DFubv+HtaxcBkpqSmnpmeQkgYlJT3VviH58k5LkZIa
kZJgdFJSO85LjyElDUpKeratnaDTojJf8bre3Z1xprv78hd3dwYMSUpqx3np
MVxlBiUlPd6msanTuNLP4+3H50cPf4582EdKasRJ6UmkpEFJSS9R2Rs6jStJ
STA6KakRJ6UnkZIGJSW9R02H6DSuJCXB6KQkKJKSBiUlvUpxnOo0riQlweik
JCiSkgYlJb1Qpmd0GleSkmB0UhIUSUmbLP9VpeP9tqOGdvtLShpC6gDQaVxp
mZJW/+JcmGLm6fN/oyXDBVP1SElAb5yLHklKqrfsqN391i5bHaxZShqIoMS9
wghT83p+WxORauqUkoBOOBc9kpRUKewlKakRB2SNcOTqNy5Tk5Kiz30qU1Jl
8pKSgB44ET2VlFQp/5OQTDeuvqS3er16sVpXWCY6N2xD9G1+K6SkEa2eb97Y
El5lX0pKJR0pCa7nd0lncRZ6MCmpUs0TnMzzpvDFJ5uGMgtWFkitIkVKGlRN
BIZzhVFl6eKU5CoGO0hJZ3H+eTDXl0q7U9JqYirC7HuResaUWUWKlDQ0A5kr
ZZ4lzW8vfpZ0ZAi0GDtTT07fOh5ASjqF8fVsTqGVwl6agg/w5ymrXl2+Dcvv
e1FTMjUxSkoanbHMZaZdKWlKP2aaT5sHv3G3bxS0GDg/6/zDP/y/evhzWiBK
SjqF8fVs7qzqFdNHKkkVy0tJSw7IfcLYDo3UpKRNSef4s6RV8zYNhOiHWgcv
jlISnZOSjjO4Hk9K2iR8TpSamJq1ugQvhXNXlUQL5xcptnAmJY1uqk7EcNAq
tqwUHxJlyheXCktmGpkfC5lT61zgSBfdno+kJDKkpIOMrDcoXkfo0+mhRkoa
3RQL49BCNNrc8lc8zmvGwhR88BWdvrWLbs9HUlJUNB3f5cZ+kJIOunf3cY3b
xyn7SEmEpsTNHpxrGiclzQ2unztJSY/2s0P+5E/+5x7+pKRxGVYvISUNSkoi
FHadAU4Ll3zKXmtTm1Ozom/rK4/WmYktX6vX9bOkpCMmKenvSUlQtOkqQz+k
JEKVN4Fw0M8j6ne/+196+Nt6bFde8naksLCGfHIpvs7PkpJ2k5K+pKRN9n04
w+js7kFJSYQyXWekc6JxU9Lc/tbDYUdKChfJzJKSdpOSvqSkWfGEsCrgevoe
9vWgpCRCxa7Tt5xi9JQ0b0W7EbE1JUXL52dl5kpJGVLSl5Q0yz8nqp/I89jR
g5KSCNV/leiCxvBgz0hJ87a0GBGbUlKqcGrW9OuPlaSkTVIp6duZq7ffKVMg
U0O+jJTUoXD/Tr8+OUotdVUDuY1bpkFJSYTqu04nc8STUtK8RecOik0paeuz
pGnLN/EM9pVMflnNWoWmVLGaRaSknkVT0nxOkJLeTErqXGbwXu+yTb5mRc+z
qeuu3Kc8zLRISfP5Icwv4fSaYtGTT6qGc4/hE2ubWv4uKbOIlFQ0ZTPOtD0Z
HUlJDCF1IF186HK9zAFAD37unX/zb/7HHv4uO04ckLvt6Dq9zQ5TEFWmRPwJ
J0afB0XfRl+EhU/ftFPqnFr+G3fTrympuK7jm/MkU+lJ0FxgikWe1MTVsp4l
DSSfjKLnBDfPL2FHd05KYpN9QUmfs0k010zBE59isUx0qo9UjTbwYM2Z5DLf
hq1e18/6w8UvkpYTpaQaxZQUxqXVc598MgpLSkmdS+WjVYHUWx7Mvu6clMQm
u3tPt1Pv8Slp3swjA6r4Xbhr/gztld0pKfosaVVb/m1XKYlZzUgvJikeye7u
nJTEJkd6T89TKRp/whyUL9Z/Spo3dsdapKRu1aSkMAFFl5KS4NmkpM5JSWxy
sPecEKixOyXNBkpJ8yan1hWdPvWkcd8MZjr8b9ytJmaKZdYlJUH/nEI7NyVS
0nz5i05czl2VDBdMVXJuSqpf3AF5xCm9ZxeQN21PSalFRklJ84aHU6KX0Z9T
fnx+9PBnOK+kksu8K6PfslvNShVYyUSk21OS3yVBkZTUuVRKCtNNOHGZjDJl
UokpXOrghpxektBZvefMQEZl5NmXkqIhq5OU9En8jltKGkgxvFz2JyVB59wL
de5ISsrkneIiTVPSfNSl7i6OrOjlzu09+4KoVcb5CjPOPD0sE87KlEmt65aU
NPdAaFXg9nwkJUVJSV9S0lJmOEffhuP9urZyoehtKv2Y9qakKftUaEfa2nec
pO4llgees82JTu89pwhCU+I7ctf/3Xtw5u+sbs9HUlJU9Kp0lxv7QUpamdK3
IplZqSk8w+3jlLxpe0qa7U5Jq8VbfONu0/mHeo16z05haZKS0jfb89zb85GU
1MgzulRKWslkn9WtcvSm5RlHBStSUud2pKRTniU1/cbdR0pqqV1Qsmv4qvqU
/CoddsInm5LmYqvX9bOkpHs9o0ulpJVwt06LlBS+XRV7xlHByr1XGYqmJ/4u
6eMbdy017UB7Bz6lnPgpPUtazk29zs+Skm70jC6VklaKKemTCESpmxkeQErq
XH1Kmn7/735XTrw4JYXb9fGvN7TRugOdNOjcjcfnMittTUnhIplZUtKNntGl
UtLKkZS0/ISEJ7FbO5eJMCupiWH5aD35Yo1S0tZZ1LimA+0mutXDwbk1JUXL
p2YtU1gxQPXQGw/zjC6VklZqUtKn7jdKPIaU1LlUSrr+T0oaxWUdaE/Rp+gt
zYkXu5rPjTelpFTh/KzKZ0zG6UHhx48pd7d0GylpJZN39s3iAUYc2q/yyJSU
v6Y4IA+6sgOdQOhH6sZ1eZSeHpQyK233LElKutczulRKWspk3uiU6KxB8zIZ
dmjn8tfii122ydes6Kmu70C7jK5M1R/8HllF/lQ5Nf5d0iQl3ecZXSolQdGV
d7+c6LeFPivczQF50C0d6ExCP25MScsCW1NSmHoysyojkpTUwjO6VEqCIvc2
g5KSSLmxA+07ehCmpGnxlZizVpF/2p6JMHP51ev6Wa9NSZ1sSyfNOEhKgiIp
qXOpTyxvcdkmX7OiB7uxD688VKDGdOq/3lB5epwO/NvdldmnvuTxre5EJ9vS
STMOkpKgyC1N51pfajddlC/b5GtW9GC39+HtDYDZ8aMxmobyHx9JSS2E/f+5
4zbmGV0qJUGRlNQ5KYkdeuhD5xY6sfs4LOagTM25p/KX27f5/Uht1HLr6jfz
un6v0KrLKkhJUHT7OCVvkpLYrp8+7KclvNPW29Gz7mB/Lv7//qN/1MPfk8bg
alumXx8t1Vdy+/X04qsqsI+U1LkXns8dkMd11YdOMvTv9M/2paQWpCTgSm5g
OvfC87kD8rgO+7DDJvFyTb/4JCW1EKakeYqUBJxOSupczfl8vtD/WPyvBldS
5ZcTOzmfOyCP67MPj3+Fabrpx9o8SbtktFrL7fnoeSlpJXpCKO5cKenL75Kg
yP1G52rCyyr+RFNPdPr06/+Jo5PzuQPyuG778OAJZ99Hx9D0sVFqjbfno5ek
pHBifndv/ewxM7fm0tnDVTVKSoIiKalz+TNwODeVkn4sHjOlElYn53MH5HGd
9+Hu5q0+MT6pOTzWxclotepMbPlava6fFb6VkpYTQ6sClRGm/vNJKQkeSUrq
3NaUVB+gJt+4e7TOu7HyzLO6yZGSKErdG1/fjHxyKb6uLFYMSk8dKam9HE1J
q9OIlPSRkqDC7ZcS8lqkpOJcKekBhujGrY1MJSboIRkt7UhJ4SKpWVtTErPP
rpQ0LT5jnLLfypCS4Enm8wZ9yp9+M3PDWZNnSW8ySjduOgXNNzmjbB1Nre5+
uzJtTEnR8qlZ0+IreW/+xl1UKhwtC2xKSalktCQlwSP1eX1htjUlraJQOCv1
CZiU9DBjdWNla8faKBrpNhktbUpJqcKpWWHIkpJmmXw0F9iUkpZBKXXF3BeU
pCToXP/XmperCS81qSeanqSkBxuuG2vORcNtFGfJ3/d2aFNK2vcsSUqKKh4k
UtKXlARFA1103qnm3Bs+9J8CleV7OJ87IE8xaDdmmj3WTTKnGHenb01J+TQ0
Hftd0t2d0Zd9Kanyc0gpCZ5k0AvQe+w797b4k5LGMm43Oim93HCPjaJ2pKT6
NCQlHbHjs8fli6jOr6pRUhIUjX4lejwpiX1G78bR288mz0hGS5nwMm/p6vWO
WcWIJCWFXnhVjZKSoOhJV6VHSn1ydYvLNvmaFT3bA7rxAZtA3sXnlitNFfll
99+myh/ZvUdMUtLfk5Kg6KlXqMf7baHPCvdxNJ7oAZ3pBPU813/wcgspqVtS
0peUBEWPv1Q9lZRE0WM68zEb8mZvSEZLZz7FP+zuzujL3XvjFzf2g5QERbeP
U/LuPYGv5Bt5ysYer4TZk/rzrGOMK9WcPYBbSElQ5PrVuanj7wZUZqhNG3u8
EmbP68/nbdEjSUbQPykJilzLOtdnStr0pKlyMx2HK3ue9jVzd2f8g97aw9fB
o+X4wVa5oOMHvqQkKHLJ6NzUWUo6/UbaEZjys1v++T//33v4u3cH9R/l6lt4
gbu2/WAl0deNXN9LPI+jCN7glgsr9aZxUtIQN3UDmaSkQfzsn3/7b//bHv6u
2VOnj9+LDzDHM8c5iuAN3Kl2rreUNLdK3mlNShrFS1JS05G+qnZeUerFXD5z
LgqXja4LdnAUwRu4v71Xsf/zKWm+K/i+Xk5ZzlotkqqhPiUtGy8l7VOz62/P
R1JSjQenpCsHeCrLRFNPqlg4K1pPmy3gRR5wFPldEhS5v71XMWhk8sty1jLp
hDkoWiyctTUlrbaiZT89UM2uL4aXpdXEHW/vTUmVR1Gx365v2PS4lHRl94ar
Lr74pDNRatZyc5ysOO4BR5GUBEXub+81xawKFCPSakpmVuXrrSmJHWp2fc1T
nvB1+KI4sZ+UlL8/X8265vRVbNgzUlKx869xekrK1wP7POAokpKg6PZr4stF
b5WXO6U+JdUEKCmpHzW7/mBKipbMF+snJYWnpujJ6oIzWE3D6lNMOOUrfBtd
7+kpKbpFF5vSYSf6ovi2ssLLxMf5a1zc29d4wHZJSVD04JPYBS64uEw9pSQu
8zk1JYXFairvISXNvfFJ35a0bl5Nw3anpNXE6OvwxcGUFG7CvVLtyfT5Z8t3
6vL1tNNVJ9/okf3wgM2RkqDoeeeusRQv31PLlLTKPjXPkhwwZ6nZ9TX5ZZb6
Hl04t6bm1Fru8smmpNsbVh+RwsJTKQRV1l9MScs205p+Dj2pTx6wLVISFLlo
3iu84woLbI1CmVmpeJVaS+obd46Z42p2/aZnSZUTp6GeJa0KpBa8vWHHU1Km
kiMpKX+M0YLeznhM5zxgK6QkKHrMKWtQxf7P5JdU9pmCp0X1T5oqU1JNy8mr
2fXtUtKmoHRLSkoVqJl4fcM2fd1uVf5bbc2C9SlJMrqRbs97Rv88YCukJChy
Je1cPsLM90KZXw9lyocF6lPS3Lzr++QlWqek+qB0ZUraVOaa01dNnq2MMLN2
z5Kc0u+l82vopR5ISVDkktq5+hTT+i91nDiEGilGmPmWODVxeVseXSRaw10p
qdLqQ4C7m/N3alJMNBnlnzHtTkl398d76fx6+up2UhIUuap2rv+UNLfzsj55
icoHPRf82bl5Z6WkVCDalJI+BuN99Hw9fXU7KQmKpKTOTT2paeo13fIGk5Q0
iKniH+j+Ct9mZqWmFFPSxy3oTTLdvjo9Lk+qW8+0YbWbFtx3bCzrP+XoGv0Q
Hb39HykJKrizHdRvC11V6HA6i5Q0isoIc8Hf6j78xj55oZrPkVJvj+y4y3b6
uZWPfnyO3v6PlAQVpKRBdZuSPg6qk4SfMN/o7s7o2tRlSvo84kZuIMXeXg2l
1Osj6226x8+tfPSDc/T2f6QkqOAWqHMX3wznbW15oz6Brtw9Ln8Rbdst3fI2
xX6efv3V2BRLN6lKlgWmdBaOLr48NpaLRw+eVW1h5WFV4SKVR93QR+bQjf+S
kqDINbRzP/fOX//1f9fD347jxNEFPTAML1CZkj5BXPqUwkU0j0SXjcbk/NrD
/JUpsHWRvKEPy6Eb/yUlQZH72M4NnZLmTTi3T4CtDMPWDqakfCWZK/Vqevg2
WqA+BFWWrNmKfMvHMnTjv6QkKJKSOveAlPRxmJEW/SR8+Tb/UTn19F5T9Snp
k/2N0rJA+NSmuN5osVTYySS1+nCUqTNv6ANy6MYDldx4dO4ZKWnellP6hIcp
fqiev5+knt5rZ1NK+mw8qlfJpbLaTzrRRHNZtMCOZ0mVhj4ah248UElKulex
/5+Ukmq2lxfakZI8WtpNpzVSPJNnnt3UXAiWhcNqU5Wspi/f5l9HK4+KLlLR
YWMfikM3HqjkTuNeq0tMtEA+uXx9Xy+nLGdFyy8nXpaSllsNX9P2lJR6Sw2d
1sJYvZoZU5fVOVaPrQzd+C+/S4IiKeleU+xTwVWBTGxZxZ9o6olOX068PiV9
HHgsrD6XnifmC3wecaNyF113urG6VEo6aOjGf0lJUORm9V7Rzl/ulFSECaen
UlJxyi0pKbP5vE1qFBQLOH6O0Hvn6q0/iwMk+snDKSutrLO3HnsbKQmKXnKn
Mf0qNT10QclMaz9bUlJlJuoqJWU6gfdIjYJ8geIsivTeiTrpzMqB04POm/d4
UhIUPf4etfMNXLUtbO3jU1K0H3gVKelGOvAsnfSklEQlKQmKOg8RRwyxafMD
o8xzpdNTUv7tLSnps31/FZ/ZXaldtzxetA+XE4sFOEg3nqJ1N65GRDj9E4yL
uXy0hlVtqXrajbWhD7yhG/8lJUHRU+80RtmoYv9PZ/8uKT/3xpQ0b284Jbrq
nxP/3Z/9WQ9/oxxskOIYPu6CPswnoLAZy6STKlZZz+nb0q7aawzd+C8pCYoe
mZKetEWZCJPKPlP6UVE0SXWVkj7ZT0pXxW7PR1ISj/HIa8GVrklJ4evo86Ow
TPRFeKbNx6VzDX28Dd34LykJilwZO5ePMPN1LZxSnJWq4faUNG/459ev1YUF
bs9HUhIP42De7ZaUVPkMKAxH9YtLSVFDN/5LSoIiKalzNfnlmr/rj5Mw8a3m
3p6PpCSex/G8zzUpKfUwqDIl7ZjYaLtGP8xGb/9HSoIKUlLnpKR9KWleZPX6
+7ammJTEazmk92ndb6snQfPE5Rly9SJcJBqIwnpab9Hox9jo7f9ISVDhYSnp
SdvyFSaFG/Ww4csCxfBSfJ2fJSXxWo7qHVp32vU7pd0aRz/ARm//R0qCCtff
/Tb1pG3J+22hzwqPqAlr+1LS9PvHRlIS5Dmwt3pYSmq6uhGPrh4+PzyRlARF
Q4/x0JO2Je/ZKWlJSoK7OLa3avrw5bLrdesVDXpcRZs96LZ8pCSoICUN6j0p
aWU+YmsSTSYThRP3RSQpiWdzeG+lx/KG7p9V44feFikJiqSkQb02Jc12p6SZ
lAQ1HOGbPOyqeq7Re0ZKgld52Pn8SduSJyXtSEmrRTJfw5OSYMlBvpUeCz2j
T5ZbMfQWSUlQJCUxqMpQk/nZ0fFfJL0tJYW/EXuVu7v/ZnpgK8fPJ/t/Bh/U
vCGP2SIg5Unnrk/fZ63llWL+b/4yOgUP9zP7Kzr3mg655SiaNqakuX9Sb6Wk
lIfd5OymH7Zuezxt3qRRnwzaG5e5u9fPN0lJ8BoPO491uy3Tr8/oU6fZVLFw
Vr7+aA1NXd/z04Fcc+5ft0fdKZ69dfu8uU82bfvPwj8+P3r4e/Mu43QPu3EC
Uh422Pvclkyoqcw7mdf51UlJUtJuDzs5nOvNnZPa9ujZ7PZ8JCVxumcMf79L
gqJnDPZZn9uSadVdKWn1dYjo208szS1nFR9gpQqfQkpq7anbdZaX90/+3DVP
uT0fSUm08IAjSkqCooelpD71lpJW2ScfdqKJKZqewrfRVZxl6snpW3e7R27U
6Z7aS5XbtSoWLjVJSVzixpP/vY50mpQERccHGkWZHg5nTemMU3NuDBfZVGZK
xJzoi3BitIUOsOHYZfUe2Vf1G5Uf6VMsJc2niO/rcPo8a35dfBudIiU93ilh
YWhHekBKgqKXn2GukYlCm1JSuGwxj1yfkoqro3/n7rLpV6uJO97WNPiyM9sj
D+/VGJ9Hd/GMFM4K08oq10SnZyZGX6fmSkkPZp8u7egNKQmKHpaSut2WVJbJ
BJbwbXRKOGtTzkqVz79IzS1OZwin76/KY6w4sab+zMQWx+GTju0p5pMY8qsF
o7NWgSUTmlLRJjNXSnqth923nGVrt0hJUPSws03P27K861hNCWeF5fN7KlpP
tNpobZkFoy8+wY1T6oYqnEjnWuyp1cGWWVE4t9ieKX2LXpxy3CMP7PBclJq1
nB7t8HxKqslQmaWmX2PUtw2+cfd49mbKpp6RkqDoYbevT9qWbunkZ7sxJYXF
ahqTT0mrqH761j1yOOxISdFZ+ZQ075Hod/DyqafmC3tS0iPZlXn1/SMlQZGU
NKjfFi6u8D2d/E6NUlIYUsJb8dXcypakYleYnhodus8bEZldc2JKqvyiXc0T
KCnpJezHGpW9JCVBkZQ0qLtSUqMP5OlH62dJlRM3PUuKHpbRKfVtrvf44bB6
KpcvtppyPCXVfOlOSnoJ+7GGlARnedgd75O2Je/GZ0k8W1cpKSy2CkSZHORZ
0lm2PtRbTsnHomgOyk+Ukt7MfqwhJcFZpKRBSUk00ltKyjepmJJSdZ7o8aed
E1PS/Huir8zEzNtM4UyYatAxXGo1uleflizll920on011K/o+Nkp3GQpCc4i
JQ1KSqKR0wdR9NZlOTG8vcm/TdUcrfOzOMs1Ot09+7STufMMS4ZTMj8pOvGv
uKJn76OXyGeB43GjuMYWiqvYMfSkJDiLlDQoKYlG3jOIzqLHvqQkmpKS6svU
LCUlQZGUNCgpiUbeM4jOosdSpp7c3RkcNW1JScudHn29KpZ6kZkbNm81a1lm
dRCmmhF9HZ1VbEy8ExekJCg6cvmovjq93bm77EtKopHKI3bfgb0cEY2GRnRd
rVd0wVrg5VYDLfU2epKZgvySKhN9EV02HPjLWcsy9c2ob1W0klTnRElJULTj
RqLpzf8jtegxKYlGLggvl9UvJcFj1Kek1MTMrPyL4tx8mdWnpsVqUyGuWElm
SkhKgqKtd+/uB444sfekJBqRko6sEWhk6JSUavmOZ0mZSjJTgB3qU5LnR6c4
qxulJBpJHZ+rjzGjn3CmPucML+hhVeEi4YLh2lONWa0rWkOqJdECmWHrxAgX
yMSEz6/DPDUxPBVEF6ypKmxApkzqbbFkTZ35lgBH5K/+q5KtG/MSp/SklEQj
0eOz8ur/CVJP5UU/v8iyGfU3FWHNWzck3yeVc4FTpE4I4W3MamL4occndqJY
WRXOzM2vJV84VW10wXwl+b4CdggHV6rYBY15j+P9KSXRSPTgTF2Fp3S4mGK3
KDWLhNOjbSvWv2ldNe1McXqEC5w70J49bGu2zu+SoKgmJT37ZHKXg70qJdFI
5shMhYhMMKkPR5k6o20r1p+Zu/yctri4MyT0QEqqJyXBKaSku0hJ9CkfTzLP
YvIFdjxLijajvv6zJjpDQg9OHGirB8en1Lap/CnrPbgKKQmKmqak5YnortPR
BfY1SUqiT6mUtEooy6Gdeb2cmBddJNq21ayaSlaNj27pqp5MbxS7CzjdxWNt
0+p6Ow/UtEdKgqLorciqwO6a69eyu+ZO6tyx+ME1Skm0U39wbgoUx+u8/lZE
SoJOSEn1pCQ4RaOUlPoQ+BRS0kdKoiUpqX51vd0dwVMd+cw2+kx5nji/Xc0N
C0fnRivJv07VcxYpCU5xWUparTF1plq9CM8q0QL5empKRvshv1RqYr0j50Yp
iXY2HZktLvTROtvdUaQaUFmydWOAz7GxtrqaryambjCiLyoLh+VT9UhJ0K2L
U1I+7KTyS1g+fJupp+bcGI1I+aWijdxESqJbbv5r6CW4zMGUFL7ORJtPcInf
F6k+sTuE1Y1KC1ISnKKTlFR8EU5cnbgyi9eXDFtbE9My25snJdEzESBP/8CV
bkxJ9VV9YncIn8RHvqvpZ6msUEqCostS0u4PYVLlU6s4UrKyjJTEGzT9qHN0
egaut3vc1X9Muu/Sn0lJxXqkJOhWo5T0qT6TFF/Un2GOl4y2X0rizcSBkD6B
Wxy8IVndUWTeRguvZuWXLRYOlzqLlARnaZeSPrFTRzhx+Tb64pM+s22qp7Jk
tKmrE9rqxe5z3ZG+lZK4zMHj/Bn0ANxu9+i7eNjee5aoXLuUBEXFi/4Qg31Q
UhIjin568Hh39zrwd/YNxiuH8L2ni/q1S0lQVLwBGGW8j+jI1klJALzQ1kvn
ZZ913P6Jyqa1S0lQ1HNK2vpZbieRqv48KSUBwCa3h5E+be0TKQmKek5JS6lm
dNK8FSkJANrp8+p/lx29ISVBkZTUgpQEAE29/MeDB7ddSoKiRilpNXLDgRx9
uxryqxrCBTOFw7epbUkVrtmQ1EalCoSrTs0qkpIAYBbeSDzb3f0Nz1ccaztG
4vRrtJl+zRGZAsUXmQKZ1X3SQSlf/+63qdamOmoHKQkAABppmpLCt6sosTUl
rRaMVp5aXbFt0YZFa0sVDluS/8xHSgIAgA7dkpJS2Sdc5P9v7w6W5AShAIrm
/3+6s0glxQg8EH2OZM5ZTSsidjZ9S7tz472k4dqCaU/dh2puaVJJAADwQqmV
NMyHXk08X0nxwk69DFbbPPUalQQAAEmGlfRZDaX6dkxzy+HhtOaA5sjy5WGG
w2zN8cOlHk40HFwf2zxdeezJN/ULlQQAAEmCj/HlmOw1PHau91BJAADwTirp
u6gkAAB4p5lK+jwSSpMr+T9cv1KVBAAASebb5OckTLZb3kmVBAAASU5VklC6
7q73UCUBAECSs+0jlK648d1TSQAAkGThDlHvV7JpSnqvVBIAACS5/um9+s+F
+OKuf6kDlQQAAElSP8mTRyUBAEASlbQplQQAAElU0qZUEgAAJFFJm1JJAACQ
RCVtSiUBAEASlbQplQQAAElU0qZUEgAAJFFJm1JJAACQRCVtSiUBAEASlbQp
lQQAAElU0qZUEgAAJFFJm1JJAACQRCVtSiUBAEASlbQplQQAAElU0qZUEgAA
JFFJm1JJAACQRCVtSiUBAEASlbQplQQAAElU0qZUEgAAJFFJm1JJAACQRCVt
SiUBAEASlbQpUQMAAElU0qZUEgAAJFFJAAAAJZUEAABQUkkAAAAllQQAAFBS
SQAAACWVBAAAUFJJAAAApbVK+vVXc1c8f7klmKd5+J+/m0eVc04uFQAAoLZQ
EHW29GarZ+7tnQmueP4yoOZPAQAAcJBXSXEiDXed2jJTRioJAACYcWMl/bub
82nd2Wne62nO0xvce8Ru4W8AAICeuyopqKHelt6cvcGH86okAAAgwy2VtLal
97I3eOGJu0/x6w0qCQAAmHFXJdXqMcEMw1M0R85UUrARAACgduP3ksotk5XU
K6D48HjX8HE+AACAwNqjaMEzbGX41DeVDl84Ch6HqwfXRx129U5x9uoAAICf
TEcAAACUVBIAAEBpuZLmfySh96Dd2kkvfu1oePaHs1GiAgDA2yx/L+nUrvrX
GJZdz4rhDA+cAgAAeK2HK+kNAaKSAACAwEIlHcbXz7D1HooLnsc7/F3/bF1v
quBZvt6lzSyjed5gqcNlNA8MVlu/qwAAwDMuVlLzJlGzkibvMdX1EQ/ojWwu
bLilmTzBJQeLrM/VK7tTiwcAALLdVUm9AeWW3uC6Gj5fgyUY8GmlTXPm4Zrr
6mmuvFdA8SLjjYfLXPhHAQAA7vJkJdW7ZtpnOFVdK8EZZ+Y8W0kL95KC+etr
AQAAnnRXJcXp1Ns7X0lnR85XUn0P6Bsrabh4AAAg29oNi+btm3pXOaD85N98
WSqn7R3bPLBeWLCxt4x6kaeuIlhz7xLiQwAAgCetfRoPDvHZHgAA2NryPYvm
URIJAADYnSe7AAAASioJAACgpJIAAABK9W++AQAA/HC/AataOb0=
                   "], {{
                   0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 4->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
Nm3gEVLSY0hJp0ttyHL6waC0afoRc51NP6t5zK7/kpKgSEoalJRUX5uU1GFK
2rSNfZKSriQlne6RKam3RXomJUGRlDQoKWlThVJShylp02bu41nSQPIDc2tK
Wo33F6ak4olua0paVRg9qS7LLF+sXkcLh29TjYwWDkumGpxqRn6lmemDkpKg
qHgipU9S0tY6wwv6wQpPadjx+qeRU9KmLe3NVJGS5uNt9fr7tqbY21JS5o53
R5yJvn5PSvpkL/GZ6eFemH7NPqu3mReZAmGZVbFoZsm0KlqsvhmZlabWMjQp
CYqkpEFJSftq3pGSpmrnNrW+ZCqzLIXTw8LRMqvy0cWlpHyEKb7Oz3pnSlqN
qUlK2mjVe+E5KrUhUyJHLCsJy+RfLNc+BfEknJJqRrHwqmTY4Mp6UhWGE8cl
JUFReOZkCFLS7sqHOObrWxgNLHNsKb5OTdy07JGUtGlju3IkJU1/eGwkJc2i
KWl5l3tWSvrWuXpbX/8ovZ0JDpkCn0RSiKaMmqCRDyDtUlKqGZX1SEnAR0oa
lpR0pP7+D/ti85b3kGelpGL5zLqOpKSa7e1QVynpDXakpHDZ+fX3xert1mqj
lkfIvSWjB+1cLFrgUxcfwmWLJcMX0dry5YuFU7NqmpGvMDVxXFISFK3Oq4xC
ShpiLbtlbmDCe6ETnyVNsUC0mpVZ3dvUp5h8XEoV8yxpOXf3s6TVsnPl+76J
N0pvT0G4CKdElwp7fvpD0AinR6es9mD07aqGVW3R8qlVhy0J25Nqf7TZ0ZWm
emxcUhIURU8F9E9KytfQj1M6IVPblE1JS5XfuJuCTLRavMWzpOhWd246lpJm
UtJXfuBMJ6WkKfEs6akpKX/qOFj58XrG8rAtlZKg6MiNHDeSkvI1/MVf/Jse
/g7eh9RErXxKyuSgTSmp8lnS7o1dbs7xSq6xOyWtFpzSX8N7YUrKzN2dkqKJ
aTrwjbsru2W3mlPHkcpPqWcsD9tSKQmKpKRBSUn5Gm7PR0dSUk04WhY+NyWF
D4/yC0pJ9UEpn5L2RaTHpKS8rSlpHkSrKX8U/F5pVewxKano4IZsOk3tq/xI
gRYes+u/pCQokpIGJSXla7g9H+1ISau7jstS0hR7VBRNSfmgdNaZZJQz0r6U
NO/l1FspKWprSmr395je7jxlFAtvPVUe95hd/yUlQZGUNCgpKV/D7fmoPiWl
PpI9mJKmQGb6qswqUkUXb5eS6rf9XvsSTYu/IbrrICnpdFLSVo/Z9V9SEhRJ
SYOSkvI1FMPLUmr6PHdVMlxwR0qaKznYD9HAcsvfuWeS/s9LUtKVpKTTnT5g
5xNa9PXqjBeeAMMCn19vUcLy0aWii5yysY/Z9UCl/H0a3ZKS8jXU5Jfwdc2L
1eutKakYjrb2w1NTUn0P3CW8/bvR3Z3R3N0d/Iu7O+McJ27I9Gu0WVVeMzdV
JrNs/Uqnk4LSY3Y9UOlJ5/xXkZLyNexLSTVTaioPU9KO+6vKwm1uA3fas7cO
9wCww4njK6xqqotLn0UaWlWymhKeZzIvinN3cDqCF2pxb8MFpKR8DY1SUk3N
q6V2D7FrBmZ0Lf2cFjppBjzSWeMrdRr5VKek+fWqTCbjSEkH+V0SFPVzO8Qm
UlK+hvr88lWTkrZGpHmpu/rh4Io6OTn00AZ4pNNTUvQh0aZiqRc1j5CkpE2k
JCjq5EaIraSkfA2bniUV3x55lvTZO8puT0nz3NtPEbc3AB7pxJEVPVGspqwe
FVW+DV+kClTWs3sDdy/bJykJinq4BWIHKSlfQ6OUtDUorT7b3DTcOklJc5l7
TxROU9BC05H1mGH7mA1ZkpKg6PabH/aRkvI1tEtJm4JSdFsq49KVA7NyXfee
LpypoIVGI+sxA/YxG7IiJUGRlDQoKSlfQzG8rETnpqZEl6pPSct2Zgp0mJLm
wrecNJypoIXTR/ST7isesyEhKQmKnnQ2exUpKV/Dpl8Ptfur/zJbWLLblDQv
cv2pw8kKGjG4Qs/uEykJiqSkQUlJ+Rpuz0f1KWnZ7GX5zlPSvODFJxDnK2hk
9YT97ubc4z09ICVB0RtOBY8kJeVruD0f7UhJc+NvuUYfWd3FrXXKggtMr3R3
r19HSoKit50WHkNKytfQj4NbcbArNq3ueA2XNfjKngF4HikJii6+E+MsUtLj
TYv/x8cFfXLWKsZqLcA7SUlQJCUNSkp6vFU/XBCXTqxcUALomZQERVLSoKSk
x0v1Q7sxe261F5xbHCoA+0hJUCQlDUpKerx8P7R4tNSi5wd6/gXwHlISFElJ
g5KSHq+yH84dwu2eUrXbrQ4YgK2kJCiSkgYlJT3epn4469FS6+c+Q3xXEODx
pCQokpIGJSU93r5+OBiXrvlXF05fi2MGYBMpCYqkpEFJSY93sB92D+1r+v/e
H1U5xgCAPClpUFLS453SDzseLV3Z/3f9qMoxBgDkSUmDkpIe765/l/v6/j/x
LLRjG+e1OxkCADM3BoOSkh6v3b/Lna/5rv4/61yUqWSKWa3a4Qe8gd8lQZGU
NCgp6fGa9kN+4N+4C045IxVrWBVYPVo6uHaA/klJUCQlDUpKeoPWXZF6tHT7
Ljh4XpKSAPKkJCiSkgYlJb3BZV2xikud7IIjZ6dN3yrscNsBmpKSoEhKGpSU
9AbXd8XypzoXrzqlUVAKSzoZAu8hJUGRG4NBSUlvcO8/pNDPjtjdmMw362qm
AzyVlARFXd0LUU9KeoN7/xWFT2fnh32NWX6VTkoC+JKSoKiruyDqSUlvcG9X
rPJFJ/tla0uWcS+6YFdbB3ANKQmK3B4MSkp6g05S0nJKJ3tnU0umXzVtGMAQ
pCQoctswKCnpDXpLSfP0Ts4bNc2YAte0DaBnUhIUuW0YlJT0Brd3Rb4BneSO
4lfppCSAFSkJitw2DEpKeoPbu6KyAT2cRqJtEJQAoqSkGpnLR/Tt6vricjM6
9wyDkpLe4Pau2NSAHjJIZVa6pW0A/ZCSKmWCTzETudyMzj3DoKSkN7i9K/Y1
4PazSjEr3dIqgH5ISZUy2Sd8nBQWc8UZmnuGQUlJb9BDV+xuw+2RJJ+VbmkS
cLp5RBvam0hJlfIpKXy7KuaYHJqzyqCkpDfooSuOt+HeYJLKSrc0BmhhOcyL
ozv8Cu6N2vdNkpRUKdxNU3CwTbFAFBZjOLePU/aRkt6gh644sQ3HzzZX38Fk
ndUtUOPf/MVf9PN3d2esLcdjcWz+LPBP/+n/0sPfvacRKalSuJum6pTkejE6
u29QUtIbdNIV5zaj5qqRmvtz+o/Pjx7+Otk1vMfPbDL9HAEd/PWQklanESmJ
dmpS0qfuN0oMR0oalJT0Bp10RaNmZE4+qVlSEq8lJWWkElOq8O35SEoaSCbv
7JvFQKSkQUlJb9BJVzRtRvhoKfMtBSmJ15KSMubvO9UMTCmJelMgnLWcEp1V
8w0K+mTHDUpKeoN+uuKClsznotQl6SMlZdXfImZy6EAetr3F5klJGeGJItOZ
qZT0XWr19jslvFVeFgsrSRXuKiX5XRIUdX7hIEVKeoN+uuKylkTvMZZzb89H
naekfBwI+7PDDan0sO0tbk59Spr/jYXv61SBaPknpaRUZ+ZjS+ptzevl2/CF
lNSznk8O3MiBMSgp6Q366Yp7U9K89lVKWpVZTYxGm3lWtECm/HApKTy3p+4Y
O9yWGg/b3uLmVKaYMP4Ui6XC1CgpKeyufGdO2dgy1aWh5cTMrJ6/cSclLWWG
3qYyPIx9PSgp6Q266oprGhO9vZlPU1MQWJZTpkVQiuaaVfwpRqTo67FS0vIM
n7n0X9jM0zxse4ubUxNkwjKZlLTKU+OmpFDxNJJ/ljTFHgNlJkYrzKxFSupQ
ZugtC6Te8lR29KCkpDfoqivOakymnsy9zWxfSqqZUpmYoo+x+pfp+XlusYbK
3XRvybnwlN7e4Xz2pqR8LJqnbE1Jd/fHUcVv3E1B/IkuPqW/VpdZi5TUoczR
8kncKkcn8jD28qCkpDfoqivOasyReqbzUlLq+3XR8tEKT+mNE6Wu78sCqQUv
aeDJHra9xc05kpLCNLR68YZnScu5+1JS9FnSbGtKijaSbqWOtKsOau6R2fv0
TEp6g9664pT2TNP6ucCn+kQ0ZZ/pHH9yNCV+shSdcrwrzlW8pkenj3sJeNj2
FjfnlGdJ70xJ4dxiSppTTCb1rKbk33qW1LkgFf1y5KT2VJ8nE07U7SWDPCnp
DXrriiPtSV2DlqegYv1TXfypLFaZklKr2N0VjdSczMNLf4cbUulh21ts25Hf
JWWeJYVfxntMSsrMrUlJqWdJUtIjFZN1aqn2TeNOPV81yJCS3qC3rjilPatK
aj6vWxY4KyXNgegrlZJS8aq3XVMvfzPwPI/Z3n3/xl3xRfEh1IgpKS+VX+aD
JPotu3DWckr+rZTUv2KyjkanoU8p1LCXByUlvUFvXTFoSqrPPqli0fUe7wqo
t+//lxROXP5JSff+SUkDWd0tu3l+CTt6UFLSG3TYFcebFKakecrWlDR/YBud
GM6Nlk+lpFQlUhK32BRkmv5JSVLSO60uCp8ur9GcS0oalJT0Bh12xelNmq81
NTXnA87xv/r6O9w1VBr0qiclnUVK+pKSjhvxTMImg14vkJJeorfeaJSS6gtL
SRwRfXA5xN6Uks4SPm6+0Y39ICWd4t6dSGu3j1P2kZJeosPeOLdJm2q77VYm
5sRO4HrLPTjE3oz+sOiuv7s7gxNISacY4uzBbi73g5KSXqLD3jixSXcljg57
tbVlV4t7n1+/6vnyruCdpKSzOHU8mEvDoKSkl+iwNzps0lYP2IQdUk9PXtgb
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
Zs87ep+3RfVO2XYpqVIm+BQz0Sl7andKOmvtxyu5fRW7ufQPSkp6IT3TVE33
iksM6nkH7fO2qJ6UdKVM9gkfJ4XFWgSl+qVOLHaBfloyc8UflJT0QnqmtU1X
n5qTpxMsnVjdy833b+Men8/bonqnbLuUVCmfksK3q2JnHZBbg1L92vsZMv20
ZPaSU8rzSEkvpGda29HD+cvWjk//4ERTzOfXS/9YB+fztqjeudsuJVUqpqRP
IpKcfkAeT0nhMbOqMPp29WK1UZWzMvWELUm9vt6Nq+YIKemF9ExrB3s4PJmH
9zNwi9T9WzhrFM/bonqnbLuUVCns0mgcCEu2OPnXVxg2MjU9WrIy8tTMytRT
04BwE67k2j0oKemF9ExrZ/XwlFZZ7HqnbLitu0Vlg1Nvwxpu3p5fnbJFw21d
3rR325dOT0k3d+WvDm7LartSU6Zfe35K74jWTYqWifZG2PjU5tz4IjXxeqcf
TlxDSnohPdPa6Rey/OX75+sfnx89/LU4tKYH/X+Ho1t3+17btO/CO6XMTcjP
Kb/99lc9/GW2btMWrUr+i3/x3/fwt/vI3L3tSy1S0v/wx3/cw1/TSFIZhZqm
pKKahnWekua3UhI7SEkvpGdauyYlLa8It99jS0m7t+72vXZk3823H9HFh0hJ
m7ZoVfL2fHQwJe3e9iUpqXKjomfv5azllOissGRrUtJZpKRBSUkvpGdayAeZ
FjXP9U+D32kXN//2fCQlZdqfn3t7PtqXkipL3p6PWqSkraSkpypmtPBKlCqc
unItX2RmpSopLr5saruOqhE2iSFISe+kc04XPYEf7+eaSqbB77SLW3d7PpKS
Mu3Pz709H0lJ9fbVIyXRv9t3pZQ0KCnpnXROCy1SUuV6b7/H3n2nXeyl+pS0
6vkeUlLN1t2+1w7uu8yCw6Wk/MfRYeHb89GJKemyU1ZNx96ej46kpMqPti64
TLgz/+qhE+yLQUlJ76RzWmgUkYoVfu+0V6uuvzeey89LRatK1b+q4cjWRRef
tuSdZeFNCzZNSfmt25pl6vfypoOh0dbNIeUrDC/z9CkQLhjWE60zumCLrdua
ZVaiBW58lnSNmo7dmmXCKUv5wo1SUn4Dl9NTxY4rtuTx+tnwflrCJlLSO+mc
RlpclcKbq9UqpkWQWd701twYr+6oU7NSE8MaTtm6VYHHpKTo1u146FOzl6N7
rWlKim7dKhBFU1I08kyLgJPKRPV1Ntq6HXEm+jo/8dkpKdqxB1PSauL8+ruu
i1PSagPD7U1NPK7Y1fX1nN62t2m0i2lNSnonndPI8etRsc5wFdOulBQWSC1e
Wf++Tc5v2ueklPStcPV2U80npqTV1rVOSfXVtti6MK0Up0SfDRXnFh8ttdi6
IylpX4EOU9LW3yXVdOzWiBQuMsVS0i3PklYbmKqzxU4sdnV9Pae37W12dDs9
kJLeSee0s+8yVFNh6jI3ZVPMt/Aqy6wmVt6KRycu32Yuyvt8tqekWRiXvi9W
b/dVfuLWnZWSvnWu9vKmalts3b6UlC+2LyW12LrdKWn54vt69d9NlZ++dTf6
dJaSGm1j/Xk+XOqskvUXoI97hsM29Tn9kJLeSee0s/UaVFlb5gI3xX46FA04
UyI6hffVYVWZhDVP2bHVNVu341nSaqm55vC50ojfuIvumkykray2xdalEtCU
CESz/Nfq7nqWtCqwIyXNVhOX6WlrzTu27kSnPEtaFdjxdbsp+P3RLJWe7vrG
XWqpHes60pL6SsLmzVVNQSiLFki1ZHerhvOSzXweKemddE5TB8+H4RUtf42b
snfI84Lh44aDz4+id+9HNja1dQdTUmripppPSUmZfbcpzkR3x3JH35KSogW2
pqRznyUtK2yxdcefJYWv91W7detOdDAlRQvse9xTk4a2Vr6jQ/IbWD/xuGJX
V1ayerGs/LPIQWH5zKyw/mdrtItpTUp6J53T2qYerrltyJxjp3RKCl+Et9M9
pKR8gR0pKRqOpsPfuGuxdaekpPweb5qS8gX2paRU0tmUklavW2zd7pSUmji9
5llSvsDWB0n136yrr/xgSqov0O7++ZSaU9em6dfIExbb9OLx2u1lmpKSXkv/
NDL9qqZYTZ35uanb5tWs1Nt8IKq88W50FZi2//+SwgdGU8wF37ir2brdKak+
FzdKSTVbV5Nf8pEnU6CmqrmSFlt3MCVNQSaaYg+bHpaSiqbBU1LlNm66BNxl
SiSjTywlZZYNNzO11FN1vqNJkZJeS/+0sDoTLt+2uyzOkedrFVuiomXCifli
4fQWB9XU4P8Pu++v0dZtzTLRXZPa3Z2kpLk9YYSZp4eNjy6Yf7uavqynxdZt
jUgry4nR11JSzXftwrerWalFbkxJo5i2p6TMi7Cq9/Tw98C7uxVsJiW9lv45
XfQ0OF+Xm6536/OIRn+N7kVvz0f9pKTh9l30x0TX//WQktr9vTMlXfD38qvk
6uK1fBu+/vx6Bcwsu6z/sm25nZQ0KCnptfTP6VJd2rqrH3+nfXs+kpJ2b93t
+UhKak1KIi/6BOrzspsQKWlQUtJr6Z/T3ZiS+mHrbJ2tu97pW1evRUrqxyld
9HJTLBm9rW8dToOSkl5L/5wu1aW6Gniq01MS12t9kVqmznfmhXdu9QNISa+l
f04XPQ06NwIPJiUNrfjUzGO1U+jDQUlJr6V/WlidCZ0YgWeTksZV+d1CV7Hj
3AwMSkp6Lf3TiK+1A+8hJQ2q/jrlQnac+4FBSUlvpova0bfAG0hJwwn+jYra
lLT8bdG+WeGLsFXR1s6Fo1/YSNUfrblm7aeHGilpUFLSm+midvQt8AZS0ljC
iFSfkj7ZpJOfFb5YZZ/o6qKFw6Wi6SZTc2rtqWqPk5IGJSW9mS5qR98CbyAl
DSQakbampBYviikpbP8nFj3Cemoav6qnvmfqSUmDkpLeTBc1pXsB6MroKSm1
RammVjZ+WU+La7eUNCgp6c10Uc3FItVLq0+06hcEgBuNnpJWSy1f1NScrycf
yvaRkgYlJb2ZLvoEnZA5P6cmbo1XAHC7mpS0+jxw9Xo5MTVrVU++cPQSHNaT
an+43lQNqcaHaznF6RVyDSnpzXTRpxSL5hNp/SL5iQBP4ndJQ3vYdarbzZGS
Nlkl2cpFMlVl6q+s5yxS0kB00eeklFRZM8DDSEnDefC1qdtNk5Lqnf5QLxOg
dix1kJQ0EF30qUtJqYnz29SHFWc2FO4zvdvd3d81KWk4Tz2kex6w3TasN2Ev
He+3VA35mhvtLylpLHopPySjd0qVo1jfMrqe7zqupB8ypKSx1B/GrQ/73ZWP
OBKdQCpleilzQM7Tly9Wdc5TVmWWda7qWU1P1bCJlDQWvZSJPKtZqenRKamJ
MAoHcEifhKSksWw6hlsf8JsiW9OWtCYlVap57pO/4wojTHTKJ8hHxRfROreS
ksail1JRaPesmunQMxf0DJ2zIiUNZOuhKyWdxXmj0ikpqfJFKv6kXqQmbiIl
jeXlvTQFwlnRt6tlM/W3azw04rjN0z9LUtIodhy3xUve8lP61Ef3+aXylYQ1
ZK7Lq2q7kr9VYBb2UrhPo8fVjhdhnfkXqYmbSElj0UtN6V6G46CtoZdmUtIo
jqSkzM1h6k41c3ObX7C43vwtbp9BSUqqV0wl0Z6UkrZyQNbQS03pXsbiiK2n
r76kpCHsO1wrU1Jl+fpb05q11K+3B1LSJqvnRJmJq1nLMpumhKtITc+3pEhK
Goteakr3MhZHbD199SUlDeFgSvqk7/OlpBpS0qBODzVS0lj0UlO6l7FEb06i
1/fo9Eyx45/L7b7Na3TjZHR/SUn9232s1oyd6BA7KyUdrKcfUtKgpKSX00tN
6V4GkjpcMymppob8zUxmvWdpVL/R/SUlde5IRKr5NGPOLPUfg+Q/PAkrXL4N
y0RX1Fsq6a09VJKS0FHt6FsGkklJn1iuWZWPTowuGH3RjpTUlJT0BpmPNQyE
GlLSoKQkdFRTupdRXJ+S8qMj9cnwFAjXEm1t+CJc16YBa3R/pKR3kJIOkpIG
JSWho5rSvYwin5I+QbRJ3SyF08MAUrxnSD11ik5fzso8rqpfpJLR/ZGSXiP6
McKOzxbeSS8NSkpCRzWlexnF8ZSUuo9K1ZkZHal66kNQZcnMFhUZ3R8pqWOn
HJ/L0ZSJSKlh3i4djDX6pKRBSUnoqKZ0L6M4kpIyySiTkjIrnedmngRVNq8+
WGVakmre1kWeR0rq01kRafk6Na6jw2f3hw+V7RmLlDQoKQkd1ZTuZRTFlFT5
Oj9ra4FUCEqV3JGSdg9So5tuHT84NwWfminHjTvipKRBSUnoqKZ0L6Oo+c7M
6uHLnDJWZVKzUnVuKpN/vZyYF13keI/B7U45MjOVFOvPj/HU+A0rz58EipVv
2t6mdpxeuFLlVeMal23yZSvqx772n94nzHQvoxjiWJ1+vYO6t84heowXOuXI
XFWyvM2oqX9KpJ5lbavXq/rDGsKq8pX3M0J336FxjZ9758fnRw9/lx0nV67o
n/yT/7WHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzEVd7ZkZLq23kNKalz
UlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHHbicl9eaWlFRZeFNK
OvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQU9uRkrpy+qcHqbfF
MSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH5LSQmpVZqvg2fB2+
yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4UwxdzcKklocn6nbldRd
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
0nz5i05czl2VDBdMVXJuSqpf3AF5xCm9ZxeQN21PSalFRklJ84aHU6KX0Z9T
fnx+9PBnOK+kksu8K6PfslvNShVYyUSk21OS3yVBkZTUuVRKCtNNOHGZjDJl
UokpXOrghpxektBZvefMQEZl5NmXkqIhq5OU9En8jltKGkgxvFz2JyVB59wL
de5ISsrkneIiTVPSfNSl7i6OrOjlzu09+4KoVcb5CjPOPD0sE87KlEmt65aU
NPdAaFXg9nwkJUVJSV9S0lJmOEffhuP9urZyoehtKv2Y9qakKftUaEfa2nec
pO4llgees82JTu89pwhCU+I7ctf/3Xtw5u+sbs9HUlJU9Kp0lxv7QUpamdK3
IplZqSk8w+3jlLxpe0qa7U5Jq8VbfONu0/mHeo16z05haZKS0jfb89zb85GU
1MgzulRKWslkn9WtcvSm5RlHBStSUud2pKRTniU1/cbdR0pqqV1Qsmv4qvqU
/CoddsInm5LmYqvX9bOkpHs9o0ulpJVwt06LlBS+XRV7xlHByr1XGYqmJ/4u
6eMbdy017UB7Bz6lnPgpPUtazk29zs+Skm70jC6VklaKKemTCESpmxkeQErq
XH1Kmv7w735XTrw4JYXb9fGvN7TRugOdNOjcjcfnMittTUnhIplZUtKNntGl
UtLKkZS0/ISEJ7FbO5eJMCupiWH5aD35Yo1S0tZZ1LimA+0mutXDwbk1JUXL
p2YtU1gxQPXQGw/zjC6VklZqUtKn7jdKPIaU1LlUSrr+T0oaxWUdaE/Rp+gt
zYkXu5rPjTelpFTh/KzKZ0zG6UHhx48pd7d0GylpJZN39s3iAUYc2q/yyJSU
v6Y4IA+6sgOdQOhH6sZ1eZSeHpQyK233LElKutczulRKWspk3uiU6KxB8zIZ
dmjn8tfii122ydes6Kmu70C7jK5M1R/8HllF/lQ5Nf5d0iQl3ecZXSolQdGV
d7+c6PeFPivczQF50C0d6ExCP25MScsCW1NSmHoysyojkpTUwjO6VEqCIvc2
g5KSSLmxA+07ehCmpGnxlZizVpF/2p6JMHP51ev6Wa9NSZ1sSyfNOEhKgiIp
qXOpTyxvcdkmX7OiB7uxD688VKDGdOq/3lB5epwO/NvdldmnvuTxre5EJ9vS
STMOkpKgyC1N51pfajddlC/b5GtW9GC39+HtDYDZ8aMxmobyHx9JSS2E/f+5
4zbmGV0qJUGRlNQ5KYkdeuhD5xY6sfs4LOagTM25p/KX27f5/Uht1HLr6jfz
un6v0KrLKkhJUHT7OCVvkpLYrp8+7KclvNPW29Gz7mB/Lv7bb3/Vw9+TxuBq
W6ZfHy3VV3L79fTiqyqwj5TUuReezx2Qx3XVh04y9O/0z/alpBakJOBKbmA6
98LzuQPyuA77sMMm8XJNv/gkJbUQpqR5ipQEnE5K6lzN+Xy+0P9Y/K8GV1Ll
lxM7OZ87II/rsw+Pf4VpuunH2jxJu2S0Wsvt+eh5KWklekIo7lwp6cvvkqDI
/UbnasLLKv5EU090+vTr/4mjk/O5A/K4bvvw4Aln30fH0PSxUWqNt+ejl6Sk
cGJ+d2/97DEzt+bS2cNVNUpKgiIpqXP5M3A4N5WSfiweM6USVifncwfkcZ33
4e7mrT4xPqk5PNbFyWi16kxs+Vq9rp8VvpWSlhNDqwKVEab+80kpCR5JSurc
1pRUH6Am37h7tM67sfLMs7rJkZIoSt0bX9+MfHIpvq4sVgxKTx0pqb0cTUmr
04iU9JGSoMLtlxLyWqSk4lwp6QGG6MatjUwlJughGS3tSEnhIqlZW1MSs8+u
lDQtPmOcst/KkJLgSebzBn3Kn34zc8NZk2dJbzJKN246Bc03OaNsHU2t7n67
Mm1MSdHyqVnT4it5b/7GXVQqHC0LbEpJqWS0JCXBI/V5fWG2NSWtolA4K/UJ
mJT0MGN1Y2Vrx9ooGuk2GS1tSkmpwqlZYciSkmaZfDQX2JSSlkEpdcXcF5Sk
JOhc/9eal6sJLzWpJ5qepKQHG64ba85Fw20UZ8nf93ZoU0ra9yxJSooqHiRS
0peUBEUDXXTeqebcGz70nwKV5Xs4nzsgTzFoN2aaPdZNMqcYd6dvTUn5NDQd
+13S3Z3Rl30pqfJzSCkJnmTQC9B77Dv3tviTksYybjc6Kb3ccI+NonakpPo0
JCUdseOzx+WLqM6vqlFSEhSNfiV6PCmJfUbvxtHbzybPSEZLmfAyb+nq9Y5Z
xYgkJYVeeFWNkpKg6ElXpUdKfXJ1i8s2+ZoVPdsDuvEBm0DexeeWK00V+WX3
36bKH9m9R0xS0t+QkqDoqVeox/t9oc8K93E0nugBnekE9TzXf/ByCympW1LS
l5QERY+/VD2VlETRYzrzMRvyZm9IRktnPsU/7O7O6Mvde+MXN/aDlARFt49T
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
8tEaVrWl6mk31oY+8IZu/JeUBEVPvdMYZaOK/T+d/buk/NwbU9K8veGU6Kp/
Tvztt7/q4W+Ugw1SHMPHXdCH+QQUNmOZdFLFKus5fVvaVXuNoRv/JSVB0SNT
0pO2KBNhUtlnSj8qiiaprlLSJ/tJ6arY7flISuIxHnktuNI1KSl8HX1+FJaJ
vgjPtPm4dK6hj7ehG/8lJUGRK2Pn8hFmvq6FU4qzUjXcnpLmDf/8+rW6sMDt
+UhK4mEczLvdkpIqnwGF4ah+cSkpaujGf0lJUCQlda4mv1zzd/1xEia+1dzb
85GUxPM4nve5JiWlHgZVpqQdExtt1+iH2ejt/0hJUEFK6pyUtC8lzYusXn/f
1hSTkngth/Q+rftt9SRonrg8Q65ehItEA1FYT+stGv0YG739HykJKjwsJT1p
W77CpHCjHjZ8WaAYXoqv87OkJF7LUb1D6067fqe0W+PoB9jo7f9ISVDh+rvf
pp60LXm/L/RZ4RE1YW1fSpr+8NhISoI8B/ZWD0tJTVc34tHVw+eHJ5KSoGjo
MR560rbkPTslLUlJcBfH9lZNH75cdr1uvaJBj6toswfdlo+UBBWkpEG9JyWt
zEdsTaLJZKJw4r6IJCXxbA7vrfRY3tD9s2r80NsiJUGRlDSo16ak2e6UNJOS
oIYjfJOHXVXPNXrPSEnwKg87nz9pW/KkpB0pabVI5mt4UhIsOci30mOhZ/TJ
ciuG3iIpCYqkJAZVGWoyPzs6/oukt6Wk8Ddir3J3999MD2zl+Plk/8/gg5o3
5DFbBKQ86dz16fustbxSzP/NX0an4OF+Zn9F517TIbccRdPGlDT3T+qtlJTy
sJuc3fTD1m2Pp82bNOqTQXvjMnf3+vkmKQle42HnsW63Zfr1GX3qNJsqFs7K
1x+toanre346kGvO/ev2qDvFs7dunzf3yaZt/1n4x+dHD39v3mWc7mE3TkDK
wwZ7n9uSCTWVeSfzOr86KUlK2u1hJ4dzvblzUtsePZvdno+kJE73jOHvd0lQ
9IzBPutzWzKtuislrb4OEX37iaW55aziA6xU4VNISa09dbvO8vL+yZ+75im3
5yMpiRYecERJSVD0sJTUp95S0ir75MNONDFF01P4NrqKs0w9OX3rbvfIjTrd
U3upcrtWxcKlJimJS9x48r/XkU6TkqDo+ECjKNPD4awpnXFqzo3hIpvKTImY
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 5->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
ISU9hpR0utSGLKcfDEqbph8x19n0s5rH7PovKQmKpKRBSUn1tUlJHaakTdvY
JynpSlLS6R6ZknpbpGdSEhRJSYOSkjZVKCV1mJI2beY+niUNJD8wt6ak1Xh/
YUoqnui2pqRVhdGT6rLM8sXqdbRw+DbVyGjhsGSqwalm5FeamT4oKQmKiidS
+iQlba0zvKAfrPCUhh2vfxo5JW3a0t5MFSlpPt5Wr79va4q9LSVl7nh3xJno
6/ekpE/2Ep+ZHu6F6dfss3qbeZEpEJZZFYtmlkyrosXqm5FZaWotQ5OSoEhK
GpSUtK/mHSlpqnZuU+tLpjLLUjg9LBwtsyofXVxKykeY4uv8rHempNWYmqSk
jVa9F56jUhsyJXLEspKwTP7Fcu1TEE/CKalmFAuvSoYNrqwnVWE4cVxSEhSF
Z06GICXtrnyIY76+hdHAMseW4uvUxE3LHklJmza2K0dS0vSHx0ZS0iyakpZ3
uWelpG+dq7f19Y/S25ngkCnwSSSFaMqoCRr5ANIuJaWaUVmPlAR8pKRhSUlH
6u//sC82b3kPeVZKKpbPrOtISqrZ3g51lZLeYEdKCpedX39frN5urTZqeYTc
WzJ60M7FogU+dfEhXLZYMnwRrS1fvlg4NaumGfkKUxPHJSVB0eq8yiikpCHW
slvmBia8FzrxWdIUC0SrWZnVvU19isnHpVQxz5KWc3c/S1otO1e+75t4o/T2
FISLcEp0qbDnpz8EjXB6dMpqD0bfrmpY1RYtn1p12JKwPan2R5sdXWmqx8Yl
JUFR9FRA/6SkfA39OKUTMrVN2ZS0VPmNuynIRKvFWzxLim5156ZjKWkmJX3l
B850UkqaEs+SnpqS8qeOg5Ufr2csD9tSKQmKjtzIcSMpKV/DP/kn/3sPfwfv
Q2qiVj4lZXLQppRU+Sxp98YuN+d4JdfYnZJWC07pr+G9MCVl5u5OSdHENB34
xt2V3bJbzanjSOWn1DOWh22plARFUtKgpKR8DbfnoyMpqSYcLQufm5LCh0f5
BaWk+qCUT0n7ItJjUlLe1pQ0D6LVlD8Kfq+0KvaYlFR0cEM2nab2VX6kQAuP
2fVfUhIUSUmDkpLyNdyej3akpNVdx2UpKfqoKJqS8kHprDPJKGekfSlp3sup
t1JS1NaU1O7vMb3decooFt56qjzuMbv+S0qCIilpUFJSvobb81F9Skp9JHsw
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
Tw7cyIExKCnpDfrpintT0rz2VUpalVlNjEabeVa0QKb8cCkpPLen7hg73JYa
D9ve4uZUppgw/hSLpcLUKCkp7K58Z07Z2DLVpaHlxMysnr9xJyUtZYbepjI8
jH09KCnpDbrqimsaE729mU9TUxBYllOmRVCK5ppV/ClGpOjrsVLS8gyfufRf
2MzTPGx7i5tTE2TCMpmUtMpT46akUPE0kn+WNMUeA2UmRivMrEVK6lBm6C0L
pN7yVHb0oKSkN+iqK85qTKaezL3NbF9KqplSmZiij7H6l+n5eW6xhsrddG/J
ufCU3t7hfPampHwsmqdsTUl398dRxW/cTUH8iS4+pb9Wl1mLlNShzNHySdwq
RyfyMPbyoKSkN+iqK85qzJF6pvNSUur7ddHy0QpP6Y0Tpa7vywKpBS9p4Mke
tr3FzTmSksI0tHrxhmdJy7n7UlL0WdJsa0qKNpJupY60qw5q7pHZ+/RMSnqD
3rrilPZM0/q5wKf6RDRln+kcf3I0JX6yFJ1yvCvOVbymR6ePewl42PYWN+eU
Z0nvTEnh3GJKmlNMJvWspuTfepbUuSAV/XLkpPZUnycTTtTtJYM8KekNeuuK
I+1JXYOWp6Bi/VNd/KksVpmSUqvY3RWN1JzMw0t/hxtS6WHbW2zbkd8lZZ4l
hV/Ge0xKysytSUmpZ0lS0iMVk3VqqfZN4049XzXIkJLeoLeuOKU9q0pqPq9b
FjgrJc2B6CuVklLxqrddUy9/M/A8j9neff/GXfFF8SHUiCkpL5Vf5oMk+i27
cNZySv6tlNS/YrKORqehTynUsJcHJSW9QW9dMWhKqs8+qWLR9R7vCqi37/+X
FE5c/klJ9/5JSQNZ3S27eX4JO3pQUtIbdNgVx5sUpqR5ytaUNH9gG50Yzo2W
T6WkVCVSErfYFGSa/klJUtI7rS4Kny6v0ZxLShqUlPQGHXbF6U2arzU1NecD
zvG/+vo73DVUGvSqJyWdRUr6kpKOG/FMwiaDXi+Qkl6it95olJLqC0tJHBF9
cDnE3pSSzhI+br7Rjf0gJZ3i3p1Ia7ePU/aRkl6iw944t0mbarvtVibmxE7g
ess9OMTejP6w6K6/uzuDE0hJpxji7MFuLveDkpJeosPeOLFJdyWODnu1tWVX
i3ufX7/q+fKu4J2kpLM4dTyYS8OgpKSX6LA3OmzSVg/YhB1ST09e2BurTX5h
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
87ao3inbLiVVygSfYiY6ZU/tTklnrf14JbevYjeX/kFJSS+kZ5qq6V5xiUE9
76B93hbVk5KulMk+4eOksFiLoFS/1InFLtBPS2au+IOSkl5Iz7S26epTc/J0
gqUTq3u5+f5t3OPzeVtU75Rtl5Iq5VNS+HZV7KwDcmtQql97P0Omn5bMXnJK
eR4p6YX0TGs7ejh/2drx6R+caIr5/HrpH+vgfN4W1Tt326WkSsWU9ElEktMP
yOMpKTxmVhVG365erDaqclamnrAlqdfXu3HVHCElvZCeae1gD4cn8/B+Bm6R
un8LZ43ieVtU75Rtl5IqhV0ajQNhyRYn//oKw0ampkdLVkaemlmZemoaEG7C
lVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6m1Yw83b86tTtmi4rcub9m77
0ukp6eau/NXBbVltV2rK9GvPT+kd0bpJ0TLR3ggbn9qcG1+kJl7v9MOJa0hJ
L6RnWjv9Qpa/fP98/ePzo4e/FofWzzr/+I//XQ9/jbbu9r22ad+Fd0qZm5Cf
U373u3/bw19m6zZt0arkX/zF/9TD3+4jc/e2L7VISf/PP/gHPfw1jSSVUahp
SiqqaVjnKWl+KyWxg5T0QnqmtWtS0vKKcPs9tpS0e+tu32tH9t18+xFdfIiU
tGmLViVvz0cHU9LubV+Skio3Knr2Xs5aTonOCku2JiWdRUoalJT0QnqmhXyQ
aVHzXP80+J12cfNvz0dSUqb9+bm356N9Kamy5O35qEVK2kpKeqpiRguvRKnC
qSvX8kVmVqqS4uLLprbrqBphkxiClPROOud00RP48X6uqWQa/E67uHW35yMp
KdP+/Nzb85GUVG9fPVIS/bt9V0pJg5KS3knntNAiJVWu9/Z77N132sVeqk9J
q57vISXVbN3te+3gvsssOFxKyn8cHRa+PR+dmJIuO2XVdOzt+ehISqr8aOuC
y4Q7868eOsG+GJSU9E46p4VGEalY4fdOe7Xq+nvjufy8VLSqVP2rGo5sXXTx
aUveWRbetGDTlJTfuq1Zpn4vbzoYGm3dHFK+wvAyT58C4YJhPdE6owu22Lqt
WWYlWuDGZ0nXqOnYrVkmnLKUL9woJeU3cDk9Vey4Ykser58N76clbCIlvZPO
aaTFVSm8uVqtYloEmeVNb82N8eqOOjUrNTGs4ZStWxV4TEqKbt2Ohz41ezm6
15qmpOjWrQJRNCVFI8+0CDipTFRfZ6Ot2xFnoq/zE5+dkqIdezAlrSbOr7/r
ujglrTYw3N7UxOOKXV1fz+lte5tGu5jWpKR30jmNHL8eFesMVzHtSklhgdTi
lfXv2+T8pn1OSknfCldvN9V8YkpabV3rlFRfbYutC9NKcUr02VBxbvHRUout
O5KS9hXoMCVt/V1STcdujUjhIlMsJd3yLGm1gak6W+zEYlfX13N6295mR7fT
AynpnXROO/suQzUVpi5zUzbFfAuvssxqYuWteHTi8m3morzPZ3tKmoVx6fti
9XZf5Sdu3Vkp6Vvnai9vqrbF1u1LSfli+1JSi63bnZKWL76vV//dVPnpW3ej
T2cpqdE21p/nw6XOKll/Afq4ZzhsU5/TDynpnXROO1uvQZW1ZS5wU+ynQ9GA
MyWiU3hfHVaVSVjzlB1bXbN1O54lrZaaaw6fK434jbvorslE2spqW2xdKgFN
iUA0y3+t7q5nSasCO1LSbDVxmZ621rxj6050yrOkVYEdX7ebgt8fzVLp6a5v
3KWW2rGuIy2pryRs3lzVFISyaIFUS3a3ajgv2cznkZLeSec0dfB8GF7R8te4
KXuHPC8YPm44+Pwoevd+ZGNTW3cwJaUmbqr5lJSU2Xeb4kx0dyx39C0pKVpg
a0o691nSssIWW3f8WVL4el+1W7fuRAdTUrTAvsc9NWloa+U7OiS/gfUTjyt2
dWUlqxfLyj+LHBSWz8wK63+2RruY1qSkd9I5rW3q4Zrbhsw5dkqnpPBFeDvd
Q0rKF9iRkqLhaDr8jbsWW3dKSsrv8aYpKV9gX0pKJZ1NKWn1usXW7U5JqYnT
a54l5QtsfZBU/826+soPpqT6Au3un0+pOXVtmn6NPGGxTS8er91epikp6bX0
TyPTr2qK1dSZn5u6bV7NSr3NB6LKG+9GV4Fp+/8vKXxgNMVc8I27mq3bnZLq
c3GjlFSzdTX5JR95MgVqqporabF1B1PSFGSiKfaw6WEpqWgaPCVVbuOmS8Bd
pkQy+sRSUmbZcDNTSz1V5zuaFCnptfRPC6sz4fJtu8viHHm+VrElKlomnJgv
Fk5vcVBNDf7/sPv+Gm3d1iwT3TWp3d1JSprbE0aYeXrY+OiC+ber6ct6Wmzd
1oi0spwYfS0l1XzXLny7mpVa5MaUNIppe0rKvAirek8Pfw+8u1vBZlLSa+mf
00VPg/N1uel6tz6PaPTX6F709nzUT0oabt9Ff0x0/V8PKand3ztT0gV/L79K
ri5ey7fh68+vV8DMssv6L9uW20lJg5KSXkv/nC7Vpa27+vF32rfnIylp99bd
no+kpNakJPKiT6A+L7sJkZIGJSW9lv453Y0pqR+2ztbZuuudvnX1WqSkfpzS
RS83xZLR2/rW4TQoKem19M/pUl2qq4GnOj0lcb3WF6ll6nxnXnjnVj+AlPRa
+ud00dOgcyPwYFLS0IpPzTxWO4U+HJSU9Fr6p4XVmdCJEXg2KWlcld8tdBU7
zs3AoKSk19I/jfhaO/AeUtKg6q9TLmTHuR8YlJT0ZrqoHX0LvIGUNJzg36io
TUnL3xbtmxW+CFsVbe1cOPqFjVT90Zpr1n56qJGSBiUlvZkuakffAm8gJY0l
jEj1KemTTTr5WeGLVfaJri5aOFwqmm4yNafWnqr2OClpUFLSm+midvQt8AZS
0kCiEWlrSmrxopiSwvZ/YtEjrKem8at66numnpQ0KCnpzXRRU7oXgK6MnpJS
W5RqamXjl/W0uHZLSYOSkt5MF9VcLFK9tPpEq35BALjR6ClptdTyRU3N+Xry
oWwfKWlQUtKb6aJP0AmZ83Nq4tZ4BQC3q0lJq88DV6+XE1OzVvXkC0cvwWE9
qfaH603VkGp8uJZTnF4h15CS3kwXfUqxaD6R1i+SnwjwJH6XNLSHXae63Rwp
aZNVkq1cJFNVpv7Kes4iJQ1EF31OSkmVNQM8jJQ0nAdfm7rdNCmp3ukP9TIB
asdSB0lJA9FFn7qUlJo4v019WHFmQ+E+07vd3f1dk5KG89RDuucB223DehP2
0vF+S9WQr7nR/pKSxqKX8kMyeqdUOYr1LaPr+a7jSvohQ0oaS/1h3Pqw3135
iCPRCaRSppcyB+Q8ffliVec8ZVVmWeeqntX0VA2bSElj0UuZyLOalZoenZKa
CKNwAIf0SUhKGsumY7j1Ab8psjVtSWtSUqWa5z75O64wwkSnfIJ8VHwRrXMr
KWkseikVhXbPqpkOPXNBz9A5K1LSQLYeulLSWZw3Kp2SkipfpOJP6kVq4iZS
0lhe3ktTIJwVfbtaNlN/u8ZDI47bPP2zJCWNYsdxW7zkLT+lT310n18qX0lY
Q+a6vKq2K/lbBWZhL4X7NHpc7XgR1pl/kZq4iZQ0Fr3UlO5lOA7aGnppJiWN
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
JZ3C+Ho2d1b1iukjlaSK5aWkJQfkPmFsh0ZqUtKmpHP8WdKqeZsGQvRDrYMX
RymJzklJxxlcjyclbRI+J0pNTM1aXYKXwrmrSqKF84sUWziTkkY3VSdiOGgV
W1aKD4ky5YtLhSUzjcyPhcypdS5wpItuz0dSEhlS0kFG1hsUryP06fRQIyWN
boqFcWghGm1u+Sse5zVjYQo++IpO39pFt+cjKSkqmo7vcmM/SEkH3bv7uMbt
45R9pCRCU+JmD841jZOS5gbXz52kpEf72SF/9mf/Sw9/UtK4DKuXkJIGJSUR
CrvOAKeFSz5lr7WpzalZ0bf1lUfrzMSWr9Xr+llS0hGTlPS3pCQo2nSVoR9S
EqHKm0A46OcR9Sd/8m96+Nt6bFde8naksLCGfHIpvs7PkpJ2k5K+pKRN9n04
w+js7kFJSYQyXWekc6JxU9Lc/tbDYUdKChfJzJKSdpOSvqSkWfGEsCrgevoe
9vWgpCRCxa7Tt5xi9JQ0b0W7EbE1JUXL52dl5kpJGVLSl5Q0yz8nqp/I89jR
g5KSCNV/leiCxvBgz0hJ87a0GBGbUlKqcGrW9OuPlaSkTVIp6duZq7ffKVMg
U0O+jJTUoXD/Tr8+OUotdVUDuY1bpkFJSYTqu04nc8STUtK8RecOik0paeuz
pGnLN/EM9pVMflnNWoWmVLGaRaSknkVT0nxOkJLeTErqXGbwXu+yTb5mRc+z
qeuu3Kc8zLRISfP5Icwv4fSaYtGTT6qGc4/hE2ubWv4uKbOIlFQ0ZTPOtD0Z
HUlJDCF1IF186HK9zAFAD37unT//8/+5h7/LjhMH5G47uk5vs8MURJUpEX/C
idHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeYYpEnNXG1rGdJ
A8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNVow08WHMmucy3
YavX9bN+t/hF0nKilFSjmJLCuLR67pNPRmFJKalzqXy0KpB6y4PZ152Tkthk
d+/pduo9PiXNm3lkQBW/C3fNn6G9sjslRZ8lrWrLv+0qJTGrGenFJMUj2d2d
k5LY5Ejv6XkqReNPmIPyxfpPSfPG7liLlNStmpQUJqDoUlISPJuU1DkpiU0O
9p4TAjV2p6TZQClp3uTUuqLTp5407pvBTIf/jbvVxEyxzLqkJOifU2jnpkRK
mi9/0YnLuauS4YKpSs5NSfWLOyCPOKX37ALypu0pKbXIKClp3vBwSvQy+nPK
j8+PHv4M55VUcpl3ZfRbdqtZqQIrmYh0e0ryuyQokpI6l0pJYboJJy6TUaZM
KjGFSx3ckNNLEjqr95wZyKiMPPtSUjRkdZKSPonfcUtJAymGl8v+pCTonHuh
zh1JSZm8U1ykaUqaj7rU3cWRFb3cub1nXxC1yjhfYcaZp4dlwlmZMql13ZKS
5h4IrQrcno+kpCgp6UtKWsoM5+jbcLxf11YuFL1NpR/T3pQ0ZZ8K7Uhb+46T
1L3E8sBztjnR6b3nFEFoSnxH7vq/ew/O/J3V7flISoqKXpXucmM/SEkrU/pW
JDMrNYVnuH2ckjdtT0mz3SlptXiLb9xtOv9Qr1Hv2SksTVJS+mZ7nnt7PpKS
GnlGl0pJK5nss7pVjt60POOoYEVK6tyOlHTKs6Sm37j7SEkttQtKdg1fVZ+S
X6XDTvhkU9JcbPW6fpaUdK9ndKmUtBLu1mmRksK3q2LPOCpYufcqQ9H0xN8l
fXzjrqWmHWjvwKeUEz+lZ0nLuanX+VlS0o2e0aVS0koxJX0SgSh1M8MDSEmd
q09J0x/+3e/KiRenpHC7Pv71hjZad6CTBp278fhcZqWtKSlcJDNLSrrRM7pU
Slo5kpKWn5DwJHZr5zIRZiU1MSwfrSdfrFFK2jqLGtd0oN1Et3o4OLempGj5
1KxlCisGqB5642Ge0aVS0kpNSvrU/UaJx5CSOpdKSdf/SUmjuKwD7Sn6FL2l
OfFiV/O58aaUlCqcn1X5jMk4PSj8+DHl7pZuIyWtZPLOvlk8wIhD+1UemZLy
1xQH5EFXdqATCP1I3bguj9LTg1Jmpe2eJUlJ93pGl0pJS5nMG50SnTVoXibD
Du1c/lp8scs2+ZoVPdX1HWiX0ZWp+oPfI6vInyqnxr9LmqSk+zyjS6UkKLry
7pcT/bbQZ4W7OSAPuqUDnUnox40paVlga0oKU09mVmVEkpJaeEaXSklQ5N5m
UFISKTd2oH1HD8KUNC2+EnPWKvJP2zMRZi6/el0/67UpqZNt6aQZB0lJUCQl
dS71ieUtLtvka1b0YDf24ZWHCtSYTv3XGypPj9OBf7u7MvvUlzy+1Z3oZFs6
acZBUhIUuaXpXOtL7aaL8mWbfM2KHuz2Pry9ATA7fjRG01D+4yMpqYWw/z93
3MY8o0ulJCiSkjonJbFDD33o3EIndh+HxRyUqTn3VP5y+za/H6mNWm5d/WZe
1+8VWnVZBSkJim4fp+RNUhLb9dOH/bSEd9p6O3rWHezPxf/Pf/SPevh70hhc
bcv066Ol+kpuv55efFUF9pGSOvfC87kD8riu+tBJhv6d/tm+lNSClARcyQ1M
5154PndAHtdhH3bYJF6u6RefpKQWwpQ0T5GSgNNJSZ2rOZ/PF/ofi//V4Eqq
/HJiJ+dzB+Rxffbh8a8wTTf9WJsnaZeMVmu5PR89LyWtRE8IxZ0rJX35XRIU
ud/oXE14WcWfaOqJTp9+/T9xdHI+d0Ae120fHjzh7PvoGJo+Nkqt8fZ89JKU
FE7M7+6tnz1m5tZcOnu4qkZJSVAkJXUufwYO56ZS0o/FY6ZUwurkfO6APK7z
PtzdvNUnxic1h8e6OBmtVp2JLV+r1/WzwrdS0nJiaFWgMsLUfz4pJcEjSUmd
25qS6gPU5Bt3j9Z5N1aeeVY3OVISRal74+ubkU8uxdeVxYpB6akjJbWXoylp
dRqRkj5SElS4/VJCXouUVJwrJT3AEN24tZGpxAQ9JKOlHSkpXCQ1a2tKYvbZ
lZKmxWeMU/ZbGVISPMl83qBP+dNvZm44a/Is6U1G6cZNp6D5JmeUraOp1d1v
V6aNKSlaPjVrWnwl783fuItKhaNlgU0pKZWMlqQkeKQ+ry/MtqakVRQKZ6U+
AZOSHmasbqxs7VgbRSPdJqOlTSkpVTg1KwxZUtIsk4/mAptS0jIopa6Y+4KS
lASd6/9a83I14aUm9UTTk5T0YMN1Y825aLiN4iz5+94ObUpJ+54lSUlRxYNE
SvqSkqBooIvOO9Wce8OH/lOgsnwP53MH5CkG7cZMs8e6SeYU4+70rSkpn4am
Y79Lursz+rIvJVV+DiklwZMMegF6j33n3hZ/UtJYxu1GJ6WXG+6xUdSOlFSf
hqSkI3Z89rh8EdX5VTVKSoKi0a9Ejyclsc/o3Th6+9nkGcloKRNe5i1dvd4x
qxiRpKTQC6+qUVISFD3pqvRIqU+ubnHZJl+zomd7QDc+YBPIu/jccqWpIr/s
/ttU+SO794hJSvpbUhIUPfUK9Xi/LfRZ4T6OxhM9oDOdoJ7n+g9ebiEldUtK
+pKSoOjxl6qnkpIoekxnPmZD3uwNyWjpzKf4h93dGX25e2/84sZ+kJKg6PZx
St69J/CVfCNP2djjlTB7Un+edYxxpZqzB3ALKQmKXL86N3X83YDKDLVpY49X
wux5/fm8LXokyQj6JyVBkWtZ5/pMSZueNFVupuNwZc/Tvmbu7oy/01t7+Dp4
tBw/2CoXdPzAl5QERS4ZnZs6S0mn30g7AlN+dss//sf/Rw9/9+6g/qNcfQsv
cNe2H6wk+rqR63uJ53EUwRvccmGl3jROShripm4gk5Q0iJ/988//+f/aw981
e+r08XvxAeZ45jhHEbyBO9XO9ZaS5lbJO61JSaN4SUpqOtJX1c4rSr2Yy2fO
ReGy0XXBDo4ieAP3t/cq9n8+Jc13Bd/XyynLWatFUjXUp6Rl46WkfWp2/e35
SEqq8eCUdOUAT2WZaOpJFQtnRetpswW8yAOOIr9LgiL3t/cqBo1MflnOWiad
MAdFi4Wztqak1Va07KcHqtn1xfCytJq44+29KanyKCr22/UNmx6Xkq7s3nDV
xRefdCZKzVpujpMVxz3gKJKSoMj97b2mmFWBYkRaTcnMqny9NSWxQ82ur3nK
E74OXxQn9pOS8vfnq1nXnL6KDXtGSip2/jVOT0n5emCfBxxFUhIU3X5NfLno
rfJyp9SnpJoAJSX1o2bXH0xJ0ZL5Yv2kpPDUFD1ZXXAGq2lYfYoJp3yFb6Pr
PT0lRbfoYlM67ERfFN9WVniZ+Dh/jYt7+xoP2C4pCYoefBK7wAUXl6mnlMRl
PqempLBYTeU9pKS5Nz7p25LWzatp2O6UtJoYfR2+OJiSwk24V6o9mT7/bPlO
Xb6edrrq5Bs9sh8esDlSEhQ979w1luLle2qZklbZp+ZZkgPmLDW7via/zFLf
owvn1tScWstdPtmUdHvD6iNSWHgqhaDK+ospadlmWtPPoSf1yQO2RUqCIhfN
e4V3XGGBrVEoMysVr1JrSX3jzjFzXM2u3/QsqXLiNNSzpFWB1IK3N+x4SspU
ciQl5Y8xWtDbGY/pnAdshZQERY85ZQ2q2P+Z/JLKPlPwtKj+SVNlSqppOXk1
u75dStoUlG5JSakCNROvb9imr9utyn+rrVmwPiVJRjfS7XnP6J8HbIWUBEWu
pJ3LR5j5Xijz66FM+bBAfUqam3d9n7xE65RUH5SuTEmbylxz+qrJs5URZtbu
WZJT+r10fg291AMpCYpcUjtXn2Ja/6WOE4dQI8UIM98SpyYub8uji0RruCsl
VVp9CHB3c/5GTYqJJqP8M6bdKenu/ngvnV9PX91OSoIiV9XO9Z+S5nZe1icv
Ufmg54I/OzfvrJSUCkSbUtLHYLyPnq+nr24nJUGRlNS5qSc1Tb2mW95gkpIG
MVX8A91f4dvMrNSUYkr6uAW9SabbV6fH5Ul165k2rHbTgvuOjWX9pxxdox+i
o7f/IyVBBXe2g/ptoasKHU5nkZJGURlhLvhb3Yff2CcvVPM5UurtkR132U4/
t/LRj8/R2/+RkqCClDSoblPSx0F1kvAT5hvd3Rldm7pMSZ9H3MgNpNjbq6GU
en1kvU33+LmVj35wjt7+j5QEFdwCde7im+G8rS1v1CfQlbvH5S+ibbulW96m
2M/Tr78am2LpJlXJssCUzsLRxZfHxnLx6MGzqi2sPKwqXKTyqBv6yBy68V9S
EhS5hnbu5975e3/v/+vhb8dx4uiCHhiGF6hMSZ8gLn1K4SKaR6LLRmNyfu1h
/soU2LpI3tCH5dCN/5KSoMh9bOeGTknzJpzbJ8BWhmFrB1NSvpLMlXo1PXwb
LVAfgipL1mxFvuVjGbrxX1ISFElJnXtASvo4zEiLfhK+fJv/qJx6eq+p+pT0
yf5GaVkgfGpTXG+0WCrsZJJafTjK1Jk39AE5dOOBSm48OveMlDRvyyl9wsMU
P1TP309ST++1syklfTYe1avkUlntJ51oorksWmDHs6RKQx+NQzceqCQl3avY
/09KSTXbywvtSEkeLe2m0xopnskzz25qLgTLwmG1qUpW05dv86+jlUdFF6no
sLEPxaEbD1Ryp3Gv1SUmWiCfXL6+r5dTlrOi5ZcTL0tJy62Gr2l7Skq9pYZO
a2GsXs2MqcvqHKvHVoZu/JffJUGRlHSvKfap4KpAJras4k809USnLyden5I+
DjwWVp9LzxPzBT6PuFG5i6473VhdKiUdNHTjv6QkKHKzeq9o5y93SirChNNT
Kak45ZaUlNl83iY1CooFHD9H6L1z9dafxQES/eThlJVW1tlbj72NlARFL7nT
mH6Vmh66oGSmtZ8tKakyE3WVkjKdwHukRkG+QHEWRXrvRJ10ZuXA6UHnzXs8
KQmKHn+P2vkGrtoWtvbxKSnaD7yKlHQjHXiWTnpSSqKSlARFnYeII4bYtPmB
Uea50ukpKf/2lpT02b6/is/srtSuWx4v2ofLicUCHKQbT9G6G1cjIpz+CcbF
XD5aw6q2VD3txtrQB97Qjf+SkqDoqXcao2xUsf+ns3+XlJ97Y0qatzecEl31
z4l//fvf9/A3ysEGKY7h4y7ow3wCCpuxTDqpYpX1nL4t7aq9xtCN/5KSoOiR
KelJW5SJMKnsM6UfFUWTVFcp6ZP9pHRV7PZ8JCXxGI+8FlzpmpQUvo4+PwrL
RF+EZ9p8XDrX0Mfb0I3/kpKgyJWxc/kIM1/XwinFWakabk9J84Z/fv1aXVjg
9nwkJfEwDubdbklJlc+AwnBUv7iUFDV047+kJCiSkjpXk1+u+bv+OAkT32ru
7flISuJ5HM/7XJOSUg+DKlPSjomNtmv0w2z09n+kJKggJXVOStqXkuZFVq+/
b2uKSUm8lkN6n9b9tnoSNE9cniFXL8JFooEorKf1Fo1+jI3e/o+UBBUelpKe
tC1fYVK4UQ8bvixQDC/F1/lZUhKv5ajeoXWnXb9T2q1x9ANs9PZ/pCSocP3d
b1NP2pa83xb6rPCImrC2LyVNf3hsJCVBngN7q4elpKarG/Ho6uHzwxNJSVA0
9BgPPWlb8p6dkpakJLiLY3urpg9fLrtet17RoMdVtNmDbstHSoIKUtKg3pOS
VuYjtibRZDJROHFfRJKSeDaH91Z6LG/o/lk1fuhtkZKgSEoa1GtT0mx3SppJ
SVDDEb7Jw66q5xq9Z6QkeJWHnc+ftC15UtKOlLRaJPM1PCkJlhzkW+mx0DP6
ZLkVQ2+RlARFUhKDqgw1mZ8dHf9F0ttSUvgbsVe5u/tvpge2cvx8sv9n8EHN
G/KYLQJSnnTu+vR91lpeKeb/5i+jU/BwP7O/onOv6ZBbjqJpY0qa+yf1VkpK
edhNzm76Yeu2x9PmTRr1yaC9cZm7e/18k5QEr/Gw81i32zL9+ow+dZpNFQtn
5euP1tDU9T0/Hcg15/51e9Sd4tlbt8+b+2TTtv8s/OPzo4e/N+8yTvewGycg
5WGDvc9tyYSayryTeZ1fnZQkJe32sJPDud7cOaltj57Nbs9HUhKne8bw97sk
KHrGYJ/1uS2ZVt2VklZfh4i+/cTS3HJW8QFWqvAppKTWnrpdZ3l5/+TPXfOU
2/ORlEQLDziipCQoelhK6lNvKWmVffJhJ5qYoukpfBtdxVmmnpy+dbd75Ead
7qm9VLldq2LhUpOUxCVuPPnf60inSUlQdHygUZTp4XDWlM44NefGcJFNZaZE
zIm+CCdGW+gAG45dVu+RfVW/UfmRPsVS0nyK+L4Op8+z5tfFt9EpUtLjnRIW
hnakB6QkKHr5GeYamSi0KSWFyxbzyPUpqbg6+nfuLpt+tZq4421Ngy87sz3y
8F6N8Xl0F89I4awwraxyTXR6ZmL0dWqulPRg9unSjt6QkqDoYSmp221JZZlM
YAnfRqeEszblrFT5/IvU3OJ0hnD6/qo8xooTa+rPTGxxHD7p2J5iPokhv1ow
OmsVWDKhKRVtMnOlpNd62H3LWbZ2i5QERQ872/S8Lcu7jtWUcFZYPr+novVE
q43Wllkw+uIT3DilbqjCiXSuxZ5aHWyZFYVzi+2Z0rfoxSnHPfLADs9FqVnL
6dEOz6ekmgyVWWr6NUZ92+Abd49nb6Zs6hkpCYoedvv6pG3plk5+thtTUlis
pjH5lLSK6qdv3SOHw46UFJ2VT0nzHol+By+femq+sCclPZJdmVffP1ISFElJ
g/pt4eIK39PJ79QoJYUhJbwVX82tbEkqdoXpqdGh+7wRkdk1J6akyi/a1TyB
kpJewn6sUdlLUhIUSUmDuislNfpAnn60fpZUOXHTs6ToYRmdUt/meo8fDqun
cvliqynHU1LNl+6kpJewH2tISXCWh93xPmlb8m58lsSzdZWSwmKrQJTJQZ4l
nWXrQ73llHwsiuag/EQp6c3sxxpSEpxFShqUlEQjvaWkfJOKKSlV54kef9o5
MSXNvyf6ykzMvM0UzoSpBh3DpVaje/VpyVJ+2U0r2ldD/YqOn53CTZaS4CxS
0qCkJBo5fRBFb12WE8Pbm/zbVM3ROj+Ls1yj092zTzuZO8+wZDgl85OiE/+K
K3r2PnqJfBY4HjeKa2yhuIodQ09KgrNISYOSkmjkPYPoLHrsS0qiKSmpvkzN
UlISFElJg5KSaOQ9g+gseixl6sndncFR05aUtNzp0derYqkXmblh81azlmVW
B2GqGdHX0VnFxsQ7cUFKgqIjl4/qq9PbnbvLvqQkGqk8Yvcd2MsR0WhoRNfV
ekUXrAVebjXQUm+jJ5kpyC+pMtEX0WXDgb+ctSxT34z6VkUrSXVOlJQERTtu
JJre/D9Six6TkmjkgvByWf1SEjxGfUpKTczMyr8ozs2XWX1qWqw2FeKKlWSm
hKQkKNp69+5+4IgTe09KohEp6cgagUaGTkmplu94lpSpJDMF2KE+JXl+dIqz
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
                   "], {{
                   0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 6->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3c/q7MyDH2aReJFlbiG+Cm+zMcQeDOOQAYM3Hs/ExAMTMx4I48HwEpJs
vMjGWSW7QMAbQ3CyyOpcSS4kq86ZaX4aHdVf/SmpSnoevrx0S6VSqaSS9Gl1
n/c/+8P/9h/+1//RNE3/8j/5+Z9/+E/+u//8z/7sn/zFf/mf/nzzX/3pv/xv
/tmf/vEf/Rd/+ud//M/++M/+zh/+xz8n/n8/y/7h35qmv3oNAADAyufz+f4X
AADg5ZZBCQAAABEJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiS
kgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABY
kpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAA
WJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIA
AFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoC
AABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFi6MSVNwAhuOT8AANzoxruge2/8
gEq3nB8AAG50412QGzDonEEKALyTlASkGKQAwDtJSUCKQQoAvJOUBKQYpADA
O0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALxTtylp9/+xZbnI/N/QqmSqhvrV
hUul1nukqUfWkl+qZmOjbU71WKZkps7lxGKZ6Ipq6o+2rbjJqTbkO3ZKHGyp
aotvM5uW6aV9zq0NAGAUN94FFVe9uqWsrDNaf3hvma92U5+kKq+ftaOp4fRo
yX1tS0m1ubii4q7MR49iCzfVn2lbTf35t5X7JT+rfq8Vlz1ISgIA3ulJKan+
LrRYbaOUlJm+tam7Y0XlnfnWNtTfyUf3e7Tm+hbW178pfOWbl2nq1imVKanY
LaePZSkJAHinZ6ekcFbljffpKWnHDX/984X6KfuaVFOmfmfVJKCDKSmz7L6j
/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT6402
oLh4ZbXRYsWJ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4tigdRN
8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnTyGJT
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
KeazMcm2ayoP5nID/ZCSoMhlq3P7UtLqxfXPksKtaFT44FJ9ruj6Z0mfIEkd
rBxSHDDQAykJiqSkzklJTZfqc0UtVhHWeVZK2lEegHtJSVAkJXXu4DfuotMv
TknLr3VVlt+9on0LvmEtNSlpxzfuMvVDkQsQ3EVKgiIXqc4dfJbUQ0rascmn
L3ti4wdNScU6w18nnVs/pLgMwfWkJChyeepcfaiZH9mEb6eFfRFJSmpR1cVr
qUlJ7eqHvK0PnYEjpCQoclXq3L5ck/rq3ZG/IVJSavHVj26OPDeRklpXwsu5
KsEFpCQocj3qnJR0ZPEp5vPrYb91deOmpEy1J36M73zCKVyboCkpCYpciTq3
O+CsvnH3npQUrWE1ZZWkDlbewsUpacS1ALCblARFUlLnok9D7nLZJp9ewyQl
ta/5+rXwHo4oOJeUBEVX3v1yot8W+qxwt1MOyEws+rz4G3efYwlx31rgFK5W
cCIpCYpcdwYlJR2pZHrlv94w13zN80EnFlpwzYJTSElQ5IozKCnpSD0HV3HB
kGm0iou/RencQiOZA9hF7bjCd6+f7u7uv4iUBEWvOic8iZR0pKqDq4guPg+l
U8bU6aPyrvsBpxeaCg/jt93rnkjXfb2kH6QkKHrDqeCRpKTdVR2/AmbC1zyr
RRA76K5PTZ1haG057l74UOAUuiv07D6RkqDIpWRQUtItteXrXE7vMCV9Lv/G
3XK916yIl7vrCB+ajsp4cOdISVD04DPAs0lJt9S2qnN1J9Z/Svrc9GG7kwwX
iD4tdewV6aI8/QOv5SIyKCmpwwpTienEVZzilhvIW84zzm+vkkpJjoEMnVND
L8E7uYIMSkrqsMKp43+9Iaz/+rF/1+qc4t4gE5EcACl6pp6+ghdyBRmUlHRj
nfmU1HQVJ7pl7N/y9Mop7p0EpSLdUu95feV3SVDk8jEoKelInQdX8YyUdNla
bl9pozXmH15crMUGduXuDv7F3Z1xmidtS2vP6yspCYoeds5/DylpX7Wn3OdE
Fz/3Dqq+nutuDSucvnXHtVvXz5r/5E/+bQ9/V/bnXX5u4+/93n/o4e8xvf2Y
DbnG87pLSoKiTfc29ENK2lHtjvv5TG2ntOp4/T9L/vj86OGvw5TUdEVS0pWk
pNNFN+Ss82Tl4id25pE2X9zUTkhJUCQlDUpK2lTh7qcemTpPadvx+kdMSZs2
8Agp6TGkpNOlNmQ5/WBQ2jT9iLnOpp/VPGbXf0lJUCQlDUpKqq9NSuowJW3a
xj5JSVeSkk73yJTU2yI9k5KgSEoalJS0qUIpqcOUtGkz9/EsaSD5gbk1Ja3G
+wtTUvFEtzUlrSqMnlSXZZYvVq+jhcO3qUZGC4clUw1ONSO/0sz0QUlJUFQ8
kdInKWlrneEF/WCFpzTseP3TyClp05b2ZqpISfPxtnr9fVtT7G0pKXPHuyPO
RF+/JyV9spf4zPRwL0y/Zp/V28yLTIGwzKpYNLNkWhUtVt+MzEpTaxmalARF
UtKgpKR9Ne9ISVO1c5taXzKVWZbC6WHhaJlV+ejiUlI+whRf52e9MyWtxtQk
JW206r3wHJXakCmRI5aVhGXyL5Zrn4J4Ek5JNaNYeFUybHBlPakKw4njkpKg
KDxzMgQpaXflQxzz9S2MBpY5thRfpyZuWvZIStq0sV05kpKm3z02kpJm0ZS0
vMs9KyV961y9ra9/lN7OBIdMgU8iKURTRk3QyAeQdikp1YzKeqQk4CMlDUtK
OlJ//4d9sXnLe8izUlKxfGZdR1JSzfZ2qKuU9AY7UlK47Pz6+2L1dmu1Ucsj
5N6S0YN2LhYt8KmLD+GyxZLhi2ht+fLFwqlZNc3IV5iaOC4pCYpW51VGISUN
sZbdMjcw4b3Qic+SplggWs3KrO5t6lNMPi6linmWtJy7+1nSatm58n3fxBul
t6cgXIRTokuFPT/9LmiE06NTVnsw+nZVw6q2aPnUqsOWhO1JtT/a7OhKUz02
LikJiqKnAvonJeVr6McpnZCpbcqmpKXKb9xNQSZaLd7iWVJ0qzs3HUtJMynp
Kz9wppNS0pR4lvTUlJQ/dRys/Hg9Y3nYlkpJUHTkRo4bSUn5Gv7gD/5dD38H
70NqolY+JWVy0KaUVPksaffGLjfneCXX2J2SVgtO6a/hvTAlZebuTknRxDQd
+Mbdld2yW82p40jlp9QzlodtqZQERVLSoKSkfA2356MjKakmHC0Ln5uSwodH
+QWlpPqglE9J+yLSY1JS3taUNA+i1ZTfC36vtCr2mJRUdHBDNp2m9lV+pEAL
j9n1X1ISFElJg5KS8jXcno92pKTVXcdlKSn6qCiakvJB6awzyShnpH0pad7L
qbdSUtTWlNTu7zG93XnKKBbeeqo87jG7/ktKgiIpaVBSUr6G2/NRfUpKfSR7
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
L+wBkJLO4gTyYFLSoKSkl+izN/psVb3R279PPiW953nKvL2rKfAqUtKJnEOe
6iWXxeeRkl6iz97os1X1Rm//PpXPkkbvnNV3C1NzR99MoB/OJ0/lYjEoKekl
+uyNPltVb/T277NKRtGwMHrPhNt4Y2OA93C2eSTXkUFJSS/RbW9027BKo7d/
h+J3zEa/HESfHN3SEgAeYPTL4mtJSS/RbW9027BKo7d/h8pf4ozbM/mNGne7
oAW/S4Ii145BSUkv0W1vdNuwSqO3f4fXpqR5+ribBqeTkqBIShqUlPQS3fZG
tw2rNHr7t1r9mwbRXySNfjkoPksaeuvgXFJSC04yD+PCMSgp6SV67o2e21Y0
dOOJSv0uybMkCElJLTjJPIyUNCgp6SV67o2e21Y0dONJiX6rUEqCkJTUiPPM
k0hJg5KSXqLn3ui5bUVDN56M/PcJ7Xf4kpIacZJ5EleNQUlJL9F5b3TevIxx
Ww5wnJTUjuvLY0hJg5KSXqJpb0w9abeZqW2/eI0A/ZCS2nF9eYxb7k84Tkp6
iaa98bPyH58fPfxJSVzppk8CenF399MFKakpA+0ZnDMHJSW9RNPemF6ckj6O
tPcRE770Ax8pqTHj6xmcKgclJb2ElNR0869fKXexu0P65M2kpNaMrweQkgYl
Jb2ElNR0869fKddzmcvQOa8lJbVmZD2AM+SgpKSXkJKabv71K+V6dnSe/nkn
KekCBtfopKRBSUkvcWNKmn+88H29mjjPyk9f1SMlcTF7uYZeeiEpCYqkpEFJ
SS9xV0oKE1BqVv51qoCUxAXs4nr66m2kJCiSkgYlJQ1q69bdkpLC6btTUr5a
KYmm7OJ6+uptpCQokpIGJSUNatCUdCQxSUncJbWL52+BpspkroznHjb7als2
76z2GA5vIyVdxuAal5Q0KClpUMutW96nXXNLFlZek5JWPywq/v4onCUlcb2a
MXXX0Dvu9OZ1vr0wLoNrXFLSoKSksUwxn4rPhHtISannRGFKqn8rJdFa5YCS
khpVCMyMr0FJSYOSkga12rrVx9rF8qc35pqUlI9Id6Wkz9MPtpfbOqBWV8Pl
xxfhxxr5F/kGpD4kiX6Kkm9eZu2rOtP9VNU5wBEG16CkpEFJSYMaIiXVR55M
FArDVH517TYz3wO3rJcLbBpQYbRJRZ78i0xm2bqW5ayta48WKDIcXsXvki5m
fI1IShqUlDSo8K6peDPTrkMyseVH4vdHmSkr0blSEpfZ+rHDfJQuS4blt+am
cBVhbfUhqH6lUhJ5UtLFjK8RSUmDkpKeYb6fyd+8tVt7/otwl/1JSZyuMiXl
c8q5KWmemApBqbXsW+nW67vh8CpS0vUMseFISYOSkp6hZmOlpHZedbC9TWrn
ZsJI+GJ3PIm2YXcW27HSHce24fAqUtL1DLHhSEmDkpKe4faU1I9G21jsgVvW
ywUyOzd61KUOy2XJ1YLFRVZrSS1efJ1aV83ap+qDvL4kDyAl3cIoG8umUyj9
kJIeoPIeZqwO0Vo6MdDOXSWpu+ocqMc4Tkq6hVE2FilpUFLSg+U/KO7fKO38
DNVUthpo50pJXE9KuouBNpCBbr1YkpKeTUq6xkBNZasedm79sG0xxn3jjgwp
CYoGuvViSUp6tnEj0tcorR2lnexw485t8WzoAgM1leOkJCga7u6LLynp8YZO
SZ9x9uMo7WQrKWmrgZrKcVISFI1498VHSnqBoSPS1xDNHqKR7NBiz86DcTUq
l29XY3YuH61hVVuqnmvOA8bCq0hJNzLWRjHuDdjLSUlvICVdYIhGskOjPZtP
QOGql0knVayyntO3ZcVYeBUp6V6G2xDGvQF7OSnpDUZPSZ8R9mb/LWSfdikp
fB19fhSWib4II1U+LrVjLLyKlHQvw20IQ9+AvZmU9BIPGKGdt7/z5rHbZSmp
8hlQGI7qF5eSOJ2UdDsjrn8PuAd7JynpJZ4xQnvehJ7bxhH9fOPu+ERft+N0
UtLtDLr+PeMe7IWkpPd4QIf0vAk9t42DWuzc1ZOgeeLyy3KrF+Eiqa/Srepp
txUhA+FtpKQeGHedk5IGJSV1a+rJ3Z3xN7pqzFK3DeO4Fjv3+gPmmjUaCG8j
JfXAuOtcb7dSVJKSuvWz/T8+P3r4660ne2vPV5+t4hQPSEmXrc5AgFsYej2T
kgYlJXVLSsrQJC527v698intlVdnowDuYvT1TEoalJTULSkpo8MmfXptFWex
f/P0D9zLGOyWlDQoKalbUlJeh63qsEmcyGUuQ8+8lt8l9cMw7JbLx6CkpG5J
SUW9Nay39tCCvRzSJ28mJUGRlDQoKalbqZS0+tfnUnO/r1ezNlXVf0r6dLaX
u2oM7awGzt3NuYce4EtKgiKnykFJSd3Kx5aa18WUlFlcStqhq8ZwmemV7u51
eiElQZHT5qCkpG5NG1NSWD4sVlNmrJT06WlH99MSgGtISb1xJeqQlDQoKalb
x1NSuMgjU9Knm33dSTMALiMldcjFqDdS0qCkpG7lU9JSfUoKi4X1jJiSPn3s
7h7aAHAlKalDLka9kZIGJSV1q/JZUuY5UU0ayi8lJQ3XBoArSUl9cj3qipQ0
KCmpW8dTUub5UT8pKfrD8Lsc35ZT+gRgFFJSn1yPunLKPQbXk5K6NW1MSZn4
kyrfSUr6u3/3/+nh75TNHP2oA9hESuqW61E/pKRBSUndSuWX8AlIdG5qyvJt
tAYp6eDmHK8EYBRSUrdcj/ohJQ1KSupWzVOea/6kpE2bc7wSgFFIST1zSeqE
lDQoKalbUpKUBNA5KalnLkmdkJIGJSV1K/evDFyu6Wbeno+kJIB9pKTOuSr1
oPWtFI1ISa/SYZ/Up6RlastPzEyXkgBOJCV1zlWpB1LSoKSkV+mwTypTzCoZ
hRNT06UkgHakpKc6+JWSeSkB4aMThiUlvUqHfbIjJWXiz3fivm/xSUkAW0lJ
D7a8ou0LSruX3b1Un6SkQUlJr9Jhn2x61lOZkvYFpVNOYh32MADsICWdRUoa
lJT0Nr11y6Y4s/ydUT4lrQrXP0s68gWDT3/dCwDHr2jRGlaXy9WlM5OSUguu
pqTefoKLdX1tRy7xu0lJg5KS3qa3btn30KcmJW19qFQ8jddv0XndAwAn2Pcw
KPPJ4SoEhZkolZJSSapYT2pd0UVSs8L2XEBKGpSU9Da9dUvPKWnZyPpTXG89
DNCO3yWNYl9K2vR2da3cmpKKLz7plFRcdaox15CSBiUlvU1v3VKZYqY+/o27
zKdqyzKn9hBAv6SkgRz8asSmt5+WKekTfMWuZtWrhHUlKWlQUtLb9NYt9Slp
VpyeKnw8Ja1aHj3v9dbDAO1ISQOJxo3K8pm30ec70ReZZux7lnR82WtISYOS
kt6mt27ZFGSa/u3umVVc6q2HAdqRksZS842IsGSq/Gr66lKYWTy8bs5vwxdh
+VQNmdrmWaUeakJKGpSU9Da9dcsDUtJyWyqvPgDPICUNpJh6RrE7+EhJbCIl
vU1v3RJ+3HSjs7boE/vgC+B5pKQhtLvk3WLalZJu3OTRO/y1pKS30S2trXr4
AdcjgBQpqUYmoUTfhteR0xsw+lVp01bcvr23N4B9pKQX0jNNpbr3Mdcm3ux5
R+/ztqjeKdsuJVXKBJ9iJjplT+1OSWet/Xglt69iN5f+QUlJL6RnmqrpXnGJ
QT3voH3eFtWTkq6UyT7h46SwWIugVL/UicUu0E9LZq74g5KSXkjPtLbp6lNz
8nSCpROre7n5/m3c4/N5W1TvlG2XkirlU1L4dlXsrANya1CqX3s/Q6aflsxe
ckp5HinphfRMazt6OH/Z2vHpH5xoivn8eukf6+B83hbVO3fbpaRKxZT0SUSS
0w/I4ykpPGZWFUbfrl6sNqpyVqaesCWp19e7cdUcISW9kJ5p7WAPhyfz8H4G
bpG6fwtnjeJ5W1TvlG2XkiqFXRqNA2HJFif/+grDRqamR0tWRp6aWZl6ahoQ
bsKVXLsHJSW9kJ5p7awentIqi13vlA23dbeobHDqbVjDzdvzq1O2aLity5v2
bvvS6Snp5q781cFtWW1Xasr0a89P6R3RuknRMtHeCBuf2pwbX6QmXu/0w4lr
SEkvpGdaO/1Clr98/3z94/Ojh78Wh9bPOv/iL/6nHv4abd3te23TvgvvlDI3
IT+n/Pf/+l/38JfZuk1btCr5+7//73v4231k7t72pRYp6c///N/08Nc0klRG
oaYpqaimYZ2npPmtlMQOUtIL6ZnWrklJyyvC7ffYUtLurbt9rx3Zd/PtR3Tx
IVLSpi1albw9Hx1MSbu3fUlKqtyo6Nl7OWs5JTorLNmalHQWKWlQUtIL6ZkW
8kGmRc1z/dPgd9rFzb89H0lJmfbn596ej/alpMqSt+ejFilpKynpqYoZLbwS
pQqnrlzLF5lZqUqKiy+b2q6jaoRNYghS0jvpnNNFT+DH+7mmkmnwO+3i1t2e
j6SkTPvzc2/PR1JSvX31SEn07/ZdKSUNSkp6J53TQouUVLne2++xd99pF3up
PiWter6HlFSzdbfvtYP7LrPgcCkp/3F0WPj2fHRiSrrslFXTsbfnoyMpqfKj
rQsuE+7Mv3roBPtiUFLSO+mcFhpFpGKF3zvt1arr743n8vNS0apS9a9qOLJ1
0cWnLXlnWXjTgk1TUn7rtmaZ+r286WBotHVzSPkKw8s8fQqEC4b1ROuMLthi
67ZmmZVogRufJV2jpmO3ZplwylK+cKOUlN/A5fRUseOKLXm8fja8n5awiZT0
TjqnkRZXpfDmarWKaRFklje9NTfGqzvq1KzUxLCGU7ZuVeAxKSm6dTse+tTs
5ehea5qSolu3CkTRlBSNPNMi4KQyUX2djbZuR5yJvs5PfHZKinbswZS0mji/
/q7r4pS02sBwe1MTjyt2dX09p7ftbRrtYlqTkt5J5zRy/HpUrDNcxbQrJYUF
UotX1r9vk/Ob9jkpJX0rXL3dVPOJKWm1da1TUn21LbYuTCvFKdFnQ8W5xUdL
LbbuSEraV6DDlLT1d0k1Hbs1IoWLTLGUdMuzpNUGpupssROLXV1fz+lte5sd
3U4PpKR30jnt7LsM1VSYusxN2RTzLbzKMquJlbfi0YnLt5mL8j6f7SlpFsal
74vV232Vn7h1Z6Wkb52rvbyp2hZbty8l5YvtS0kttm53Slq++L5e/XdT5adv
3Y0+naWkRttYf54PlzqrZP0F6OOe4bBNfU4/pKR30jntbL0GVdaWucBNsZ8O
RQPOlIhO4X11WFUmYc1Tdmx1zdbteJa0WmquOXyuNOI37qK7JhNpK6ttsXWp
BDQlAtEs/7W6u54lrQrsSEmz1cRletpa846tO9Epz5JWBXZ83W4Kfn80S6Wn
u75xl1pqx7qOtKS+krB5c1VTEMqiBVIt2d2q4bxkM59HSnonndPUwfNheEXL
X+Om7B3yvGD4uOHg86Po3fuRjU1t3cGUlJq4qeZTUlJm322KM9HdsdzRt6Sk
aIGtKencZ0nLClts3fFnSeHrfdVu3boTHUxJ0QL7HvfUpKGtle/okPwG1k88
rtjVlZWsXiwr/yxyUFg+Myus/9ka7WJak5LeSee0tqmHa24bMufYKZ2Swhfh
7XQPKSlfYEdKioaj6fA37lps3SkpKb/Hm6akfIF9KSmVdDalpNXrFlu3OyWl
Jk6veZaUL7D1QVL9N+vqKz+YkuoLtLt/PqXm1LVp+jXyhMU2vXi8dnuZpqSk
19I/jUy/qilWU2d+buq2eTUr9TYfiCpvvBtdBabt/7+k8IHRFHPBN+5qtm53
SqrPxY1SUs3W1eSXfOTJFKipaq6kxdYdTElTkImm2MOmh6WkomnwlFS5jZsu
AXeZEsnoE0tJmWXDzUwt9VSd72hSpKTX0j8trM6Ey7ftLotz5PlaxZaoaJlw
Yr5YOL3FQTU1+P/D7vtrtHVbs0x016R2dycpaW5PGGHm6WHjowvm366mL+tp
sXVbI9LKcmL0tZRU81278O1qVmqRG1PSKKbtKSnzIqzqPT38PfDubgWbSUmv
pX9OFz0Nztflpuvd+jyi0V+je9Hb81E/KWm4fRf9MdH1fz2kpHZ/70xJF/y9
/Cq5ungt34avP79eATPLLuu/bFtuJyUNSkp6Lf1zulSXtu7qx99p356PpKTd
W3d7PpKSWpOSyIs+gfq87CZEShqUlPRa+ud0N6akftg6W2frrnf61tVrkZL6
cUoXvdwUS0Zv61uH06CkpNfSP6dLdamuBp7q9JTE9VpfpJap85154Z1b/QBS
0mvpn9NFT4POjcCDSUlDKz4181jtFPpwUFLSa+mfFlZnQidG4NmkpHFVfrfQ
Vew4NwODkpJeS/804mvtwHtISYOqv065kB3nfmBQUtKb6aJ29C3wBlLScIJ/
o6I2JS1/W7RvVvgibFW0tXPh6Bc2UvVHa65Z++mhRkoalJT0ZrqoHX0LvIGU
NJYwItWnpE826eRnhS9W2Se6umjhcKlousnUnFp7qtrjpKRBSUlvpova0bfA
G0hJA4lGpK0pqcWLYkoK2/+JRY+wnprGr+qp75l6UtKgpKQ300VN6V4AujJ6
SkptUaqplY1f1tPi2i0lDUpKejNdVHOxSPXS6hOt+gUB4Eajp6TVUssXNTXn
68mHsn2kpEFJSW+miz5BJ2TOz6mJW+MVANyuJiWtPg9cvV5OTM1a1ZMvHL0E
h/Wk2h+uN1VDqvHhWk5xeoVcQ0p6M130KcWi+URav0h+IsCT+F3S0B52nep2
c6SkTVZJtnKRTFWZ+ivrOYuUNBBd9DkpJVXWDPAwUtJwHnxt6nbTpKR6pz/U
ywSoHUsdJCUNRBd96lJSauL8NvVhxZkNhftM73Z393dNShrOUw/pngdstw3r
TdhLx/stVUO+5kb7S0oai17KD8nonVLlKNa3jK7nu44r6YcMKWks9Ydx68N+
d+UjjkQnkEqZXsockPP05YtVnfOUVZllnat6VtNTNWwiJY1FL2Uiz2pWanp0
SmoijMIBHNInISlpLJuO4dYH/KbI1rQlrUlJlWqe++TvuMIIE53yCfJR8UW0
zq2kpLHopVQU2j2rZjr0zAU9Q+esSEkD2XroSklncd6odEpKqnyRij+pF6mJ
m0hJY3l5L02BcFb07WrZTP3tGg+NOG7z9M+SlDSKHcdt8ZK3/JQ+9dF9fql8
JWENmevyqtqu5G8VmIW9FO7T6HG140VYZ/5FauImUtJY9FJTupfhOGhr6KWZ
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
QJSUdArj69ncWdUrpo9UkiqWl5KWHJD7hLEdGqlJSZuSzvFnSavmbRoI0Q+1
Dl4cpSQ6JyUdZ3A9npS0SficKDUxNWt1CV4K564qiRbOL1Js4UxKGt1UnYjh
oFVsWSk+JMqULy4Vlsw0Mj8WMqfWucCRLro9H0lJZEhJBxlZb1C8jtCn00ON
lDS6KRbGoYVotLnlr3ic14yFKfjgKzp9axfdno+kpKhoOr7Ljf0gJR107+7j
GrePU/aRkghNiZs9ONc0TkqaG1w/d5KSHu1nh/zRH/2vPfxJSeMyrF5CShqU
lEQo7DoDnBYu+ZS91qY2p2ZF39ZXHq0zE1u+Vq/rZ0lJR0xS0l+TkqBo01WG
fkhJhCpvAuGgn0fUP/pH/0cPf1uP7cpL3o4UFtaQTy7F1/lZUtJuUtKXlLTJ
vg9nGJ3dPSgpiVCm64x0TjRuSprb33o47EhJ4SKZWVLSblLSl5Q0K54QVgVc
T9/Dvh6UlESo2HX6llOMnpLmrWg3IrampGj5/KzMXCkpQ0r6kpJm+edE9RN5
Hjt6UFISofqvEl3QGB7sGSlp3pYWI2JTSkoVTs2afv2xkpS0SSolfTtz9fY7
ZQpkasiXkZI6FO7f6dcnR6mlrmogt3HLNCgpiVB91+lkjnhSSpq36NxBsSkl
bX2WNG35Jp7BvpLJL6tZq9CUKlaziJTUs2hKms8JUtKbSUmdywze6122ydes
6Hk2dd2V+5SHmRYpaT4/hPklnF5TLHrySdVw7jF8Ym1Ty98lZRaRkoqmbMaZ
tiejIymJIaQOpIsPXa6XOQDowc+984//8f/ew99lx4kDcrcdXae32WEKosqU
iD/hxOjzoOjb6Iuw8OmbdkqdU8t/4276NSUV13V8c55kKj0JmgtMsciTmrha
1rOkgeSTUfSc4Ob5JezozklJbLIvKOlzNonmmil44lMslolO9ZGq0QYerDmT
XObbsNXr+ll/ufhF0nKilFSjmJLCuLR67pNPRmFJKalzqXy0KpB6y4PZ152T
kthkd+/pduo9PiXNm3lkQBW/C3fNn6G9sjslRZ8lrWrLv+0qJTGrGenFJMUj
2d2dk5LY5Ejv6XkqReNPmIPyxfpPSfPG7liLlNStmpQUJqDoUlISPJuU1Dkp
iU0O9p4TAjV2p6TZQClp3uTUuqLTp5407pvBTIf/jbvVxEyxzLqkJOifU2jn
pkRKmi9/0YnLuauS4YKpSs5NSfWLOyCPOKX37ALypu0pKbXIKClp3vBwSvQy
+nPKj8+PHv4M55VUcpl3ZfRbdqtZqQIrmYh0e0ryuyQokpI6l0pJYboJJy6T
UaZMKjGFSx3ckNNLEjqr95wZyKiMPPtSUjRkdZKSPonfcUtJAymGl8v+pCTo
nHuhzh1JSZm8U1ykaUqaj7rU3cWRFb3cub1nXxC1yjhfYcaZp4dlwlmZMql1
3ZKS5h4IrQrcno+kpCgp6UtKWsoM5+jbcLxf11YuFL1NpR/T3pQ0ZZ8K7Uhb
+46T1L3E8sBztjnR6b3nFEFoSnxH7vq/ew/O/J3V7flISoqKXpXucmM/SEkr
U/pWJDMrNYVnuH2ckjdtT0mz3SlptXiLb9xtOv9Qr1Hv2SksTVJS+mZ7nnt7
PpKSGnlGl0pJK5nss7pVjt60POOoYEVK6tyOlHTKs6Sm37j7SEkttQtKdg1f
VZ+SX6XDTvhkU9JcbPW6fpaUdK9ndKmUtBLu1mmRksK3q2LPOCpYufcqQ9H0
xN8lfXzjrqWmHWjvwKeUEz+lZ0nLuanX+VlS0o2e0aVS0koxJX0SgSh1M8MD
SEmdq09J0+/+3e/KiRenpHC7Pv71hjZad6CTBp278fhcZqWtKSlcJDNLSrrR
M7pUSlo5kpKWn5DwJHZr5zIRZiU1MSwfrSdfrFFK2jqLGtd0oN1Et3o4OLem
pGj51KxlCisGqB5642Ge0aVS0kpNSvrU/UaJx5CSOpdKSdf/SUmjuKwD7Sn6
FL2lOfFiV/O58aaUlCqcn1X5jMk4PSj8+DHl7pZuIyWtZPLOvlk8wIhD+1Ue
mZLy1xQH5EFXdqATCP1I3bguj9LTg1Jmpe2eJUlJ93pGl0pJS5nMG50SnTVo
XibDDu1c/lp8scs2+ZoVPdX1HWiX0ZWp+oPfI6vInyqnxr9LmqSk+zyjS6Uk
KLry7pcT/bbQZ4W7OSAPuqUDnUnox40paVlga0oKU09mVmVEkpJaeEaXSklQ
5N5mUFISKTd2oH1HD8KUNC2+EnPWKvJP2zMRZi6/el0/67UpqZNt6aQZB0lJ
UCQldS71ieUtLtvka1b0YDf24ZWHCtSYTv3XGypPj9OBf7u7MvvUlzy+1Z3o
ZFs6acZBUhIUuaXpXOtL7aaL8mWbfM2KHuz2Pry9ATA7fjRG01D+4yMpqYWw
/z933MY8o0ulJCiSkjonJbFDD33o3EIndh+HxRyUqTn3VP5y+za/H6mNWm5d
/WZe1+8VWnVZBSkJim4fp+RNUhLb9dOH/bSEd9p6O3rWHezPxf/gD/5dD39P
GoOrbZl+fbRUX8nt19OLr6rAPlJS5154PndAHtdVHzrJ0L/TP9uXklqQkoAr
uYHp3AvP5w7I4zrsww6bxMs1/eKTlNRCmJLmKVIScDopqXM15/P5Qv9j8b8a
XEmVX07s5HzugDyuzz48/hWm6aYfa/Mk7ZLRai2356PnpaSV6AmhuHOlpC+/
S4Ii9xudqwkvq/gTTT3R6dOv/yeOTs7nDsjjuu3DgyecfR8dQ9PHRqk13p6P
XpKSwon53b31s8fM3JpLZw9X1SgpCYqkpM7lz8Dh3FRK+rF4zJRKWJ2czx2Q
x3Xeh7ubt/rE+KTm8FgXJ6PVqjOx5Wv1un5W+FZKWk4MrQpURpj6zyelJHgk
KalzW1NSfYCafOPu0Trvxsozz+omR0qiKHVvfH0z8sml+LqyWDEoPXWkpPZy
NCWtTiNS0kdKggq3X0rIa5GSinOlpAcYohu3NjKVmKCHZLS0IyWFi6RmbU1J
zD67UtK0+Ixxyn4rQ0qCJ5nPG/Qpf/rNzA1nTZ4lvcko3bjpFDTf5IyydTS1
uvvtyrQxJUXLp2ZNi6/kvfkbd1GpcLQssCklpZLRkpQEj9Tn9YXZ1pS0ikLh
rNQnYFLSw4zVjZWtHWujaKTbZLS0KSWlCqdmhSFLSppl8tFcYFNKWgal1BVz
X1CSkqBz/V9rXq4mvNSknmh6kpIebLhurDkXDbdRnCV/39uhTSlp37MkKSmq
eJBISV9SEhQNdNF5p5pzb/jQfwpUlu/hfO6APMWg3Zhp9lg3yZxi3J2+NSXl
09B07HdJd3dGX/alpMrPIaUkeJJBL0Dvse/c2+JPShrLuN3opPRywz02itqR
kurTkJR0xI7PHpcvojq/qkZJSVA0+pXo8aQk9hm9G0dvP5s8IxktZcLLvKWr
1ztmFSOSlBR64VU1SkqCoiddlR4p9cnVLS7b5GtW9GwP6MYHbAJ5F59brjRV
5Jfdf5sqf2T3HjFJSX9NSoKip16hHu+3hT4r3MfReKIHdKYT1PNc/8HLLaSk
bklJX1ISFD3+UvVUUhJFj+nMx2zIm70hGS2d+RT/sLs7oy93741f3NgPUhIU
3T5Oybv3BL6Sb+QpG3u8EmZP6s+zjjGuVHP2AG4hJUGR61fnpo6/G1CZoTZt
7PFKmD2vP5+3RY8kGUH/pCQoci3rXJ8padOTpsrNdByu7Hna18zdnfE3emsP
XwePluMHW+WCjh/4kpKgyCWjc1NnKen0G2lHYMrPbvlX/+p/7OHv3h3Uf5Sr
b+EF7tr2g5VEXzdyfS/xPI4ieINbLqzUm8ZJSUPc1A1kkpIG8bN//sE/+D97
+LtmT50+fi8+wBzPHOcogjdwp9q53lLS3Cp5pzUpaRQvSUlNR/qq2nlFqRdz
+cy5KFw2ui7YwVEEb+D+9l7F/s+npPmu4Pt6OWU5a7VIqob6lLRsvJS0T82u
vz0fSUk1HpySrhzgqSwTTT2pYuGsaD1ttoAXecBR5HdJUOT+9l7FoJHJL8tZ
y6QT5qBosXDW1pS02oqW/fRANbu+GF6WVhN3vL03JVUeRcV+u75h0+NS0pXd
G666+OKTzkSpWcvNcbLiuAccRVISFLm/vdcUsypQjEirKZlZla+3piR2qNn1
NU95wtfhi+LEflJS/v58Neua01exYc9IScXOv8bpKSlfD+zzgKNISoKi26+J
Lxe9VV7ulPqUVBOgpKR+1Oz6gykpWjJfrJ+UFJ6aoierC85gNQ2rTzHhlK/w
bXS9p6ek6BZdbEqHneiL4tvKCi8TH+evcXFvX+MB2yUlQdGDT2IXuODiMvWU
krjM59SUFBarqbyHlDT3xid9W9K6eTUN252SVhOjr8MXB1NSuAn3SrUn0+ef
Ld+py9fTTledfKNH9sMDNkdKgqLnnbvGUrx8Ty1T0ir71DxLcsCcpWbX1+SX
Wep7dOHcmppTa7nLJ5uSbm9YfUQKC0+lEFRZfzElLdtMa/o59KQ+ecC2SElQ
5KJ5r/COKyywNQplZqXiVWotqW/cOWaOq9n1m54lVU6chnqWtCqQWvD2hh1P
SZlKjqSk/DFGC3o74zGd84CtkJKg6DGnrEEV+z+TX1LZZwqeFtU/aapMSTUt
J69m17dLSZuC0i0pKVWgZuL1Ddv0dbtV+W+1NQvWpyTJ6Ea6Pe8Z/fOArZCS
oMiVtHP5CDPfC2V+PZQpHxaoT0lz867vk5donZLqg9KVKWlTmWtOXzV5tjLC
zNo9S3JKv5fOr6GXeiAlQZFLaufqU0zrv9Rx4hBqpBhh5lvi1MTlbXl0kWgN
d6WkSqsPAe5uzl+pSTHRZJR/xrQ7Jd3dH++l8+vpq9tJSVDkqtq5/lPS3M7L
+uQlKh/0XPBn5+adlZJSgWhTSvoYjPfR8/X01e2kJCiSkjo39aSmqdd0yxtM
UtIgpop/oPsrfJuZlZpSTEkft6A3yXT76vS4PKluPdOG1W5acN+xsaz/lKNr
9EN09PZ/pCSo4M52UL8tdFWhw+ksUtIoKiPMBX+r+/Ab++SFaj5HSr09suMu
2+nnVj768Tl6+z9SElSQkgbVbUr6OKhOEn7CfKO7O6NrU5cp6fOIG7mBFHt7
NZRSr4+st+keP7fy0Q/O0dv/kZKgglugzl18M5y3teWN+gS6cve4/EW0bbd0
y9sU+3n69VdjUyzdpCpZFpjSWTi6+PLYWC4ePXhWtYWVh1WFi1QedUMfmUM3
/ktKgiLX0M793Dv/4l/8zz387ThOHF3QA8PwApUp6RPEpU8pXETzSHTZaEzO
rz3MX5kCWxfJG/qwHLrxX1ISFLmP7dzQKWnehHP7BNjKMGztYErKV5K5Uq+m
h2+jBepDUGXJmq3It3wsQzf+S0qCIimpcw9ISR+HGWnRT8KXb/MflVNP7zVV
n5I+2d8oLQuET22K640WS4WdTFKrD0eZOvOGPiCHbjxQyY1H556RkuZtOaVP
eJjih+r5+0nq6b12NqWkz8ajepVcKqv9pBNNNJdFC+x4llRp6KNx6MYDlaSk
exX7/0kpqWZ7eaEdKcmjpd10WiPFM3nm2U3NhWBZOKw2Vclq+vJt/nW08qjo
IhUdNvahOHTjgUruNO61usREC+STy9f39XLKcla0/HLiZSlpudXwNW1PSam3
1NBpLYzVq5kxdVmdY/XYytCN//K7JCiSku41xT4VXBXIxJZV/Immnuj05cTr
U9LHgcfC6nPpeWK+wOcRNyp30XWnG6tLpaSDhm78l5QERW5W7xXt/OVOSUWY
cHoqJRWn3JKSMpvP26RGQbGA4+cIvXeu3vqzOECinzycstLKOnvrsbeRkqDo
JXca069S00MXlMy09rMlJVVmoq5SUqYTeI/UKMgXKM6iSO+dqJPOrBw4Pei8
eY8nJUHR4+9RO9/AVdvC1j4+JUX7gVeRkm6kA8/SSU9KSVSSkqCo8xBxxBCb
Nj8wyjxXOj0l5d/ekpI+2/dX8Zndldp1y+NF+3A5sViAg3TjKVp342pEhNM/
wbiYy0drWNWWqqfdWBv6wBu68V9SEhQ99U5jlI0q9v909u+S8nNvTEnz9oZT
oqv+OfFP/uTf9vA3ysEGKY7h4y7ow3wCCpuxTDqpYpX1nL4t7aq9xtCN/5KS
oOiRKelJW5SJMKnsM6UfFUWTVFcp6ZP9pHRV7PZ8JCXxGI+8FlzpmpQUvo4+
PwrLRF+EZ9p8XDrX0Mfb0I3/kpKgyJWxc/kIM1/XwinFWakabk9J84Z/fv1a
XVjg9nwkJfEwDubdbklJlc+AwnBUv7iUFDV047+kJCiSkjpXk1+u+bv+OAkT
32ru7flISuJ5HM/7XJOSUg+DKlPSjomNtmv0w2z09n+kJKggJXVOStqXkuZF
Vq+/b2uKSUm8lkN6n9b9tnoSNE9cniFXL8JFooEorKf1Fo1+jI3e/o+UBBUe
lpKetC1fYVK4UQ8bvixQDC/F1/lZUhKv5ajeoXWnXb9T2q1x9ANs9PZ/pCSo
cP3db1NP2pa83xb6rPCImrC2LyVNv3tsJCVBngN7q4elpKarG/Ho6uHzwxNJ
SVA09BgPPWlb8p6dkpakJLiLY3urpg9fLrtet17RoMdVtNmDbstHSoIKUtKg
3pOSVuYjtibRZDJROHFfRJKSeDaH91Z6LG/o/lk1fuhtkZKgSEoa1GtT0mx3
SppJSVDDEb7Jw66q5xq9Z6QkeJWHnc+ftC15UtKOlLRaJPM1PCkJlhzkW+mx
0DP6ZLkVQ2+RlARFUhKDqgw1mZ8dHf9F0ttSUvgbsVe5u/tvpge2cvx8sv9n
8EHNG/KYLQJSnnTu+vR91lpeKeb/5i+jU/BwP7O/onOv6ZBbjqJpY0qa+yf1
VkpKedhNzm76Yeu2x9PmTRr1yaC9cZm7e/18k5QEr/Gw81i32zL9+ow+dZpN
FQtn5euP1tDU9T0/Hcg15/51e9Sd4tlbt8+b+2TTtv8s/OPzo4e/N+8yTvew
Gycg5WGDvc9tyYSayryTeZ1fnZQkJe32sJPDud7cOaltj57Nbs9HUhKne8bw
97skKHrGYJ/1uS2ZVt2VklZfh4i+/cTS3HJW8QFWqvAppKTWnrpdZ3l5/+TP
XfOU2/ORlEQLDziipCQoelhK6lNvKWmVffJhJ5qYoukpfBtdxVmmnpy+dbd7
5Ead7qm9VLldq2LhUpOUxCVuPPnf60inSUlQdHygUZTp4XDWlM44NefGcJFN
ZaZEzIm+CCdGW+gAG45dVu+RfVW/UfmRPsVS0nyK+L4Op8+z5tfFt9EpUtLj
nRIWhnakB6QkKHr5GeYamSi0KSWFyxbzyPUpqbg6+nfuLpt+tZq4421Ngy87
sz3y8F6N8Xl0F89I4awwraxyTXR6ZmL0dWqulPRg9unSjt6QkqDoYSmp221J
ZZlMYAnfRqeEszblrFT5/IvU3OJ0hnD6/qo8xooTa+rPTGxxHD7p2J5iPokh
v1owOmsVWDKhKRVtMnOlpNd62H3LWbZ2i5QERQ872/S8Lcu7jtWUcFZYPr+n
ovVEq43Wllkw+uIT3DilbqjCiXSuxZ5aHWyZFYVzi+2Z0rfoxSnHPfLADs9F
qVnL6dEOz6ekmgyVWWr6NUZ92+Abd49nb6Zs6hkpCYoedvv6pG3plk5+thtT
UlispjH5lLSK6qdv3SOHw46UFJ2VT0nzHol+By+femq+sCclPZJdmVffP1IS
FElJg/pt4eIK39PJ79QoJYUhJbwVX82tbEkqdoXpqdGh+7wRkdk1J6akyi/a
1TyBkpJewn6sUdlLUhIUSUmDuislNfpAnn60fpZUOXHTs6ToYRmdUt/meo8f
DquncvliqynHU1LNl+6kpJewH2tISXCWh93xPmlb8m58lsSzdZWSwmKrQJTJ
QZ4lnWXrQ73llHwsiuag/EQp6c3sxxpSEpxFShqUlEQjvaWkfJOKKSlV54ke
f9o5MSXNvyf6ykzMvM0UzoSpBh3DpVaje/VpyVJ+2U0r2ldD/YqOn53CTZaS
4CxS0qCkJBo5fRBFb12WE8Pbm/zbVM3ROj+Ls1yj092zTzuZO8+wZDgl85Oi
E/+KK3r2PnqJfBY4HjeKa2yhuIodQ09KgrNISYOSkmjkPYPoLHrsS0qiKSmp
vkzNUlISFElJg5KSaOQ9g+gseixl6sndncFR05aUtNzp0derYqkXmblh81az
lmVWB2GqGdHX0VnFxsQ7cUFKgqIjl4/qq9PbnbvLvqQkGqk8Yvcd2MsR0Who
RNfVekUXrAVebjXQUm+jJ5kpyC+pMtEX0WXDgb+ctSxT34z6VkUrSXVOlJQE
RTtuJJre/D9Six6TkmjkgvByWf1SEjxGfUpKTczMyr8ozs2XWX1qWqw2FeKK
lWSmhKQkKNp69+5+4IgTe09KohEp6cgagUaGTkmplu94lpSpJDMF2KE+JXl+
dIqzulFKopHU8bn6GDP6CWfqc87wgh5WFS4SLhiuPdWY1bqiNaRaEi2QGbZO
jHCBTEz4/DrMUxPDU0F0wZqqwgZkyqTeFkvW1JlvCXBE/uq/Ktm6MS9xSk9K
STQSPT4rr/6fIPVUXvTziyybUX9TEda8dUPyfVI5FzhF6oQQ3sasJoYfenxi
J4qVVeHM3Pxa8oVT1UYXzFeS7ytgh3BwpYpd0Jj3ON6fUhKNRA/O1FV4SoeL
KXaLUrNIOD3atmL9m9ZV084Up0e4wLkD7dnDtmbr/C4JimpS0rNPJnc52KtS
Eo1kjsxUiMgEk/pwlKkz2rZi/Zm5y89pi4s7Q0IPpKR6UhKcQkq6i5REn/Lx
JPMsJl9gx7OkaDPq6z9rojMk9ODEgbZ6cHxKbZvKn7Leg6uQkqCoaUpanoju
Oh1dYF+TpCT6lEpJq4SyHNqZ18uJedFFom1bzaqpZNX46Jau6sn0RrG7gNNd
PNY2ra6380BNe6QkKIreiqwK7K65fi27a+6kzh2LH1yjlEQ79QfnpkBxvM7r
b0WkJOiElFRPSoJTNEpJqQ+BTyElfaQkWpKS6lfX290RPNWRz2yjz5TnifPb
1dywcHRutJL861Q9Z5GS4BSXpaTVGlNnqtWL8KwSLZCvp6ZktB/yS6Um1jty
bpSSaGfTkdniQh+ts90dRaoBlSVbNwb4HBtrq6v5amLqBiP6orJwWD5Vj5QE
3bo4JeXDTiq/hOXDt5l6as6N0YiUXyrayE2kJLrl5r+GXoLLHExJ4etMtPkE
l/h9keoTu0NY3ai0ICXBKTpJScUX4cTViSuzeH3JsLU1MS2zvXlSEj0TAfL0
D1zpxpRUX9UndofwSXzku5p+lsoKpSQouiwl7f4QJlU+tYojJSvLSEm8QdOP
OkenZ+B6u8dd/cek+y79mZRUrEdKgm41Skmf6jNJ8UX9GeZ4yWj7pSTeTBwI
6RO4xcEbktUdReZttPBqVn7ZYuFwqbNISXCWdinpEzt1hBOXb6MvPukz26Z6
KktGm7o6oa1e7D7XHelbKYnLHDzOn0EPwO12j76Lh+29Z4nKtUtJUFS86A8x
2AclJTGi6KcHj3d3rwN/Zd9gvHII33u6qF+7lARFxRuAUcb7iI5snZQEwAtt
vXRe9lnH7Z+obFq7lARFPaekrZ/ldhKp6s+TUhIAbHJ7GOnT1j6RkqCo55S0
lGpGJ81bkZIAoJ0+r/532dEbUhIUSUktSEkA0NTLfzx4cNulJChqlJJWIzcc
yNG3qyG/qiFcMFM4fJvallThmg1JbVSqQLjq1KwiKQkAZuGNxLPd3d/wfMWx
tmMkTr9Gm+nXHJEpUHyRKZBZ3ScdlPL1736bam2qo3aQkgAAoJGmKSl8u4oS
W1PSasFo5anVFdsWbVi0tlThsCX5z3ykJAAA6NAtKSmVfcJF/v/27mBJThAK
oGj+/6c7i1RSjMAD0edI5pzVtCJiZ9O3tDs33ksari2Y9tR9qOaWJpUEAAAv
lFpJw3zo1cTzlRQv7NTLYLXNU69RSQAAkGRYSZ/VUKpvxzS3HB5Oaw5ojixf
HmY4zNYcP1zq4UTDwfWxzdOVx558U79QSQAAkCT4GF+OyV7DY+d6D5UEAADv
pJK+i0oCAIB3mqmkzyOhNLmS/8P1K1VJAACQZL5Nfk7CZLvlnVRJAACQ5FQl
CaXr7noPVRIAACQ52z5C6Yob3z2VBAAASRbuEPV+JZumpPdKJQEAQJLrn96r
/1yIL+76lzpQSQAAkCT1kzx5VBIAACRRSZtSSQAAkEQlbUolAQBAEpW0KZUE
AABJVNKmVBIAACRRSZtSSQAAkEQlbUolAQBAEpW0KZUEAABJVNKmVBIAACRR
SZtSSQAAkEQlbUolAQBAEpW0KZUEAABJVNKmVBIAACRRSZtSSQAAkEQlbUol
AQBAEpW0KZUEAABJVNKmVBIAACRRSZtSSQAAkEQlbUolAQBAEpW0KZUEAABJ
VNKmVBIAACRRSZsSNQAAkEQlbUolAQBAEpUEAABQUkkAAAAllQQAAFBSSQAA
ACWVBAAAUFJJAAAAJZUEAABQWqukX381d8Xzl1uCeZqH//m7eVQ55+RSAQAA
agsFUWdLb7Z65t7emeCK5y8Dav4UAAAAB3mVFCfScNepLTNlpJIAAIAZN1bS
v7s5n9adnea9nuY8vcG9R+wW/gYAAOi5q5KCGupt6c3ZG3w4r0oCAAAy3FJJ
a1t6L3uDF564+xS/3qCSAACAGXdVUq0eE8wwPEVz5EwlBRsBAABqN34vqdwy
WUm9AooPj3cNH+cDAAAIrD2KFjzDVoZPfVPp8IWj4HG4enB91GFX7xRnrw4A
APjJdAQAAEBJJQEAAJSWK2n+RxJ6D9qtnfTi146GZ384GyUqAAC8zfL3kk7t
qn+NYdn1rBjO8MApAACA13q4kt4QICoJAAAILFTSYXz9DFvvobjgebzD3/XP
1vWmCp7l613azDKa5w2WOlxG88BgtfW7CgAAPONiJTVvEjUrafIeU10f8YDe
yObChluayRNccrDI+ly9sju1eAAAINtdldQbUG7pDa6r4fM1WIIBn1baNGce
rrmunubKewUULzLeeLjMhX8UAADgLk9WUr1rpn2GU9W1EpxxZs6zlbRwLymY
v74WAADgSXdVUpxOvb3zlXR25Hwl1feAvrGShosHAACyrd2waN6+qXeVA8pP
/s2XpXLa3rHNA+uFBRt7y6gXeeoqgjX3LiE+BAAAeNLap/HgEJ/tAQCArS3f
s2geJZEAAIDdebILAACgpJIAAABKKgkAAKBU/+YbAADAD/cbgYkCvQ==
                   
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 7->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/v9UyDH3QLUlDuW6DMG4hQOqJIESmelYJIkyLaFbsRza6yQYq2iW4a
SkRLgyho6FghJCSEroqCN8DboE51uPY5ery+PH/9Z+wZ+/PRT7fOscfj8dhj
+3t8znX/x3/6l//sz/+DaZr+zX/08z//7E/+7X/6V3/1J3/9n//Rzzf/xV/8
m//qX/3Fn/2X/9lf/Nd/9q/+7K/+kz/9D39O/Pc/y/7p35umv30NAADAyufz
+f4XAADg5ZZBCQAAABEJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIA
AFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoC
AABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElK
AgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJ
SgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABg
SUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFi6MSVNwAhuOT8AANzoxrug
e2/8gEq3nB8AAG50412QGzDonEEKALyTlASkGKQAwDtJSUCKQQoAvJOUBKQY
pADAO0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALxTtylp9/+xZbnI/N/QqmSq
hvrVhUul1nukqUfWkl+qZmOjbU71WKZkps7lxGKZ6Ipq6o+2rbjJqTbkO3ZK
HGypaotvM5uW6aV9zq0NAGAUN94FFVe9uqWsrDNaf3hvma92U5+kKq+ftaOp
4fRoyX1tS0m1ubii4q7MR49iCzfVn2lbTf35t5X7JT+rfq8Vlz1ISgIA3ulJ
Kan+LrRYbaOUlJm+tam7Y0XlnfnWNtTfyUf3e7Tm+hbW178pfOWbl2nq1imV
KanYLaePZSkJAHinZ6ekcFbljffpKWnHDX/984X6KfuaVFOmfmfVJKCDKSmz
7L6j/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT
6402oLh4ZbXRYsWJ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4ti
gdRN8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnT
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
D0hJU8xnY5Jt11QezOUG+iElQZHLVuf2paTVi+ufJYVb0ajwwaX6XNH1z5I+
QZI6WDmkOGCgB1ISFElJnZOSmi7V54parCKs86yUtKM8APeSkqBISurcwW/c
RadfnJKWX+uqLL97RfsWfMNaalLSjm/cZeqHIhcguIuUBEUuUp07+Cyph5S0
Y5NPX/bExg+akop1hr9OOrd+SHEZgutJSVDk8tS5+lAzP7IJ304L+yKSlNSi
qovXUpOS2tUPeVsfOgNHSElQ5KrUuX25JvXVuyN/Q6Sk1OKrH90ceW4iJbWu
hJdzVYILSElQ5HrUOSnpyOJTzOfXw37r6sZNSZlqT/wY3/mEU7g2QVNSEhS5
EnVud8BZfePuPSkpWsNqyipJHay8hYtT0ohrAWA3KQmKpKTORZ+G3OWyTT69
hklKal/z9WvhPRxRcC4pCYquvPvlRL8t9FnhbqcckJlY9HnxN+4+xxLivrXA
KVyt4ERSEhS57gxKSjpSyfTKf71hrvma54NOLLTgmgWnkJKgyBVnUFLSkXoO
ruKCIdNoFRd/i9K5hUYyB7CL2nGF714/3d3dfxEpCYpedU54EinpSFUHVxFd
fB5Kp4yp00flXfcDTi80FR7Gb7vXPZGu+3pJP0hJUPSGU8EjSUm7qzp+BcyE
r3lWiyB20F2fmjrD0Npy3L3wocApdFfo2X0iJUGRS8mgpKRbasvXuZzeYUr6
XP6Nu+V6r1kRL3fXET40HZXx4M6RkqDowWeAZ5OSbqltVefqTqz/lPS56cN2
JxkuEH1a6tgr0kV5+gdey0VkUFJShxWmEtOJqzjFLTeQt5xnnN9eJZWSHAMZ
OqeGXoJ3cgUZlJTUYYVTx/96Q1j/9WP/rtU5xb1BJiI5AFL0TD19BS/kCjIo
KenGOvMpqekqTnTL2L/l6ZVT3DsJSkW6pd7z+srvkqDI5WNQUtKROg+u4hkp
6bK13L7SRmvMP7y4WIsN7MrdHfyLuzvjNE/altae11dSEhQ97Jz/HlLSvmpP
uc+JLn7uHVR9PdfdGlY4feuOa7eunzX/7nd/08Pflf15l5/b+Md//L/28PeY
3n7Mhlzjed0lJUHRpnsb+iEl7ah2x/18prZTWnW8/p8lf3x+9PDXYUpquiIp
6UpS0umiG3LWebJy8RM780ibL25qJ6QkKJKSBiUlbapw91OPTJ2ntO14/SOm
pE0beISU9BhS0ulSG7KcfjAobZp+xFxn089qHrPrv6QkKJKSBiUl1dcmJXWY
kjZtY5+kpCtJSad7ZErqbZGeSUlQJCUNSkraVKGU1GFK2rSZ+3iWNJD8wNya
klbj/YUpqXii25qSVhVGT6rLMssXq9fRwuHbVCOjhcOSqQanmpFfaWb6oKQk
KCqeSOmTlLS1zvCCfrDCUxp2vP5p5JS0aUt7M1WkpPl4W73+vq0p9raUlLnj
3RFnoq/fk5I+2Ut8Znq4F6Zfs8/qbeZFpkBYZlUsmlkyrYoWq29GZqWptQxN
SoIiKWlQUtK+mnekpKnauU2tL5nKLEvh9LBwtMyqfHRxKSkfYYqv87PemZJW
Y2qSkjZa9V54jkptyJTIEctKwjL5F8u1T0E8CaekmlEsvCoZNriynlSF4cRx
SUlQFJ45GYKUtLvyIY75+hZGA8scW4qvUxM3LXskJW3a2K4cSUnTHx4bSUmz
aEpa3uWelZK+da7e1tc/Sm9ngkOmwCeRFKIpoyZo5ANIu5SUakZlPVIS8JGS
hiUlHam//8O+2LzlPeRZKalYPrOuIympZns71FVKeoMdKSlcdn79fbF6u7Xa
qOURcm/J6EE7F4sW+NTFh3DZYsnwRbS2fPli4dSsmmbkK0xNHJeUBEWr8yqj
kJKGWMtumRuY8F7oxGdJUywQrWZlVvc29SkmH5dSxTxLWs7d/Sxptexc+b5v
4o3S21MQLsIp0aXCnp/+EDTC6dEpqz0YfbuqYVVbtHxq1WFLwvak2h9tdnSl
qR4bl5QERdFTAf2TkvI19OOUTsjUNmVT0lLlN+6mIBOtFm/xLCm61Z2bjqWk
mZT0lR8400kpaUo8S3pqSsqfOg5WfryesTxsS6UkKDpyI8eNpKR8Df/yX/5P
PfwdvA+piVr5lJTJQZtSUuWzpN0bu9yc45VcY3dKWi04pb+G98KUlJm7OyVF
E9N04Bt3V3bLbjWnjiOVn1LPWB62pVISFElJg5KS8jXcno+OpKSacLQsfG5K
Ch8e5ReUkuqDUj4l7YtIj0lJeVtT0jyIVlP+OPi90qrYY1JS0cEN2XSa2lf5
kQItPGbXf0lJUCQlDUpKytdwez7akZJWdx2XpaQp9qgompLyQemsM8koZ6R9
KWney6m3UlLU1pTU7u8xvd15yigW3nqqPO4xu/5LSoIiKWlQUlK+htvzUX1K
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
nrywN1ab/MIeACnpLE4gDyYlDUpKeok+e6PPVtUbvf375FPSe56nzNu7mgKv
IiWdyDnkqV5yWXweKekl+uyNPltVb/T271P5LGn0zll9tzA1d/TNBPrhfPJU
LhaDkpJeos/e6LNV9UZv/z6rZBQNC6P3TLiNNzYGeA9nm0dyHRmUlPQS3fZG
tw2rNHr7dyh+x2z0y0H0ydEtLQHgAUa/LL6WlPQS3fZGtw2rNHr7d6j8Jc64
PZPfqHG3C1rwuyQocu0YlJT0Et32RrcNqzR6+3d4bUqap4+7aXA6KQmKpKRB
SUkv0W1vdNuwSqO3f6vVv2kQ/UXS6JeD4rOkobcOziUlteAk8zAuHIOSkl6i
597ouW1FQzeeqNTvkjxLgpCU1IKTzMNISYOSkl6i597ouW1FQzeelOi3CqUk
CElJjTjPPImUNCgp6SV67o2e21Y0dOPJyH+f0H6HLympESeZJ3HVGJSU9BKd
90bnzcsYt+UAx0lJ7bi+PIaUNCgp6SWa9sbUk3abmdr2i9cI0A8pqR3Xl8e4
5f6E46Skl2jaGz8r//H50cOflMSVbvokoBd3dz9dkJKaMtCewTlzUFLSSzTt
jenFKenjSHsfMeFLP/CRkhozvp7BqXJQUtJLSElNN//6lXIXuzukT95MSmrN
+HoAKWlQUtJLSElNN//6lXI9l7kMnfNaUlJrRtYDOEMOSkp6CSmp6eZfv1Ku
Z0fn6Z93kpIuYHCNTkoalJT0EjempPnHC9/Xq4nzrPz0VT1SEhezl2vopReS
kqBIShqUlPQSd6WkMAGlZuVfpwpISVzALq6nr95GSoIiKWlQUtKgtm7dLSkp
nL47JeWrlZJoyi6up6/eRkqCIilpUFLSoAZNSUcSk5TEXVK7eP4WaKpM5sp4
7mGzr7Zl885qj+HwNlLSZQyucUlJg5KSBrXcuuV92jW3ZGHlNSlp9cOi4u+P
wllSEterGVN3Db3jTm9e59sL4zK4xiUlDUpKGssU86n4TLiHlJR6ThSmpPq3
UhKtVQ4oKalRhcDM+BqUlDQoKWlQq61bfaxdLH96Y65JSfmIdFdK+jz9YHu5
rQNqdTVcfnwRfqyRf5FvQOpDkuinKPnmZda+qjPdT1WdAxxhcA1KShqUlDSo
IVJSfeTJRKEwTOVX124z8z1wy3q5wKYBFUabVOTJv8hklq1rWc7auvZogSLD
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
x1ybeLPnHb3P26J6p2y7lFQpE3yKmeiUPbU7JZ219uOV3L6K3Vz6ByUlvZCe
aaqme8UlBvW8g/Z5W1RPSrpSJvuEj5PCYi2CUv1SJxa7QD8tmbniD0pKeiE9
09qmq0/NydMJlk6s7uXm+7dxj8/nbVG9U7ZdSqqUT0nh21Wxsw7IrUGpfu39
DJl+WjJ7ySnleaSkF9Izre3o4fxla8enf3CiKebz66V/rIPzeVtU79xtl5Iq
FVPSJxFJTj8gj6ek8JhZVRh9u3qx2qjKWZl6wpakXl/vxlVzhJT0QnqmtYM9
HJ7Mw/sZuEXq/i2cNYrnbVG9U7ZdSqoUdmk0DoQlW5z86ysMG5maHi1ZGXlq
ZmXqqWlAuAlXcu0elJT0QnqmtbN6eEqrLHa9Uzbc1t2issGpt2ENN2/Pr07Z
ouG2Lm/au+1Lp6ekm7vyVwe3ZbVdqSnTrz0/pXdE6yZFy0R7I2x8anNufJGa
eL3TDyeuISW9kJ5p7fQLWf7y/fP1j8+PHv5aHFo/6/zv//Ive/hrtHW377VN
+y68U8rchPyc8t/963/dw19m6zZt0arkP/kn/0cPf7uPzN3bvtQiJf3Df/h/
9/DXNJJURqGmKamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d
2Xfz7Ud08SFS0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0Filp
UFLSC+mZFvJBpkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp
6amKGS28EqUKp65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp
8Dvt4tbdno+kpEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvv
sXffaRd7qT4lrXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G3
56MjKanyo60LLhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGq
UvWvajiyddHFpy15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG
9UTrjC7YYuu2ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42
vJ+WsImU9E46p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkp
unU7HvrU7OXoXmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop2
7MGUtJo4v/6u6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwz
XMW0KyWFBVKLV9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnR
Z0PFucVHSy227khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11d
X8/pbXubHd1OD6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+
n+0paRbGpe+L1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+
Xv13U+Wnb92NPp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXW
lrnATbGfDkUDzpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYT
aSurbbF1qQQ0JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1u
Cn5/NEulp7u+cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T
1MHzYXhFy1/jpuwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR
3bHc0bekpGiBrSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv
6JD8BtZPPK7Y1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn
2CmdksIX4e10DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV
6xZbtzslpSZOr3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14
vHZ7maakpNfSP41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRz
wTfuarZud0qqz8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp
8JRUuY2bLgF3mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5
WsWWqGiZcGK+WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML
5t+upi/rabF1WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w
7m4Fm0lJr6V/Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2
f+9MSRf8vfwqubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sff
ad+ej6Sk3Vt3ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653
+tbVa5GS+nFKF73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOd
eeGdW/0AUtJr6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZ
pKRxVX630FXsODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt
8AZS0nCCf6OiNiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6
qB19C7yBlDSWMCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJ
b6aL2tG3wBtISQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NF
TeleALoyekpKbVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek
1VLLFzU15+vJh7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzN
WtWTLxy9BIf1pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd
0tAedp3qdnOkpE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep2
06Skeqc/1MsEqB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP
6Z4HbLcN603YS8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClp
LPWHcevDfnflI45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9l
Is9qVmp6dEpqIozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd
8gnyUfFFtM6tpKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8
kYo/qRepiZtISWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yU
PvXRfX6pfCVhDZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX
4Thoa+ilmZQ0iiMpKXNzmLpTzdzc5hcsrjd/i9tnUJKS6hVTSbQnpaStHJA1
9FJTupexOGLr6asvKWkI+w7XypRUWb7+1rRmLfXr7YGUtMnqOVFm4mrWssym
KeEqUtPzLSmSksail5rSvYzFEVtPX31JSUM4mJI+6ft8KamGlDSo00ONlDQW
vdSU7mUs0ZuT6PU9Oj1T7Pjncrtv8xrdOBndX1JS/3YfqzVjJzrEzkpJB+vp
h5Q0KCnp5fRSU7qXgaQO10xKqqkhfzOTWe9ZGtVvdH9JSZ07EpFqPs2YM0v9
xyD5D0/CCpdvwzLRFfWWSnprD5WkJHRUO/qWgWRS0ieWa1bloxOjC0ZftCMl
NSUlvUHmYw0DoYaUNCgpCR3VlO5lFNenpPzoSH0yPAXCtURbG74I17VpwBrd
HynpHaSkg6SkQUlJ6KimdC+jyKekTxBtUjdL4fQwgBTvGVJPnaLTl7Myj6vq
F6lkdH+kpNeIfoyw47OFd9JLg5KS0FFN6V5GcTwlpe6jUnVmRkeqnvoQVFky
s0VFRvdHSurYKcfncjRlIlJqmLdLB2ONPilpUFISOqop3csojqSkTDLKpKTM
Sue5mSdBlc2rD1aZlqSat3WR55GS+nRWRFq+To3r6PDZ/eFDZXvGIiUNSkpC
RzWlexlFMSVVvs7P2logFYJSJXekpN2D1OimW8cPzk3Bp2bKceOOOClpUFIS
Oqop3csoar4zs3r4MqeMVZnUrFSdm8rkXy8n5kUXOd5jcLtTjsxMJcX682M8
NX7DyvMngWLlm7a3qR2nF65UedW4xmWbfNmK+rGv/af3CTPdyyiGOFanX++g
7q1ziB7jhU45MleVLG8zauqfEqlnWdvq9ar+sIawqnzl/YzQ3XdoXOPn3vnx
+dHD32XHyZUr+t3v/qaHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzEVd7Z
kZLq23kNKalzUlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHHbicl
9eaWlFRZeFNKOvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQU9uR
krpy+qcHqbfFMSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH5LSQ
mpVZqvg2fB2+yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4UwxdzcK
klocn6nbldRdzdyM1dxP6W4qWqD1iDOiP1JSTxyQ3XIDcK9i/0+LlBTeudVE
m2j55ZTo67D+y46TK1eUyizh61XhaJnMaylpFOEoc5Kkc42Oz1WQ+fyagMJV
L5NOqlhlPadvy4oR/ZGSuuFo7JkbgHsV78TCqBJ9nQ9KZ72+rE8uW1ExJaUm
SklPJSUxnHYpKXy9GhGpMtEXYaTKx6V2jOiPlAQV3ADcq3g/lklJ9d+Uk5JS
K8rEFinptUQkxnJZSsqHmkw4ql9cSrqMlARF7gHulfjc+pdP2KKRZ0p8fW71
rTkpKb+ifHJZRZ6VVDIKC0hJw5GSGEi7lBTmndUa8ylpx8QLhpsR/SUlQZF7
gCMyGecUn1hKmkVzU3T6apFiGoou0m4zb1STX3Y/S5KSxrU6Tu5uDhS0OEqn
9L/eME9cvQgXCV9E62m3FSEj+ktKup1DsX/uAe4VvXVfFcg/S6ovkCqZeb1a
/LI+uWxFo6ekj9NsMyISA2mXkq4kJV1JSrqX43AIbgPuVfzIOhNtMlOiqUdK
CleUT0ZS0ptJSQzkASnpeZeYzklJ93IcDsFtwL2K/V+fkqbgV0jHf4v02pQ0
W00J36ZeS0kP0O3psc9Wca9zj4orPyW4cqAZOzMp6UaOw1F0exvA1yq/rJ4T
pR4ezVPCRaZfpcpHF7xsky9b0Y7nPi3+pKRu9dm9fbaK2zkw8vTPkpR0F8fh
QKSkzoWZKP83pZ8KHfyTkqSk4YSp/0bnbtdqGz+XfyDfj2s2eQg6JEPPrEhJ
d3EoDsRJtXOTlNRyRbfnIympqZ+d84//8f/Zw98puymVEZan8WuOh59r+Uf/
6P/q4c/xH9InIX0SkpJu4VAci5TUuVM/cz3qsk2+bEX9OLIVJ/bJw0zPSknL
7Uq9veZ4mKSkvp11ehmaHsiTkm7haByLE8igflvos8LdnnFAXjayntFdjUhJ
jUhJYzn9U50h3N3rsOawHI6TyaCkpCFcsC1P6q7TTa9JSfOUa46HSUoC2MLJ
akRS0qCkpFG0HmIP665zPTUlhZv5OfVIK1YlJQFs4mQ1IilpUFLSWASlW2RS
0urLOauJ0berKZlit6SkcyvMf3NpmZLmYt/Xy+lhoplLpqZkSkYjkoMf9vG7
JChylRmUlDScdmPtqT12XDG5hK+jE6OzVlkpLP+YlBQeunNmCSNPMddEk05x
YiZJnbvt8BJSEhS5ygxKShpUi617do8dcSQlZSLScsrtKalFWIimpOVapuDJ
0SrLFAuspoTxKj/FsyQ4SEqCIleZQUlJ42rxyf+5FT7G7pSUykSpSr4n0vy6
HuOTTkk1uUZKgh5ISZdxmhqXq8ygpKShnTvu3tBj+0zVySX8Kt2mlHTvN+5O
lwpHywI1KSksk8lNqzrDlBStbayOhX5ISddwjhqaq8ygpKQHOGtL39NjWxVT
UubZkJQUzUdzgWJKmp2SklK1jdWx0A8p6QJOUKNzlRmUlPQMpwzAV/XYJrtT
Ujg3lZsenJLyBSq/Ppd6KlSfkvK1jdWx0A8p6QJOUKNzlRmUlPQkBzf5hT1W
6UhKygelaJh6TEoq2vq9uFRKWj0e2lHbwzoWLiMltebs9ACuMoOSkh7myEh8
Z4/VyMeWr8zEsExmSjGR3d0ZZwqjyjLUpN5OaWEyShUIa7u7M2BIUlJrzk4P
4CozKCnpkQSlc+WTyyl/lat42A6agi/O3fX3sI6Fy0hJTTk1PYOUNCgp6an2
DcmXd1qKlNSIlASjk5LacV56DClpUFLSs23tBJ0WlfmK1/Xu7owz3d2Xv7i7
M2BIUlI7zkuP4SozKCnp8TaNTZ3GlX4ebz8+P3r4c+TDPlJSI05KTyIlDUpK
eonK3tBpXElKgtFJSY04KT2JlDQoKek9ajpEp3ElKQlGJyVBkZQ0KCnpVYrj
VKdxJSkJRiclQZGUNCgp6YUyPaPTuJKUBKOTkqBIStpk+a8qHe+3HTW0219S
0hBSB4BO40rLlLT6F+fCFDNPn/8bLRkumKpHSgJ641z0SFJSvWVH7e63dtnq
YM1S0kAEJe4VRpia1/PbmohUU6eUBHTCueiRpKRKYS9JSY04IGuEI1e/cZma
lBR97lOZkiqTl5QE9MCJ6KmkpEr5n4RkunH1Jb3V69WL1brCMtG5YRuib/Nb
ISWNaPV888aW8Cr7UlIq6UhJcD2/SzqLs9CDSUmVap7gZJ43hS8+2TSUWbCy
QGoVKVLSoGoiMJwrjCpLF6ckVzHYQUo6i/PPg7m+VNqdklYTUxFm34vUM6bM
KlKkpKEZyFwp8yxpfnvxs6QjQ6DF2Jl6cvrW8QBS0imMr2dzCq0U9tIUfIA/
T1n16vJtWH7fi5qSqYlRUtLojGUuM+1KSVP6MdN82jz4jbt9o6DFwPlZ51//
9X/bw5/TAlFS0imMr2dzZ1WvmD5SSapYXkpackDuE8Z2aKQmJW1KOsefJa2a
t2kgRD/UOnhxlJLonJR0nMH1eFLSJuFzotTE1KzVJXgpnLuqJFo4v0ixhTMp
aXRTdSKGg1axZaX4kChTvrhUWDLTyPxYyJxa5wJHuuj2fCQlkSElHWRkvUHx
OkKfTg81UtLoplgYhxai0eaWv+JxXjMWpuCDr+j0rV10ez6SkqKi6fguN/aD
lHTQvbuPa9w+TtlHSiI0JW724FzTOClpbnD93ElKerSfHfJP/+n/3sOflDQu
w+olpKRBSUmEwq4zwGnhkk/Za21qc2pW9G195dE6M7Hla/W6fpaUdMQkJf2e
lARFm64y9ENKIlR5EwgH/Tyi/sW/+J97+Nt6bFde8naksLCGfHIpvs7PkpJ2
k5K+pKRN9n04w+js7kFJSYQyXWekc6JxU9Lc/tbDYUdKChfJzJKSdpOSvqSk
WfGEsCrgevoe9vWgpCRCxa7Tt5xi9JQ0b0W7EbE1JUXL52dl5kpJGVLSl5Q0
yz8nqp/I89jRg5KSCNV/leiCxvBgz0hJ87a0GBGbUlKqcGrW9OuPlaSkTVIp
6duZq7ffKVMgU0O+jJTUoXD/Tr8+OUotdVUDuY1bpkFJSYTqu04nc8STUtK8
RecOik0paeuzpGnLN/EM9pVMflnNWoWmVLGaRaSknkVT0nxOkJLeTErqXGbw
Xu+yTb5mRc+zqeuu3Kc8zLRISfP5Icwv4fSaYtGTT6qGc4/hE2ubWv4uKbOI
lFQ0ZTPOtD0ZHUlJDCF1IF186HK9zAFAD37unT/6o/+vh7/LjhMH5G47uk5v
s8MURJUpEX/CidHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeY
YpEnNXG1rGdJA8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNV
ow08WHMmucy3YavX9bP+evGLpOVEKalGMSWFcWn13CefjMKSUlLnUvloVSD1
lgezrzsnJbHJ7t7T7dR7fEqaN/PIgCp+F+6aP0N7ZXdKij5LWtWWf9tVSmJW
M9KLSYpHsrs7JyWxyZHe0/NUisafMAfli/WfkuaN3bEWKalbNSkpTEDRpaQk
eDYpqXNSEpsc7D0nBGrsTkmzgVLSvMmpdUWnTz1p3DeDmQ7/G3eriZlimXVJ
SdA/p9DOTYmUNF/+ohOXc1clwwVTlZybkuoXd0AecUrv2QXkTdtTUmqRUVLS
vOHhlOhl9OeUH58fPfwZziup5DLvyui37FazUgVWMhHp9pTkd0lQJCV1LpWS
wnQTTlwmo0yZVGIKlzq4IaeXJHRW7zkzkFEZefalpGjI6iQlfRK/45aSBlIM
L5f9SUnQOfdCnTuSkjJ5p7hI05Q0H3Wpu4sjK3q5c3vPviBqlXG+wowzTw/L
hLMyZVLruiUlzT0QWhW4PR9JSVFS0peUtJQZztG34Xi/rq1cKHqbSj+mvSlp
yj4V2pG29h0nqXuJ5YHnbHOi03vPKYLQlPiO3PV/9x6c+Tur2/ORlBQVvSrd
5cZ+kJJWpvStSGZWagrPcPs4JW/anpJmu1PSavEW37jbdP6hXqPes1NYmqSk
9M32PPf2fCQlNfKMLpWSVjLZZ3WrHL1pecZRwYqU1LkdKemUZ0lNv3H3kZJa
aheU7Bq+qj4lv0qHnfDJpqS52Op1/Swp6V7P6FIpaSXcrdMiJYVvV8WecVSw
cu9VhqLpib9L+vjGXUtNO9DegU8pJ35Kz5KWc1Ov87OkpBs9o0ulpJViSvok
AlHqZoYHkJI6V5+Spj/8u9+VEy9OSeF2ffzrDW207kAnDTp34/G5zEpbU1K4
SGaWlHSjZ3SplLRyJCUtPyHhSezWzmUizEpqYlg+Wk++WKOUtHUWNa7pQLuJ
bvVwcG5NSdHyqVnLFFYMUD30xsM8o0ulpJWalPSp+40SjyEldS6Vkq7/k5JG
cVkH2lP0KXpLc+LFruZz400pKVU4P6vyGZNxelD48WPK3S3dRkpayeSdfbN4
gBGH9qs8MiXlrykOyIOu7EAnEPqRunFdHqWnB6XMSts9S5KS7vWMLpWSljKZ
NzolOmvQvEyGHdq5/LX4Ypdt8jUreqrrO9AuoytT9Qe/R1aRP1VOjX+XNElJ
93lGl0pJUHTl3S8n+m2hzwp3c0AedEsHOpPQjxtT0rLA1pQUpp7MrMqIJCW1
8IwulZKgyL3NoKQkUm7sQPuOHoQpaVp8JeasVeSftmcizFx+9bp+1mtTUifb
0kkzDpKSoEhK6lzqE8tbXLbJ16zowW7swysPFagxnfqvN1SeHqcD/3Z3Zfap
L3l8qzvRybZ00oyDpCQockvTudaX2k0X5cs2+ZoVPdjtfXh7A2B2/GiMpqH8
x0dSUgth/3/uuI15RpdKSVAkJXVOSmKHHvrQuYVO7D4OizkoU3Puqfzl9m1+
P1Ibtdy6+s28rt8rtOqyClISFN0+TsmbpCS266cP+2kJ77T1dvSsO9ifi//u
d3/Tw9+TxuBqW6ZfHy3VV3L79fTiqyqwj5TUuReezx2Qx3XVh04y9O/0z/al
pBakJOBKbmA698LzuQPyuA77sMMm8XJNv/gkJbUQpqR5ipQEnE5K6lzN+Xy+
0P9Y/K8GV1LllxM7OZ87II/rsw+Pf4VpuunH2jxJu2S0Wsvt+eh5KWklekIo
7lwp6cvvkqDI/UbnasLLKv5EU090+vTr/4mjk/O5A/K4bvvw4Aln30fH0PSx
UWqNt+ejl6SkcGJ+d2/97DEzt+bS2cNVNUpKgiIpqXP5M3A4N5WSfiweM6US
VifncwfkcZ334e7mrT4xPqk5PNbFyWi16kxs+Vq9rp8VvpWSlhNDqwKVEab+
80kpCR5JSurc1pRUH6Am37h7tM67sfLMs7rJkZIoSt0bX9+MfHIpvq4sVgxK
Tx0pqb0cTUmr04iU9JGSoMLtlxLyWqSk4lwp6QGG6MatjUwlJughGS3tSEnh
IqlZW1MSs8+ulDQtPmOcst/KkJLgSebzBn3Kn34zc8NZk2dJbzJKN246Bc03
OaNsHU2t7n67Mm1MSdHyqVnT4it5b/7GXVQqHC0LbEpJqWS0JCXBI/V5fWG2
NSWtolA4K/UJmJT0MGN1Y2Vrx9ooGuk2GS1tSkmpwqlZYciSkmaZfDQX2JSS
lkEpdcXcF5SkJOhc/9eal6sJLzWpJ5qepKQHG64ba85Fw20UZ8nf93ZoU0ra
9yxJSooqHiRS0peUBEUDXXTeqebcGz70nwKV5Xs4nzsgTzFoN2aaPdZNMqcY
d6dvTUn5NDQd+13S3Z3Rl30pqfJzSCkJnmTQC9B77Dv3tviTksYybjc6Kb3c
cI+NonakpPo0JCUdseOzx+WLqM6vqlFSEhSNfiV6PCmJfUbvxtHbzybPSEZL
mfAyb+nq9Y5ZxYgkJYVeeFWNkpKg6ElXpUdKfXJ1i8s2+ZoVPdsDuvEBm0De
xeeWK00V+WX336bKH9m9R0xS0u9JSVD01CvU4/220GeF+zgaT/SAznSCep7r
P3i5hZTULSnpS0qCosdfqp5KSqLoMZ35mA15szcko6Uzn+Ifdndn9OXuvfGL
G/tBSoKi28cpefeewFfyjTxlY49XwuxJ/XnWMcaVas4ewC2kJChy/erc1PF3
Ayoz1KaNPV4Js+f15/O26JEkI+iflARFrmWd6zMlbXrSVLmZjsOVPU/7mrm7
M/5Ob+3h6+DRcvxgq1zQ8QNfUhIUuWR0buosJZ1+I+0ITPnZLf/u3/03Pfzd
u4P6j3L1LbzAXdt+sJLo60au7yWex1EEb3DLhZV60zgpaYibuoFMUtIgfvbP
P/gH/08Pf9fsqdPH78UHmOOZ4xxF8AbuVDvXW0qaWyXvtCYljeIlKanpSF9V
O68o9WIunzkXhctG1wU7OIrgDdzf3qvY//mUNN8VfF8vpyxnrRZJ1VCfkpaN
l5L2qdn1t+cjKanGg1PSlQM8lWWiqSdVLJwVrafNFvAiDziK/C4Jitzf3qsY
NDL5ZTlrmXTCHBQtFs7ampJWW9Gynx6oZtcXw8vSauKOt/empMqjqNhv1zds
elxKurJ7w1UXX3zSmSg1a7k5TlYc94CjSEqCIve395piVgWKEWk1JTOr8vXW
lMQONbu+5ilP+Dp8UZzYT0rK35+vZl1z+io27Bkpqdj51zg9JeXrgX0ecBRJ
SVB0+zXx5aK3ysudUp+SagKUlNSPml1/MCVFS+aL9ZOSwlNT9GR1wRmspmH1
KSac8hW+ja739JQU3aKLTemwE31RfFtZ4WXi4/w1Lu7tazxgu6QkKHrwSewC
F1xcpp5SEpf5nJqSwmI1lfeQkube+KRvS1o3r6Zhu1PSamL0dfjiYEoKN+Fe
qfZk+vyz5Tt1+Xra6aqTb/TIfnjA5khJUPS8c9dYipfvqWVKWmWfmmdJDpiz
1Oz6mvwyS32PLpxbU3NqLXf5ZFPS7Q2rj0hh4akUgirrL6akZZtpTT+HntQn
D9gWKQmKXDTvFd5xhQW2RqHMrFS8Sq0l9Y07x8xxNbt+07OkyonTUM+SVgVS
C97esOMpKVPJkZSUP8ZoQW9nPKZzHrAVUhIUPeaUNahi/2fySyr7TMHTovon
TZUpqabl5NXs+nYpaVNQuiUlpQrUTLy+YZu+brcq/622ZsH6lCQZ3Ui35z2j
fx6wFVISFLmSdi4fYeZ7ocyvhzLlwwL1KWlu3vV98hKtU1J9ULoyJW0qc83p
qybPVkaYWbtnSU7p99L5NfRSD6QkKHJJ7Vx9imn9lzpOHEKNFCPMfEucmri8
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
xnCRTWWmRMyJvggnRlvoABuOXVbvkX1Vv1H5kT7FUtJ8ivi+DqfPs+bXxbfR
KVLS450SFoZ2pAekJCh6+RnmGpkotCklhcsW88j1Kam4Ovp37i6bfrWauONt
TYMvO7M98vBejfF5dBfPSOGsMK2sck10emZi9HVqrpT0YPbp0o7ekJKg6GEp
qdttSWWZTGAJ30anhLM25axU+fyL1NzidIZw+v6qPMaKE2vqz0xscRw+6die
Yj6JIb9aMDprFVgyoSkVbTJzpaTXeth9y1m2douUBEUPO9v0vC3Lu47VlHBW
WD6/p6L1RKuN1pZZMPriE9w4pW6owol0rsWeWh1smRWFc4vtmdK36MUpxz3y
wA7PRalZy+nRDs+npJoMlVlq+jVGfdvgG3ePZ2+mbOoZKQmKHnb7+qRt6ZZO
frYbU1JYrKYx+ZS0iuqnb90jh8OOlBSdlU9J8x6Jfgcvn3pqvrAnJT2SXZlX
3z9SEhRJSYP6beHiCt/Tye/UKCWFISW8FV/NrWxJKnaF6anRofu8EZHZNSem
pMov2tU8gZKSXsJ+rFHZS1ISFElJg7orJTX6QJ5+tH6WVDlx07Ok6GEZnVLf
5nqPHw6rp3L5Yqspx1NSzZfupKSXsB9rSElwlofd8T5pW/JufJbEs3WVksJi
q0CUyUGeJZ1l60O95ZR8LIrmoPxEKenN7McaUhKcRUoalJREI72lpHyTiikp
VeeJHn/aOTElzb8n+spMzLzNFM6EqQYdw6VWo3v1aclSftlNK9pXQ/2Kjp+d
wk2WkuAsUtKgpCQaOX0QRW9dlhPD25v821TN0To/i7Nco9Pds087mTvPsGQ4
JfOTohP/iit69j56iXwWOB43imtsobiKHUNPSoKzSEmDkpJo5D2D6Cx67EtK
oikpqb5MzVJSEhRJSYOSkmjkPYPoLHosZerJ3Z3BUdOWlLTc6dHXq2KpF5m5
YfNWs5ZlVgdhqhnR19FZxcbEO3FBSoKiI5eP6qvT2527y76kJBqpPGL3HdjL
EdFoaETX1XpFF6wFXm410FJvoyeZKcgvqTLRF9Flw4G/nLUsU9+M+lZFK0l1
TpSUBEU7biSa3vw/Uosek5Jo5ILwcln9UhI8Rn1KSk3MzMq/KM7Nl1l9alqs
NhXiipVkpoSkJCjaevfufuCIE3tPSqIRKenIGoFGhk5JqZbveJaUqSQzBdih
PiV5fnSKs7pRSqKR1PG5+hgz+gln6nPO8IIeVhUuEi4Yrj3VmNW6ojWkWhIt
kBm2ToxwgUxM+Pw6zFMTw1NBdMGaqsIGZMqk3hZL1tSZbwlwRP7qvyrZujEv
cUpPSkk0Ej0+K6/+nyD1VF7084ssm1F/UxHWvHVD8n1SORc4ReqEEN7GrCaG
H3p8YieKlVXhzNz8WvKFU9VGF8xXku8rYIdwcKWKXdCY9zjen1ISjUQPztRV
eEqHiyl2i1KzSDg92rZi/ZvWVdPOFKdHuMC5A+3Zw7Zm6/wuCYpqUtKzTyZ3
OdirUhKNZI7MVIjIBJP6cJSpM9q2Yv2ZucvPaYuLO0NCD6SkelISnEJKuouU
RJ/y8STzLCZfYMezpGgz6us/a6IzJPTgxIG2enB8Sm2byp+y3oOrkJKgqGlK
Wp6I7jodXWBfk6Qk+pRKSauEshzamdfLiXnRRaJtW82qqWTV+OiWrurJ9Eax
u4DTXTzWNq2ut/NATXukJCiK3oqsCuyuuX4tu2vupM4dix9co5REO/UH56ZA
cbzO629FpCTohJRUT0qCUzRKSakPgU8hJX2kJFqSkupX19vdETzVkc9so8+U
54nz29XcsHB0brSS/OtUPWeRkuAUl6Wk1RpTZ6rVi/CsEi2Qr6emZLQf8kul
JtY7cm6Ukmhn05HZ4kIfrbPdHUWqAZUlWzcG+Bwba6ur+Wpi6gYj+qKycFg+
VY+UBN26OCXlw04qv4Tlw7eZemrOjdGIlF8q2shNpCS65ea/hl6CyxxMSeHr
TLT5BJf4fZHqE7tDWN2otCAlwSk6SUnFF+HE1Ykrs3h9ybC1NTEts715UhI9
EwHy9A9c6caUVF/VJ3aH8El85LuafpbKCqUkKLosJe3+ECZVPrWKIyUry0hJ
vEHTjzpHp2fgervHXf3HpPsu/ZmUVKxHSoJuNUpJn+ozSfFF/RnmeMlo+6Uk
3kwcCOkTuMXBG5LVHUXmbbTwalZ+2WLhcKmzSElwlnYp6RM7dYQTl2+jLz7p
M9umeipLRpu6OqGtXuw+1x3pWymJyxw8zp9BD8Dtdo++i4ftvWeJyrVLSVBU
vOgPMdgHJSUxouinB493d68Df2vfYLxyCN97uqhfu5QERcUbgFHG+4iObJ2U
BMALbb10XvZZx+2fqGxau5QERT2npK2f5XYSqerPk1ISAGxyexjp09Y+kZKg
qOeUtJRqRifNW5GSAKCdPq/+d9nRG1ISFElJLUhJANDUy388eHDbpSQoapSS
ViM3HMjRt6shv6ohXDBTOHyb2pZU4ZoNSW1UqkC46tSsIikJAGbhjcSz3d3f
8HzFsbZjJE6/Rpvp1xyRKVB8kSmQWd0nHZTy9e9+m2ptqqN2kJIAAKCRpikp
fLuKEltT0mrBaOWp1RXbFm1YtLZU4bAl+c98pCQAAOjQ/9/eHSzJCUIBFM3/
/3RnkUqKEXgg+hzJnLOaVkTsbPqWdudbKqnXPvUhN95LGq4tmPbUfajmliaV
BAAAL5RaScN86NXE85UUL+zUy2C1zVOvUUkAAJBkWEmf1VCqb8c0txweTmsO
aI4sXx5mOMzWHD9c6uFEw8H1sc3TlceefFO/UEkAAJAk+Bhfjslew2Pneg+V
BAAA76SSvotKAgCAd5qppM8joTS5kv/D9StVSQAAkGS+TX5OwmS75Z1USQAA
kORUJQml6+56D1USAAAkOds+QumKG989lQQAAEkW7hD1fiWbpqT3SiUBAECS
65/eq/9ciC/u+pc6UEkAAJAk9ZM8eVQSAAAkUUmbUkkAAJBEJW1KJQEAQBKV
tCmVBAAASVTSplQSAAAkUUmbUkkAAJBEJW1KJQEAQBKVtCmVBAAASVTSplQS
AAAkUUmbUkkAAJBEJW1KJQEAQBKVtCmVBAAASVTSplQSAAAkUUmbUkkAAJBE
JW1KJQEAQBKVtCmVBAAASVTSplQSAAAkUUmbUkkAAJBEJW1KJQEAQBKVtCmV
BAAASVTSplQSAAAkUUmbEjUAAJBEJW1KJQEAQBKVBAAAUFJJAAAAJZUEAABQ
UkkAAAAllQQAAFBSSQAAACWVBAAAUFqrpF9/NXfF85dbgnmah//5u3lUOefk
UgEAAGoLBVFnS2+2eube3pngiucvA2r+FAAAAAd5lRQn0nDXqS0zZaSSAACA
GTdW0r+7OZ/WnZ3mvZ7mPL3BvUfsFv4GAADouauSghrqbenN2Rt8OK9KAgAA
MtxSSWtbei97gxeeuPsUv96gkgAAgBl3VVKtHhPMMDxFc+RMJQUbAQAAajd+
L6ncMllJvQKKD493DR/nAwAACKw9ihY8w1aGT31T6fCFo+BxuHpwfdRhV+8U
Z68OAAD4yXQEAABASSUBAACUlitp/kcSeg/arZ304teOhmd/OBslKgAAvM3y
95JO7ap/jWHZ9awYzvDAKQAAgNd6uJLeECAqCQAACCxU0mF8/Qxb76G44Hm8
w9/1z9b1pgqe5etd2swymucNljpcRvPAYLX1uwoAADzjYiU1bxI1K2nyHlNd
H/GA3sjmwoZbmskTXHKwyPpcvbI7tXgAACDbXZXUG1Bu6Q2uq+HzNViCAZ9W
2jRnHq65rp7mynsFFC8y3ni4zIV/FAAA4C5PVlK9a6Z9hlPVtRKccWbOs5W0
cC8pmL++FgAA4El3VVKcTr2985V0duR8JdX3gL6xkoaLBwAAsq3dsGjevql3
lQPKT/7Nl6Vy2t6xzQPrhQUbe8uoF3nqKoI19y4hPgQAAHjS2qfx4BCf7QEA
gK0t37NoHiWRAACA3XmyCwAAoKSSAAAASioJAACgVP/mGwAAwA/3G14xaF0=

                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 8->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3U/r9UyDJ/SgLlz6FnwXzmbA3rkaaOmmoWdgprGd6c0j9AjPuGi4mY2z
daMgiKDCMIIguJYLN74nV8er+/Ckc6X+5k8lVcnnw4+bc5JKpVJJJfmenHPd
//Ff/Fd//F/+e9M0/cv/8Od//vif/f4//eu//mf/zX/+H/188ye/+5d/9c9/
95f/xX/2u//6L//5X/71f/IX//7Pif/fz7J/8R9M09++BgAAYOXz+Xz/CwAA
8HLLoAQAAICIBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAs3ZiSJmAEt5wfAABudONd0L03fkCl
W84PAAA3uvEuyA0YdM4gBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J2k
JCDFIAUA3klKAlIMUgDgnaQkIMUgBQDeqduUtPv/2LJcZP5vaFUyVUP96sKl
Uus90tQja8kvVbOx0TaneixTMlPncmKxTHRFNfVH21bc5FQb8h07JQ62VLXF
t5lNy/TSPufWBgAwihvvgoqrXt1SVtYZrT+8t8xXu6lPUpXXz9rR1HB6tOS+
tqWk2lxcUXFX5qNHsYWb6s+0rab+/NvK/ZKfVb/XisseJCUBAO/0pJRUfxda
rLZRSspM39rU3bGi8s58axvq7+Sj+z1ac30L6+vfFL7yzcs0deuUypRU7JbT
x7KUBAC807NTUjir8sb79JS044a//vlC/ZR9TaopU7+zahLQwZSUWXbf0X5j
Stq0LikJAOAUnaekpZoKa6qqWWRrSsrUv2m99YuckpI2de9yqUy1qfVGG1Bc
vLLaaLHixHo1matmB4VSdYarKK5r36blbTo2AAAe48a7oOKq65NFsUDqJvms
lJRaaut684vkQ82OlFRsTKaRmS1KtTxTskVKitafb1um/ny0idacaWSxqZtS
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
szHJtmsqD+ZyA/2QkqDIZatz+1LS6sX1z5LCrWhU+OBSfa7o+mdJnyBJHawc
Uhww0AMpCYqkpM5JSU2X6nNFLVYR1nlWStpRHoB7SUlQJCV17uA37qLTL05J
y691VZbfvaJ9C75hLTUpacc37jL1Q5ELENxFSoIiF6nOHXyW1ENK2rHJpy97
YuMHTUnFOsNfJ51bP6S4DMH1pCQocnnqXH2omR/ZhG+nhX0RSUpqUdXFa6lJ
Se3qh7ytD52BI6QkKHJV6ty+XJP66t2RvyFSUmrx1Y9ujjw3kZJaV8LLuSrB
BaQkKHI96pyUdGTxKebz62G/dXXjpqRMtSd+jO98wilcm6ApKQmKXIk6tzvg
rL5x956UFK1hNWWVpA5W3sLFKWnEtQCwm5QERVJS56JPQ+5y2SafXsMkJbWv
+fq18B6OKDiXlARFV979cqLfFvqscLdTDshMLPq8+Bt3n2MJcd9a4BSuVnAi
KQmKXHcGJSUdqWR65b/eMNd8zfNBJxZacM2CU0hJUOSKMygp6Ug9B1dxwZBp
tIqLv0Xp3EIjmQPYRe24wnevn+7u7r+IlARFrzonPImUdKSqg6uILj4PpVPG
1Omj8q77AacXmgoP47fd655I1329pB+kJCh6w6ngkaSk3VUdvwJmwtc8q0UQ
O+iuT02dYWhtOe5e+FDgFLor9Ow+kZKgyKVkUFLSLbXl61xO7zAlfS7/xt1y
vdesiJe76wgfmo7KeHDnSElQ9OAzwLNJSbfUtqpzdSfWf0r63PRhu5MMF4g+
LXXsFemiPP0Dr+UiMigpqcMKU4npxFWc4pYbyFvOM85vr5JKSY6BDJ1TQy/B
O7mCDEpK6rDCqeN/vSGs//qxf9fqnOLeIBORHAApeqaevoIXcgUZlJR0Y535
lNR0FSe6Zezf8vTKKe6dBKUi3VLveX3ld0lQ5PIxKCnpSJ0HV/GMlHTZWm5f
aaM15h9eXKzFBnbl7g7+xd2dcZonbUtrz+srKQmKHnbOfw8paV+1p9znRBc/
9w6qvp7rbg0rnL51x7Vb18+a/+Zv/nUPf1f2511+buMf/dH/3cPfY3r7MRty
jed1l5QERZvubeiHlLSj2h3385naTmnV8fp/lvzx+dHDX4cpqemKpKQrSUmn
i27IWefJysVP7Mwjbb64qZ2QkqBIShqUlLSpwt1PPTJ1ntK24/WPmJI2beAR
UtJjSEmnS23IcvrBoLRp+hFznU0/q3nMrv+SkqBIShqUlFRfm5TUYUratI19
kpKuJCWd7pEpqbdFeiYlQZGUNCgpaVOFUlKHKWnTZu7jWdJA8gNza0pajfcX
pqTiiW5rSlpVGD2pLsssX6xeRwuHb1ONjBYOS6YanGpGfqWZ6YOSkqCoeCKl
T1LS1jrDC/rBCk9p2PH6p5FT0qYt7c1UkZLm4231+vu2ptjbUlLmjndHnIm+
fk9K+mQv8Znp4V6Yfs0+q7eZF5kCYZlVsWhmybQqWqy+GZmVptYyNCkJiqSk
QUlJ+2rekZKmauc2tb5kKrMshdPDwtEyq/LRxaWkfIQpvs7PemdKWo2pSUra
aNV74TkqtSFTIkcsKwnL5F8s1z4F8SSckmpGsfCqZNjgynpSFYYTxyUlQVF4
5mQIUtLuyoc45utbGA0sc2wpvk5N3LTskZS0aWO7ciQlTX94bCQlzaIpaXmX
e1ZK+ta5eltf/yi9nQkOmQKfRFKIpoyaoJEPIO1SUqoZlfVIScBHShqWlHSk
/v4P+2LzlveQZ6WkYvnMuo6kpJrt7VBXKekNdqSkcNn59ffF6u3WaqOWR8i9
JaMH7VwsWuBTFx/CZYslwxfR2vLli4VTs2qaka8wNXFcUhIUrc6rjEJKGmIt
u2VuYMJ7oROfJU2xQLSalVnd29SnmHxcShXzLGk5d/ezpNWyc+X7vok3Sm9P
QbgIp0SXCnt++kPQCKdHp6z2YPTtqoZVbdHyqVWHLQnbk2p/tNnRlaZ6bFxS
EhRFTwX0T0rK19CPUzohU9uUTUlLld+4m4JMtFq8xbOk6FZ3bjqWkmZS0ld+
4EwnpaQp8SzpqSkpf+o4WPnxesbysC2VkqDoyI0cN5KS8jX8w3/4//Twd/A+
pCZq5VNSJgdtSkmVz5J2b+xyc45Xco3dKWm14JT+Gt4LU1Jm7u6UFE1M04Fv
3F3ZLbvVnDqOVH5KPWN52JZKSVAkJQ1KSsrXcHs+OpKSasLRsvC5KSl8eJRf
UEqqD0r5lLQvIj0mJeVtTUnzIFpN+aPg90qrYo9JSUUHN2TTaWpf5UcKtPCY
Xf8lJUGRlDQoKSlfw+35aEdKWt11XJaSoo+KoikpH5TOOpOMckbal5LmvZx6
KyVFbU1J7f4e09udp4xi4a2nyuMes+u/pCQokpIGJSXla7g9H9WnpNRHsgdT
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
Jwdu5MAYlJT0Bv10xb0paV77KiWtyqwmRqPNPCtaIFN+uJQUnttTd4wdbkuN
h21vcXMqU0wYf4rFUmFqlJQUdle+M6dsbJnq0tByYmZWz9+4k5KWMkNvUxke
xr4elJT0Bl11xTWNid7ezKepKQgsyynTIihFc80q/hQjUvT1WClpeYbPXPov
bOZpHra9xc2pCTJhmUxKWuWpcVNSqHgayT9LmmKPgTIToxVm1iIldSgz9JYF
Um95Kjt6UFLSG3TVFWc1JlNP5t5mti8l1UypTEzRx1j9y/T8PLdYQ+Vuurfk
XHhKb+9wPntTUj4WzVO2pqS7++Oo4jfupiD+RBef0l+ry6xFSupQ5mj5JG6V
oxN5GHt5UFLSG3TVFWc15kg903kpKfX9umj5aIWn9MaJUtf3ZYHUgpc08GQP
297i5hxJSWEaWr14w7Ok5dx9KSn6LGm2NSVFG0m3UkfaVQc198jsfXomJb1B
b11xSnumaf1c4FN9Ipqyz3SOPzmaEj9Zik453hXnKl7To9PHvQQ8bHuLm3PK
s6R3pqRwbjElzSkmk3pWU/JvPUvqXJCKfjlyUnuqz5MJJ+r2kkGelPQGvXXF
kfakrkHLU1Cx/qku/lQWq0xJqVXs7opGak7m4aW/ww2p9LDtLbbtyO+SMs+S
wi/jPSYlZebWpKTUsyQp6ZGKyTq1VPumcaeerxpkSElv0FtXnNKeVSU1n9ct
C5yVkuZA9JVKSal41duuqZe/GXiex2zvvn/jrvii+BBqxJSUl8ov80ES/ZZd
OGs5Jf9WSupfMVlHo9PQpxRq2MuDkpLeoLeuGDQl1WefVLHoeo93BdTb9/9L
Cicu/6Ske/+kpIGs7pbdPL+EHT0oKekNOuyK400KU9I8ZWtKmj+wjU4M50bL
p1JSqhIpiVtsCjJN/6QkKemdVheFT5fXaM4lJQ1KSnqDDrvi9CbN15qamvMB
5/hfff0d7hoqDXrVk5LOIiV9SUnHjXgmYZNBrxdISS/RW280Skn1haUkjog+
uBxib0pJZwkfN9/oxn6Qkk5x706ktdvHKftISS/RYW+c26RNtd12KxNzYidw
veUeHGJvRn9YdNff3Z3BCaSkUwxx9mA3l/tBSUkv0WFvnNikuxJHh73a2rKr
xb3Pr1/1fHlX8E5S0lmcOh7MpWFQUtJLdNgbHTZpqwdswg6ppycv7I3VJr+w
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
87ao3inbLiVVygSfYiY6ZU/tTklnrf14JbevYjeX/kFJSS+kZ5qq6V5xiUE9
76B93hbVk5KulMk+4eOksFiLoFS/1InFLtBPS2au+IOSkl5Iz7S26epTc/J0
gqUTq3u5+f5t3OPzeVtU75Rtl5Iq5VNS+HZV7KwDcmtQql97P0Omn5bMXnJK
eR4p6YX0TGs7ejh/2drx6R+caIr5/HrpH+vgfN4W1Tt326WkSsWU9ElEktMP
yOMpKTxmVhVG365erDaqclamnrAlqdfXu3HVHCElvZCeae1gD4cn8/B+Bm6R
un8LZ43ieVtU75Rtl5IqhV0ajQNhyRYn//oKw0ampkdLVkaemlmZemoaEG7C
lVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6m1Yw83b86tTtmi4rcub9m77
0ukp6eau/NXBbVltV2rK9GvPT+kd0bpJ0TLR3ggbn9qcG1+kJl7v9MOJa0hJ
L6RnWjv9Qpa/fP98/ePzo4e/FofWzzr/7M/+bQ9/jbbu9r22ad+Fd0qZm5Cf
U/70T/9dD3+Zrdu0RauSf/In/3sPf7uPzN3bvtQiJf2jf/R/9vDXNJJURqGm
KamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d2Xfz7Ud08SFS
0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0FilpUFLSC+mZFvJB
pkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp6amKGS28EqUK
p65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp8Dvt4tbdno+k
pEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvvsXffaRd7qT4l
rXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G356MjKanyo60L
LhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGqUvWvajiyddHF
py15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG9UTrjC7YYuu2
ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42vJ+WsImU9E46
p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkpunU7HvrU7OXo
XmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop27MGUtJo4v/6u
6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwzXMW0KyWFBVKL
V9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnRZ0PFucVHSy22
7khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11dX8/pbXubHd1O
D6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+n+0paRbGpe+L
1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+Xv13U+Wnb92N
Pp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXWlrnATbGfDkUD
zpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYTaSurbbF1qQQ0
JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1uCn5/NEulp7u+
cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T1MHzYXhFy1/j
puwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR3bHc0bekpGiB
rSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv6JD8BtZPPK7Y
1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn2CmdksIX4e10
DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV6xZbtzslpSZO
r3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14vHZ7maakpNfS
P41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRzwTfuarZud0qq
z8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp8JRUuY2bLgF3
mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5WsWWqGiZcGK+
WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML5t+upi/rabF1
WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w7m4Fm0lJr6V/
Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2f+9MSRf8vfwq
ubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sffad+ej6Sk3Vt3
ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653+tbVa5GS+nFK
F73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOdeeGdW/0AUtJr
6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZpKRxVX630FXs
ODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt8AZS0nCCf6Oi
NiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6qB19C7yBlDSW
MCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJb6aL2tG3wBtI
SQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NFTeleALoyekpK
bVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek1VLLFzU15+vJ
h7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzNWtWTLxy9BIf1
pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd0tAedp3qdnOk
pE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep206Skeqc/1MsE
qB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP6Z4HbLcN603Y
S8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClpLPWHcevDfnfl
I45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9lIs9qVmp6dEpq
IozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd8gnyUfFFtM6t
pKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8kYo/qRepiZtI
SWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yUPvXRfX6pfCVh
DZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX4Thoa+ilmZQ0
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
lHQK4+vZ3FnVK6aPVJIqlpeSlhyQ+4SxHRqpSUmbks7xZ0mr5m0aCNEPtQ5e
HKUkOiclHWdwPZ6UtEn4nCg1MTVrdQleCueuKokWzi9SbOFMShrdVJ2I4aBV
bFkpPiTKlC8uFZbMNDI/FjKn1rnAkS66PR9JSWRISQcZWW9QvI7Qp9NDjZQ0
uikWxqGFaLS55a94nNeMhSn44Cs6fWsX3Z6PpKSoaDq+y439ICUddO/u4xq3
j1P2kZIITYmbPTjXNE5KmhtcP3eSkh7tZ4f86Z/+ux7+pKRxGVYvISUNSkoi
FHadAU4Ll3zKXmtTm1Ozom/rK4/WmYktX6vX9bOkpCMmKenvSElQtOkqQz+k
JEKVN4Fw0M8j6p/8k/+lh7+tx3blJW9HCgtryCeX4uv8LClpNynpS0raZN+H
M4zO7h6UlEQo03VGOicaNyXN7W89HHakpHCRzCwpaTcp6UtKmhVPCKsCrqfv
YV8PSkoiVOw6fcspRk9J81a0GxFbU1K0fH5WZq6UlCElfUlJs/xzovqJPI8d
PSgpiVD9V4kuaAwP9oyUNG9LixGxKSWlCqdmTb/+WElK2iSVkr6duXr7nTIF
MjXky0hJHQr37/Trk6PUUlc1kNu4ZRqUlESovut0Mkc8KSXNW3TuoNiUkrY+
S5q2fBPPYF/J5JfVrFVoShWrWURK6lk0Jc3nBCnpzaSkzmUG7/Uu2+RrVvQ8
m7ruyn3Kw0yLlDSfH8L8Ek6vKRY9+aRqOPcYPrG2qeXvkjKLSElFUzbjTNuT
0ZGUxBBSB9LFhy7XyxwA9ODn3vn97/9ND3+XHScOyN12dJ3eZocpiCpTIv6E
E6PPg6Jvoy/Cwqdv2il1Ti3/jbvp15RUXNfxzXmSqfQkaC4wxSJPauJqWc+S
BpJPRtFzgpvnl7CjOyclscm+oKTP2SSaa6bgiU+xWCY61UeqRht4sOZMcplv
w1av62f9+eIXScuJUlKNYkoK49LquU8+GYUlpaTOpfLRqkDqLQ9mX3dOSmKT
3b2n26n3+JQ0b+aRAVX8Ltw1f4b2yu6UFH2WtKot/7arlMSsZqQXkxSPZHd3
TkpikyO9p+epFI0/YQ7KF+s/Jc0bu2MtUlK3alJSmICiS0lJ8GxSUuekJDY5
2HtOCNTYnZJmA6WkeZNT64pOn3rSuG8GMx3+N+5WEzPFMuuSkqB/TqGdmxIp
ab78RScu565KhgumKjk3JdUv7oA84pTeswvIm7anpNQio6SkecPDKdHL6M8p
Pz4/evgznFdSyWXeldFv2a1mpQqsZCLS7SnJ75KgSErqXColhekmnLhMRpky
qcQULnVwQ04vSeis3nNmIKMy8uxLSdGQ1UlK+iR+xy0lDaQYXi77k5Kgc+6F
OnckJWXyTnGRpilpPupSdxdHVvRy5/aefUHUKuN8hRlnnh6WCWdlyqTWdUtK
mnsgtCpwez6SkqKkpC8paSkznKNvw/F+XVu5UPQ2lX5Me1PSlH0qtCNt7TtO
UvcSywPP2eZEp/eeUwShKfEduev/7j0483dWt+cjKSkqelW6y439ICWtTOlb
kcys1BSe4fZxSt60PSXNdqek1eItvnG36fxDvUa9Z6ewNElJ6Zvtee7t+UhK
auQZXSolrWSyz+pWOXrT8oyjghUpqXM7UtIpz5KafuPuIyW11C4o2TV8VX1K
fpUOO+GTTUlzsdXr+llS0r2e0aVS0kq4W6dFSgrfroo946hg5d6rDEXTE3+X
9PGNu5aadqC9A59STvyUniUt56Ze52dJSTd6RpdKSSvFlPRJBKLUzQwPICV1
rj4lTX/4d78rJ16cksLt+vjXG9po3YFOGnTuxuNzmZW2pqRwkcwsKelGz+hS
KWnlSEpafkLCk9itnctEmJXUxLB8tJ58sUYpaessalzTgXYT3erh4NyakqLl
U7OWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIOtKfoU/SW
5sSLXc3nxptSUqpwflblMybj9KDw48eUu1u6jZS0ksk7+2bxACMO7Vd5ZErK
X1MckAdd2YFOIPQjdeO6PEpPD0qZlbZ7liQl3esZXSolLWUyb3RKdNageZkM
O7Rz+WvxxS7b5GtW9FTXd6BdRlem6g9+j6wif6qcGv8uaZKS7vOMLpWSoOjK
u19O9NtCnxXu5oA86JYOdCahHzempGWBrSkpTD2ZWZURSUpq4RldKiVBkXub
QUlJpNzYgfYdPQhT0rT4SsxZq8g/bc9EmLn86nX9rNempE62pZNmHCQlQZGU
1LnUJ5a3uGyTr1nRg93Yh1ceKlBjOvVfb6g8PU4H/u3uyuxTX/L4Vneik23p
pBkHSUlQ5Jamc60vtZsuypdt8jUrerDb+/D2BsDs+NEYTUP5j4+kpBbC/v/c
cRvzjC6VkqBISuqclMQOPfShcwud2H0cFnNQpubcU/nL7dv8fqQ2arl19Zt5
Xb9XaNVlFaQkKLp9nJI3SUls108f9tMS3mnr7ehZd7A/F/8f//Ive/h70hhc
bcv066Ol+kpuv55efFUF9pGSOvfC87kD8riu+tBJhv6d/tm+lNSClARcyQ1M
5154PndAHtdhH3bYJF6u6RefpKQWwpQ0T5GSgNNJSZ2rOZ/PF/ofi//V4Eqq
/HJiJ+dzB+Rxffbh8a8wTTf9WJsnaZeMVmu5PR89LyWtRE8IxZ0rJX35XRIU
ud/oXE14WcWfaOqJTp9+/T9xdHI+d0Ae120fHjzh7PvoGJo+Nkqt8fZ89JKU
FE7M7+6tnz1m5tZcOnu4qkZJSVAkJXUufwYO56ZS0o/FY6ZUwurkfO6APK7z
PtzdvNUnxic1h8e6OBmtVp2JLV+r1/WzwrdS0nJiaFWgMsLUfz4pJcEjSUmd
25qS6gPU5Bt3j9Z5N1aeeVY3OVISRal74+ubkU8uxdeVxYpB6akjJbWXoylp
dRqRkj5SElS4/VJCXouUVJwrJT3AEN24tZGpxAQ9JKOlHSkpXCQ1a2tKYvbZ
lZKmxWeMU/ZbGVISPMl83qBP+dNvZm44a/Is6U1G6cZNp6D5JmeUraOp1d1v
V6aNKSlaPjVrWnwl783fuItKhaNlgU0pKZWMlqQkeKQ+ry/MtqakVRQKZ6U+
AZOSHmasbqxs7VgbRSPdJqOlTSkpVTg1KwxZUtIsk4/mAptS0jIopa6Y+4KS
lASd6/9a83I14aUm9UTTk5T0YMN1Y825aLiN4iz5+94ObUpJ+54lSUlRxYNE
SvqSkqBooIvOO9Wce8OH/lOgsnwP53MH5CkG7cZMs8e6SeYU4+70rSkpn4am
Y79Lursz+rIvJVV+DiklwZMMegF6j33n3hZ/UtJYxu1GJ6WXG+6xUdSOlFSf
hqSkI3Z89rh8EdX5VTVKSoKi0a9Ejyclsc/o3Th6+9nkGcloKRNe5i1dvd4x
qxiRpKTQC6+qUVISFD3pqvRIqU+ubnHZJl+zomd7QDc+YBPIu/jccqWpIr/s
/ttU+SO794hJSvo7UhIUPfUK9Xi/LfRZ4T6OxhM9oDOdoJ7n+g9ebiEldUtK
+pKSoOjxl6qnkpIoekxnPmZD3uwNyWjpzKf4h93dGX25e2/84sZ+kJKg6PZx
St69J/CVfCNP2djjlTB7Un+edYxxpZqzB3ALKQmKXL86N3X83YDKDLVpY49X
wux5/fm8LXokyQj6JyVBkWtZ5/pMSZueNFVupuNwZc/Tvmbu7oy/11t7+Dp4
tBw/2CoXdPzAl5QERS4ZnZs6S0mn30g7AlN+dstf/MX/1MPfvTuo/yhX38IL
3LXtByuJvm7k+l7ieRxF8Aa3XFipN42Tkoa4qRvIJCUN4mf//O53/10Pf9fs
qdPH78UHmOOZ4xxF8AbuVDvXW0qaWyXvtCYljeIlKanpSF9VO68o9WIunzkX
hctG1wU7OIrgDdzf3qvY//mUNN8VfF8vpyxnrRZJ1VCfkpaNl5L2qdn1t+cj
KanGg1PSlQM8lWWiqSdVLJwVrafNFvAiDziK/C4Jitzf3qsYNDL5ZTlrmXTC
HBQtFs7ampJWW9Gynx6oZtcXw8vSauKOt/empMqjqNhv1zdselxKurJ7w1UX
X3zSmSg1a7k5TlYc94CjSEqCIve395piVgWKEWk1JTOr8vXWlMQONbu+5ilP
+Dp8UZzYT0rK35+vZl1z+io27Bkpqdj51zg9JeXrgX0ecBRJSVB0+zXx5aK3
ysudUp+SagKUlNSPml1/MCVFS+aL9ZOSwlNT9GR1wRmspmH1KSac8hW+ja73
9JQU3aKLTemwE31RfFtZ4WXi4/w1Lu7tazxgu6QkKHrwSewCF1xcpp5SEpf5
nJqSwmI1lfeQkube+KRvS1o3r6Zhu1PSamL0dfjiYEoKN+FeqfZk+vyz5Tt1
+Xra6aqTb/TIfnjA5khJUPS8c9dYipfvqWVKWmWfmmdJDpiz1Oz6mvwyS32P
LpxbU3NqLXf5ZFPS7Q2rj0hh4akUgirrL6akZZtpTT+HntQnD9gWKQmKXDTv
Fd5xhQW2RqHMrFS8Sq0l9Y07x8xxNbt+07OkyonTUM+SVgVSC97esOMpKVPJ
kZSUP8ZoQW9nPKZzHrAVUhIUPeaUNahi/2fySyr7TMHTovonTZUpqabl5NXs
+nYpaVNQuiUlpQrUTLy+YZu+brcq/622ZsH6lCQZ3Ui35z2jfx6wFVISFLmS
di4fYeZ7ocyvhzLlwwL1KWlu3vV98hKtU1J9ULoyJW0qc83pqybPVkaYWbtn
SU7p99L5NfRSD6QkKHJJ7Vx9imn9lzpOHEKNFCPMfEucmri8LY8uEq3hrpRU
afUhwN3N+Vs1KSaajPLPmHanpLv74710fj19dTspCYpcVTvXf0qa23lZn7xE
5YOeC/7s3LyzUlIqEG1KSR+D8T56vp6+up2UBEVSUuemntQ09ZpueYNJShrE
VPEPdH+FbzOzUlOKKenjFvQmmW5fnR6XJ9WtZ9qw2k0L7js2lvWfcnSNfoiO
3v6PlAQV3NkO6reFrip0OJ1FShpFZYS54G91H35jn7xQzedIqbdHdtxlO/3c
ykc/Pkdv/0dKggpS0qC6TUkfB9VJwk+Yb3R3Z3Rt6jIlfR5xIzeQYm+vhlLq
9ZH1Nt3j51Y++sE5evs/UhJUcAvUuYtvhvO2trxRn0BX7h6Xv4i27ZZueZti
P0+//mpsiqWbVCXLAlM6C0cXXx4by8WjB8+qtrDysKpwkcqjbugjc+jGf0lJ
UOQa2rmfe+e//6u/6uFvx3Hi6IIeGIYXqExJnyAufUrhIppHostGY3J+7WH+
yhTYukje0Ifl0I3/kpKgyH1s54ZOSfMmnNsnwFaGYWsHU1K+ksyVejU9fBst
UB+CKkvWbEW+5WMZuvFfUhIUSUmde0BK+jjMSIt+Er58m/+onHp6r6n6lPTJ
/kZpWSB8alNcb7RYKuxkklp9OMrUmTf0ATl044FKbjw694yUNG/LKX3CwxQ/
VM/fT1JP77WzKSV9Nh7Vq+RSWe0nnWiiuSxaYMezpEpDH41DNx6oJCXdq9j/
T0pJNdvLC+1ISR4t7abTGimeyTPPbmouBMvCYbWpSlbTl2/zr6OVR0UXqeiw
sQ/FoRsPVHKnca/VJSZaIJ9cvr6vl1OWs6LllxMvS0nLrYavaXtKSr2lhk5r
YaxezYypy+ocq8dWhm78l98lQZGUdK8p9qngqkAmtqziTzT1RKcvJ16fkj4O
PBZWn0vPE/MFPo+4UbmLrjvdWF0qJR00dOO/pCQocrN6r2jnL3dKKsKE01Mp
qTjllpSU2XzeJjUKigUcP0fovXP11p/FARL95OGUlVbW2VuPvY2UBEUvudOY
fpWaHrqgZKa1ny0pqTITdZWSMp3Ae6RGQb5AcRZFeu9EnXRm5cDpQefNezwp
CYoef4/a+Qau2ha29vEpKdoPvIqUdCMdeJZOelJKopKUBEWdh4gjhti0+YFR
5rnS6Skp//aWlPTZvr+Kz+yu1K5bHi/ah8uJxQIcpBtP0bobVyMinP4JxsVc
PlrDqrZUPe3G2tAH3tCN/5KSoOipdxqjbFSx/6ezf5eUn3tjSpq3N5wSXfXP
iX/zN/+6h79RDjZIcQwfd0Ef5hNQ2Ixl0kkVq6zn9G1pV+01hm78l5QERY9M
SU/aokyESWWfKf2oKJqkukpJn+wnpatit+cjKYnHeOS14ErXpKTwdfT5UVgm
+iI80+bj0rmGPt6GbvyXlARFroydy0eY+boWTinOStVwe0qaN/zz69fqwgK3
5yMpiYdxMO92S0qqfAYUhqP6xaWkqKEb/yUlQZGU1Lma/HLN3/XHSZj4VnNv
z0dSEs/jeN7nmpSUehhUmZJ2TGy0XaMfZqO3/yMlQQUpqXNS0r6UNC+yev19
W1NMSuK1HNL7tO631ZOgeeLyDLl6ES4SDURhPa23aPRjbPT2f6QkqPCwlPSk
bfkKk8KNetjwZYFieCm+zs+SkngtR/UOrTvt+p3Sbo2jH2Cjt/8jJUGF6+9+
m3rStuT9ttBnhUfUhLV9KWn6w2MjKQnyHNhbPSwlNV3diEdXD58fnkhKgqKh
x3joSduS9+yUtCQlwV0c21s1ffhy2fW69YoGPa6izR50Wz5SElSQkgb1npS0
Mh+xNYkmk4nCifsikpTEszm8t9JjeUP3z6rxQ2+LlARFUtKgXpuSZrtT0kxK
ghqO8E0edlU91+g9IyXBqzzsfP6kbcmTknakpNUima/hSUmw5CDfSo+FntEn
y60YeoukJCiSkhhUZajJ/Ozo+C+S3paSwt+Ivcrd3X8zPbCV4+eT/T+DD2re
kMdsEZDypHPXp++z1vJKMf83fxmdgof7mf0VnXtNh9xyFE0bU9LcP6m3UlLK
w25ydtMPW7c9njZv0qhPBu2Ny9zd6+ebpCR4jYedx7rdlunXZ/Sp02yqWDgr
X3+0hqau7/npQK4596/bo+4Uz966fd7cJ5u2/WfhH58fPfy9eZdxuofdOAEp
DxvsfW5LJtRU5p3M6/zqpCQpabeHnRzO9ebOSW179Gx2ez6SkjjdM4a/3yVB
0TMG+6zPbcm06q6UtPo6RPTtJ5bmlrOKD7BShU8hJbX21O06y8v7J3/umqfc
no+kJFp4wBElJUHRw1JSn3pLSavskw870cQUTU/h2+gqzjL15PStu90jN+p0
T+2lyu1aFQuXmqQkLnHjyf9eRzpNSoKi4wONokwPh7OmdMapOTeGi2wqMyVi
TvRFODHaQgfYcOyyeo/sq/qNyo/0KZaS5lPE93U4fZ41vy6+jU6Rkh7vlLAw
tCM9ICVB0cvPMNfIRKFNKSlctphHrk9JxdXRv3N32fSr1cQdb2safNmZ7ZGH
92qMz6O7eEYKZ4VpZZVrotMzE6OvU3OlpAezT5d29IaUBEUPS0ndbksqy2QC
S/g2OiWctSlnpcrnX6TmFqczhNP3V+UxVpxYU39mYovj8EnH9hTzSQz51YLR
WavAkglNqWiTmSslvdbD7lvOsrVbpCQoetjZpudtWd51rKaEs8Ly+T0VrSda
bbS2zILRF5/gxil1QxVOpHMt9tTqYMusKJxbbM+UvkUvTjnukQd2eC5KzVpO
j3Z4PiXVZKjMUtOvMerbBt+4ezx7M2VTz0hJUPSw29cnbUu3dPKz3ZiSwmI1
jcmnpFVUP33rHjkcdqSk6Kx8Spr3SPQ7ePnUU/OFPSnpkezKvPr+kZKgSEoa
1G8LF1f4nk5+p0YpKQwp4a34am5lS1KxK0xPjQ7d542IzK45MSVVftGu5gmU
lPQS9mONyl6SkqBIShrUXSmp0Qfy9KP1s6TKiZueJUUPy+iU+jbXe/xwWD2V
yxdbTTmekmq+dCclvYT9WENKgrM87I73SduSd+OzJJ6tq5QUFlsFokwO8izp
LFsf6i2n5GNRNAflJ0pJb2Y/1pCS4CxS0qCkJBrpLSXlm1RMSak6T/T4086J
KWn+PdFXZmLmbaZwJkw16BgutRrdq09LlvLLblrRvhrqV3T87BRuspQEZ5GS
BiUl0cjpgyh667KcGN7e5N+mao7W+Vmc5Rqd7p592snceYYlwymZnxSd+Fdc
0bP30Uvks8DxuFFcYwvFVewYelISnEVKGpSURCPvGURn0WNfUhJNSUn1ZWqW
kpKgSEoalJREI+8ZRGfRYylTT+7uDI6atqSk5U6Pvl4VS73IzA2bt5q1LLM6
CFPNiL6Ozio2Jt6JC1ISFB25fFRfnd7u3F32JSXRSOURu+/AXo6IRkMjuq7W
K7pgLfByq4GWehs9yUxBfkmVib6ILhsO/OWsZZn6ZtS3KlpJqnOipCQo2nEj
0fTm/5Fa9JiURCMXhJfL6peS4DHqU1JqYmZW/kVxbr7M6lPTYrWpEFesJDMl
JCVB0da7d/cDR5zYe1ISjUhJR9YINDJ0Skq1fMezpEwlmSnADvUpyfOjU5zV
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 9->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
M68Wz1doo8M7+bskKJKSOld/s3Tw5kpKqmnwuSNw+opO+SXYwRr4BD8rjRZI
7YrR9/V78up9sUJbHN5JSoIiKalzm+6UmuYOKekNKemsSl5uilkVaJGS8mcD
KQmYSUlQJCV1Tkq64PWYlHRw2bNqIJqSlifbrSlp+Zh4fr+cUhmIpCTgS0qC
Iimpc7tT0vLGLHpn1X9KWrY/OmV1/5lZsHJFcIHMzr8quTqup1hQmoLjerls
TUqaXALgfaQkKHKJ7FzqbiqfklZvwpurIVJS9L5uNSXscuaG8GDXLjtSDq7o
lHY6LRyRCkfLAjU7/BR8IZA/0muqiu78LgTwNlISFLk4du70lLQvImWixL79
pzKv5b8Sz3x/LiXd3ow3y+SjuUB9SqoJR/mUlDkcls1zOYD3kJKgyGWxc/tS
0io1tEtJm/af1X3jwZRUeT8pJXVS1asUj4srU1L+oAjb6aIAbyAlQZELYucO
PkuKTt+XlVJ3U8X9J1WsRUra18eHpaRTamhRFbPUjr2SmTXv58s34bKpCos7
v0sDPJuUBEUuhZ2rv9tP3R0tPy7fHElJq1uvaLMzc+u7lioTTp+kpFNraFEV
s33HYItXfvva+vBUUhIUSUmd251oikFj991U5EvtxR+A1+9RjVLSr+1J8Hkp
6axKTq+Kr1FSEvBUUhIUSUmd6y0lRSPSvr1oR0paPTCqKSklncJZ4lyZ4+h6
W9vcdGSAa0hJUOSq17npwD/c/XXid87Hb7Q2dS1cS6pr0Smnp6TPVWHhlLWc
3lQnCr5cNeABpCQocr3rXN2Xwffb17WzEtzxAFjf5h093eqstZze2mu6zxB2
H/hAD6QkKHKl61znUSIVlGp2qs67lmpzZckjuk1JjepkXK4gMCgpCYpc4zo3
YpT4VKekfpzYr+NOXMvpDb5mBBjLpoMI6IGUBEWubp2bxk9J8z5WubPtXtEF
pKRGdQJwJSkJiqSkzo2VklKPaZa7WbEeKanzlNSuWp7B7gHAA0hJnatPSXMq
2TG36bOkT/BoadOyW9fV1HApKVPbwbU4b5Cx9besANAbF7LObco1mYhULCMl
9bOuIVLSKTXweC4xAAzKJaxzj0lJjX5xt3uRfUZMSakKV9E1/G3kvmoh5EID
vfF3SVDk4tW53Slp9cdB85RrfnEX9uLT5l9v2L3IPg9ISVPMZ2OSbddUHszl
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
3il9l5IqZYJPMROdsqV2p6Sz1n68kttXsZtL/6CkpBcyMk3VDK+4xKCet9M+
r0f1pKQrZbJP+DgpLNYiKNUvdWKxC/TTkpkr/qCkpBcyMq1tuvrUnDydYOnE
6l5uvn8bd/98Xo/qndJ3KalSPiWFH1fFztohtwal+rX3c8j005LZS04pzyMl
vZCRaW3HCOcvWzu+/YMTTTGfn5f+sXbO5/Wo3rl9l5IqFVPSJxFJTt8hj6ek
cJ9ZVRj9uHqz6lTlrEw9YUtS769346o5Qkp6ISPT2sERDk/m4f0M3CJ1/xbO
GsXzelTvlL5LSZXCIY3GgbBki5N/fYVhI1PToyUrI0/NrEw9NQ0Iu3Al1+5B
SUkvZGRaO2uEp7TKYtc7peN6d4vKBqc+hjXc3J+fTunRcL3Lm/b2fen0lHTz
UP50sC+rfqWmTD9HfkpviNZNipaJjkbY+FR3bnyTmni903cnriElvZCRae30
C1n+8v37/a/Prx5eLXat33X+03/6v/XwatS727fapm0X3illbkK+M/t4bUhJ
lbdVQ/Qub3ffl1qkpP/ln//zHl5NI0llFGqakopqGtZ5Spo/SknsICW9kJFp
7ZqUtLwi3H6PLSXt7t3tW+3ItptvP6KLj5gj8j0avXdn9X1JSqrsVPTsvZy1
nBKdFZZsTUo6i5Q0KCnphYxMC/kg06Lmuf5p8DvtYvdvz0dSUqb9+bl3x4fN
OWJTybs7tbl3Z/V9SUp6qmJGC69EqcKpK9fyTWZWqpLi4sumthuoGmGTGIKU
9E4G53TRE/jxca6pZBr8TrvYu9vzkZSUaX9+7t3xQUraYF89UhL9u31TSkmD
kpLeyeC00CIlVa739nvs3XfaxVGqT0mrke8hJdX07vatdnDbZRYcLkfkv44e
vXf1fW+qZmBvz0dHUlLlV1sXXCbcmX/1MAi2xaCkpHcyOC00ikjFCr932qtV
198bz+XnpaJVpepf1XCkd9HFpy15Z1l404JNU1K+d1uzTP1W3rQzNOrdfBs/
l1rd3i+mh8IFw3qidUYWbNm72iwT62BY4J6UdJmagd2aZcIpS/nCjVJSac9Z
/25tx4qOt+Tx+ul4Py1hEynpnQxOIy2uSrGbqx+rmBZBZnnTW3NjvLqjTs1K
TQxrOKV3qwKPSUnR3u146FOzlaNbrWlKivauFAGmoEz4PlVgU52te1cflFJ9
yUx8ckqKDuzBlLSaOL//ruvilLTqYNjf1MTjikNdX8/pbXubRpuY1qSkdzI4
jRy/HhXrDFcx7UpJYYHU4pX17+tyvmufk1LSt8LVx001n5iSVr1rnZLqq23R
uzCtVExJBYf83FSZ6cSUlO7djpS0r0B3KWnr3yXVDOzWiBQuMsVS0i3PklYd
TNXZYiMWh7q+ntPb9jY7hp0eSEnvZHDa2XcZqqkwdZmbsinmW3iVZVYTK2/F
oxOXHzMX5X0+21PSLIxL3zerj/sqP7F3Z6Wkb52rrbyp2ha925uS8sX2pKTG
vduakpZvpp/tXE6sr/YhPp2lpEZ9rD/Ph0udVbL+AvRxz3DYpjGnH1LSOxmc
drZegypry1zgptifDkUDzpSITuF9dVhVJmHNU3b0uqZ3O54lrZaaaw6fK434
i7vopslE2spqW/QuHRCmYPqqwtXEYu4opKTGvdsRZ6IdnBK9KFS7tXcnOuVZ
0qrAjp/bTcHfH81S6emuX9ylltqxriMtqa8kbN5c1apr88dVgVRLdrdqOC/p
5vNISe9kcJo6eD4Mr2j5a9yUvUOeFwwfNxx8fhS9ez/S2VTvDqak1MRNNZ+S
kjLbblOciW6O5Ya+JSUlCmxNSamJyyn1KemPChv3rj4lZXq9SkyvSEnRAvse
99Skoa2V7xiQfAfrJx5XHOrKSlZvlpV/FjkoLJ+ZFdb/bI02Ma1JSe9kcFrb
NMJ192PJc+yUTknhm/B2uoeUlC+wIyVFw9F0+Bd3LXp3SkrKb/GmKalUYF9K
KiaLmpT0433j3m1NSfk2b615vJSUL7D1QVL9L+vqKz+YkuoL7DtzntKS+krC
quaP05+j0KrYpjeP124r05SU9FrGp5Hpp5piNXXm56Zum1ezUh/zgSha/1kp
qabv9SnmK3xgNMVc8Iu7mt7tTkn1ubhRSqrpXU1+KUWeTIGaqqZGOSLWmK0p
KdPBTZWPlJKKpsFTUmUflxqt5bhV25Yf5/fTn1NSZtmwm6mlnqrzDU2KlPRa
xqeF1Zlw+bHdZXH6+S8nrGJLVLRMODFfLJzeYqeaGvz/Yfe9GvVua5aJbprU
5u4mJf2x4wdZYJ4eii6Y//iJVdVJSip2MHwvJZV/axd+XM1KLXJjShrFagSW
H+f308+8k3kTVvWeEf7745nRSEmvZXxOFz0N/nHf03K9W59HNHo1uhe9PR/1
k5KG23Ybc0S7l961cuOzpNavl18lVxev5cfw/efnFTCz7LL+y/pyOylpUFLS
axmf06WGtPVQP/5O+/Z8JCXt7t3d8UFKak5KIi/6BOrzspsQKWlQUtJrGZ/T
3ZiS+qF3eqd31zu9d/VapKR+nDJELzfFktHbxtbuNCgp6bWMz+lSQ2qogac6
PSVxvdYXqWXqfGdeeGevH0BKei3jc7roadC5EXgwKWloxadmHqudwhgOSkp6
LePTwupM6MQIPJuUNK7K3xa6ih3nZmBQUtJrGZ9G/KwdeA8paVD11ykXsuPc
DwxKSnozQ9SOsQXeQEoaTvBvVNSmpOXfFu2bFb4JWxVt7Vw4+oONVP3RmmvW
fnqokZIGJSW9mSFqx9gCbyAljSWMSPUp6ZNNOvlZ4ZtV9omuLlo4XCqabjI1
p9aeqvY4KWlQUtKbGaJ2jC3wBlLSQKIRaWtKavGmmJLC9n9i0SOsp6bxq3rq
R6aelDQoKenNDFFThheAroyeklI9SjW1svHLelpcu6WkQUlJb2aIai4WqVFa
faNVvyAA3Gj0lLRaavmmpuZ8PflQto+UNCgp6c0M0ScYhMz5OTVxa7wCgNvV
pKTV94Gr98uJqVmrevKFo5fgsJ5U+8P1pmpINT5cyylOr5BrSElvZog+pVg0
n0jrF8lPBHgSf5c0tIddp7rtjpS0ySrJVi6SqSpTf2U9Z5GSBmKIPielpMqa
AR5GShrOg69N3XZNSqp3+kO9TIDasdRBUtJADNGnLiWlJs4fU19WnNlQuM/0
bncPf9ekpOE8dZfu+YDttmG9CUfp+LilasjX3Gh7SUljMUr5QzJ6p1R5FBtb
RtfzXceVjEOGlDSW+t249W6/u/IRj0QnkEqZUcrskPP05ZtVnfOUVZllnat6
VtNTNWwiJY3FKGUiz2pWanp0SmoijMIOHDImISlpLJv24dY7/KbI1rQlrUlJ
lWqe++TvuMIIE53yCfJR8U20zq2kpLEYpVQU2j2rZjr0zAU9w+CsSEkD2brr
Sklncd6odEpKqnyTij+pN6mJm0hJY3n5KE2BcFb042rZTP3tGg+N2G/zjM+S
lDSKHftt8ZK3/JY+9dV9fql8JWENmevyqtqu5G8VmIWjFG7T6H61401YZ/5N
auImUtJYjFJThpfh2GlrGKWZlDSKIykpc3OYulPN3NzmFyyuN3+L22dQkpLq
FVNJdCSlpK3skDWMUlOGl7HYY+sZqy8paQj7dtfKlFRZvv7WtGYt9evtgZS0
yeo5UWbiatayzKYp4SpS0/MtKZKSxmKUmjK8jMUeW89YfUlJQziYkj7p+3wp
qYaUNKjTQ42UNBaj1JThZSzRm5Po9T06PVPs+Pdyu2/zGt04Obq/pKT+7d5X
a46d6CF2Vko6WE8/pKRBSUkvZ5SaMrwMJLW7ZlJSTQ35m5nMes/SqH5H95eU
1LkjEanm24w5s9R/DZL/8iSscPkxLBNdUW+ppLf2UElKwkC1Y2wZSCYlfWK5
ZlU+OjG6YPRNO1JSU1LSG2S+1nAg1JCSBiUlYaCaMryM4vqUlD86Ut8MT4Fw
LdHWhm/CdW06YB3dHynpHaSkg6SkQUlJGKimDC+jyKekTxBtUjdL4fQwgBTv
GVJPnaLTl7Myj6vqF6nk6P5ISa8R/Rphx3cL72SUBiUlYaCaMryM4nhKSt1H
perMHB2peupDUGXJTI+KHN0fKaljp+yfy6MpE5FSh3m7dDDW0SclDUpKwkA1
ZXgZxZGUlElGmZSUWek8N/MkqLJ59cEq05JU87Yu8jxSUp/OikjL96njOnr4
7P7yobI9Y5GSBiUlYaCaMryMopiSKt/nZ20tkApBqZI7UtLug9TRTbeO75yb
gk/NlOPGPeKkpEFJSRiopgwvo6j5zczq4cucMlZlUrNSdW4qk3+/nJgXXeT4
iMHtTtkzM5UU688f46njN6w8fxIoVr6pv03tOL1wpcqrxjUu6/JlK+rHvvaf
PibMDC+jGGJfnX7eQd1b5xAjxgudsmeuKlneZtTUPyVSz7K21ftV/WENYVX5
yvs5QnffoXGN31vn1+dXD6/L9pMrV/QP/sH/08NLSuqQ4WUUQ+yrUlJv/F1S
b1ocF6spp6SkzMRV3tmRkurbeQ0pqXNSUtMV3Z6PjqSkT09nkkcyvAyhhx21
5l7iyKPzc+vsYcRuJyX15paUVFl4U0o68iwp1aq7SEmdk5Karuj2fCQl9czw
MoQbd9QWT4guMFBT25GSunL6twepj8VjVkpakpI6JyU1XdHt+UhK6pnhZQhS
0lYDNbUdKakfLXbIaSE1K7NU8WP4PnyTmV5T+eljskM/LSFKSmq6okxsmS0/
ruam3i8LS0nDmWLubhQktdg/U7crqbuauRmruZ/S3VS0QOsjzhH9kZJ6Yofs
lhuAexXHf1qkpPDOrSbaRMsvp0Tfh/Vftp9cuaJUZgnfrwpHy2TeS0mjCI8y
J0k612j/XAWZz88EFK56mXRSxSrrOb0vK47oj5TUDXtjz9wA3Kt4JxZGlej7
fFA66/1lY3LZioopKTVRSnoqKYnhtEtJ4fvVEZEqE30TRqp8XGrHEf2RkqCC
G4B7Fe/HMimp/pdyUlJqRZnYIiW9lojEWC5LSflQkwlH9YtLSZeRkqDIPcC9
Et9b//iGLRp5psTP51a/mpOS8ivKJ5dV5FlJJaOwgJQ0HCmJgbRLSWHeWa0x
n5J2TLzgcHNEf0lJUOQe4IhMxjnFJ5aSZtHcFJ2+WqSYhqKLtOvmjWryy+5n
SVLSuFb7yd3NgYIWe+mU/tcb5omrN+Ei4ZtoPe16EXJEf0lJt7Mr9s89wL2i
t+6rAvlnSfUFUiUz71eLXzYml61o9JT0cZptRkRiIO1S0pWkpCtJSfeyHw7B
bcC9il9ZZ6JNZko09UhJ4YryyUhKejMpiYE8ICU97xLTOSnpXvbDIbgNuFdx
/OtT0hT8FdLxv0V6bUqaraaEH1PvpaQH6Pb02GeruNe5e8WV3xJceaA5dmZS
0o3sh6Po9jaAr1V+WT0nSj08mqeEi0w/pcpHF7ysy5etaMdznxYvKalbfQ5v
n63idnaMPOOzJCXdxX44ECmpc2Emyr+m9FOhgy8pSUoaTpj6b3Ruv1Z9/Fz+
hXw/runyEAxIhpFZkZLuYlcciJNq5yYpqeWKbs9HUlJTvwfnf/i3/7aH1ymb
KZURlqfxa/aH7wr7eNn/14xJyJiEpKRb2BXHIiV17sRvXI+7rMuXragfR3px
4pg8zPSslLTsV+rjNfvDd5/t42X/jzjr9DI0I5AnJd3C3jgWJ5BB/Wmhzwp3
e8YOedmR9YzhakRKakRKGsup3+gM4+5RhzW75XCcTAYlJQ3hgr48abhON70m
Jc1Trtkfvivs42X/BwbgZDUiKWlQUtIoWh9iDxuucz01JYXd/Jy6pxWrkpIA
NnGyGpGUNCgpaSyC0i0yKWn145zVxOjH1ZRMsVtS0rkV5n+59DMl/VEwmL5O
NIuSqSmZkpGIZOeHffxdEhS5ygxKShpOu2PtqSN2XDG5hO+jE6OzVlkpLP+Y
lBTuuovMEkaeYq6JBqLixGSSOrfv8BJSEhS5ygxKShpUi949e8SOOJKSMhFp
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
z6zRRcPqUkw0GeWfMe1MSXePx3sZ/HrG6nZSEhS5qnau/5Q0t/OyMXmJYni5
7GXj5p2XklJVbUhJHwfjfYx8PWN1OykJiqSkzk09qWnqNcPyBpOUNIjvjl/z
Q7jYx8ys1JRCSvq4Bb1JZthXp8flSXXrmTasdtOC+/aNZf2n7F2j76Kjt/8j
JUEFd7aD+tNCVxXanc4iJY2iOsJc8PIPUd6m5nuk1McjG+6yjX5u5aPvn6O3
/yMlQQUpaVDdpqSPneok4TfMN7p7MLr2HaE+XlX/djotFEd7dSil3h9Zb9Mt
fm7lo++co7f/IyVBBbdAnbv0Vrhka8sbjQl05e7j8odo224ZlrcpjvO3wFxs
iqWbVCXLAlM6C0cXX+4by8WjO8+qtrDysKpwkcq9bug9c+jGf0lJUOQa2rnv
9unjtXk/sXdBDxyGF6hMSZ8gLn1K4SKaR6LLRmNyfu1h/soU2LpI3tC75dCN
/5KSoMh9bOeGTklzF84dE2Arh2FrB1NSvpLMlXo1PfwYLVAfgipL1vQi3/Kx
DN34LykJiqSkzj0gJX3sZqRFvwlffsx/VU49o9dUfUr6ZP9GaVkgfGpTXG+0
WCrsZJJafTjK1Jk39A45dOOBSm48OveMlDT35ZQx4WEyt2r592xl9NrZlJI+
G/fqVXKprPaTTjTRXBYtsONZUqWh98ahGw9UkpLuVRz/J6Wkmv7yQjtSkkdL
uxm0RirO5MlnNzUXgmXhsNpUJavpy4/599HKo6KLVAzY2Lvi0I0HKrnTuNfq
EhMtkE8u80Vp8d/1RSxRfjnxopS07DV8LfeH+X104ifYeexLOxi0FsYa1cwx
dVmdY43YytCN//J3SVAkJd1rdVkJN0c2wkzTOv5EU090+hRb8KKU9LHjsfAj
0i8m5gt8HnGjchdDd7qxhlRKOmjoxn9JSVDkZvVe0cFfbpR0hAmnp1JSccoN
KSnTfd4mdRQUC9h/jjB65+ptPIsHSPSbh1NWWllnbyP2NlISFL3kTmP6KTU9
dEHJTGs/21JSZSbqKCVlBoH3SB0F+QLFWRQZvRN1MpiVB04POm/e40lJUPT4
e9TOO7hqW9jax6ek6DjwKlLSjQzgWToZSSmJSlISFHUeIo4YomuLB0aZ50qn
p6T8xxtS0mf79pp60m5YHi86hsuJxQIcZBhP0XoYV0dEOP0THBdz+WgNq9pS
9bQ71obe8YZu/JeUBEVPvdMYpVPF8f/O3xiFMrMqnzTdkJLm/sZGYFN+vP41
xs4GKfbh4y4Yw3wCCpuxTDqpYpX1nN6XdtVeY+jGf0lJUPTIlPSkHmWzQCr7
TBXF8rnpziyw2ielJLjAI68FV7omJYXvV896UmWib8IzbT4unWvo/W3oxn9J
SVDkyti5Uhb448oWTCnOStXQRRaYL+Kra3f1yEhJsJmdebdbUlI+1GTCUf3i
UlLU0I3/kpKgSErq3JuzQCTvGRlozP68zzUpKcw7q7XnU9KOiY36NfpuNnr7
P1ISVJCSOvfmLHAsJS2fkS3frxbMFOt3ZKApu/Q+rcdtji2rLLM8Q67ehItE
A1FYT+sejb6Pjd7+j5QEFR6Wkp7Ul68wKdyoh47/LFAILxXv87OkJF7KXr1D
60G7fqO0W+PoO9jo7f9ISVDh+rvfpp7Ul7w/LfRZ4RE1YW1vSpq2BCgpifey
Y2/1sJTUdHUj7l3F7+7GIiVB0dDHeOhJfcl7dkpakpLgLvbtrdqN2JX35K1X
NOh+FW32oH35SElQQUoa1HtS0sq8x9YlmkwmCifui0gv2ut4Ibv3VkYsb+jx
WTV+6L5ISVAkJQ3qtSlpdiAl/fGlrJQERfbwTR52VT3X6CMjJcGrPOx8/qS+
5ElJu1LSFJsrJUGBnXwrIxZ6xpgsezF0j6QkKJKSGFR1qIn+3K44S0qKmN7t
7uG/mRHYyv7zyf6fwQc1d+QxPQJSnnTu+vR91lpeKeb/5i+jqyn5a0107jUD
cste9F3nlpT0xwglPkpJcQ+7ydnNOGzte3iKu1GjMRl0NC5z96ifb+7UI3sH
LD3sPNZtX5YNW475qsGpYuGsfP3RGpq6fuS/nevj1eled4pn926fN4/Jpr7/
Lvzr86uH15s3Gad72I0TkPKwg73PvmRCTWXeybzPr05KkpJ2e9jJ4VxvHpxU
36Nns9vzkZTE6Z5x+Pu7JCh6xsE+67MvmVbdlZJWP4eIfvzE0txyVvEBVqrw
KaSk1p7ar7O8fHzy5655yu35SEqihQfsUVISFD0sJfWpt5S0yj75sBNNTNH0
FH6MruIsU09O793tHtmp0z11lCr7tSoWLjVJSVzixpP/vY4MmpQERccPNIoy
IxzOmtIZp+bcGC6yqcyUiDnRN+HEaAvtYMOxyeo9cqzqO5U/0qdYSppPEd/3
4fR51vy++DE6RUp6vFPCwtCOjICUBEUvP8NcIxOFNqWkcNliHrk+JRVXR//O
3WTTT6uJOz7WNPiyM9sjd+/VMT4f3cUzUjgrTCurXBOdnpkYfZ+aKyU9mG26
tGM0pCQoelhK6rYvqSyTCSzhx+iUcNamnJUqn3+TmluczhBO316V+1hxYk39
mYkt9sMn7dtTzCdxyK8WjM5aBZZMaEpFm8xcKem1HnbfcpatwyIlQdHDzjY9
92V517GaEs4Ky+e3VLSeaLXR2jILRt98ghun1A1VOJHOtdhSq50ts6JwbrE9
U/oWvTjluEfu2OG5KDVrOT064PmUVJOhMktNP2PUtw1+cfd4tmbKppGRkqDo
YbevT+pLtwzys92YksJiNY3Jp6RVVD+9d488HHakpOisfEqat0j0N3j51FPz
gz0p6ZFsyrz68ZGSoEhKGtSfFi6u8D2D/E6NUlIYUsJb8dXcypakYleYnhrt
us87IjKb5sSUVPlDu5onUFLSS9iONSpHSUqCIilpUHelpEZfyNOP1s+SKidu
epYU3S2jU+rbXO/xh8PqqVy+2GrK8ZRU86M7KeklbMcaUhKc5WF3vE/qS96N
z5J4tq5SUlhsFYgyOcizpLNsfai3nJKPRdEclJ8oJb2Z7VhDSoKzSEmDkpJo
pLeUlG9SMSWl6jzR4087J6ak+e+JvjITMx8zhTNhqsHAcKnV0b36tmQpv+ym
Fe2roX5Fx89OYZelJDiLlDQoKYlGTj+Iorcuy4nh7U3+Y6rmaJ2fxVmu0enu
2aedzJ1nWDKckvmTohNfxRU9exu9RD4LHI8bxTW2UFzFjkNPSoKzSEmDkpJo
5D0H0VmM2JeURFNSUn2ZmqWkJCiSkgYlJdHIew6isxixlKkndw8GR01bUtJy
o0ffr4ql3mTmhs1bzVqWWe2EqWZE30dnFRsTH8QFKQmKjlw+qq9Ob3fuJvuS
kmikco/dt2Mvj4hGh0Z0Xa1XdMFa4OVWB1rqY/QkMwX5JVUm+ia6bHjgL2ct
y9Q3o75V0UpSgxMlJUHRjhuJpjf/j9RixKQkGrkgvFxWv5QEj1GfklITM7Py
b4pz82VW35oWq02FuGIlmSkhKQmKtt69ux844sTRk5JoREo6skagkaFTUqrl
O54lZSrJTAF2qE9Jnh+d4qxhlJJoJLV/rr7GjH7DmfqeM7ygh1WFi4QLhmtP
NWa1rmgNqZZEC2QOWydGuEAmJnx+HuapieGpILpgTVVhAzJlUh+LJWvqzLcE
OCJ/9V+VbN2YlzhlJKUkGonun5VX/0+Qeiov+vlFls2ov6kIa97akfyYVM4F
TpE6IYS3MauJ4Zcen9iJYmVVODM3v5Z84VS10QXzleTHCtghPLhSxS5ozHsc
H08piUaiO2fqKjylw8UUu0WpWSScHm1bsf5N66ppZ4rTI1zg3APt2YdtTe/8
XRIU1aSkZ59M7nJwVKUkGsnsmakQkQkm9eEoU2e0bcX6M3OX39MWF3eGhB5I
SfWkJDiFlHQXKYk+5eNJ5llMvsCOZ0nRZtTXf9ZEZ0jowYkH2urB8Sm1bSp/
ynoPrkJKgqKmKWl5IrrrdHSBfU2SkuhTKiWtEsry0M68X07Miy4SbdtqVk0l
q8ZHe7qqJzMaxeECTnfxsbZpdb2dB2raIyVBUfRWZFVgd831a9ldcyd17lj8
4BqlJNqp3zk3BYrjdV5/KyIlQSekpHpSEpyiUUpKfQl8CinpIyXRkpRUv7re
7o7gqY58Zxt9pjxPnD+u5oaFo3OjleTfp+o5i5QEp7gsJa3WmDpTrd6EZ5Vo
gXw9NSWj45BfKjWx3pFzo5REO5v2zBYX+mid7e4oUg2oLNm6McDn2LG2upqv
JqZuMKJvKguH5VP1SEnQrYtTUj7spPJLWD78mKmn5twYjUj5paKN3ERKoltu
/msYJbjMwZQUvs9Em09wid8XqT6xO4TVjUoLUhKcopOUVHwTTlyduDKL15cM
W1sT0zL9zZOS6JkIkGd84Eo3pqT6qj6xO4RP4ivf1fSzVFYoJUHRZSlp95cw
qfKpVRwpWVlGSuINmn7VOTojA9fbfdzVf02679KfSUnFeqQk6FajlPSpPpMU
39SfYY6XjLZfSuLNxIGQMYFbHLwhWd1RZD5GC69m5ZctFg6XOouUBGdpl5I+
sVNHOHH5Mfrmkz6zbaqnsmS0qasT2urN7nPdkbGVkrjMwf38GYwA3G730Xfx
YXvvWaJy7VISFBUv+kMc7IOSkhhR9NuDx7t71IF/Z9/BeOUhfO/pon7tUhIU
FW8ARjneR3Skd1ISAC+09dJ52Xcdt3+jsmntUhIU9ZyStn6X20mkqj9PSkkA
sMntYaRPW8dESoKinlPSUqoZnTRvRUoCgHb6vPrfZcdoSElQJCW1ICUBQFMv
/+PBg32XkqCoUUpaHbnhgRz9uDrkVzWEC2YKhx9TfUkVrulIqlOpAuGqU7OK
pCQAmIU3Es9293jD8xWPtR1H4vQz2kw/c0SmQPFNpkBmdZ90UMrXv/tjqrWp
gdpBSgIAgEaapqTw4ypKbE1JqwWjladWV2xbtGHR2lKFw5bkv/ORkgAAoEO3
pKRU9gkXOfFZUrFtmWo3PYeKTomSkgAAoENNU1IxPqTSxPUpKd+w/7+9O0hy
EwYCKJr7X9pZpJLS0FIjZJqxMu+txiCEcDb+BXYuvUxW2z31GpUEAABFTivp
tRpK8XZMd8vh4bTugO7I9uVhhsNs3fGnSz2c6HRwPLZ7uvbYi2/qFyoJAACK
JB/j2zHVa3jsXJ9DJQEAwGdSSd9FJQEAwGeaqaTXI6E0uZL/w/tXqpIAAKDI
fJv8nISpdss7qZIAAKDIpUoSSu+76z1USQAAUORq+wild9z47qkkAAAosnCH
aPQr2XQVvVcqCQAAirz/6T3850J8cde/1IFKAgCAIqWf5KmjkgAAoIhK2pRK
AgCAIippUyoJAACKqKRNqSQAACiikjalkgAAoIhK2pRKAgCAIippUyoJAACK
qKRNqSQAACiikjalkgAAoIhK2pRKAgCAIippUyoJAACKqKRNqSQAACiikjal
kgAAoIhK2pRKAgCAIippUyoJAACKqKRNqSQAACiikjalkgAAoIhK2pRKAgCA
IippUyoJAACKqKRNqSQAACiikjalkgAAoIhK2pSoAQCAIippUyoJAACKqCQA
AICWSgIAAGipJAAAgJZKAgAAaKkkAACAlkoCAABoqSQAAIDWWiX9+qu7K5+/
3ZLM0z38z9/do9o5J5cKAAAQLRREzJbRbHHm0d6Z4MrnbwNq/hQAAAAHdZWU
J9LprktbZspIJQEAADNurKR/d3NevTs73Xs93XlGg0eP2C38DQAAMHJXJSU1
NNoymnM0+HBelQQAAFS4pZLWtoxejgYvPHH3an69QSUBAAAz7qqkKI5JZjg9
RXfkTCUlGwEAAKIbv5fUbpmspFEB5Yfnu04f5wMAAEisPYqWPMPWhk+8qXT4
wlHyOFwcHI867Bqd4urVAQAAP5mOAAAAaKkkAACA1nIlzf9IwuhBu7WTvvm1
o9OzP5yNEhUAAD7N8veSLu2Kv8aw7P2sOJ3hgVMAAAAf6+FK+oQAUUkAAEBi
oZIO4+MzbKOH4pLn8Q5/x5+tG02VPMs3urSZZXTPmyz1dBndA5PVxncVAAB4
xpuV1L1J1K2kyXtMsT7yAaOR3YWdbukmT3LJySLjuUZld2nxAABAtbsqaTSg
3TIaHKvh9TVYkgGvXtp0Zz5dc6ye7spHBZQvMt94uMyFfxQAAOAuT1ZS3DXT
PqdTxVpJzjgz59VKWriXlMwfrwUAAHjSXZWUp9No73wlXR05X0nxHtA3VtLp
4gEAgGprNyy6t2/irnZA+8m/+7LVTjs6tntgXFiycbSMuMhLV5GseXQJ+SEA
AMCT1j6NJ4f4bA8AAGxt+Z5F9yiJBAAA7M6TXQAAAC2VBAAA0FJJAAAArfib
bwAAAD/cb92N5Po=
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 10->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/r9UyDH3aRuEiZtxBw5zewbTAYAmsMtoO3M14/uyYunsA6eEl3l3Hp
IoVxinQJpAnZKhC4yryBdHklqU6u3cOj1aX5qz8jzUifDz9uzpFGo9FII+l7
dM51/xd/+t/+4z//T6Zp+jf/2c///ON/8Zf/5V/8xb/47//Jf/7zzX/9+3/z
3/yr3//Z7/6r3/93f/av/uwv/uhP/9OfE/+/n2X/9O9M01+/BgAAYOXz+Xz/
CwAA8HLLoAQAAICIBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEA
ACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUB
AAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQl
AQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs3ZiSJmAEt5wfAABudONd0L03
fkClW84PAAA3uvEuyA0YdM4gBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA
4J2kJCDFIAUA3klKAlIMUgDgnaQkIMUgBQDeqduUtPv/2LJcZP5vaFUyVUP9
6sKlUus90tQja8kvVbOx0TaneixTMlPncmKxTHRFNfVH21bc5FQb8h07JQ62
VLXFt5lNy/TSPufWBgAwihvvgoqrXt1SVtYZrT+8t8xXu6lPUpXXz9rR1HB6
tOS+tqWk2lxcUXFX5qNHsYWb6s+0rab+/NvK/ZKfVb/XisseJCUBAO/0pJRU
fxdarLZRSspM39rU3bGi8s58axvq7+Sj+z1ac30L6+vfFL7yzcs0deuUypRU
7JbTx7KUBAC807NTUjir8sb79JS044a//vlC/ZR9TaopU7+zahLQwZSUWXbf
0X5jStq0LikJAOAUnaekpZoKa6qqWWRrSsrUv2m99YuckpI2de9yqUy1qfVG
G1BcvLLaaLHixHo1matmB4VSdYarKK5r36blbTo2AAAe48a7oOKq65NFsUDq
JvmslJRaaut684vkQ82OlFRsTKaRmS1KtTxTskVKitafb1um/ny0idacaWSx
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
A4+Qkh5DSjpdakOW0w8GpU3Tj5jrbPpZzWN2/ZeUBEVS0qCkpPrapKQOU9Km
beyTlHQlKel0j0xJvS3SMykJiqSkQUlJmyqUkjpMSZs2cx/PkgaSH5hbU9Jq
vL8wJRVPdFtT0qrC6El1WWb5YvU6Wjh8m2pktHBYMtXgVDPyK81MH5SUBEXF
Eyl9kpK21hle0A9WeErDjtc/jZySNm1pb6aKlDQfb6vX37c1xd6WkjJ3vDvi
TPT1e1LSJ3uJz0wP98L0a/ZZvc28yBQIy6yKRTNLplXRYvXNyKw0tZahSUlQ
JCUNSkraV/OOlDRVO7ep9SVTmWUpnB4WjpZZlY8uLiXlI0zxdX7WO1PSakxN
UtJGq94Lz1GpDZkSOWJZSVgm/2K59imIJ+GUVDOKhVclwwZX1pOqMJw4LikJ
isIzJ0OQknZXPsQxX9/CaGCZY0vxdWripmWPpKRNG9uVIylp+sNjIylpFk1J
y7vcs1LSt87V2/r6R+ntTHDIFPgkkkI0ZdQEjXwAaZeSUs2orEdKAj5S0rCk
pCP193/YF5u3vIc8KyUVy2fWdSQl1Wxvh7pKSW+wIyWFy86vvy9Wb7dWG7U8
Qu4tGT1o52LRAp+6+BAuWywZvojWli9fLJyaVdOMfIWpieOSkqBodV5lFFLS
EGvZLXMDE94LnfgsaYoFotWszOrepj7F5ONSqphnScu5u58lrZadK9/3TbxR
ensKwkU4JbpU2PPTH4JGOD06ZbUHo29XNaxqi5ZPrTpsSdieVPujzY6uNNVj
45KSoCh6KqB/UlK+hn6c0gmZ2qZsSlqq/MbdFGSi1eItniVFt7pz07GUNJOS
vvIDZzopJU2JZ0lPTUn5U8fByo/XM5aHbamUBEVHbuS4kZSUr+Gf/tP/rYe/
g/chNVErn5IyOWhTSqp8lrR7Y5ebc7ySa+xOSasFp/TX8F6YkjJzd6ekaGKa
Dnzj7spu2a3m1HGk8lPqGcvDtlRKgiIpaVBSUr6G2/PRkZRUE46Whc9NSeHD
o/yCUlJ9UMqnpH0R6TEpKW9rSpoH0WrKnwS/V1oVe0xKKjq4IZtOU/sqP1Kg
hcfs+i8pCYqkpEFJSfkabs9HO1LS6q7jspQUfVQUTUn5oHTWmWSUM9K+lDTv
5dRbKSlqa0pq9/eY3u48ZRQLbz1VHveYXf8lJUGRlDQoKSlfw+35qD4lpT6S
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
Pev55MCNHBiDkpLeoJ+uuDclzWtfpaRVmdXEaLSZZ0ULZMoPl5LCc3vqjrHD
banxsO0tbk5lignjT7FYKkyNkpLC7sp35pSNLVNdGlpOzMzq+Rt3UtJSZuht
KsPD2NeDkpLeoKuuuKYx0dub+TQ1BYFlOWVaBKVorlnFn2JEir4eKyUtz/CZ
S/+FzTzNw7a3uDk1QSYsk0lJqzw1bkoKFU8j+WdJU+wxUGZitMLMWqSkDmWG
3rJA6i1PZUcPSkp6g6664qzGZOrJ3NvM9qWkmimViSn6GKt/mZ6f5xZrqNxN
95acC0/p7R3OZ29KyseiecrWlHR3fxxV/MbdFMSf6OJT+mt1mbVISR3KHC2f
xK1ydCIPYy8PSkp6g6664qzGHKlnOi8lpb5fFy0frfCU3jhR6vq+LJBa8JIG
nuxh21vcnCMpKUxDqxdveJa0nLsvJUWfJc22pqRoI+lW6ki76qDmHpm9T8+k
pDforStOac80rZ8LfKpPRFP2mc7xJ0dT4idL0SnHu+JcxWt6dPq4l4CHbW9x
c055lvTOlBTOLaakOcVkUs9qSv6tZ0mdC1LRL0dOak/1eTLhRN1eMsiTkt6g
t6440p7UNWh5CirWP9XFn8pilSkptYrdXdFIzck8vPR3uCGVHra9xbYd+V1S
5llS+GW8x6SkzNyalJR6liQlPVIxWaeWat807tTzVYMMKekNeuuKU9qzqqTm
87plgbNS0hyIvlIpKRWvets19fI3A8/zmO3d92/cFV8UH0KNmJLyUvllPkii
37ILZy2n5N9KSf0rJutodBr6lEINe3lQUtIb9NYVg6ak+uyTKhZd7/GugHr7
/n9J4cTln5R075+UNJDV3bKb55ewowclJb1Bh11xvElhSpqnbE1J8we20Ynh
3Gj5VEpKVSIlcYtNQabpn5QkJb3T6qLw6fIazbmkpEFJSW/QYVec3qT5WlNT
cz7gHP+rr7/DXUOlQa96UtJZpKQvKem4Ec8kbDLo9QIp6SV6641GKam+sJTE
EdEHl0PsTSnpLOHj5hvd2A9S0inu3Ym0dvs4ZR8p6SU67I1zm7SptttuZWJO
7ASut9yDQ+zN6A+L7vq7uzM4gZR0iiHOHuzmcj8oKeklOuyNE5t0V+LosFdb
W3a1uPf59aueL+8K3klKOotTx4O5NAxKSnqJDnujwyZt9YBN2CH19OSFvbHa
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
vKP3eVtU75Rtl5IqZYJPMROdsqd2p6Sz1n68kttXsZtL/6CkpBfSM03VdK+4
xKCed9A+b4vqSUlXymSf8HFSWKxFUKpf6sRiF+inJTNX/EFJSS+kZ1rbdPWp
OXk6wdKJ1b3cfP827vH5vC2qd8q2S0mV8ikpfLsqdtYBuTUo1a+9nyHTT0tm
LzmlPI+U9EJ6prUdPZy/bO349A9ONMV8fr30j3VwPm+L6p277VJSpWJK+iQi
yekH5PGUFB4zqwqjb1cvVhtVOStTT9iS1Ovr3bhqjpCSXkjPtHawh8OTeXg/
A7dI3b+Fs0bxvC2qd8q2S0mVwi6NxoGwZIuTf32FYSNT06MlKyNPzaxMPTUN
CDfhSq7dg5KSXkjPtHZWD09plcWud8qG27pbVDY49Tas4ebt+dUpWzTc1uVN
e7d96fSUdHNX/urgtqy2KzVl+rXnp/SOaN2kaJlob4SNT23OjS9SE693+uHE
NaSkF9IzrZ1+Ictfvn++/vH50cNfi0PrZ53//ve/7+Gv0dbdvtc27bvwTilz
E/Jzyn/48z/v4S+zdZu2aFXy9v8X9sH/I/bubV9qkZL+9b/+H3v4axpJKqNQ
05RUVNOwzlPS/FZKYgcp6YX0TGvXpKTlFeH2e2wpaffW3b7Xjuy7+fYjuvgQ
KWnTFq1K3p6PDqak3du+JCVVblT07L2ctZwSnRWWbE1KOouUNCgp6YX0TAv5
INOi5rn+afA77eLm356PpKRM+/Nzb89H+1JSZcnb81GLlLSVlPRUxYwWXolS
hVNXruWLzKxUJcXFl01t11E1wiYxBCnpnXTO6aIn8OP9XFPJNPiddnHrbs9H
UlKm/fm5t+cjKanevnqkJPp3+66UkgYlJb2TzmmhRUqqXO/t99i777SLvVSf
klY930NKqtm62/fawX2XWXC4lJT/ODosfHs+OjElXXbKqunY2/PRkZRU+dHW
BZcJd+ZfPXSCfTEoKemddE4LjSJSscLvnfZq1fX3xnP5ealoVan6VzUc2bro
4tOWvLMsvGnBpikpv3Vbs0z9Xt50MDTaujmkfIXhZZ4+BcIFw3qidUYXbLF1
W7PMSrTAjc+SrlHTsVuzTDhlKV+4UUrKb+ByeqrYccWWPF4/G95PS9hESnon
ndNIi6tSeHO1WsW0CDLLm96aG+PVHXVqVmpiWMMpW7cq8JiUFN26HQ99avZy
dK81TUnRrVsFomhKikaeaRFwUpmovs5GW7cjzkRf5yc+OyVFO/ZgSlpNnF9/
13VxSlptYLi9qYnHFbu6vp7T2/Y2jXYxrUlJ76RzGjl+PSrWGa5i2pWSwgKp
xSvr37fJ+U37nJSSvhWu3m6q+cSUtNq61impvtoWWxemleKU6LOh4tzio6UW
W3ckJe0r0GFK2vq7pJqO3RqRwkWmWEq65VnSagNTdbbYicWurq/n9La9zY5u
pwdS0jvpnHb2XYZqKkxd5qZsivkWXmWZ1cTKW/HoxOXbzEV5n8/2lDQL49L3
xertvspP3LqzUtK3ztVe3lRti63bl5LyxfalpBZbtzslLV98X6/+u6ny07fu
Rp/OUlKjbaw/z4dLnVWy/gL0cc9w2KY+px9S0jvpnHa2XoMqa8tc4KbYT4ei
AWdKRKfwvjqsKpOw5ik7trpm63Y8S1otNdccPlca8Rt30V2TibSV1bbYulQC
mhKBaJb/Wt1dz5JWBXakpNlq4jI9ba15x9ad6JRnSasCO75uNwW/P5ql0tNd
37hLLbVjXUdaUl9J2Ly5qikIZdECqZbsbtVwXrKZzyMlvZPOaerg+TC8ouWv
cVP2DnleMHzccPD5UfTu/cjGprbuYEpKTdxU8ykpKbPvNsWZ6O5Y7uhbUlK0
wNaUdO6zpGWFLbbu+LOk8PW+ardu3YkOpqRogX2Pe2rS0NbKd3RIfgPrJx5X
7OrKSlYvlpV/FjkoLJ+ZFdb/bI12Ma1JSe+kc1rb1MM1tw2Zc+yUTknhi/B2
uoeUlC+wIyVFw9F0+Bt3LbbulJSU3+NNU1K+wL6UlEo6m1LS6nWLrdudklIT
p9c8S8oX2Pogqf6bdfWVH0xJ9QXa3T+fUnPq2jT9GnnCYptePF67vUxTUtJr
6Z9Gpl/VFKupMz83ddu8mpV6mw9ElTfeja4C0/b/X1L4wGiKueAbdzVbtzsl
1efiRimpZutq8ks+8mQK1FQ1V9Ji6w6mpCnIRFPsYdPDUlLRNHhKqtzGTZeA
u0yJZPSJpaTMsuFmppZ6qs53NClS0mvpnxZWZ8Ll23aXxTnyfK1iS1S0TDgx
Xyyc3uKgmhr8/2H3/TXauq1ZJrprUru7k5Q0tyeMMPP0sPHRBfNvV9OX9bTY
uq0RaWU5MfpaSqr5rl34djUrtciNKWkU0/aUlHkRVvWeHv4eeHe3gs2kpNfS
P6eLngbn63LT9W59HtHor9G96O35qJ+UNNy+i/6Y6Pq/HlJSu793pqQL/l5+
lVxdvJZvw9efX6+AmWWX9V+2LbeTkgYlJb2W/jldqktbd/Xj77Rvz0dS0u6t
uz0fSUmtSUnkRZ9AfV52EyIlDUpKei39c7obU1I/bJ2ts3XXO33r6rVISf04
pYteboolo7f1rcNpUFLSa+mf06W6VFcDT3V6SuJ6rS9Sy9T5zrzwzq1+ACnp
tfTP6aKnQedG4MGkpKEVn5p5rHYKfTgoKem19E8LqzOhEyPwbFLSuCq/W+gq
dpybgUFJSa+lfxrxtXbgPaSkQdVfp1zIjnM/MCgp6c10UTv6FngDKWk4wb9R
UZuSlr8t2jcrfBG2KtrauXD0Cxup+qM116z99FAjJQ1KSnozXdSOvgXeQEoa
SxiR6lPSJ5t08rPCF6vsE11dtHC4VDTdZGpOrT1V7XFS0qCkpDfTRe3oW+AN
pKSBRCPS1pTU4kUxJYXt/8SiR1hPTeNX9dT3TD0paVBS0pvpoqZ0LwBdGT0l
pbYo1dTKxi/raXHtlpIGJSW9mS6quVikemn1iVb9ggBwo9FT0mqp5YuamvP1
5EPZPlLSoKSkN9NFn6ATMufn1MSt8QoAbleTklafB65eLyemZq3qyReOXoLD
elLtD9ebqiHV+HAtpzi9Qq4hJb2ZLvqUYtF8Iq1fJD8R4En8LmloD7tOdbs5
UtImqyRbuUimqkz9lfWcRUoaiC76nJSSKmsGeBgpaTgPvjZ1u2lSUr3TH+pl
AtSOpQ6Skgaiiz51KSk1cX6b+rDizIbCfaZ3u7v7uyYlDeeph3TPA7bbhvUm
7KXj/ZaqIV9zo/0lJY1FL+WHZPROqXIU61tG1/Ndx5X0Q4aUNJb6w7j1Yb+7
8hFHohNIpUwvZQ7IefryxarOecqqzLLOVT2r6akaNpGSxqKXMpFnNSs1PTol
NRFG4QAO6ZOQlDSWTcdw6wN+U2Rr2pLWpKRKNc998ndcYYSJTvkE+aj4Ilrn
VlLSWPRSKgrtnlUzHXrmgp6hc1akpIFsPXSlpLM4b1Q6JSVVvkjFn9SL1MRN
pKSxvLyXpkA4K/p2tWym/naNh0Yct3n6Z0lKGsWO47Z4yVt+Sp/66D6/VL6S
sIbMdXlVbVfytwrMwl4K92n0uNrxIqwz/yI1cRMpaSx6qSndy3ActDX00kxK
GsWRlJS5OUzdqWZubvMLFtebv8XtMyhJSfWKqSTak1LSVg7IGnqpKd3LWByx
9fTVl5Q0hH2Ha2VKqixff2tas5b69fZAStpk9ZwoM3E1a1lm05RwFanp+ZYU
SUlj0UtN6V7G4oitp6++pKQhHExJn/R9vpRUQ0oa1OmhRkoai15qSvcylujN
SfT6Hp2eKXb8c7ndt3mNbpyM7i8pqX+7j9WasRMdYmelpIP19ENKGpSU9HJ6
qSndy0BSh2smJdXUkL+Zyaz3LI3qN7q/pKTOHYlINZ9mzJml/mOQ/IcnYYXL
t2GZ6Ip6SyW9tYdKUhI6qh19y0AyKekTyzWr8tGJ0QWjL9qRkpqSkt4g87GG
gVBDShqUlISOakr3MorrU1J+dKQ+GZ4C4VqirQ1fhOvaNGCN7o+U9A5S0kFS
0qCkJHRUU7qXUeRT0ieINqmbpXB6GECK9wypp07R6ctZmcdV9YtUMro/UtJr
RD9G2PHZwjvppUFJSeiopnQvozieklL3Uak6M6MjVU99CKosmdmiIqP7IyV1
7JTjczmaMhEpNczbpYOxRp+UNCgpCR3VlO5lFEdSUiYZZVJSZqXz3MyToMrm
1QerTEtSzdu6yPNISX06KyItX6fGdXT47P7wobI9Y5GSBiUloaOa0r2MopiS
Kl/nZ20tkApBqZI7UtLuQWp0063jB+em4FMz5bhxR5yUNCgpCR3VlO5lFDXf
mVk9fJlTxqpMalaqzk1l8q+XE/OiixzvMbjdKUdmppJi/fkxnhq/YeX5k0Cx
8k3b29SO0wtXqrxqXOOyTb5sRf3Y1/7T+4SZ7mUUQxyr0693UPfWOUSP8UKn
HJmrSpa3GTX1T4nUs6xt9XpVf1hDWFW+8n5G6O47NK7xc+/8+Pzo4e+y4+TK
Ff2jf/S/9/AnJXVI9zKKIY5VKak3fpfUmxbjYjXllJSUmbjKOztSUn07ryEl
dU5Karqi2/PRkZT06elM8ki6lyH0cKDW3EsceXR+bp099NjtpKTe3JKSKgtv
SklHniWlWnUXKalzUlLTFd2ej6SknulehnDjgdriCdEFBmpqO1JSV07/9CD1
tjhmpaQlKalzUlLTFd2ej6SknulehiAlbTVQU9uRkvrR4oCcFlKzMksV34av
wxeZ6TWVn94nO/TTEqKkpKYrysSW2fLtam7q9bKwlDScKebuRkFSi+MzdbuS
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
lJR0CuPr2dxZ1Sumj1SSKpaXkpYckPuEsR0aqUlJm5LO8WdJq+ZtGgjRD7UO
XhylJDonJR1ncD2elLRJ+JwoNTE1a3UJXgrnriqJFs4vUmzhTEoa3VSdiOGg
VWxZKT4kypQvLhWWzDQyPxYyp9a5wJEuuj0fSUlkSEkHGVlvULyO0KfTQ42U
NLopFsahhWi0ueWveJzXjIUp+OArOn1rF92ej6SkqGg6vsuN/SAlHXTv7uMa
t49T9pGSCE2Jmz041zROSpobXD93kpIe7WeH/PN//j/38CcljcuwegkpaVBS
EqGw6wxwWrjiQ/Zqm9qcmhV9W195tM5MbPlava6fJSUdMUlJf0NKgqJNVxn6
ISURqrwJhIN+HlF/+Zf/Qw9/W4/tykvejhQW1pBPLsXX+VlS0m5S0peUtMm+
D2cYnd09KCmJUKbrjHRONG5KmtvfejjsSEnhIplZUtJuUtKXlDQrnhBWBVxP
38O+HpSURKjYdfqWU4yekuataDcitqakaPn8rMxcKSlDSvqSkmb550T1E3ke
O3pQUhKh+q8SXdAYHuwZKWnelhYjYlNKShVOzZp+/bGSlLRJKiV9O3P19jtl
CmRqyJeRkjoU7t/p1ydHqaWuaiC3ccs0KCmJUH3X6WSOeFJKmrfo3EGxKSVt
fZY0bfkmnsG+kskvq1mr0JQqVrOIlNSzaEqazwlS0ptJSZ3LDN7rXbbJ16zo
eTZ13ZX7lIeZFilpPj+E+SWcXlMsevJJ1XDuMXxibVPL3yVlFpGSiqZsxpm2
J6MjKYkhpA6kiw9drpc5AOjBz73zd//u/9vD32XHiQNytx1dp7fZYQqiypSI
P+HE6POg6Nvoi7Dw6Zt2Sp1Ty3/jbvo1JRXXdXxznmQqPQmaC0yxyJOauFrW
s6SB5JNR9Jzg5vkl7OjOSUlssi8o6XM2ieaaKXjiUyyWiU71karRBh6sOZNc
5tuw1ev6Wf9u8Yuk5UQpqUYxJYVxafXcJ5+MwpJSUudWey1VIPWWB7OvOzdJ
SWyxu/d0O/WK8SecMlZKmjfzyIAqfhfumj9De2V3Soo+S1rVln/bVUpiVjPS
i0mKR7K7OyclscmR3tPzVIrGnzAH5Yv1n5Lmjd2xFimpWzUpKUxA0aWkJHg2
KalzUhKbHOw9JwRq7E5Js4FS0rzJqXVFp089adw3g5kO/xt3q4mZYpl1SUnQ
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
hNM/wbiYy0drWNWWqqfdWBv6wBu68V9SEhQ99U5jlI0q9v909u+S8nNvTEnz
9oZToqv+OfGP//ivevgb5WCDFMfwcRf0YT4Bhc1YJp1Uscp6Tt+WdtVeY+jG
f0lJUPTIlPSkLcpEmFT2mdKPiqJJqquU9Ml+Uroqdns+kpJ4jEdeC650TUoK
X0efH4Vloi/CM20+Lp1r6ONt6MZ/SUlQ5MrYuXyEma9r4ZTirFQNt6ekecM/
v36tLixwez6SkngYB/Nut6SkymdAYTiqX1xKihq68V9SEhRJSZ2ryS/X/F1/
nISJbzX39nwkJfE8jud9rklJqYdBlSlpx8RG2zX6YTZ6+z9SElSQkjonJe1L
SfMiq9fftzXFpCReyyG9T+t+Wz0Jmicuz5CrF+Ei0UAU1tN6i0Y/xkZv/0dK
ggoPS0lP2pavMCncqIcNXxYohpfi6/wsKYnXclTv0LrTrt8p7dY4+gE2evs/
UhJUuP7ut6knbUvebwt9VnhETVjbl5KmPzw2kpIgz4G91cNSUtPVjXh09fD5
4YmkJCgaeoyHnrQtec9OSUtSEtzFsb1V04cvl12vW69o0OMq2uxBt+UjJUEF
KWlQ70lJK/MRW5NoMpkonLgvIklJPJvDeys9ljd0/6waP/S2SElQJCUN6rUp
abY7Jc2kJKjhCN/kYVfVc43eM1ISvMrDzudP2pY8KWlHSlotkvkanpQESw7y
rfRY6Bl9styKobdISoIiKYlBVYaazM+Ojv8i6W0pKfyN2Kvc3f030wNbOX4+
2f8z+KDmDXnMFgEpTzp3ffo+ay2vFPN/85fRKXi4n9lf0bnXdMgtR9G0MSXN
/ZN6KyWlPOwmZzf9sHXb42nzJo36ZNDeuMzdvX6+SUqC13jYeazbbZl+fUaf
Os2mioWz8vVHa2jq+p6fDuSac/+6PepO8eyt2+fNfbJp238W/vH50cPfm3cZ
p3vYjROQ8rDB3ue2ZEJNZd7JvM6vTkqSknZ72MnhXG/unNS2R89mt+cjKYnT
PWP4+10SFD1jsM/63JZMq+5KSauvQ0TffmJpbjmr+AArVfgUUlJrT92us7y8
f/LnrnnK7flISqKFBxxRUhIUPSwl9am3lLTKPvmwE01M0fQUvo2u4ixTT07f
uts9cqNO99ReqtyuVbFwqUlK4hI3nvzvdaTTpCQoOj7QKMr0cDhrSmecmnNj
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

                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 11->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3u9VyDH2QLKOhClWlDjiBFCloURQrKaCINeg8gI4YIKRqkN0iEJnmo
qKjoOIRISKBBQkJI9wFQcASIFjpaqs09s/V6fHt9+mPZa9nXpb8e7W0vLy8v
e9n+be99P//+n/3nf/qf/lvTNP2Lf/fnf/70n/6X/+Hvf/9P/6v/+N/7+eZ3
f/Ev/rN/9hd//p/8R3/xX/z5P/vz3/8Hf/Zv/5z4//0s+2f/zjT91WsAAABW
Pp/P978AAAAvtwxKAAAAiEgAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtS
EgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABL
UhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAA
S1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwNKNKWkCRnDL+QEA4EY3
3gXde+MHVLrl/AAAcKMb74LcgEHnDFIA4J2kJCDFIAUA3klKAlIMUgDgnaQk
IMUgBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J26TUm7/48ty0Xm/4ZW
JVM11K8uXCq13iNNPbKW/FI1Gxttc6rHMiUzdS4nFstEV1RTf7RtxU1OtSHf
sVPiYEtVW3yb2bRML+1zbm0AAKO48S6ouOrVLWVlndH6w3vLfLWb+iRVef2s
HU0Np0dL7mtbSqrNxRUVd2U+ehRbuKn+TNtq6s+/rdwv+Vn1e6247EFSEgDw
Tk9KSfV3ocVqG6WkzPStTd0dKyrvzLe2of5OPrrfozXXt7C+/k3hK9+8TFO3
TqlMScVuOX0sS0kAwDs9OyWFsypvvE9PSTtu+OufL9RP2dekmjL1O6smAR1M
SZll9x3tN6akTeuSkgAATtF5SlqqqbCmqppFtqakTP2b1lu/yCkpaVP3LpfK
VJtab7QBxcUrq40WK06sV5O5anZQKFVnuIriuvZtWt6mYwMA4DFuvAsqrro+
WRQLpG6Sz0pJqaW2rje/SD7U7EhJxcZkGpnZolTLMyVbpKRo/fm2ZerPR5to
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
R0xJmzbwCCnpMaSk06U2ZDn9YFDaNP2Iuc6mn9U8Ztd/SUlQJCUNSkqqr01K
6jAlbdrGPklJV5KSTvfIlNTbIj2TkqBIShqUlLSpQimpw5S0aTP38SxpIPmB
uTUlrcb7C1NS8US3NSWtKoyeVJdlli9Wr6OFw7epRkYLhyVTDU41I7/SzPRB
SUlQVDyR0icpaWud4QX9YIWnNOx4/dPIKWnTlvZmqkhJ8/G2ev19W1PsbSkp
c8e7I85EX78nJX2yl/jM9HAvTL9mn9XbzItMgbDMqlg0s2RaFS1W34zMSlNr
GZqUBEVS0qCkpH0170hJU7Vzm1pfMpVZlsLpYeFomVX56OJSUj7CFF/nZ70z
Ja3G1CQlbbTqvfAcldqQKZEjlpWEZfIvlmufgngSTkk1o1h4VTJscGU9qQrD
ieOSkqAoPHMyBClpd+VDHPP1LYwGljm2FF+nJm5a9khK2rSxXTmSkqY/PDaS
kmbRlLS8yz0rJX3rXL2tr3+U3s4Eh0yBTyIpRFNGTdDIB5B2KSnVjMp6pCTg
IyUNS0o6Un//h32xect7yLNSUrF8Zl1HUlLN9naoq5T0BjtSUrjs/Pr7YvV2
a7VRyyPk3pLRg3YuFi3wqYsP4bLFkuGLaG358sXCqVk1zchXmJo4LikJilbn
VUYhJQ2xlt0yNzDhvdCJz5KmWCBazcqs7m3qU0w+LqWKeZa0nLv7WdJq2bny
fd/EG6W3pyBchFOiS4U9P/0haITTo1NWezD6dlXDqrZo+dSqw5aE7Um1P9rs
6EpTPTYuKQmKoqcC+icl5WvoxymdkKltyqakpcpv3E1BJlot3uJZUnSrOzcd
S0kzKekrP3Cmk1LSlHiW9NSUlD91HKz8eD1jediWSklQdORGjhtJSfka/tbf
+n97+Dt4H1ITtfIpKZODNqWkymdJuzd2uTnHK7nG7pS0WnBKfw3vhSkpM3d3
SoompunAN+6u7Jbdak4dRyo/pZ6xPGxLpSQokpIGJSXla7g9Hx1JSTXhaFn4
3JQUPjzKLygl1QelfEraF5Eek5LytqakeRCtpvxJ8HulVbHHpKSigxuy6TS1
r/IjBVp4zK7/kpKgSEoalJSUr+H2fLQjJa3uOi5LSdFHRdGUlA9KZ51JRjkj
7UtJ815OvZWSorampHZ/j+ntzlNGsfDWU+Vxj9n1X1ISFElJg5KS8jXcno/q
U1LqI9mDKWkKZKavyqwiVXTxdimpftvvtS/RtPgborsOkpJOJyVt9Zhd/yUl
QZGUNCgpKV9DMbwspabPc1clwwV3pKRUONraD6mUdP3fuWeS/s9LUtKVpKTT
nT5g5xNa9PXqjBeeAMMCn19vUcLy0aWii5yysY/Z9UCl/H0a3ZKS8jXU5Jfw
dc2L1eutKakYjrb2w1NTUn0P3CW8/bvR3Z3R3N0d/Iu7O+McJ27I9Gu0WVVe
MzdVJrNs/Uqnk4LSY3Y9UOlJ5/xXkZLyNexLSTVTaioPU9KO+6vKwm1uA3fa
s7cO9wCww4njK6xqqotLn0UaWlWymhKeZzIvinN3cDqCF2pxb8MFpKR8DY1S
Uk3Nq6V2D7FrBmZ0Lf2cFjppBjzSWeMrdRr5VKek+fWqTCbjSEkH+V0SFPVz
O8QmUlK+hvr88lWTkrZGpHmpu/rh4Io6OTn00AZ4pNNTUvQh0aZiqRc1j5Ck
pE2kJCjq5EaIraSkfA2bniUV3x55lvTZO8puT0nz3NtPEbc3AB7pxJEVPVGs
pqweFVW+DV+kClTWs3sDdy/bJykJinq4BWIHKSlfQ6OUtDUorT7b3DTcOklJ
c5l7TxROU9BC05H1mGH7mA1ZkpKg6PabH/aRkvI1tEtJm4JSdFsq49KVA7Ny
XfeeLpypoIVGI+sxA/YxG7IiJUGRlDQoKSlfQzG8rETnpqZEl6pPSct2Zgp0
mJLmwrecNJypoIXTR/ST7isesyEhKQmKnnQ2exUpKV/Dpl8Ptfur/zJbWLLb
lDQvcv2pw8kKGjG4Qs/uEykJiqSkQUlJ+Rpuz0f1KWnZ7GX5zlPSvODFJxDn
K2hk9YT97ubc4z09ICVB0RtOBY8kJeVruD0f7UhJc+NvuUYfWd3FrXXKggtM
r3R3r19HSoKit50WHkNKytfQj4NbcbArNq3ueA2XNfjKngF4HikJii6+E+Ms
UtLjTYv/x8cFfXLWKsZqLcA7SUlQJCUNSkp6vFU/XBCXTqxcUALomZQERVLS
oKSkx0v1Q7sxe261F5xbHCoA+0hJUCQlDUpKerx8P7R4tNSi5wd6/gXwHlIS
FElJg5KSHq+yH84dwu2eUrXbrQ4YgK2kJCiSkgYlJT3epn4469FS6+c+Q3xX
EODxpCQokpIGJSU93r5+OBiXrvlXF05fi2MGYBMpCYqkpEFJSY93sB92D+1r
+v/eH1U5xgCAPClpUFLS453SDzseLV3Z/3f9qMoxBgDkSUmDkpIe765/l/v6
/j/xLLRjG+e1OxkCADM3BoOSkh6v3b/Lna/5rv4/61yUqWSKWa3a4Qe8gd8l
QZGUNCgp6fGa9kN+4N+4C045IxVrWBVYPVo6uHaA/klJUCQlDUpKeoPWXZF6
tHT7Ljh4XpKSAPKkJCiSkgYlJb3BZV2xikud7IIjZ6dN3yrscNsBmpKSoEhK
GpSU9AbXd8XypzoXrzqlUVAKSzoZAu8hJUGRG4NBSUlvcO8/pNDPjtjdmMw3
62qmAzyVlARFXd0LUU9KeoN7/xWFT2fnh32NWX6VTkoC+JKSoKiruyDqSUlv
cG9XrPJFJ/tla0uWcS+6YFdbB3ANKQmK3B4MSkp6g05S0nJKJ3tnU0umXzVt
GMAQpCQoctswKCnpDXpLSfP0Ts4bNc2YAte0DaBnUhIUuW0YlJT0Brd3Rb4B
neSO4lfppCSAFSkJitw2DEpKeoPbu6KyAT2cRqJtEJQAoqSkGpnLR/Tt6vri
cjM69wyDkpLe4Pau2NSAHjJIZVa6pW0A/ZCSKmWCTzETudyMzj3DoKSkN7i9
K/Y14PazSjEr3dIqgH5ISZUy2Sd8nBQWc8UZmnuGQUlJb9BDV+xuw+2RJJ+V
bmkScLp5RBvam0hJlfIpKXy7KuaYHJqzyqCkpDfooSuOt+HeYJLKSrc0Bmhh
OcyLozv8Cu6N2vdNkpRUKdxNU3CwTbFAFBZjOLePU/aRkt6gh644sQ3HzzZX
38FkndUtUOO3f/2v+/m7uzPWluOxODZ/FviX//K/6eHv3tOIlFQp3E1TdUpy
vRid3TcoKekNOumKc5tRc9VIzf05/cfnRw9/newa3uNnNpl+joAO/npISavT
iJREOzUp6VP3GyWGIyUNSkp6g066olEzMief1CwpideSkjJSiSlV+PZ8JCUN
JJN39s1iIFLSoKSkN+ikK5o2I3y0lPmWgpTEa0lJGfP3nWoGppREvSkQzlpO
ic6q+QYFfbLjBiUlvUE/XXFBS+ZzUeqS9JGSsupvETM5dCAP295i86SkjPBE
kenMVEr6LrV6+50S3iovi4WVpAp3lZL8LgmKOr9wkCIlvUE/XXFZS6L3GMu5
t+ejzlNSPg6E/dnhhlR62PYWN6c+Jc3/xsL3dapAtPyTUlKqM/OxJfW25vXy
bfhCSupZzycHbuTAGJSU9Ab9dMW9KWle+yolrcqsJkajzTwrWiBTfriUFJ7b
U3eMHW5LjYdtb3FzKlNMGH+KxVJhapSUFHZXvjOnbGyZ6tLQcmJmVs/fuJOS
ljJDb1MZHsa+HpSU9AZddcU1jYne3synqSkILMsp0yIoRXPNKv4UI1L09Vgp
aXmGz1z6L2zmaR62vcXNqQkyYZlMSlrlqXFTUqh4Gsk/S5pij4EyE6MVZtYi
JXUoM/SWBVJveSo7elBS0ht01RVnNSZTT+beZrYvJdVMqUxM0cdY/cv0/Dy3
WEPlbrq35Fx4Sm/vcD57U1I+Fs1Ttqaku/vjqOI37qYg/kQXn9Jfq8usRUrq
UOZo+SRulaMTeRh7eVBS0ht01RVnNeZIPdN5KSn1/bpo+WiFp/TGiVLX92WB
1IKXNPBkD9ve4uYcSUlhGlq9eMOzpOXcfSkp+ixptjUlRRtJt1JH2lUHNffI
7H16JiW9QW9dcUp7pmn9XOBTfSKass90jj85mhI/WYpOOd4V5ype06PTx70E
PGx7i5tzyrOkd6akcG4xJc0pJpN6VlPybz1L6lyQin45clJ7qs+TCSfq9pJB
npT0Br11xZH2pK5By1NQsf6pLv5UFqtMSalV7O6KRmpO5uGlv8MNqfSw7S22
7cjvkjLPksIv4z0mJWXm1qSk1LMkKemRisk6tVT7pnGnnq8aZEhJb9BbV5zS
nlUlNZ/XLQuclZLmQPSVSkmpeNXbrqmXvxl4nsds775/4674ovgQasSUlJfK
L/NBEv2WXThrOSX/VkrqXzFZR6PT0KcUatjLg5KS3qC3rhg0JdVnn1Sx6HqP
dwXU2/f/SwonLv+kpHv/pKSBrO6W3Ty/hB09KCnpDTrsiuNNClPSPGVrSpo/
sI1ODOdGy6dSUqoSKYlbbAoyTf+kJCnpnVYXhU+X12jOJSUNSkp6gw674vQm
zdeamprzAef4X339He4aKg161ZOSziIlfUlJx414JmGTQa8XSEkv0VtvNEpJ
9YWlJI6IPrgcYm9KSWcJHzff6MZ+kJJOce9OpLXbxyn7SEkv0WFvnNukTbXd
disTc2IncL3lHhxib0Z/WHTX392dwQmkpFMMcfZgN5f7QUlJL9Fhb5zYpLsS
R4e92tqyq8W9z69f9Xx5V/BOUtJZnDoezKVhUFLSS3TYGx02aasHbMIOqacn
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
XJt4s+cdvc/bonqnbLuUVCkTfIqZ6JQ9tTslnbX245XcvordXPoHJSW9kJ5p
qqZ7xSUG9byD9nlbVE9KulIm+4SPk8JiLYJS/VInFrtAPy2ZueIPSkp6IT3T
2qarT83J0wmWTqzu5eb7t3GPz+dtUb1Ttl1KqpRPSeHbVbGzDsitQal+7f0M
mX5aMnvJKeV5pKQX0jOt7ejh/GVrx6d/cKIp5vPrpX+sg/N5W1Tv3G2XkioV
U9InEUlOPyCPp6TwmFlVGH27erHaqMpZmXrClqReX+/GVXOElPRCeqa1gz0c
nszD+xm4Rer+LZw1iudtUb1Ttl1KqhR2aTQOhCVbnPzrKwwbmZoeLVkZeWpm
ZeqpaUC4CVdy7R6UlPRCeqa1s3p4Sqssdr1TNtzW3aKywam3YQ03b8+vTtmi
4bYub9q77Uunp6Sbu/JXB7dltV2pKdOvPT+ld0TrJkXLRHsjbHxqc258kZp4
vdMPJ64hJb2Qnmnt9AtZ/vL98/WPz48e/locWj/r/Nt/+//p4a/R1t2+1zbt
u/BOKXMT8nPKP/pH/0sPf5mt27RFq5K///1/28Pf7iNz97YvtUhJ//M//sc9
/DWNJJVRqGlKKqppWOcpaX4rJbGDlPRCeqa1a1LS8opw+z22lLR7627fa0f2
3Xz7EV18iJS0aYtWJW/PRwdT0u5tX5KSKjcqevZezlpOic4KS7YmJZ1FShqU
lPRCeqaFfJBpUfNc/zT4nXZx82/PR1JSpv35ubfno30pqbLk7fmoRUraSkp6
qmJGC69EqcKpK9fyRWZWqpLi4sumtuuoGmGTGIKU9E4653TRE/jxfq6pZBr8
Tru4dbfnIykp0/783NvzkZRUb189UhL9u31XSkmDkpLeSee00CIlVa739nvs
3XfaxV6qT0mrnu8hJdVs3e177eC+yyw4XErKfxwdFr49H52Yki47ZdV07O35
6EhKqvxo64LLhDvzrx46wb4YlJT0TjqnhUYRqVjh9057ter6e+O5/LxUtKpU
/asajmxddPFpS95ZFt60YNOUlN+6rVmmfi9vOhgabd0cUr7C8DJPnwLhgmE9
0TqjC7bYuq1ZZiVa4MZnSdeo6ditWSacspQv3Cgl5TdwOT1V7LhiSx6vnw3v
pyVsIiW9k85ppMVVKby5Wq1iWgSZ5U1vzY3x6o46NSs1MazhlK1bFXhMSopu
3Y6HPjV7ObrXmqak6NatAlE0JUUjz7QIOKlMVF9no63bEWeir/MTn52Soh17
MCWtJs6vv+u6OCWtNjDc3tTE44pdXV/P6W17m0a7mNakpHfSOY0cvx4V6wxX
Me1KSWGB1OKV9e/b5PymfU5KSd8KV2831XxiSlptXeuUVF9ti60L00pxSvTZ
UHFu8dFSi607kpL2FegwJW39XVJNx26NSOEiUywl3fIsabWBqTpb7MRiV9fX
c3rb3mZHt9MDKemddE47+y5DNRWmLnNTNsV8C6+yzGpi5a14dOLybeaivM9n
e0qahXHp+2L1dl/lJ27dWSnpW+dqL2+qtsXW7UtJ+WL7UlKLrdudkpYvvq9X
/91U+elbd6NPZymp0TbWn+fDpc4qWX8B+rhnOGxTn9MPKemddE47W69BlbVl
LnBT7KdD0YAzJaJTeF8dVpVJWPOUHVtds3U7niWtlpprDp8rjfiNu+iuyUTa
ympbbF0qAU2JQDTLf63urmdJqwI7UtJsNXGZnrbWvGPrTnTKs6RVgR1ft5uC
3x/NUunprm/cpZbasa4jLamvJGzeXNUUhLJogVRLdrdqOC/ZzOeRkt5J5zR1
8HwYXtHy17gpe4c8Lxg+bjj4/Ch6935kY1NbdzAlpSZuqvmUlJTZd5viTHR3
LHf0LSkpWmBrSjr3WdKywhZbd/xZUvh6X7Vbt+5EB1NStMC+xz01aWhr5Ts6
JL+B9ROPK3Z1ZSWrF8vKP4scFJbPzArrf7ZGu5jWpKR30jmtberhmtuGzDl2
Sqek8EV4O91DSsoX2JGSouFoOvyNuxZbd0pKyu/xpikpX2BfSkolnU0pafW6
xdbtTkmpidNrniXlC2x9kFT/zbr6yg+mpPoC7e6fT6k5dW2afo08YbFNLx6v
3V6mKSnptfRPI9OvaorV1Jmfm7ptXs1Kvc0Hosob70ZXgWn7/y8pfGA0xVzw
jbuardudkupzcaOUVLN1NfklH3kyBWqqmitpsXUHU9IUZKIp9rDpYSmpaBo8
JVVu46ZLwF2mRDL6xFJSZtlwM1NLPVXnO5oUKem19E8LqzPh8m27y+Iceb5W
sSUqWiacmC8WTm9xUE0N/v+w+/4abd3WLBPdNand3UlKmtsTRph5etj46IL5
t6vpy3pabN3WiLSynBh9LSXVfNcufLualVrkxpQ0iml7Ssq8CKt6Tw9/D7y7
W8FmUtJr6Z/TRU+D83W56Xq3Po9o9NfoXvT2fNRPShpu30V/THT9Xw8pqd3f
O1PSBX8vv0quLl7Lt+Hrz69XwMyyy/ov25bbSUmDkpJeS/+cLtWlrbv68Xfa
t+cjKWn31t2ej6Sk1qQk8qJPoD4vuwmRkgYlJb2W/jndjSmpH7bO1tm6652+
dfVapKR+nNJFLzfFktHb+tbhNCgp6bX0z+lSXaqrgac6PSVxvdYXqWXqfGde
eOdWP4CU9Fr653TR06BzI/BgUtLQik/NPFY7hT4clJT0WvqnhdWZ0IkReDYp
aVyV3y10FTvOzcCgpKTX0j+N+Fo78B5S0qDqr1MuZMe5HxiUlPRmuqgdfQu8
gZQ0nODfqKhNScvfFu2bFb4IWxVt7Vw4+oWNVP3RmmvWfnqokZIGJSW9mS5q
R98CbyAljSWMSPUp6ZNNOvlZ4YtV9omuLlo4XCqabjI1p9aeqvY4KWlQUtKb
6aJ29C3wBlLSQKIRaWtKavGimJLC9n9i0SOsp6bxq3rqe6aelDQoKenNdFFT
uheAroyeklJblGpqZeOX9bS4dktJg5KS3kwX1VwsUr20+kSrfkEAuNHoKWm1
1PJFTc35evKhbB8paVBS0pvpok/QCZnzc2ri1ngFALerSUmrzwNXr5cTU7NW
9eQLRy/BYT2p9ofrTdWQany4llOcXiHXkJLeTBd9SrFoPpHWL5KfCPAkfpc0
tIddp7rdHClpk1WSrVwkU1Wm/sp6ziIlDUQXfU5KSZU1AzyMlDScB1+but00
Kane6Q/1MgFqx1IHSUkD0UWfupSUmji/TX1YcWZD4T7Tu93d/V2Tkobz1EO6
5wHbbcN6E/bS8X5L1ZCvudH+kpLGopfyQzJ6p1Q5ivUto+v5ruNK+iFDShpL
/WHc+rDfXfmII9EJpFKmlzIH5Dx9+WJV5zxlVWZZ56qe1fRUDZtISWPRS5nI
s5qVmh6dkpoIo3AAh/RJSEoay6ZjuPUBvymyNW1Ja1JSpZrnPvk7rjDCRKd8
gnxUfBGtcyspaSx6KRWFds+qmQ49c0HP0DkrUtJAth66UtJZnDcqnZKSKl+k
4k/qRWriJlLSWF7eS1MgnBV9u1o2U3+7xkMjjts8/bMkJY1ix3FbvOQtP6VP
fXSfXypfSVhD5rq8qrYr+VsFZmEvhfs0elzteBHWmX+RmriJlDQWvdSU7mU4
DtoaemkmJY3iSErK3Bym7lQzN7f5BYvrzd/i9hmUpKR6xVQS7UkpaSsHZA29
1JTuZSyO2Hr66ktKGsK+w7UyJVWWr781rVlL/Xp7ICVtsnpOlJm4mrUss2lK
uIrU9HxLiqSkseilpnQvY3HE1tNXX1LSEA6mpE/6Pl9KqiElDer0UCMljUUv
NaV7GUv05iR6fY9OzxQ7/rnc7tu8RjdORveXlNS/3cdqzdiJDrGzUtLBevoh
JQ1KSno5vdSU7mUgqcM1k5JqasjfzGTWe5ZG9RvdX1JS545EpJpPM+bMUv8x
SP7Dk7DC5duwTHRFvaWS3tpDJSkJHdWOvmUgmZT0ieWaVfnoxOiC0RftSElN
SUlvkPlYw0CoISUNSkpCRzWlexnF9SkpPzpSnwxPgXAt0daGL8J1bRqwRvdH
SnoHKekgKWlQUhI6qindyyjyKekTRJvUzVI4PQwgxXuG1FOn6PTlrMzjqvpF
KhndHynpNaIfI+z4bOGd9NKgpCR0VFO6l1EcT0mp+6hUnZnRkaqnPgRVlsxs
UZHR/ZGSOnbK8bkcTZmIlBrm7dLBWKNPShqUlISOakr3MoojKSmTjDIpKbPS
eW7mSVBl8+qDVaYlqeZtXeR5pKQ+nRWRlq9T4zo6fHZ/+FDZnrFISYOSktBR
TeleRlFMSZWv87O2FkiFoFTJHSlp9yA1uunW8YNzU/CpmXLcuCNOShqUlISO
akr3Moqa78ysHr7MKWNVJjUrVeemMvnXy4l50UWO9xjc7pQjM1NJsf78GE+N
37Dy/EmgWPmm7W1qx+mFK1VeNa5x2SZftqJ+7Gv/6X3CTPcyiiGO1enXO6h7
6xyix3ihU47MVSXL24ya+qdE6lnWtnq9qj+sIawqX3k/I3T3HRrX+Ll3fnx+
9PB32XFy5Yr+yT/5H3v4k5I6pHsZxRDHqpTUG79L6k2LcbGackpKykxc5Z0d
Kam+ndeQkjonJTVd0e356EhK+vR0Jnkk3csQejhQa+4ljjw6P7fOHnrsdlJS
b25JSZWFN6WkI8+SUq26i5TUOSmp6Ypuz0dSUs90L0O48UBt8YToAgM1tR0p
qSunf3qQelscs1LSkpTUOSmp6Ypuz0dSUs90L0OQkrYaqKntSEn9aHFATgup
WZmlim/D1+GLzPSayk/vkx36aQlRUlLTFWViy2z5djU39XpZWEoazhRzd6Mg
qcXxmbpdSd3VzM1Yzf2U7qaiBVqPOCP6IyX1xAHZLTcA9yr2/7RISeGdW020
iZZfTom+Duu/7Di5ckWpzBK+XhWOlsm8lpJGEY4yJ0k61+j4XAWZz68JKFz1
MumkilXWc/q2rBjRHympG47GnrkBuFfxTiyMKtHX+aB01uvL+uSyFRVTUmqi
lPRUUhLDaZeSwterEZEqE30RRqp8XGrHiP5ISVDBDcC9ivdjmZRU/005KSm1
okxskZJeS0RiLJelpHyoyYSj+sWlpMtISVDkHuBeic+tf/mELRp5psTX51bf
mpOS8ivKJ5dV5FlJJaOwgJQ0HCmJgbRLSWHeWa0xn5J2TLxguBnRX1ISFLkH
OCKTcU7xiaWkWTQ3RaevFimmoegi7TbzRjX5ZfezJClpXKvj5O7mQEGLo3RK
/+sN88TVi3CR8EW0nnZbETKiv6Sk2zkU++ce4F7RW/dVgfyzpPoCqZKZ16vF
L+uTy1Y0ekr6OM02IyIxkHYp6UpS0pWkpHs5DofgNuBexY+sM9EmMyWaeqSk
cEX5ZCQlvZmUxEAekJKed4npnJR0L8fhENwG3KvY//UpaQp+hXT8t0ivTUmz
1ZTwbeq1lPQA3Z4e+2wV9zr3qLjyU4IrB5qxM5OSbuQ4HEW3twF8rfLL6jlR
6uHRPCVcZPpVqnx0wcs2+bIV7Xju0+JPSupWn93bZ6u4nQMjT/8sSUl3cRwO
RErqXJiJ8n9T+qnQwT8pSUoaTpj6b3Tudq228XP5B/L9uGaTh6BDMvTMipR0
F4fiQJxUOzdJSS1XdHs+kpKa+tk5f+/v/R89/J2ym1IZYXkav+Z4+LmWf/Wv
/use/hz/IX0S0ichKekWDsWxSEmdO/Uz16Mu2+TLVtSPI1txYp88zPSslLTc
rtTba46HSUrq21mnl6HpgTwp6RaOxrE4gQzqt4U+K9ztGQfkZSPrGd3ViJTU
iJQ0ltM/1RnC3b0Oaw7L4TiZDEpKGsIF2/Kk7jrd9JqUNE+55niYpCSALZys
RiQlDUpKGkXrIfaw7jrXU1NSuJmfU4+0YlVSEsAmTlYjkpIGJSWNRVC6RSYl
rb6cs5oYfbuakil2S0o6t8L8N5eWKWku9n29nB4mmrlkakqmZDQiOfhhH79L
giJXmUFJScNpN9ae2mPHFZNL+Do6MTprlZXC8o9JSeGhO2eWMPIUc0006RQn
ZpLUudsOLyElQZGrzKCkpEG12Lpn99gRR1JSJiItp9yeklqEhWhKWq5lCp4c
rbJMscBqShiv8lM8S4KDpCQocpUZlJQ0rhaf/J9b4WPsTkmpTJSq5Hsiza/r
MT7plFSTa6Qk6IGUdBmnqXG5ygxKShrauePuDT22z1SdXMKv0m1KSfd+4+50
qXC0LFCTksIymdy0qjNMSdHaxupY6IeUdA3nqKG5ygxKSnqAs7b0PT22VTEl
ZZ4NSUnRfDQXKKak2SkpKVXbWB0L/ZCSLuAENTpXmUFJSc9wygB8VY9tsjsl
hXNTuenBKSlfoPLrc6mnQvUpKV/bWB0L/ZCSLuAENTpXmUFJSU9ycJNf2GOV
jqSkfFCKhqnHpKSird+LS6Wk1eOhHbU9rGPhMlJSa85OD+AqMygp6WGOjMR3
9liNfGz5ykwMy2SmFBPZ3Z1xpjCqLENN6u2UFiajVIGwtrs7A4YkJbXm7PQA
rjKDkpIeSVA6Vz65nPJXuYqH7aAp+OLcXX8P61i4jJTUlFPTM0hJg5KSnmrf
kHx5p6VISY1ISTA6Kakd56XHkJIGJSU929ZO0GlRma94Xe/uzjjT3X35i7s7
A4YkJbXjvPQYrjKDkpIeb9PY1Glc6efx9uPzo4c/Rz7sIyU14qT0JFLSoKSk
l6jsDZ3GlaQkGJ2U1IiT0pNISYOSkt6jpkN0GleSkmB0UhIUSUmDkpJepThO
dRpXkpJgdFISFElJg5KSXijTMzqNK0lJMDopCYqkpE2W/6rS8X7bUUO7/SUl
DSF1AOg0rrRMSat/cS5MMfP0+b/RkuGCqXqkJKA3zkWPJCXVW3bU7n5rl60O
1iwlDURQ4l5hhKl5Pb+tiUg1dUpJQCecix5JSqoU9pKU1IgDskY4cvUbl6lJ
SdHnPpUpqTJ5SUlAD5yInkpKqpT/SUimG1df0lu9Xr1YrSssE50btiH6Nr8V
UtKIVs83b2wJr7IvJaWSjpQE1/O7pLM4Cz2YlFSp5glO5nlT+OKTTUOZBSsL
pFaRIiUNqiYCw7nCqLJ0cUpyFYMdpKSzOP88mOtLpd0paTUxFWH2vUg9Y8qs
IkVKGpqBzJUyz5Lmtxc/SzoyBFqMnaknp28dDyAlncL4ejan0EphL03BB/jz
lFWvLt+G5fe9qCmZmhglJY3OWOYy066UNKUfM82nzYPfuNs3CloMnJ91/tEf
/d89/DktECUlncL4ejZ3VvWK6SOVpIrlpaQlB+Q+YWyHRmpS0qakc/xZ0qp5
mwZC9EOtgxdHKYnOSUnHGVyPJyVtEj4nSk1MzVpdgpfCuatKooXzixRbOJOS
RjdVJ2I4aBVbVooPiTLli0uFJTONzI+FzKl1LnCki27PR1ISGVLSQUbWGxSv
I/Tp9FAjJY1uioVxaCEabW75Kx7nNWNhCj74ik7f2kW35yMpKSqaju9yYz9I
SQfdu/u4xu3jlH2kJEJT4mYPzjWNk5LmBtfPnaSkR/vZIX/6p/9DD39S0rgM
q5eQkgYlJREKu84Ap4VLPmWvtanNqVnRt/WVR+vMxJav1ev6WVLSEZOU9Nek
JCjadJWhH1ISocqbQDjo5xH1D/7B/9bD39Zju/KStyOFhTXkk0vxdX6WlLSb
lPQlJW2y78MZRmd3D0pKIpTpOiOdE42bkub2tx4OO1JSuEhmlpS0m5T0JSXN
iieEVQHX0/ewrwclJREqdp2+5RSjp6R5K9qNiK0pKVo+PyszV0rKkJK+pKRZ
/jlR/USex44elJREqP6rRBc0hgd7Rkqat6XFiNiUklKFU7OmX3+sJCVtkkpJ
385cvf1OmQKZGvJlpKQOhft3+vXJUWqpqxrIbdwyDUpKIlTfdTqZI56UkuYt
OndQbEpJW58lTVu+iWewr2Tyy2rWKjSlitUsIiX1LJqS5nOClPRmUlLnMoP3
epdt8jUrep5NXXflPuVhpkVKms8PYX4Jp9cUi558UjWcewyfWNvU8ndJmUWk
pKIpm3Gm7cnoSEpiCKkD6eJDl+tlDgB68HPv/O53/6aHv8uOEwfkbju6Tm+z
wxRElSkRf8KJ0edB0bfRF2Hh0zftlDqnlv/G3fRrSiqu6/jmPMlUehI0F5hi
kSc1cbWsZ0kDySej6DnBzfNL2NGdk5LYZF9Q0udsEs01U/DEp1gsE53qI1Wj
DTxYcya5zLdhq9f1s/5o8Yuk5UQpqUYxJYVxafXcJ5+MwpJSUudS+WhVIPWW
B7OvOyclscnu3tPt1Ht8Spo388iAKn4X7po/Q3tld0qKPkta1ZZ/21VKYlYz
0otJikeyuzsnJbHJkd7T81SKxp8wB+WL9Z+S5o3dsRYpqVs1KSlMQNGlpCR4
Nimpc1ISmxzsPScEauxOSbOBUtK8yal1RadPPWncN4OZDv8bd6uJmWKZdUlJ
0D+n0M5NiZQ0X/6iE5dzVyXDBVOVnJuS6hd3QB5xSu/ZBeRN21NSapFRUtK8
4eGU6GX055Qfnx89/BnOK6nkMu/K6LfsVrNSBVYyEen2lOR3SVAkJXUulZLC
dBNOXCajTJlUYgqXOrghp5ckdFbvOTOQURl59qWkaMjqJCV9Er/jlpIGUgwv
l/1JSdA590KdO5KSMnmnuEjTlDQfdam7iyMrerlze8++IGqVcb7CjDNPD8uE
szJlUuu6JSXNPRBaFbg9H0lJUVLSl5S0lBnO0bfheL+urVwoeptKP6a9KWnK
PhXakbb2HSepe4nlgedsc6LTe88pgtCU+I7c9X/3Hpz5O6vb85GUFBW9Kt3l
xn6Qklam9K1IZlZqCs9w+zglb9qekma7U9Jq8RbfuNt0/qFeo96zU1iapKT0
zfY89/Z8JCU18owulZJWMtlndascvWl5xlHBipTUuR0p6ZRnSU2/cfeRklpq
F5TsGr6qPiW/Soed8MmmpLnY6nX9LCnpXs/oUilpJdyt0yIlhW9XxZ5xVLBy
71WGoumJv0v6+MZdS0070N6BTyknfkrPkpZzU6/zs6SkGz2jS6WklWJK+iQC
UepmhgeQkjpXn5KmP/y735UTL05J4XZ9/OsNbbTuQCcNOnfj8bnMSltTUrhI
ZpaUdKNndKmUtHIkJS0/IeFJ7NbOZSLMSmpiWD5aT75Yo5S0dRY1rulAu4lu
9XBwbk1J0fKpWcsUVgxQPfTGwzyjS6WklZqU9Kn7jRKPISV1LpWSrv+TkkZx
WQfaU/Qpektz4sWu5nPjTSkpVTg/q/IZk3F6UPjxY8rdLd1GSlrJ5J19s3iA
EYf2qzwyJeWvKQ7Ig67sQCcQ+pG6cV0epacHpcxK2z1LkpLu9YwulZKWMpk3
OiU6a9C8TIYd2rn8tfhil23yNSt6qus70C6jK1P1B79HVpE/VU6Nf5c0SUn3
eUaXSklQdOXdLyf6baHPCndzQB50Swc6k9CPG1PSssDWlBSmnsysyogkJbXw
jC6VkqDIvc2gpCRSbuxA+44ehClpWnwl5qxV5J+2ZyLMXH71un7Wa1NSJ9vS
STMOkpKgSErqXOoTy1tctsnXrOjBbuzDKw8VqDGd+q83VJ4epwP/dndl9qkv
eXyrO9HJtnTSjIOkJChyS9O51pfaTRflyzb5mhU92O19eHsDYHb8aIymofzH
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
5dFFojXclZIqrT4EuLs5f6UmxUSTUf4Z0+6UdHd/vJfOr6evbiclQZGrauf6
T0lzOy/rk5eofNBzwZ+dm3dWSkoFok0p6WMw3kfP19NXt5OSoEhK6tzUk5qm
XtMtbzBJSYOYKv6B7q/wbWZWakoxJX3cgt4k0+2r0+PypLr1TBtWu2nBfcfG
sv5Tjq7RD9HR2/+RkqCCO9tB/bbQVYUOp7NISaOojDAX/K3uw2/skxeq+Rwp
9fbIjrtsp59b+ejH5+jt/0hJUEFKGlS3KenjoDpJ+Anzje7ujK5NXaakzyNu
5AZS7O3VUEq9PrLepnv83MpHPzhHb/9HSoIKboE6d/HNcN7WljfqE+jK3ePy
F9G23dItb1Ps5+nXX41NsXSTqmRZYEpn4ejiy2NjuXj04FnVFlYeVhUuUnnU
DX1kDt34LykJilxDO/dz7/zDf/i/9vC34zhxdEEPDMMLVKakTxCXPqVwEc0j
0WWjMTm/9jB/ZQpsXSRv6MNy6MZ/SUlQ5D62c0OnpHkTzu0TYCvDsLWDKSlf
SeZKvZoevo0WqA9BlSVrtiLf8rEM3fgvKQmKpKTOPSAlfRxmpEU/CV++zX9U
Tj2911R9Svpkf6O0LBA+tSmuN1osFXYySa0+HGXqzBv6gBy68UAlNx6de0ZK
mrfllD7hYYofqufvJ6mn99rZlJI+G4/qVXKprPaTTjTRXBYtsONZUqWhj8ah
Gw9UkpLuVez/J6Wkmu3lhXakJI+WdtNpjRTP5JlnNzUXgmXhsNpUJavpy7f5
19HKo6KLVHTY2Ifi0I0HKrnTuNfqEhMtkE8uX9/XyynLWdHyy4mXpaTlVsPX
tD0lpd5SQ6e1MFavZsbUZXWO1WMrQzf+y++SoEhKutcU+1RwVSATW1bxJ5p6
otOXE69PSR8HHgurz6XnifkCn0fcqNxF151urC6Vkg4auvFfUhIUuVm9V7Tz
lzslFWHC6amUVJxyS0rKbD5vkxoFxQKOnyP03rl668/iAIl+8nDKSivr7K3H
3kZKgqKX3GlMv0pND11QMtPaz5aUVJmJukpJmU7gPVKjIF+gOIsivXeiTjqz
cuD0oPPmPZ6UBEWPv0ftfANXbQtb+/iUFO0HXkVKupEOPEsnPSklUUlKgqLO
Q8QRQ2za/MAo81zp9JSUf3tLSvps31/FZ3ZXatctjxftw+XEYgEO0o2naN2N
qxERTv8E42IuH61hVVuqnnZjbegDb+jGf0lJUPTUO41RNqrY/9PZv0vKz70x
Jc3bG06JrvrnxD/+47/s4W+Ugw1SHMPHXdCH+QQUNmOZdFLFKus5fVvaVXuN
oRv/JSVB0SNT0pO2KBNhUtlnSj8qiiaprlLSJ/tJ6arY7flISuIxHnktuNI1
KSl8HX1+FJaJvgjPtPm4dK6hj7ehG/8lJUGRK2Pn8hFmvq6FU4qzUjXcnpLm
Df/8+rW6sMDt+UhK4mEczLvdkpIqnwGF4ah+cSkpaujGf0lJUCQlda4mv1zz
d/1xEia+1dzb85GUxPM4nve5JiWlHgZVpqQdExtt1+iH2ejt/0hJUEFK6pyU
tC8lzYusXn/f1hSTkngth/Q+rftt9SRonrg8Q65ehItEA1FYT+stGv0YG739
HykJKjwsJT1pW77CpHCjHjZ8WaAYXoqv87OkJF7LUb1D6067fqe0W+PoB9jo
7f9ISVDh+rvfpp60LXm/LfRZ4RE1YW1fSpr+8NhISoI8B/ZWD0tJTVc34tHV
w+eHJ5KSoGjoMR560rbkPTslLUlJcBfH9lZNH75cdr1uvaJBj6toswfdlo+U
BBWkpEG9JyWtzEdsTaLJZKJw4r6IJCXxbA7vrfRY3tD9s2r80NsiJUGRlDSo
16ak2e6UNJOSoIYjfJOHXVXPNXrPSEnwKg87nz9pW/KkpB0pabVI5mt4UhIs
Oci30mOhZ/TJciuG3iIpCYqkJAZVGWoyPzs6/oukt6Wk8Ddir3J3999MD2zl
+Plk/8/gg5o35DFbBKQ86dz16fustbxSzP/NX0an4OF+Zn9F517TIbccRdPG
lDT3T+qtlJTysJuc3fTD1m2Pp82bNOqTQXvjMnf3+vkmKQle42HnsW63Zfr1
GX3qNJsqFs7K1x+toanre346kGvO/ev2qDvFs7dunzf3yaZt/1n4x+dHD39v
3mWc7mE3TkDKwwZ7n9uSCTWVeSfzOr86KUlK2u1hJ4dzvblzUtsePZvdno+k
JE73jOHvd0lQ9IzBPutzWzKtuislrb4OEX37iaW55aziA6xU4VNISa09dbvO
8vL+yZ+75im35yMpiRYecERJSVD0sJTUp95S0ir75MNONDFF01P4NrqKs0w9
OX3rbvfIjTrdU3upcrtWxcKlJimJS9x48r/XkU6TkqDo+ECjKNPD4awpnXFq
zo3hIpvKTImYE30RToy20AE2HLus3iP7qn6j8iN9iqWk+RTxfR1On2fNr4tv
o1OkpMc7JSwM7UgPSElQ9PIzzDUyUWhTSgqXLeaR61NScXX079xdNv1qNXHH
25oGX3Zme+ThvRrj8+gunpHCWWFaWeWa6PTMxOjr1Fwp6cHs06UdvSElQdHD
UlK325LKMpnAEr6NTglnbcpZqfL5F6m5xekM4fT9VXmMFSfW1J+Z2OI4fNKx
PcV8EkN+tWB01iqwZEJTKtpk5kpJr/Ww+5azbO0WKQmKHna26Xlblncdqynh
rLB8fk9F64lWG60ts2D0xSe4cUrdUIUT6VyLPbU62DIrCucW2zOlb9GLU457
5IEdnotSs5bTox2eT0k1GSqz1PRrjPq2wTfuHs/eTNnUM1ISFD3s9vVJ29It
nfxsN6aksFhNY/IpaRXVT9+6Rw6HHSkpOiufkuY9Ev0OXj711HxhT0p6JLsy
r75/pCQokpIG9dvCxRW+p5PfqVFKCkNKeCu+mlvZklTsCtNTo0P3eSMis2tO
TEmVX7SreQIlJb2E/VijspekJCiSkgZ1V0pq9IE8/Wj9LKly4qZnSdHDMjql
vs31Hj8cVk/l8sVWU46npJov3UlJL2E/1pCS4CwPu+N90rbk3fgsiWfrKiWF
xVaBKJODPEs6y9aHessp+VgUzUH5iVLSm9mPNaQkOIuUNCgpiUZ6S0n5JhVT
UqrOEz3+tHNiSpp/T/SVmZh5mymcCVMNOoZLrUb36tOSpfyym1a0r4b6FR0/
O4WbLCXBWaSkQUlJNHL6IIreuiwnhrc3+bepmqN1fhZnuUanu2efdjJ3nmHJ
cErmJ0Un/hVX9Ox99BL5LHA8bhTX2EJxFTuGnpQEZ5GSBiUl0ch7BtFZ9NiX
lERTUlJ9mZqlpCQokpIGJSXRyHsG0Vn0WMrUk7s7g6OmLSlpudOjr1fFUi8y
c8PmrWYty6wOwlQzoq+js4qNiXfigpQERUcuH9VXp7c7d5d9SUk0UnnE7juw
lyOi0dCIrqv1ii5YC7zcaqCl3kZPMlOQX1Jloi+iy4YDfzlrWaa+GfWtilaS
6pwoKQmKdtxINL35f6QWPSYl0cgF4eWy+qUkeIz6lJSamJmVf1Gcmy+z+tS0
WG0qxBUryUwJSUlQtPXu3f3AESf2npREI1LSkTUCjQydklIt3/EsKVNJZgqw
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

                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 12->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3r9cyDH2bhpHC1BNwYDGbTLrjYLrDrIp3degm4ceElu0sKb2AdCOme
vyFVajdp0qVIeUOc2kXAtQkE0qRxmerk3j38tLo1r3oZaUa6Lr48nCONRqOR
RtLn6Jz7+c//9L/9Z3/+d6Zp+td/9+d//tm//O//y7/6q3/5P/zJf/bzzX/1
l//6v/mLv/yz//qf/uV/92d/8Wd/9V/86X/yc+L/97Psn/6n0/TXrwEAAFj5
fD7f/wIAALzcMigBAAAgIgEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEA
ACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAASzempAkYwS3nBwCAG914
F3TvjR9Q6ZbzAwDAjW68C3IDBp0zSAGAd5KSgBSDFAB4JykJSDFIAYB3kpKA
FIMUAHgnKQlIMUgBgHeSkoAUgxQAeCcpCUgxSAGAd+o2Je3+P7YsF5n/G1qV
TNVQv7pwqdR6jzT1yFryS9VsbLTNqR7LlMzUuZxYLBNdUU390bYVNznVhnzH
TomDLVVt8W1m0zK9tM+5tQEAjOLGu6Diqle3lJV1RusP7y3z1W7qk1Tl9bN2
NDWcHi25r20pqTYXV1TclfnoUWzhpvozbaupP/+2cr/kZ9XvteKyB0lJAMA7
PSkl1d+FFqttlJIy07c2dXesqLwz39qG+jv56H6P1lzfwvr6N4WvfPMyTd06
pTIlFbvl9LEsJQEA7/TslBTOqrzxPj0l7bjhr3++UD9lX5NqytTvrJoEdDAl
ZZbdd7TfmJI2rUtKAgA4RecpaammwpqqahbZmpIy9W9ab/0ip6SkTd27XCpT
bWq90QYUF6+sNlqsOLFeTeaq2UGhVJ3hKorr2rdpeZuODQCAx7jxLqi46vpk
USyQukk+KyWlltq63vwi+VCzIyUVG5NpZGaLUi3PlGyRkqL159uWqT8fbaI1
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
FPPZmGTbNZUHc7mBfkhJUOSy1bl9KWn14vpnSeFWNCp8cKk+V3T9s6RPkKQO
Vg4pDhjogZQERVJS56Skpkv1uaIWqwjrPCsl7SgPwL2kJCiSkjp38Bt30ekX
p6Tl17oqy+9e0b4F37CWmpS04xt3mfqhyAUI7iIlQZGLVOcOPkvqISXt2OTT
lz2x8YOmpGKd4a+Tzq0fUlyG4HpSEhS5PHWuPtTMj2zCt9PCvogkJbWo6uK1
1KSkdvVD3taHzsARUhIUuSp1bl+uSX317sjfECkptfjqRzdHnptISa0r4eVc
leACUhIUuR51Tko6svgU8/n1sN+6unFTUqbaEz/Gdz7hFK5N0JSUBEWuRJ3b
HXBW37h7T0qK1rCaskpSBytv4eKUNOJaANhNSoIiKalz0achd7lsk0+vYZKS
2td8/Vp4D0cUnEtKgqIr73450W8LfVa42ykHZCYWfV78jbvPsYS4by1wClcr
OJGUBEWuO4OSko5UMr3yX2+Ya77m+aATCy24ZsEppCQocsUZlJR0pJ6Dq7hg
yDRaxcXfonRuoZHMAeyidlzhu9dPd3f3X0RKgqJXnROeREo6UtXBVUQXn4fS
KWPq9FF51/2A0wtNhYfx2+51T6Trvl7SD1ISFL3hVPBIUtLuqo5fATPha57V
IogddNenps4wtLYcdy98KHAK3RV6dp9ISVDkUjIoKemW2vJ1Lqd3mJI+l3/j
brnea1bEy911hA9NR2U8uHOkJCh68Bng2aSkW2pb1bm6E+s/JX1u+rDdSYYL
RJ+WOvaKdFGe/oHXchEZlJTUYYWpxHTiKk5xyw3kLecZ57dXSaUkx0CGzqmh
l+CdXEEGJSV1WOHU8b/eENZ//di/a3VOcW+QiUgOgBQ9U09fwQu5ggxKSrqx
znxKarqKE90y9m95euUU906CUpFuqfe8vvK7JChy+RiUlHSkzoOreEZKumwt
t6+00RrzDy8u1mIDu3J3B//i7s44zZO2pbXn9ZWUBEUPO+e/h5S0r9pT7nOi
i597B1Vfz3W3hhVO37rj2q3rZ81/+If/roe/K/vzLj+38Y/+6P/o4e8xvf2Y
DbnG87pLSoKiTfc29ENK2lHtjvv5TG2ntOp4/T9L/vj86OGvw5TUdEVS0pWk
pNNFN+Ss82Tl4id25pE2X9zUTkhJUCQlDUpK2lTh7qcemTpPadvx+kdMSZs2
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
LE4gDyYlDUpKeok+e6PPVtUbvf375FPSe56nzNu7mgKvIiWdyDnkqV5yWXwe
Kekl+uyNPltVb/T271P5LGn0zll9tzA1d/TNBPrhfPJULhaDkpJeos/e6LNV
9UZv/z6rZBQNC6P3TLiNNzYGeA9nm0dyHRmUlPQS3fZGtw2rNHr7dyh+x2z0
y0H0ydEtLQHgAUa/LL6WlPQS3fZGtw2rNHr7d6j8Jc64PZPfqHG3C1rwuyQo
cu0YlJT0Et32RrcNqzR6+3d4bUqap4+7aXA6KQmKpKRBSUkv0W1vdNuwSqO3
f6vVv2kQ/UXS6JeD4rOkobcOziUlteAk8zAuHIOSkl6i597ouW1FQzeeqNTv
kjxLgpCU1IKTzMNISYOSkl6i597ouW1FQzeelOi3CqUkCElJjTjPPImUNCgp
6SV67o2e21Y0dOPJyH+f0H6HLympESeZJ3HVGJSU9BKd90bnzcsYt+UAx0lJ
7bi+PIaUNCgp6SWa9sbUk3abmdr2i9cI0A8pqR3Xl8e45f6E46Skl2jaGz8r
//H50cOflMSVbvokoBd3dz9dkJKaMtCewTlzUFLSSzTtjenFKenjSHsfMeFL
P/CRkhozvp7BqXJQUtJLSElNN//6lXIXuzukT95MSmrN+HoAKWlQUtJLSElN
N//6lXI9l7kMnfNaUlJrRtYDOEMOSkp6CSmp6eZfv1KuZ0fn6Z93kpIuYHCN
TkoalJT0EjempPnHC9/Xq4nzrPz0VT1SEhezl2vopReSkqBIShqUlPQSd6Wk
MAGlZuVfpwpISVzALq6nr95GSoIiKWlQUtKgtm7dLSkpnL47JeWrlZJoyi6u
p6/eRkqCIilpUFLSoAZNSUcSk5TEXVK7eP4WaKpM5sp47mGzr7Zl885qj+Hw
NlLSZQyucUlJg5KSBrXcuuV92jW3ZGHlNSlp9cOi4u+PwllSEterGVN3Db3j
Tm9e59sL4zK4xiUlDUpKGssU86n4TLiHlJR6ThSmpPq3UhKtVQ4oKalRhcDM
+BqUlDQoKWlQq61bfaxdLH96Y65JSfmIdFdK+jz9YHu5rQNqdTVcfnwRfqyR
f5FvQOpDkuinKPnmZda+qjPdT1WdAxxhcA1KShqUlDSoIVJSfeTJRKEwTOVX
124z8z1wy3q5wKYBFUabVOTJv8hklq1rWc7auvZogSLD4VX8LulixteIpKRB
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
nbLtUlKlTPApZqJT9tTulHTW2o9XcvsqdnPpH5SU9EJ6pqma7hWXGNTzDtrn
bVE9KelKmewTPk4Ki7UISvVLnVjsAv20ZOaKPygp6YX0TGubrj41J08nWDqx
upeb79/GPT6ft0X1Ttl2KalSPiWFb1fFzjogtwal+rX3M2T6acnsJaeU55GS
XkjPtLajh/OXrR2f/sGJppjPr5f+sQ7O521RvXO3XUqqVExJn0QkOf2APJ6S
wmNmVWH07erFaqMqZ2XqCVuSen29G1fNEVLSC+mZ1g72cHgyD+9n4Bap+7dw
1iiet0X1Ttl2KalS2KXROBCWbHHyr68wbGRqerRkZeSpmZWpp6YB4SZcybV7
UFLSC+mZ1s7q4Smtstj1TtlwW3eLygan3oY13Lw9vzpli4bburxp77YvnZ6S
bu7KXx3cltV2paZMv/b8lN4RrZsULRPtjbDxqc258UVq4vVOP5y4hpT0Qnqm
tdMvZPnL98/XPz4/evhrcWj9rPP3f/8/9PDXaOtu32ub9l14p5S5Cfk55Q/+
4N/38JfZuk1btCr5j/7R/9nD3+4jc/e2L7VISf/gH/zfPfw1jSSVUahpSiqq
aVjnKWl+KyWxg5T0QnqmtWtS0vKKcPs9tpS0e+tu32tH9t18+xFdfIiUtGmL
ViVvz0cHU9LubV+Skio3Knr2Xs5aTonOCku2JiWdRUoalJT0QnqmhXyQaVHz
XP80+J12cfNvz0dSUqb9+bm356N9Kamy5O35qEVK2kpKeqpiRguvRKnCqSvX
8kVmVqqS4uLLprbrqBphkxiClPROOud00RP48X6uqWQa/E67uHW35yMpKdP+
/Nzb85GUVG9fPVIS/bt9V0pJg5KS3knntNAiJVWu9/Z77N132sVeqk9Jq57v
ISXVbN3te+3gvsssOFxKyn8cHRa+PR+dmJIuO2XVdOzt+ehISqr8aOuCy4Q7
868eOsG+GJSU9E46p4VGEalY4fdOe7Xq+nvjufy8VLSqVP2rGo5sXXTxaUve
WRbetGDTlJTfuq1Zpn4vbzoYGm3dHFK+wvAyT58C4YJhPdE6owu22LqtWWYl
WuDGZ0nXqOnYrVkmnLKUL9woJeU3cDk9Vey4Ykser58N76clbCIlvZPOaaTF
VSm8uVqtYloEmeVNb82N8eqOOjUrNTGs4ZStWxV4TEqKbt2Ohz41ezm615qm
pOjWrQJRNCVFI8+0CDipTFRfZ6Ot2xFnoq/zE5+dkqIdezAlrSbOr7/rujgl
rTYw3N7UxOOKXV1fz+lte5tGu5jWpKR30jmNHL8eFesMVzHtSklhgdTilfXv
2+T8pn1OSknfCldvN9V8YkpabV3rlFRfbYutC9NKcUr02VBxbvHRUoutO5KS
9hXoMCVt/V1STcdujUjhIlMsJd3yLGm1gak6W+zEYlfX13N6295mR7fTAynp
nXROO/suQzUVpi5zUzbFfAuvssxqYuWteHTi8m3morzPZ3tKmoVx6fti9XZf
5Sdu3Vkp6Vvnai9vqrbF1u1LSfli+1JSi63bnZKWL76vV//dVPnpW3ejT2cp
qdE21p/nw6XOKll/Afq4ZzhsU5/TDynpnXROO1uvQZW1ZS5wU+ynQ9GAMyWi
U3hfHVaVSVjzlB1bXbN1O54lrZaaaw6fK434jbvorslE2spqW2xdKgFNiUA0
y3+t7q5nSasCO1LSbDVxmZ621rxj6050yrOkVYEdX7ebgt8fzVLp6a5v3KWW
2rGuIy2pryRs3lzVFISyaIFUS3a3ajgv2cznkZLeSec0dfB8GF7R8te4KXuH
PC8YPm44+Pwoevd+ZGNTW3cwJaUmbqr5lJSU2Xeb4kx0dyx39C0pKVpga0o6
91nSssIWW3f8WVL4el+1W7fuRAdTUrTAvsc9NWloa+U7OiS/gfUTjyt2dWUl
qxfLyj+LHBSWz8wK63+2RruY1qSkd9I5rW3q4Zrbhsw5dkqnpPBFeDvdQ0rK
F9iRkqLhaDr8jbsWW3dKSsrv8aYpKV9gX0pKJZ1NKWn1usXW7U5JqYnTa54l
5QtsfZBU/826+soPpqT6Au3un0+pOXVtmn6NPGGxTS8er91epikp6bX0TyPT
r2qK1dSZn5u6bV7NSr3NB6LKG+9GV4Fp+/8vKXxgNMVc8I27mq3bnZLqc3Gj
lFSzdTX5JR95MgVqqporabF1B1PSFGSiKfaw6WEpqWgaPCVVbuOmS8BdpkQy
+sRSUmbZcDNTSz1V5zuaFCnptfRPC6sz4fJtu8viHHm+VrElKlomnJgvFk5v
cVBNDf7/sPv+Gm3d1iwT3TWp3d1JSprbE0aYeXrY+OiC+ber6ct6Wmzd1oi0
spwYfS0l1XzXLny7mpVa5MaUNIppe0rKvAirek8Pfw+8u1vBZlLSa+mf00VP
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
MoOSkgbVYuue3WNHHElJmYi0nHJ7SmoRFqIpabmWKXhytMoyxQKrKWG8yk/x
LAkOkpKgyFVmUFLSuFp88n9uhY+xOyWlMlGqku+JNL+ux/ikU1JNrpGSoAdS
0mWcpsblKjMoKWlo5467N/TYPlN1cgm/SrcpJd37jbvTpcLRskBNSgrLZHLT
qs4wJUVrG6tjoR9S0jWco4bmKjMoKekBztrS9/TYVsWUlHk2JCVF89FcoJiS
ZqekpFRtY3Us9ENKuoAT1OhcZQYlJT3DKQPwVT22ye6UFM5N5aYHp6R8gcqv
z6WeCtWnpHxtY3Us9ENKuoAT1OhcZQYlJT3JwU1+YY9VOpKS8kEpGqYek5KK
tn4vLpWSVo+HdtT2sI6Fy0hJrTk7PYCrzKCkpIc5MhLf2WM18rHlKzMxLJOZ
Ukxkd3fGmcKosgw1qbdTWpiMUgXC2u7uDBiSlNSas9MDuMoMSkp6JEHpXPnk
cspf5SoetoOm4Itzd/09rGPhMlJSU05NzyAlDUpKeqp9Q/LlnZYiJTUiJcHo
pKR2nJceQ0oalJT0bFs7QadFZb7idb27O+NMd/flL+7uDBiSlNSO89JjuMoM
Skp6vE1jU6dxpZ/H24/Pjx7+HPmwj5TUiJPSk0hJg5KSXqKyN3QaV5KSYHRS
UiNOSk8iJQ1KSnqPmg7RaVxJSoLRSUlQJCUNSkp6leI41WlcSUqC0UlJUCQl
DUpKeqFMz+g0riQlweikJCiSkjZZ/qtKx/ttRw3t9peUNITUAaDTuNIyJa3+
xbkwxczT5/9GS4YLpuqRkoDeOBc9kpRUb9lRu/utXbY6WLOUNBBBiXuFEabm
9fy2JiLV1CklAZ1wLnokKalS2EtSUiMOyBrhyNVvXKYmJUWf+1SmpMrkJSUB
PXAieiopqVL+JyGZblx9SW/1evVita6wTHRu2Ibo2/xWSEkjWj3fvLElvMq+
lJRKOlISXM/vks7iLPRgUlKlmic4medN4YtPNg1lFqwskFpFipQ0qJoIDOcK
o8rSxSnJVQx2kJLO4vzzYK4vlXanpNXEVITZ9yL1jCmzihQpaWgGMlfKPEua
3178LOnIEGgxdqaenL51PICUdArj69mcQiuFvTQFH+DPU1a9unwblt/3oqZk
amKUlDQ6Y5nLTLtS0pR+zDSfNg9+427fKGgxcH7W+Xu/9x97+HNaIEpKOoXx
9WzurOoV00cqSRXLS0lLDsh9wtgOjdSkpE1J5/izpFXzNg2E6IdaBy+OUhKd
k5KOM7geT0raJHxOlJqYmrW6BC+Fc1eVRAvnFym2cCYljW6qTsRw0Cq2rBQf
EmXKF5cKS2YamR8LmVPrXOBIF92ej6QkMqSkg4ysNyheR+jT6aFGShrdFAvj
0EI02tzyVzzOa8bCFHzwFZ2+tYtuz0dSUlQ0Hd/lxn6Qkg66d/dxjdvHKftI
SYSmxM0enGsaJyXNDa6fO0lJj/azQ/7iL/6nHv6kpHEZVi8hJQ1KSiIUdp0B
TguXfMpea1ObU7Oib+srj9aZiS1fq9f1s6SkIyYp6W9ISVC06SpDP6QkQpU3
gXDQzyPq93//P/Twt/XYrrzk7UhhYQ355FJ8nZ8lJe0mJX1JSZvs+3CG0dnd
g5KSCGW6zkjnROOmpLn9rYfDjpQULpKZJSXtJiV9SUmz4glhVcD19D3s60FJ
SYSKXadvOcXoKWneinYjYmtKipbPz8rMlZIypKQvKWmWf05UP5HnsaMHJSUR
qv8q0QWN4cGekZLmbWkxIjalpFTh1Kzp1x8rSUmbpFLStzNXb79TpkCmhnwZ
KalD4f6dfn1ylFrqqgZyG7dMg5KSCNV3nU7miCelpHmLzh0Um1LS1mdJ05Zv
4hnsK5n8spq1Ck2pYjWLSEk9i6ak+ZwgJb2ZlNS5zOC93mWbfM2KnmdT1125
T3mYaZGS5vNDmF/C6TXFoiefVA3nHsMn1ja1/F1SZhEpqWjKZpxpezI6kpIY
QupAuvjQ5XqZA4Ae/Nw7//yf/889/F12nDggd9vRdXqbHaYgqkyJ+BNOjD4P
ir6NvggLn75pp9Q5tfw37qZfU1JxXcc350mm0pOgucAUizypiatlPUsaSD4Z
Rc8Jbp5fwo7unJTEJvuCkj5nk2iumYInPsVimehUH6kabeDBmjPJZb4NW72u
n/V7i18kLSdKSTWKKSmMS6vnPvlkFJaUkjqXykerAqm3PJh93TkpiU12955u
p97jU9K8mUcGVPG7cNf8Gdoru1NS9FnSqrb8265SErOakV5MUjyS3d05KYlN
jvSenqdSNP6EOShfrP+UNG/sjrVISd2qSUlhAoouJSXBs0lJnZOS2ORg7zkh
UGN3SpoNlJLmTU6tKzp96knjvhnMdPjfuFtNzBTLrEtKgv45hXZuSqSk+fIX
nbicuyoZLpiq5NyUVL+4A/KIU3rPLiBv2p6SUouMkpLmDQ+nRC+jP6f8+Pzo
4c9wXkkll3lXRr9lt5qVKrCSiUi3pyS/S4IiKalzqZQUpptw4jIZZcqkElO4
1MENOb0kobN6z5mBjMrIsy8lRUNWJynpk/gdt5Q0kGJ4uexPSoLOuRfq3JGU
lMk7xUWapqT5qEvdXRxZ0cud23v2BVGrjPMVZpx5elgmnJUpk1rXLSlp7oHQ
qsDt+UhKipKSvqSkpcxwjr4Nx/t1beVC0dtU+jHtTUlT9qnQjrS17zhJ3Uss
DzxnmxOd3ntOEYSmxHfkrv+79+DM31ndno+kpKjoVekuN/aDlLQypW9FMrNS
U3iG28cpedP2lDTbnZJWi7f4xt2m8w/1GvWencLSJCWlb7bnubfnIympkWd0
qZS0ksk+q1vl6E3LM44KVqSkzu1ISac8S2r6jbuPlNRSu6Bk1/BV9Sn5VTrs
hE82Jc3FVq/rZ0lJ93pGl0pJK+FunRYpKXy7KvaMo4KVe68yFE1P/F3Sxzfu
WmragfYOfEo58VN6lrScm3qdnyUl3egZXSolrRRT0icRiFI3MzyAlNS5+pQ0
/e7f/a6ceHFKCrfr419vaKN1Bzpp0Lkbj89lVtqaksJFMrOkpBs9o0ulpJUj
KWn5CQlPYrd2LhNhVlITw/LRevLFGqWkrbOocU0H2k10q4eDc2tKipZPzVqm
sGKA6qE3HuYZXSolrdSkpE/db5R4DCmpc6mUdP2flDSKyzrQnqJP0VuaEy92
NZ8bb0pJqcL5WZXPmIzTg8KPH1Pubuk2UtJKJu/sm8UDjDi0X+WRKSl/TXFA
HnRlBzqB0I/UjevyKD09KGVW2u5ZkpR0r2d0qZS0lMm80SnRWYPmZTLs0M7l
r8UXu2yTr1nRU13fgXYZXZmqP/g9sor8qXJq/LukSUq6zzO6VEqCoivvfjnR
bwt9VribA/KgWzrQmYR+3JiSlgW2pqQw9WRmVUYkKamFZ3SplARF7m0GJSWR
cmMH2nf0IExJ0+IrMWetIv+0PRNh5vKr1/WzXpuSOtmWTppxkJQERVJS51Kf
WN7isk2+ZkUPdmMfXnmoQI3p1H+9ofL0OB34t7srs099yeNb3YlOtqWTZhwk
JUGRW5rOtb7UbrooX7bJ16zowW7vw9sbALPjR2M0DeU/PpKSWgj7/3PHbcwz
ulRKgiIpqXNSEjv00IfOLXRi93FYzEGZmnNP5S+3b/P7kdqo5dbVb+Z1/V6h
VZdVkJKg6PZxSt4kJbFdP33YT0t4p623o2fdwf5c/E/+5H/p4e9JY3C1LdOv
j5bqK7n9enrxVRXYR0rq3AvP5w7I47rqQycZ+nf6Z/tSUgtSEnAlNzCde+H5
3AF5XId92GGTeLmmX3ySkloIU9I8RUoCTiclda7mfD5f6H8s/leDK6nyy4md
nM8dkMf12YfHv8I03fRjbZ6kXTJareX2fPS8lLQSPSEUd66U9OV3SVDkfqNz
NeFlFX+iqSc6ffr1/8TRyfncAXlct3148ISz76NjaPrYKLXG2/PRS1JSODG/
u7d+9piZW3Pp7OGqGiUlQZGU1Ln8GTicm0pJPxaPmVIJq5PzuQPyuM77cHfz
Vp8Yn9QcHuviZLRadSa2fK1e188K30pJy4mhVYHKCFP/+aSUBI8kJXVua0qq
D1CTb9w9WufdWHnmWd3kSEkUpe6Nr29GPrkUX1cWKwalp46U1F6OpqTVaURK
+khJUOH2Swl5LVJSca6U9ABDdOPWRqYSE/SQjJZ2pKRwkdSsrSmJ2WdXSpoW
nzFO2W9lSEnwJPN5gz7lT7+ZueGsybOkNxmlGzedguabnFG2jqZWd79dmTam
pGj51Kxp8ZW8N3/jLioVjpYFNqWkVDJakpLgkfq8vjDbmpJWUSiclfoETEp6
mLG6sbK1Y20UjXSbjJY2paRU4dSsMGRJSbNMPpoLbEpJy6CUumLuC0pSEnSu
/2vNy9WEl5rUE01PUtKDDdeNNeei4TaKs+Tvezu0KSXte5YkJUUVDxIp6UtK
gqKBLjrvVHPuDR/6T4HK8j2czx2Qpxi0GzPNHusmmVOMu9O3pqR8GpqO/S7p
7s7oy76UVPk5pJQETzLoBeg99p17W/xJSWMZtxudlF5uuMdGUTtSUn0akpKO
2PHZ4/JFVOdX1SgpCYpGvxI9npTEPqN34+jtZ5NnJKOlTHiZt3T1esesYkSS
kkIvvKpGSUlQ9KSr0iOlPrm6xWWbfM2Knu0B3fiATSDv4nPLlaaK/LL7b1Pl
j+zeIyYp6W9ISVD01CvU4/220GeF+zgaT/SAznSCep7rP3i5hZTULSnpS0qC
osdfqp5KSqLoMZ35mA15szcko6Uzn+Ifdndn9OXuvfGLG/tBSoKi28cpefee
wFfyjTxlY49XwuxJ/XnWMcaVas4ewC2kJChy/erc1PF3Ayoz1KaNPV4Js+f1
5/O26JEkI+iflARFrmWd6zMlbXrSVLmZjsOVPU/7mrm7M/5Wb+3h6+DRcvxg
q1zQ8QNfUhIUuWR0buosJZ1+I+0ITPnZLX/8x/+2h797d1D/Ua6+hRe4a9sP
VhJ93cj1vcTzOIrgDW65sFJvGiclDXFTN5BJShrEz/75x//4f+/h75o9dfr4
vfgAczxznKMI3sCdaud6S0lzq+Sd1qSkUbwkJTUd6atq5xWlXszlM+eicNno
umAHRxG8gfvbexX7P5+S5ruC7+vllOWs1SKpGupT0rLxUtI+Nbv+9nwkJdV4
cEq6coCnskw09aSKhbOi9bTZAl7kAUeR3yVBkfvbexWDRia/LGctk06Yg6LF
wllbU9JqK1r20wPV7PpieFlaTdzx9t6UVHkUFfvt+oZNj0tJV3ZvuOrii086
E6VmLTfHyYrjHnAUSUlQ5P72XlPMqkAxIq2mZGZVvt6aktihZtfXPOUJX4cv
ihP7SUn5+/PVrGtOX8WGPSMlFTv/GqenpHw9sM8DjiIpCYpuvya+XPRWeblT
6lNSTYCSkvpRs+sPpqRoyXyxflJSeGqKnqwuOIPVNKw+xYRTvsK30fWenpKi
W3SxKR12oi+KbysrvEx8nL/Gxb19jQdsl5QERQ8+iV3ggovL1FNK4jKfU1NS
WKym8h5S0twbn/RtSevm1TRsd0paTYy+Dl8cTEnhJtwr1Z5Mn3+2fKcuX087
XXXyjR7ZDw/YHCkJip537hpL8fI9tUxJq+xT8yzJAXOWml1fk19mqe/RhXNr
ak6t5S6fbEq6vWH1ESksPJVCUGX9xZS0bDOt6efQk/rkAdsiJUGRi+a9wjuu
sMDWKJSZlYpXqbWkvnHnmDmuZtdvepZUOXEa6lnSqkBqwdsbdjwlZSo5kpLy
xxgt6O2Mx3TOA7ZCSoKix5yyBlXs/0x+SWWfKXhaVP+kqTIl1bScvJpd3y4l
bQpKt6SkVIGaidc3bNPX7Vblv9XWLFifkiSjG+n2vGf0zwO2QkqCIlfSzuUj
zHwvlPn1UKZ8WKA+Jc3Nu75PXqJ1SqoPSlempE1lrjl91eTZyggza/csySn9
Xjq/hl7qgZQERS6pnatPMa3/UseJQ6iRYoSZb4lTE5e35dFFojXclZIqrT4E
uLs5f60mxUSTUf4Z0+6UdHd/vJfOr6evbiclQZGrauf6T0lzOy/rk5eofNBz
wZ+dm3dWSkoFok0p6WMw3kfP19NXt5OSoEhK6tzUk5qmXtMtbzBJSYOYKv6B
7q/wbWZWakoxJX3cgt4k0+2r0+PypLr1TBtWu2nBfcfGsv5Tjq7RD9HR2/+R
kqCCO9tB/bbQVYUOp7NISaOojDAX/K3uw2/skxeq+Rwp9fbIjrtsp59b+ejH
5+jt/0hJUEFKGlS3KenjoDpJ+Anzje7ujK5NXaakzyNu5AZS7O3VUEq9PrLe
pnv83MpHPzhHb/9HSoIKboE6d/HNcN7WljfqE+jK3ePyF9G23dItb1Ps5+nX
X41NsXSTqmRZYEpn4ejiy2NjuXj04FnVFlYeVhUuUnnUDX1kDt34LykJilxD
O/dz7/z9v///9PC34zhxdEEPDMMLVKakTxCXPqVwEc0j0WWjMTm/9jB/ZQps
XSRv6MNy6MZ/SUlQ5D62c0OnpHkTzu0TYCvDsLWDKSlfSeZKvZoevo0WqA9B
lSVrtiLf8rEM3fgvKQmKpKTOPSAlfRxmpEU/CV++zX9UTj2911R9Svpkf6O0
LBA+tSmuN1osFXYySa0+HGXqzBv6gBy68UAlNx6de0ZKmrfllD7hYYofqufv
J6mn99rZlJI+G4/qVXKprPaTTjTRXBYtsONZUqWhj8ahGw9UkpLuVez/J6Wk
mu3lhXakJI+WdtNpjRTP5JlnNzUXgmXhsNpUJavpy7f519HKo6KLVHTY2Ifi
0I0HKrnTuNfqEhMtkE8uX9/XyynLWdHyy4mXpaTlVsPXtD0lpd5SQ6e1MFav
ZsbUZXWO1WMrQzf+y++SoEhKutcU+1RwVSATW1bxJ5p6otOXE69PSR8HHgur
z6XnifkCn0fcqNxF151urC6Vkg4auvFfUhIUuVm9V7TzlzslFWHC6amUVJxy
S0rKbD5vkxoFxQKOnyP03rl668/iAIl+8nDKSivr7K3H3kZKgqKX3GlMv0pN
D11QMtPaz5aUVJmJukpJmU7gPVKjIF+gOIsivXeiTjqzcuD0oPPmPZ6UBEWP
v0ftfANXbQtb+/iUFO0HXkVKupEOPEsnPSklUUlKgqLOQ8QRQ2za/MAo81zp
9JSUf3tLSvps31/FZ3ZXatctjxftw+XEYgEO0o2naN2NqxERTv8E42IuH61h
VVuqnnZjbegDb+jGf0lJUPTUO41RNqrY/9PZv0vKz70xJc3bG06JrvrnxD/8
w3/Xw98oBxukOIaPu6AP8wkobMYy6aSKVdZz+ra0q/YaQzf+S0qCokempCdt
USbCpLLPlH5UFE1SXaWkT/aT0lWx2/ORlMRjPPJacKVrUlL4Ovr8KCwTfRGe
afNx6VxDH29DN/5LSoIiV8bO5SPMfF0LpxRnpWq4PSXNG/759Wt1YYHb85GU
xMM4mHe7JSVVPgMKw1H94lJS1NCN/5KSoEhK6lxNfrnm7/rjJEx8q7m35yMp
iedxPO9zTUpKPQyqTEk7JjbartEPs9Hb/5GSoIKU1DkpaV9KmhdZvf6+rSkm
JfFaDul9Wvfb6knQPHF5hly9CBeJBqKwntZbNPoxNnr7P1ISVHhYSnrStnyF
SeFGPWz4skAxvBRf52dJSbyWo3qH1p12/U5pt8bRD7DR2/+RkqDC9Xe/TT1p
W/J+W+izwiNqwtq+lDT97rGRlAR5DuytHpaSmq5uxKOrh88PTyQlQdHQYzz0
pG3Je3ZKWpKS4C6O7a2aPny57HrdekWDHlfRZg+6LR8pCSpISYN6T0pamY/Y
mkSTyUThxH0RSUri2RzeW+mxvKH7Z9X4obdFSoIiKWlQr01Js90paSYlQQ1H
+CYPu6qea/SekZLgVR52Pn/StuRJSTtS0mqRzNfwpCRYcpBvpcdCz+iT5VYM
vUVSEhRJSQyqMtRkfnZ0/BdJb0tJ4W/EXuXu7r+ZHtjK8fPJ/p/BBzVvyGO2
CEh50rnr0/dZa3mlmP+bv4xOwcP9zP6Kzr2mQ245iqaNKWnun9RbKSnlYTc5
u+mHrdseT5s3adQng/bGZe7u9fNNUhK8xsPOY91uy/TrM/rUaTZVLJyVrz9a
Q1PX9/x0INec+9ftUXeKZ2/dPm/uk03b/rPwj8+PHv7evMs43cNunICUhw32
PrclE2oq807mdX51UpKUtNvDTg7nenPnpLY9eja7PR9JSZzuGcPf75Kg6BmD
fdbntmRadVdKWn0dIvr2E0tzy1nFB1ipwqeQklp76nad5eX9kz93zVNuz0dS
Ei084IiSkqDoYSmpT72lpFX2yYedaGKKpqfwbXQVZ5l6cvrW3e6RG3W6p/ZS
5XatioVLTVISl7jx5H+vI50mJUHR8YFGUaaHw1lTOuPUnBvDRTaVmRIxJ/oi
nBhtoQNsOHZZvUf2Vf1G5Uf6FEtJ8yni+zqcPs+aXxffRqdISY93SlgY2pEe
kJKg6OVnmGtkotCmlBQuW8wj16ek4uro37m7bPrVauKOtzUNvuzM9sjDezXG
59FdPCOFs8K0sso10emZidHXqblS0oPZp0s7ekNKgqKHpaRutyWVZTKBJXwb
nRLO2pSzUuXzL1Jzi9MZwun7q/IYK06sqT8zscVx+KRje4r5JIb8asHorFVg
yYSmVLTJzJWSXuth9y1n2dotUhIUPexs0/O2LO86VlPCWWH5/J6K1hOtNlpb
ZsHoi09w45S6oQon0rkWe2p1sGVWFM4ttmdK36IXpxz3yAM7PBelZi2nRzs8
n5JqMlRmqenXGPVtg2/cPZ69mbKpZ6QkKHrY7euTtqVbOvnZbkxJYbGaxuRT
0iqqn751jxwOO1JSdFY+Jc17JPodvHzqqfnCnpT0SHZlXn3/SElQJCUN6reF
iyt8Tye/U6OUFIaU8FZ8NbeyJanYFaanRofu80ZEZtecmJIqv2hX8wRKSnoJ
+7FGZS9JSVAkJQ3qrpTU6AN5+tH6WVLlxE3PkqKHZXRKfZvrPX44rJ7K5Yut
phxPSTVfupOSXsJ+rCElwVkedsf7pG3Ju/FZEs/WVUoKi60CUSYHeZZ0lq0P
9ZZT8rEomoPyE6WkN7Mfa0hJcBYpaVBSEo30lpLyTSqmpFSdJ3r8aefElDT/
nugrMzHzNlM4E6YadAyXWo3u1aclS/llN61oXw31Kzp+dgo3WUqCs0hJg5KS
aOT0QRS9dVlODG9v8m9TNUfr/CzOco1Od88+7WTuPMOS4ZTMT4pO/Cuu6Nn7
6CXyWeB43CiusYXiKnYMPSkJziIlDUpKopH3DKKz6LEvKYmmpKT6MjVLSUlQ
JCUNSkqikfcMorPosZSpJ3d3BkdNW1LScqdHX6+KpV5k5obNW81allkdhKlm
RF9HZxUbE+/EBSkJio5cPqqvTm937i77kpJopPKI3XdgL0dEo6ERXVfrFV2w
Fni51UBLvY2eZKYgv6TKRF9Elw0H/nLWskx9M+pbFa0k1TlRUhIU7biRaHrz
/0gtekxKopELwstl9UtJ8Bj1KSk1MTMr/6I4N19m9alpsdpUiCtWkpkSkpKg
aOvdu/uBI07sPSmJRqSkI2sEGhk6JaVavuNZUqaSzBRgh/qU5PnRKc7qRimJ
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 13->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/r9cyDH2aRpEiZzthgzDbbubExpM2CixgXi0PcGi/ZmMCyC+tA2O6p
Ugf8BtKmcmHSBMLdh6RJl8aEQELegqvje/fw0+rW/NWfkWak6+LLwznSaDQa
aSR9js65n9/7oz/7J//1fzBN07/8j3/+55/88//uP/vzP//nf/Ff/Cc/3/yX
f/ov/5t/8ad//F/953/63/7xv/jjP/9P/+g//Dnx3/0s+0f/0TT95WsAAABW
Pp/P978AAAAvtwxKAAAAiEgAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtS
EgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABL
UhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAA
S1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwNKNKWkCRnDL+QEA4EY3
3gXde+MHVLrl/AAAcKMb74LcgEHnDFIA4J2kJCDFIAUA3klKAlIMUgDgnaQk
IMUgBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J26TUm7/48ty0Xm/4ZW
JVM11K8uXCq13iNNPbKW/FI1Gxttc6rHMiUzdS4nFstEV1RTf7RtxU1OtSHf
sVPiYEtVW3yb2bRML+1zbm0AAKO48S6ouOrVLWVlndH6w3vLfLWb+iRVef2s
HU0Np0dL7mtbSqrNxRUVd2U+ehRbuKn+TNtq6s+/rdwv+Vn1e6247EFSEgDw
Tk9KSfV3ocVqG6WkzPStTd0dKyrvzLe2of5OPrrfozXXt7C+/k3hK9+8TFO3
TqlMScVuOX0sS0kAwDs9OyWFsypvvE9PSTtu+OufL9RP2dekmjL1O6smAR1M
SZll9x3tN6akTeuSkgAATtF5SlqqqbCmqppFtqakTP2b1lu/yCkpaVP3LpfK
VJtab7QBxcUrq40WK06sV5O5anZQKFVnuIriuvZtWt6mYwMA4DFuvAsqrro+
WRQLpG6Sz0pJqaW2rje/SD7U7EhJxcZkGpnZolTLMyVbpKRo/fm2ZerPR5to
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
evLC3lht8gt7AKSksziBPJiUNCgp6SX67I0+W1Vv9Pbvk09J73meMm/vagq8
ipR0IueQp3rJZfF5pKSX6LM3+mxVvdHbv0/ls6TRO2f13cLU3NE3E+iH88lT
uVgMSkp6iT57o89W1Ru9/fusklE0LIzeM+E23tgY4D2cbR7JdWRQUtJLdNsb
3Tas0ujt36H4HbPRLwfRJ0e3tASABxj9svhaUtJLdNsb3Tas0ujt36Hylzjj
9kx+o8bdLmjB75KgyLVjUFLSS3TbG902rNLo7d/htSlpnj7upsHppCQokpIG
JSW9RLe90W3DKo3e/q1W/6ZB9BdJo18Ois+Sht46OJeU1IKTzMO4cAxKSnqJ
nnuj57YVDd14olK/S/IsCUJSUgtOMg8jJQ1KSnqJnnuj57YVDd14UqLfKpSS
ICQlNeI88yRS0qCkpJfouTd6blvR0I0nI/99QvsdvqSkRpxknsRVY1BS0kt0
3hudNy9j3JYDHCclteP68hhS0qCkpJdo2htTT9ptZmrbL14jQD+kpHZcXx7j
lvsTjpOSXqJpb/ys/MfnRw9/UhJXuumTgF7c3f10QUpqykB7BufMQUlJL9G0
N6YXp6SPI+19xIQv/cBHSmrM+HoGp8pBSUkvISU13fzrV8pd7O6QPnkzKak1
4+sBpKRBSUkvISU13fzrV8r1XOYydM5rSUmtGVkP4Aw5KCnpJaSkppt//Uq5
nh2dp3/eSUq6gME1OilpUFLSS9yYkuYfL3xfrybOs/LTV/VISVzMXq6hl15I
SoIiKWlQUtJL3JWSwgSUmpV/nSogJXEBu7ievnobKQmKpKRBSUmD2rp1t6Sk
cPrulJSvVkqiKbu4nr56GykJiqSkQUlJgxo0JR1JTFISd0nt4vlboKkymSvj
uYfNvtqWzTurPYbD20hJlzG4xiUlDUpKGtRy65b3adfckoWV16Sk1Q+Lir8/
CmdJSVyvZkzdNfSOO715nW8vjMvgGpeUNCgpaSxTzKfiM+EeUlLqOVGYkurf
Skm0VjmgpKRGFQIz42tQUtKgpKRBrbZu9bF2sfzpjbkmJeUj0l0p6fP0g+3l
tg6o1dVw+fFF+LFG/kW+AakPSaKfouSbl1n7qs50P1V1DnCEwTUoKWlQUtKg
hkhJ9ZEnE4XCMJVfXbvNzPfALevlApsGVBhtUpEn/yKTWbauZTlr69qjBYoM
h1fxu6SLGV8jkpIGJSUNKrxrKt7MtOuQTGz5kfj9UWbKSnSulMRltn7sMB+l
y5Jh+a25KVxFWFt9CKpfqZREnpR0MeNrRFLSoKSkZ5jvZ/I3b+3Wnv8i3GV/
UhKnq0xJ+ZxybkqaJ6ZCUGot+1a69fpuOLyKlHQ9Q2w4UtKgpKRnqNlYKamd
Vx1sb5PauZkwEr7YHU+ibdidxXasdMexbTi8ipR0PUNsOFLSoKSkZ7g9JfWj
0TYWe+CW9XKBzM6NHnWpw3JZcrVgcZHVWlKLF1+n1lWz9qn6IK8vyQNISbcw
ysay6RRKP6SkB6i8hxmrQ7SWTgy0c1dJ6q46B+oxjpOSbmGUjUVKGpSU9GD5
D4r7N0o7P0M1la0G2rlSEteTku5ioA1koFsvlqSkZ5OSrjFQU9mqh51bP2xb
jHHfuCNDSoKigW69WJKSnm3ciPQ1SmtHaSc73LhzWzwbusBATeU4KQmKhrv7
4ktKeryhU9JnnP04SjvZSkraaqCmcpyUBEUj3n3xkZJeYOiI9DVEs4doJDu0
2LPzYFyNyuXb1Zidy0drWNWWquea84Cx8CpS0o2MtVGMewP2clLSG0hJFxii
kezQaM/mE1C46mXSSRWrrOf0bVkxFl5FSrqX4TaEcW/AXk5KeoPRU9JnhL3Z
fwvZp11KCl9Hnx+FZaIvwkiVj0vtGAuvIiXdy3AbwtA3YG8mJb3EA0Zo5+3v
vHnsdllKqnwGFIaj+sWlJE4nJd3OiOvfA+7B3klKeolnjNCeN6HntnFEP9+4
Oz7R1+04nZR0O4Ouf8+4B3shKek9HtAhPW9Cz23joBY7d/UkaJ64/LLc6kW4
SOqrdKt62m1FyEB4GympB8Zd56SkQUlJ3Zp6cndn/LWuGrPUbcM4rsXOvf6A
uWaNBsLbSEk9MO4619utFJWkpG79bP+Pz48e/nrryd7a89VnqzjFA1LSZasz
EOAWhl7PpKRBSUndkpIyNImLnbt/r3xKe+XV2SiAuxh9PZOSBiUldUtKyuiw
SZ9eW8VZ7N88/QP3Mga7JSUNSkrqlpSU12GrOmwSJ3KZy9Azr+V3Sf0wDLvl
8jEoKalbUlJRbw3rrT20YC+H9MmbSUlQJCUNSkrqViolrf71udTc7+vVrE1V
9Z+SPp3t5a4aQzurgXN3c+6hB/iSkqDIqXJQUlK38rGl5nUxJWUWl5J26Kox
XGZ6pbt7nV5ISVDktDkoKalb08aUFJYPi9WUGSslfXra0f20BOAaUlJvXIk6
JCUNSkrq1vGUFC7yyJT06WZfd9IMgMtISR1yMeqNlDQoKalb+ZS0VJ+SwmJh
PSOmpE8fu7uHNgBcSUrqkItRb6SkQUlJ3ap8lpR5TlSThvJLSUnDtQHgSlJS
n1yPuiIlDUpK6tbxlJR5ftRPSor+MPwux7fllD4BGIWU1CfXo66cco/B9aSk
bk0bU1Im/qTKd5KS/vbf/n96+DtlM0c/6gA2kZK65XrUDylpUFJSt1L5JXwC
Ep2bmrJ8G61BSjq4OccrARiFlNQt16N+SEmDkpK6VfOU55o/KWnT5hyvBGAU
UlLPXJI6ISUNSkrqlpQkJQF0TkrqmUtSJ6SkQUlJ3cr9KwOXa7qZt+cjKQlg
Hympc65KPWh9K0UjUtKrdNgn9SlpmdryEzPTpSSAE0lJnXNV6oGUNCgp6VU6
7JPKFLNKRuHE1HQpCaAdKempDn6lZF5KQPjohGFJSa/SYZ/sSEmZ+POduO9b
fFISwFZS0oMtr2j7gtLuZXcv1ScpaVBS0qt02CebnvVUpqR9QemUk1iHPQwA
O0hJZ5GSBiUlvU1v3bIpzix/Z5RPSavC9c+SjnzB4NNf9wLA8StatIbV5XJ1
6cykpNSCqympt5/gYl1f25FL/G5S0qCkpLfprVv2PfSpSUlbHyoVT+P1W3Re
9wDACfY9DMp8crgKQWEmSqWkVJIq1pNaV3SR1KywPReQkgYlJb1Nb93Sc0pa
NrL+FNdbDwO043dJo9iXkja9XV0rt6ak4otPOiUVV51qzDWkpEFJSW/TW7dU
ppipj3/jLvOp2rLMqT0E0C8paSAHvxqx6e2nZUr6BF+xq1n1KmFdSUoalJT0
Nr11S31KmhWnpwofT0mrlkfPe731MEA7UtJAonGjsnzmbfT5TvRFphn7niUd
X/YaUtKgpKS36a1bNgWZpn+7e2YVl3rrYYB2pKSx1HwjIiyZKr+avroUZhYP
r5vz2/BFWD5VQ6a2eVaph5qQkgYlJb1Nb93ygJS03JbKqw/AM0hJAymmnlHs
Dj5SEptISW/TW7eEHzfd6Kwt+sQ++AJ4HilpCO0uebeYdqWkGzd59A5/LSnp
bXRLa6sefsD1CCBFSqqRSSjRt+F15PQGjH5V2rQVt2/v7Q1gHynphfRMU6nu
fcy1iTd73tH7vC2qd8q2S0mVMsGnmIlO2VO7U9JZaz9eye2r2M2lf1BS0gvp
maZquldcYlDPO2ift0X1pKQrZbJP+DgpLNYiKNUvdWKxC/TTkpkr/qCkpBfS
M61tuvrUnDydYOnE6l5uvn8b9/h83hbVO2XbpaRK+ZQUvl0VO+uA3BqU6tfe
z5DppyWzl5xSnkdKeiE909qOHs5ftnZ8+gcnmmI+v176xzo4n7dF9c7ddimp
UjElfRKR5PQD8nhKCo+ZVYXRt6sXq42qnJWpJ2xJ6vX1blw1R0hJL6RnWjvY
w+HJPLyfgVuk7t/CWaN43hbVO2XbpaRKYZdG40BYssXJv77CsJGp6dGSlZGn
ZlamnpoGhJtwJdfuQUlJL6RnWjurh6e0ymLXO2XDbd0tKhucehvWcPP2/OqU
LRpu6/Kmvdu+dHpKurkrf3VwW1bblZoy/drzU3pHtG5StEy0N8LGpzbnxhep
idc7/XDiGlLSC+mZ1k6/kOUv3z9f//j86OGvxaH1s87f+71/28Nfo627fa9t
2nfhnVLmJuTnlL/7d//PHv4yW7dpi1Yl//AP/3UPf7uPzN3bvtQiJf29v/d/
9PDXNJJURqGmKamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d
2Xfz7Ud08SFS0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0Filp
UFLSC+mZFvJBpkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp
6amKGS28EqUKp65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp
8Dvt4tbdno+kpEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvv
sXffaRd7qT4lrXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G3
56MjKanyo60LLhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGq
UvWvajiyddHFpy15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG
9UTrjC7YYuu2ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42
vJ+WsImU9E46p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkp
unU7HvrU7OXoXmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop2
7MGUtJo4v/6u6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwz
XMW0KyWFBVKLV9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnR
Z0PFucVHSy227khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11d
X8/pbXubHd1OD6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+
n+0paRbGpe+L1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+
Xv13U+Wnb92NPp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXW
lrnATbGfDkUDzpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYT
aSurbbF1qQQ0JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1u
Cn5/NEulp7u+cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T
1MHzYXhFy1/jpuwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR
3bHc0bekpGiBrSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv
6JD8BtZPPK7Y1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn
2CmdksIX4e10DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV
6xZbtzslpSZOr3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14
vHZ7maakpNfSP41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRz
wTfuarZud0qqz8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp
8JRUuY2bLgF3mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5
WsWWqGiZcGK+WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML
5t+upi/rabF1WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w
7m4Fm0lJr6V/Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2
f+9MSRf8vfwqubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sff
ad+ej6Sk3Vt3ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653
+tbVa5GS+nFKF73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOd
eeGdW/0AUtJr6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZ
pKRxVX630FXsODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt
8AZS0nCCf6OiNiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6
qB19C7yBlDSWMCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJ
b6aL2tG3wBtISQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NF
TeleALoyekpKbVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek
1VLLFzU15+vJh7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzN
WtWTLxy9BIf1pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd
0tAedp3qdnOkpE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep2
06Skeqc/1MsEqB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP
6Z4HbLcN603YS8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClp
LPWHcevDfnflI45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9l
Is9qVmp6dEpqIozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd
8gnyUfFFtM6tpKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8
kYo/qRepiZtISWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yU
PvXRfX6pfCVhDZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX
4Thoa+ilmZQ0iiMpKXNzmLpTzdzc5hcsrjd/i9tnUJKS6hVTSbQnpaStHJA1
9FJTupexOGLr6asvKWkI+w7XypRUWb7+1rRmLfXr7YGUtMnqOVFm4mrWssym
KeEqUtPzLSmSksail5rSvYzFEVtPX31JSUM4mJI+6ft8KamGlDSo00ONlDQW
vdSU7mUs0ZuT6PU9Oj1T7Pjncrtv8xrdOBndX1JS/3YfqzVjJzrEzkpJB+vp
h5Q0KCnp5fRSU7qXgaQO10xKqqkhfzOTWe9ZGtVvdH9JSZ07EpFqPs2YM0v9
xyD5D0/CCpdvwzLRFfWWSnprD5WkJHRUO/qWgWRS0ieWa1bloxOjC0ZftCMl
NSUlvUHmYw0DoYaUNCgpCR3VlO5lFNenpPzoSH0yPAXCtURbG74I17VpwBrd
HynpHaSkg6SkQUlJ6KimdC+jyKekTxBtUjdL4fQwgBTvGVJPnaLTl7Myj6vq
F6lkdH+kpNeIfoyw47OFd9JLg5KS0FFN6V5GcTwlpe6jUnVmRkeqnvoQVFky
s0VFRvdHSurYKcfncjRlIlJqmLdLB2ONPilpUFISOqop3csojqSkTDLKpKTM
Sue5mSdBlc2rD1aZlqSat3WR55GS+nRWRFq+To3r6PDZ/eFDZXvGIiUNSkpC
RzWlexlFMSVVvs7P2logFYJSJXekpN2D1OimW8cPzk3Bp2bKceOOOClpUFIS
Oqop3csoar4zs3r4MqeMVZnUrFSdm8rkXy8n5kUXOd5jcLtTjsxMJcX682M8
NX7DyvMngWLlm7a3qR2nF65UedW4xmWbfNmK+rGv/af3CTPdyyiGOFanX++g
7q1ziB7jhU45MleVLG8zauqfEqlnWdvq9ar+sIawqnzl/YzQ3XdoXOPn3vnx
+dHD32XHyZUr+kf/6H/u4U9K6pDuZRRDHKtSUm/8Lqk3LcbFasopKSkzcZV3
dqSk+nZeQ0rqnJTUdEW356MjKenT05nkkXQvQ+jhQK25lzjy6PzcOnvosdtJ
Sb25JSVVFt6Uko48S0q16i5SUuekpKYruj0fSUk9070M4cYDtcUTogsM1NR2
pKSunP7pQeptccxKSUtSUuekpKYruj0fSUk9070MQUraaqCmtiMl9aPFATkt
pGZlliq+DV+HLzLTayo/vU926KclRElJTVeUiS2z5dvV3NTrZWEpaThTzN2N
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
7/9fPfw5LRAlJZ3C+Ho2d1b1iukjlaSK5aWkJQfkPmFsh0ZqUtKmpHP8WdKq
eZsGQvRDrYMXRymJzklJxxlcjyclbRI+J0pNTM1aXYKXwrmrSqKF84sUWziT
kkY3VSdiOGgVW1aKD4ky5YtLhSUzjcyPhcypdS5wpItuz0dSEhlS0kFG1hsU
ryP06fRQIyWNboqFcWghGm1u+Sse5zVjYQo++IpO39pFt+cjKSkqmo7vcmM/
SEkH3bv7uMbt45R9pCRCU+JmD841jZOS5gbXz52kpEf72SF/+If/uoc/KWlc
htVLSEmDkpIIhV1ngNPCJZ+y19rU5tSs6Nv6yqN1ZmLL1+p1/Swp6YhJSvor
UhIUbbrK0A8piVDlTSAc9POI+ht/4//v4W/rsV15yduRwsIa8sml+Do/S0ra
TUr6kpI22ffhDKOzuwclJRHKdJ2RzonGTUlz+1sPhx0pKVwkM0tK2k1K+pKS
ZsUTwqqA6+l72NeDkpIIFbtO33KK0VPSvBXtRsTWlBQtn5+VmSslZUhJX1LS
LP+cqH4iz2NHD0pKIlT/VaILGsODPSMlzdvSYkRsSkmpwqlZ068/VpKSNkml
pG9nrt5+p0yBTA35MlJSh8L9O/365Ci11FUN5DZumQYlJRGq7zqdzBFPSknz
Fp07KDalpK3PkqYt38Qz2Fcy+WU1axWaUsVqFpGSehZNSfM5QUp6Mympc5nB
e73LNvmaFT3Ppq67cp/yMNMiJc3nhzC/hNNrikVPPqkazj2GT6xtavm7pMwi
UlLRlM040/ZkdCQlMYTUgXTxocv1MgcAPfi5d/7BP/jfevi77DhxQO62o+v0
NjtMQVSZEvEnnBh9HhR9G30RFj59006pc2r5b9xNv6ak4rqOb86TTKUnQXOB
KRZ5UhNXy3qWNJB8MoqeE9w8v4Qd3TkpiU32BSV9zibRXDMFT3yKxTLRqT5S
NdrAgzVnkst8G7Z6XT/r9xe/SFpOlJJqFFNSGJdWz33yySgsKSV1LpWPVgVS
b3kw+7pzUhKb7O493U69x6ekeTOPDKjid+Gu+TO0V3anpOizpFVt+bddpSRm
NSO9mKR4JLu7c1ISmxzpPT1PpWj8CXNQvlj/KWne2B1rkZK6VZOSwgQUXUpK
gmeTkjonJbHJwd5zQqDG7pQ0GyglzZucWld0+tSTxn0zmOnwv3G3mpgpllmX
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
N65GRDj9E4yLuXy0hlVtqXrajbWhD7yhG/8lJUHRU+80RtmoYv9PZ/8uKT/3
xpQ0b284JbrqnxP/5E/+VQ9/oxxskOIYPu6CPswnoLAZy6STKlZZz+nb0q7a
awzd+C8pCYoemZKetEWZCJPKPlP6UVE0SXWVkj7ZT0pXxW7PR1ISj/HIa8GV
rklJ4evo86OwTPRFeKbNx6VzDX28Dd34LykJilwZO5ePMPN1LZxSnJWq4faU
NG/459ev1YUFbs9HUhIP42De7ZaUVPkMKAxH9YtLSVFDN/5LSoIiKalzNfnl
mr/rj5Mw8a3m3p6PpCSex/G8zzUpKfUwqDIl7ZjYaLtGP8xGb/9HSoIKUlLn
pKR9KWleZPX6+7ammJTEazmk92ndb6snQfPE5Rly9SJcJBqIwnpab9Hox9jo
7f9ISVDhYSnpSdvyFSaFG/Ww4csCxfBSfJ2fJSXxWo7qHVp32vU7pd0aRz/A
Rm//R0qCCtff/Tb1pG3J+22hzwqPqAlr+1LS9LvHRlIS5Dmwt3pYSmq6uhGP
rh4+PzyRlARFQ4/x0JO2Je/ZKWlJSoK7OLa3avrw5bLrdesVDXpcRZs96LZ8
pCSoICUN6j0paWU+YmsSTSYThRP3RSQpiWdzeG+lx/KG7p9V44feFikJiqSk
Qb02Jc12p6SZlAQ1HOGbPOyqeq7Re0ZKgld52Pn8SduSJyXtSEmrRTJfw5OS
YMlBvpUeCz2jT5ZbMfQWSUlQJCUxqMpQk/nZ0fFfJL0tJYW/EXuVu7v/Znpg
K8fPJ/t/Bh/UvCGP2SIg5Unnrk/fZ63llWL+b/4yOgUP9zP7Kzr3mg655Sia
NqakuX9Sb6WklIfd5OymH7Zuezxt3qRRnwzaG5e5u9fPN0lJ8BoPO491uy3T
r8/oU6fZVLFwVr7+aA1NXd/z04Fcc+5ft0fdKZ69dfu8uU82bfvPwj8+P3r4
e/Mu43QPu3ECUh422Pvclkyoqcw7mdf51UlJUtJuDzs5nOvNnZPa9ujZ7PZ8
JCVxumcMf79LgqJnDPZZn9uSadVdKWn1dYjo208szS1nFR9gpQqfQkpq7anb
dZaX90/+3DVPuT0fSUm08IAjSkqCooelpD71lpJW2ScfdqKJKZqewrfRVZxl
6snpW3e7R27U6Z7aS5XbtSoWLjVJSVzixpP/vY50mpQERccHGkWZHg5nTemM
U3NuDBfZVGZKxJzoi3BitIUOsOHYZfUe2Vf1G5Uf6VMsJc2niO/rcPo8a35d
fBudIiU93ilhYWhHekBKgqKXn2GukYlCm1JSuGwxj1yfkoqro3/n7rLpV6uJ
O97WNPiyM9sjD+/VGJ9Hd/GMFM4K08oq10SnZyZGX6fmSkkPZp8u7egNKQmK
HpaSut2WVJbJBJbwbXRKOGtTzkqVz79IzS1OZwin76/KY6w4sab+zMQWx+GT
ju0p5pMY8qsFo7NWgSUTmlLRJjNXSnqth923nGVrt0hJUPSws03P27K861hN
CWeF5fN7KlpPtNpobZkFoy8+wY1T6oYqnEjnWuyp1cGWWVE4t9ieKX2LXpxy
3CMP7PBclJq1nB7t8HxKqslQmaWmX2PUtw2+cfd49mbKpp6RkqDoYbevT9qW
bunkZ7sxJYXFahqTT0mrqH761j1yOOxISdFZ+ZQ075Hod/DyqafmC3tS0iPZ
lXn1/SMlQZGUNKjfFi6u8D2d/E6NUlIYUsJb8dXcypakYleYnhodus8bEZld
c2JKqvyiXc0TKCnpJezHGpW9JCVBkZQ0qLtSUqMP5OlH62dJlRM3PUuKHpbR
KfVtrvf44bB6KpcvtppyPCXVfOlOSnoJ+7GGlARnedgd75O2Je/GZ0k8W1cp
KSy2CkSZHORZ0lm2PtRbTsnHomgOyk+Ukt7MfqwhJcFZpKRBSUk00ltKyjep
mJJSdZ7o8aedE1PS/Huir8zEzNtM4UyYatAxXGo1uleflizll920on011K/o
+Nkp3GQpCc4iJQ1KSqKR0wdR9NZlOTG8vcm/TdUcrfOzOMs1Ot09+7STufMM
S4ZTMj8pOvGvuKJn76OXyGeB43GjuMYWiqvYMfSkJDiLlDQoKYlG3jOIzqLH
vqQkmpKS6svULCUlQZGUNCgpiUbeM4jOosdSpp7c3RkcNW1JScudHn29KpZ6
kZkbNm81a1lmdRCmmhF9HZ1VbEy8ExekJCg6cvmovjq93bm77EtKopHKI3bf
gb0cEY2GRnRdrVd0wVrg5VYDLfU2epKZgvySKhN9EV02HPjLWcsy9c2ob1W0
klTnRElJULTjRqLpzf8jtegxKYlGLggvl9UvJcFj1Kek1MTMrPyL4tx8mdWn
psVqUyGuWElmSkhKgqKtd+/uB444sfekJBqRko6sEWhk6JSUavmOZ0mZSjJT
gB3qU5LnR6c4qxulJBpJHZ+rjzGjn3CmPucML+hhVeEi4YLh2lONWa0rWkOq
JdECmWHrxAgXyMSEz6/DPDUxPBVEF6ypKmxApkzqbbFkTZ35lgBH5K/+q5Kt
G/MSp/SklEQj0eOz8ur/CVJP5UU/v8iyGfU3FWHNWzck3yeVc4FTpE4I4W3M
amL4occndqJYWRXOzM2vJV84VW10wXwl+b4CdggHV6rYBY15j+P9KSXRSPTg
TF2Fp3S4mGK3KDWLhNOjbSvWv2ldNe1McXqEC5w70J49bGu2zu+SoKgmJT37
ZHKXg70qJdFI5shMhYhMMKkPR5k6o20r1p+Zu/yctri4MyT0QEqqJyXBKaSk
u0hJ9CkfTzLPYvIFdjxLijajvv6zJjpDQg9OHGirB8en1Lap/CnrPbgKKQmK
mqak5YnortPRBfY1SUqiT6mUtEooy6Gdeb2cmBddJNq21ayaSlaNj27pqp5M
bxS7CzjdxWNt0+p6Ow/UtEdKgqLorciqwO6a69eyu+ZO6tyx+ME1Skm0U39w
bgoUx+u8/lZESoJOSEn1pCQ4RaOUlPoQ+BRS0kdKoiUpqX51vd0dwVMd+cw2
+kx5nji/Xc0NC0fnRivJv07VcxYpCU5xWUparTF1plq9CM8q0QL5empKRvsh
v1RqYr0j50YpiXY2HZktLvTROtvdUaQaUFmydWOAz7GxtrqaryambjCiLyoL
h+VT9UhJ0K2LU1I+7KTyS1g+fJupp+bcGI1I+aWijdxESqJbbv5r6CW4zMGU
FL7ORJtPcInfF6k+sTuE1Y1KC1ISnKKTlFR8EU5cnbgyi9eXDFtbE9My25sn
JdEzESBP/8CVbkxJ9VV9YncIn8RHvqvpZ6msUEqCostS0u4PYVLlU6s4UrKy
jJTEGzT9qHN0egaut3vc1X9Muu/Sn0lJxXqkJOhWo5T0qT6TFF/Un2GOl4y2
X0rizcSBkD6BWxy8IVndUWTeRguvZuWXLRYOlzqLlARnaZeSPrFTRzhx+Tb6
4pM+s22qp7JktKmrE9rqxe5z3ZG+lZK4zMHj/Bn0ANxu9+i7eNjee5aoXLuU
BEXFi/4Qg31QUhIjin568Hh39zrwl/YNxiuH8L2ni/q1S0lQVLwBGGW8j+jI
1klJALzQ1kvnZZ913P6Jyqa1S0lQ1HNK2vpZbieRqv48KSUBwCa3h5E+be0T
KQmKek5JS6lmdNK8FSkJANrp8+p/lx29ISVBkZTUgpQEAE29/MeDB7ddSoKi
RilpNXLDgRx9uxryqxrCBTOFw7epbUkVrtmQ1EalCoSrTs0qkpIAYBbeSDzb
3f0Nz1ccaztG4vRrtJl+zRGZAsUXmQKZ1X3SQSlf/+63qdamOmoHKQkAABpp
mpLCt6sosTUlrRaMVp5aXbFt0YZFa0sVDluS/8xHSgIAgA7dkpJS2efft3cH
S3KCUABF8/8/3VmkkmIEHog+RzLnrKYVETubvqXdqQ+58V7ScG3BtKfuQzW3
NKkkAAB4odRKGuZDryaer6R4YadeBqttnnqNSgIAgCTDSvqshlJ9O6a55fBw
WnNAc2T58jDDYbbm+OFSDycaDq6PbZ6uPPbkm/qFSgIAgCTBx/hyTPYaHjvX
e6gkAAB4J5X0XVQSAAC800wlfR4JpcmV/B+uX6lKAgCAJPNt8nMSJtst76RK
AgCAJKcqSShdd9d7qJIAACDJ2fYRSlfc+O6pJAAASLJwh6j3K9k0Jb1XKgkA
AJJc//Re/edCfHHXv9SBSgIAgCSpn+TJo5IAACCJStqUSgIAgCQqaVMqCQAA
kqikTakkAABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2
pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIA
gCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqik
TakkAABIopI2pZIAACCJStqUqAEAgCQqaVMqCQAAkqgkAACAkkoCAAAoqSQA
AICSSgIAACipJAAAgJJKAgAAKKkkAACA0lol/fqruSuev9wSzNM8/M/fzaPK
OSeXCgAAUFsoiDpberPVM/f2zgRXPH8ZUPOnAAAAOMirpDiRhrtObZkpI5UE
AADMuLGS/t3N+bTu7DTv9TTn6Q3uPWK38DcAAEDPXZUU1FBvS2/O3uDDeVUS
AACQ4ZZKWtvSe9kbvPDE3af49QaVBAAAzLirkmr1mGCG4SmaI2cqKdgIAABQ
u/F7SeWWyUrqFVB8eLxr+DgfAABAYO1RtOAZtjJ86ptKhy8cBY/D1YProw67
eqc4e3UAAMBPpiMAAABKKgkAAKC0XEnzP5LQe9Bu7aQXv3Y0PPvD2ShRAQDg
bZa/l3RqV/1rDMuuZ8VwhgdOAQAAvNbDlfSGAFFJAABAYKGSDuPrZ9h6D8UF
z+Md/q5/tq43VfAsX+/SZpbRPG+w1OEymgcGq63fVQAA4BkXK6l5k6hZSZP3
mOr6iAf0RjYXNtzSTJ7gkoNF1ufqld2pxQMAANnuqqTegHJLb3BdDZ+vwRIM
+LTSpjnzcM119TRX3iugeJHxxsNlLvyjAAAAd3mykupdM+0znKquleCMM3Oe
raSFe0nB/PW1AAAAT7qrkuJ06u2dr6SzI+crqb4H9I2VNFw8AACQbe2GRfP2
Tb2rHFB+8m++LJXT9o5tHlgvLNjYW0a9yFNXEay5dwnxIQAAwJPWPo0Hh/hs
DwAAbG35nkXzKIkEAADszpNdAAAAJZUEAABQUkkAAACl+jffAAAAfrjfa7x2
Kw==
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 14->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b/r9UyDH2aRbJHKBFy5zDbG2MbVQgpjnMawrUM6Y/CSNyZgNrBeCMHN
U6RLmS5dyJ8QCKS6CelShcSENG5TpUkZUpzcu4dXq1vzUz9GmpGuiy8P50ij
0WikkfQ5Oud+/r0/+c/+8X/yb03T9C//nZ//+cf/7D//D/7sz/7Zf/Ef/rs/
3/xHf/ov/9N//qe/+4//+E///Hf//Hd/9u//yb/9c+L/+7Psn/zBNP3FawAA
AFY+n8/3vwAAAC+3DEoAAACISAAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAA
S1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADA0o0paQJGcMv5AQDg
RjfeBd174wdUuuX8AABwoxvvgtyAQecMUgDgnaQkIMUgBQDeSUoCUgxSAOCd
pCQgxSAFAN5JSgJSDFIA4J2kJCDFIAUA3klKAlIMUgDgnbpNSbv/jy3LReb/
hlYlUzXUry5cKrXeI009spb8UjUbG21zqscyJTN1LicWy0RXVFN/tG3FTU61
Id+xU+JgS1VbfJvZtEwv7XNubQAAo7jxLqi46tUtZWWd0frDe8t8tZv6JFV5
/awdTQ2nR0vua1tKqs3FFRV3ZT56FFu4qf5M22rqz7+t3C/5WfV7rbjsQVIS
APBOT0pJ9XehxWobpaTM9K1N3R0rKu/Mt7ah/k4+ut+jNde3sL7+TeEr37xM
U7dOqUxJxW45fSxLSQDAOz07JYWzKm+8T09JO274658v1E/Z16SaMvU7qyYB
HUxJmWX3He03pqRN65KSAABO0XlKWqqpsKaqmkW2pqRM/ZvWW7/IKSlpU/cu
l8pUm1pvtAHFxSurjRYrTqxXk7lqdlAoVWe4iuK69m1a3qZjAwDgMW68Cyqu
uj5ZFAukbpLPSkmppbauN79IPtTsSEnFxmQamdmiVMszJVukpGj9+bZl6s9H
m2jNmUYWm7opJUWnnEJKAgDe6W0p6eD0YuHjKWx3k3anpJrKi2usv4ePdtGq
QDGS7K5/X77I7JRoUytXFDY7lZXy66rcih2kJADgnZ6dkjL3xvlFNt2FnpKS
djS1vs7iiiqPgczW7U5Jn1+PhE09U7ktlfVn5HsyOuXclFSsTUoCADjRk1LS
J32bWpmGUjelu9u548a+Prjlm7G1bZXdW9nsTX3ySfd8ZlZ9B25qatQFKSn/
VkoCALhStylpCmyqdnWHGa1t6/TK1aVqyBSrb+qmZoR11jQ7tYrPIq/V11ZT
sqbmVM+slsrXn29bZqszWxedUrPh0SnRNheXrd+WrRpVCwDQuRvvgtyAQecM
UgDgnaQkIMUgBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J2kJCDFIAUA
3un2lAR07pbzAwDAjW68C7r3xg+odMv5AQDgRu6CAAAAlqQkAACAJSkJAABg
SUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakpEH9ttBnhQAA
MCgpaVBSEgAANCIlDUpKAgCARqSkQUlJAADQiJQ0KCkJAAAakZIGJSUBAEAj
UtKgpCQAAGhEShqUlAQAAI1ISYOSkgAAoBEpaVBSEgAANCIlDUpKAgCARqSk
QUlJAADQiJQ0KCkJAAAakZIGJSUBAEAjUtKgpCQAAGhEShqUlAQAAI1ISYOS
kgAAoBEpaVBSEgAANCIl7TD93vd15SKZqjL1p+qRkgAAoBEpaatld53Se5kA
tWOp3aQkAAD4kpI2iT73Ob3OmpqlJAAAaERK2iTTV/mvyc1fzwu/p7easiqz
rHNVz2p6qoZKUhIAAHxJSZvUPPfJ/54ojDDRKZ8gHxVfROusJyUBAMCXlLTJ
KSmp8kUq/qRepCZWkpIAAOBLStok9buk6Dfotj4MkpIAAKAHUtJWxVTiWRIA
AAxNStph9ZwoM3E1a1lm05RwFanp+ZZkSEkAAPAlJfElJQEAwJeUNKjTQ42U
BAAAX1LSoKQkAABoREoalJQEAACNSEmDkpIAAKARKWlQUhIAADQiJfUv/IfE
b3R3ZwAAQHNuffv3cwf9+Pzo4c+hAgDAG0hJ/ZOSAADgSlJS/6QkAAC4kpTU
PykJAACuJCX1T0oCAIArSUm3K+6CTEpa/QN0q4mpAjWVSEkAALyWlHS74j+1
XUwu4evoxNXrYiVSEgAA7yQl3W6KWRWQkgAA4DJS0u2iKWm5X7pKSQ4YAAAe
z03vQZmMc4pPRUqapVJPWCBTSb7Ycqtv7XgAAGjF7e7tUuFoWaDyWVL9A6Z8
JamSYcMcPAAAPI8b3dtl8tFc4PSUtHpstC8lLdvfvp8AAOAibnFvV9wFZ6Wk
fPzZnZIqtwIAAEbh5rZ/Nb8nSk0MC2TKR2urTElzUx1OAACMzm1t//LPkq78
qzxUHFQAAAzNDW3/hktJc7MdWgAAjMitbP/Cb8TdaF/jW3QLAAA04iZ2UL8t
9FnhksMMAICBuH0d1Fgp6cvBBgDAENy4DmrElPTlkAMAoHNuWQc1bkr6cuAB
ANAtN6uDGj0lfTn8AADokNvU/p3/D9Ud0G4Dty71L/7Ff93PX4tuAQDgLu1u
fTnLNOb/L2nHZm6q/2c2+a/+/M97+JOSAAAeRkrq30tS0ryxlWuRkgAAaERK
6t+rUtK8ycV1SUkAADQiJfXvhSlp3vDMGqUkAAAakZL699qUNG9+dL3FlLT8
1xWWb1dzVyVX1dZkMSkJAOBhpKTbFXdBMSXN/wDd9/VyynJWtHxqSj8pae6E
1drz+WU5d5mMimVW5aUkAIAXkpJuV/yntvPhJQw74fTl21X56JQOU9LcFXMb
6lNSamIxJXmWBADwTlLS7cLnPqs9kkku4axUSto9pauU9PXtoppv3ElJAADs
ICXdLpqSlvtlU0o6mImKKakflfllFXlSP0HyuyQAAGbfG867WzGw1lng01lK
uru//+qIrf837rb+LklKAgB4OSnpdqlwtCzQIiVtjUi3p6RVz0hJAAA0IiXd
LpOP5gI7olA+BO2ISDempGjPtPs37qQkAICXk5JuV9wFxW/B1eSg6KzMi05S
UqZziikp8z9IWr2N/iIpM11KAgB4NimpfzVfhPsKpxRnRaf0kJKKR2b9N+5a
/0lJAAAPIyX1r+a7cNf8XXOoVB6TUhIAAI1ISf17T0radDRKSQAANCIl9S/8
+tyNmm7jpkXC//nRjX+NugUAgFs0vfWlnd8W+qywUidHYA9tAACgE53co7LV
A1JSV8deV40BAOBebg4HNXRK6vCo+7ant1YBAHCLDu9XqTFoSur2eJtb1Wfz
AAC4Urd3reQNl5I6P9KWbeu5nQAAXKDze1c+4/8bd7sXvNgkKAEA8JdGuYN9
s2nY/1/SWEfXqqkDtRwAgHONdR/7TiOmpBGPq7DBw20CAACnGPFu9m3GSknj
HlHRZg+6LQAAHDHuPe17jJKSRj+WUo0feqMAANhh9DvbN+g/JT3jKMpswgO2
DgCAes+4vx1acRcUU9L8D9B9Xy+nLGeF5efp0WI1KelJx09xL1zWEgAA7vWk
u9xBreJMtEA+uaziTzh9+XZVPjqlJiU978gpbs7DthcAgJTn3esOJ3zus9oj
meQSzkqlpN1TwpT01GOmZqMeueEAAKw89Y53INGUtNwvm1JSfQKKLltMSQ8+
Wio37cE9AADA17Pvey+QyTin+HSWku7u77YEJQAAPlJSB1LhaFngmpSUj0hS
0r6SAAAMR0q6XSYfzQV2RKGtKakYkaSkI4UBABiIlHS74i4ofguu+Lr+rW/c
NS0PAMAQpKT+1XwR7iucEs6K5qlMSSnp9EUAAOiclNS/mu/CXfP3+ENl3wY+
vlsAAN5GSuqflHSZ3Rv4+J4BAHgVKal/4dfnbnR3Z7R1ZAMf3zkAAO/xhlvf
R/ptoc8KR3RwLBhKAADPICUNSkpq4fhYMJoAAB5AShqUlNTCKWPBgAIAGJ2U
NCgpqRFBCQAAKWlQUlIjZw0HwwoAYFxS0qCkpEZOHA5GFgDAoKSkQUlJjZw7
HHbUNg9JYxMA4C7uxAYlJTVy+nA4EpRatAcAgCIpaVBSUiMthsPWOpflDU8A
gOtJSYOSkhppNBzy1U6/FxY2PAEAriclDUpKaqTdcKiv2TfuAADuJSUNSkpq
pOlwqKzcv94AAHAvd2KDkpIaaT0cauo3JAEA7iUlDUpKauf2oGRIAgDcS0oa
lJTUzgUjIrOK1b/kAADA9dyPDUpKaueaEWHcAQB0S0oalJTUzmUjwtAD4Bb/
feDuFkF3pKRBSUntXDkijD4AriclQZGUNCgpqZ2LR4QBCMDFpCQokpIGJSW1
c/2IMAYBuJKUBEVS0qCkpHZuGRGGIQCXkZKgSEoalJTUzl0jwkgE4BpSEhRJ
SYOSktq5cUQYjABcQEqCIilpUFJSO/eOCOMRgNakJCiSkgYlJTV15f8yqdI1
7QHgDaQkKHIDNigpqSmDAoAHk5KgSEoalJTUlEEBwINJSVAkJQ1KSmrKoADg
waQkKJKSBiUlNWVQAPBgUhIUSUmDkpKa2jEo6v8dhgu06BMAHkNKgiL3VIOS
kpraMSh+LvLj86OHPyMagDwpCYqkpEFJSU1JSQA8mJQERVLSoKSkpqQkAB5M
SoIiKWlQUlJTUhIAwJtJSYOSklrbOi6kJACAx5CSBiUltdYoJS3/Jbrl23Bu
dLqUBABwASlpUFJSay1S0rLMMgFFy0QLS0kAHOd3SVAkJQ1KSmqtdUqqT0Zb
v8tnRAOQJyVBkZQ0KCmptXbfuEtNjD5U2vFzJyMagDwpCYqkpEFJSa21+9cb
wl8YpVLSvn8RwogGIE9KgiIpaVBSUmut/4271M+RPEsCoDUpCYqkpEFJSa11
kpJ2BCUjGoA8KQmKpKRBSUmtXfZv3BVT0tagZEQDkCclQZGUNCgpqbVGKSn6
fz4KJ/r/JQHQjpQERVLSoKSk1lp/467dnxENQJ6UBEVS0qCkpAtsGhpSEgCj
kJKgSEoalJR0ga0pqR/t+gSAB5CSoMg91aCkpAtcMzTEHAAuJiVBkVuyQUlJ
F2g9NDJPgoxKANqRkqBIShqUlHSBdkMjH46MSgCakpKgyP3YoKSkC7QYGvlf
Eq2y0ulrB4CPlAQVpKRBSUkXaDQ0iinpIygB0JKUBEVS0qCkpAtc+Y271RrD
FwBwFikJiqSkQUlJF2g6NMKI9EmEIyMUAOBiUtKgpKQL3JiSMq8BAGhNShqU
lHSNdj9NitYvJQEA9EBKGpSUdI1G/8xd5SxBCYAW/C4JiqSkQUlJ14iOjiND
Jr9sJiUdXC8AzKQkKJKSBiUlXePclFRcsBiLjFYAjpOSoEhKGpSUdI1iSppH
UHEo1Qy0mlhkwAJwkJQERVLSoKSka4SBKPz/HEX/h0eZeipXVz8FADaRkqBI
ShqUlHSNmm/cFf+NhU1DTFACoDUpCYqkpEFJSdc4npK2jq/KGgxbAHaTkqBI
ShqUlHSNypRU8/8/2r3Gg9/iA4AVKQmKpKRBSUnXqP8nF8KhtG9kbXpyZPAC
sIOUBEVS0qCkpGvs+4fpKhc8pTbjF4CtpCQokpIGJSVdZuv/5KhmkR2r8zgJ
gLNISVAkJQ1KSrpM8f+CtBpEBwfUjjRkCAOwiZQERVLSoKSkyxz8d7zPWl0x
rB1cLwDvISVBkZQ0KCnpMvUD5JShtPuZkYEMQCUpCYqkpEFJSZepHCBnjaMj
36wzlgGoISVBkZQ0KCnpMv2kpJq1GM4AFElJUCQldW7qyd2dcY+aDT+xc/JV
FVf02t0EQD0pCYrefPc7hJ9758fnRw9/rz1OLg4mB1NSZRkAADKkpM5JSbc7
HltOXF3lGl+7swAATiEldU5Kul1mw1v0yVmPrl67vwAAjpOSOicl9SC67Y06
5MRHRW/eZQBk+F0SFElJ9yr2v5TUg3Db2/WGlARAa1ISFI2SknY0cpTtyv8j
cjUpaVVJau73dbG8lBRabXvTrjj3Z0dv3msApEhJUPSwlDTEtixNMasClRGm
5vX8NlVGSopabnvrfjj9UH/zjgMgSkqCoiFS0reF537G3oloSlrulCMpKfpc
SUraYbk7LlvXKcV2FAbg8aQkKBo3Jc0tX97BLieG01OzwsrrG9bU5+yUVHze
lF/Fsute5chBsm9d55bcWhiAZ5OSoGiI+94p8Ul+mHGWBaKzwpJhJVdKhaNl
gU0R5qsmJa0K1z9LGuKYOdeVm9woJe0oD8BTSUlQNMQdbyZBpF580ilpVVUq
gl0jk4/mAlufJf1Y/CsNxfI7UtKy5Vf1082u3FIpCYDWpCQo6v9eN5WMPnUp
6RN8xS5V/40pKV/gxJQUhqPdKamy/Q9w8TZuWpegBMAOUhIU9X+XezAl1T9+
6rMfjqSkH+nfH6Veb01JcyP77L3jokfRBWtsUXj3Iug04GGkJCjq/P42/Hbc
/DZ8Hb4IX39+3eRoJV2piTBTIDq3OGV3SpqbmirTYcfWuCVBb12XoHQBPQY8
jJQERX1GgxMtt27ELa180HPBX2XvhcVWKXUUqwZf1v4LUtLupV5rdRrp+XMV
gBpSEhQ9/kIvJV2ckj7BQTViSopmvbtWfW75I0u9TfiUNsxHehIYkZQERcPd
vu4w4l36LHqfdpfjLW/US+eKtvOyxu9Y0b62jbI7ejClHyzqRmBEUhIUDXTv
ytJvC31W+DVcUEq18MqW7wik16zotU5PSSd+dnHc0d4BBiQlQZGr5KCGSEnD
3ZVl2nZls3esa3fzet4d/ZiClDRP2deB04DfpAWeREqCos7vWmn06fE+Jza+
RV8dlG/VlW3e19VXru7lpsP/esMkJQG3kpKgqNtbVr7GvZs6N3C1VmzSg1PS
8cXf5nh3jTuuAeAl+rxlZfa8u6lNT68uU9PsUza/xr51HWnhlVv3AMe7a3rc
uAaAh6m8ReQuD76bGmvTnp2Sji/+HvXJOl/J7Yd9o3ENAM8gJXXuwXdTY21a
/ynpyIKnLM6seF6NHvyr55u7D+bV4vkK7XR4J79LgiIpqXP1N0sHb66kpJoG
n9sDp6/olG+CHayBT/C10miB1KEYfV1/JK9eFyu0x+GdpCQokpI6t+lOqWnu
kJLekJLOquTlpphVgRYpKX82kJKAmZQERVJS56SkC/4ek5IOLntWDURT0vJk
uzUlLR8Tz6+XUyoDkZQEfElJUCQldW53SlremEXvrPpPScv2R6es7j8zC1au
CC6QOfhXJVfjeooFpSkY18tla1LS5BIA7yMlQZFLZOdSd1P5lLR6Ed5cDZGS
ovd1qynhJmduCA9u2mUj5eCKTmmn08IRqXC0LFBzwE/BBwL5kV5TVfTgdyGA
t5GSoMjFsXOnp6R9ESkTJfYdP5V5Lf+ReObzcynp9ma8WSYfzQXqU1JNOMqn
pMxwWDbP5QDeQ0qCIpfFzu1LSavU0C4lbTp+VveNB1NS5f2klNRJVa9SHBdX
pqT8oAjb6aIAbyAlQZELYucOPkuKTt+XlVJ3U8XjJ1WsRUrat40PS0mn1NCi
KmapA3slM2s+zpcvwmVTFRYPfpcGeDYpCYpcCjtXf7efujtavl2+OJKSVrde
0WZn5tZvWqpMOH2Skk6toUVVzPaNwRZ/+f1r78NTSUlQJCV1bneiKQaN3XdT
kQ+1Fz8Arz+iGqWkH9uT4PNS0lmVnF4VX6OkJOCppCQokpI611tKikakfUfR
jpS0emBUU1JKOoWzxLky4+h6W9vctGeAa0hJUOSq17npwD/c/XXiZ87Hb7Q2
bVq4ltSmRaecnpI+V4WFU9ZyelOdKPhy1YAHkJKgyPWuc3UfBt9v36adleCO
B8D6Nu/Y0q3OWsvprb1m8xnC7oEP9EBKgiJXus51HiVSQanmoOp801Jtrix5
RLcpqVGdjMsVBAYlJUGRa1znRowSn+qU1I8Tt+u4E9dyeoOv6QHGsmkQAT2Q
kqDI1a1z0/gpaT7GKg+23Su6gJTUqE4AriQlQZGU1LmxUlLqMc3yMCvWIyV1
npLaVcszODwAeAApqXP1KWlOJTvmNn2W9AkeLW1aduu6mhouJWVqO7gW5w0y
tn6XFQB640LWuU25JhORimWkpH7WNURKOqUGHs8lBoBBuYR17jEpqdE37nYv
ss+IKSlV4Sq6ht+N3FcthFxooDd+lwRFLl6d252SVj8Omqdc8427cCs+bf71
ht2L7POAlDTFfDYm2XZN5cFcbqAfUhIUuWx1bl9KWr24/llSuBWNCh9cqs8V
Xf8s6RMkqYOVQ4oDBnogJUGRlNQ5KanpUn2uqMUqwjrPSkk7ygNwLykJiqSk
zh38xl10+sUpafm1rsryu1e0b8E3rKUmJe34xl2mfihyAYK7SElQ5CLVuYPP
knpISTs2+fRlT2z8oCmpWGf466Rz64cUlyG4npQERS5PnasPNfMjm/DttLAv
IklJLaq6eC01Kald/ZC39aEzcISUBEWuSp3bl2tSX7078jdESkotvvrRzZHn
JlJS60p4OVcluICUBEWuR52Tko4sPsV8fj3st65u3JSUqfbEj/GdTziFaxM0
JSVBkStR53YHnNU37t6TkqI1rKasktTBylu4OCWNuBYAdpOSoEhK6lz0achd
Ltvk02uYpKT2NV+/Ft7DEQXnkpKg6Mq7X07020KfFe52ygGZiUWfF3/j7nMs
Ie5bC5zC1QpOJCVBkevOoKSkI5VMr/zXG+aar3k+6MRCC65ZcAopCYpccQYl
JR2p5+AqLhgyjVZx8bconVtoJHMAu6gdV/ju9dPd3f0XkZKg6FXnhCeRko5U
dXAV0cXnoXTKmDp9VN51P+D0QlPhYfy2e90T6bqvl/SDlARFbzgVPJKUtLuq
41fATPiaZ7UIYgfd9ampMwytLcfdCx8KnEJ3hZ7dJ1ISFLmUDEpKuqW2fJ3L
6R2mpM/l37hbrveaFfFydx3hQ9NRGQ/uHCkJih58Bng2KemW2lZ1ru7E+k9J
n5s+bHeS4QLRp6WOvSJdlKd/4LVcRAYlJXVYYSoxnbiKU9xyA3nLecb57VVS
KckxkKFzaugleCdXkEFJSR1WOHX8rzeE9V8/9u9anVPcG2QikgMgRc/U01fw
Qq4gg5KSbqwzn5KaruJEt4z9W55eOcW9k6BUpFvqPa+v/C4Jilw+BiUlHanz
4CqekZIuW8vtK220xvzDi4u12MCu3N3Bv7i7M07zpG1p7Xl9JSVB0cPO+e8h
Je2r9pT7nOji595B1ddz3a1hhdO37rh26/pZ8x/+4b/p4e/K/rzLz238oz/6
X3r4e0xvP2ZDrvG87pKSoGjTvQ39kJJ2VLvjfj5T2ymtOl7/z5I/Pj96+Osw
JTVdkZR0JSnpdNENOes8Wbn4iZ15pM0XN7UTUhIUSUmDkpI2Vbj7qUemzlPa
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
6t7HXJt4s+cdvc/bonqnbLuUVCkTfIqZ6JQ9tTslnbX245XcvordXPoHJSW9
kJ5pqqZ7xSUG9byD9nlbVE9KulIm+4SPk8JiLYJS/VInFrtAPy2ZueIPSkp6
IT3T2qarT83J0wmWTqzu5eb7t3GPz+dtUb1Ttl1KqpRPSeHbVbGzDsitQal+
7f0MmX5aMnvJKeV5pKQX0jOt7ejh/GVrx6d/cKIp5vPrpX+sg/N5W1Tv3G2X
kioVU9InEUlOPyCPp6TwmFlVGH27erHaqMpZmXrClqReX+/GVXOElPRCeqa1
gz0cnszD+xm4Rer+LZw1iudtUb1Ttl1KqhR2aTQOhCVbnPzrKwwbmZoeLVkZ
eWpmZeqpaUC4CVdy7R6UlPRCeqa1s3p4Sqssdr1TNtzW3aKywam3YQ03b8+v
Ttmi4bYub9q77Uunp6Sbu/JXB7dltV2pKdOvPT+ld0TrJkXLRHsjbHxqc258
kZp4vdMPJ64hJb2Qnmnt9AtZ/vL98/WPz48e/locWj/r/Ht/73/t4a/R1t2+
1zbtu/BOKXMT8nPK3/yb/2cPf5mt27RFq5J/5+/87z387T4yd2/7UouU9I/+
0f/Yw1/TSFIZhZqmpKKahnWekua3UhI7SEkvpGdauyYlLa8It99jS0m7t+72
vXZk3823H9HFh0hJm7ZoVfL2fHQwJe3e9iUpqXKjomfv5azllOissGRrUtJZ
pKRBSUkvpGdayAeZFjXP9U+D32kXN//2fCQlZdqfn3t7PtqXkipL3p6PWqSk
raSkpypmtPBKlCqcunItX2RmpSopLr5saruOqhE2iSFISe+kc04XPYEf7+ea
SqbB77SLW3d7PpKSMu3Pz709H0lJ9fbVIyXRv9t3pZQ0KCnpnXROCy1SUuV6
b7/H3n2nXeyl+pS06vkeUlLN1t2+1w7uu8yCw6Wk/MfRYeHb89GJKemyU1ZN
x96ej46kpMqPti64TLgz/+qhE+yLQUlJ76RzWmgUkYoVfu+0V6uuvzeey89L
RatK1b+q4cjWRReftuSdZeFNCzZNSfmt25pl6vfypoOh0dbNIeUrDC/z9CkQ
LhjWE60zumCLrduaZVaiBW58lnSNmo7dmmXCKUv5wo1SUn4Dl9NTxY4rtuTx
+tnwflrCJlLSO+mcRlpclcKbq9UqpkWQWd701twYr+6oU7NSE8MaTtm6VYHH
pKTo1u146FOzl6N7rWlKim7dKhBFU1I08kyLgJPKRPV1Ntq6HXEm+jo/8dkp
KdqxB1PSauL8+ruui1PSagPD7U1NPK7Y1fX1nN62t2m0i2lNSnonndPI8etR
sc5wFdOulBQWSC1eWf++Tc5v2ueklPStcPV2U80npqTV1rVOSfXVtti6MK0U
p0SfDRXnFh8ttdi6IylpX4EOU9LW3yXVdOzWiBQuMsVS0i3PklYbmKqzxU4s
dnV9Pae37W12dDs9kJLeSee0s+8yVFNh6jI3ZVPMt/Aqy6wmVt6KRycu32Yu
yvt8tqekWRiXvi9Wb/dVfuLWnZWSvnWu9vKmalts3b6UlC+2LyW12LrdKWn5
4vt69d9NlZ++dTf6dJaSGm1j/Xk+XOqskvUXoI97hsM29Tn9kJLeSee0s/Ua
VFlb5gI3xX46FA04UyI6hffVYVWZhDVP2bHVNVu341nSaqm55vC50ojfuIvu
mkykray2xdalEtCUCESz/Nfq7nqWtCqwIyXNVhOX6WlrzTu27kSnPEtaFdjx
dbsp+P3RLJWe7vrGXWqpHes60pL6SsLmzVVNQSiLFki1ZHerhvOSzXweKemd
dE5TB8+H4RUtf42bsnfI84Lh44aDz4+id+9HNja1dQdTUmripppPSUmZfbcp
zkR3x3JH35KSogW2pqRznyUtK2yxdcefJYWv91W7detOdDAlRQvse9xTk4a2
Vr6jQ/IbWD/xuGJXV1ayerGs/LPIQWH5zKyw/mdrtItpTUp6J53T2qYerrlt
yJxjp3RKCl+Et9M9pKR8gR0pKRqOpsPfuGuxdaekpPweb5qS8gX2paRU0tmU
klavW2zd7pSUmji95llSvsDWB0n136yrr/xgSqov0O7++ZSaU9em6dfIExbb
9OLx2u1lmpKSXkv/NDL9qqZYTZ35uanb5tWs1Nt8IKq88W50FZi2//+SwgdG
U8wF37ir2brdKak+FzdKSTVbV5Nf8pEnU6CmqrmSFlt3MCVNQSaaYg+bHpaS
iqbBU1LlNm66BNxlSiSjTywlZZYNNzO11FN1vqNJkZJeS/+0sDoTLt+2uyzO
kedrFVuiomXCifli4fQWB9XU4P8Pu++v0dZtzTLRXZPa3Z2kpLk9YYSZp4eN
jy6Yf7uavqynxdZtjUgry4nR11JSzXftwrerWalFbkxJo5i2p6TMi7Cq9/Tw
98C7uxVsJiW9lv45XfQ0OF+Xm6536/OIRn+N7kVvz0f9pKTh9l30x0TX//WQ
ktr9vTMlXfD38qvk6uK1fBu+/vx6Bcwsu6z/sm25nZQ0KCnptfTP6VJd2rqr
H3+nfXs+kpJ2b93t+UhKak1KIi/6BOrzspsQKWlQUtJr6Z/T3ZiS+mHrbJ2t
u97pW1evRUrqxyld9HJTLBm9rW8dToOSkl5L/5wu1aW6Gniq01MS12t9kVqm
znfmhXdu9QNISa+lf04XPQ06NwIPJiUNrfjUzGO1U+jDQUlJr6V/WlidCZ0Y
gWeTksZV+d1CV7Hj3AwMSkp6Lf3TiK+1A+8hJQ2q/jrlQnac+4FBSUlvpova
0bfAG0hJwwn+jYralLT8bdG+WeGLsFXR1s6Fo1/YSNUfrblm7aeHGilpUFLS
m+midvQt8AZS0ljCiFSfkj7ZpJOfFb5YZZ/o6qKFw6Wi6SZTc2rtqWqPk5IG
JSW9mS5qR98CbyAlDSQakbampBYviikpbP8nFj3Cemoav6qnvmfqSUmDkpLe
TBc1pXsB6MroKSm1RammVjZ+WU+La7eUNCgp6c10Uc3FItVLq0+06hcEgBuN
npJWSy1f1NScrycfyvaRkgYlJb2ZLvoEnZA5P6cmbo1XAHC7mpS0+jxw9Xo5
MTVrVU++cPQSHNaTan+43lQNqcaHaznF6RVyDSnpzXTRpxSL5hNp/SL5iQBP
4ndJQ3vYdarbzZGSNlkl2cpFMlVl6q+s5yxS0kB00eeklFRZM8DDSEnDefC1
qdtNk5Lqnf5QLxOgdix1kJQ0EF30qUtJqYnz29SHFWc2FO4zvdvd3d81KWk4
Tz2kex6w3TasN2EvHe+3VA35mhvtLylpLHopPySjd0qVo1jfMrqe7zqupB8y
pKSx1B/GrQ/73ZWPOBKdQCpleilzQM7Tly9Wdc5TVmWWda7qWU1P1bCJlDQW
vZSJPKtZqenRKamJMAoHcEifhKSksWw6hlsf8JsiW9OWtCYlVap57pO/4woj
THTKJ8hHxRfROreSksail1JRaPesmunQMxf0DJ2zIiUNZOuhKyWdxXmj0ikp
qfJFKv6kXqQmbiIljeXlvTQFwlnRt6tlM/W3azw04rjN0z9LUtIodhy3xUve
8lP61Ef3+aXylYQ1ZK7Lq2q7kr9VYBb2UrhPo8fVjhdhnfkXqYmbSElj0UtN
6V6G46CtoZdmUtIojqSkzM1h6k41c3ObX7C43vwtbp9BSUqqV0wl0Z6UkrZy
QNbQS03pXsbiiK2nr76kpCHsO1wrU1Jl+fpb05q11K+3B1LSJqvnRJmJq1nL
MpumhKtITc+3pEhKGoteakr3MhZHbD199SUlDeFgSvqk7/OlpBpS0qBODzVS
0lj0UlO6l7FEb06i1/fo9Eyx45/L7b7Na3TjZHR/SUn9232s1oyd6BA7KyUd
rKcfUtKgpKSX00tN6V4GkjpcMymppob8zUxmvWdpVL/R/SUlde5IRKr5NGPO
LPUfg+Q/PAkrXL4Ny0RX1Fsq6a09VJKS0FHt6FsGkklJn1iuWZWPTowuGH3R
jpTUlJT0BpmPNQyEGlLSoKQkdFRTupdRXJ+S8qMj9cnwFAjXEm1t+CJc16YB
a3R/pKR3kJIOkpIGJSWho5rSvYwin5I+QbRJ3SyF08MAUrxnSD11ik5fzso8
rqpfpJLR/ZGSXiP6McKOzxbeSS8NSkpCRzWlexnF8ZSUuo9K1ZkZHal66kNQ
ZcnMFhUZ3R8pqWOnHJ/L0ZSJSKlh3i4djDX6pKRBSUnoqKZ0L6M4kpIyySiT
kjIrnedmngRVNq8+WGVakmre1kWeR0rq01kRafk6Na6jw2f3hw+V7RmLlDQo
KQkd1ZTuZRTFlFT5Oj9ra4FUCEqV3JGSdg9So5tuHT84NwWfminHjTvipKRB
SUnoqKZ0L6Oo+c7M6uHLnDJWZVKzUnVuKpN/vZyYF13keI/B7U45MjOVFOvP
j/HU+A0rz58EipVv2t6mdpxeuFLlVeMal23yZSvqx772n94nzHQvoxjiWJ1+
vYO6t84heowXOuXIXFWyvM2oqX9KpJ5lbavXq/rDGsKq8pX3M0J336FxjZ97
58fnRw9/lx0nV67or/21/6eHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzE
Vd7ZkZLq23kNKalzUlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHH
bicl9eaWlFRZeFNKOvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQ
U9uRkrpy+qcHqbfFMSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH
5LSQmpVZqvg2fB2+yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4Uwx
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
/+AP/r8e/pwWiJKSTmF8PZs7q3rF9JFKUsXyUtKSA3KfMLZDIzUpaVPSOf4s
adW8TQMh+qHWwYujlETnpKTjDK7Hk5I2CZ8TpSamZq0uwUvh3FUl0cL5RYot
nElJo5uqEzEctIotK8WHRJnyxaXCkplG5sdC5tQ6FzjSRbfnIymJDCnpICPr
DYrXEfp0eqiRkkY3xcI4tBCNNrf8FY/zmrEwBR98Radv7aLb85GUFBVNx3e5
sR+kpIPu3X1c4/Zxyj5SEqEpcbMH55rGSUlzg+vnTlLSo/3skL/7d/+3Hv6k
pHEZVi8hJQ1KSiIUdp0BTguXfMpea1ObU7Oib+srj9aZiS1fq9f1s6SkIyYp
6S9JSVC06SpDP6QkQpU3gXDQzyPqb//tf93D39Zju/KStyOFhTXkk0vxdX6W
lLSblPQlJW2y78MZRmd3D0pKIpTpOiOdE42bkub2tx4OO1JSuEhmlpS0m5T0
JSXNiieEVQHX0/ewrwclJREqdp2+5RSjp6R5K9qNiK0pKVo+PyszV0rKkJK+
pKRZ/jlR/USex44elJREqP6rRBc0hgd7Rkqat6XFiNiUklKFU7OmX3+sJCVt
kkpJ385cvf1OmQKZGvJlpKQOhft3+vXJUWqpqxrIbdwyDUpKIlTfdTqZI56U
kuYtOndQbEpJW58lTVu+iWewr2Tyy2rWKjSlitUsIiX1LJqS5nOClPRmUlLn
MoP3epdt8jUrep5NXXflPuVhpkVKms8PYX4Jp9cUi558UjWcewyfWNvU8ndJ
mUWkpKIpm3Gm7cnoSEpiCKkD6eJDl+tlDgB68HPv/JN/8t/18HfZceKA3G1H
1+ltdpiCqDIl4k84Mfo8KPo2+iIsfPqmnVLn1PLfuJt+TUnFdR3fnCeZSk+C
5gJTLPKkJq6W9SxpIPlkFD0nuHl+CTu6c1ISm+wLSvqcTaK5Zgqe+BSLZaJT
faRqtIEHa84kl/k2bPW6ftYfLH6RtJwoJdUopqQwLq2e++STUVhSSupcKh+t
CqTe8mD2deekJDbZ3Xu6nXqPT0nzZh4ZUMXvwl3zZ2iv7E5J0WdJq9ryb7tK
ScxqRnoxSfFIdnfnpCQ2OdJ7ep5K0fgT5qB8sf5T0ryxO9YiJXWrJiWFCSi6
lJQEzyYldU5KYpODveeEQI3dKWk2UEqaNzm1ruj0qSeN+2Yw0+F/4241MVMs
sy4pCfrnFNq5KZGS5stfdOJy7qpkuGCqknNTUv3iDsgjTuk9u4C8aXtKSi0y
SkqaNzycEr2M/pzy4/Ojhz/DeSWVXOZdGf2W3WpWqsBKJiLdnpL8LgmKpKTO
pVJSmG7CictklCmTSkzhUgc35PSShM7qPWcGMiojz76UFA1ZnaSkT+J33FLS
QIrh5bI/KQk6516oc0dSUibvFBdpmpLmoy51d3FkRS93bu/ZF0StMs5XmHHm
6WGZcFamTGpdt6SkuQdCqwK35yMpKUpK+pKSljLDOfo2HO/XtZULRW9T6ce0
NyVN2adCO9LWvuMkdS+xPPCcbU50eu85RRCaEt+Ru/7v3oMzf2d1ez6SkqKi
V6W73NgPUtLKlL4VycxKTeEZbh+n5E3bU9Jsd0paLd7iG3ebzj/Ua9R7dgpL
k5SUvtme596ej6SkRp7RpVLSSib7rG6VozctzzgqWJGSOrcjJZ3yLKnpN+4+
UlJL7YKSXcNX1afkV+mwEz7ZlDQXW72unyUl3esZXSolrYS7dVqkpPDtqtgz
jgpW7r3KUDQ98XdJH9+4a6lpB9o78CnlxE/pWdJybup1fpaUdKNndKmUtFJM
SZ9EIErdzPAAUlLn6lPS9Pt/97ty4sUpKdyuj3+9oY3WHeikQeduPD6XWWlr
SgoXycySkm70jC6VklaOpKTlJyQ8id3auUyEWUlNDMtH68kXa5SSts6ixjUd
aDfRrR4Ozq0pKVo+NWuZwooBqofeeJhndKmUtFKTkj51v1HiMaSkzqVS0vV/
UtIoLutAe4o+RW9pTrzY1XxuvCklpQrnZ1U+YzJODwo/fky5u6XbSEkrmbyz
bxYPMOLQfpVHpqT8NcUBedCVHegEQj9SN67Lo/T0oJRZabtnSVLSvZ7RpVLS
UibzRqdEZw2al8mwQzuXvxZf7LJNvmZFT3V9B9pldGWq/uD3yCryp8qp8e+S
JinpPs/oUikJiq68++VEvy30WeFuDsiDbulAZxL6cWNKWhbYmpLC1JOZVRmR
pKQWntGlUhIUubcZlJREyo0daN/RgzAlTYuvxJy1ivzT9kyEmcuvXtfPem1K
6mRbOmnGQVISFElJnUt9YnmLyzb5mhU92I19eOWhAjWmU//1hsrT43Tg3+6u
zD71JY9vdSc62ZZOmnGQlARFbmk61/pSu+mifNkmX7OiB7u9D29vAMyOH43R
NJT/+EhKaiHs/88dtzHP6FIpCYqkpM5JSezQQx86t9CJ3cdhMQdlas49lb/c
vs3vR2qjlltXv5nX9XuFVl1WQUqCotvHKXmTlMR2/fRhPy3hnbbejp51B/tz
8X/wD/6nHv6eNAZX2zL9+mipvpLbr6cXX1WBfaSkzr3wfO6APK6rPnSSoX+n
f7YvJbUgJQFXcgPTuReezx2Qx3XYhx02iZdr+sUnKamFMCXNU6Qk4HRSUudq
zufzhf7H4n81uJIqv5zYyfncAXlcn314/CtM000/1uZJ2iWj1Vpuz0fPS0kr
0RNCcedKSV9+lwRF7jc6VxNeVvEnmnqi06df/08cnZzPHZDHdduHB084+z46
hqaPjVJrvD0fvSQlhRPzu3vrZ4+ZuTWXzh6uqlFSEhRJSZ3Ln4HDuamU9GPx
mCmVsDo5nzsgj+u8D3c3b/WJ8UnN4bEuTkarVWdiy9fqdf2s8K2UtJwYWhWo
jDD1n09KSfBIUlLntqak+gA1+cbdo3XejZVnntVNjpREUere+Ppm5JNL8XVl
sWJQeupISe3laEpanUakpI+UBBVuv5SQ1yIlFedKSQ8wRDdubWQqMUEPyWhp
R0oKF0nN2pqSmH12paRp8RnjlP1WhpQETzKfN+hT/vSbmRvOmjxLepNRunHT
KWi+yRll62hqdffblWljSoqWT82aFl/Je/M37qJS4WhZYFNKSiWjJSkJHqnP
6wuzrSlpFYXCWalPwKSkhxmrGytbO9ZG0Ui3yWhpU0pKFU7NCkOWlDTL5KO5
wKaUtAxKqSvmvqAkJUHn+r/WvFxNeKlJPdH0JCU92HDdWHMuGm6jOEv+vrdD
m1LSvmdJUlJU8SCRkr6kJCga6KLzTjXn3vCh/xSoLN/D+dwBeYpBuzHT7LFu
kjnFuDt9a0rKp6Hp2O+S7u6MvuxLSZWfQ0pJ8CSDXoDeY9+5t8WflDSWcbvR
SenlhntsFLUjJdWnISnpiB2fPS5fRHV+VY2SkqBo9CvR40lJ7DN6N47efjZ5
RjJayoSXeUtXr3fMKkYkKSn0wqtqlJQERU+6Kj1S6pOrW1y2ydes6Nke0I0P
2ATyLj63XGmqyC+7/zZV/sjuPWKSkv6SlARFT71CPd5vC31WuI+j8UQP6Ewn
qOe5/oOXW0hJ3ZKSvqQkKHr8peqppCSKHtOZj9mQN3tDMlo68yn+YXd3Rl/u
3hu/uLEfpCQoun2cknfvCXwl38hTNvZ4Jcye1J9nHWNcqebsAdxCSoIi16/O
TR1/N6AyQ23a2OOVMHtefz5vix5JMoL+SUlQ5FrWuT5T0qYnTZWb6Thc2fO0
r5m7O+Ov9NYevg4eLccPtsoFHT/wJSVBkUtG56bOUtLpN9KOwJSf3fI3/sb/
1cPfvTuo/yhX38IL3LXtByuJvm7k+l7ieRxF8Aa3XFipN42Tkoa4qRvIJCUN
4mf//PW//n/38HfNnjp9/F58gDmeOc5RBG/gTrVzvaWkuVXyTmtS0ihekpKa
jvRVtfOKUi/m8plzUbhsdF2wg6MI3sD97b2K/Z9PSfNdwff1cspy1mqRVA31
KWnZeClpn5pdf3s+kpJqPDglXTnAU1kmmnpSxcJZ0XrabAEv8oCjyO+SoMj9
7b2KQSOTX5azlkknzEHRYuGsrSlptRUt++mBanZ9MbwsrSbueHtvSqo8ior9
dn3DpselpCu7N1x18cUnnYlSs5ab42TFcQ84iqQkKHJ/e68pZlWgGJFWUzKz
Kl9vTUnsULPra57yhK/DF8WJ/aSk/P35atY1p69iw56Rkoqdf43TU1K+Htjn
AUeRlARFt18TXy56q7zcKfUpqSZASUn9qNn1B1NStGS+WD8pKTw1RU9WF5zB
ahpWn2LCKV/h2+h6T09J0S262JQOO9EXxbeVFV4mPs5f4+LevsYDtktKgqIH
n8QucMHFZeopJXGZz6kpKSxWU3kPKWnujU/6tqR182oatjslrSZGX4cvDqak
cBPulWpPps8/W75Tl6+nna46+UaP7IcHbI6UBEXPO3eNpXj5nlqmpFX2qXmW
5IA5S82ur8kvs9T36MK5NTWn1nKXTzYl3d6w+ogUFp5KIaiy/mJKWraZ1vRz
6El98oBtkZKgyEXzXuEdV1hgaxTKzErFq9RaUt+4c8wcV7PrNz1Lqpw4DfUs
aVUgteDtDTuekjKVHElJ+WOMFvR2xmM65wFbISVB0WNOWYMq9n8mv6SyzxQ8
Lap/0lSZkmpaTl7Nrm+XkjYFpVtSUqpAzcTrG7bp63ar8t9qaxasT0mS0Y10
e94z+ucBWyElQZEraefyEWa+F8r8eihTPixQn5Lm5l3fJy/ROiXVB6UrU9Km
MtecvmrybGWEmbV7luSUfi+dX0Mv9UBKgiKX1M7Vp5jWf6njxCHUSDHCzLfE
qYnL2/LoItEa7kpJlVYfAtzdnL9Qk2KiySj/jGl3Srq7P95L59fTV7eTkqDI
VbVz/aekuZ2X9clLVD7oueDPzs07KyWlAtGmlPQxGO+j5+vpq9tJSVAkJXVu
6klNU6/pljeYpKRBTBX/QPdX+DYzKzWlmJI+bkFvkun21elxeVLdeqYNq920
4L5jY1n/KUfX6Ifo6O3/SElQwZ3toH5b6KpCh9NZpKRRVEaYC/5W9+E39skL
1XyOlHp7ZMddttPPrXz043P09n+kJKggJQ2q25T0cVCdJPyE+UZ3d0bXpi5T
0ucRN3IDKfb2aiilXh9Zb9M9fm7lox+co7f/IyVBBbdAnbv4Zjhva8sb9Ql0
5e5x+Yto227plrcp9vP066/Gpli6SVWyLDCls3B08eWxsVw8evCsagsrD6sK
F6k86oY+Modu/JeUBEWuoZ37uXf+m9/9roe/HceJowt6YBheoDIlfYK49CmF
i2geiS4bjcn5tYf5K1Ng6yJ5Qx+WQzf+S0qCIvexnRs6Jc2bcG6fAFsZhq0d
TEn5SjJX6tX08G20QH0IqixZsxX5lo9l6MZ/SUlQJCV17gEp6eMwIy36Sfjy
bf6jcurpvabqU9In+xulZYHwqU1xvdFiqbCTSWr14ShTZ97QB+TQjQcqufHo
3DNS0rwtp/QJD1P8UD1/P0k9vdfOppT02XhUr5JLZbWfdKKJ5rJogR3PkioN
fTQO3XigkpR0r2L/Pykl1WwvL7QjJXm0tJtOa6R4Js88u6m5ECwLh9WmKllN
X77Nv45WHhVdpKLDxj4Uh248UMmdxr1Wl5hogXxy+fq+Xk5ZzoqWX068LCUt
txq+pu0pKfWWGjqthbF6NTOmLqtzrB5bGbrxX36XBEVS0r2m2KeCqwKZ2LKK
P9HUE52+nHh9Svo48FhYfS49T8wX+DziRuUuuu50Y3WplHTQ0I3/kpKgyM3q
vaKdv9wpqQgTTk+lpOKUW1JSZvN5m9QoKBZw/Byh987VW38WB0j0k4dTVlpZ
Z2899jZSEhS95E5j+lVqeuiCkpnWfrakpMpM1FVKynQC75EaBfkCxVkU6b0T
ddKZlQOnB5037/GkJCh6/D1q5xu4alvY2senpGg/8CpS0o104Fk66UkpiUpS
EhR1HiKOGGLT5gdGmedKp6ek/NtbUtJn+/4qPrO7UrtuebxoHy4nFgtwkG48
RetuXI2IcPonGBdz+WgNq9pS9bQba0MfeEM3/ktKgqKn3mmMslHF/p/O/l1S
fu6NKWne3nBKdNU/J/7hH/6bHv5GOdggxTF83AV9mE9AYTOWSSdVrLKe07el
XbXXGLrxX1ISFD0yJT1pizIRJpV9pvSjomiS6iolfbKflK6K3Z6PpCQe45HX
gitdk5LC19HnR2GZ6IvwTJuPS+ca+ngbuvFfUhIUuTJ2Lh9h5utaOKU4K1XD
7Slp3vDPr1+rCwvcno+kJB7GwbzbLSmp8hlQGI7qF5eSooZu/JeUBEVSUudq
8ss1f9cfJ2HiW829PR9JSTyP43mfa1JS6mFQZUraMbHRdo1+mI3e/o+UBBWk
pM5JSftS0rzI6vX3bU0xKYnXckjv07rfVk+C5onLM+TqRbhINBCF9bTeotGP
sdHb/5GSoMLDUtKTtuUrTAo36mHDlwWK4aX4Oj9LSuK1HNU7tO6063dKuzWO
foCN3v6PlAQVrr/7bepJ25L320KfFR5RE9b2paTp94+NpCTIc2Bv9bCU1HR1
Ix5dPXx+eCIpCYqGHuOhJ21L3rNT0pKUBHdxbG/V9OHLZdfr1isa9LiKNnvQ
bflISVBBShrUe1LSynzE1iSaTCYKJ+6LSFISz+bw3kqP5Q3dP6vGD70tUhIU
SUmDem1Kmu1OSTMpCWo4wjd52FX1XKP3jJQEr/Kw8/mTtiVPStqRklaLZL6G
JyXBkoN8Kz0WekafLLdi6C2SkqBISmJQlaEm87Oj479IeltKCn8j9ip3d//N
9MBWjp9P9v8MPqh5Qx6zRUDKk85dn77PWssrxfzf/GV0Ch7uZ/ZXdO41HXLL
UTRtTElz/6TeSkkpD7vJ2U0/bN32eNq8SaM+GbQ3LnN3r59vkpLgNR52Hut2
W6Zfn9GnTrOpYuGsfP3RGpq6vuenA7nm3L9uj7pTPHvr9nlzn2za9p+Ff3x+
9PD35l3G6R524wSkPGyw97ktmVBTmXcyr/Ork5KkpN0ednI415s7J7Xt0bPZ
7flISuJ0zxj+fpcERc8Y7LM+tyXTqrtS0urrENG3n1iaW84qPsBKFT6FlNTa
U7frLC/vn/y5a55yez6SkmjhAUeUlARFD0tJfeotJa2yTz7sRBNTND2Fb6Or
OMvUk9O37naP3KjTPbWXKrdrVSxcapKSuMSNJ/97Hek0KQmKjg80ijI9HM6a
0hmn5twYLrKpzJSIOdEX4cRoCx1gw7HL6j2yr+o3Kj/Sp1hKmk8R39fh9HnW
/Lr4NjpFSnq8U8LC0I70gJQERS8/w1wjE4U2paRw2WIeuT4lFVdH/87dZdOv
VhN3vK1p8GVntkce3qsxPo/u4hkpnBWmlVWuiU7PTIy+Ts2Vkh7MPl3a0RtS
EhQ9LCV1uy2pLJMJLOHb6JRw1qaclSqff5GaW5zOEE7fX5XHWHFiTf2ZiS2O
wycd21PMJzHkVwtGZ60CSyY0paJNZq6U9FoPu285y9ZukZKg6GFnm563ZXnX
sZoSzgrL5/dUtJ5otdHaMgtGX3yCG6fUDVU4kc612FOrgy2zonBusT1T+ha9
OOW4Rx7Y4bkoNWs5Pdrh+ZRUk6EyS02/xqhvG3zj7vHszZRNPSMlQdHDbl+f
tC3d0snPdmNKCovVNCafklZR/fSte+Rw2JGSorPyKWneI9Hv4OVTT80X9qSk
R7Ir8+r7R0qCIilpUL8tXFzhezr5nRqlpDCkhLfiq7mVLUnFrjA9NTp0nzci
MrvmxJRU+UW7midQUtJL2I81KntJSoIiKWlQd6WkRh/I04/Wz5IqJ256lhQ9
LKNT6ttc7/HDYfVULl9sNeV4Sqr50p2U9BL2Yw0pCc7ysDveJ21L3o3Pkni2
rlJSWGwViDI5yLOks2x9qLecko9F0RyUnyglvZn9WENKgrNISYOSkmikt5SU
b1IxJaXqPNHjTzsnpqT590RfmYmZt5nCmTDVoGO41Gp0rz4tWcovu2lF+2qo
X9Hxs1O4yVISnEVKGpSURCOnD6LorctyYnh7k3+bqjla52dxlmt0unv2aSdz
5xmWDKdkflJ04l9xRc/eRy+RzwLH40ZxjS0UV7Fj6ElJcBYpaVBSEo28ZxCd
RY99SUk0JSXVl6lZSkqCIilpUFISjbxnEJ1Fj6VMPbm7Mzhq2pKSljs9+npV
LPUiMzds3mrWsszqIEw1I/o6OqvYmHgnLkhJUHTk8lF9dXq7c3fZl5REI5VH
7L4DezkiGg2N6Lpar+iCtcDLrQZa6m30JDMF+SVVJvoiumw48JezlmXqm1Hf
qmglqc6JkpKgaMeNRNOb/0dq0WNSEo1cEF4uq19KgseoT0mpiZlZ+RfFufky
q09Ni9WmQlyxksyUkJQERVvv3t0PHHFi70lJNCIlHVkj0MjQKSnV8h3PkjKV
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
06cvSA==
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 15->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3u9UyjH2QLKFIi7SJF0iTKm/ZVquwqUUraILo02WITIUUbaQcJ7SpP
xQnkEDgEDuCGCiqUliAqKChyAlSLO3vx+vXt+fTH2DP2demvR15e4/F47LH9
W17rfv7On/03//S/+o+mafpXf+Pnf/7pP//v/slf/uU//6v//D/9+eK/+It/
9V//i7/48//yP/uL//bP/8Wf/+Wf/tl//HPm//uz7J/9J9P0H6YBAABY+Xw+
3/8CAAC83DIoAQAAICIBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEs3pqQJGMEt5wcAgBvdeBd0
740fUOmW8wMAwI1uvAtyAwadM0gBgHeSkoAUgxQAeCcpCUgxSAGAd5KSgBSD
FAB4JykJSDFIAYB3kpKAFIMUAHgnKQlIMUgBgHfqNiXt/j+2LBeZ/xtalUzV
UL+6cKnUeo809cha8kvVbGy0zakey5TM1LmcWSwTXVFN/dG2FTc51YZ8x06J
gy1VbfFlZtMyvbTPubUBAIzixrug4qpXt5SVdUbrD+8t89Vu6pNU5fVv7Whq
OD9acl/bUlJtLq6ouCvz0aPYwk31Z9pWU3/+ZeV+yb9Vv9eKyx4kJQEA7/Sk
lFR/F1qstlFKyszf2tTdsaLyznxrG+rv5KP7PVpzfQvr698UvvLNyzR165zK
lFTsltPHspQEALzTs1NS+FbljffpKWnHDX/984X6OfuaVFOmfmfVJKCDKSmz
7L6j/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT
6402oLh4ZbXRYsWZ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4ti
gdRN8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnT
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
nrI4s+J5NXrwr55v7j6YV4vnK7TT4Z38LgmKpKTO1d8sHby5kpJqGnxuD5y+
olO+CXawBj7B10qjBVKHYnS6/kheTRcrtMfhnaQkKJKSOrfpTqlp7pCS3pCS
zqrk5aaYVYEWKSl/NpCSgJmUBEVSUuekpAv+HpOSDi57Vg1EU9LyZLs1JS0f
E8/TyzmVgUhKAr6kJCiSkjq3OyUtb8yid1b9p6Rl+6NzVvefmQUrVwQXyBz8
q5KrcT3FgtIUjOvlsjUpaXIJgPeRkqDIJbJzqbupfEpaTYQ3V0OkpOh93WpO
uMmZG8KDm3bZSDm4olPa6bRwRCocLQvUHPBT8IFAfqTXVBU9+F0I4G2kJChy
cezc6SlpX0TKRIl9x09lXst/JJ75/FxKur0Zb5bJR3OB+pRUE47yKSkzHJbN
czmA95CSoMhlsXP7UtIqNbRLSZuOn9V948GUVHk/KSV1UtWrFMfFlSkpPyjC
droowBtISVDkgti5g8+SovP3ZaXU3VTx+EkVa5GS9m3jw1LSKTW0qIpZ6sBe
ybw1H+fLiXDZVIXFg9+lAZ5NSoIil8LO1d/tp+6Oli+XE0dS0urWK9rszLv1
m5YqE86fpKRTa2hRFbN9Y7DFX37/2vvwVFISFElJndudaIpBY/fdVORD7cUP
wOuPqEYp6cf2JPi8lHRWJadXxdcoKQl4KikJiqSkzvWWkqIRad9RtCMlrR4Y
1ZSUkk7hLHGuzDi63tY2N+0Z4BpSEhS56nVuOvAPd3+d+Jnz8RutTZsWriW1
adE5p6ekz1Vh4ZS1nN5UJwq+XDXgAaQkKHK961zdh8H327dpZyW44wGwvs07
tnSrs9Zyemuv2XyGsHvgAz2QkqDIla5znUeJVFCqOag637RUmytLHtFtSmpU
J+NyBYFBSUlQ5BrXuRGjxKc6JfXjxO067sS1nN7ga3qAsWwaREAPpCQocnXr
3DR+SpqPscqDbfeKLiAlNaoTgCtJSVAkJXVurJSUekyzPMyK9UhJnaekdtXy
DA4PAB5ASupcfUqaU8mOd5s+S/oEj5Y2Lbt1XU0Nl5IytR1ci/MGGVu/ywoA
vXEh69ymXJOJSMUyUlI/6xoiJZ1SA4/nEgPAoFzCOveYlNToG3e7F9lnxJSU
qnAVXcPvRu6rFkIuNNAbv0uCIhevzu1OSasfB81zrvnGXbgVnzb/esPuRfZ5
QEqaYj4bk2y7pvJgLjfQDykJily2OrcvJa0mrn+WFG5Fo8IHl+pzRdc/S/oE
Sepg5ZDigIEeSElQJCV1TkpqulSfK2qxirDOs1LSjvIA3EtKgiIpqXMHv3EX
nX9xSlp+rauy/O4V7VvwDWupSUk7vnGXqR+KXIDgLlISFLlIde7gs6QeUtKO
TT592RMbP2hKKtYZ/jrp3PohxWUIriclQZHLU+fqQ838yCZ8OS3si0hSUouq
Ll5LTUpqVz/kbX3oDBwhJUGRq1Ln9uWa1FfvjvwNkZJSi69+dHPkuYmU1LoS
Xs5VCS4gJUGR61HnpKQji08xn18P+62rGzclZao98WN85xNO4doETUlJUORK
1LndAWf1jbv3pKRoDas5qyR1sPIWLk5JI64FgN2kJCiSkjoXfRpyl8s2+fQa
Jimpfc3Xr4X3cETBuaQkKLry7pcT/bbQZ4W7nXJAZmLR58XfuPscS4j71gKn
cLWCE0lJUOS6Mygp6Ugl0yv/9Ya55mueDzqx0IJrFpxCSoIiV5xBSUlH6jm4
iguGTKNVXPwtSucWGskcwC5qxxW+e/10d3f/RaQkKHrVOeFJpKQjVR1cRXTx
eSidMqZOH5V33Q84vdBUeBi/7V73RLru6yX9ICVB0RtOBY8kJe2u6vgVMBO+
5rdaBLGD7vrU1BmG1pbj7oUPBU6hu0LP7hMpCYpcSgYlJd1SW77O5fwOU9Ln
8m/cLdd7zYp4ubuO8KHpqIwHd46UBEUPPgM8m5R0S22rOld3Yv2npM9NH7Y7
yXCB6NNSx16RLsrTP/BaLiKDkpI6rDCVmE5cxSluuYG85Tzj/PYqqZTkGMjQ
OTX0EryTK8igpKQOK5w6/tcbwvqvH/t3rc4p7g0yEckBkKJn6ukreCFXkEFJ
STfWmU9JTVdxolvG/i1Pr5zi3klQKtIt9Z7XV36XBEUuH4OSko7UeXAVz0hJ
l63l9pU2WmP+4cXFWmxgV+7u4F/c3RmnedK2tPa8vpKSoOhh5/z3kJL2VXvK
fU508XPvoOrrue7WsMLpW3dcu3X9rPlP/uTf9/B3ZX/e5ec2/u53/66Hv8f0
9mM25BrP6y4pCYo23dvQDylpR7U77ucztZ3SquP1/yz54/Ojh78OU1LTFUlJ
V5KSThfdkLPOk5WLn9iZR9p8cVM7ISVBkZQ0KClpU4W7n3pk6jylbcfrHzEl
bdrAI6Skx5CSTpfakOX8g0Fp0/wj5jqbflbzmF3/JSVBkZQ0KCmpvjYpqcOU
tGkb+yQlXUlKOt0jU1Jvi/RMSoIiKWlQUtKmCqWkDlPSps3cx7OkgeQH5taU
tBrvL0xJxRPd1pS0qjB6Ul2WWU6spqOFw5epRkYLhyVTDU41I7/SzPxBSUlQ
VDyR0icpaWud4QX9YIWnNOx4/dPIKWnTlvZmqkhJ8/G2mv6+rCn2tpSUuePd
EWei0+9JSZ/sJT4zP9wL06/ZZ/UyM5EpEJZZFYtmlkyrosXqm5FZaWotQ5OS
oEhKGpSUtK/mHSlpqnZuU+tLpjLLUjg/LBwtsyofXVxKykeY4nT+rXempNWY
mqSkjVa9F56jUhsyJXLEspKwTH5iufYpiCfhnFQzioVXJcMGV9aTqjCcOS4p
CYrCMydDkJJ2Vz7EMV/fwmhgmWNLcTo1c9OyR1LSpo3typGUNP3hsZGUNIum
pOVd7lkp6Vvn6mV9/aP0diY4ZAp8EkkhmjJqgkY+gLRLSalmVNYjJQEfKWlY
UtKR+vs/7IvNW95DnpWSiuUz6zqSkmq2t0NdpaQ32JGSwmXn6e/E6uXWaqOW
R8i9JaMH7VwsWuBTFx/CZYslw4lobfnyxcKpt2qaka8wNXNcUhIUrc6rjEJK
GmItu2VuYMJ7oROfJU2xQLR6K7O6t6lPMfm4lCrmWdLy3d3PklbLzpXv+ybe
KL09BeEinBNdKuz56Q9BI5wfnbPag9GXqxpWtUXLp1YdtiRsT6r90WZHV5rq
sXFJSVAUPRXQPykpX0M/TumETG1TNiUtVX7jbgoy0WrxFs+SolvduelYSppJ
SV/5gTOdlJKmxLOkp6ak/KnjYOXH6xnLw7ZUSoKiIzdy3EhKytfw+9//2x7+
Dt6H1EStfErK5KBNKanyWdLujV1uzvFKrrE7Ja0WnNJfw3thSsq8uzslRRPT
dOAbd1d2y241p44jlZ9Sz1getqVSEhRJSYOSkvI13J6PjqSkmnC0LHxuSgof
HuUXlJLqg1I+Je2LSI9JSXlbU9I8iFZzfhf8XmlV7DEpqejghmw6Te2r/EiB
Fh6z67+kJCiSkgYlJeVruD0f7UhJq7uOy1JS9FFRNCXlg9JZZ5JRzkj7UtK8
l1MvpaSorSmp3d9jervzlFEsvPVUedxjdv2XlARFUtKgpKR8Dbfno/qUlPpI
9mBKmgKZ+asyq0gVXbxdSqrf9nvtSzQt/oboroOkpNNJSVs9Ztd/SUlQJCUN
SkrK11AML0up+fO7q5LhgjtSUiocbe2HVEq6/u/cM0n/5yUp6UpS0ulOH7Dz
CS06vTrjhSfAsMDn11uUsHx0qegip2zsY3Y9UCl/n0a3pKR8DTX5JZyumVhN
b01JxXC0tR+empLqe+Au4e3fje7ujObu7uBf3N0Z5zhxQ6Zfo82q8pp3U2Uy
y9avdDopKD1m1wOVnnTOfxUpKV/DvpRUM6em8jAl7bi/qizc5jZwpz1763AP
ADucOL7Cqqa6uPRZpKFVJas54XkmM1F8dwenI3ihFvc2XEBKytfQKCXV1Lxa
avcQu2ZgRtfSz2mhk2bAI501vlKnkU91SpqnV2UyGUdKOsjvkqCon9shNpGS
8jXU55evmpS0NSLNS93VDwdX1MnJoYc2wCOdnpKiD4k2FUtN1DxCkpI2kZKg
qJMbIbaSkvI1bHqWVHx55FnSZ+8ouz0lze/efoq4vQHwSCeOrOiJYjVn9aio
8mU4kSpQWc/uDdy9bJ+kJCjq4RaIHaSkfA2NUtLWoLT6bHPTcOskJc1l7j1R
OE1BC01H1mOG7WM2ZElKgqLbb37YR0rK19AuJW0KStFtqYxLVw7MynXde7pw
poIWGo2sxwzYx2zIipQERVLSoKSkfA3F8LISfTc1J7pUfUpatjNToMOUNBe+
5aThTAUtnD6in3Rf8ZgNCUlJUPSks9mrSEn5Gjb9eqjdX/2X2cKS3aakeZHr
Tx1OVtCIwRV6dp9ISVAkJQ1KSsrXcHs+qk9Jy2Yvy3eekuYFLz6BOF9BI6sn
7Hc35x7v6QEpCYrecCp4JCkpX8Pt+WhHSpobf8s1+sjqLm6tUxZcYHqlu3v9
OlISFL3ttPAYUlK+hn4c3IqDXbFpdcdruKzBV/YMwPNISVB08Z0YZ5GSHm9a
/D8+LuiTs1YxVmsB3klKgiIpaVBS0uOt+uGCuHRi5YISQM+kJCiSkgYlJT1e
qh/ajdlzq73g3OJQAdhHSoIiKWlQUtLj5fuhxaOlFj0/0PMvgPeQkqBIShqU
lPR4lf1w7hBu95Sq3W51wABsJSVBkZQ0KCnp8Tb1w1mPllo/9xniu4IAjycl
QZGUNCgp6fH29cPBuHTNv7pw+locMwCbSElQJCUNSkp6vIP9sHtoX9P/9/6o
yjEGAORJSYOSkh7vlH7Y8Wjpyv6/60dVjjEAIE9KGpSU9Hh3/bvc1/f/iWeh
Hds4r93JEACYuTEYlJT0eO3+Xe58zXf1/1nnokwlU8xq1Q4/4A38LgmKpKRB
SUmP17Qf8gP/xl1wyhmpWMOqwOrR0sG1A/RPSoIiKWlQUtIbtO6K1KOl23fB
wfOSlASQJyVBkZQ0KCnpDS7rilVc6mQXHDk7bfpWYYfbDtCUlARFUtKgpKQ3
uL4rlj/VuXjVKY2CUljSyRB4DykJitwYDEpKeoN7/yGFfnbE7sZkvllXMx/g
qaQkKOrqXoh6UtIb3PuvKHw6Oz/sa8zyq3RSEsCXlARFXd0FUU9KeoN7u2KV
LzrZL1tbsox70QW72jqAa0hJUOT2YFBS0ht0kpKWczrZO5taMv2qacMAhiAl
QZHbhkFJSW/QW0qa53dy3qhpxhS4pm0APZOSoMhtw6CkpDe4vSvyDegkdxS/
SiclAaxISVDktmFQUtIb3N4VlQ3o4TQSbYOgBBAlJdXIXD6iL1fXF5eb0bln
GJSU9Aa3d8WmBvSQQSqz0i1tA+iHlFQpE3yKmcjlZnTuGQYlJb3B7V2xrwG3
n1WKWemWVgH0Q0qqlMk+4eOksJgrztDcMwxKSnqDHrpidxtujyT5rHRLk4DT
zSPa0N5ESqqUT0nhy1Uxx+TQnFUGJSW9QQ9dcbwN9waTVFa6pTFAC8thXhzd
4Vdwb9S+b5KkpErhbpqCg22KBaKwGMO5fZyyj5T0Bj10xYltOH62ufoOJuus
boEa//Jf/pt+/u7ujLXleCyOzZ8Ffve7f9fD372nESmpUribpuqU5HoxOrtv
UFLSG3TSFec2o+aqkXr35/wfnx89/HWya3iPn9lk+jkCOvjrISWtTiNSEu3U
pKRP3W+UGI6UNCgp6Q066YpGzcicfFJvSUm8lpSUkUpMqcK35yMpaSCZvLPv
LQYiJQ1KSnqDTrqiaTPCR0uZbylISbyWlJQxf9+pZmBKSdSbAuFbyznRt2q+
QUGf7LhBSUlv0E9XXNCS+VyUuiR9pKSs+lvETA4dyMO2t9g8KSkjPFFkOjOV
kr5LrV5+54S3ystiYSWpwl2lJL9LgqLOLxykSElv0E9XXNaS6D3G8t3b81Hn
KSkfB8L+7HBDKj1se4ubU5+S5n9j4TudKhAt/6SUlOrMfGxJvayZXr4MJ6Sk
nvV8cuBGDoxBSUlv0E9X3JuS5rWvUtKqzGpmNNrMb0ULZMoPl5LCc3vqjrHD
banxsO0tbk5lignjT7FYKkyNkpLC7sp35pSNLVNdGlrOzLzV8zfupKSlzNDb
VIaHsa8HJSW9QVddcU1jorc382lqCgLLcs60CErRXLOKP8WIFJ0eKyUtz/CZ
S/+FzTzNw7a3uDk1QSYsk0lJqzw1bkoKFU8j+WdJU+wxUGZmtMLMWqSkDmWG
3rJA6iVPZUcPSkp6g6664qzGZOrJ3NvM9qWkmjmViSn6GKt/mZ6f3y3WULmb
7i05F57S2zucz96UlI9F85ytKenu/jiq+I27KYg/0cWn9NfqMmuRkjqUOVo+
iVvl6Ewexl4elJT0Bl11xVmNOVLPdF5KSn2/Llo+WuEpvXGi1PV9WSC14CUN
PNnDtre4OUdSUpiGVhNveJa0fHdfSoo+S5ptTUnRRtKt1JF21UHNPTJ7n55J
SW/QW1ec0p5pWj8X+FSfiKbsM53jT46mxE+WonOOd8W5itf06PxxLwEP297i
5pzyLOmdKSl8t5iS5hSTST2rOfmXniV1LkhFvxw5qT3V58mEE3V7ySBPSnqD
3rriSHtS16DlKahY/1QXfyqLVaak1Cp2d0UjNSfz8NLf4YZUetj2Ftt25HdJ
mWdJ4ZfxHpOSMu/WpKTUsyQp6ZGKyTq1VPumcaeerxpkSElv0FtXnNKeVSU1
n9ctC5yVkuZA9JVKSal41duuqZe/GXiex2zvvn/jrjhRfAg1YkrKS+WX+SCJ
fssufGs5J/9SSupfMVlHo9PQpxRq2MuDkpLeoLeuGDQl1WefVLHoeo93BdTb
9/9LCmcu/6Ske/+kpIGs7pbdPL+EHT0oKekNOuyK400KU9I8Z2tKmj+wjc4M
342WT6WkVCVSErfYFGSa/klJUtI7rS4Kny6v0ZxLShqUlPQGHXbF6U2arzU1
NecDzvG/+vo73DVUGvSqJyWdRUr6kpKOG/FMwiaDXi+Qkl6it95olJLqC0tJ
HBF9cDnE3pSSzhI+br7Rjf0gJZ3i3p1Ia7ePU/aRkl6iw944t0mbarvtVibm
xE7gess9OMTejP6w6K6/uzuDE0hJpxji7MFuLveDkpJeosPeOLFJdyWODnu1
tWVXi3ufX7/q+fKu4J2kpLM4dTyYS8OgpKSX6LA3OmzSVg/YhB1ST09e2Bur
TX5hD4CUdBYnkAeTkgYlJb1En73RZ6vqjd7+ffIp6T3PU+btXc2BV5GSTuQc
8lQvuSw+j5T0En32Rp+tqjd6+/epfJY0euesvluYenf0zQT64XzyVC4Wg5KS
XqLP3uizVfVGb/8+q2QUDQuj90y4jTc2BngPZ5tHch0ZlJT0Et32RrcNqzR6
+3cofsds9MtB9MnRLS0B4AFGvyy+lpT0Et32RrcNqzR6+3eo/CXOuD2T36hx
twta8LskKHLtGJSU9BLd9ka3Das0evt3eG1KmuePu2lwOikJiqSkQUlJL9Ft
b3TbsEqjt3+r1b9pEP1F0uiXg+KzpKG3Ds4lJbXgJPMwLhyDkpJeoufe6Llt
RUM3nqjU75I8S4KQlNSCk8zDSEmDkpJeoufe6LltRUM3npTotwqlJAhJSY04
zzyJlDQoKekleu6NnttWNHTjych/n9B+hy8pqREnmSdx1RiUlPQSnfdG583L
GLflAMdJSe24vjyGlDQoKeklmvbG1JN2m5na9ovXCNAPKakd15fHuOX+hOOk
pJdo2hs/K//x+dHDn5TElW76JKAXd3c/XZCSmjLQnsE5c1BS0ks07Y3pxSnp
40h7HzHhSz/wkZIaM76ewalyUFLSS0hJTTf/+pVyF7s7pE/eTEpqzfh6AClp
UFLSS0hJTTf/+pVyPZe5DJ3zWlJSa0bWAzhDDkpKegkpqenmX79SrmdH5+mf
d5KSLmBwjU5KGpSU9BI3pqT5xwvf6dXM+a38/FU9UhIXs5dr6KUXkpKgSEoa
lJT0EnelpDABpd7KT6cKSElcwC6up6/eRkqCIilpUFLSoLZu3S0pKZy/OyXl
q5WSaMourqev3kZKgiIpaVBS0qAGTUlHEpOUxF1Su3j+FmiqTObKeO5hs6+2
ZfPOao/h8DZS0mUMrnFJSYOSkga13Lrlfdo1t2Rh5TUpafXDouLvj8K3pCSu
VzOm7hp6x53evM63F8ZlcI1LShqUlDSWKeZT8ZlwDykp9ZwoTEn1L6UkWqsc
UFJSowqBmfE1KClpUFLSoFZbt/pYu1j+9MZck5LyEemulPR5+sH2clsH1Opq
uPz4IvxYIz+Rb0DqQ5Lopyj55mXWvqoz3U9VnQMcYXANSkoalJQ0qCFSUn3k
yUShMEzlV9duM/M9cMt6ucCmARVGm1TkyU9kMsvWtSzf2rr2aIEiw+FV/C7p
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
vKP3eVtU75Rtl5IqZYJPMROdsqd2p6Sz1n68kttXsZtL/6CkpBfSM03VdK+4
xKCed9A+b4vqSUlXymSf8HFSWKxFUKpf6sRiF+inJTNX/EFJSS+kZ1rbdPWp
OXk6wdKJ1b3cfP827vH5vC2qd8q2S0mV8ikpfLkqdtYBuTUo1a+9nyHTT0tm
LzmlPI+U9EJ6prUdPZy/bO349A9ONMV8fr30j3VwPm+L6p277VJSpWJK+iQi
yekH5PGUFB4zqwqjL1cTq42qfCtTT9iS1PT1blw1R0hJL6RnWjvYw+HJPLyf
gVuk7t/Ct0bxvC2qd8q2S0mVwi6NxoGwZIuTf32FYSNT86MlKyNPzVuZemoa
EG7ClVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6mVYw83b86tTtmi4rcub
9m770ukp6eau/NXBbVltV2rO9GvPT+kd0bpJ0TLR3ggbn9qcGydSM693+uHE
NaSkF9IzrZ1+Ictfvn9O//j86OGvxaH1s85//I//px7+Gm3d7Xtt074L75Qy
NyE/5/zpn/4vPfxltm7TFq1K/sN/+L/28Lf7yNy97UstUtLf//v/ew9/TSNJ
ZRRqmpKKahrWeUqaX0pJ7CAlvZCeae2alLS8Itx+jy0l7d662/fakX03335E
Fx8iJW3aolXJ2/PRwZS0e9uXpKTKjYqevZdvLedE3wpLtiYlnUVKGpSU9EJ6
poV8kGlR81z/NPiddnHzb89HUlKm/fl3b89H+1JSZcnb81GLlLSVlPRUxYwW
XolShVNXruVE5q1UJcXFl01t11E1wiYxBCnpnXTO6aIn8OP9XFPJNPiddnHr
bs9HUlKm/fl3b89HUlK9ffVISfTv9l0pJQ1KSnonndNCi5RUud7b77F332kX
e6k+Ja16voeUVLN1t++1g/sus+BwKSn/cXRY+PZ8dGJKuuyUVdOxt+ejIymp
8qOtCy4T7sy/eugE+2JQUtI76ZwWGkWkYoXfO+3Vquvvjefy81LRqlL1r2o4
snXRxacteWdZeNOCTVNSfuu2Zpn6vbzpYGi0dXNI+QrDyzx/CoQLhvVE64wu
2GLrtmaZlWiBG58lXaOmY7dmmXDOUr5wo5SU38Dl/FSx44otebx+NryflrCJ
lPROOqeRFlel8OZqtYppEWSWN701N8arO+rUW6mZYQ2nbN2qwGNSUnTrdjz0
qdnL0b3WNCVFt24ViKIpKRp5pkXASWWi+jobbd2OOBOdzs98dkqKduzBlLSa
OU9/13VxSlptYLi9qZnHFbu6vp7T2/Y2jXYxrUlJ76RzGjl+PSrWGa5i2pWS
wgKpxSvr37fJ+U37nJSSvhWuXm6q+cSUtNq61impvtoWWxemleKc6LOh4rvF
R0sttu5IStpXoMOUtPV3STUduzUihYtMsZR0y7Ok1Qam6myxE4tdXV/P6W17
mx3dTg+kpHfSOe3suwzVVJi6zE3ZFPMtvMoyq5mVt+LRmcuXmYvyPp/tKWkW
xqXvxOrlvspP3LqzUtK3ztVe3lRti63bl5LyxfalpBZbtzslLSe+06v/bqr8
9K270aezlNRoG+vP8+FSZ5WsvwB93DMctqnP6YeU9E46p52t16DK2jIXuCn2
06FowJkS0Sm8rw6ryiSsec6Ora7Zuh3PklZLzTWHz5VG/MZddNdkIm1ltS22
LpWApkQgmuW/VnfXs6RVgR0pabaauUxPW2vesXUnOuVZ0qrAjq/bTcHvj2ap
9HTXN+5SS+1Y15GW1FcSNm+uagpCWbRAqiW7WzWcl2zm80hJ76Rzmjp4Pgyv
aPlr3JS9Q54XDB83HHx+FL17P7Kxqa07mJJSMzfVfEpKyuy7TXEmujuWO/qW
lBQtsDUlnfssaVlhi607/iwpnN5X7datO9HBlBQtsO9xT00a2lr5jg7Jb2D9
zOOKXV1ZyWpiWflnkYPC8pm3wvqfrdEupjUp6Z10TmuberjmtiFzjp3SKSmc
CG+ne0hJ+QI7UlI0HE2Hv3HXYutOSUn5Pd40JeUL7EtJqaSzKSWtplts3e6U
lJo5veZZUr7A1gdJ9d+sq6/8YEqqL9Du/vmUmlPXpunXyBMW2zTxeO32Mk1J
Sa+lfxqZflVTrKbO/Lup2+bVW6mX+UBUeePd6Cowbf//JYUPjKaYC75xV7N1
u1NSfS5ulJJqtq4mv+QjT6ZATVVzJS227mBKmoJMNMUeNj0sJRVNg6ekym3c
dAm4y5RIRp9YSsosG25maqmn6nxHkyIlvZb+aWF1Jly+bHdZnH79lxNWsSUq
WiacmS8Wzm9xUE0N/v+w+/4abd3WLBPdNand3UlKmtsTRph5ftj46IL5l6v5
y3pabN3WiLSynBmdlpJqvmsXvly9lVrkxpQ0iml7SspMhFW9p4e/B97drWAz
Kem19M/poqfB+brcdL1bn0c0+mt0L3p7PuonJQ2376I/Jrr+r4eU1O7vnSnp
gr+XXyVXF6/ly3D68+sVMLPssv7LtuV2UtKgpKTX0j+nS3Vp665+/J327flI
Stq9dbfnIympNSmJvOgTqM/LbkKkpEFJSa+lf053Y0rqh62zdbbueqdvXb0W
Kakfp3TRy02xZPS2vnU4DUpKei39c7pUl+pq4KlOT0lcr/VFapk635kX3rnV
DyAlvZb+OV30NOjcCDyYlDS04lMzj9VOoQ8HJSW9lv5pYXUmdGIEnk1KGlfl
dwtdxY5zMzAoKem19E8jvtYOvIeUNKj665QL2XHuBwYlJb2ZLmpH3wJvICUN
J/g3KmpT0vK3RfveCifCVkVbOxeOfmEjVX+05pq1nx5qpKRBSUlvpova0bfA
G0hJYwkjUn1K+mSTTv6tcGKVfaKrixYOl4qmm0zNqbWnqj1OShqUlPRmuqgd
fQu8gZQ0kGhE2pqSWkwUU1LY/k8seoT11DR+VU99z9STkgYlJb2ZLmpK9wLQ
ldFTUmqLUk2tbPyynhbXbilpUFLSm+mimotFqpdWn2jVLwgANxo9Ja2WWk7U
1JyvJx/K9pGSBiUlvZku+gSdkDk/p2ZujVcAcLualLT6PHA1vZyZemtVT75w
9BIc1pNqf7jeVA2pxodrOcXpFXINKenNdNGnFIvmE2n9IvmZAE/id0lDe9h1
qtvNkZI2WSXZykUyVWXqr6znLFLSQHTR56SUVFkzwMNIScN58LWp202Tkuqd
/lAvE6B2LHWQlDQQXfSpS0mpmfPL1IcVZzYU7jO9293d3zUpaThPPaR7HrDd
Nqw3YS8d77dUDfmaG+0vKWkseik/JKN3SpWjWN8yup7vOq6kHzKkpLHUH8at
D/vdlY84Ep1AKmV6KXNAzvOXE6s65zmrMss6V/Ws5qdq2ERKGoteykSe1Vup
+dE5qZkwCgdwSJ+EpKSxbDqGWx/wmyJb05a0JiVVqnnuk7/jCiNMdM4nyEfF
iWidW0lJY9FLqSi0+62a+dAzF/QMnbMiJQ1k66ErJZ3FeaPSKSmpciIVf1IT
qZmbSEljeXkvTYHwrejL1bKZ+ts1Hhpx3ObpnyUpaRQ7jtviJW/5KX3qo/v8
UvlKwhoy1+VVtV3J3yowC3sp3KfR42rHRFhnfiI1cxMpaSx6qSndy3ActDX0
0kxKGsWRlJS5OUzdqWZubvMLFtebv8XtMyhJSfWKqSTak1LSVg7IGnqpKd3L
WByx9fTVl5Q0hH2Ha2VKqixff2tas5b69fZAStpk9ZwoM3P11rLMpjnhKlLz
8y0pkpLGopea0r2MxRFbT199SUlDOJiSPun7fCmphpQ0qNNDjZQ0Fr3UlO5l
LNGbk+j1PTo/U+z453K7b/Ma3TgZ3V9SUv92H6s1Yyc6xM5KSQfr6YeUNCgp
6eX0UlO6l4GkDtdMSqqpIX8zk1nvWRrVb3R/SUmdOxKRaj7NmDNL/ccg+Q9P
wgqXL8My0RX1lkp6aw+VpCR0VDv6loFkUtInlmtW5aMzowtGJ9qRkpqSkt4g
87GGgVBDShqUlISOakr3MorrU1J+dKQ+GZ4C4VqirQ0nwnVtGrBG90dKegcp
6SApaVBSEjqqKd3LKPIp6RNEm9TNUjg/DCDFe4bUU6fo/OVbmcdV9YtUMro/
UtJrRD9G2PHZwjvppUFJSeiopnQvozieklL3Uak6M6MjVU99CKosmdmiIqP7
IyV17JTjczmaMhEpNczbpYOxRp+UNCgpCR3VlO5lFEdSUiYZZVJSZqXzu5kn
QZXNqw9WmZakmrd1keeRkvp0VkRaTqfGdXT47P7wobI9Y5GSBiUloaOa0r2M
opiSKqfzb20tkApBqZI7UtLuQWp0063jB+em4FMz57hxR5yUNCgpCR3VlO5l
FDXfmVk9fJlTxqpM6q1UnZvK5KeXM/OiixzvMbjdKUdmppJi/fkxnhq/YeX5
k0Cx8k3b29SO0wtXqrxqXOOyTb5sRf3Y1/7T+4SZ7mUUQxyr0693UPfWOUSP
8UKnHJmrSpa3GTX1T4nUs6xtNb2qP6whrCpfeT8jdPcdGtf4uXd+fH708HfZ
cXLlin6uqo8/Kak7updRDHGsSkm98buk3rQYF6s5p6SkzMxV3tmRkurbeQ0p
qXNSUtMV3R2ODqWkT09nkkfSvQyhhwO15l7iyKPzc+vsocduJyX15paUVFl4
U0o68iwp1aq7SEmdk5KarujucCQldU33MoQbD9QWT4guMFBT25GSunL6pwep
l8UxKyUtSUmdk5KarujucCQldU33MgQpaauBmtqOlNSPFgfktJB6K7NU8WU4
HU5k5tdUfnqf7NBPS4iSkpquKBNblkP81+lP+q0VKWlIwX50kqRrLY7P1O1K
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
tECUlHQK4+vZ3FnVK6aPVJIqlpeSlhyQ+4SxHRqpSUmbks7xZ0mr5m0aCNEP
tQ5eHKUkOiclHWdwPZ6UtEn4nCg1M/XW6hK8FL67qiRaOL9IsYUzKWl0U3Ui
hoNWsWWl+JAoU764VFgy08j8WMicWucCR7ro9nwkJZEhJR1kZL1B8TpCn04P
NVLS6KZYGIcWotHmlr/icV4zFqbgg6/o/K1ddHs+kpKioun4Ljf2g5R00L27
j2vcPk7ZR0oiNCVu9uBc0zgpaW5w/buTlPRoPzvkH/yD/62HPylpXIbVS0hJ
g5KSCIVdZ4DTwiWfstfa1ObUW9GX9ZVH68zElq/VdP1bUtIRk5T016QkKNp0
laEfUhKhyptAOOjnEfV3/+7/2cPf1mO78pK3I4WFNeSTS3E6/5aUtJuU9CUl
bbLvwxlGZ3cPSkoilOk6I50TjZuS5va3Hg47UlK4SOYtKWk3KelLSpoVTwir
Aq6n72FfD0pKIlTsOn3LKUZPSfNWtBsRW1NStHz+rcy7UlKGlPQlJc3yz4nq
Z/I8dvSgpCRC9V8luqAxPNgzUtK8LS1GxKaUlCqcemv69cdKUtImqZT07czV
y++cKZCpIV9GSupQuH+nX58cpZa6qoHcxi3ToKQkQvVdp5M54kkpad6icwfF
ppS09VnStOWbeAb7Sia/rN5ahaZUsZpFpKSeRVPSfE6Qkt5MSupcZvBe77JN
vmZFz7Op667cpzzMtEhJ8/khzC/h/Jpi0ZNPqoZzj+ETa5ta/i4ps4iUVDRl
M860PRkdSUkMIXUgXXzocr3MAUAPfu6df/bP/oce/i47ThyQu+3oOr3NDlMQ
VaZE/AlnRp8HRV9GJ8LCp2/aKXVOLf+Nu+nXlFRc1/HNeZKp9CRoLjDFIk9q
5mpZz5IGkk9G0XOCm+eXsKM7JyWxyb6gpM/ZJJprpuCJT7FYJjrVR6pGG3iw
5kxymW/DVtP1b/1+8Yuk5UwpqUYxJYVxafXcJ5+MwpJSUudS+WhVIPWSB7Ov
Oyclscnu3tPt1Ht8Spo388iAKn4X7po/Q3tld0qKPkta1ZZ/2VVKYlYz0otJ
ikeyuzsnJbHJkd7T81SKxp8wB+WL9Z+S5o3dsRYpqVs1KSlMQNGlpCR4Nimp
c1ISmxzsPScEauxOSbOBUtK8yal1RedPPWncN4OZDv8bd6uZmWKZdUlJ0D+n
0M5NiZQ0X/6iM5fvrkqGC6YqOTcl1S/ugDzilN6zC8ibtqek1CKjpKR5w8M5
0cvozzk/Pj96+DOcV1LJZd6V0W/Zrd5KFVjJRKTbU5LfJUGRlNS5VEoK0004
c5mMMmVSiSlc6uCGnF6S0Fm958xARmXk2ZeSoiGrk5T0SfyOW0oaSDG8XPYn
JUHn3At17khKyuSd4iJNU9J81KXuLo6s6OXO7T37gqhVxvkKM848PywTvpUp
k1rXLSlp7oHQqsDt+UhKipKSvqSkpcxwjr4Mx/t1beVC0dtU+jHtTUlT9qnQ
jrS17zhJ3UssDzxnmxOd3ntOEYSmxHfkrv+79+DM31ndno+kpKjoVekuN/aD
lLQypW9FMm+l5vAMt49T8qbtKWm2OyWtFm/xjbtN5x/qNeo9O4WlSUpK32zP
796ej6SkRp7RpVLSSib7rG6VozctzzgqWJGSOrcjJZ3yLKnpN+4+UlJL7YKS
XcNX1afkV+mwEz7ZlDQXW03XvyUl3esZXSolrYS7dVqkpPDlqtgzjgpW7r3K
UDQ98XdJH9+4a6lpB9o78CnlxE/pWdLy3dR0/i0p6UbP6FIpaaWYkj6JQJS6
meEBpKTO1aek6Q//7nflzItTUrhdH/96QxutO9BJg87deHwus9LWlBQuknlL
SrrRM7pUSlo5kpKWn5DwJHZr5zIRZiU1MywfrSdfrFFK2voWNa7pQLuJbvVw
cG5NSdHyqbeWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIO
tKfoU/SW5sSLXc3nxptSUqpw/q3KZ0zG6UHhx48pd7d0GylpJZN39r3FA4w4
tF/lkSkpf01xQB50ZQc6gdCP1I3r8ig9PShlVtruWZKUdK9ndKmUtJTJvNE5
0bcGzctk2KGdy1+LL3bZJl+zoqe6vgPtMroyVX/we2QV+VPl1Ph3SZOUdJ9n
dKmUBEVX3v1yot8W+qxwNwfkQbd0oDMJ/bgxJS0LbE1JYerJvFUZkaSkFp7R
pVISFLm3GZSURMqNHWjf0YMwJU2Lr8SctYr80/ZMhJnLr6br33ptSupkWzpp
xkFSEhRJSZ1LfWJ5i8s2+ZoVPdiNfXjloQI1plP/9YbK0+N04N/ursw+9SWP
b3UnOtmWTppxkJQERW5pOtf6UrvponzZJl+zoge7vQ9vbwDMjh+N0TSU//hI
Smoh7P/PHbcxz+hSKQmKpKTOSUns0EMfOrfQid3HYTEHZWrOPZW/3L7N70dq
o5ZbV7+Z1/V7hVZdVkFKgqLbxyl5k5TEdv30YT8t4Z223o6edQf7raCPv+eM
wdW2LF9u2sW3X08vvqoC+0hJnXvh+dwBeVxXfegkQ/9O/2xfSmpBSgKu5Aam
cy88nzsgj+uwDztsEi/X9ItPUlILYUqa50hJwOmkpM7VnM/nC/2Pxf9qcCVV
fjmzk/O5A/K4PvvwjK8w3fNjbZ6kXTIK1nJ7PnpaSlqJnhCKO1dK+vK7JChy
v9G5mvCyij/R1BOdP/36f+Lo5HzugDyu2z48eMLZ99ExNH1slF7j7fnoFSkp
nJnf3Vs/e8y8W3Pp7OGqGiUlQZGU1Ln8GTh8N5WSfiweM6USVifncwfkcZ33
4e7mrT4xPqk5PNbFyShYdTK2zO36dbr+rfCllPTHmaFVgcoIU//5pJQEjyQl
dW5rSqoPUJNv3D1a591YeeZZ3eRISRSl7o3vaEYuuVRMVxYrBqVnjpTUXo6m
pNVpREr6SElQ4fZLCXktUlLxXSnpAYboxq2NTCUm6CEZLe1KSeEiqbe2pSRm
n10paVp8xjhlv5UhJcGTzOcN+pQ//WbeDd+aPEt6k1G6cdMpaL7JGWXraGp1
99uVb6O2pKRo+dRb8/z8Wp78LCklFY6WBTalpFQyWpKS4JH6vL4w25qSVlEo
fCv1CZiU9DBjdWNla8faKBrpNhktbUxJqcKpt8KQJSX9/zL5aC6wKSUtg1Lq
irkvKElJ0Ln+rzUvVxNealJPND1JSQ82XDfWnIuG2yjOkr/v7dDGlLTvWZKU
FFE8SKSkLykJiga66LxTzbl3vnkI54Rv5cv3cD53QJ5i0G7MNHusm2ROMe5O
356S8mloqlhcSqqyLyVVfg4pJcGTDHoBeo99594Wf1LSWMbtRiell1t+vHN3
W/bblZLq05CUtF/NVXX1yeFyIqrzq2qUlARFo1+JHk9KYp/Ru3H09rPJM5LR
Uja8/HFbf53e8VYxIhlKay+8qkZJSVD0pKvSI6U+ubrFZZt8zYqe7QHd+IBN
IO/ic8uVvpvV7G9T5Q/s3iMmKemvSUlQ9NQr1OP9ttBnhfs4Gk/0gM50gnqe
6z94uYWU1C0p6UtKgqLHX6qeSkqi6DGd+ZgNebM3JKOlM57en+buzujL3Xvj
Fzf2g5QERbePU/LuPYGv5Bt5ysYer4TZk/rzrGOMK9WcPYBbSElQ5PrVuanj
7wZUZqhNG3u8EmbP68/nbdEjSUbQPykJilzLOtdnStr0pKlyMx2HK3ue9jVz
d2f8UW/t4evg0XL8YKtc0PEDX1ISFLlkdG7qLCWdfiPtCEz5dkwff3fuoP6j
XH0LL3DXth+sJDrdyPW9xPM4iuANbrmwUm8aJyUNcVM3kG/39PFnN+X87J+/
9bf+7x7+rtlTp4/fiw8wxzPHOYrgDdypdq63lDS3St5pTUoaxUtSUtORvqp2
XlFqYi6fOReFy0bXBTs4iuAN3N/eq9j/+ZQ03xV8p5dzlm+tFknVUJ+Slo2X
kvap2fV3hyMpqcqDU9KVAzyVZaKpJ1UsfCtaT5st4EUecBT5XRIUub+9VzFo
ZPLL8q1l0glzULRY+NbWlLTaipb99EA1u74YXlZ1/Dpzx8s7U1LlUVTst+sb
Nj0uJV3ZveGqixOfdCZKvbXcHCcrjnvAUSQlQZH723sFN7rr3TElwks4f0qk
pEwaSk1vTUnsULPra57yxKbDieLMXlJS/v589dY1p69iw6ZHpKRi518jzDLR
dDNVp6R8PbDPA44iKQmKbr8mvlz0Vnm5U6bqlFQToKSkftTs+sMpKVoyX6yX
lBSemqInqwvOYDUNq08x4Zyv8GV0vaenpOgWXWy59uXxn5oovqys8DLRXfke
F/f2NR6wXVISFD34JHaBCy4uU08pict8Tk5JYbGayu9PSXNvfNK3Ja2bV9Ow
3SlpNTM6HU4cTEnhJtwr1Z5Mn3+2fKcuX087XXXyjR7ZDw/YHCkJip537hpL
8fI9tUxJq+xT8yzJAXOWml1fl5L+uHQiJYXv1tScWss9PtmUdHvD6iNSWHgq
haDK+ospadlmWtPPoSf1yQO2RUqCIhfNe4V3XGGBrVEo81YqXqXWkvrGnWPm
uJpdv/FZUuXMaaBnSasCqQVvb9jxlJSp5EhKyh9jtKC3Mx7TOQ/YCikJih5z
yhpUsf8z+SWVfabgaVH9k6bKlFTTcvJqdn3LlLQpKHXxrzdE519wHNY0bNPX
7Vblv9XWLFifkiSjG+n2vGf0zwO2QkqCIlfSzuUjzHwvlPn1UKZ8WKA+Jc3N
u75PXqJ9SqoPStelpE1lrjl9FddSn5Jm7Z4lOaXfS+fX0Es9kJKgyCW1c/Up
pvVf6jhxCDVSEWH+eFOcmDkFZfIv70xJlabVVnWgJsVEk1H+GdPulHR3f7yX
zq+nr24nJUGRq2rn+k9Jczsv65OXqAgvl/3ZuTlnpaRUINqUkj4G4330fD19
dTspCYqkpM5NPalp6jXd8gbf7uzjz27NmSr+ge6v8GXmrdScYkr6uAW9Sabb
V6fH5Ul165k2rHbTgvuOjWX9pxxdox+io7f/IyVBBXe2g/ptoasKHU5nkZJG
URlhLvhb3Yff2CcvVPM5UurlkR132U4/t/LRj8/R2/+RkqCClDSoblPSx0F1
kvAT5hvd3Rldm7pMSZ9H3MgNpNjbq6GUmj6y3qZ7/NzKRz84R2//R0qCCm6B
OnfxzXDe1pY36hPoyt3j8hfRtt3SLW9T7OfpD9+vC8tHZ0YrD3dotJ5VgXmp
5eLRg2dVW1h5WFW4SOVRN/SROXTjv6QkKHIN7dzPvfOv//VvPfztOE4cXdAD
w/AClSnpE8SlTylcRPNIdNloTM6vPcxfmQJbF8kb+rAcuvFfUhIUuY/t3NAp
ad6Ec/sE2MowbO1gSspXkrlSr+aHL6MF6kNQZcmarci3fCxDN/5LSoIiKalz
D0hJH4cZadFPwpcv8x+VU0/vNVWfkj7Z3ygtC4RPbYrrjRZLhZ1MUqsPR5k6
84Y+IIduPFDJjUfnnpGS5m05pU94mMytWn6arfReO5tS0mfjUb1KLpXVftKJ
JprLogV2PEuqNPTROHTjgUpS0r2K/f+klFSzvbzQjpTk0dJuOq2R4pk88+ym
5kKwLBxWm6pkNX/5Mj8drTwqukhFh419KA7deKCSO417rS4x0QL55PL1nV7O
Wb4VLb+ceVlKWm41fE3bU1LqJTV0Wgtj9WpmTF1W51g9tjJ047/8LgmKpKR7
TbFPBVcFMrFlFX+iqSc6fznz+pT0ceCxsPpcep6ZL/B5xI3KXXTd6cbqUinp
oKEb/yUlQZGb1XtFO3+5U1IRJpyfSknFObekpMzm8zapUVAs4Pg5Qu+dq7f+
LA6Q6CcPp6y0ss7eeuxtpCQoesmdxvSr1PzQBSUzrf1sSUmVmairlJTpBN4j
NQryBYpvUaT3TtRJZ1YOnB503rzHk5Kg6PH3qJ1v4KptYWsfn5Ki/cCrSEk3
0oFn6aQnpSQqSUlQ1HmIOGKITZsfGGWeK52ekvIvb0lJn+37K/Wo7hbtuuXx
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
AKBU/+YbAADAD/cbK4B6rw==
                   "], {{0, 761}, {1122, 0}}, {0, 
                   255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}]}, 
                Dynamic[$CellContext`i58$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->Automatic,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i58$$, \
$CellContext`i58$1096135$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 15, 1}, 15, 1.]}], 
         
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{851., {408.1044921875, 413.3955078125}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->"Out[311]=",
 CellID->1509656058]
}, Open  ]],

Cell["\<\
We can set the ResultsFormat to \"Movie\" to output a movie version:\
\>", "MathCaption",
 CellID->596901522],

Cell[BoxData[
 RowBox[{"KEGGPathwayVisual", "[", 
  RowBox[{"\"\<path:hsa04662\>\"", ",", 
   RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Movie\>\""}], ",", 
   RowBox[{"MemberSet", "\[Rule]", " ", "membersBCellReceptor"}], ",", 
   RowBox[{"Intensities", "\[Rule]", " ", "intensitiesAll"}]}], 
  "]"}]], "Input",
 CellLabel->"In[232]:=",
 CellID->1227765117]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Tutorials"
}], "RelatedTutorialsSection",
 WholeCellGroupOpener->True,
 CellID->415694126],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[ButtonBox["MathIOmica Dynamic Transcriptome",
 BaseStyle->"Link",
 ButtonData->
  "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"]], \
"RelatedTutorials",
 CellID->795520170],

Cell[TextData[ButtonBox["MathIOmica Overview",
 BaseStyle->"Link",
 ButtonData->
  "paclet:MathIOmica/tutorial/MathIOmicaOverview"]], "RelatedTutorials",
 CellID->1258435320],

Cell[TextData[ButtonBox["MathIOmica Guide",
 BaseStyle->"Link",
 ButtonData->"paclet:MathIOmica/guide/MathIOmicaGuide"]], "RelatedTutorials",
 CellID->1425023577]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"MathIOmica: Omics Analysis Tutorial",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:MathIOmica/guide/MathIOmica", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2021, 1, 7, 17, 18, 43.367609}", 
    "history" -> {"1.0", "", "", ""}, "context" -> "MathIOmica`", 
    "keywords" -> {"MathIOmica"}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Math I Omica Package Tutorial", "language" -> "en", "paclet" -> 
    "MathIOmica Package", "status" -> "None", "summary" -> 
    "MathIOmica is an omics analysis package designed to facilitate method \
development for the analysis of multiple omics in Mathematica, particularly \
for dynamics (time series/longitudinal data). This extensive tutorial follows \
the analysis of multiple dynamic omics data (transcriptomics, proteomics, and \
metabolomics from human samples). Various MathIOmica functions are introduced \
in the tutorial, including additional discussion of related functionality. We \
should note that the approach methods are simply an illustration of \
MathIOmica functionality, and should not be considered as a definitive \
approach. Additionally, certain details are included to illustrate common \
complications (e.g. renaming samples, combining datasets, transforming \
accessions from one database to another, dealing with replicates and Missing \
data, etc.). After a brief discussion of data in MathIOmica, each example \
data (transcriptome, proteome and metabolome) are imported and preprocessed. \
Next a simulation is carried out to obtain datasets for each omics used to \
assess statistical significance cutoffs. The datasets are combined, and \
classified for time series patterns, followed by clustering. The clusters are \
visualized, and biological annotation of Gene Ontology (GO) and pathway \
analysis (KEGG: Kyoto Encyclopedia of Genes and Genomes) are finally \
considered. N.B.1 For a more streamlined/simple example with less discussion \
please check out the tutorial on MathIOmica Dynamic Transcriptome.", 
    "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$78941, "title" -> 
    "MathIOmica: Omics Analysis Tutorial", "titlemodifier" -> "", 
    "windowtitle" -> "MathIOmica: Omics Analysis Tutorial", "type" -> 
    "Tutorial", "uri" -> "MathIOmica/tutorial/MathIOmicaTutorial", 
    "WorkflowDockedCell" -> ""}, "SearchTextTranslated" -> ""},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "12.1 for Mac OS X x86 (64-bit) (June 19, 2020)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[1766092, 43266, 787306, 12914, 70, "Output",ExpressionUUID->"6c2e6041-3593-4554-9bc9-5ab0678a7918",
   CellTags->"RasterizedOutput",
   CellID->1606164724],
  Cell[2918538, 64103, 474103, 7779, 70, "Output",ExpressionUUID->"f88575c3-a7f4-4cef-854f-62e7be11f5a1",
   CellTags->"RasterizedOutput",
   CellID->2059266444]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 3966326, 81434}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[607, 21, 8932, 185, 70, "AnchorBarGrid",ExpressionUUID->"fa6a4970-df90-494c-8a76-d88e50ac0304",
 CellID->1],
Cell[CellGroupData[{
Cell[9564, 210, 72, 1, 70, "Title",ExpressionUUID->"ba1e8000-a65b-4680-a4a6-e0219b54487b",
 CellID->509267359],
Cell[9639, 213, 47230, 837, 70, "TutorialJumpBox",ExpressionUUID->"e53e5824-8f5b-4e01-bdb4-5dbfecb61d31"],
Cell[56872, 1052, 898, 14, 70, "Text",ExpressionUUID->"5c498da4-6e60-4460-81de-5603a4c3a7d1",
 CellID->2044157074],
Cell[57773, 1068, 573, 10, 70, "Text",ExpressionUUID->"49ce311c-e099-4c7c-83ca-e2a36e37e6d5",
 CellID->985017158],
Cell[58349, 1080, 333, 9, 70, "Text",ExpressionUUID->"0fb5dbe0-d101-4a01-b189-f03035c8f8b1",
 CellID->429607656],
Cell[58685, 1091, 677, 21, 70, "Text",ExpressionUUID->"03dfebda-0a5c-4761-b01d-2e0ae627ceb8",
 CellID->54176507],
Cell[CellGroupData[{
Cell[59387, 1116, 70, 1, 70, "Section",ExpressionUUID->"02adb4c2-d181-4a5e-ace4-92a26c2b80f9",
 CellID->2133290847],
Cell[59460, 1119, 339, 10, 70, "Text",ExpressionUUID->"33080f30-f8dc-4f70-a13e-b33e74bcd49e",
 CellID->1534169418],
Cell[59802, 1131, 67, 1, 70, "MathCaption",ExpressionUUID->"91af72a8-0b31-4f0c-b77a-f1f9068c4c3b",
 CellID->1217948648],
Cell[59872, 1134, 98, 3, 70, "Input",ExpressionUUID->"acc78942-df04-46b2-aba2-746275d11098",
 CellID->262742254],
Cell[59973, 1139, 75, 1, 70, "MathCaption",ExpressionUUID->"1959e179-3531-4d84-af08-1cf6c6cf10c1",
 CellID->1869508656],
Cell[60051, 1142, 119, 3, 70, "Input",ExpressionUUID->"9a36999b-fee8-4e8b-9697-3038a6ddcc45",
 CellID->998742135]
}, Open  ]],
Cell[CellGroupData[{
Cell[60207, 1150, 57, 1, 70, "Section",ExpressionUUID->"92c1c75f-b66d-4fd7-8771-dbcccb8fa01c",
 CellID->671613477],
Cell[60267, 1153, 540, 11, 70, "Text",ExpressionUUID->"3ead2f7b-a5dc-48ed-b23b-edea5144c8fa",
 CellID->1313645745],
Cell[CellGroupData[{
Cell[60832, 1168, 66, 1, 70, "Subsection",ExpressionUUID->"09ce6171-7bb2-498c-abe2-7481f752ac56",
 CellID->501197291],
Cell[60901, 1171, 521, 13, 70, "Text",ExpressionUUID->"ce1d289f-1d9d-4ce9-86fe-329c17dc46b6",
 CellID->1179683263],
Cell[CellGroupData[{
Cell[61447, 1188, 66, 1, 70, "Subsubsection",ExpressionUUID->"ff9e70b2-0ac5-432f-8d0c-0569270fc882",
 CellID->929984066],
Cell[61516, 1191, 847, 26, 70, "Text",ExpressionUUID->"60d9ef4a-3163-447c-a899-ee32acc49f4c",
 CellID->1165527708],
Cell[62366, 1219, 315, 10, 70, "Text",ExpressionUUID->"272b2253-9390-431d-b698-81f267aebc32",
 CellID->1597287192],
Cell[62684, 1231, 168, 6, 70, "MathCaption",ExpressionUUID->"109021ec-bfb4-422f-bc48-51ef46c9c8bf",
 CellID->174991658],
Cell[62855, 1239, 7316, 207, 70, "Text",ExpressionUUID->"290fd50e-0ec0-42b5-996d-f99a8a836fd9",
 CellID->1192006303],
Cell[70174, 1448, 717, 21, 70, "Text",ExpressionUUID->"6597dc32-f8b7-45fa-96d2-f1c5cdb674aa",
 CellID->2001356434],
Cell[70894, 1471, 278, 6, 70, "MathCaption",ExpressionUUID->"ff07f265-6172-48db-b363-cdda7d0aca17",
 CellID->299944951],
Cell[71175, 1479, 3483, 95, 70, "Input",ExpressionUUID->"d767c106-d3e5-4997-ba83-cc163f68a29d",
 CellID->1030671948],
Cell[74661, 1576, 248, 7, 70, "Text",ExpressionUUID->"779736ea-9dd9-493b-a432-7ccfa5f32a05",
 CellID->1097212187]
}, Open  ]],
Cell[CellGroupData[{
Cell[74946, 1588, 86, 1, 70, "Subsubsection",ExpressionUUID->"07b1bef9-e805-421f-a38a-08ef070ad0c3",
 CellID->1010514183],
Cell[75035, 1591, 292, 8, 70, "Text",ExpressionUUID->"210bdd1d-4570-4e83-b791-837b159df1f8",
 CellID->1276400541],
Cell[75330, 1601, 381, 11, 70, "Text",ExpressionUUID->"46ee183f-6615-4e4a-8b2b-510b6d3a27ea",
 CellID->200159297],
Cell[75714, 1614, 471, 15, 70, "Text",ExpressionUUID->"1b18dc44-07e0-4fc4-aa6e-77a58ee176b3",
 CellID->471195666],
Cell[76188, 1631, 718, 24, 70, "Text",ExpressionUUID->"ec88b28c-6f06-4c5b-805b-6dd2d54149c9",
 CellID->1897113300],
Cell[76909, 1657, 5414, 147, 70, "DefinitionBox",ExpressionUUID->"155fd296-7dbe-48aa-9f36-1b97a0938e68",
 CellID->953451491],
Cell[82326, 1806, 196, 7, 70, "Caption",ExpressionUUID->"6081764a-3045-41c7-a643-dda958e65efb",
 CellID->7357]
}, Open  ]],
Cell[CellGroupData[{
Cell[82559, 1818, 75, 1, 70, "Subsubsection",ExpressionUUID->"16b5189e-5e1d-4706-889c-7858ea03dafb",
 CellID->1310432575],
Cell[82637, 1821, 548, 17, 70, "Text",ExpressionUUID->"02bdc460-4d09-42cf-b689-cf2b76819fbb",
 CellID->1202669251],
Cell[83188, 1840, 8621, 256, 70, "DefinitionBox",ExpressionUUID->"bfda199b-ad3c-42c1-87b2-59f724fcb3b3",
 CellID->438464085],
Cell[91812, 2098, 196, 7, 70, "Caption",ExpressionUUID->"6097bec9-8b57-4919-936d-66076f3b78d8",
 CellID->1249483738]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92057, 2111, 55, 1, 70, "Subsection",ExpressionUUID->"726b4183-97b2-439f-b3a8-2dc47a0ad3b7",
 CellID->490101258],
Cell[92115, 2114, 363, 12, 70, "Text",ExpressionUUID->"e61ca2bf-60b5-4591-a16e-a2f71daa4ce0",
 CellID->249980817],
Cell[92481, 2128, 115, 3, 70, "MathCaption",ExpressionUUID->"3b3c4892-6a65-43af-9e74-416c1b48da77",
 CellID->2139419895],
Cell[92599, 2133, 166, 5, 70, "Input",ExpressionUUID->"52d2d712-0506-44a9-9f8e-79ff5206f06d",
 CellID->1911473544],
Cell[92768, 2140, 545, 16, 70, "Text",ExpressionUUID->"9eab0cd5-44cd-4023-a984-545ace465286",
 CellID->1570546560],
Cell[93316, 2158, 12167, 341, 70, "DefinitionBox",ExpressionUUID->"de308bdd-2be0-4256-b73a-b532a54c54d1",
 CellID->1722327182],
Cell[105486, 2501, 589, 20, 70, "Caption",ExpressionUUID->"305e23ed-3d2b-4119-9885-8dd590a905d5",
 CellID->231225297],
Cell[106078, 2523, 127, 4, 70, "Text",ExpressionUUID->"83929e04-3cb1-49cd-b24b-2a853254b073",
 CellID->1540904390],
Cell[106208, 2529, 3157, 86, 70, "DefinitionBox",ExpressionUUID->"e1b709d1-e77a-4a17-a659-0c75b5b8177f",
 CellID->312091046],
Cell[109368, 2617, 583, 19, 70, "Caption",ExpressionUUID->"4b588c45-ffc1-4f47-a4fe-6de7b02287b3",
 CellID->1159144148]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110000, 2642, 57, 1, 70, "Section",ExpressionUUID->"e69692f1-e270-4d0b-a25c-be849afb8300",
 CellID->540567276],
Cell[110060, 2645, 175, 4, 70, "Text",ExpressionUUID->"ce938fae-c644-47a9-916b-b80f1c9e870f",
 CellID->1827655092],
Cell[CellGroupData[{
Cell[110260, 2653, 82, 1, 70, "Subsection",ExpressionUUID->"cc9732f4-3af8-4c02-b6e3-bb50cad03ee8",
 CellID->257268298],
Cell[110345, 2656, 985, 35, 70, "Text",ExpressionUUID->"96408ee4-64b2-457a-990f-0537bfb3e92b",
 CellID->1539574452],
Cell[111333, 2693, 187, 6, 70, "MathCaption",ExpressionUUID->"abf34f5e-409a-4b0c-a041-9b0ea77ac2fa",
 CellID->787376419],
Cell[CellGroupData[{
Cell[111545, 2703, 286, 9, 70, "Input",ExpressionUUID->"892dccbc-acde-4b1d-8cf0-1add6f2bdd64",
 CellID->641241319],
Cell[111834, 2714, 11477, 295, 70, "Output",ExpressionUUID->"0665a26c-9f3e-4d91-a31b-5f596874bfaf",
 CellID->76837286]
}, Open  ]],
Cell[123326, 3012, 266, 7, 70, "MathCaption",ExpressionUUID->"d7059209-bdc9-4aac-8b24-6cdbb626e24e",
 CellID->546537213],
Cell[CellGroupData[{
Cell[123617, 3023, 137, 4, 70, "Input",ExpressionUUID->"1e56c0dd-9212-4bb5-936c-320ca86625b8",
 CellID->863380672],
Cell[123757, 3029, 396, 8, 70, "Output",ExpressionUUID->"b0ee8339-6abc-47eb-9b15-2e7f287ec57d",
 CellID->1272316944]
}, Open  ]],
Cell[124168, 3040, 241, 5, 70, "Text",ExpressionUUID->"b07f1723-e87a-4948-8613-8b6042cb7a6e",
 CellID->1566749700],
Cell[CellGroupData[{
Cell[124434, 3049, 142, 4, 70, "Input",ExpressionUUID->"7d02638e-5f4d-4391-b7ed-eb4955ca84ef",
 CellID->908486935],
Cell[124579, 3055, 395, 8, 70, "Output",ExpressionUUID->"4d36d79c-08f1-4e3a-a892-d0f9d301748f",
 CellID->535902783]
}, Open  ]],
Cell[124989, 3066, 304, 10, 70, "MathCaption",ExpressionUUID->"4da2285d-fc22-40d8-a7fa-e41fec09bb2d",
 CellID->392276805],
Cell[CellGroupData[{
Cell[125318, 3080, 225, 8, 70, "Input",ExpressionUUID->"343be886-559f-471d-8fdc-9e2272b2d57d",
 CellID->221465345],
Cell[125546, 3090, 604, 19, 70, "Output",ExpressionUUID->"080e120e-6f0e-4128-81f7-42ac5ac50afb",
 CellID->29914394]
}, Open  ]],
Cell[126165, 3112, 775, 19, 70, "Text",ExpressionUUID->"04f3e95d-d9a6-4281-b0af-d72265f4757f",
 CellID->464982744],
Cell[126943, 3133, 196, 4, 70, "MathCaption",ExpressionUUID->"50a3b9c1-a5e7-43e2-8689-bc62b5abb6c1",
 CellID->1833142640],
Cell[CellGroupData[{
Cell[127164, 3141, 267, 9, 70, "Input",ExpressionUUID->"a24ffcf1-eedd-4ea0-afdd-0d9ff8dcf97c",
 CellID->1827950618],
Cell[127434, 3152, 2682, 80, 70, "Output",ExpressionUUID->"9763902f-35a5-4c5b-9fc1-a160df794429",
 CellID->679977437]
}, Open  ]],
Cell[130131, 3235, 164, 4, 70, "Text",ExpressionUUID->"342f9bc8-7e32-46ba-b77e-a32f143ff45e",
 CellID->1488223786],
Cell[130298, 3241, 193, 4, 70, "MathCaption",ExpressionUUID->"fbe9416c-c73d-4301-bedc-543923d48f1d",
 CellID->1609229737],
Cell[CellGroupData[{
Cell[130516, 3249, 432, 14, 70, "Input",ExpressionUUID->"60e856fe-85a3-4b85-8796-adaf47fc9fc0",
 CellID->915139441],
Cell[130951, 3265, 9607, 274, 70, "Output",ExpressionUUID->"39d80679-41a2-4f24-b593-6ba916cada52",
 CellID->794006111]
}, Open  ]],
Cell[140573, 3542, 69, 1, 70, "MathCaption",ExpressionUUID->"2fdb60b6-9b41-4f3f-831f-124c0cf285ed",
 CellID->1516242184],
Cell[CellGroupData[{
Cell[140667, 3547, 458, 15, 70, "Input",ExpressionUUID->"8a278fbf-5aa4-41d5-8459-1fbd6204686f",
 CellID->1441431186],
Cell[141128, 3564, 9607, 274, 70, "Output",ExpressionUUID->"3e66e97b-674d-4f8d-b957-4fb68b487bbf",
 CellID->702184882]
}, Open  ]],
Cell[150750, 3841, 247, 5, 70, "MathCaption",ExpressionUUID->"5ee42a68-90dc-4fc6-afbb-c7e4e7749d3f",
 CellID->1478232418],
Cell[151000, 3848, 78, 2, 70, "WolframAlphaLong",ExpressionUUID->"98d3d832-3143-4f53-ad0e-db15f818d774",
 CellID->413937183],
Cell[151081, 3852, 66, 1, 70, "Text",ExpressionUUID->"1d17b7ef-a471-4e47-86c7-a990b24de4f5",
 CellID->90413432],
Cell[151150, 3855, 196806, 3234, 70, "Text",ExpressionUUID->"700e22de-89da-436c-8fce-5f508c7386f3",
 CellID->984259520]
}, Open  ]],
Cell[CellGroupData[{
Cell[347993, 7094, 78, 1, 70, "Subsection",ExpressionUUID->"b79b7071-f73a-4aa0-abb2-98648d996e85",
 CellID->964105434],
Cell[348074, 7097, 224, 5, 70, "Text",ExpressionUUID->"833b453f-6b47-4a25-a2c6-8071cbbea3e5",
 CellID->1926312606],
Cell[CellGroupData[{
Cell[348323, 7106, 82, 1, 70, "Subsubsection",ExpressionUUID->"59507bd1-46f4-4b94-80e4-e57798e9e09b",
 CellID->433330108],
Cell[CellGroupData[{
Cell[348430, 7111, 77, 1, 70, "Subsubsubsection",ExpressionUUID->"d4b30ff8-f318-41cb-8a2a-fea4709f76c5",
 CellID->62840614],
Cell[348510, 7114, 257, 5, 70, "Text",ExpressionUUID->"f4bf4094-ad9a-40a5-9eda-c16a0efc737d",
 CellID->1020016945],
Cell[348770, 7121, 118, 3, 70, "MathCaption",ExpressionUUID->"5776afd7-ae91-4604-952d-a7f34072bfe9",
 CellID->381670302],
Cell[348891, 7126, 1108, 22, 70, "Input",ExpressionUUID->"34fc789b-f586-4745-9c62-ea8963a67e3e",
 CellID->199112125],
Cell[350002, 7150, 184, 7, 70, "MathCaption",ExpressionUUID->"26f03d1e-51f4-452f-b76d-3044c633e451",
 CellID->1332666250],
Cell[CellGroupData[{
Cell[350211, 7161, 185, 5, 70, "Input",ExpressionUUID->"dc2862ea-9981-4dee-a65b-11d7d4b6faa7",
 CellID->2014709187],
Cell[350399, 7168, 11415, 294, 70, "Output",ExpressionUUID->"6be72394-f409-4448-8256-50c9ff33de7f",
 CellID->2120249074]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[361863, 7468, 71, 1, 70, "Subsubsubsection",ExpressionUUID->"44739674-a7a1-48e0-9ea2-c6a46c28f43e",
 CellID->1747728821],
Cell[361937, 7471, 416, 13, 70, "DefinitionBox",ExpressionUUID->"35e4dcce-4b9b-42b2-a44b-c0495705bb0e",
 CellID->818482745],
Cell[362356, 7486, 477, 15, 70, "Caption",ExpressionUUID->"bea64911-66cc-42dd-a762-4945bce818ac",
 CellID->1606736180],
Cell[362836, 7503, 379, 11, 70, "MathCaption",ExpressionUUID->"440a1b9f-4670-4be3-9592-e077b75cf011",
 CellID->1093504481],
Cell[CellGroupData[{
Cell[363240, 7518, 298, 7, 70, "Input",ExpressionUUID->"cfc9c08e-4a52-4cbc-b5b8-78fa4094bc91",
 CellID->364761141],
Cell[363541, 7527, 11111, 287, 70, "Output",ExpressionUUID->"7f7a7d74-198c-419a-9ba1-01acee968902",
 CellID->2073287215]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[374701, 7820, 75, 1, 70, "Subsubsubsection",ExpressionUUID->"e12fac89-ccab-4419-b63f-5ed8b007213f",
 CellID->1673762423],
Cell[374779, 7823, 296, 8, 70, "Text",ExpressionUUID->"fbbe683b-6cc3-4a10-8603-f1b9cbf18a7f",
 CellID->529597330],
Cell[375078, 7833, 654, 20, 70, "DefinitionBox",ExpressionUUID->"3a8a0da8-43dc-484c-9dd4-13206f01c3e8",
 CellID->1118958870],
Cell[375735, 7855, 260, 9, 70, "Caption",ExpressionUUID->"41bd9e43-678a-4aa9-a878-97c0a10433e9",
 CellID->827431311],
Cell[375998, 7866, 1220, 33, 70, "DefinitionBox3Col",ExpressionUUID->"15e51530-d302-43ca-af99-4264decb0c7a",
 CellID->29072],
Cell[377221, 7901, 249, 10, 70, "Caption",ExpressionUUID->"a5c788a6-b2c6-47aa-a11b-c0b6082b91bc",
 CellID->956870455],
Cell[377473, 7913, 366, 14, 70, "MathCaption",ExpressionUUID->"4d063a2c-501e-48b1-ad79-394103dd55fa",
 CellID->1372190648],
Cell[CellGroupData[{
Cell[377864, 7931, 183, 5, 70, "Input",ExpressionUUID->"853119be-decc-447f-ad2f-58f3095b8e5b",
 CellID->581335803],
Cell[378050, 7938, 11278, 290, 70, "Output",ExpressionUUID->"50ce2c6a-b638-4b2e-9aa2-bd9afbb782b8",
 CellID->1591346998]
}, Open  ]],
Cell[389343, 8231, 295, 10, 70, "MathCaption",ExpressionUUID->"c87f597f-4337-4ff8-8e41-96dc43ab3d23",
 CellID->351193473],
Cell[CellGroupData[{
Cell[389663, 8245, 244, 6, 70, "Input",ExpressionUUID->"ec20cbbf-0350-467b-a291-760e9e62913b",
 CellID->1223638755],
Cell[389910, 8253, 11278, 290, 70, "Output",ExpressionUUID->"8dd7f301-e591-423b-a04e-bf09fd41ce90",
 CellID->1007655648]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[401237, 8549, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"52b0a1b7-97d8-43c4-ad95-efe43b379ef7",
 CellID->1524282659],
Cell[401300, 8552, 486, 15, 70, "Text",ExpressionUUID->"cbf2daed-d850-438b-b126-a8c67752d2f5",
 CellID->222118196],
Cell[401789, 8569, 620, 18, 70, "DefinitionBox",ExpressionUUID->"6e030ceb-faed-44b8-a2d9-4111bca95e73",
 CellID->1425592616],
Cell[402412, 8589, 450, 14, 70, "Caption",ExpressionUUID->"a93a359d-c52d-4d38-96e2-a0442cb96dd9",
 CellID->460047533],
Cell[402865, 8605, 857, 24, 70, "DefinitionBox3Col",ExpressionUUID->"caa7d835-63a5-48fb-91d3-8edd162247b8",
 CellID->2081738160],
Cell[403725, 8631, 253, 10, 70, "Caption",ExpressionUUID->"3124fc30-126f-4e75-b9aa-92fbfc5c4d32",
 CellID->969678196],
Cell[403981, 8643, 139, 4, 70, "Text",ExpressionUUID->"f39baf0f-85f3-49d6-b580-54223158604f",
 CellID->2046575969],
Cell[404123, 8649, 175, 4, 70, "MathCaption",ExpressionUUID->"153aecaa-d6fc-4ca2-bce6-7d737a3d74a0",
 CellID->132360816],
Cell[CellGroupData[{
Cell[404323, 8657, 274, 8, 70, "Input",ExpressionUUID->"0f289cf0-5ed2-411f-b3f4-b2cdfd30885e",
 CellID->1942659867],
Cell[CellGroupData[{
Cell[404622, 8669, 2522, 70, 70, "Print",ExpressionUUID->"823251e1-c9d2-40ec-a1ff-8b99d349cb2f",
 CellID->1221241714],
Cell[407147, 8741, 322, 9, 70, "Print",ExpressionUUID->"550946e8-6543-4393-8bc5-5492f610bc4f",
 CellID->1908272819],
Cell[407472, 8752, 20218, 423, 70, "Print",ExpressionUUID->"7cf16f5c-dd1f-4977-850b-fb2e5d2d5033",
 CellID->1820484635]
}, Open  ]],
Cell[427705, 9178, 11278, 290, 70, "Output",ExpressionUUID->"6c48e579-8325-4d4d-8493-56c3cb54500f",
 CellID->1685741636]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[439044, 9475, 77, 1, 70, "Subsubsection",ExpressionUUID->"a41bc0d1-0c28-4af9-b176-47796afd169b",
 CellID->267016150],
Cell[439124, 9478, 767, 24, 70, "Text",ExpressionUUID->"522763a1-4674-4db1-b175-73808bb60e6b",
 CellID->94668970],
Cell[439894, 9504, 664, 19, 70, "DefinitionBox",ExpressionUUID->"9d6dc0a5-32f9-4bb3-afd6-ed33a4d29a27",
 CellID->1824801338],
Cell[440561, 9525, 299, 10, 70, "MathCaption",ExpressionUUID->"d3a52281-d301-4677-9956-a7c20d843eef",
 CellID->2019621014],
Cell[CellGroupData[{
Cell[440885, 9539, 150, 4, 70, "Input",ExpressionUUID->"e8915955-54c8-4cc0-a9b6-0f89a8f3e2aa",
 CellID->643857816],
Cell[441038, 9545, 287, 7, 70, "Output",ExpressionUUID->"ef70f468-0cfe-4fda-b27e-f59b662db06e",
 CellID->15810684]
}, Open  ]],
Cell[441340, 9555, 142, 4, 70, "MathCaption",ExpressionUUID->"58cfb935-a7e5-44a3-8eb5-60bc059d189f",
 CellID->148216279],
Cell[CellGroupData[{
Cell[441507, 9563, 159, 4, 70, "Input",ExpressionUUID->"bf754be1-3a93-4d65-b2c8-3c0d729da3ec",
 CellID->2137454280],
Cell[441669, 9569, 12668, 311, 70, "Output",ExpressionUUID->"3f7df113-afc7-461f-ae73-252b6a7bab73",
 CellID->344747750]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[454386, 9886, 120, 3, 70, "Subsubsection",ExpressionUUID->"6730dcad-d05c-4406-bd58-6992c59e6172",
 CellID->1837977213],
Cell[454509, 9891, 144, 4, 70, "Text",ExpressionUUID->"9d4f324f-e7ce-45f9-9b06-57ee5e8f11df",
 CellID->1135789927],
Cell[454656, 9897, 617, 19, 70, "DefinitionBox",ExpressionUUID->"38bae675-fca5-45a0-bd17-e223cb586ad2",
 CellID->1719166110],
Cell[455276, 9918, 90, 1, 70, "Caption",ExpressionUUID->"80b2e727-b7e8-4ab8-a3d4-50023ef184e3",
 CellID->1779824032],
Cell[455369, 9921, 286, 10, 70, "MathCaption",ExpressionUUID->"a4f185f3-5e9f-434a-80d6-8c239cd205cf",
 CellID->1087636944],
Cell[CellGroupData[{
Cell[455680, 9935, 186, 5, 70, "Input",ExpressionUUID->"91d9ccb2-ce56-4cf1-b77e-65cb25acdb3d",
 CellID->533314544],
Cell[455869, 9942, 12636, 310, 70, "Output",ExpressionUUID->"86fff921-c5b1-42ed-bbd6-9cd93c7713fb",
 CellID->1534941352]
}, Open  ]],
Cell[468520, 10255, 392, 12, 70, "Text",ExpressionUUID->"c732489d-02c9-4246-ac78-d2c0c108eb5f",
 CellID->440466924],
Cell[468915, 10269, 631, 18, 70, "DefinitionBox",ExpressionUUID->"bb13719b-72ab-4904-ace3-0eb5fb22884b",
 CellID->1719094828],
Cell[469549, 10289, 121, 3, 70, "Caption",ExpressionUUID->"754ae95d-ef56-4f92-8fa9-81a04bb47c3a",
 CellID->581787458],
Cell[469673, 10294, 3661, 103, 70, "DefinitionBox3Col",ExpressionUUID->"6b858b3b-219b-478a-94c2-a3e3ecfd33a7",
 CellID->1460313503],
Cell[473337, 10399, 275, 11, 70, "Caption",ExpressionUUID->"6eae0d57-42d1-4625-b1bb-4a1341930631",
 CellID->2045927005],
Cell[473615, 10412, 171, 4, 70, "MathCaption",ExpressionUUID->"e5e9a8b1-c96f-4320-b5eb-31b9512fd6c6",
 CellID->1398268181],
Cell[CellGroupData[{
Cell[473811, 10420, 235, 6, 70, "Input",ExpressionUUID->"f719f04a-8e6a-4541-af28-d67fdfcc6212",
 CellID->779768946],
Cell[474049, 10428, 12823, 314, 70, "Output",ExpressionUUID->"933e0846-fda9-4b86-bc44-4c817ffff31c",
 CellID->1779061158]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[486921, 10748, 106, 2, 70, "Subsubsection",ExpressionUUID->"6f34c682-7a58-48a6-8999-91f5adb16530",
 CellID->384896847],
Cell[487030, 10752, 290, 10, 70, "MathCaption",ExpressionUUID->"cffe7bf6-4134-416d-acb0-63207ff07021",
 CellID->1747726374],
Cell[CellGroupData[{
Cell[487345, 10766, 191, 5, 70, "Input",ExpressionUUID->"b8601d60-cecb-406d-ac65-290d325073b9",
 CellID->755844152],
Cell[487539, 10773, 12848, 314, 70, "Output",ExpressionUUID->"51451019-b1ef-4dea-8698-5d87d56c6a12",
 CellID->1063560421]
}, Open  ]],
Cell[500402, 11090, 342, 9, 70, "DefinitionBox",ExpressionUUID->"8fda4587-41fc-4cf0-8733-fa1530c1b82d",
 CellID->1164836919],
Cell[500747, 11101, 64, 1, 70, "Caption",ExpressionUUID->"9f351d7a-1f0a-4c98-99bd-ce786bf8fefd",
 CellID->953171581],
Cell[500814, 11104, 355, 12, 70, "MathCaption",ExpressionUUID->"2dfab1b3-ba23-45c3-8f40-f8406296d379",
 CellID->1883423327],
Cell[CellGroupData[{
Cell[501194, 11120, 172, 4, 70, "Input",ExpressionUUID->"f1bbc3cb-9d53-49c8-8218-2fa567eaba55",
 CellID->786900109],
Cell[501369, 11126, 258, 4, 70, "Print",ExpressionUUID->"bbd848bb-25f8-4e27-8521-1132aa9aec3d",
 CellID->1253250375],
Cell[501630, 11132, 9425, 242, 70, "Output",ExpressionUUID->"bdad49a9-d2e0-4200-bffd-6d75119394ed",
 CellID->859442849]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[511116, 11381, 72, 1, 70, "Subsection",ExpressionUUID->"4d8b607d-88f0-45f9-82a8-e30ddaad5186",
 CellID->1956292219],
Cell[511191, 11384, 533, 9, 70, "Text",ExpressionUUID->"9a48473c-c9c6-48c7-ae40-b694c5d7443c",
 CellID->673780035],
Cell[CellGroupData[{
Cell[511749, 11397, 78, 1, 70, "Subsubsection",ExpressionUUID->"7c1ccdfb-32c6-4446-883a-feeda3d06343",
 CellID->576856357],
Cell[511830, 11400, 263, 11, 70, "Text",ExpressionUUID->"e1312557-2811-4810-9ded-221e503a0fb3",
 CellID->1399228810],
Cell[512096, 11413, 592, 16, 70, "DefinitionBox",ExpressionUUID->"47b02298-ac74-44e7-a80c-39d27a57c0a3",
 CellID->1661281776],
Cell[512691, 11431, 166, 4, 70, "Caption",ExpressionUUID->"b7a6ab48-f6ca-4d8d-bfd0-2f77c5c95500",
 CellID->2000128109],
Cell[512860, 11437, 74, 1, 70, "Text",ExpressionUUID->"d9cac4aa-587e-40b6-a4c6-5fffcc349eee",
 CellID->809854710],
Cell[CellGroupData[{
Cell[512959, 11442, 191, 5, 70, "Input",ExpressionUUID->"66ae3c48-8477-4dff-8a43-1d8084fd34d1",
 CellID->2018927283],
Cell[513153, 11449, 11572, 295, 70, "Output",ExpressionUUID->"c13f4370-4297-4382-9561-13b9fea660e0",
 CellID->1775673247]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[524774, 11750, 127, 3, 70, "Subsubsection",ExpressionUUID->"8fe47f09-85ae-48b8-9bf2-a99325cbc04c",
 CellID->1483609541],
Cell[524904, 11755, 331, 11, 70, "MathCaption",ExpressionUUID->"0de016a5-fcd9-484d-a1f7-4d2fe8183418",
 CellID->214676973],
Cell[525238, 11768, 329, 9, 70, "Input",ExpressionUUID->"a4a44b57-d9c8-4d99-81fd-7749d9b395fb",
 CellID->303358251],
Cell[525570, 11779, 359, 14, 70, "MathCaption",ExpressionUUID->"03bed52f-a059-49a1-a22e-1151352f2a33",
 CellID->375344567],
Cell[525932, 11795, 224, 7, 70, "Input",ExpressionUUID->"99e4031a-e9ed-49a4-bb89-78a23ee1b4e1",
 CellID->1256666330],
Cell[526159, 11804, 296, 10, 70, "MathCaption",ExpressionUUID->"2e5e29b7-160e-4d3d-8084-b4a82e118828",
 CellID->1035495647],
Cell[526458, 11816, 285, 8, 70, "Input",ExpressionUUID->"ab1521ec-a7e7-4032-b196-ee9cb2880f42",
 CellID->367863841],
Cell[526746, 11826, 173, 4, 70, "MathCaption",ExpressionUUID->"f1551587-2288-469d-aa2d-0ca5fa0dc813",
 CellID->61312748],
Cell[CellGroupData[{
Cell[526944, 11834, 292, 8, 70, "Input",ExpressionUUID->"1710e00b-5905-4b6d-9a01-80fe46dabe9d",
 CellID->1838688723],
Cell[CellGroupData[{
Cell[527261, 11846, 2526, 70, 70, "Print",ExpressionUUID->"1bfac55c-d663-4346-810a-c46aab14d18a",
 CellID->793810163],
Cell[529790, 11918, 323, 9, 70, "Print",ExpressionUUID->"ccc36d5a-a216-434b-86fb-275fcf4175a5",
 CellID->1398994377],
Cell[530116, 11929, 20233, 423, 70, "Print",ExpressionUUID->"5805850a-9962-4719-9d93-e6528c54f4ce",
 CellID->100043236]
}, Open  ]],
Cell[550364, 12355, 11071, 283, 70, "Output",ExpressionUUID->"1a63fb19-abc8-4131-a1fb-ac2883fe8a5e",
 CellID->1866962899]
}, Open  ]],
Cell[561450, 12641, 159, 4, 70, "MathCaption",ExpressionUUID->"c15e168b-752f-4ae8-beb8-f4f641c28398",
 CellID->274183705],
Cell[CellGroupData[{
Cell[561634, 12649, 177, 4, 70, "Input",ExpressionUUID->"647ad17e-af8e-4f38-b54a-b4ed7366b708",
 CellID->1853107120],
Cell[561814, 12655, 9519, 244, 70, "Output",ExpressionUUID->"63e1f938-cd9b-4f65-a76f-166273cc843d",
 CellID->1161877176]
}, Open  ]],
Cell[571348, 12902, 277, 10, 70, "MathCaption",ExpressionUUID->"610f9346-a693-4dd6-89b0-f96bb8c238ce",
 CellID->373642571],
Cell[CellGroupData[{
Cell[571650, 12916, 204, 5, 70, "Input",ExpressionUUID->"482cbae3-c27b-42c2-bbbd-81fd6f0de88d",
 CellID->568506969],
Cell[571857, 12923, 9551, 244, 70, "Output",ExpressionUUID->"4de04910-48ac-4976-9263-c911d7c07b11",
 CellID->600894861]
}, Open  ]],
Cell[581423, 13170, 170, 4, 70, "MathCaption",ExpressionUUID->"e0b7eca1-c133-4081-999d-ad3597b7ceb1",
 CellID->369078912],
Cell[CellGroupData[{
Cell[581618, 13178, 254, 6, 70, "Input",ExpressionUUID->"615f9fa1-3387-410c-9928-1773c6687c15",
 CellID->1176501448],
Cell[581875, 13186, 9552, 244, 70, "Output",ExpressionUUID->"6a8a3f1a-0893-47f1-9f11-544a6ae32887",
 CellID->1771820633]
}, Open  ]],
Cell[591442, 13433, 290, 10, 70, "MathCaption",ExpressionUUID->"5714cf78-10bc-4469-bb84-063b8326d583",
 CellID->1458062219],
Cell[CellGroupData[{
Cell[591757, 13447, 209, 5, 70, "Input",ExpressionUUID->"16677654-7e4f-47d7-9ac1-3b22407bbd34",
 CellID->715818816],
Cell[591969, 13454, 9572, 245, 70, "Output",ExpressionUUID->"82687883-9998-48f3-b75c-8d99f10d09ea",
 CellID->1492281749]
}, Open  ]],
Cell[601556, 13702, 354, 12, 70, "MathCaption",ExpressionUUID->"ddd3cf5f-854b-4bff-88a1-18cbc6738337",
 CellID->841142010],
Cell[CellGroupData[{
Cell[601935, 13718, 195, 6, 70, "Input",ExpressionUUID->"cc2bacc1-a46a-4b8e-9d20-9740e3d6951b",
 CellID->188913869],
Cell[602133, 13726, 258, 4, 70, "Print",ExpressionUUID->"afd25f94-f769-4d45-b679-5b3a1495fc6d",
 CellID->1269750011],
Cell[602394, 13732, 9572, 245, 70, "Output",ExpressionUUID->"f0194c14-e64d-42f6-be7c-8a8d43849b1b",
 CellID->1143434638]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[612027, 13984, 85, 1, 70, "Subsection",ExpressionUUID->"25828007-35b8-4e79-8c4a-759b5503e4f7",
 CellID->834625544],
Cell[612115, 13987, 403, 12, 70, "Text",ExpressionUUID->"a3278d6e-4a8a-4416-a339-1027524d243f",
 CellID->1375671789],
Cell[612521, 14001, 3745, 105, 70, "DefinitionBox",ExpressionUUID->"0e80acaa-96f8-4751-a80b-4f23d51c0c43",
 CellID->628162865],
Cell[616269, 14108, 99, 1, 70, "Caption",ExpressionUUID->"a30b4cb1-9d84-492b-9fa6-2218d07cafa0",
 CellID->503663403],
Cell[616371, 14111, 7617, 188, 70, "DefinitionBox3Col",ExpressionUUID->"512f55bf-db83-4d97-87bd-e5793f848901",
 CellID->495990132],
Cell[623991, 14301, 281, 11, 70, "Caption",ExpressionUUID->"1d0e7438-4204-4a0c-8ac0-d440a1b528a1",
 CellID->1722114517],
Cell[624275, 14314, 1076, 20, 70, "Text",ExpressionUUID->"46e55c6b-c3f2-4cdf-b921-d4aa1a415785",
 CellID->1268036459],
Cell[625354, 14336, 3817, 82, 70, "DefinitionBox",ExpressionUUID->"539edf23-1bf1-4164-91ae-4b9a073dd30d",
 CellID->1644998689],
Cell[629174, 14420, 280, 11, 70, "Caption",ExpressionUUID->"309712ee-94a5-4f3f-ab3e-79b0b2927571",
 CellID->788494545],
Cell[629457, 14433, 387, 12, 70, "Text",ExpressionUUID->"bf207b90-57ee-4bb4-9083-c4692aaa4973",
 CellID->1104163398],
Cell[629847, 14447, 1015, 26, 70, "DefinitionBox",ExpressionUUID->"670401f0-3f2d-4c42-ba73-2088efe730a2",
 CellID->219567939],
Cell[630865, 14475, 174, 4, 70, "Caption",ExpressionUUID->"1edf1193-d17f-464a-a9f7-fb575b5263c4",
 CellID->908945433],
Cell[631042, 14481, 1700, 41, 70, "DefinitionBox3Col",ExpressionUUID->"f10bbcbb-e585-417c-bd18-1bd82a71dd35",
 CellID->1624929440],
Cell[632745, 14524, 266, 11, 70, "Caption",ExpressionUUID->"381af045-db83-4dc7-8408-ee4837f277b1",
 CellID->639559181],
Cell[633014, 14537, 410, 12, 70, "Text",ExpressionUUID->"9eb56bb0-abf5-44c8-9a5b-4ffb8414e9b3",
 CellID->67687095],
Cell[633427, 14551, 3820, 96, 70, "DefinitionBox",ExpressionUUID->"c22c7cac-04c3-4de0-a388-92514355e884",
 CellID->131328315],
Cell[637250, 14649, 358, 14, 70, "Caption",ExpressionUUID->"4cacfe8a-ed58-457f-838d-49d01b94c01e",
 CellID->751094438],
Cell[637611, 14665, 1005, 32, 70, "Text",ExpressionUUID->"b9ed5341-ca23-4f38-941b-0f63a40cdb86",
 CellID->1062814029],
Cell[638619, 14699, 4220, 125, 70, "Text",ExpressionUUID->"a41bbd16-e4f5-49ae-bb9c-bba14767a676",
 CellID->2093893304],
Cell[642842, 14826, 203, 5, 70, "MathCaption",ExpressionUUID->"80d1c9e7-0b4a-4f60-bb62-a0a5ed64f7f9",
 CellID->1669899255],
Cell[CellGroupData[{
Cell[643070, 14835, 202, 6, 70, "Input",ExpressionUUID->"769c5945-aa18-4099-9b7f-6d316804aadc",
 CellID->532996142],
Cell[643275, 14843, 66, 1, 70, "Output",ExpressionUUID->"ba8fe513-5a38-429e-8537-d9d38a1f05cf",
 CellID->177650624]
}, Open  ]],
Cell[643356, 14847, 145, 4, 70, "MathCaption",ExpressionUUID->"54cb648d-4e03-46c9-a7fe-6536d5679aa9",
 CellID->365627628],
Cell[CellGroupData[{
Cell[643526, 14855, 272, 7, 70, "Input",ExpressionUUID->"4e43c328-1da3-4de0-811f-0921a65f1891",
 CellID->186560353],
Cell[643801, 14864, 434, 13, 70, "Output",ExpressionUUID->"3c03b62f-b686-4f9e-9ea3-8fd94b62fe12",
 CellID->811386742]
}, Open  ]],
Cell[644250, 14880, 130, 3, 70, "MathCaption",ExpressionUUID->"de26ae86-e90b-40d3-a16d-deb2d0b5322b",
 CellID->1987903082],
Cell[CellGroupData[{
Cell[644405, 14887, 339, 7, 70, "Input",ExpressionUUID->"0b3892a8-9f1e-4b61-978d-d4995067fb70",
 CellID->136519148],
Cell[644747, 14896, 136, 2, 70, "Print",ExpressionUUID->"d4811ee9-b9b2-4a22-88ab-81bb7f193e10",
 CellID->1026543908],
Cell[644886, 14900, 10021, 257, 70, "Output",ExpressionUUID->"a678273c-9c8f-4fe2-a770-f2693ccadada",
 CellID->755245404]
}, Open  ]],
Cell[654922, 15160, 657, 18, 70, "Text",ExpressionUUID->"ec5bd4d6-3582-4e1a-92b2-051935c27e02",
 CellID->673783308],
Cell[655582, 15180, 4219, 125, 70, "Text",ExpressionUUID->"e53c9eed-45a1-416d-a899-097b6033d395",
 CellID->594786925],
Cell[659804, 15307, 99, 1, 70, "MathCaption",ExpressionUUID->"1e48c723-a1c4-49e2-8836-8203b83f339a",
 CellID->1134620377],
Cell[CellGroupData[{
Cell[659928, 15312, 119, 3, 70, "Input",ExpressionUUID->"87e0ae3b-931d-4d2d-8e0d-f910f0fca508",
 CellID->2057374526],
Cell[660050, 15317, 289, 6, 70, "Output",ExpressionUUID->"f26dadd7-07be-4fdf-8e1f-f7de4c4ecd36",
 CellID->568030100]
}, Open  ]],
Cell[660354, 15326, 91, 1, 70, "MathCaption",ExpressionUUID->"149e5fd1-a4f7-4e6b-9dd1-d5e6a2420328",
 CellID->172558847],
Cell[CellGroupData[{
Cell[660470, 15331, 176, 6, 70, "Input",ExpressionUUID->"254f04d4-8c08-457e-a68e-4d58a776b79f",
 CellID->1093618079],
Cell[660649, 15339, 603, 14, 70, "Output",ExpressionUUID->"5a9b5daf-3d19-49f8-9475-5382fa358574",
 CellID->1781151258]
}, Open  ]],
Cell[661267, 15356, 103, 2, 70, "MathCaption",ExpressionUUID->"b988fd27-a3d2-479a-876c-cd23b280aba1",
 CellID->47471690],
Cell[CellGroupData[{
Cell[661395, 15362, 182, 6, 70, "Input",ExpressionUUID->"a4024637-3bc7-4581-b211-69de62ca0d84",
 CellID->1140260793],
Cell[661580, 15370, 9551, 236, 70, "Output",ExpressionUUID->"76f6fe1c-46cd-4831-a613-bde274b4539c",
 CellID->384783444]
}, Open  ]],
Cell[671146, 15609, 349, 11, 70, "Text",ExpressionUUID->"c9d004ce-93ca-4d49-bbc5-2414e1ca08a5",
 CellID->1070903617],
Cell[671498, 15622, 3042, 83, 70, "DefinitionBox",ExpressionUUID->"563794bc-26a7-4dd7-9637-f00a99157f5b",
 CellID->1990717933],
Cell[674543, 15707, 123, 3, 70, "Caption",ExpressionUUID->"799600b2-439e-4792-9f9e-49ea0c768b8b",
 CellID->201079671],
Cell[674669, 15712, 2024, 50, 70, "DefinitionBox3Col",ExpressionUUID->"31229594-327e-47f3-a9db-c5e58fb9eb9f",
 CellID->3905959],
Cell[676696, 15764, 250, 10, 70, "Caption",ExpressionUUID->"5e16ed93-063a-4c69-8133-173038286faf",
 CellID->1222943503],
Cell[676949, 15776, 578, 19, 70, "MathCaption",ExpressionUUID->"ed32f789-b23a-4408-be95-6929210e2995",
 CellID->661398041],
Cell[CellGroupData[{
Cell[677552, 15799, 272, 7, 70, "Input",ExpressionUUID->"08358fc9-303e-4655-adc5-749d9624536d",
 CellID->741518215],
Cell[677827, 15808, 616, 12, 70, "Output",ExpressionUUID->"1c64936e-2326-44b3-a975-3762a95c3f71",
 CellID->1561171098]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[678504, 15827, 54, 1, 70, "Section",ExpressionUUID->"d19a2ae9-b08b-439d-91e4-ba4334fd518c",
 CellID->1387790784],
Cell[CellGroupData[{
Cell[678583, 15832, 78, 1, 70, "Subsection",ExpressionUUID->"9e44f86b-41ba-4c66-b337-ba131fbf2676",
 CellID->1225055698],
Cell[678664, 15835, 976, 35, 70, "Text",ExpressionUUID->"bf1da926-7fc0-4bdb-a397-7655a367899c",
 CellID->72301240],
Cell[679643, 15872, 100, 1, 70, "MathCaption",ExpressionUUID->"990ef1ae-324d-47ad-889e-8f52c53c0e5c",
 CellID->1419719176],
Cell[CellGroupData[{
Cell[679768, 15877, 295, 9, 70, "Input",ExpressionUUID->"fc8c3d70-2cab-4b9b-a016-76fd68b6b847",
 CellID->458823941],
Cell[680066, 15888, 11059, 285, 70, "Output",ExpressionUUID->"1651d554-4027-476e-8b57-09a87b0a77f7",
 CellID->647445040]
}, Open  ]],
Cell[691140, 16176, 267, 7, 70, "MathCaption",ExpressionUUID->"47e8e48f-42af-404d-abf6-9d90534806fa",
 CellID->1754470356],
Cell[CellGroupData[{
Cell[691432, 16187, 142, 4, 70, "Input",ExpressionUUID->"0bfa3f67-cd5f-44eb-b96e-8e90116edf17",
 CellID->285316335],
Cell[691577, 16193, 355, 7, 70, "Output",ExpressionUUID->"e8204bcf-db3c-4ed4-98e0-5f47678c236f",
 CellID->309147931]
}, Open  ]],
Cell[691947, 16203, 263, 5, 70, "Text",ExpressionUUID->"348763f7-0bc9-48bf-8f04-edbfc051d2f8",
 CellID->460190071],
Cell[692213, 16210, 306, 10, 70, "MathCaption",ExpressionUUID->"09a9a139-fd94-4ec5-805c-8c9beae65986",
 CellID->1259531385],
Cell[CellGroupData[{
Cell[692544, 16224, 229, 8, 70, "Input",ExpressionUUID->"919d221a-fe2c-4f47-b185-5ad67149ea4a",
 CellID->1197679216],
Cell[692776, 16234, 511, 15, 70, "Output",ExpressionUUID->"d7339197-53df-4c10-8c3e-0eebf14f4558",
 CellID->1086334224]
}, Open  ]],
Cell[693302, 16252, 815, 24, 70, "Text",ExpressionUUID->"4a7a36e7-7187-4b93-b0c4-dea1c7674121",
 CellID->1823731250],
Cell[694120, 16278, 453, 8, 70, "Text",ExpressionUUID->"07f33969-d70d-4949-83ec-948be07e9dee",
 CellID->220886326],
Cell[CellGroupData[{
Cell[694598, 16290, 88, 1, 70, "Subsubsubsection",ExpressionUUID->"1cd43622-1839-4f17-8b80-a41457dd83fe",
 CellID->237385776],
Cell[694689, 16293, 592, 19, 70, "Text",ExpressionUUID->"e4bac61c-cff5-48c3-82c3-ef3f1eca128b",
 CellID->1605734052],
Cell[695284, 16314, 2640, 72, 70, "DefinitionBox",ExpressionUUID->"9a4fb15b-f2a3-4341-a1f7-dcb8e8eb6374",
 CellID->730612315],
Cell[697927, 16388, 91, 1, 70, "Caption",ExpressionUUID->"caf2709e-5b45-4aea-938a-fe5d3586a554",
 CellID->69474757],
Cell[698021, 16391, 97, 1, 70, "MathCaption",ExpressionUUID->"baa91b22-bfed-4888-92a1-bfd45e8dfab0",
 CellID->1155116896],
Cell[CellGroupData[{
Cell[698143, 16396, 146, 4, 70, "Input",ExpressionUUID->"a98b0c6b-cf37-4343-8b6a-de2e08e4cfc4",
 CellID->797502192],
Cell[698292, 16402, 9802, 248, 70, "Output",ExpressionUUID->"641cb8d5-be21-41b6-8886-6055eb9300c2",
 CellID->113335974]
}, Open  ]],
Cell[708109, 16653, 141, 4, 70, "MathCaption",ExpressionUUID->"25f39422-6cfc-4e2e-89f9-999244a9d553",
 CellID->811349928],
Cell[CellGroupData[{
Cell[708275, 16661, 169, 5, 70, "Input",ExpressionUUID->"55bdea2d-c76b-46ae-a25e-b8eb0c1bb9a4",
 CellID->1984565093],
Cell[708447, 16668, 464, 10, 70, "Output",ExpressionUUID->"d0819ef9-e2b9-4997-bda4-809283433e59",
 CellID->19720129]
}, Open  ]],
Cell[708926, 16681, 201, 4, 70, "MathCaption",ExpressionUUID->"8b086dea-9cac-476e-a33b-abfe05dcdaca",
 CellID->589880236],
Cell[CellGroupData[{
Cell[709152, 16689, 369, 9, 70, "Input",ExpressionUUID->"37915018-8505-4e49-9c05-fca42cdb18be",
 CellID->557131970],
Cell[709524, 16700, 429, 11, 70, "Output",ExpressionUUID->"e95e5de7-2553-44dd-ae25-8546a606b437",
 CellID->723726465]
}, Open  ]],
Cell[709968, 16714, 147, 4, 70, "Text",ExpressionUUID->"bc349a52-29c8-48e6-bb3c-2a9538487c99",
 CellID->1398286274]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[710164, 16724, 70, 1, 70, "Subsection",ExpressionUUID->"9918bece-d861-41e8-b4f2-338503f90ab0",
 CellID->1281067914],
Cell[710237, 16727, 483, 8, 70, "Text",ExpressionUUID->"1581648e-7ead-431b-95f5-ef69fccba5d9",
 CellID->1997801546],
Cell[CellGroupData[{
Cell[710745, 16739, 90, 1, 70, "Subsubsection",ExpressionUUID->"be3a2c0e-c83d-4e22-a169-82fa0db8dd5c",
 CellID->1973203023],
Cell[CellGroupData[{
Cell[710860, 16744, 73, 1, 70, "Subsubsubsection",ExpressionUUID->"f80a10dc-f30e-41b3-b202-dd1d419221af",
 CellID->666869090],
Cell[710936, 16747, 422, 13, 70, "Text",ExpressionUUID->"5b7f740d-43cb-46c3-8979-be376e30fff5",
 CellID->611320926],
Cell[711361, 16762, 480, 14, 70, "DefinitionBox",ExpressionUUID->"e067f818-fe50-41da-ae84-1b691ff17691",
 CellID->351641937],
Cell[711844, 16778, 135, 4, 70, "Caption",ExpressionUUID->"28229b3f-33c9-4ebf-8e1d-3db7046bebc4",
 CellID->171038615],
Cell[711982, 16784, 1561, 46, 70, "DefinitionBox3Col",ExpressionUUID->"0a03e959-a7e2-4fad-8ae6-995e2c43e55a",
 CellID->1055700668],
Cell[713546, 16832, 272, 11, 70, "Caption",ExpressionUUID->"2523945d-51c5-4953-9a6e-806248a9865b",
 CellID->651235562],
Cell[713821, 16845, 360, 8, 70, "MathCaption",ExpressionUUID->"efdbfaa5-9a04-4f70-aae7-b4edb9e0b1db",
 CellID->1312882619],
Cell[CellGroupData[{
Cell[714206, 16857, 302, 7, 70, "Input",ExpressionUUID->"2620c9b5-10b1-42ab-9a01-a9f6c0b66e1d",
 CellID->223704608],
Cell[CellGroupData[{
Cell[714533, 16868, 425, 10, 70, "Print",ExpressionUUID->"fac426df-46d1-4596-8554-ba60c6c82f29",
 CellID->916487219],
Cell[714961, 16880, 426, 10, 70, "Print",ExpressionUUID->"0bc25c00-b4d9-4298-97e4-3f1f96598ee9",
 CellID->1393161984],
Cell[715390, 16892, 423, 10, 70, "Print",ExpressionUUID->"b3781c83-45f5-4722-94dc-19cc47d801fc",
 CellID->1933820101],
Cell[715816, 16904, 426, 10, 70, "Print",ExpressionUUID->"16f0900b-e562-44fb-a414-72a01148a055",
 CellID->1615625703],
Cell[716245, 16916, 422, 10, 70, "Print",ExpressionUUID->"2a97e141-f939-42d1-9764-6286ba5f23fc",
 CellID->944609390],
Cell[716670, 16928, 407, 10, 70, "Print",ExpressionUUID->"60b86c85-fc65-47ac-ac12-fe46a9c9121b",
 CellID->1760647747],
Cell[717080, 16940, 406, 10, 70, "Print",ExpressionUUID->"c672ae06-0e6d-4f03-8867-1bfecac5cdeb",
 CellID->729347633],
Cell[717489, 16952, 408, 10, 70, "Print",ExpressionUUID->"8da9eeac-6073-4b89-9d56-7eda4b1a6a50",
 CellID->928300839],
Cell[717900, 16964, 400, 9, 70, "Print",ExpressionUUID->"04d6fb22-bf16-4e25-b571-88ba0e330dac",
 CellID->200801478],
Cell[718303, 16975, 409, 10, 70, "Print",ExpressionUUID->"9ef4a758-f4df-4f11-a5c9-284fb834652f",
 CellID->584112668],
Cell[718715, 16987, 408, 10, 70, "Print",ExpressionUUID->"37a287fd-6361-46d2-bfc1-b44816bf90d3",
 CellID->805571796],
Cell[719126, 16999, 420, 10, 70, "Print",ExpressionUUID->"526c8537-fa79-44c2-af81-472d22f45e66",
 CellID->507574800],
Cell[719549, 17011, 426, 10, 70, "Print",ExpressionUUID->"9974ceb7-2d0f-4a96-86fa-fb67dca17d11",
 CellID->1093520098]
}, Open  ]],
Cell[719990, 17024, 10862, 281, 70, "Output",ExpressionUUID->"c4e7caab-f550-4096-939a-6b3052a735b0",
 CellID->627236060]
}, Open  ]],
Cell[730867, 17308, 123, 3, 70, "MathCaption",ExpressionUUID->"8b518322-fdab-436b-ad53-afaf028bd748",
 CellID->1190633123],
Cell[CellGroupData[{
Cell[731015, 17315, 310, 10, 70, "Input",ExpressionUUID->"ff466ca8-cab5-4045-9628-bb2fbfdef1cb",
 CellID->718275515],
Cell[731328, 17327, 186498, 4955, 70, "Output",ExpressionUUID->"141e8280-d99e-4a4e-a415-9ba3c259068f",
 CellID->2106720944]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[917875, 22288, 78, 1, 70, "Subsubsubsection",ExpressionUUID->"e2446b2a-2778-4b23-90a3-c38713fe7e21",
 CellID->528878766],
Cell[917956, 22291, 255, 5, 70, "MathCaption",ExpressionUUID->"79901d2a-cda6-47fe-a897-79c1ceb53dba",
 CellID->1740422649],
Cell[918214, 22298, 1109, 22, 70, "Input",ExpressionUUID->"33801e12-df59-499e-b326-69a48bd6f693",
 CellID->750369086],
Cell[919326, 22322, 184, 7, 70, "MathCaption",ExpressionUUID->"d2067a46-5b30-431c-97d9-fa41ebe2f70e",
 CellID->1712427223],
Cell[CellGroupData[{
Cell[919535, 22333, 203, 6, 70, "Input",ExpressionUUID->"87944de0-5539-458f-9288-96cee55dfc8f",
 CellID->188499867],
Cell[919741, 22341, 10617, 274, 70, "Output",ExpressionUUID->"72c0a562-1ee6-4b13-a5bc-9b3831be85e3",
 CellID->2096017719]
}, Open  ]],
Cell[930373, 22618, 90, 1, 70, "MathCaption",ExpressionUUID->"706b86b5-aa07-4a38-90a5-4ebfa6a0ec06",
 CellID->292613774],
Cell[CellGroupData[{
Cell[930488, 22623, 170, 4, 70, "Input",ExpressionUUID->"8cd303e5-9546-49d8-b8a0-20c152fcca9b",
 CellID->222147988],
Cell[930661, 22629, 265, 7, 70, "Output",ExpressionUUID->"308fd610-6930-4bbb-8b68-7929458724e5",
 CellID->448057845]
}, Open  ]],
Cell[930941, 22639, 394, 7, 70, "Text",ExpressionUUID->"99f40dee-ba26-4972-b94b-2eade357f383",
 CellID->1796883614],
Cell[931338, 22648, 472, 13, 70, "MathCaption",ExpressionUUID->"be0f2f1c-3d2a-4af7-884b-e127eb2e66c2",
 CellID->306227952],
Cell[CellGroupData[{
Cell[931835, 22665, 508, 14, 70, "Input",ExpressionUUID->"b23e98f7-0404-4195-9d88-3ec053b005f0",
 CellID->1402371052],
Cell[932346, 22681, 10617, 274, 70, "Output",ExpressionUUID->"ac586c6c-10a9-4cea-8541-d5a6c04d214d",
 CellID->1430534533]
}, Open  ]],
Cell[942978, 22958, 81, 1, 70, "MathCaption",ExpressionUUID->"5c22494b-61af-4e91-b502-bb69efcadf5e",
 CellID->136402831],
Cell[CellGroupData[{
Cell[943084, 22963, 175, 5, 70, "Input",ExpressionUUID->"ab4e51e3-68f9-4e69-9726-43099ec792b6",
 CellID->1157329268],
Cell[943262, 22970, 290, 7, 70, "Output",ExpressionUUID->"b2232170-a157-43fc-ae69-e23f48acc671",
 CellID->1914467966]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[943601, 22983, 71, 1, 70, "Subsubsubsection",ExpressionUUID->"340ed5ba-13a0-45a0-956d-1a40f204c20c",
 CellID->1560572010],
Cell[943675, 22986, 484, 13, 70, "Text",ExpressionUUID->"ed7eb4b2-25e4-4c01-9ad6-3f7bea1b7bea",
 CellID->1315991259],
Cell[944162, 23001, 526, 16, 70, "DefinitionBox",ExpressionUUID->"b49234e0-d967-4ce5-b038-91646f9b08d7",
 CellID->391089394],
Cell[944691, 23019, 111, 3, 70, "Caption",ExpressionUUID->"fa0c8362-55eb-4e52-8997-ff03e9a52b41",
 CellID->1739485138],
Cell[944805, 23024, 1518, 44, 70, "DefinitionBox3Col",ExpressionUUID->"68a1e3d9-42c6-4929-a6b0-4486db4f75ab",
 CellID->2083543412],
Cell[946326, 23070, 267, 11, 70, "Caption",ExpressionUUID->"73cd4c91-738c-44cd-9c6a-f770eee1a345",
 CellID->1245777502],
Cell[946596, 23083, 336, 8, 70, "MathCaption",ExpressionUUID->"76c9154a-90d5-4e02-be62-836432608c26",
 CellID->178778395],
Cell[CellGroupData[{
Cell[946957, 23095, 313, 7, 70, "Input",ExpressionUUID->"d253d95f-dfa8-42f4-b113-ccc5d1ba66e3",
 CellID->398862612],
Cell[947273, 23104, 10616, 274, 70, "Output",ExpressionUUID->"893f0c87-9af1-4940-b3a4-de7e261339ec",
 CellID->715621561]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[957938, 23384, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"9d802bc5-c748-488f-acb2-48c7d31b6263",
 CellID->1066609228],
Cell[958001, 23387, 487, 15, 70, "Text",ExpressionUUID->"412bea9d-d477-49ac-bb4f-82275b7742c8",
 CellID->1455293487],
Cell[CellGroupData[{
Cell[958513, 23406, 214, 6, 70, "Input",ExpressionUUID->"0aabb6c9-ce77-4e31-8de5-759d1bc239b4",
 CellID->1426380326],
Cell[CellGroupData[{
Cell[958752, 23416, 5297, 154, 70, "Print",ExpressionUUID->"00a06728-085f-467e-a88d-3e504003dd69",
 CellID->1543152527],
Cell[964052, 23572, 499, 13, 70, "Print",ExpressionUUID->"0a0fdacc-625b-4966-ae46-37de9c8cc286",
 CellID->604516470],
Cell[964554, 23587, 54921, 1136, 70, "Print",ExpressionUUID->"a1695b67-ab11-4474-bff5-e41c74c91d4f",
 CellID->363177333]
}, Open  ]],
Cell[1019490, 24726, 10607, 274, 70, "Output",ExpressionUUID->"bbd2b54d-e829-42e8-9719-93b66e2de1ed",
 CellID->772910957]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1030158, 25007, 73, 1, 70, "Subsubsection",ExpressionUUID->"3d1b1b68-42cd-4709-8706-2c4cbd071dc0",
 CellID->1796762249],
Cell[1030234, 25010, 93, 1, 70, "Text",ExpressionUUID->"5ea86dae-3658-4bd5-8917-0641309bf19f",
 CellID->1723717413],
Cell[1030330, 25013, 145, 4, 70, "MathCaption",ExpressionUUID->"39bdf239-9282-4c95-ae29-86bd76b6ee7f",
 CellID->141883528],
Cell[CellGroupData[{
Cell[1030500, 25021, 171, 4, 70, "Input",ExpressionUUID->"a28641b0-9aab-4ded-8656-d08c90bd7405",
 CellID->929606926],
Cell[1030674, 25027, 9647, 248, 70, "Output",ExpressionUUID->"965643d9-c1ae-4b84-abfd-7a3ba12bba46",
 CellID->185873596]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1040370, 25281, 100, 1, 70, "Subsubsection",ExpressionUUID->"95749b5d-3655-4bd8-9629-3ff8eb76d405",
 CellID->1908271188],
Cell[1040473, 25284, 292, 10, 70, "MathCaption",ExpressionUUID->"c9ded52e-f93e-4033-b2ac-60f7d0e5da3a",
 CellID->1758442397],
Cell[CellGroupData[{
Cell[1040790, 25298, 197, 5, 70, "Input",ExpressionUUID->"f835e741-703c-4658-9b3e-27c112283398",
 CellID->471416365],
Cell[1040990, 25305, 10412, 263, 70, "Output",ExpressionUUID->"fc463ad1-8295-4d77-ad76-4c274c5a1e25",
 CellID->1536305234]
}, Open  ]],
Cell[1051417, 25571, 355, 12, 70, "MathCaption",ExpressionUUID->"4ad94f24-a958-4597-9eff-255b28fe86f3",
 CellID->2143452651],
Cell[CellGroupData[{
Cell[1051797, 25587, 176, 4, 70, "Input",ExpressionUUID->"9256e505-426b-469b-8a08-0bcd79a0d95a",
 CellID->970526932],
Cell[1051976, 25593, 10412, 263, 70, "Output",ExpressionUUID->"952ead75-27a4-435d-bd2b-a3589c9b098d",
 CellID->1486179957]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1062449, 25863, 67, 1, 70, "Subsection",ExpressionUUID->"c1154757-9ecd-4e63-b704-0730e3b56115",
 CellID->1059869896],
Cell[1062519, 25866, 532, 9, 70, "Text",ExpressionUUID->"7c7ca63f-8b3b-471e-9117-c69df0171773",
 CellID->214174283],
Cell[CellGroupData[{
Cell[1063076, 25879, 73, 1, 70, "Subsubsection",ExpressionUUID->"20115ae1-498c-4dcf-9f59-ea11ae7e5f7f",
 CellID->444582009],
Cell[1063152, 25882, 74, 1, 70, "Text",ExpressionUUID->"c32fcc19-c988-486e-961a-7e285876c779",
 CellID->168882663],
Cell[CellGroupData[{
Cell[1063251, 25887, 195, 5, 70, "Input",ExpressionUUID->"5e898ebe-a3dc-4fe7-a9d3-faf6b9ebaa8a",
 CellID->1585019354],
Cell[1063449, 25894, 11281, 289, 70, "Output",ExpressionUUID->"8fc03edc-b37b-4fc4-b82e-9babf122eb20",
 CellID->844239042]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1074779, 26189, 122, 3, 70, "Subsubsection",ExpressionUUID->"4808fa59-ed24-4af0-9b8b-87a7d05754e6",
 CellID->1807183132],
Cell[1074904, 26194, 374, 8, 70, "MathCaption",ExpressionUUID->"4cb266c4-44e3-4a83-86b3-7894d9f25d0d",
 CellID->1847604807],
Cell[CellGroupData[{
Cell[1075303, 26206, 312, 7, 70, "Input",ExpressionUUID->"e711528c-b777-466d-badd-739f930460e8",
 CellID->80455629],
Cell[CellGroupData[{
Cell[1075640, 26217, 425, 10, 70, "Print",ExpressionUUID->"673a7597-1780-4b24-ad90-648bd139a01e",
 CellID->534263066],
Cell[1076068, 26229, 423, 10, 70, "Print",ExpressionUUID->"b2b35560-eabe-47f6-9ca8-337928fab252",
 CellID->2122200127],
Cell[1076494, 26241, 422, 10, 70, "Print",ExpressionUUID->"b9f01a55-a03f-4574-bd41-4f6ec59d16da",
 CellID->840909824],
Cell[1076919, 26253, 421, 10, 70, "Print",ExpressionUUID->"eeda0012-1fbe-4fc2-96ee-2d36e57462a6",
 CellID->53150085],
Cell[1077343, 26265, 423, 10, 70, "Print",ExpressionUUID->"e7829f01-89eb-4254-9dbd-507c480dbbc6",
 CellID->1067283359],
Cell[1077769, 26277, 407, 10, 70, "Print",ExpressionUUID->"26497745-770d-42a0-98ec-909c53a53b8f",
 CellID->1639847900],
Cell[1078179, 26289, 409, 10, 70, "Print",ExpressionUUID->"cf7e9f9f-ff90-42db-a6c0-4e5f9df2d36b",
 CellID->961166574],
Cell[1078591, 26301, 409, 10, 70, "Print",ExpressionUUID->"17e83750-afbf-4aa5-9543-b9c1e6c0c9ee",
 CellID->1489251853],
Cell[1079003, 26313, 410, 10, 70, "Print",ExpressionUUID->"22d707d5-a07a-43ff-b18e-253b2ef83cb4",
 CellID->1713518480],
Cell[1079416, 26325, 409, 10, 70, "Print",ExpressionUUID->"0ba6712b-a45c-4220-bb91-6ebe93564c13",
 CellID->499513137],
Cell[1079828, 26337, 406, 10, 70, "Print",ExpressionUUID->"3b027f41-0c09-4a87-b6bd-8f824f628b1e",
 CellID->406807222],
Cell[1080237, 26349, 422, 10, 70, "Print",ExpressionUUID->"9e1eb766-3c99-44b8-89d1-9ebb673f6437",
 CellID->690439218],
Cell[1080662, 26361, 425, 10, 70, "Print",ExpressionUUID->"d9fd1a9c-3a28-49fe-a0b2-479eb460a290",
 CellID->820946473]
}, Open  ]],
Cell[1081102, 26374, 10682, 273, 70, "Output",ExpressionUUID->"ed084bae-18b0-4c2c-84b8-1923798d053d",
 CellID->2128264267]
}, Open  ]],
Cell[1091799, 26650, 199, 7, 70, "MathCaption",ExpressionUUID->"e74d8707-bb21-4eb8-aed5-03719524af1f",
 CellID->1446718475],
Cell[1092001, 26659, 243, 7, 70, "Input",ExpressionUUID->"9c819387-778c-4519-999b-fd07829f270b",
 CellID->1187557991],
Cell[1092247, 26668, 90, 1, 70, "MathCaption",ExpressionUUID->"0045ed07-a26a-4969-8a71-f8a23d39effc",
 CellID->918869862],
Cell[CellGroupData[{
Cell[1092362, 26673, 188, 5, 70, "Input",ExpressionUUID->"e62c4eec-8eaa-4f74-9104-add09102d546",
 CellID->890865057],
Cell[1092553, 26680, 266, 7, 70, "Output",ExpressionUUID->"3956897b-3322-4459-abe2-580d4b0764ff",
 CellID->1249911037]
}, Open  ]],
Cell[1092834, 26690, 514, 13, 70, "MathCaption",ExpressionUUID->"514e4516-93b5-4c17-b3c7-c18a5f345366",
 CellID->916506595],
Cell[1093351, 26705, 557, 16, 70, "Input",ExpressionUUID->"709d7388-641c-46e1-ba10-94f3cfbd7f0d",
 CellID->1973625881],
Cell[1093911, 26723, 80, 1, 70, "MathCaption",ExpressionUUID->"e28a9e17-4f55-4d64-89f7-4d6c96965fa5",
 CellID->19000568],
Cell[CellGroupData[{
Cell[1094016, 26728, 197, 6, 70, "Input",ExpressionUUID->"4e781bfa-f658-4398-b05f-cf2f8c6f0fa9",
 CellID->1514966620],
Cell[1094216, 26736, 289, 7, 70, "Output",ExpressionUUID->"e7275fb0-ee9d-4f24-b113-9332f9715c67",
 CellID->569763905]
}, Open  ]],
Cell[1094520, 26746, 349, 9, 70, "MathCaption",ExpressionUUID->"ff35e357-9786-46cc-a0ce-41a62bda6adb",
 CellID->1183809265],
Cell[CellGroupData[{
Cell[1094894, 26759, 332, 7, 70, "Input",ExpressionUUID->"c4c25351-5eb9-4227-934d-6b78495f116b",
 CellID->1993811047],
Cell[1095229, 26768, 10699, 273, 70, "Output",ExpressionUUID->"058409cf-d6b2-4f33-834a-7c77d1be15c4",
 CellID->1808037231]
}, Open  ]],
Cell[1105943, 27044, 497, 15, 70, "Text",ExpressionUUID->"119ee538-59d6-44de-afd8-c196eecc70be",
 CellID->1212150445],
Cell[CellGroupData[{
Cell[1106465, 27063, 232, 6, 70, "Input",ExpressionUUID->"a2c9af63-33b5-41b9-8c00-2b38d22cc6c0",
 CellID->1582653673],
Cell[CellGroupData[{
Cell[1106722, 27073, 10252, 303, 70, "Print",ExpressionUUID->"aa2cbdae-df3d-4f8c-9262-150fa3293596",
 CellID->1368119989],
Cell[1116977, 27378, 819, 20, 70, "Print",ExpressionUUID->"cb91728d-53e9-4ad5-9555-8482ea047ae7",
 CellID->885246694],
Cell[1117799, 27400, 115759, 2384, 70, "Print",ExpressionUUID->"9a607476-6480-48bd-b7c5-9a7bf6e57ff7",
 CellID->574479642]
}, Open  ]],
Cell[1233573, 29787, 10722, 274, 70, "Output",ExpressionUUID->"b1937cda-be93-41a0-8c1a-eeff0b148e2a",
 CellID->314696655]
}, Open  ]],
Cell[1244310, 30064, 125, 3, 70, "MathCaption",ExpressionUUID->"a67dddad-c109-4028-8aa7-048ae29debe0",
 CellID->1388846014],
Cell[CellGroupData[{
Cell[1244460, 30071, 193, 5, 70, "Input",ExpressionUUID->"7fd2f3e6-f012-4899-be92-f7e82aac9b71",
 CellID->1335198055],
Cell[1244656, 30078, 8681, 227, 70, "Output",ExpressionUUID->"e97c40cc-0eac-492b-8d4b-1fd9f7e7709e",
 CellID->2001941671]
}, Open  ]],
Cell[1253352, 30308, 292, 10, 70, "MathCaption",ExpressionUUID->"f3abbaba-e1f9-4fe2-89b4-e9322b9211b2",
 CellID->1164916883],
Cell[CellGroupData[{
Cell[1253669, 30322, 217, 6, 70, "Input",ExpressionUUID->"7a861a68-9ed0-459f-86d2-50c719c5f17d",
 CellID->149642882],
Cell[1253889, 30330, 9710, 249, 70, "Output",ExpressionUUID->"2b767b13-1355-4732-9362-09da615fc374",
 CellID->2007366948]
}, Open  ]],
Cell[1263614, 30582, 355, 12, 70, "MathCaption",ExpressionUUID->"288bd0fa-e42f-46cb-a003-721dc94ebc58",
 CellID->1523959247],
Cell[CellGroupData[{
Cell[1263994, 30598, 197, 5, 70, "Input",ExpressionUUID->"bc4d64aa-de96-418f-a00e-b14d3822456b",
 CellID->145606560],
Cell[1264194, 30605, 9709, 249, 70, "Output",ExpressionUUID->"9ebfc977-b6b9-4889-930e-180b25665ed8",
 CellID->848200666]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1273964, 30861, 81, 1, 70, "Subsection",ExpressionUUID->"8adeab8f-db6e-435a-b285-1e55ffb45fb4",
 CellID->2003973854],
Cell[1274048, 30864, 890, 28, 70, "Text",ExpressionUUID->"eff69ae1-9013-4522-b620-a9664950715d",
 CellID->1328457457],
Cell[1274941, 30894, 159, 4, 70, "MathCaption",ExpressionUUID->"a321ddd1-dad4-4c05-be70-426c8758ea09",
 CellID->1629616244],
Cell[CellGroupData[{
Cell[1275125, 30902, 226, 6, 70, "Input",ExpressionUUID->"bebee47c-9c83-438a-aa34-1bc6fe323b97",
 CellID->2101262717],
Cell[1275354, 30910, 91, 2, 70, "Output",ExpressionUUID->"e4ba3afe-c0a5-4a4d-a053-160421eeb0ff",
 CellID->384258966]
}, Open  ]],
Cell[1275460, 30915, 140, 4, 70, "MathCaption",ExpressionUUID->"e58beb9d-f9cc-45bb-86fc-a8e6028b83e1",
 CellID->218785383],
Cell[CellGroupData[{
Cell[1275625, 30923, 297, 8, 70, "Input",ExpressionUUID->"d33a1ca0-1228-48ae-8499-322b486ace1e",
 CellID->633928417],
Cell[1275925, 30933, 586, 17, 70, "Output",ExpressionUUID->"ccb30be5-ab82-46a1-8f9b-9c304bd02a4a",
 CellID->1148116342]
}, Open  ]],
Cell[1276526, 30953, 125, 3, 70, "MathCaption",ExpressionUUID->"9a262ffe-4d46-4bc3-bd3a-c46c5b61db8b",
 CellID->1746502806],
Cell[CellGroupData[{
Cell[1276676, 30960, 364, 8, 70, "Input",ExpressionUUID->"5f5cca64-d3d9-4510-bf6a-386d57bbc135",
 CellID->1666173246],
Cell[1277043, 30970, 136, 2, 70, "Print",ExpressionUUID->"6795a3b4-3dd2-47d3-97d2-889d05959a94",
 CellID->1621576223],
Cell[1277182, 30974, 8728, 228, 70, "Output",ExpressionUUID->"299bb5ce-9199-480e-8f7a-b2af1b1a6c45",
 CellID->116615884]
}, Open  ]],
Cell[1285925, 31205, 763, 24, 70, "Text",ExpressionUUID->"3ec2973c-f85b-4dd3-9a6a-e5bce6062d29",
 CellID->808687274],
Cell[1286691, 31231, 98, 1, 70, "MathCaption",ExpressionUUID->"53b42327-2b78-454f-89fd-3d19c2b8d6d6",
 CellID->690387281],
Cell[CellGroupData[{
Cell[1286814, 31236, 122, 3, 70, "Input",ExpressionUUID->"92c09f0a-10b3-471d-8bac-51f0775fc351",
 CellID->484887026],
Cell[1286939, 31241, 230, 6, 70, "Output",ExpressionUUID->"05b9b57f-3397-4262-ac46-7d84e6c4df82",
 CellID->459471277]
}, Open  ]],
Cell[1287184, 31250, 92, 1, 70, "MathCaption",ExpressionUUID->"4814ab27-8645-487b-b696-4258972eddd0",
 CellID->1931356472],
Cell[CellGroupData[{
Cell[1287301, 31255, 181, 6, 70, "Input",ExpressionUUID->"084d4729-4c14-41ea-aa85-1c6ce6dff1e9",
 CellID->1092900499],
Cell[1287485, 31263, 449, 11, 70, "Output",ExpressionUUID->"b4dd4238-374d-4d28-8c75-d5b204539f43",
 CellID->1294671978]
}, Open  ]],
Cell[1287949, 31277, 104, 2, 70, "MathCaption",ExpressionUUID->"2d3f3f20-7ebc-4999-b556-345b8a284612",
 CellID->642146293],
Cell[CellGroupData[{
Cell[1288078, 31283, 186, 6, 70, "Input",ExpressionUUID->"70b887d8-13e3-4597-819d-13259d8d2fc6",
 CellID->1447420276],
Cell[1288267, 31291, 6723, 159, 70, "Output",ExpressionUUID->"6e0b35cf-7e35-4bd0-9e25-65e47c2532cf",
 CellID->157992455]
}, Open  ]],
Cell[1295005, 31453, 579, 19, 70, "MathCaption",ExpressionUUID->"3188f2f2-dbd5-48f2-b788-a4915108a4c6",
 CellID->1243280944],
Cell[CellGroupData[{
Cell[1295609, 31476, 276, 7, 70, "Input",ExpressionUUID->"429d4247-7c54-42c4-b4e3-099f89c8563e",
 CellID->806940498],
Cell[1295888, 31485, 616, 12, 70, "Output",ExpressionUUID->"bc001bb4-edf5-4fe0-90d8-694acc2cd947",
 CellID->1715219372]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1296565, 31504, 55, 1, 70, "Section",ExpressionUUID->"42936a3b-9e81-4dab-bfed-b86ca5503f84",
 CellID->779816621],
Cell[CellGroupData[{
Cell[1296645, 31509, 80, 1, 70, "Subsection",ExpressionUUID->"32b4dae6-af8a-41d0-9b49-8dbf844e356f",
 CellID->1971981026],
Cell[1296728, 31512, 980, 35, 70, "Text",ExpressionUUID->"f24e276e-f11d-480e-b2bd-edc02900f858",
 CellID->1838680125],
Cell[1297711, 31549, 186, 4, 70, "MathCaption",ExpressionUUID->"12101f89-a1d9-4f84-8dc2-53a6f242ec67",
 CellID->902655240],
Cell[CellGroupData[{
Cell[1297922, 31557, 334, 10, 70, "Input",ExpressionUUID->"75db6b1f-0f14-45b7-846d-f1d29278f69f",
 CellID->1102136272],
Cell[1298259, 31569, 10178, 263, 70, "Output",ExpressionUUID->"c573af7e-822a-4f93-a514-ce3cbcf1001e",
 CellID->1616524567]
}, Open  ]],
Cell[CellGroupData[{
Cell[1308474, 31837, 334, 10, 70, "Input",ExpressionUUID->"6749489a-36d5-4980-af6c-fc5bf696cba5",
 CellID->1021092447],
Cell[1308811, 31849, 10967, 283, 70, "Output",ExpressionUUID->"77844642-ca77-4a56-93b1-0231f086c884",
 CellID->1548290285]
}, Open  ]],
Cell[1319793, 32135, 266, 7, 70, "MathCaption",ExpressionUUID->"7de1bd39-72ac-4960-8d08-06fc0cd89054",
 CellID->969019879],
Cell[CellGroupData[{
Cell[1320084, 32146, 162, 5, 70, "Input",ExpressionUUID->"ae7f5017-0bbf-49ec-b2b0-ab99291aa017",
 CellID->1948611152],
Cell[1320249, 32153, 337, 7, 70, "Output",ExpressionUUID->"8a18fd00-dd4f-4f42-bdcb-07717d690377",
 CellID->1243364280]
}, Open  ]],
Cell[CellGroupData[{
Cell[1320623, 32165, 161, 5, 70, "Input",ExpressionUUID->"5f44bd94-491f-4de8-aff3-ecc848abb849",
 CellID->619818574],
Cell[1320787, 32172, 337, 7, 70, "Output",ExpressionUUID->"db4efac2-8b57-422f-b48d-72be46c3e2ae",
 CellID->1440862894]
}, Open  ]],
Cell[1321139, 32182, 177, 4, 70, "Text",ExpressionUUID->"4c8723b8-ae2a-495d-94f6-d4a8c11e0125",
 CellID->1900924848],
Cell[1321319, 32188, 300, 10, 70, "MathCaption",ExpressionUUID->"ba24aa57-8092-4baa-8c90-767a8b999ec7",
 CellID->729703917],
Cell[CellGroupData[{
Cell[1321644, 32202, 246, 8, 70, "Input",ExpressionUUID->"8f3c7e30-7f70-45bb-81e2-3d2f9eda5218",
 CellID->2002108649],
Cell[1321893, 32212, 1022, 28, 70, "Output",ExpressionUUID->"e9cb44a0-7cf6-482c-9764-18d3d741a7b4",
 CellID->81485738]
}, Open  ]],
Cell[1322930, 32243, 1053, 28, 70, "Text",ExpressionUUID->"43e34e25-9eb9-4593-bc98-ce494bb0e466",
 CellID->527526154],
Cell[1323986, 32273, 359, 12, 70, "MathCaption",ExpressionUUID->"007c32df-e671-4759-b8ef-da627069c0d4",
 CellID->449223127],
Cell[CellGroupData[{
Cell[1324370, 32289, 279, 8, 70, "Input",ExpressionUUID->"42097d18-0e96-47fc-9a47-b343d6015bdc",
 CellID->1688076284],
Cell[1324652, 32299, 10659, 275, 70, "Output",ExpressionUUID->"34f04c93-7651-44ce-9ec2-bfe48e4b2a25",
 CellID->2034427395]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1335360, 32580, 72, 1, 70, "Subsection",ExpressionUUID->"2e7922ea-b294-4573-9702-42bfaf5e8af6",
 CellID->1357359281],
Cell[1335435, 32583, 472, 8, 70, "Text",ExpressionUUID->"e6384be3-83f1-40c1-a9eb-eb92e31715a1",
 CellID->1802528277],
Cell[CellGroupData[{
Cell[1335932, 32595, 144, 4, 70, "Subsubsection",ExpressionUUID->"b5135013-4eb2-4347-901c-97745cf96d2f",
 CellID->524759768],
Cell[CellGroupData[{
Cell[1336101, 32603, 80, 1, 70, "Subsubsubsection",ExpressionUUID->"45a69768-d8f7-4717-ab6c-9ba09d196cad",
 CellID->1551861331],
Cell[1336184, 32606, 391, 7, 70, "Text",ExpressionUUID->"fbbce228-677d-4b18-9d7b-db833d066f16",
 CellID->944497302],
Cell[1336578, 32615, 594, 18, 70, "DefinitionBox",ExpressionUUID->"9be6f24e-f8fa-4e35-92ff-6a67c16415bb",
 CellID->1659581078],
Cell[1337175, 32635, 206, 7, 70, "Caption",ExpressionUUID->"6158f19c-83c3-4703-b4c0-194c72857ae7",
 CellID->1061570710],
Cell[1337384, 32644, 2285, 63, 70, "DefinitionBox3Col",ExpressionUUID->"f944a910-a96d-4abb-8b92-e74956fce503",
 CellID->524783694],
Cell[1339672, 32709, 268, 11, 70, "Caption",ExpressionUUID->"edc0475f-0663-4930-9e0b-b8c8061b1a4a",
 CellID->324206829],
Cell[1339943, 32722, 138, 4, 70, "MathCaption",ExpressionUUID->"b00c3e37-135f-439e-b32b-4377330db541",
 CellID->873132756],
Cell[CellGroupData[{
Cell[1340106, 32730, 334, 9, 70, "Input",ExpressionUUID->"dd65f052-a153-4474-92f7-f3e81799ef3b",
 CellID->986470141],
Cell[1340443, 32741, 10678, 276, 70, "Output",ExpressionUUID->"b9c4c2f5-f790-4993-8863-d88f8099bc09",
 CellID->469857818]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1351170, 33023, 73, 1, 70, "Subsubsubsection",ExpressionUUID->"6bc063c8-1a98-4c9e-b6a5-6f86da4b6cb8",
 CellID->128983684],
Cell[1351246, 33026, 356, 8, 70, "MathCaption",ExpressionUUID->"38183de9-4ca3-4505-873a-456580f7b2e4",
 CellID->1069961234],
Cell[CellGroupData[{
Cell[1351627, 33038, 309, 7, 70, "Input",ExpressionUUID->"07bd5848-4aaa-46e9-9e91-e145ee90d808",
 CellID->1957883507],
Cell[CellGroupData[{
Cell[1351961, 33049, 421, 10, 70, "Print",ExpressionUUID->"01351b8b-8850-4ae8-93b1-a6b93f0a8df2",
 CellID->64325918],
Cell[1352385, 33061, 425, 10, 70, "Print",ExpressionUUID->"e824bdf3-b862-4212-bee7-3e96b00cd35a",
 CellID->107170713],
Cell[1352813, 33073, 421, 10, 70, "Print",ExpressionUUID->"fea08db7-9131-4b9d-9bc3-5d1b1705577e",
 CellID->95796752],
Cell[1353237, 33085, 422, 10, 70, "Print",ExpressionUUID->"5a362e64-7330-468a-a0f2-435f7762df9d",
 CellID->824325630],
Cell[1353662, 33097, 425, 10, 70, "Print",ExpressionUUID->"2fbe60df-2a3b-4828-8641-47b49e450eea",
 CellID->524837664],
Cell[1354090, 33109, 426, 10, 70, "Print",ExpressionUUID->"2fcb1185-5478-436b-8168-5cc47b5ce313",
 CellID->1492609609],
Cell[1354519, 33121, 426, 10, 70, "Print",ExpressionUUID->"adb2146a-30a8-4054-b698-b43986003b82",
 CellID->1812054345],
Cell[1354948, 33133, 423, 10, 70, "Print",ExpressionUUID->"95cf88e2-a9b6-41e8-ae77-2b376de1721e",
 CellID->1204774573],
Cell[1355374, 33145, 423, 10, 70, "Print",ExpressionUUID->"6a08a4ab-dd14-4713-a715-14b062ba707d",
 CellID->1653787195],
Cell[1355800, 33157, 426, 10, 70, "Print",ExpressionUUID->"bef46573-00cf-4638-a0dc-860ccf3fe369",
 CellID->1967842748],
Cell[1356229, 33169, 423, 10, 70, "Print",ExpressionUUID->"bc60a424-6055-480a-a77e-326823f577e1",
 CellID->1388283531],
Cell[1356655, 33181, 421, 10, 70, "Print",ExpressionUUID->"0f529145-1a82-4254-80f0-15108ac8dbbb",
 CellID->66431071]
}, Open  ]],
Cell[1357091, 33194, 10420, 269, 70, "Output",ExpressionUUID->"b4657293-24e6-42c0-94bc-bb8b58f1b41d",
 CellID->637169717]
}, Open  ]],
Cell[1367526, 33466, 123, 3, 70, "MathCaption",ExpressionUUID->"5def2121-bb65-449a-8ab6-651fd982c470",
 CellID->2078239195],
Cell[CellGroupData[{
Cell[1367674, 33473, 313, 10, 70, "Input",ExpressionUUID->"8dda2337-7eb5-4ee9-86b7-3a98cd502b2d",
 CellID->144631910],
Cell[1367990, 33485, 48485, 1030, 70, "Output",ExpressionUUID->"7bf553bf-9c76-41e6-a895-db284c9a3a34",
 CellID->841573546]
}, Open  ]],
Cell[1416490, 34518, 94, 1, 70, "MathCaption",ExpressionUUID->"9dce71fa-278b-4223-a990-d12eb2879a61",
 CellID->1914505686],
Cell[CellGroupData[{
Cell[1416609, 34523, 654, 15, 70, "Input",ExpressionUUID->"883dd373-4512-4968-9e9e-3baf416dc1aa",
 CellID->1349581601],
Cell[1417266, 34540, 10491, 271, 70, "Output",ExpressionUUID->"bd733a50-263d-4de4-a130-65f29fc6fb00",
 CellID->1805328114]
}, Open  ]],
Cell[1427772, 34814, 134, 4, 70, "MathCaption",ExpressionUUID->"524e1070-0655-4794-934b-453f95ff375b",
 CellID->2141940815],
Cell[CellGroupData[{
Cell[1427931, 34822, 312, 10, 70, "Input",ExpressionUUID->"e015618e-1b4b-4991-accb-c641092b4355",
 CellID->1785374157],
Cell[1428246, 34834, 35100, 648, 70, "Output",ExpressionUUID->"fd8fc2f1-74ea-4299-8f2a-db2698a543a2",
 CellID->628044284]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1463395, 35488, 78, 1, 70, "Subsubsubsection",ExpressionUUID->"aa871b66-9037-4c15-8250-222f73acb5e6",
 CellID->418653686],
Cell[1463476, 35491, 213, 5, 70, "Text",ExpressionUUID->"d2336588-c7e6-447c-81a1-998adac660c2",
 CellID->1156073030],
Cell[1463692, 35498, 1108, 22, 70, "Input",ExpressionUUID->"83568630-4ebb-40f3-9b95-01c5d0f2a773",
 CellID->38250836],
Cell[1464803, 35522, 184, 7, 70, "MathCaption",ExpressionUUID->"af2408fe-7df8-4b08-808d-c4c191e850f9",
 CellID->1834860801],
Cell[CellGroupData[{
Cell[1465012, 35533, 208, 6, 70, "Input",ExpressionUUID->"f888e1db-f00d-4fb6-ad66-deccdbda9b20",
 CellID->640311487],
Cell[1465223, 35541, 10410, 269, 70, "Output",ExpressionUUID->"172646ec-930f-4c08-9741-7db97f8ee3f3",
 CellID->658156183]
}, Open  ]],
Cell[1475648, 35813, 90, 1, 70, "MathCaption",ExpressionUUID->"0db8da6c-2867-47ee-a8ac-66c17fe7a071",
 CellID->571106757],
Cell[CellGroupData[{
Cell[1475763, 35818, 178, 4, 70, "Input",ExpressionUUID->"3bb65e33-ec0d-4965-af3b-4bab20bffc9c",
 CellID->1486846456],
Cell[1475944, 35824, 253, 7, 70, "Output",ExpressionUUID->"5de311bb-d42d-4afb-8fd6-1b1c2ca3cc97",
 CellID->2090185631]
}, Open  ]],
Cell[1476212, 35834, 308, 6, 70, "Text",ExpressionUUID->"47040257-686a-4102-bc88-bce198e32eaf",
 CellID->280773926],
Cell[1476523, 35842, 362, 12, 70, "MathCaption",ExpressionUUID->"c9dc2253-9848-4409-8c24-5d9b326ca6e7",
 CellID->945801823],
Cell[CellGroupData[{
Cell[1476910, 35858, 524, 13, 70, "Input",ExpressionUUID->"c65a88fa-9abc-42fd-a27e-f4c1d54678b6",
 CellID->417284067],
Cell[1477437, 35873, 10456, 270, 70, "Output",ExpressionUUID->"e4b07b50-ce85-4a11-8dd1-dc2815529823",
 CellID->1212402591]
}, Open  ]],
Cell[1487908, 36146, 81, 1, 70, "MathCaption",ExpressionUUID->"16b32766-c893-4823-aed4-e2fffa0a1b15",
 CellID->430709602],
Cell[CellGroupData[{
Cell[1488014, 36151, 183, 5, 70, "Input",ExpressionUUID->"ca0aecfe-a56f-462a-9524-1c547bd68132",
 CellID->1916390424],
Cell[1488200, 36158, 290, 7, 70, "Output",ExpressionUUID->"950d8119-39fd-4992-a22d-fa5a48360001",
 CellID->1525504201]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1488539, 36171, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"f6b625b7-eb91-467d-a58d-15ffeb348f46",
 CellID->1084739385],
Cell[1488602, 36174, 600, 16, 70, "Text",ExpressionUUID->"6d99086a-f724-4be9-93c6-c225c3a14c82",
 CellID->1226164312],
Cell[CellGroupData[{
Cell[1489227, 36194, 300, 8, 70, "Input",ExpressionUUID->"a10f9dc0-7eac-4ca4-8242-06266266fdb2",
 CellID->890515172],
Cell[CellGroupData[{
Cell[1489552, 36206, 4555, 133, 70, "Print",ExpressionUUID->"8e85ed9b-9c88-41d6-b823-e4f62854f8c1",
 CellID->341844674],
Cell[1494110, 36341, 450, 12, 70, "Print",ExpressionUUID->"c731e697-4b16-47a3-b77d-8f654732d097",
 CellID->864680193],
Cell[1494563, 36355, 45711, 949, 70, "Print",ExpressionUUID->"e1cefe04-b6ad-40dd-a5e1-4c5e1acd3307",
 CellID->658164502]
}, Open  ]],
Cell[1540289, 37307, 10247, 265, 70, "Output",ExpressionUUID->"a4329338-fb55-4f5c-bc80-f1872cadf995",
 CellID->82519417]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1550585, 37578, 69, 1, 70, "Subsubsubsection",ExpressionUUID->"bd283fce-cc72-4d56-86ad-bce98a2c80ab",
 CellID->1252715262],
Cell[1550657, 37581, 499, 13, 70, "Text",ExpressionUUID->"f1d65058-6bb5-475a-9040-0b16d7a9fb78",
 CellID->1581980320],
Cell[1551159, 37596, 685, 19, 70, "DefinitionBox",ExpressionUUID->"19a4a795-73cb-4826-8eb1-e33e5bcded9d",
 CellID->472784104],
Cell[1551847, 37617, 314, 10, 70, "Caption",ExpressionUUID->"7acf49e3-02d7-4612-8c6f-78afaf101186",
 CellID->392942028],
Cell[1552164, 37629, 197, 4, 70, "MathCaption",ExpressionUUID->"b8e630fa-b693-4659-a00a-f804f4ea2858",
 CellID->1324534886],
Cell[CellGroupData[{
Cell[1552386, 37637, 225, 5, 70, "Input",ExpressionUUID->"eb7b5543-c922-437b-bd54-cb8a7ffa199c",
 CellID->642344200],
Cell[1552614, 37644, 9079, 239, 70, "Output",ExpressionUUID->"fa5986bb-84a6-47b1-a095-61bf516a5306",
 CellID->524174621]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1561754, 37890, 75, 1, 70, "Subsubsection",ExpressionUUID->"c5f63f3e-37fb-479a-b03f-021dcf143fdb",
 CellID->1109625018],
Cell[1561832, 37893, 92, 1, 70, "Text",ExpressionUUID->"546a1f3c-1817-4091-8e0b-29515bf66b9e",
 CellID->719686978],
Cell[1561927, 37896, 162, 4, 70, "MathCaption",ExpressionUUID->"021ff64a-9b0f-4151-b17d-042960f80e22",
 CellID->1151139342],
Cell[CellGroupData[{
Cell[1562114, 37904, 191, 6, 70, "Input",ExpressionUUID->"b59a2240-8081-4490-8e79-8273c0f421c6",
 CellID->518745171],
Cell[1562308, 37912, 7419, 199, 70, "Output",ExpressionUUID->"2ee21bb9-b360-4051-a73a-268f874e6b03",
 CellID->824935153]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1569776, 38117, 118, 3, 70, "Subsubsection",ExpressionUUID->"07fb85af-7410-4728-bf97-55ba7062b3e0",
 CellID->1009763177],
Cell[1569897, 38122, 488, 13, 70, "Text",ExpressionUUID->"69791d60-a3bd-431a-abe6-0451690e438f",
 CellID->278067401],
Cell[1570388, 38137, 169, 4, 70, "MathCaption",ExpressionUUID->"dd202078-fd85-4d8e-8b9d-1e9ac5b8ff76",
 CellID->96962883],
Cell[CellGroupData[{
Cell[1570582, 38145, 250, 6, 70, "Input",ExpressionUUID->"bc8633e4-ca08-48ca-9904-aac6a981b656",
 CellID->1862570155],
Cell[1570835, 38153, 8581, 225, 70, "Output",ExpressionUUID->"9a834323-f794-47bd-8860-600b990361db",
 CellID->530691439]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1579465, 38384, 104, 2, 70, "Subsubsection",ExpressionUUID->"9a4eeb4d-d1f0-438d-9918-d28acd92867e",
 CellID->1412731195],
Cell[1579572, 38388, 289, 10, 70, "MathCaption",ExpressionUUID->"4dcc209d-8ca7-45ef-9a62-0f2eed497afd",
 CellID->966741969],
Cell[CellGroupData[{
Cell[1579886, 38402, 208, 5, 70, "Input",ExpressionUUID->"86669e7c-a28f-4183-978d-a620300d0f97",
 CellID->170999781],
Cell[1580097, 38409, 9619, 247, 70, "Output",ExpressionUUID->"ef19fba8-23f7-4725-8cf7-249da1da63d2",
 CellID->1856841682]
}, Open  ]],
Cell[1589731, 38659, 354, 12, 70, "MathCaption",ExpressionUUID->"bb48246a-115b-441c-a348-13780611c863",
 CellID->245953314],
Cell[CellGroupData[{
Cell[1590110, 38675, 192, 5, 70, "Input",ExpressionUUID->"e0695213-2e0c-4fed-b2de-130491530003",
 CellID->1978811570],
Cell[1590305, 38682, 9619, 247, 70, "Output",ExpressionUUID->"e0ec9ca1-a940-4589-a34a-3c57cf183222",
 CellID->1324492706]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1599985, 38936, 68, 1, 70, "Subsection",ExpressionUUID->"87deb200-af20-4a0d-96b8-b3d19117889d",
 CellID->453326653],
Cell[1600056, 38939, 511, 9, 70, "Text",ExpressionUUID->"72a5a00f-d57f-4751-8c62-9e2a67c48620",
 CellID->184556424],
Cell[CellGroupData[{
Cell[1600592, 38952, 73, 1, 70, "Subsubsection",ExpressionUUID->"1f41d2bd-bd87-478d-8cfa-a236e88111ea",
 CellID->633718938],
Cell[1600668, 38955, 75, 1, 70, "Text",ExpressionUUID->"1ef988e9-15ad-4d05-82be-1a9046bcf949",
 CellID->1542785493],
Cell[CellGroupData[{
Cell[1600768, 38960, 202, 5, 70, "Input",ExpressionUUID->"75b803c4-ecc0-400a-a4a8-fdb09000a7e0",
 CellID->878226973],
Cell[1600973, 38967, 8910, 235, 70, "Output",ExpressionUUID->"4aff8a67-f382-4250-8bb1-f1189f5ff4fe",
 CellID->1614351122]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1609932, 39208, 123, 3, 70, "Subsubsection",ExpressionUUID->"bb7c7039-cf5e-49cf-8de8-2984324322fe",
 CellID->360522749],
Cell[1610058, 39213, 160, 4, 70, "MathCaption",ExpressionUUID->"b20b46c7-4664-4253-b07d-c9d51a940d21",
 CellID->677226397],
Cell[1610221, 39219, 367, 10, 70, "Input",ExpressionUUID->"c9d08767-a13e-4447-a0ae-88db13221721",
 CellID->480725279],
Cell[1610591, 39231, 365, 8, 70, "MathCaption",ExpressionUUID->"3ad79f58-04ef-405b-9985-131a5b59ab81",
 CellID->700277754],
Cell[CellGroupData[{
Cell[1610981, 39243, 327, 7, 70, "Input",ExpressionUUID->"e974e821-9901-430b-b75a-4699da5b28c8",
 CellID->1357825918],
Cell[CellGroupData[{
Cell[1611333, 39254, 423, 10, 70, "Print",ExpressionUUID->"dd4bf285-6a57-4601-a124-7946f9b70b8b",
 CellID->1877585153],
Cell[1611759, 39266, 425, 10, 70, "Print",ExpressionUUID->"897164cd-131d-4168-9324-035c8929e420",
 CellID->163355591],
Cell[1612187, 39278, 422, 10, 70, "Print",ExpressionUUID->"5a052d61-3046-4976-9b60-def7c0536e31",
 CellID->259759008],
Cell[1612612, 39290, 425, 10, 70, "Print",ExpressionUUID->"3f227913-1257-44aa-a5b2-bdee73c358a4",
 CellID->778641117],
Cell[1613040, 39302, 425, 10, 70, "Print",ExpressionUUID->"fd04dde3-fcf7-4226-9cde-7d824e27b46b",
 CellID->617410823],
Cell[1613468, 39314, 421, 10, 70, "Print",ExpressionUUID->"41340dd0-d91d-4bb3-8ba5-9fbf37edfbd2",
 CellID->71021389],
Cell[1613892, 39326, 422, 10, 70, "Print",ExpressionUUID->"5a865138-0255-4f10-9731-0dbfcc175f9a",
 CellID->901761449],
Cell[1614317, 39338, 422, 10, 70, "Print",ExpressionUUID->"3c7417ab-1645-43f8-9b21-8c641c7c175f",
 CellID->932516019],
Cell[1614742, 39350, 423, 10, 70, "Print",ExpressionUUID->"83fd5af6-9104-40fc-90cd-a7907dd74687",
 CellID->1175383913],
Cell[1615168, 39362, 425, 10, 70, "Print",ExpressionUUID->"28bf4fbf-b9e1-40c9-bacd-2ea3eddbcfc0",
 CellID->290081537],
Cell[1615596, 39374, 423, 10, 70, "Print",ExpressionUUID->"cb60379e-d77f-4fd8-b23b-e370d63e3c2b",
 CellID->1628114812],
Cell[1616022, 39386, 425, 10, 70, "Print",ExpressionUUID->"9f0354e9-66cd-4886-963d-a42b812a288b",
 CellID->458717401]
}, Open  ]],
Cell[1616462, 39399, 8906, 234, 70, "Output",ExpressionUUID->"05c91b4e-26a6-40d0-b074-5f5fb3e1d822",
 CellID->197065877]
}, Open  ]],
Cell[1625383, 39636, 94, 1, 70, "MathCaption",ExpressionUUID->"f877123f-3968-48a8-be10-6412622bb659",
 CellID->1180721070],
Cell[CellGroupData[{
Cell[1625502, 39641, 681, 15, 70, "Input",ExpressionUUID->"50786520-b0c6-4e0b-9080-a01e9d4d8161",
 CellID->1630125210],
Cell[1626186, 39658, 9020, 237, 70, "Output",ExpressionUUID->"62219cd2-faf4-4e4b-b916-2c39f0998247",
 CellID->666411065]
}, Open  ]],
Cell[1635221, 39898, 217, 7, 70, "MathCaption",ExpressionUUID->"1c3c8f57-537c-4ea8-ab8c-1c9ee138680a",
 CellID->314732997],
Cell[1635441, 39907, 249, 7, 70, "Input",ExpressionUUID->"2835c0a6-df4b-4b8b-bec5-6586bb531d2a",
 CellID->465258018],
Cell[1635693, 39916, 91, 1, 70, "MathCaption",ExpressionUUID->"992d8f35-7742-4203-99b6-bd63f9ba9ebb",
 CellID->1296207012],
Cell[CellGroupData[{
Cell[1635809, 39921, 198, 6, 70, "Input",ExpressionUUID->"a936e9a1-209c-44d6-a965-9d3dd8677e68",
 CellID->1277135516],
Cell[1636010, 39929, 253, 7, 70, "Output",ExpressionUUID->"5b1df510-14d8-4d2e-bc32-12276acfaf13",
 CellID->1243550350]
}, Open  ]],
Cell[1636278, 39939, 376, 12, 70, "MathCaption",ExpressionUUID->"57d57eb0-2c89-47f5-ad37-29dcc7f226dc",
 CellID->115749397],
Cell[1636657, 39953, 573, 15, 70, "Input",ExpressionUUID->"68754730-55e6-413e-8b91-773b617deee6",
 CellID->1927414844],
Cell[1637233, 39970, 81, 1, 70, "MathCaption",ExpressionUUID->"f1b741e0-32dc-47da-983d-2ba0746ee346",
 CellID->889199561],
Cell[CellGroupData[{
Cell[1637339, 39975, 204, 6, 70, "Input",ExpressionUUID->"632dff2e-66da-4d63-ad00-b47fc1ccc0c1",
 CellID->438322254],
Cell[1637546, 39983, 290, 7, 70, "Output",ExpressionUUID->"46fc2819-4040-4c05-9bef-0816834f7d15",
 CellID->1039879846]
}, Open  ]],
Cell[1637851, 39993, 601, 16, 70, "MathCaption",ExpressionUUID->"a152d222-7443-46de-8e19-7111772f5229",
 CellID->107474856],
Cell[CellGroupData[{
Cell[1638477, 40013, 342, 9, 70, "Input",ExpressionUUID->"a1c5bdfe-af2e-4f84-997a-2da12c64e876",
 CellID->1335914459],
Cell[CellGroupData[{
Cell[1638844, 40026, 4203, 118, 70, "Print",ExpressionUUID->"6f333a07-cee5-4e39-a83c-f10c027b6339",
 CellID->1038652436],
Cell[1643050, 40146, 455, 12, 70, "Print",ExpressionUUID->"0dccec6b-f83b-457b-8a60-521475f9f12c",
 CellID->1884409036],
Cell[1643508, 40160, 46181, 956, 70, "Print",ExpressionUUID->"1f2bc059-6382-4023-9a01-188f3b485746",
 CellID->173842096]
}, Open  ]]
}, Open  ]],
Cell[1689716, 41120, 170, 4, 70, "MathCaption",ExpressionUUID->"40c90a40-44f6-4e78-b1e1-4b3f22c929f6",
 CellID->40883495],
Cell[1689889, 41126, 223, 7, 70, "Input",ExpressionUUID->"c185cde0-6799-4abc-befe-fceefb57d0c0",
 CellID->2081617072],
Cell[1690115, 41135, 181, 4, 70, "MathCaption",ExpressionUUID->"3f4308ea-d1d6-4e27-922f-844ec1a75e21",
 CellID->1475115608],
Cell[1690299, 41141, 289, 7, 70, "Input",ExpressionUUID->"e15c4e58-0084-4061-ad9e-afa6012c84bd",
 CellID->1716802688],
Cell[1690591, 41150, 289, 10, 70, "MathCaption",ExpressionUUID->"c15b5848-dfbf-451b-ab9b-27b570524de8",
 CellID->454276768],
Cell[1690883, 41162, 249, 7, 70, "Input",ExpressionUUID->"ae12422a-2efc-4263-bcbe-1d2409938859",
 CellID->725274691],
Cell[1691135, 41171, 355, 12, 70, "MathCaption",ExpressionUUID->"bbd687d6-9f5e-4797-9356-5ab0c755ec9e",
 CellID->1396633943],
Cell[1691493, 41185, 233, 7, 70, "Input",ExpressionUUID->"2634fec3-6840-4fd6-b49c-7ce13a596c7f",
 CellID->1230418291]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1691775, 41198, 82, 1, 70, "Subsection",ExpressionUUID->"4fafc188-95e8-470f-b163-8d2230810fd3",
 CellID->298821825],
Cell[1691860, 41201, 892, 28, 70, "Text",ExpressionUUID->"4e919632-9142-4406-a780-cc9924dfbfc6",
 CellID->1481646089],
Cell[1692755, 41231, 161, 4, 70, "MathCaption",ExpressionUUID->"e03d0059-1a45-4692-9645-e30a24584c88",
 CellID->1952930858],
Cell[CellGroupData[{
Cell[1692941, 41239, 240, 7, 70, "Input",ExpressionUUID->"41d882b6-ff0c-490a-aac7-effa21a705cc",
 CellID->768869658],
Cell[1693184, 41248, 92, 2, 70, "Output",ExpressionUUID->"937370e2-1e17-4068-ad72-8859b9a30cb7",
 CellID->1856700619]
}, Open  ]],
Cell[1693291, 41253, 141, 4, 70, "MathCaption",ExpressionUUID->"0de204a9-7f54-49a0-a3a2-9a9f159d9fbf",
 CellID->1337236679],
Cell[CellGroupData[{
Cell[1693457, 41261, 314, 9, 70, "Input",ExpressionUUID->"cd552a56-3238-402f-b1d9-f80335f26bbc",
 CellID->1520498098],
Cell[1693774, 41272, 269, 8, 70, "Output",ExpressionUUID->"df16a294-f4bb-4b6f-90e9-b725ef320d3f",
 CellID->1886752990]
}, Open  ]],
Cell[1694058, 41283, 125, 3, 70, "MathCaption",ExpressionUUID->"cc671b31-1efa-458b-9558-7d21a9b9b710",
 CellID->1474915870],
Cell[CellGroupData[{
Cell[1694208, 41290, 381, 8, 70, "Input",ExpressionUUID->"2e176d27-e8e4-484a-bb05-79942ccc72df",
 CellID->507289769],
Cell[1694592, 41300, 136, 2, 70, "Print",ExpressionUUID->"c9ad0cd1-8877-4669-9160-0e033a77e9bf",
 CellID->1019182225],
Cell[1694731, 41304, 10068, 259, 70, "Output",ExpressionUUID->"60d58e4f-7c6c-4037-a39c-866837311aac",
 CellID->1066388514]
}, Open  ]],
Cell[1704814, 41566, 616, 19, 70, "Text",ExpressionUUID->"7f36e45b-94d1-470f-97fd-0af895e5c4be",
 CellID->754816834],
Cell[1705433, 41587, 99, 1, 70, "MathCaption",ExpressionUUID->"feb5f886-b99e-4944-a16b-88f7ef624cf4",
 CellID->1020626209],
Cell[CellGroupData[{
Cell[1705557, 41592, 126, 3, 70, "Input",ExpressionUUID->"80eac543-ccc9-4548-b8c4-6eb21a0c3701",
 CellID->1712806074],
Cell[1705686, 41597, 251, 6, 70, "Output",ExpressionUUID->"b70d321a-1cab-4d95-aa70-b05e4243398e",
 CellID->497917949]
}, Open  ]],
Cell[1705952, 41606, 92, 1, 70, "MathCaption",ExpressionUUID->"98d43901-707e-4730-b998-bc8cd28fa555",
 CellID->1056863292],
Cell[CellGroupData[{
Cell[1706069, 41611, 183, 6, 70, "Input",ExpressionUUID->"4a82b819-5b7e-4f3e-b932-83c611e3c59f",
 CellID->864104307],
Cell[1706255, 41619, 501, 12, 70, "Output",ExpressionUUID->"f647a288-dca4-4794-8a2d-8208951ae0b0",
 CellID->2040720583]
}, Open  ]],
Cell[1706771, 41634, 104, 2, 70, "MathCaption",ExpressionUUID->"fea8c696-7e8d-4309-9b6a-8707a8e4c844",
 CellID->575017700],
Cell[CellGroupData[{
Cell[1706900, 41640, 188, 6, 70, "Input",ExpressionUUID->"9e5d0ad3-3309-4ea9-b8aa-41e716efb7a9",
 CellID->646072400],
Cell[1707091, 41648, 6483, 157, 70, "Output",ExpressionUUID->"42f59c2c-800a-4432-b53d-a4ee95b8a366",
 CellID->1348085108]
}, Open  ]],
Cell[1713589, 41808, 578, 19, 70, "MathCaption",ExpressionUUID->"8e694dad-ed7b-4fa0-8dda-ced9e6ca738d",
 CellID->861507568],
Cell[CellGroupData[{
Cell[1714192, 41831, 288, 7, 70, "Input",ExpressionUUID->"8767f47b-2222-4271-b1b8-b348dfeca995",
 CellID->1022947302],
Cell[1714483, 41840, 615, 12, 70, "Output",ExpressionUUID->"e379b273-a6f0-4db6-b3c8-cf5a0f40820d",
 CellID->603088833]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1715159, 41859, 64, 1, 70, "Section",ExpressionUUID->"dfa3c5e3-03ad-43ea-a192-e6707afce7b4",
 CellID->1340833355],
Cell[1715226, 41862, 719, 21, 70, "Text",ExpressionUUID->"f770d756-c2a1-417d-b5a6-174a91d73f83",
 CellID->834349127],
Cell[CellGroupData[{
Cell[1715970, 41887, 80, 1, 70, "Subsection",ExpressionUUID->"7688f05b-7bc5-4cf8-bf13-c671d8ecea94",
 CellID->1502510612],
Cell[1716053, 41890, 666, 18, 70, "DefinitionBox",ExpressionUUID->"f01c03e8-3bc5-4238-b28f-e765aec8327e",
 CellID->1289482141],
Cell[1716722, 41910, 68, 1, 70, "Caption",ExpressionUUID->"5abea2ec-e660-412e-8db9-a8b890a7f1a0",
 CellID->2068861910],
Cell[1716793, 41913, 309, 11, 70, "MathCaption",ExpressionUUID->"c07398d9-f360-4bec-a32b-0c05151a517f",
 CellID->681556684],
Cell[CellGroupData[{
Cell[1717127, 41928, 298, 8, 70, "Input",ExpressionUUID->"6b0a7875-abce-47c6-bc92-beb2f874d4ef",
 CellID->245414890],
Cell[1717428, 41938, 10022, 257, 70, "Output",ExpressionUUID->"732526a8-1263-4f6f-b7ba-be7d8839fc1a",
 CellID->808884430]
}, Open  ]],
Cell[1727465, 42198, 99, 1, 70, "MathCaption",ExpressionUUID->"097a4cd0-8c4a-4a2e-b88c-01838ff5b305",
 CellID->1179244319],
Cell[CellGroupData[{
Cell[1727589, 42203, 275, 9, 70, "Input",ExpressionUUID->"cfd8c147-f750-4a78-a396-3126184931e5",
 CellID->764718377],
Cell[1727867, 42214, 699, 15, 70, "Output",ExpressionUUID->"9097072f-9d75-4813-93c2-3a7234d02da0",
 CellID->729829850]
}, Open  ]],
Cell[CellGroupData[{
Cell[1728603, 42234, 118, 3, 70, "Input",ExpressionUUID->"ba3649d2-ed89-4af8-bcbc-c1b3fa2de80c",
 CellID->432691270],
Cell[1728724, 42239, 290, 6, 70, "Output",ExpressionUUID->"e4bcfa13-a908-4827-881e-2daf6673c3b4",
 CellID->1950743689]
}, Open  ]],
Cell[1729029, 42248, 125, 3, 70, "MathCaption",ExpressionUUID->"ee19b814-e449-4465-84f8-89915bc6aabb",
 CellID->2090161703],
Cell[CellGroupData[{
Cell[1729179, 42255, 334, 11, 70, "Input",ExpressionUUID->"c333058b-03ae-48ca-8963-7935615c6ac4",
 CellID->810244695],
Cell[1729516, 42268, 1518, 35, 70, "Output",ExpressionUUID->"65dbed67-9ee4-4e4e-a37d-3453f44b3278",
 CellID->1387605075]
}, Open  ]],
Cell[CellGroupData[{
Cell[1731071, 42308, 180, 6, 70, "Input",ExpressionUUID->"4c8dd372-a4c2-43f6-974d-88cccd78bac5",
 CellID->75235690],
Cell[1731254, 42316, 605, 14, 70, "Output",ExpressionUUID->"ad7cd562-c96f-4247-b42e-466859ac4ce9",
 CellID->916666016]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1731908, 42336, 72, 1, 70, "Subsection",ExpressionUUID->"7d52b551-8ca5-47d7-956e-5483cd0a6695",
 CellID->1764557057],
Cell[1731983, 42339, 1864, 56, 70, "Text",ExpressionUUID->"f979eee2-0a8a-4b89-8a65-399af22e490d",
 CellID->32166003],
Cell[1733850, 42397, 384, 9, 70, "Text",ExpressionUUID->"e84284db-2afe-4066-903c-e2eba03a1af8",
 CellID->58096227],
Cell[1734237, 42408, 1643, 39, 70, "DefinitionBox",ExpressionUUID->"364c7f46-f920-42a8-8ad1-b1d74a38d306",
 CellID->1813135289],
Cell[1735883, 42449, 76, 1, 70, "Caption",ExpressionUUID->"268b8df3-e8fc-492d-b796-cfe18768d882",
 CellID->571851293],
Cell[1735962, 42452, 2252, 55, 70, "DefinitionBox3Col",ExpressionUUID->"2c61660b-aa48-4c04-b94c-d3f22a82b04a",
 CellID->1454392793],
Cell[1738217, 42509, 269, 11, 70, "Caption",ExpressionUUID->"da0a5b37-64ee-432f-a64b-e0be29dea754",
 CellID->1320801797],
Cell[1738489, 42522, 240, 5, 70, "Text",ExpressionUUID->"d367e04b-1060-4304-babd-5bf6f14fd40b",
 CellID->416113495],
Cell[1738732, 42529, 6752, 161, 70, "Text",ExpressionUUID->"3058a8fd-f065-492a-80ac-14dfb869434c",
 CellID->1412755833],
Cell[1745487, 42692, 1752, 41, 70, "DefinitionBox",ExpressionUUID->"5488eb0f-5bda-439d-ab43-9e37c6ffe6be",
 CellID->1608083999],
Cell[1747242, 42735, 303, 11, 70, "Caption",ExpressionUUID->"ded5342d-64cb-4e90-b973-825c55ed2a4a",
 CellID->986073698],
Cell[1747548, 42748, 147, 4, 70, "MathCaption",ExpressionUUID->"ebb3fb92-a2f9-4fd8-9d2d-da16c7e092eb",
 CellID->565513990],
Cell[CellGroupData[{
Cell[1747720, 42756, 179, 5, 70, "Input",ExpressionUUID->"7c111bfc-67d2-4945-9f9f-a53bc65392e8",
 CellID->1978491955],
Cell[1747902, 42763, 10901, 276, 70, "Output",ExpressionUUID->"224066c0-09a1-4bec-babd-6512365717dd",
 CellID->92211928]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1758864, 43046, 53, 1, 70, "Section",ExpressionUUID->"31efa59b-2f09-4c66-8c2a-4a4148f846a3",
 CellID->1200455778],
Cell[1758920, 43049, 774, 22, 70, "Text",ExpressionUUID->"33fb34cb-cb06-41dd-b6ad-98778a80c15d",
 CellID->944139540],
Cell[1759697, 43073, 1391, 39, 70, "DefinitionBox",ExpressionUUID->"13d625b0-7659-423a-b4ae-4c07413b75e1",
 CellID->581300403],
Cell[1761091, 43114, 82, 1, 70, "Caption",ExpressionUUID->"34569ad7-4177-49ce-8aa2-0a1743785e9c",
 CellID->1012763018],
Cell[1761176, 43117, 852, 25, 70, "DefinitionBox3Col",ExpressionUUID->"8965ff55-daaf-461f-9de5-4c7cf775588c",
 CellID->2015411944],
Cell[1762031, 43144, 290, 11, 70, "Caption",ExpressionUUID->"0080f978-0bd6-4f9b-8e36-861249c2e90b",
 CellID->768978677],
Cell[1762324, 43157, 2901, 77, 70, "DefinitionBox3Col",ExpressionUUID->"d17d9e33-ccbe-4509-9a31-2710b73538c1",
 CellID->1299131947],
Cell[1765228, 43236, 287, 11, 70, "Caption",ExpressionUUID->"1c243f25-74bb-45e7-babe-e63c2b24cb73",
 CellID->1044394180],
Cell[1765518, 43249, 400, 7, 70, "MathCaption",ExpressionUUID->"57725318-f762-4597-bfed-07b80c168299",
 CellID->1376228890],
Cell[CellGroupData[{
Cell[1765943, 43260, 146, 4, 70, "Input",ExpressionUUID->"9afbf306-ba75-469d-a199-b22b4de1326a",
 CellID->1880076040],
Cell[1766092, 43266, 787306, 12914, 70, "Output",ExpressionUUID->"6c2e6041-3593-4554-9bc9-5ab0678a7918",
 CellTags->"RasterizedOutput",
 CellID->1606164724]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2553447, 56186, 65, 1, 70, "Section",ExpressionUUID->"c3ce0918-7759-42c4-8e23-ef89e03b8217",
 CellID->2035743524],
Cell[2553515, 56189, 277, 5, 70, "Text",ExpressionUUID->"e22bbecb-05cd-4af7-a735-3875e05150bc",
 CellID->1722961908],
Cell[CellGroupData[{
Cell[2553817, 56198, 65, 1, 70, "Subsection",ExpressionUUID->"d6936ca4-09ef-4bcb-bccb-1b1aec564b15",
 CellID->2013711891],
Cell[2553885, 56201, 757, 21, 70, "Text",ExpressionUUID->"782715f4-66c4-41be-bc99-26360122d87d",
 CellID->1112357573],
Cell[2554645, 56224, 501, 13, 70, "DefinitionBox",ExpressionUUID->"d6d10cae-cf1c-403c-8873-b019449c5e2e",
 CellID->329777640],
Cell[2555149, 56239, 158, 4, 70, "Caption",ExpressionUUID->"1ffbd62f-b525-4da7-a459-8830d551cac9",
 CellID->2064986220],
Cell[2555310, 56245, 10273, 262, 70, "DefinitionBox3Col",ExpressionUUID->"b34d9a5d-3771-4f8d-a189-11e17e43a0b9",
 CellID->740180373],
Cell[2565586, 56509, 248, 10, 70, "Caption",ExpressionUUID->"8cf28b1b-d90e-4c23-a915-302761ada800",
 CellID->1986245587],
Cell[2565837, 56521, 1943, 59, 70, "Text",ExpressionUUID->"89dacbf7-d692-4202-98ca-462e7fd17719",
 CellID->296707676],
Cell[2567783, 56582, 5849, 143, 70, "Text",ExpressionUUID->"09f0e91c-5962-4456-a662-5e4fc8558490",
 CellID->308882198],
Cell[2573635, 56727, 968, 26, 70, "Text",ExpressionUUID->"1db5e1ab-aee0-4b89-8f38-0c851c00a22c",
 CellID->915126987],
Cell[2574606, 56755, 417, 13, 70, "Text",ExpressionUUID->"c85f2a70-edbe-4432-a215-43a221a877e1",
 CellID->875538647],
Cell[2575026, 56770, 744, 23, 70, "DefinitionBox",ExpressionUUID->"adc82a51-01fc-446b-b989-c6329a2da10c",
 CellID->1158915490],
Cell[2575773, 56795, 80, 1, 70, "Caption",ExpressionUUID->"65f235f0-b921-4797-9334-d58cb57b3572",
 CellID->215962140],
Cell[2575856, 56798, 353, 6, 70, "MathCaption",ExpressionUUID->"e0ed8aea-a780-4e39-8779-d89ed3a1b809",
 CellID->54495101],
Cell[2576212, 56806, 454, 11, 70, "Input",ExpressionUUID->"f728755a-637a-4e91-be50-78db840e391b",
 CellID->1071128885],
Cell[2576669, 56819, 88, 1, 70, "MathCaption",ExpressionUUID->"c1913140-973b-41b4-ba9e-608e70721fa3",
 CellID->618975626],
Cell[CellGroupData[{
Cell[2576782, 56824, 114, 3, 70, "Input",ExpressionUUID->"645ebf74-a7aa-4833-a85e-0a676ad4f3bf",
 CellID->712560114],
Cell[2576899, 56829, 290, 6, 70, "Output",ExpressionUUID->"9071c993-6588-4ae2-aa58-1c3e050c5a56",
 CellID->1709177902]
}, Open  ]],
Cell[2577204, 56838, 116, 3, 70, "MathCaption",ExpressionUUID->"8f820f76-5c79-44c6-9aff-ba3d0d76f211",
 CellID->2051853087],
Cell[CellGroupData[{
Cell[2577345, 56845, 221, 6, 70, "Input",ExpressionUUID->"84eea496-4070-4469-8575-e2d798c36d49",
 CellID->1202429683],
Cell[2577569, 56853, 43355, 1121, 70, "Output",ExpressionUUID->"9abf6eed-3b5e-4f66-9f94-20ba800627ad",
 CellID->1411736642]
}, Open  ]],
Cell[2620939, 57977, 440, 12, 70, "MathCaption",ExpressionUUID->"71f53824-9970-463b-80e6-71ea8d0717aa",
 CellID->430804357],
Cell[CellGroupData[{
Cell[2621404, 57993, 227, 7, 70, "Input",ExpressionUUID->"b08d3c2e-6fcc-412d-9084-ec19d113c33f",
 CellID->1361454062],
Cell[2621634, 58002, 2471, 60, 70, "Output",ExpressionUUID->"744db52f-6f1b-4a47-aaca-ed708c196c18",
 CellID->500244026]
}, Open  ]],
Cell[2624120, 58065, 459, 12, 70, "MathCaption",ExpressionUUID->"04632c15-00bb-4d58-a13f-c311fa361953",
 CellID->170022261],
Cell[CellGroupData[{
Cell[2624604, 58081, 213, 6, 70, "Input",ExpressionUUID->"315163c0-2b33-4139-ac56-a2f7f7fdeb8c",
 CellID->1410890117],
Cell[2624820, 58089, 2572, 74, 70, "Output",ExpressionUUID->"8372bf93-fdd8-4e0f-b5ac-27601ed4a90b",
 CellID->948909842]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2627441, 58169, 58, 1, 70, "Subsection",ExpressionUUID->"b409eaa1-ef42-4f96-bffe-27f2c1533c5b",
 CellID->113475317],
Cell[CellGroupData[{
Cell[2627524, 58174, 138, 4, 70, "Subsubsection",ExpressionUUID->"0bce2cc6-be05-45d7-baea-20231f432725",
 CellID->794541302],
Cell[2627665, 58180, 784, 21, 70, "Text",ExpressionUUID->"f24e6faa-74fc-47ec-a651-565d7e1ebe61",
 CellID->1511547068],
Cell[2628452, 58203, 523, 13, 70, "DefinitionBox",ExpressionUUID->"14be240f-ad78-4b92-abdf-c045500a99c0",
 CellID->1987511513],
Cell[2628978, 58218, 187, 4, 70, "Caption",ExpressionUUID->"92161f66-f554-4dcf-832b-f5a7b8565e61",
 CellID->2145353553],
Cell[2629168, 58224, 13202, 323, 70, "DefinitionBox3Col",ExpressionUUID->"668b00d5-cdf4-4442-8446-3772cfd8ba6b",
 CellID->706732141],
Cell[2642373, 58549, 251, 10, 70, "Caption",ExpressionUUID->"6888e054-0d56-4b10-b69c-68fb807b1c43",
 CellID->315042230],
Cell[2642627, 58561, 153, 5, 70, "Text",ExpressionUUID->"b4c4f7b4-9a31-4013-84cf-c1626441082e",
 CellID->1844849291],
Cell[2642783, 58568, 281, 9, 70, "Text",ExpressionUUID->"0dd5b646-13e2-4817-8b29-9776b54814c7",
 CellID->420108894],
Cell[2643067, 58579, 433, 11, 70, "Text",ExpressionUUID->"668d5577-7e4b-4ff2-8b53-a4058309a978",
 CellID->1991433769],
Cell[2643503, 58592, 820, 23, 70, "Text",ExpressionUUID->"ccb4b1f8-05d2-4701-9a11-b7028aca8bf1",
 CellID->446395410],
Cell[2644326, 58617, 524, 12, 70, "Text",ExpressionUUID->"5fa8fb7c-a101-41be-8d53-ad27d9950857",
 CellID->1407276899],
Cell[2644853, 58631, 110, 3, 70, "Text",ExpressionUUID->"67fc446a-96fe-4ab0-834f-d95e3907fa06",
 CellID->1865437082],
Cell[2644966, 58636, 5359, 131, 70, "Text",ExpressionUUID->"efeff896-ae1e-48de-9b54-c13dc295974a",
 CellID->1474295269],
Cell[2650328, 58769, 169, 5, 70, "Text",ExpressionUUID->"f02e6570-c6af-47ba-adb4-39ea7d4ac6ad",
 CellID->814266997],
Cell[2650500, 58776, 1161, 37, 70, "Text",ExpressionUUID->"b7c1a976-619d-4a2b-9fff-ac3bb25f6a92",
 CellID->1619619895],
Cell[2651664, 58815, 175, 5, 70, "Text",ExpressionUUID->"9ca43f79-b34d-4f11-be9a-6343494a9475",
 CellID->1596349540],
Cell[2651842, 58822, 504, 14, 70, "Text",ExpressionUUID->"bc367b86-4786-4eba-a699-0955b48a1583",
 CellID->1333516809],
Cell[2652349, 58838, 973, 26, 70, "Text",ExpressionUUID->"71701a9d-3da5-4ecc-9733-d4f1431a5aba",
 CellID->1277668771],
Cell[2653325, 58866, 606, 12, 70, "Text",ExpressionUUID->"1535311a-742a-4846-8c94-94bd574683d8",
 CellID->1090047844],
Cell[2653934, 58880, 536, 9, 70, "Text",ExpressionUUID->"d5fcf4cc-69c0-40eb-88d2-c81635321201",
 CellID->251121551],
Cell[2654473, 58891, 359, 6, 70, "MathCaption",ExpressionUUID->"744e0162-c76b-4af6-abe0-dd4e93d4f82a",
 CellID->1339044942],
Cell[2654835, 58899, 452, 11, 70, "Input",ExpressionUUID->"b248be67-d691-45b7-adfa-db0d5149fdb5",
 CellID->1847203281],
Cell[2655290, 58912, 121, 3, 70, "MathCaption",ExpressionUUID->"b4ab323a-5ca9-4484-90b7-137c9a4da3d0",
 CellID->1921942735],
Cell[CellGroupData[{
Cell[2655436, 58919, 117, 3, 70, "Input",ExpressionUUID->"83c6c03b-71c2-423e-9e6c-dd0f3ae9ef1f",
 CellID->1790012618],
Cell[2655556, 58924, 148, 4, 70, "Output",ExpressionUUID->"57468aad-d853-4119-a28a-58da0ca634a4",
 CellID->921808109]
}, Open  ]],
Cell[2655719, 58931, 95, 1, 70, "MathCaption",ExpressionUUID->"0d40ca8c-fbc0-444a-b99d-7627a9e78373",
 CellID->1116859782],
Cell[CellGroupData[{
Cell[2655839, 58936, 133, 3, 70, "Input",ExpressionUUID->"c04130ff-53ec-4909-ad83-328f18ef6a37",
 CellID->1866845763],
Cell[2655975, 58941, 10576, 271, 70, "Output",ExpressionUUID->"2e81e907-ea71-44d4-84a8-bd13afa29444",
 CellID->881858505]
}, Open  ]],
Cell[CellGroupData[{
Cell[2666588, 59217, 135, 3, 70, "Input",ExpressionUUID->"99df42e8-5e63-44f8-954b-241cd599bcbe",
 CellID->1218496248],
Cell[2666726, 59222, 9304, 200, 70, "Output",ExpressionUUID->"57206d29-1330-4922-9bad-1d471f179e73",
 CellID->1408890497]
}, Open  ]],
Cell[2676045, 59425, 125, 3, 70, "MathCaption",ExpressionUUID->"c1e94b52-d1fe-4e9d-8dd9-062559e005a9",
 CellID->1431426074],
Cell[CellGroupData[{
Cell[2676195, 59432, 265, 7, 70, "Input",ExpressionUUID->"4782d31c-95cf-4c73-a6bd-cdc5c852626d",
 CellID->1866212024],
Cell[2676463, 59441, 32811, 698, 70, "Output",ExpressionUUID->"624e38c7-5ad6-46d9-a679-9e5fcdf0813e",
 CellID->1982568702]
}, Closed]],
Cell[2709289, 60142, 374, 12, 70, "Text",ExpressionUUID->"7af5d581-a913-4d7a-b540-b82e6cdf2d93",
 CellID->488726451],
Cell[2709666, 60156, 1318, 36, 70, "DefinitionBox",ExpressionUUID->"90b65c7c-6dcb-416e-9165-8f9d16a2b15f",
 CellID->2038566199],
Cell[2710987, 60194, 98, 1, 70, "Caption",ExpressionUUID->"26fbc117-cc89-4e8b-b6fd-3c2235d10522",
 CellID->1228002355],
Cell[2711088, 60197, 1178, 31, 70, "DefinitionBox3Col",ExpressionUUID->"78ab06ca-8193-475c-9e46-4693fec90548",
 CellID->1076877467],
Cell[2712269, 60230, 275, 11, 70, "Caption",ExpressionUUID->"ab5a55f6-3125-485f-a09c-133fde2177fa",
 CellID->87410953],
Cell[2712547, 60243, 315, 11, 70, "MathCaption",ExpressionUUID->"5aab476a-2fe7-41b9-a802-9dc8669ca8b9",
 CellID->1660367008],
Cell[2712865, 60256, 405, 12, 70, "Input",ExpressionUUID->"2bc15ff9-778e-4d0c-a9f1-e659407e9eb8",
 CellID->1385794338],
Cell[2713273, 60270, 335, 11, 70, "MathCaption",ExpressionUUID->"6be82977-cf0e-4903-b9e7-d0b5d33ff309",
 CellID->1754716454],
Cell[2713611, 60283, 352, 10, 70, "Input",ExpressionUUID->"c7c1b48d-9fcf-419c-9802-f154ef33a211",
 CellID->126518127]
}, Open  ]],
Cell[CellGroupData[{
Cell[2714000, 60298, 79, 1, 70, "Subsubsection",ExpressionUUID->"b0145fb1-7949-4fea-ae99-7b60ec92f771",
 CellID->36506248],
Cell[2714082, 60301, 321, 11, 70, "Text",ExpressionUUID->"51edc158-ce87-4829-8362-82a51821c6d9",
 CellID->1912770077],
Cell[2714406, 60314, 364, 11, 70, "DefinitionBox",ExpressionUUID->"824870f6-93d2-44a2-a543-61c31f1a1265",
 CellID->672020044],
Cell[2714773, 60327, 66, 1, 70, "Caption",ExpressionUUID->"ee6cbbd9-8b22-4f75-b20d-c8cfbd24f21f",
 CellID->1024379935],
Cell[2714842, 60330, 14082, 335, 70, "DefinitionBox3Col",ExpressionUUID->"d8bc2146-f063-40aa-87de-7590be6c9314",
 CellID->812822320],
Cell[2728927, 60667, 266, 11, 70, "Caption",ExpressionUUID->"12d71751-83a4-4885-9c54-31d2c5e7c9d7",
 CellID->961253673],
Cell[2729196, 60680, 925, 22, 70, "DefinitionBox",ExpressionUUID->"4ec0fcac-43db-4daa-b8dc-67a8430a61ea",
 CellID->746904677],
Cell[2730124, 60704, 318, 11, 70, "Caption",ExpressionUUID->"81729a33-7af5-4c65-8c0f-3c8c685f1eac",
 CellID->1184989624],
Cell[2730445, 60717, 100, 1, 70, "MathCaption",ExpressionUUID->"8d9b08b2-bd86-4d43-b3a6-fcb1d2ca69af",
 CellID->1676459694],
Cell[CellGroupData[{
Cell[2730570, 60722, 180, 5, 70, "Input",ExpressionUUID->"f97231a6-de83-42d0-92c0-79374e5e6e48",
 CellID->1272628418],
Cell[2730753, 60729, 358, 9, 70, "Output",ExpressionUUID->"5d27de3a-c138-4e2c-a6e1-9b20446e3737",
 CellID->545314925]
}, Open  ]],
Cell[2731126, 60741, 74, 1, 70, "MathCaption",ExpressionUUID->"1ba8c112-83c0-4542-bb6e-850d0cba60ff",
 CellID->1218512518],
Cell[2731203, 60744, 223, 6, 70, "Input",ExpressionUUID->"0fe0ccd0-fbf0-4b80-aaa2-09875b8da5c3",
 CellID->1135832234],
Cell[2731429, 60752, 77, 1, 70, "MathCaption",ExpressionUUID->"5ea544bc-cdca-464b-8ccf-ad6da473bde0",
 CellID->64193474],
Cell[CellGroupData[{
Cell[2731531, 60757, 272, 7, 70, "Input",ExpressionUUID->"2b2a91d7-eee6-47b7-996f-e41045538ea5",
 CellID->862926724],
Cell[2731806, 60766, 39988, 663, 70, "Output",ExpressionUUID->"c11501d5-d0dc-494a-83ea-b7e1b59df5b3",
 CellID->810394010]
}, Open  ]],
Cell[2771809, 61432, 59, 1, 70, "MathCaption",ExpressionUUID->"bac5e0bf-8cc0-4edc-bae5-3bd66acff74d",
 CellID->1377198042],
Cell[CellGroupData[{
Cell[2771893, 61437, 298, 9, 70, "Input",ExpressionUUID->"077fdacb-0982-475e-a225-0cc28d220766",
 CellID->988744528],
Cell[2772194, 61448, 39337, 649, 70, "Output",ExpressionUUID->"b44bc727-5869-49db-a526-ec86fc88f822",
 CellID->2006014202]
}, Open  ]],
Cell[2811546, 62100, 75, 1, 70, "MathCaption",ExpressionUUID->"8e7f05b5-07f8-4a76-b6b4-76b2a1a37a66",
 CellID->632012813],
Cell[CellGroupData[{
Cell[2811646, 62105, 615, 15, 70, "Input",ExpressionUUID->"63b8df40-35bb-4492-8702-838ccd87d6bd",
 CellID->785230029],
Cell[2812264, 62122, 37475, 622, 70, "Output",ExpressionUUID->"2f981d9f-caae-4514-9c8d-e56d70f1186a",
 CellID->475821867]
}, Open  ]],
Cell[2849754, 62747, 58, 1, 70, "MathCaption",ExpressionUUID->"6dca5c82-e82b-43fc-97e3-857df8cda655",
 CellID->983872788],
Cell[CellGroupData[{
Cell[2849837, 62752, 307, 9, 70, "Input",ExpressionUUID->"44220eda-bc6e-49ee-9886-432735bc24cc",
 CellID->325866016],
Cell[2850147, 62763, 36759, 607, 70, "Output",ExpressionUUID->"adcc910e-1b6e-47c9-a351-f50cc47e05fa",
 CellID->2019329860]
}, Open  ]],
Cell[2886921, 63373, 95, 1, 70, "Text",ExpressionUUID->"939e3721-b966-4c9c-8c22-735658d13b93",
 CellID->973016157],
Cell[2887019, 63376, 115, 3, 70, "MathCaption",ExpressionUUID->"3648e31e-bb3b-48f7-8d9a-58bf7a9d7fd6",
 CellID->499168171],
Cell[CellGroupData[{
Cell[2887159, 63383, 463, 14, 70, "Input",ExpressionUUID->"b25ddcc8-cb99-47fb-aed3-b7beb0b9e628",
 CellID->1448324815],
Cell[2887625, 63399, 2698, 68, 70, "Output",ExpressionUUID->"ccea8bb0-fc1c-4253-aeb3-f5f79bf6878e",
 CellID->863400676]
}, Open  ]],
Cell[2890338, 63470, 115, 3, 70, "MathCaption",ExpressionUUID->"b012f734-2960-457c-b960-7f1bd2dadb6c",
 CellID->401232237],
Cell[CellGroupData[{
Cell[2890478, 63477, 915, 27, 70, "Input",ExpressionUUID->"e0ffbf3e-2c3a-4d21-ade5-00b6a528e272",
 CellID->411555679],
Cell[2891396, 63506, 26581, 578, 70, "Output",ExpressionUUID->"6559191f-e3c9-4926-9dc5-425f5b287f77",
 CellID->778663946]
}, Closed]],
Cell[2917992, 64087, 96, 1, 70, "MathCaption",ExpressionUUID->"f398d67b-4f92-4f87-90f2-76c1d7b1537c",
 CellID->1111199700],
Cell[CellGroupData[{
Cell[2918113, 64092, 422, 9, 70, "Input",ExpressionUUID->"f2a0a121-3165-4355-90fd-3b4d5075190b",
 CellID->1553382050],
Cell[2918538, 64103, 474103, 7779, 70, "Output",ExpressionUUID->"f88575c3-a7f4-4cef-854f-62e7be11f5a1",
 CellTags->"RasterizedOutput",
 CellID->2059266444]
}, Open  ]],
Cell[3392656, 71885, 119, 3, 70, "MathCaption",ExpressionUUID->"44c9ccf6-d67c-447c-b5db-ce5786d8e81c",
 CellID->1695062567],
Cell[CellGroupData[{
Cell[3392800, 71892, 262, 7, 70, "Input",ExpressionUUID->"c88fa0c0-da87-4697-9818-f75e0412c017",
 CellID->398502467],
Cell[3393065, 71901, 568163, 9405, 70, "Output",ExpressionUUID->"80c2b75d-8876-42f6-83f2-aaabb7fc2fba",
 CellID->1509656058]
}, Open  ]],
Cell[3961243, 81309, 119, 3, 70, "MathCaption",ExpressionUUID->"acb76e35-fd4d-4fe5-85cb-b10ddf9626b9",
 CellID->596901522],
Cell[3961365, 81314, 361, 8, 70, "Input",ExpressionUUID->"120df241-068a-41c9-ad37-480eb10cd46f",
 CellID->1227765117]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3961787, 81329, 167, 7, 70, "RelatedTutorialsSection",ExpressionUUID->"768cd945-1ee6-4f70-8b93-3267beb9664a",
 CellID->415694126],
Cell[3961957, 81338, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"36ad31d7-b5be-4ee5-837f-6f58574ad3a7"],
Cell[3961991, 81340, 200, 5, 70, "RelatedTutorials",ExpressionUUID->"48b0b334-69f2-44a9-80ed-ab2fed5d2dc8",
 CellID->795520170],
Cell[3962194, 81347, 174, 4, 70, "RelatedTutorials",ExpressionUUID->"24552767-e218-4bdc-a0d1-940d8b08f27f",
 CellID->1258435320],
Cell[3962371, 81353, 162, 3, 70, "RelatedTutorials",ExpressionUUID->"89a33240-309c-4d3e-86bb-22e00a11a674",
 CellID->1425023577]
}, Open  ]]
}, Open  ]],
Cell[3962560, 81360, 23, 0, 70, "FooterCell",ExpressionUUID->"2957f88e-02eb-48f6-a992-45e60db3d304"]
}
]
*)

(* End of internal cache information *)
